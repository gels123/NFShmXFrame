// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerCommon.proto

#include "ServerCommon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ServerCommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PacketMsg;
}  // namespace protobuf_ServerCommon_2eproto
namespace NFServer {
class PacketMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PacketMsg>
      _instance;
} _PacketMsg_default_instance_;
class ServerPacketMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerPacketMsg>
      _instance;
} _ServerPacketMsg_default_instance_;
}  // namespace NFServer
namespace protobuf_ServerCommon_2eproto {
static void InitDefaultsPacketMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_PacketMsg_default_instance_;
    new (ptr) ::NFServer::PacketMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::PacketMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PacketMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPacketMsg}, {}};

static void InitDefaultsServerPacketMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_ServerPacketMsg_default_instance_;
    new (ptr) ::NFServer::ServerPacketMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::ServerPacketMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerPacketMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerPacketMsg}, {
      &protobuf_ServerCommon_2eproto::scc_info_PacketMsg.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PacketMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerPacketMsg.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::PacketMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::PacketMsg, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::PacketMsg, servertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::PacketMsg, upper_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::PacketMsg, min_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::PacketMsg, control_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::ServerPacketMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::ServerPacketMsg, packetmsg_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NFServer::PacketMsg)},
  { 10, -1, sizeof(::NFServer::ServerPacketMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_PacketMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_ServerPacketMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ServerCommon.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022ServerCommon.proto\022\010NFServer\032\014nanopb.p"
      "roto\"u\n\tPacketMsg\022\013\n\003cmd\030\001 \001(\r\022\022\n\nserver"
      "Type\030\002 \001(\r\022\023\n\013upper_limit\030\003 \001(\r\022\024\n\014min_i"
      "nterval\030\004 \001(\r\022\024\n\014control_time\030\005 \001(\r:\006\222\?\003"
      "\230\002\001\"F\n\017ServerPacketMsg\022+\n\016PacketMsg_list"
      "\030\001 \003(\0132\023.NFServer.PacketMsg:\006\222\?\003\230\002\001b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 243);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerCommon.proto", &protobuf_RegisterTypes);
  ::protobuf_nanopb_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ServerCommon_2eproto
namespace NFServer {

// ===================================================================

void PacketMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketMsg::kCmdFieldNumber;
const int PacketMsg::kServerTypeFieldNumber;
const int PacketMsg::kUpperLimitFieldNumber;
const int PacketMsg::kMinIntervalFieldNumber;
const int PacketMsg::kControlTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketMsg::PacketMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerCommon_2eproto::scc_info_PacketMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.PacketMsg)
}
PacketMsg::PacketMsg(const PacketMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&control_time_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(control_time_));
  // @@protoc_insertion_point(copy_constructor:NFServer.PacketMsg)
}

void PacketMsg::SharedCtor() {
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_time_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(control_time_));
}

PacketMsg::~PacketMsg() {
  // @@protoc_insertion_point(destructor:NFServer.PacketMsg)
  SharedDtor();
}

void PacketMsg::SharedDtor() {
}

void PacketMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PacketMsg::descriptor() {
  ::protobuf_ServerCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketMsg& PacketMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerCommon_2eproto::scc_info_PacketMsg.base);
  return *internal_default_instance();
}


void PacketMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.PacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_time_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(control_time_));
  _internal_metadata_.Clear();
}

bool PacketMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.PacketMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serverType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 upper_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &upper_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 min_interval = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &min_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 control_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &control_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.PacketMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.PacketMsg)
  return false;
#undef DO_
}

void PacketMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.PacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmd(), output);
  }

  // uint32 serverType = 2;
  if (this->servertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->servertype(), output);
  }

  // uint32 upper_limit = 3;
  if (this->upper_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->upper_limit(), output);
  }

  // uint32 min_interval = 4;
  if (this->min_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->min_interval(), output);
  }

  // uint32 control_time = 5;
  if (this->control_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->control_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.PacketMsg)
}

::google::protobuf::uint8* PacketMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.PacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmd(), target);
  }

  // uint32 serverType = 2;
  if (this->servertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->servertype(), target);
  }

  // uint32 upper_limit = 3;
  if (this->upper_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->upper_limit(), target);
  }

  // uint32 min_interval = 4;
  if (this->min_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->min_interval(), target);
  }

  // uint32 control_time = 5;
  if (this->control_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->control_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.PacketMsg)
  return target;
}

size_t PacketMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.PacketMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmd());
  }

  // uint32 serverType = 2;
  if (this->servertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->servertype());
  }

  // uint32 upper_limit = 3;
  if (this->upper_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->upper_limit());
  }

  // uint32 min_interval = 4;
  if (this->min_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->min_interval());
  }

  // uint32 control_time = 5;
  if (this->control_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->control_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PacketMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.PacketMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.PacketMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.PacketMsg)
    MergeFrom(*source);
  }
}

void PacketMsg::MergeFrom(const PacketMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.PacketMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.servertype() != 0) {
    set_servertype(from.servertype());
  }
  if (from.upper_limit() != 0) {
    set_upper_limit(from.upper_limit());
  }
  if (from.min_interval() != 0) {
    set_min_interval(from.min_interval());
  }
  if (from.control_time() != 0) {
    set_control_time(from.control_time());
  }
}

void PacketMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.PacketMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketMsg::CopyFrom(const PacketMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.PacketMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketMsg::IsInitialized() const {
  return true;
}

void PacketMsg::Swap(PacketMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketMsg::InternalSwap(PacketMsg* other) {
  using std::swap;
  swap(cmd_, other->cmd_);
  swap(servertype_, other->servertype_);
  swap(upper_limit_, other->upper_limit_);
  swap(min_interval_, other->min_interval_);
  swap(control_time_, other->control_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PacketMsg::GetMetadata() const {
  protobuf_ServerCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerPacketMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPacketMsg::kPacketMsgListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPacketMsg::ServerPacketMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerCommon_2eproto::scc_info_ServerPacketMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.ServerPacketMsg)
}
ServerPacketMsg::ServerPacketMsg(const ServerPacketMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      packetmsg_list_(from.packetmsg_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFServer.ServerPacketMsg)
}

void ServerPacketMsg::SharedCtor() {
}

ServerPacketMsg::~ServerPacketMsg() {
  // @@protoc_insertion_point(destructor:NFServer.ServerPacketMsg)
  SharedDtor();
}

void ServerPacketMsg::SharedDtor() {
}

void ServerPacketMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerPacketMsg::descriptor() {
  ::protobuf_ServerCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPacketMsg& ServerPacketMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerCommon_2eproto::scc_info_ServerPacketMsg.base);
  return *internal_default_instance();
}


void ServerPacketMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.ServerPacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packetmsg_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerPacketMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.ServerPacketMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFServer.PacketMsg PacketMsg_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_packetmsg_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.ServerPacketMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.ServerPacketMsg)
  return false;
#undef DO_
}

void ServerPacketMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.ServerPacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFServer.PacketMsg PacketMsg_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packetmsg_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->packetmsg_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.ServerPacketMsg)
}

::google::protobuf::uint8* ServerPacketMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.ServerPacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFServer.PacketMsg PacketMsg_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packetmsg_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->packetmsg_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.ServerPacketMsg)
  return target;
}

size_t ServerPacketMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.ServerPacketMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFServer.PacketMsg PacketMsg_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->packetmsg_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->packetmsg_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerPacketMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.ServerPacketMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPacketMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPacketMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.ServerPacketMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.ServerPacketMsg)
    MergeFrom(*source);
  }
}

void ServerPacketMsg::MergeFrom(const ServerPacketMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.ServerPacketMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packetmsg_list_.MergeFrom(from.packetmsg_list_);
}

void ServerPacketMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.ServerPacketMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPacketMsg::CopyFrom(const ServerPacketMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.ServerPacketMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPacketMsg::IsInitialized() const {
  return true;
}

void ServerPacketMsg::Swap(ServerPacketMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPacketMsg::InternalSwap(ServerPacketMsg* other) {
  using std::swap;
  CastToBase(&packetmsg_list_)->InternalSwap(CastToBase(&other->packetmsg_list_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerPacketMsg::GetMetadata() const {
  protobuf_ServerCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFServer
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::PacketMsg* Arena::CreateMaybeMessage< ::NFServer::PacketMsg >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::PacketMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::ServerPacketMsg* Arena::CreateMaybeMessage< ::NFServer::ServerPacketMsg >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::ServerPacketMsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
