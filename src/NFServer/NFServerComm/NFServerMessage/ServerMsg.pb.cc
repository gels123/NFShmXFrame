// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMsg.proto

#include "ServerMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace NFServer {
class CommonMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonMsgRsp>
      _instance;
} _CommonMsgRsp_default_instance_;
class Proto_MasterTMonitorReloadReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_MasterTMonitorReloadReq>
      _instance;
} _Proto_MasterTMonitorReloadReq_default_instance_;
class Proto_MasterTMonitorRestartReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_MasterTMonitorRestartReq>
      _instance;
} _Proto_MasterTMonitorRestartReq_default_instance_;
class Proto_MasterTMonitorStartReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_MasterTMonitorStartReq>
      _instance;
} _Proto_MasterTMonitorStartReq_default_instance_;
class Proto_MasterTMonitorStopReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_MasterTMonitorStopReq>
      _instance;
} _Proto_MasterTMonitorStopReq_default_instance_;
class Proto_MonitorTMasterReloadRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_MonitorTMasterReloadRsp>
      _instance;
} _Proto_MonitorTMasterReloadRsp_default_instance_;
class Proto_MonitorTMasterRestartRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_MonitorTMasterRestartRsp>
      _instance;
} _Proto_MonitorTMasterRestartRsp_default_instance_;
class Proto_MonitorTMasterStartRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_MonitorTMasterStartRsp>
      _instance;
} _Proto_MonitorTMasterStartRsp_default_instance_;
class Proto_MonitorTMasterStopRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_MonitorTMasterStopRsp>
      _instance;
} _Proto_MonitorTMasterStopRsp_default_instance_;
class Proto_STStoreCheckReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_STStoreCheckReq>
      _instance;
} _Proto_STStoreCheckReq_default_instance_;
class Proto_StoreTSCheckRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_StoreTSCheckRsp>
      _instance;
} _Proto_StoreTSCheckRsp_default_instance_;
class Proto_TestSendProxyMsgToOtherServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_TestSendProxyMsgToOtherServer>
      _instance;
} _Proto_TestSendProxyMsgToOtherServer_default_instance_;
class Proto_TestOtherServerSendMsgToProxyServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_TestOtherServerSendMsgToProxyServer>
      _instance;
} _Proto_TestOtherServerSendMsgToProxyServer_default_instance_;
class Proto_TestSendWorldMsgToOtherServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_TestSendWorldMsgToOtherServer>
      _instance;
} _Proto_TestSendWorldMsgToOtherServer_default_instance_;
class Proto_TestOtherServerToWorldServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_TestOtherServerToWorldServer>
      _instance;
} _Proto_TestOtherServerToWorldServer_default_instance_;
class RpcRequestGetServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RpcRequestGetServerInfo>
      _instance;
} _RpcRequestGetServerInfo_default_instance_;
class RpcWatchServerReqeustDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RpcWatchServerReqeust>
      _instance;
} _RpcWatchServerReqeust_default_instance_;
class RpcWatchServerResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RpcWatchServerRespone>
      _instance;
} _RpcWatchServerRespone_default_instance_;
}  // namespace NFServer
namespace protobuf_ServerMsg_2eproto {
static void InitDefaultsCommonMsgRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_CommonMsgRsp_default_instance_;
    new (ptr) ::NFServer::CommonMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::CommonMsgRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommonMsgRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommonMsgRsp}, {}};

static void InitDefaultsProto_MasterTMonitorReloadReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_MasterTMonitorReloadReq_default_instance_;
    new (ptr) ::NFServer::Proto_MasterTMonitorReloadReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_MasterTMonitorReloadReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_MasterTMonitorReloadReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_MasterTMonitorReloadReq}, {}};

static void InitDefaultsProto_MasterTMonitorRestartReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_MasterTMonitorRestartReq_default_instance_;
    new (ptr) ::NFServer::Proto_MasterTMonitorRestartReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_MasterTMonitorRestartReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_MasterTMonitorRestartReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_MasterTMonitorRestartReq}, {}};

static void InitDefaultsProto_MasterTMonitorStartReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_MasterTMonitorStartReq_default_instance_;
    new (ptr) ::NFServer::Proto_MasterTMonitorStartReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_MasterTMonitorStartReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_MasterTMonitorStartReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_MasterTMonitorStartReq}, {}};

static void InitDefaultsProto_MasterTMonitorStopReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_MasterTMonitorStopReq_default_instance_;
    new (ptr) ::NFServer::Proto_MasterTMonitorStopReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_MasterTMonitorStopReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_MasterTMonitorStopReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_MasterTMonitorStopReq}, {}};

static void InitDefaultsProto_MonitorTMasterReloadRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_MonitorTMasterReloadRsp_default_instance_;
    new (ptr) ::NFServer::Proto_MonitorTMasterReloadRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_MonitorTMasterReloadRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_MonitorTMasterReloadRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_MonitorTMasterReloadRsp}, {}};

static void InitDefaultsProto_MonitorTMasterRestartRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_MonitorTMasterRestartRsp_default_instance_;
    new (ptr) ::NFServer::Proto_MonitorTMasterRestartRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_MonitorTMasterRestartRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_MonitorTMasterRestartRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_MonitorTMasterRestartRsp}, {}};

static void InitDefaultsProto_MonitorTMasterStartRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_MonitorTMasterStartRsp_default_instance_;
    new (ptr) ::NFServer::Proto_MonitorTMasterStartRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_MonitorTMasterStartRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_MonitorTMasterStartRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_MonitorTMasterStartRsp}, {}};

static void InitDefaultsProto_MonitorTMasterStopRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_MonitorTMasterStopRsp_default_instance_;
    new (ptr) ::NFServer::Proto_MonitorTMasterStopRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_MonitorTMasterStopRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_MonitorTMasterStopRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_MonitorTMasterStopRsp}, {}};

static void InitDefaultsProto_STStoreCheckReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_STStoreCheckReq_default_instance_;
    new (ptr) ::NFServer::Proto_STStoreCheckReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_STStoreCheckReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_STStoreCheckReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_STStoreCheckReq}, {}};

static void InitDefaultsProto_StoreTSCheckRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_StoreTSCheckRsp_default_instance_;
    new (ptr) ::NFServer::Proto_StoreTSCheckRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_StoreTSCheckRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_StoreTSCheckRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_StoreTSCheckRsp}, {}};

static void InitDefaultsProto_TestSendProxyMsgToOtherServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_TestSendProxyMsgToOtherServer_default_instance_;
    new (ptr) ::NFServer::Proto_TestSendProxyMsgToOtherServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_TestSendProxyMsgToOtherServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_TestSendProxyMsgToOtherServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_TestSendProxyMsgToOtherServer}, {}};

static void InitDefaultsProto_TestOtherServerSendMsgToProxyServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_TestOtherServerSendMsgToProxyServer_default_instance_;
    new (ptr) ::NFServer::Proto_TestOtherServerSendMsgToProxyServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_TestOtherServerSendMsgToProxyServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_TestOtherServerSendMsgToProxyServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_TestOtherServerSendMsgToProxyServer}, {}};

static void InitDefaultsProto_TestSendWorldMsgToOtherServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_TestSendWorldMsgToOtherServer_default_instance_;
    new (ptr) ::NFServer::Proto_TestSendWorldMsgToOtherServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_TestSendWorldMsgToOtherServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_TestSendWorldMsgToOtherServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_TestSendWorldMsgToOtherServer}, {}};

static void InitDefaultsProto_TestOtherServerToWorldServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_Proto_TestOtherServerToWorldServer_default_instance_;
    new (ptr) ::NFServer::Proto_TestOtherServerToWorldServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::Proto_TestOtherServerToWorldServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_TestOtherServerToWorldServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_TestOtherServerToWorldServer}, {}};

static void InitDefaultsRpcRequestGetServerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_RpcRequestGetServerInfo_default_instance_;
    new (ptr) ::NFServer::RpcRequestGetServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::RpcRequestGetServerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RpcRequestGetServerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRpcRequestGetServerInfo}, {}};

static void InitDefaultsRpcWatchServerReqeust() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_RpcWatchServerReqeust_default_instance_;
    new (ptr) ::NFServer::RpcWatchServerReqeust();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::RpcWatchServerReqeust::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RpcWatchServerReqeust =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRpcWatchServerReqeust}, {}};

static void InitDefaultsRpcWatchServerRespone() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFServer::_RpcWatchServerRespone_default_instance_;
    new (ptr) ::NFServer::RpcWatchServerRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFServer::RpcWatchServerRespone::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RpcWatchServerRespone =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRpcWatchServerRespone}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CommonMsgRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_MasterTMonitorReloadReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_MasterTMonitorRestartReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_MasterTMonitorStartReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_MasterTMonitorStopReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_MonitorTMasterReloadRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_MonitorTMasterRestartRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_MonitorTMasterStartRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_MonitorTMasterStopRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_STStoreCheckReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_StoreTSCheckRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_TestSendProxyMsgToOtherServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_TestOtherServerSendMsgToProxyServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_TestSendWorldMsgToOtherServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_TestOtherServerToWorldServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RpcRequestGetServerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RpcWatchServerReqeust.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RpcWatchServerRespone.base);
}

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::CommonMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::CommonMsgRsp, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorReloadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorReloadReq, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorReloadReq, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorRestartReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorRestartReq, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorRestartReq, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorStartReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorStartReq, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorStartReq, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorStopReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorStopReq, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MasterTMonitorStopReq, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterReloadRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterReloadRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterReloadRsp, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterReloadRsp, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterRestartRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterRestartRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterRestartRsp, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterRestartRsp, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterStartRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterStartRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterStartRsp, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterStartRsp, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterStopRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterStopRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterStopRsp, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_MonitorTMasterStopRsp, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_STStoreCheckReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_StoreTSCheckRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestSendProxyMsgToOtherServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestSendProxyMsgToOtherServer, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestSendProxyMsgToOtherServer, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestSendProxyMsgToOtherServer, seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestOtherServerSendMsgToProxyServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestOtherServerSendMsgToProxyServer, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestOtherServerSendMsgToProxyServer, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestOtherServerSendMsgToProxyServer, seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestSendWorldMsgToOtherServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestSendWorldMsgToOtherServer, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestSendWorldMsgToOtherServer, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestSendWorldMsgToOtherServer, seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestOtherServerToWorldServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestOtherServerToWorldServer, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestOtherServerToWorldServer, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::Proto_TestOtherServerToWorldServer, seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::RpcRequestGetServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::RpcRequestGetServerInfo, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::RpcWatchServerReqeust, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::RpcWatchServerReqeust, src_server_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::RpcWatchServerReqeust, src_bus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::RpcWatchServerReqeust, dst_server_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::RpcWatchServerReqeust, dst_bus_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::RpcWatchServerRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFServer::RpcWatchServerRespone, ret_code_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NFServer::CommonMsgRsp)},
  { 6, -1, sizeof(::NFServer::Proto_MasterTMonitorReloadReq)},
  { 13, -1, sizeof(::NFServer::Proto_MasterTMonitorRestartReq)},
  { 20, -1, sizeof(::NFServer::Proto_MasterTMonitorStartReq)},
  { 27, -1, sizeof(::NFServer::Proto_MasterTMonitorStopReq)},
  { 34, -1, sizeof(::NFServer::Proto_MonitorTMasterReloadRsp)},
  { 42, -1, sizeof(::NFServer::Proto_MonitorTMasterRestartRsp)},
  { 50, -1, sizeof(::NFServer::Proto_MonitorTMasterStartRsp)},
  { 58, -1, sizeof(::NFServer::Proto_MonitorTMasterStopRsp)},
  { 66, -1, sizeof(::NFServer::Proto_STStoreCheckReq)},
  { 71, -1, sizeof(::NFServer::Proto_StoreTSCheckRsp)},
  { 76, -1, sizeof(::NFServer::Proto_TestSendProxyMsgToOtherServer)},
  { 84, -1, sizeof(::NFServer::Proto_TestOtherServerSendMsgToProxyServer)},
  { 92, -1, sizeof(::NFServer::Proto_TestSendWorldMsgToOtherServer)},
  { 100, -1, sizeof(::NFServer::Proto_TestOtherServerToWorldServer)},
  { 108, -1, sizeof(::NFServer::RpcRequestGetServerInfo)},
  { 114, -1, sizeof(::NFServer::RpcWatchServerReqeust)},
  { 123, -1, sizeof(::NFServer::RpcWatchServerRespone)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_CommonMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_MasterTMonitorReloadReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_MasterTMonitorRestartReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_MasterTMonitorStartReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_MasterTMonitorStopReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_MonitorTMasterReloadRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_MonitorTMasterRestartRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_MonitorTMasterStartRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_MonitorTMasterStopRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_STStoreCheckReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_StoreTSCheckRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_TestSendProxyMsgToOtherServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_TestOtherServerSendMsgToProxyServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_TestSendWorldMsgToOtherServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_Proto_TestOtherServerToWorldServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_RpcRequestGetServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_RpcWatchServerReqeust_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFServer::_RpcWatchServerRespone_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ServerMsg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017ServerMsg.proto\022\010NFServer\032\014nanopb.prot"
      "o\"&\n\014CommonMsgRsp\022\016\n\006result\030\001 \001(\005:\006\222\?\003\230\002"
      "\001\"O\n\035Proto_MasterTMonitorReloadReq\022\023\n\013se"
      "rver_name\030\001 \001(\t\022\021\n\tserver_id\030\002 \001(\t:\006\222\?\003\230"
      "\002\001\"P\n\036Proto_MasterTMonitorRestartReq\022\023\n\013"
      "server_name\030\001 \001(\t\022\021\n\tserver_id\030\002 \001(\t:\006\222\?"
      "\003\230\002\001\"N\n\034Proto_MasterTMonitorStartReq\022\023\n\013"
      "server_name\030\001 \001(\t\022\021\n\tserver_id\030\002 \001(\t:\006\222\?"
      "\003\230\002\001\"M\n\033Proto_MasterTMonitorStopReq\022\023\n\013s"
      "erver_name\030\001 \001(\t\022\021\n\tserver_id\030\002 \001(\t:\006\222\?\003"
      "\230\002\001\"_\n\035Proto_MonitorTMasterReloadRsp\022\016\n\006"
      "result\030\001 \001(\005\022\023\n\013server_name\030\002 \001(\t\022\021\n\tser"
      "ver_id\030\003 \001(\t:\006\222\?\003\230\002\001\"`\n\036Proto_MonitorTMa"
      "sterRestartRsp\022\016\n\006result\030\001 \001(\005\022\023\n\013server"
      "_name\030\002 \001(\t\022\021\n\tserver_id\030\003 \001(\t:\006\222\?\003\230\002\001\"^"
      "\n\034Proto_MonitorTMasterStartRsp\022\016\n\006result"
      "\030\001 \001(\005\022\023\n\013server_name\030\002 \001(\t\022\021\n\tserver_id"
      "\030\003 \001(\t:\006\222\?\003\230\002\001\"]\n\033Proto_MonitorTMasterSt"
      "opRsp\022\016\n\006result\030\001 \001(\005\022\023\n\013server_name\030\002 \001"
      "(\t\022\021\n\tserver_id\030\003 \001(\t:\006\222\?\003\230\002\001\"\037\n\025Proto_S"
      "TStoreCheckReq:\006\222\?\003\230\002\001\"\037\n\025Proto_StoreTSC"
      "heckRsp:\006\222\?\003\230\002\001\"b\n#Proto_TestSendProxyMs"
      "gToOtherServer\022\021\n\tserver_id\030\001 \001(\t\022\023\n\013ser"
      "ver_name\030\002 \001(\t\022\013\n\003seq\030\003 \001(\005:\006\222\?\003\230\002\001\"h\n)P"
      "roto_TestOtherServerSendMsgToProxyServer"
      "\022\021\n\tserver_id\030\001 \001(\t\022\023\n\013server_name\030\002 \001(\t"
      "\022\013\n\003seq\030\003 \001(\005:\006\222\?\003\230\002\001\"b\n#Proto_TestSendW"
      "orldMsgToOtherServer\022\021\n\tserver_id\030\001 \001(\t\022"
      "\023\n\013server_name\030\002 \001(\t\022\013\n\003seq\030\003 \001(\005:\006\222\?\003\230\002"
      "\001\"a\n\"Proto_TestOtherServerToWorldServer\022"
      "\021\n\tserver_id\030\001 \001(\t\022\023\n\013server_name\030\002 \001(\t\022"
      "\013\n\003seq\030\003 \001(\005:\006\222\?\003\230\002\001\"4\n\027RpcRequestGetSer"
      "verInfo\022\021\n\tserver_id\030\001 \001(\t:\006\222\?\003\230\002\001\"y\n\025Rp"
      "cWatchServerReqeust\022\027\n\017src_server_type\030\001"
      " \001(\005\022\022\n\nsrc_bus_id\030\002 \001(\005\022\027\n\017dst_server_t"
      "ype\030\003 \001(\005\022\022\n\ndst_bus_id\030\004 \001(\005:\006\222\?\003\230\002\001\"1\n"
      "\025RpcWatchServerRespone\022\020\n\010ret_code\030\001 \001(\005"
      ":\006\222\?\003\230\002\001*\345\002\n\016Proto_SvrMsgID\022\026\n\022NF_SERVER"
      "_MSG_ZERO\020\000\022%\n!NF_STSTORE_CHECK_STORE_SE"
      "RVER_REQ\020(\022%\n!NF_STORETS_CHECK_STORE_SER"
      "VER_RSP\020)\022.\n*NF_TEST_SEND_PROXY_MSG_TO_O"
      "THER_SERVER_REQ\020*\0221\n-NF_TEST_OTHER_SERVE"
      "R_SEND_MSG_TO_PROXY_SERVER\020+\0220\n,NF_TEST_"
      "OTHER_SERVER_MSG_TO_WORLD_SERVER_REQ\020,\0220"
      "\n,NF_TEST_WORLD_SERVER_MSG_TO_OTHER_SERV"
      "ER_REQ\020-\022&\n\"NF_RPC_SERVICE_GET_SERVER_IN"
      "FO_REQ\020.b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1856);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerMsg.proto", &protobuf_RegisterTypes);
  ::protobuf_nanopb_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ServerMsg_2eproto
namespace NFServer {
const ::google::protobuf::EnumDescriptor* Proto_SvrMsgID_descriptor() {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerMsg_2eproto::file_level_enum_descriptors[0];
}
bool Proto_SvrMsgID_IsValid(int value) {
  switch (value) {
    case 0:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CommonMsgRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonMsgRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonMsgRsp::CommonMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_CommonMsgRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.CommonMsgRsp)
}
CommonMsgRsp::CommonMsgRsp(const CommonMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFServer.CommonMsgRsp)
}

void CommonMsgRsp::SharedCtor() {
  result_ = 0;
}

CommonMsgRsp::~CommonMsgRsp() {
  // @@protoc_insertion_point(destructor:NFServer.CommonMsgRsp)
  SharedDtor();
}

void CommonMsgRsp::SharedDtor() {
}

void CommonMsgRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommonMsgRsp::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommonMsgRsp& CommonMsgRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_CommonMsgRsp.base);
  return *internal_default_instance();
}


void CommonMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.CommonMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool CommonMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.CommonMsgRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.CommonMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.CommonMsgRsp)
  return false;
#undef DO_
}

void CommonMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.CommonMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.CommonMsgRsp)
}

::google::protobuf::uint8* CommonMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.CommonMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.CommonMsgRsp)
  return target;
}

size_t CommonMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.CommonMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.CommonMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.CommonMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.CommonMsgRsp)
    MergeFrom(*source);
  }
}

void CommonMsgRsp::MergeFrom(const CommonMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.CommonMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CommonMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.CommonMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonMsgRsp::CopyFrom(const CommonMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.CommonMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonMsgRsp::IsInitialized() const {
  return true;
}

void CommonMsgRsp::Swap(CommonMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonMsgRsp::InternalSwap(CommonMsgRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommonMsgRsp::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_MasterTMonitorReloadReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_MasterTMonitorReloadReq::kServerNameFieldNumber;
const int Proto_MasterTMonitorReloadReq::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_MasterTMonitorReloadReq::Proto_MasterTMonitorReloadReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_MasterTMonitorReloadReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_MasterTMonitorReloadReq)
}
Proto_MasterTMonitorReloadReq::Proto_MasterTMonitorReloadReq(const Proto_MasterTMonitorReloadReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_MasterTMonitorReloadReq)
}

void Proto_MasterTMonitorReloadReq::SharedCtor() {
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Proto_MasterTMonitorReloadReq::~Proto_MasterTMonitorReloadReq() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_MasterTMonitorReloadReq)
  SharedDtor();
}

void Proto_MasterTMonitorReloadReq::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_MasterTMonitorReloadReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_MasterTMonitorReloadReq::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_MasterTMonitorReloadReq& Proto_MasterTMonitorReloadReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_MasterTMonitorReloadReq.base);
  return *internal_default_instance();
}


void Proto_MasterTMonitorReloadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_MasterTMonitorReloadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Proto_MasterTMonitorReloadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_MasterTMonitorReloadReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MasterTMonitorReloadReq.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MasterTMonitorReloadReq.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_MasterTMonitorReloadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_MasterTMonitorReloadReq)
  return false;
#undef DO_
}

void Proto_MasterTMonitorReloadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_MasterTMonitorReloadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorReloadReq.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_name(), output);
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorReloadReq.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_MasterTMonitorReloadReq)
}

::google::protobuf::uint8* Proto_MasterTMonitorReloadReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_MasterTMonitorReloadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorReloadReq.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_name(), target);
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorReloadReq.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_MasterTMonitorReloadReq)
  return target;
}

size_t Proto_MasterTMonitorReloadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_MasterTMonitorReloadReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_name = 1;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_MasterTMonitorReloadReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_MasterTMonitorReloadReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_MasterTMonitorReloadReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_MasterTMonitorReloadReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_MasterTMonitorReloadReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_MasterTMonitorReloadReq)
    MergeFrom(*source);
  }
}

void Proto_MasterTMonitorReloadReq::MergeFrom(const Proto_MasterTMonitorReloadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_MasterTMonitorReloadReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
}

void Proto_MasterTMonitorReloadReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_MasterTMonitorReloadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_MasterTMonitorReloadReq::CopyFrom(const Proto_MasterTMonitorReloadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_MasterTMonitorReloadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_MasterTMonitorReloadReq::IsInitialized() const {
  return true;
}

void Proto_MasterTMonitorReloadReq::Swap(Proto_MasterTMonitorReloadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_MasterTMonitorReloadReq::InternalSwap(Proto_MasterTMonitorReloadReq* other) {
  using std::swap;
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_MasterTMonitorReloadReq::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_MasterTMonitorRestartReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_MasterTMonitorRestartReq::kServerNameFieldNumber;
const int Proto_MasterTMonitorRestartReq::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_MasterTMonitorRestartReq::Proto_MasterTMonitorRestartReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_MasterTMonitorRestartReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_MasterTMonitorRestartReq)
}
Proto_MasterTMonitorRestartReq::Proto_MasterTMonitorRestartReq(const Proto_MasterTMonitorRestartReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_MasterTMonitorRestartReq)
}

void Proto_MasterTMonitorRestartReq::SharedCtor() {
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Proto_MasterTMonitorRestartReq::~Proto_MasterTMonitorRestartReq() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_MasterTMonitorRestartReq)
  SharedDtor();
}

void Proto_MasterTMonitorRestartReq::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_MasterTMonitorRestartReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_MasterTMonitorRestartReq::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_MasterTMonitorRestartReq& Proto_MasterTMonitorRestartReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_MasterTMonitorRestartReq.base);
  return *internal_default_instance();
}


void Proto_MasterTMonitorRestartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_MasterTMonitorRestartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Proto_MasterTMonitorRestartReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_MasterTMonitorRestartReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MasterTMonitorRestartReq.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MasterTMonitorRestartReq.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_MasterTMonitorRestartReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_MasterTMonitorRestartReq)
  return false;
#undef DO_
}

void Proto_MasterTMonitorRestartReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_MasterTMonitorRestartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorRestartReq.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_name(), output);
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorRestartReq.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_MasterTMonitorRestartReq)
}

::google::protobuf::uint8* Proto_MasterTMonitorRestartReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_MasterTMonitorRestartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorRestartReq.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_name(), target);
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorRestartReq.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_MasterTMonitorRestartReq)
  return target;
}

size_t Proto_MasterTMonitorRestartReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_MasterTMonitorRestartReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_name = 1;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_MasterTMonitorRestartReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_MasterTMonitorRestartReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_MasterTMonitorRestartReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_MasterTMonitorRestartReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_MasterTMonitorRestartReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_MasterTMonitorRestartReq)
    MergeFrom(*source);
  }
}

void Proto_MasterTMonitorRestartReq::MergeFrom(const Proto_MasterTMonitorRestartReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_MasterTMonitorRestartReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
}

void Proto_MasterTMonitorRestartReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_MasterTMonitorRestartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_MasterTMonitorRestartReq::CopyFrom(const Proto_MasterTMonitorRestartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_MasterTMonitorRestartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_MasterTMonitorRestartReq::IsInitialized() const {
  return true;
}

void Proto_MasterTMonitorRestartReq::Swap(Proto_MasterTMonitorRestartReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_MasterTMonitorRestartReq::InternalSwap(Proto_MasterTMonitorRestartReq* other) {
  using std::swap;
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_MasterTMonitorRestartReq::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_MasterTMonitorStartReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_MasterTMonitorStartReq::kServerNameFieldNumber;
const int Proto_MasterTMonitorStartReq::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_MasterTMonitorStartReq::Proto_MasterTMonitorStartReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_MasterTMonitorStartReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_MasterTMonitorStartReq)
}
Proto_MasterTMonitorStartReq::Proto_MasterTMonitorStartReq(const Proto_MasterTMonitorStartReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_MasterTMonitorStartReq)
}

void Proto_MasterTMonitorStartReq::SharedCtor() {
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Proto_MasterTMonitorStartReq::~Proto_MasterTMonitorStartReq() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_MasterTMonitorStartReq)
  SharedDtor();
}

void Proto_MasterTMonitorStartReq::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_MasterTMonitorStartReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_MasterTMonitorStartReq::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_MasterTMonitorStartReq& Proto_MasterTMonitorStartReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_MasterTMonitorStartReq.base);
  return *internal_default_instance();
}


void Proto_MasterTMonitorStartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_MasterTMonitorStartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Proto_MasterTMonitorStartReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_MasterTMonitorStartReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MasterTMonitorStartReq.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MasterTMonitorStartReq.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_MasterTMonitorStartReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_MasterTMonitorStartReq)
  return false;
#undef DO_
}

void Proto_MasterTMonitorStartReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_MasterTMonitorStartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorStartReq.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_name(), output);
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorStartReq.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_MasterTMonitorStartReq)
}

::google::protobuf::uint8* Proto_MasterTMonitorStartReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_MasterTMonitorStartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorStartReq.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_name(), target);
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorStartReq.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_MasterTMonitorStartReq)
  return target;
}

size_t Proto_MasterTMonitorStartReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_MasterTMonitorStartReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_name = 1;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_MasterTMonitorStartReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_MasterTMonitorStartReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_MasterTMonitorStartReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_MasterTMonitorStartReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_MasterTMonitorStartReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_MasterTMonitorStartReq)
    MergeFrom(*source);
  }
}

void Proto_MasterTMonitorStartReq::MergeFrom(const Proto_MasterTMonitorStartReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_MasterTMonitorStartReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
}

void Proto_MasterTMonitorStartReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_MasterTMonitorStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_MasterTMonitorStartReq::CopyFrom(const Proto_MasterTMonitorStartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_MasterTMonitorStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_MasterTMonitorStartReq::IsInitialized() const {
  return true;
}

void Proto_MasterTMonitorStartReq::Swap(Proto_MasterTMonitorStartReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_MasterTMonitorStartReq::InternalSwap(Proto_MasterTMonitorStartReq* other) {
  using std::swap;
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_MasterTMonitorStartReq::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_MasterTMonitorStopReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_MasterTMonitorStopReq::kServerNameFieldNumber;
const int Proto_MasterTMonitorStopReq::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_MasterTMonitorStopReq::Proto_MasterTMonitorStopReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_MasterTMonitorStopReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_MasterTMonitorStopReq)
}
Proto_MasterTMonitorStopReq::Proto_MasterTMonitorStopReq(const Proto_MasterTMonitorStopReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_MasterTMonitorStopReq)
}

void Proto_MasterTMonitorStopReq::SharedCtor() {
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Proto_MasterTMonitorStopReq::~Proto_MasterTMonitorStopReq() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_MasterTMonitorStopReq)
  SharedDtor();
}

void Proto_MasterTMonitorStopReq::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_MasterTMonitorStopReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_MasterTMonitorStopReq::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_MasterTMonitorStopReq& Proto_MasterTMonitorStopReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_MasterTMonitorStopReq.base);
  return *internal_default_instance();
}


void Proto_MasterTMonitorStopReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_MasterTMonitorStopReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Proto_MasterTMonitorStopReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_MasterTMonitorStopReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MasterTMonitorStopReq.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MasterTMonitorStopReq.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_MasterTMonitorStopReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_MasterTMonitorStopReq)
  return false;
#undef DO_
}

void Proto_MasterTMonitorStopReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_MasterTMonitorStopReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorStopReq.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_name(), output);
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorStopReq.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_MasterTMonitorStopReq)
}

::google::protobuf::uint8* Proto_MasterTMonitorStopReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_MasterTMonitorStopReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorStopReq.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_name(), target);
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MasterTMonitorStopReq.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_MasterTMonitorStopReq)
  return target;
}

size_t Proto_MasterTMonitorStopReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_MasterTMonitorStopReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_name = 1;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_MasterTMonitorStopReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_MasterTMonitorStopReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_MasterTMonitorStopReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_MasterTMonitorStopReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_MasterTMonitorStopReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_MasterTMonitorStopReq)
    MergeFrom(*source);
  }
}

void Proto_MasterTMonitorStopReq::MergeFrom(const Proto_MasterTMonitorStopReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_MasterTMonitorStopReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
}

void Proto_MasterTMonitorStopReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_MasterTMonitorStopReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_MasterTMonitorStopReq::CopyFrom(const Proto_MasterTMonitorStopReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_MasterTMonitorStopReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_MasterTMonitorStopReq::IsInitialized() const {
  return true;
}

void Proto_MasterTMonitorStopReq::Swap(Proto_MasterTMonitorStopReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_MasterTMonitorStopReq::InternalSwap(Proto_MasterTMonitorStopReq* other) {
  using std::swap;
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_MasterTMonitorStopReq::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_MonitorTMasterReloadRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_MonitorTMasterReloadRsp::kResultFieldNumber;
const int Proto_MonitorTMasterReloadRsp::kServerNameFieldNumber;
const int Proto_MonitorTMasterReloadRsp::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_MonitorTMasterReloadRsp::Proto_MonitorTMasterReloadRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_MonitorTMasterReloadRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_MonitorTMasterReloadRsp)
}
Proto_MonitorTMasterReloadRsp::Proto_MonitorTMasterReloadRsp(const Proto_MonitorTMasterReloadRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_MonitorTMasterReloadRsp)
}

void Proto_MonitorTMasterReloadRsp::SharedCtor() {
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

Proto_MonitorTMasterReloadRsp::~Proto_MonitorTMasterReloadRsp() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_MonitorTMasterReloadRsp)
  SharedDtor();
}

void Proto_MonitorTMasterReloadRsp::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_MonitorTMasterReloadRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_MonitorTMasterReloadRsp::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_MonitorTMasterReloadRsp& Proto_MonitorTMasterReloadRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_MonitorTMasterReloadRsp.base);
  return *internal_default_instance();
}


void Proto_MonitorTMasterReloadRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_MonitorTMasterReloadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

bool Proto_MonitorTMasterReloadRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_MonitorTMasterReloadRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MonitorTMasterReloadRsp.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MonitorTMasterReloadRsp.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_MonitorTMasterReloadRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_MonitorTMasterReloadRsp)
  return false;
#undef DO_
}

void Proto_MonitorTMasterReloadRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_MonitorTMasterReloadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterReloadRsp.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_name(), output);
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterReloadRsp.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_MonitorTMasterReloadRsp)
}

::google::protobuf::uint8* Proto_MonitorTMasterReloadRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_MonitorTMasterReloadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterReloadRsp.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_name(), target);
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterReloadRsp.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_MonitorTMasterReloadRsp)
  return target;
}

size_t Proto_MonitorTMasterReloadRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_MonitorTMasterReloadRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_name = 2;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_MonitorTMasterReloadRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_MonitorTMasterReloadRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_MonitorTMasterReloadRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_MonitorTMasterReloadRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_MonitorTMasterReloadRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_MonitorTMasterReloadRsp)
    MergeFrom(*source);
  }
}

void Proto_MonitorTMasterReloadRsp::MergeFrom(const Proto_MonitorTMasterReloadRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_MonitorTMasterReloadRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void Proto_MonitorTMasterReloadRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_MonitorTMasterReloadRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_MonitorTMasterReloadRsp::CopyFrom(const Proto_MonitorTMasterReloadRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_MonitorTMasterReloadRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_MonitorTMasterReloadRsp::IsInitialized() const {
  return true;
}

void Proto_MonitorTMasterReloadRsp::Swap(Proto_MonitorTMasterReloadRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_MonitorTMasterReloadRsp::InternalSwap(Proto_MonitorTMasterReloadRsp* other) {
  using std::swap;
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_MonitorTMasterReloadRsp::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_MonitorTMasterRestartRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_MonitorTMasterRestartRsp::kResultFieldNumber;
const int Proto_MonitorTMasterRestartRsp::kServerNameFieldNumber;
const int Proto_MonitorTMasterRestartRsp::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_MonitorTMasterRestartRsp::Proto_MonitorTMasterRestartRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_MonitorTMasterRestartRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_MonitorTMasterRestartRsp)
}
Proto_MonitorTMasterRestartRsp::Proto_MonitorTMasterRestartRsp(const Proto_MonitorTMasterRestartRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_MonitorTMasterRestartRsp)
}

void Proto_MonitorTMasterRestartRsp::SharedCtor() {
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

Proto_MonitorTMasterRestartRsp::~Proto_MonitorTMasterRestartRsp() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_MonitorTMasterRestartRsp)
  SharedDtor();
}

void Proto_MonitorTMasterRestartRsp::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_MonitorTMasterRestartRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_MonitorTMasterRestartRsp::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_MonitorTMasterRestartRsp& Proto_MonitorTMasterRestartRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_MonitorTMasterRestartRsp.base);
  return *internal_default_instance();
}


void Proto_MonitorTMasterRestartRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_MonitorTMasterRestartRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

bool Proto_MonitorTMasterRestartRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_MonitorTMasterRestartRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MonitorTMasterRestartRsp.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MonitorTMasterRestartRsp.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_MonitorTMasterRestartRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_MonitorTMasterRestartRsp)
  return false;
#undef DO_
}

void Proto_MonitorTMasterRestartRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_MonitorTMasterRestartRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterRestartRsp.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_name(), output);
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterRestartRsp.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_MonitorTMasterRestartRsp)
}

::google::protobuf::uint8* Proto_MonitorTMasterRestartRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_MonitorTMasterRestartRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterRestartRsp.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_name(), target);
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterRestartRsp.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_MonitorTMasterRestartRsp)
  return target;
}

size_t Proto_MonitorTMasterRestartRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_MonitorTMasterRestartRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_name = 2;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_MonitorTMasterRestartRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_MonitorTMasterRestartRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_MonitorTMasterRestartRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_MonitorTMasterRestartRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_MonitorTMasterRestartRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_MonitorTMasterRestartRsp)
    MergeFrom(*source);
  }
}

void Proto_MonitorTMasterRestartRsp::MergeFrom(const Proto_MonitorTMasterRestartRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_MonitorTMasterRestartRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void Proto_MonitorTMasterRestartRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_MonitorTMasterRestartRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_MonitorTMasterRestartRsp::CopyFrom(const Proto_MonitorTMasterRestartRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_MonitorTMasterRestartRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_MonitorTMasterRestartRsp::IsInitialized() const {
  return true;
}

void Proto_MonitorTMasterRestartRsp::Swap(Proto_MonitorTMasterRestartRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_MonitorTMasterRestartRsp::InternalSwap(Proto_MonitorTMasterRestartRsp* other) {
  using std::swap;
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_MonitorTMasterRestartRsp::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_MonitorTMasterStartRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_MonitorTMasterStartRsp::kResultFieldNumber;
const int Proto_MonitorTMasterStartRsp::kServerNameFieldNumber;
const int Proto_MonitorTMasterStartRsp::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_MonitorTMasterStartRsp::Proto_MonitorTMasterStartRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_MonitorTMasterStartRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_MonitorTMasterStartRsp)
}
Proto_MonitorTMasterStartRsp::Proto_MonitorTMasterStartRsp(const Proto_MonitorTMasterStartRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_MonitorTMasterStartRsp)
}

void Proto_MonitorTMasterStartRsp::SharedCtor() {
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

Proto_MonitorTMasterStartRsp::~Proto_MonitorTMasterStartRsp() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_MonitorTMasterStartRsp)
  SharedDtor();
}

void Proto_MonitorTMasterStartRsp::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_MonitorTMasterStartRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_MonitorTMasterStartRsp::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_MonitorTMasterStartRsp& Proto_MonitorTMasterStartRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_MonitorTMasterStartRsp.base);
  return *internal_default_instance();
}


void Proto_MonitorTMasterStartRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_MonitorTMasterStartRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

bool Proto_MonitorTMasterStartRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_MonitorTMasterStartRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MonitorTMasterStartRsp.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MonitorTMasterStartRsp.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_MonitorTMasterStartRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_MonitorTMasterStartRsp)
  return false;
#undef DO_
}

void Proto_MonitorTMasterStartRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_MonitorTMasterStartRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterStartRsp.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_name(), output);
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterStartRsp.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_MonitorTMasterStartRsp)
}

::google::protobuf::uint8* Proto_MonitorTMasterStartRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_MonitorTMasterStartRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterStartRsp.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_name(), target);
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterStartRsp.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_MonitorTMasterStartRsp)
  return target;
}

size_t Proto_MonitorTMasterStartRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_MonitorTMasterStartRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_name = 2;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_MonitorTMasterStartRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_MonitorTMasterStartRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_MonitorTMasterStartRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_MonitorTMasterStartRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_MonitorTMasterStartRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_MonitorTMasterStartRsp)
    MergeFrom(*source);
  }
}

void Proto_MonitorTMasterStartRsp::MergeFrom(const Proto_MonitorTMasterStartRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_MonitorTMasterStartRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void Proto_MonitorTMasterStartRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_MonitorTMasterStartRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_MonitorTMasterStartRsp::CopyFrom(const Proto_MonitorTMasterStartRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_MonitorTMasterStartRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_MonitorTMasterStartRsp::IsInitialized() const {
  return true;
}

void Proto_MonitorTMasterStartRsp::Swap(Proto_MonitorTMasterStartRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_MonitorTMasterStartRsp::InternalSwap(Proto_MonitorTMasterStartRsp* other) {
  using std::swap;
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_MonitorTMasterStartRsp::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_MonitorTMasterStopRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_MonitorTMasterStopRsp::kResultFieldNumber;
const int Proto_MonitorTMasterStopRsp::kServerNameFieldNumber;
const int Proto_MonitorTMasterStopRsp::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_MonitorTMasterStopRsp::Proto_MonitorTMasterStopRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_MonitorTMasterStopRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_MonitorTMasterStopRsp)
}
Proto_MonitorTMasterStopRsp::Proto_MonitorTMasterStopRsp(const Proto_MonitorTMasterStopRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_MonitorTMasterStopRsp)
}

void Proto_MonitorTMasterStopRsp::SharedCtor() {
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

Proto_MonitorTMasterStopRsp::~Proto_MonitorTMasterStopRsp() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_MonitorTMasterStopRsp)
  SharedDtor();
}

void Proto_MonitorTMasterStopRsp::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_MonitorTMasterStopRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_MonitorTMasterStopRsp::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_MonitorTMasterStopRsp& Proto_MonitorTMasterStopRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_MonitorTMasterStopRsp.base);
  return *internal_default_instance();
}


void Proto_MonitorTMasterStopRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_MonitorTMasterStopRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

bool Proto_MonitorTMasterStopRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_MonitorTMasterStopRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MonitorTMasterStopRsp.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_MonitorTMasterStopRsp.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_MonitorTMasterStopRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_MonitorTMasterStopRsp)
  return false;
#undef DO_
}

void Proto_MonitorTMasterStopRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_MonitorTMasterStopRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterStopRsp.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_name(), output);
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterStopRsp.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_MonitorTMasterStopRsp)
}

::google::protobuf::uint8* Proto_MonitorTMasterStopRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_MonitorTMasterStopRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterStopRsp.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_name(), target);
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_MonitorTMasterStopRsp.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_MonitorTMasterStopRsp)
  return target;
}

size_t Proto_MonitorTMasterStopRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_MonitorTMasterStopRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_name = 2;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // string server_id = 3;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_MonitorTMasterStopRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_MonitorTMasterStopRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_MonitorTMasterStopRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_MonitorTMasterStopRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_MonitorTMasterStopRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_MonitorTMasterStopRsp)
    MergeFrom(*source);
  }
}

void Proto_MonitorTMasterStopRsp::MergeFrom(const Proto_MonitorTMasterStopRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_MonitorTMasterStopRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void Proto_MonitorTMasterStopRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_MonitorTMasterStopRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_MonitorTMasterStopRsp::CopyFrom(const Proto_MonitorTMasterStopRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_MonitorTMasterStopRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_MonitorTMasterStopRsp::IsInitialized() const {
  return true;
}

void Proto_MonitorTMasterStopRsp::Swap(Proto_MonitorTMasterStopRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_MonitorTMasterStopRsp::InternalSwap(Proto_MonitorTMasterStopRsp* other) {
  using std::swap;
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_MonitorTMasterStopRsp::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_STStoreCheckReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_STStoreCheckReq::Proto_STStoreCheckReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_STStoreCheckReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_STStoreCheckReq)
}
Proto_STStoreCheckReq::Proto_STStoreCheckReq(const Proto_STStoreCheckReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_STStoreCheckReq)
}

void Proto_STStoreCheckReq::SharedCtor() {
}

Proto_STStoreCheckReq::~Proto_STStoreCheckReq() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_STStoreCheckReq)
  SharedDtor();
}

void Proto_STStoreCheckReq::SharedDtor() {
}

void Proto_STStoreCheckReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_STStoreCheckReq::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_STStoreCheckReq& Proto_STStoreCheckReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_STStoreCheckReq.base);
  return *internal_default_instance();
}


void Proto_STStoreCheckReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_STStoreCheckReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Proto_STStoreCheckReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_STStoreCheckReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_STStoreCheckReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_STStoreCheckReq)
  return false;
#undef DO_
}

void Proto_STStoreCheckReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_STStoreCheckReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_STStoreCheckReq)
}

::google::protobuf::uint8* Proto_STStoreCheckReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_STStoreCheckReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_STStoreCheckReq)
  return target;
}

size_t Proto_STStoreCheckReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_STStoreCheckReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_STStoreCheckReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_STStoreCheckReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_STStoreCheckReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_STStoreCheckReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_STStoreCheckReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_STStoreCheckReq)
    MergeFrom(*source);
  }
}

void Proto_STStoreCheckReq::MergeFrom(const Proto_STStoreCheckReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_STStoreCheckReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Proto_STStoreCheckReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_STStoreCheckReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_STStoreCheckReq::CopyFrom(const Proto_STStoreCheckReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_STStoreCheckReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_STStoreCheckReq::IsInitialized() const {
  return true;
}

void Proto_STStoreCheckReq::Swap(Proto_STStoreCheckReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_STStoreCheckReq::InternalSwap(Proto_STStoreCheckReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_STStoreCheckReq::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_StoreTSCheckRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_StoreTSCheckRsp::Proto_StoreTSCheckRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_StoreTSCheckRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_StoreTSCheckRsp)
}
Proto_StoreTSCheckRsp::Proto_StoreTSCheckRsp(const Proto_StoreTSCheckRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_StoreTSCheckRsp)
}

void Proto_StoreTSCheckRsp::SharedCtor() {
}

Proto_StoreTSCheckRsp::~Proto_StoreTSCheckRsp() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_StoreTSCheckRsp)
  SharedDtor();
}

void Proto_StoreTSCheckRsp::SharedDtor() {
}

void Proto_StoreTSCheckRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_StoreTSCheckRsp::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_StoreTSCheckRsp& Proto_StoreTSCheckRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_StoreTSCheckRsp.base);
  return *internal_default_instance();
}


void Proto_StoreTSCheckRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_StoreTSCheckRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Proto_StoreTSCheckRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_StoreTSCheckRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_StoreTSCheckRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_StoreTSCheckRsp)
  return false;
#undef DO_
}

void Proto_StoreTSCheckRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_StoreTSCheckRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_StoreTSCheckRsp)
}

::google::protobuf::uint8* Proto_StoreTSCheckRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_StoreTSCheckRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_StoreTSCheckRsp)
  return target;
}

size_t Proto_StoreTSCheckRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_StoreTSCheckRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_StoreTSCheckRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_StoreTSCheckRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_StoreTSCheckRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_StoreTSCheckRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_StoreTSCheckRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_StoreTSCheckRsp)
    MergeFrom(*source);
  }
}

void Proto_StoreTSCheckRsp::MergeFrom(const Proto_StoreTSCheckRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_StoreTSCheckRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Proto_StoreTSCheckRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_StoreTSCheckRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_StoreTSCheckRsp::CopyFrom(const Proto_StoreTSCheckRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_StoreTSCheckRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_StoreTSCheckRsp::IsInitialized() const {
  return true;
}

void Proto_StoreTSCheckRsp::Swap(Proto_StoreTSCheckRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_StoreTSCheckRsp::InternalSwap(Proto_StoreTSCheckRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_StoreTSCheckRsp::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_TestSendProxyMsgToOtherServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_TestSendProxyMsgToOtherServer::kServerIdFieldNumber;
const int Proto_TestSendProxyMsgToOtherServer::kServerNameFieldNumber;
const int Proto_TestSendProxyMsgToOtherServer::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_TestSendProxyMsgToOtherServer::Proto_TestSendProxyMsgToOtherServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_TestSendProxyMsgToOtherServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_TestSendProxyMsgToOtherServer)
}
Proto_TestSendProxyMsgToOtherServer::Proto_TestSendProxyMsgToOtherServer(const Proto_TestSendProxyMsgToOtherServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  seq_ = from.seq_;
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_TestSendProxyMsgToOtherServer)
}

void Proto_TestSendProxyMsgToOtherServer::SharedCtor() {
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_ = 0;
}

Proto_TestSendProxyMsgToOtherServer::~Proto_TestSendProxyMsgToOtherServer() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_TestSendProxyMsgToOtherServer)
  SharedDtor();
}

void Proto_TestSendProxyMsgToOtherServer::SharedDtor() {
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_TestSendProxyMsgToOtherServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_TestSendProxyMsgToOtherServer::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_TestSendProxyMsgToOtherServer& Proto_TestSendProxyMsgToOtherServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_TestSendProxyMsgToOtherServer.base);
  return *internal_default_instance();
}


void Proto_TestSendProxyMsgToOtherServer::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_TestSendProxyMsgToOtherServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_ = 0;
  _internal_metadata_.Clear();
}

bool Proto_TestSendProxyMsgToOtherServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_TestSendProxyMsgToOtherServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_TestSendProxyMsgToOtherServer.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_TestSendProxyMsgToOtherServer.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_TestSendProxyMsgToOtherServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_TestSendProxyMsgToOtherServer)
  return false;
#undef DO_
}

void Proto_TestSendProxyMsgToOtherServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_TestSendProxyMsgToOtherServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestSendProxyMsgToOtherServer.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_id(), output);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestSendProxyMsgToOtherServer.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_name(), output);
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_TestSendProxyMsgToOtherServer)
}

::google::protobuf::uint8* Proto_TestSendProxyMsgToOtherServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_TestSendProxyMsgToOtherServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestSendProxyMsgToOtherServer.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_id(), target);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestSendProxyMsgToOtherServer.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_name(), target);
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_TestSendProxyMsgToOtherServer)
  return target;
}

size_t Proto_TestSendProxyMsgToOtherServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_TestSendProxyMsgToOtherServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_id = 1;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_TestSendProxyMsgToOtherServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_TestSendProxyMsgToOtherServer)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_TestSendProxyMsgToOtherServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_TestSendProxyMsgToOtherServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_TestSendProxyMsgToOtherServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_TestSendProxyMsgToOtherServer)
    MergeFrom(*source);
  }
}

void Proto_TestSendProxyMsgToOtherServer::MergeFrom(const Proto_TestSendProxyMsgToOtherServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_TestSendProxyMsgToOtherServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
}

void Proto_TestSendProxyMsgToOtherServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_TestSendProxyMsgToOtherServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_TestSendProxyMsgToOtherServer::CopyFrom(const Proto_TestSendProxyMsgToOtherServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_TestSendProxyMsgToOtherServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_TestSendProxyMsgToOtherServer::IsInitialized() const {
  return true;
}

void Proto_TestSendProxyMsgToOtherServer::Swap(Proto_TestSendProxyMsgToOtherServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_TestSendProxyMsgToOtherServer::InternalSwap(Proto_TestSendProxyMsgToOtherServer* other) {
  using std::swap;
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seq_, other->seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_TestSendProxyMsgToOtherServer::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_TestOtherServerSendMsgToProxyServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_TestOtherServerSendMsgToProxyServer::kServerIdFieldNumber;
const int Proto_TestOtherServerSendMsgToProxyServer::kServerNameFieldNumber;
const int Proto_TestOtherServerSendMsgToProxyServer::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_TestOtherServerSendMsgToProxyServer::Proto_TestOtherServerSendMsgToProxyServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_TestOtherServerSendMsgToProxyServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
}
Proto_TestOtherServerSendMsgToProxyServer::Proto_TestOtherServerSendMsgToProxyServer(const Proto_TestOtherServerSendMsgToProxyServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  seq_ = from.seq_;
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
}

void Proto_TestOtherServerSendMsgToProxyServer::SharedCtor() {
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_ = 0;
}

Proto_TestOtherServerSendMsgToProxyServer::~Proto_TestOtherServerSendMsgToProxyServer() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  SharedDtor();
}

void Proto_TestOtherServerSendMsgToProxyServer::SharedDtor() {
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_TestOtherServerSendMsgToProxyServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_TestOtherServerSendMsgToProxyServer::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_TestOtherServerSendMsgToProxyServer& Proto_TestOtherServerSendMsgToProxyServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_TestOtherServerSendMsgToProxyServer.base);
  return *internal_default_instance();
}


void Proto_TestOtherServerSendMsgToProxyServer::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_ = 0;
  _internal_metadata_.Clear();
}

bool Proto_TestOtherServerSendMsgToProxyServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_TestOtherServerSendMsgToProxyServer.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_TestOtherServerSendMsgToProxyServer.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  return false;
#undef DO_
}

void Proto_TestOtherServerSendMsgToProxyServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestOtherServerSendMsgToProxyServer.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_id(), output);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestOtherServerSendMsgToProxyServer.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_name(), output);
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
}

::google::protobuf::uint8* Proto_TestOtherServerSendMsgToProxyServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestOtherServerSendMsgToProxyServer.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_id(), target);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestOtherServerSendMsgToProxyServer.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_name(), target);
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  return target;
}

size_t Proto_TestOtherServerSendMsgToProxyServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_id = 1;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_TestOtherServerSendMsgToProxyServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_TestOtherServerSendMsgToProxyServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_TestOtherServerSendMsgToProxyServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
    MergeFrom(*source);
  }
}

void Proto_TestOtherServerSendMsgToProxyServer::MergeFrom(const Proto_TestOtherServerSendMsgToProxyServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
}

void Proto_TestOtherServerSendMsgToProxyServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_TestOtherServerSendMsgToProxyServer::CopyFrom(const Proto_TestOtherServerSendMsgToProxyServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_TestOtherServerSendMsgToProxyServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_TestOtherServerSendMsgToProxyServer::IsInitialized() const {
  return true;
}

void Proto_TestOtherServerSendMsgToProxyServer::Swap(Proto_TestOtherServerSendMsgToProxyServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_TestOtherServerSendMsgToProxyServer::InternalSwap(Proto_TestOtherServerSendMsgToProxyServer* other) {
  using std::swap;
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seq_, other->seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_TestOtherServerSendMsgToProxyServer::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_TestSendWorldMsgToOtherServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_TestSendWorldMsgToOtherServer::kServerIdFieldNumber;
const int Proto_TestSendWorldMsgToOtherServer::kServerNameFieldNumber;
const int Proto_TestSendWorldMsgToOtherServer::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_TestSendWorldMsgToOtherServer::Proto_TestSendWorldMsgToOtherServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_TestSendWorldMsgToOtherServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_TestSendWorldMsgToOtherServer)
}
Proto_TestSendWorldMsgToOtherServer::Proto_TestSendWorldMsgToOtherServer(const Proto_TestSendWorldMsgToOtherServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  seq_ = from.seq_;
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_TestSendWorldMsgToOtherServer)
}

void Proto_TestSendWorldMsgToOtherServer::SharedCtor() {
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_ = 0;
}

Proto_TestSendWorldMsgToOtherServer::~Proto_TestSendWorldMsgToOtherServer() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_TestSendWorldMsgToOtherServer)
  SharedDtor();
}

void Proto_TestSendWorldMsgToOtherServer::SharedDtor() {
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_TestSendWorldMsgToOtherServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_TestSendWorldMsgToOtherServer::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_TestSendWorldMsgToOtherServer& Proto_TestSendWorldMsgToOtherServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_TestSendWorldMsgToOtherServer.base);
  return *internal_default_instance();
}


void Proto_TestSendWorldMsgToOtherServer::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_TestSendWorldMsgToOtherServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_ = 0;
  _internal_metadata_.Clear();
}

bool Proto_TestSendWorldMsgToOtherServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_TestSendWorldMsgToOtherServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_TestSendWorldMsgToOtherServer.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_TestSendWorldMsgToOtherServer.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_TestSendWorldMsgToOtherServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_TestSendWorldMsgToOtherServer)
  return false;
#undef DO_
}

void Proto_TestSendWorldMsgToOtherServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_TestSendWorldMsgToOtherServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestSendWorldMsgToOtherServer.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_id(), output);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestSendWorldMsgToOtherServer.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_name(), output);
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_TestSendWorldMsgToOtherServer)
}

::google::protobuf::uint8* Proto_TestSendWorldMsgToOtherServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_TestSendWorldMsgToOtherServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestSendWorldMsgToOtherServer.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_id(), target);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestSendWorldMsgToOtherServer.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_name(), target);
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_TestSendWorldMsgToOtherServer)
  return target;
}

size_t Proto_TestSendWorldMsgToOtherServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_TestSendWorldMsgToOtherServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_id = 1;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_TestSendWorldMsgToOtherServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_TestSendWorldMsgToOtherServer)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_TestSendWorldMsgToOtherServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_TestSendWorldMsgToOtherServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_TestSendWorldMsgToOtherServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_TestSendWorldMsgToOtherServer)
    MergeFrom(*source);
  }
}

void Proto_TestSendWorldMsgToOtherServer::MergeFrom(const Proto_TestSendWorldMsgToOtherServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_TestSendWorldMsgToOtherServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
}

void Proto_TestSendWorldMsgToOtherServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_TestSendWorldMsgToOtherServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_TestSendWorldMsgToOtherServer::CopyFrom(const Proto_TestSendWorldMsgToOtherServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_TestSendWorldMsgToOtherServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_TestSendWorldMsgToOtherServer::IsInitialized() const {
  return true;
}

void Proto_TestSendWorldMsgToOtherServer::Swap(Proto_TestSendWorldMsgToOtherServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_TestSendWorldMsgToOtherServer::InternalSwap(Proto_TestSendWorldMsgToOtherServer* other) {
  using std::swap;
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seq_, other->seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_TestSendWorldMsgToOtherServer::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_TestOtherServerToWorldServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_TestOtherServerToWorldServer::kServerIdFieldNumber;
const int Proto_TestOtherServerToWorldServer::kServerNameFieldNumber;
const int Proto_TestOtherServerToWorldServer::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_TestOtherServerToWorldServer::Proto_TestOtherServerToWorldServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_Proto_TestOtherServerToWorldServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.Proto_TestOtherServerToWorldServer)
}
Proto_TestOtherServerToWorldServer::Proto_TestOtherServerToWorldServer(const Proto_TestOtherServerToWorldServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  seq_ = from.seq_;
  // @@protoc_insertion_point(copy_constructor:NFServer.Proto_TestOtherServerToWorldServer)
}

void Proto_TestOtherServerToWorldServer::SharedCtor() {
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_ = 0;
}

Proto_TestOtherServerToWorldServer::~Proto_TestOtherServerToWorldServer() {
  // @@protoc_insertion_point(destructor:NFServer.Proto_TestOtherServerToWorldServer)
  SharedDtor();
}

void Proto_TestOtherServerToWorldServer::SharedDtor() {
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_TestOtherServerToWorldServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_TestOtherServerToWorldServer::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_TestOtherServerToWorldServer& Proto_TestOtherServerToWorldServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_Proto_TestOtherServerToWorldServer.base);
  return *internal_default_instance();
}


void Proto_TestOtherServerToWorldServer::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.Proto_TestOtherServerToWorldServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_ = 0;
  _internal_metadata_.Clear();
}

bool Proto_TestOtherServerToWorldServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.Proto_TestOtherServerToWorldServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_TestOtherServerToWorldServer.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.Proto_TestOtherServerToWorldServer.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.Proto_TestOtherServerToWorldServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.Proto_TestOtherServerToWorldServer)
  return false;
#undef DO_
}

void Proto_TestOtherServerToWorldServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.Proto_TestOtherServerToWorldServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestOtherServerToWorldServer.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_id(), output);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestOtherServerToWorldServer.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_name(), output);
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.Proto_TestOtherServerToWorldServer)
}

::google::protobuf::uint8* Proto_TestOtherServerToWorldServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.Proto_TestOtherServerToWorldServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestOtherServerToWorldServer.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_id(), target);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.Proto_TestOtherServerToWorldServer.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_name(), target);
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.Proto_TestOtherServerToWorldServer)
  return target;
}

size_t Proto_TestOtherServerToWorldServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.Proto_TestOtherServerToWorldServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_id = 1;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_TestOtherServerToWorldServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.Proto_TestOtherServerToWorldServer)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_TestOtherServerToWorldServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_TestOtherServerToWorldServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.Proto_TestOtherServerToWorldServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.Proto_TestOtherServerToWorldServer)
    MergeFrom(*source);
  }
}

void Proto_TestOtherServerToWorldServer::MergeFrom(const Proto_TestOtherServerToWorldServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.Proto_TestOtherServerToWorldServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
}

void Proto_TestOtherServerToWorldServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.Proto_TestOtherServerToWorldServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_TestOtherServerToWorldServer::CopyFrom(const Proto_TestOtherServerToWorldServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.Proto_TestOtherServerToWorldServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_TestOtherServerToWorldServer::IsInitialized() const {
  return true;
}

void Proto_TestOtherServerToWorldServer::Swap(Proto_TestOtherServerToWorldServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_TestOtherServerToWorldServer::InternalSwap(Proto_TestOtherServerToWorldServer* other) {
  using std::swap;
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seq_, other->seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_TestOtherServerToWorldServer::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RpcRequestGetServerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcRequestGetServerInfo::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcRequestGetServerInfo::RpcRequestGetServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_RpcRequestGetServerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.RpcRequestGetServerInfo)
}
RpcRequestGetServerInfo::RpcRequestGetServerInfo(const RpcRequestGetServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  // @@protoc_insertion_point(copy_constructor:NFServer.RpcRequestGetServerInfo)
}

void RpcRequestGetServerInfo::SharedCtor() {
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RpcRequestGetServerInfo::~RpcRequestGetServerInfo() {
  // @@protoc_insertion_point(destructor:NFServer.RpcRequestGetServerInfo)
  SharedDtor();
}

void RpcRequestGetServerInfo::SharedDtor() {
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RpcRequestGetServerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RpcRequestGetServerInfo::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcRequestGetServerInfo& RpcRequestGetServerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_RpcRequestGetServerInfo.base);
  return *internal_default_instance();
}


void RpcRequestGetServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.RpcRequestGetServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RpcRequestGetServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.RpcRequestGetServerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFServer.RpcRequestGetServerInfo.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.RpcRequestGetServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.RpcRequestGetServerInfo)
  return false;
#undef DO_
}

void RpcRequestGetServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.RpcRequestGetServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.RpcRequestGetServerInfo.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.RpcRequestGetServerInfo)
}

::google::protobuf::uint8* RpcRequestGetServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.RpcRequestGetServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFServer.RpcRequestGetServerInfo.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.RpcRequestGetServerInfo)
  return target;
}

size_t RpcRequestGetServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.RpcRequestGetServerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_id = 1;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpcRequestGetServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.RpcRequestGetServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcRequestGetServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcRequestGetServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.RpcRequestGetServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.RpcRequestGetServerInfo)
    MergeFrom(*source);
  }
}

void RpcRequestGetServerInfo::MergeFrom(const RpcRequestGetServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.RpcRequestGetServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
}

void RpcRequestGetServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.RpcRequestGetServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcRequestGetServerInfo::CopyFrom(const RpcRequestGetServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.RpcRequestGetServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcRequestGetServerInfo::IsInitialized() const {
  return true;
}

void RpcRequestGetServerInfo::Swap(RpcRequestGetServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcRequestGetServerInfo::InternalSwap(RpcRequestGetServerInfo* other) {
  using std::swap;
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RpcRequestGetServerInfo::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RpcWatchServerReqeust::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcWatchServerReqeust::kSrcServerTypeFieldNumber;
const int RpcWatchServerReqeust::kSrcBusIdFieldNumber;
const int RpcWatchServerReqeust::kDstServerTypeFieldNumber;
const int RpcWatchServerReqeust::kDstBusIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcWatchServerReqeust::RpcWatchServerReqeust()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_RpcWatchServerReqeust.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.RpcWatchServerReqeust)
}
RpcWatchServerReqeust::RpcWatchServerReqeust(const RpcWatchServerReqeust& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&src_server_type_, &from.src_server_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&dst_bus_id_) -
    reinterpret_cast<char*>(&src_server_type_)) + sizeof(dst_bus_id_));
  // @@protoc_insertion_point(copy_constructor:NFServer.RpcWatchServerReqeust)
}

void RpcWatchServerReqeust::SharedCtor() {
  ::memset(&src_server_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dst_bus_id_) -
      reinterpret_cast<char*>(&src_server_type_)) + sizeof(dst_bus_id_));
}

RpcWatchServerReqeust::~RpcWatchServerReqeust() {
  // @@protoc_insertion_point(destructor:NFServer.RpcWatchServerReqeust)
  SharedDtor();
}

void RpcWatchServerReqeust::SharedDtor() {
}

void RpcWatchServerReqeust::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RpcWatchServerReqeust::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcWatchServerReqeust& RpcWatchServerReqeust::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_RpcWatchServerReqeust.base);
  return *internal_default_instance();
}


void RpcWatchServerReqeust::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.RpcWatchServerReqeust)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&src_server_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dst_bus_id_) -
      reinterpret_cast<char*>(&src_server_type_)) + sizeof(dst_bus_id_));
  _internal_metadata_.Clear();
}

bool RpcWatchServerReqeust::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.RpcWatchServerReqeust)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 src_server_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_server_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 src_bus_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_bus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dst_server_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dst_server_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dst_bus_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dst_bus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.RpcWatchServerReqeust)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.RpcWatchServerReqeust)
  return false;
#undef DO_
}

void RpcWatchServerReqeust::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.RpcWatchServerReqeust)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 src_server_type = 1;
  if (this->src_server_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->src_server_type(), output);
  }

  // int32 src_bus_id = 2;
  if (this->src_bus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->src_bus_id(), output);
  }

  // int32 dst_server_type = 3;
  if (this->dst_server_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dst_server_type(), output);
  }

  // int32 dst_bus_id = 4;
  if (this->dst_bus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dst_bus_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.RpcWatchServerReqeust)
}

::google::protobuf::uint8* RpcWatchServerReqeust::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.RpcWatchServerReqeust)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 src_server_type = 1;
  if (this->src_server_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->src_server_type(), target);
  }

  // int32 src_bus_id = 2;
  if (this->src_bus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->src_bus_id(), target);
  }

  // int32 dst_server_type = 3;
  if (this->dst_server_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dst_server_type(), target);
  }

  // int32 dst_bus_id = 4;
  if (this->dst_bus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dst_bus_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.RpcWatchServerReqeust)
  return target;
}

size_t RpcWatchServerReqeust::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.RpcWatchServerReqeust)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 src_server_type = 1;
  if (this->src_server_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src_server_type());
  }

  // int32 src_bus_id = 2;
  if (this->src_bus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src_bus_id());
  }

  // int32 dst_server_type = 3;
  if (this->dst_server_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst_server_type());
  }

  // int32 dst_bus_id = 4;
  if (this->dst_bus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst_bus_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpcWatchServerReqeust::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.RpcWatchServerReqeust)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcWatchServerReqeust* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcWatchServerReqeust>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.RpcWatchServerReqeust)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.RpcWatchServerReqeust)
    MergeFrom(*source);
  }
}

void RpcWatchServerReqeust::MergeFrom(const RpcWatchServerReqeust& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.RpcWatchServerReqeust)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.src_server_type() != 0) {
    set_src_server_type(from.src_server_type());
  }
  if (from.src_bus_id() != 0) {
    set_src_bus_id(from.src_bus_id());
  }
  if (from.dst_server_type() != 0) {
    set_dst_server_type(from.dst_server_type());
  }
  if (from.dst_bus_id() != 0) {
    set_dst_bus_id(from.dst_bus_id());
  }
}

void RpcWatchServerReqeust::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.RpcWatchServerReqeust)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcWatchServerReqeust::CopyFrom(const RpcWatchServerReqeust& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.RpcWatchServerReqeust)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcWatchServerReqeust::IsInitialized() const {
  return true;
}

void RpcWatchServerReqeust::Swap(RpcWatchServerReqeust* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcWatchServerReqeust::InternalSwap(RpcWatchServerReqeust* other) {
  using std::swap;
  swap(src_server_type_, other->src_server_type_);
  swap(src_bus_id_, other->src_bus_id_);
  swap(dst_server_type_, other->dst_server_type_);
  swap(dst_bus_id_, other->dst_bus_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RpcWatchServerReqeust::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RpcWatchServerRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcWatchServerRespone::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcWatchServerRespone::RpcWatchServerRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerMsg_2eproto::scc_info_RpcWatchServerRespone.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFServer.RpcWatchServerRespone)
}
RpcWatchServerRespone::RpcWatchServerRespone(const RpcWatchServerRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_code_ = from.ret_code_;
  // @@protoc_insertion_point(copy_constructor:NFServer.RpcWatchServerRespone)
}

void RpcWatchServerRespone::SharedCtor() {
  ret_code_ = 0;
}

RpcWatchServerRespone::~RpcWatchServerRespone() {
  // @@protoc_insertion_point(destructor:NFServer.RpcWatchServerRespone)
  SharedDtor();
}

void RpcWatchServerRespone::SharedDtor() {
}

void RpcWatchServerRespone::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RpcWatchServerRespone::descriptor() {
  ::protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcWatchServerRespone& RpcWatchServerRespone::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerMsg_2eproto::scc_info_RpcWatchServerRespone.base);
  return *internal_default_instance();
}


void RpcWatchServerRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:NFServer.RpcWatchServerRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_code_ = 0;
  _internal_metadata_.Clear();
}

bool RpcWatchServerRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFServer.RpcWatchServerRespone)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFServer.RpcWatchServerRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFServer.RpcWatchServerRespone)
  return false;
#undef DO_
}

void RpcWatchServerRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFServer.RpcWatchServerRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret_code = 1;
  if (this->ret_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFServer.RpcWatchServerRespone)
}

::google::protobuf::uint8* RpcWatchServerRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFServer.RpcWatchServerRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret_code = 1;
  if (this->ret_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFServer.RpcWatchServerRespone)
  return target;
}

size_t RpcWatchServerRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFServer.RpcWatchServerRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 ret_code = 1;
  if (this->ret_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpcWatchServerRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFServer.RpcWatchServerRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcWatchServerRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcWatchServerRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFServer.RpcWatchServerRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFServer.RpcWatchServerRespone)
    MergeFrom(*source);
  }
}

void RpcWatchServerRespone::MergeFrom(const RpcWatchServerRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFServer.RpcWatchServerRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret_code() != 0) {
    set_ret_code(from.ret_code());
  }
}

void RpcWatchServerRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFServer.RpcWatchServerRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcWatchServerRespone::CopyFrom(const RpcWatchServerRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFServer.RpcWatchServerRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcWatchServerRespone::IsInitialized() const {
  return true;
}

void RpcWatchServerRespone::Swap(RpcWatchServerRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcWatchServerRespone::InternalSwap(RpcWatchServerRespone* other) {
  using std::swap;
  swap(ret_code_, other->ret_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RpcWatchServerRespone::GetMetadata() const {
  protobuf_ServerMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFServer
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::CommonMsgRsp* Arena::CreateMaybeMessage< ::NFServer::CommonMsgRsp >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::CommonMsgRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_MasterTMonitorReloadReq* Arena::CreateMaybeMessage< ::NFServer::Proto_MasterTMonitorReloadReq >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_MasterTMonitorReloadReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_MasterTMonitorRestartReq* Arena::CreateMaybeMessage< ::NFServer::Proto_MasterTMonitorRestartReq >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_MasterTMonitorRestartReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_MasterTMonitorStartReq* Arena::CreateMaybeMessage< ::NFServer::Proto_MasterTMonitorStartReq >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_MasterTMonitorStartReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_MasterTMonitorStopReq* Arena::CreateMaybeMessage< ::NFServer::Proto_MasterTMonitorStopReq >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_MasterTMonitorStopReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_MonitorTMasterReloadRsp* Arena::CreateMaybeMessage< ::NFServer::Proto_MonitorTMasterReloadRsp >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_MonitorTMasterReloadRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_MonitorTMasterRestartRsp* Arena::CreateMaybeMessage< ::NFServer::Proto_MonitorTMasterRestartRsp >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_MonitorTMasterRestartRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_MonitorTMasterStartRsp* Arena::CreateMaybeMessage< ::NFServer::Proto_MonitorTMasterStartRsp >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_MonitorTMasterStartRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_MonitorTMasterStopRsp* Arena::CreateMaybeMessage< ::NFServer::Proto_MonitorTMasterStopRsp >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_MonitorTMasterStopRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_STStoreCheckReq* Arena::CreateMaybeMessage< ::NFServer::Proto_STStoreCheckReq >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_STStoreCheckReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_StoreTSCheckRsp* Arena::CreateMaybeMessage< ::NFServer::Proto_StoreTSCheckRsp >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_StoreTSCheckRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_TestSendProxyMsgToOtherServer* Arena::CreateMaybeMessage< ::NFServer::Proto_TestSendProxyMsgToOtherServer >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_TestSendProxyMsgToOtherServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_TestOtherServerSendMsgToProxyServer* Arena::CreateMaybeMessage< ::NFServer::Proto_TestOtherServerSendMsgToProxyServer >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_TestOtherServerSendMsgToProxyServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_TestSendWorldMsgToOtherServer* Arena::CreateMaybeMessage< ::NFServer::Proto_TestSendWorldMsgToOtherServer >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_TestSendWorldMsgToOtherServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::Proto_TestOtherServerToWorldServer* Arena::CreateMaybeMessage< ::NFServer::Proto_TestOtherServerToWorldServer >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::Proto_TestOtherServerToWorldServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::RpcRequestGetServerInfo* Arena::CreateMaybeMessage< ::NFServer::RpcRequestGetServerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::RpcRequestGetServerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::RpcWatchServerReqeust* Arena::CreateMaybeMessage< ::NFServer::RpcWatchServerReqeust >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::RpcWatchServerReqeust >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFServer::RpcWatchServerRespone* Arena::CreateMaybeMessage< ::NFServer::RpcWatchServerRespone >(Arena* arena) {
  return Arena::CreateInternal< ::NFServer::RpcWatchServerRespone >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
