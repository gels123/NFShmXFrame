/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 */

#ifndef PB_NFRAME_FRAMEMSG_NANOPB_H_INCLUDED
#define PB_NFRAME_FRAMEMSG_NANOPB_H_INCLUDED
#include <string>
#include <vector>
#include <unordered_map>
#include <map>
#include <NFComm/NFCore/NFHash.hpp>
#include <pb.h>

#include "FrameMsg.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _FrameServerMsg {
    NF_FRAME_MSG_NONE = 0,
    NF_SERVER_TO_SERVER_HEART_BEAT = 1,
    NF_SERVER_TO_SERVER_HEART_BEAT_RSP = 2,
    NF_SERVER_TO_SERVER_BUS_CONNECT_REQ = 3,
    NF_SERVER_TO_SERVER_BUS_CONNECT_RSP = 4,
    NF_GTM_KILL_ALL_SERVER_NTF = 50,
    NF_STS_KILL_ALL_SERVER_NTF = 51,
    NF_STS_SEND_DUMP_INFO_NTF = 52,
    NF_MasterTMonitor_RELOAD_CMD_REQ = 80,
    NF_MasterTMonitor_RESTART_CMD_REQ = 81,
    NF_MasterTMonitor_START_CMD_REQ = 82,
    NF_MasterTMonitor_STOP_CMD_REQ = 83,
    NF_MasterTMonitor_STOP_ALL_CMD_REQ = 84,
    NF_MasterTMonitor_RELOAD_ALL_CMD_REQ = 85,
    NF_MasterTMonitor_RESTART_ALL_CMD_REQ = 86,
    NF_MasterTMonitor_START_ALL_CMD_REQ = 87,
    NF_MonitorTMaster_RELOAD_CMD_RSP = 90,
    NF_MonitorTMaster_RESTART_CMD_RSP = 91,
    NF_MonitorTMaster_START_CMD_RSP = 92,
    NF_MonitorTMaster_STOP_CMD_RSP = 93,
    NF_MonitorTMaster_STOP_ALL_CMD_RSP = 94,
    NF_MonitorTMaster_RELOAD_ALL_CMD_RSP = 95,
    NF_MonitorTMaster_RESTART_ALL_CMD_RSP = 96,
    NF_MonitorTMaster_START_ALL_CMD_RSP = 97,
    NF_SERVER_TO_SERVER_REGISTER = 100,
    NF_SERVER_TO_SERVER_REGISTER_RSP = 101,
    NF_MASTER_SERVER_SEND_OTHERS_TO_SERVER = 102,
    NF_SERVER_TO_MASTER_SERVER_REPORT = 103,
    NF_ROUTER_CMD_INTERNAL_C2R_REGISTER = 104,
    NF_ROUTER_CMD_INTERNAL_R2C_REGISTER = 105,
    NF_ROUTER_CMD_INTERNAL_C2R_HEARTBEAT = 106,
    NF_ROUTER_CMD_INTERNAL_R2C_HEARTBEAT = 107,
    NF_ROUTER_CMD_DISPATCH_MOD = 108,
    NF_ROUTER_CMD_DISPATCH_ROUNDROBIN = 109,
    NF_ROUTER_CMD_DISPATCH_BROADCAST = 110,
    NF_ROUTER_CMD_DISPATCH_BROADCAST_AND_MASTER = 111,
    NF_ROUTER_CMD_DISPATCH_BORADCAST_MASTER = 112,
    NF_ROUTER_CMD_DISPATCH_BORADCAST_SLAVE = 113,
    NF_ROUTER_CMD_DISPATCH_DIRECT = 114,
    NF_ROUTER_CMD_INTERNAL_R2C_DISPATCHFAILED = 115,
    NF_ROUTER_CMD_INTERNAL_C2R_REG_RAASSOCAPPSVS = 116,
    NF_SERVER_TO_SERVER_RPC_CMD = 119,
    NF_SERVER_TO_SERVER_TRANS_CMD = 120,
    NF_SERVER_TO_STORE_SERVER_DB_CMD = 121,
    NF_STORE_SERVER_TO_SERVER_DB_CMD = 122,
    NF_WORLD_ROUTER_CMD_TO_SUIT_LOGIC = 123,
    NF_SNS_ROUTER_CMD_TO_SUIT_LOGIC = 124,
    NF_STS_BROAD_PLAYER_MSG_NOTIFY = 125,
    NF_SEVER_TO_WEB_SERVER_RSP_NOTIFY = 126,
    NF_SERVER_BROAD_EVENT_TO_SERVER_CMD = 127,
    NF_SERVER_REDIRECT_MSG_TO_PROXY_SERVER_CMD = 128,
    NF_SERVER_TO_SERVER_REGISTER_ROOM_INFO_RPC = 129,
    NF_STORESVR_C2S_SELECT = 200,
    NF_STORESVR_S2C_SELECT = 201,
    NF_STORESVR_C2S_SELECTOBJ = 202,
    NF_STORESVR_S2C_SELECTOBJ = 203,
    NF_STORESVR_C2S_INSERT = 204,
    NF_STORESVR_S2C_INSERT = 205,
    NF_STORESVR_C2S_INSERTOBJ = 206,
    NF_STORESVR_S2C_INSERTOBJ = 207,
    NF_STORESVR_C2S_DELETE = 208,
    NF_STORESVR_S2C_DELETE = 209,
    NF_STORESVR_C2S_DELETEOBJ = 210,
    NF_STORESVR_S2C_DELETEOBJ = 211,
    NF_STORESVR_C2S_MODIFY = 212,
    NF_STORESVR_S2C_MODIFY = 213,
    NF_STORESVR_C2S_MODIFYOBJ = 214,
    NF_STORESVR_S2C_MODIFYOBJ = 215,
    NF_STORESVR_C2S_UPDATE = 216,
    NF_STORESVR_S2C_UPDATE = 217,
    NF_STORESVR_C2S_UPDATEOBJ = 218,
    NF_STORESVR_S2C_UPDATEOBJ = 219,
    NF_STORESVR_C2S_DESCSTORE = 220,
    NF_STORESVR_S2C_DESCSTORE = 221,
    NF_STORESVR_C2S_EXECUTE = 222,
    NF_STORESVR_S2C_EXECUTE = 223,
    NF_STORESVR_C2S_EXECUTE_MORE = 224,
    NF_STORESVR_S2C_EXECUTE_MORE = 225
} FrameServerMsg;
#define _FrameServerMsg_MIN NF_FRAME_MSG_NONE
#define _FrameServerMsg_MAX NF_STORESVR_S2C_EXECUTE_MORE
#define _FrameServerMsg_ARRAYSIZE ((FrameServerMsg)(NF_STORESVR_S2C_EXECUTE_MORE+1))
#define _FrameServerMsg_ALLSIZE (78)

typedef enum _PacketDispType {
    E_DISP_TYPE_NONE = 0,
    E_DISP_TYPE_BY_TRANSACTION = 1,
    E_DISP_TYPE_BY_ROLEID = 2,
    E_DISP_TYPE_BY_MSGID = 3,
    E_DISP_TYPE_BY_RPC = 4
} PacketDispType;
#define _PacketDispType_MIN E_DISP_TYPE_NONE
#define _PacketDispType_MAX E_DISP_TYPE_BY_RPC
#define _PacketDispType_ARRAYSIZE ((PacketDispType)(E_DISP_TYPE_BY_RPC+1))
#define _PacketDispType_ALLSIZE (5)

typedef enum _EServerState {
    EST_INIT = 0,
    EST_NARMAL = 1,
    EST_BUSY = 2,
    EST_CRASH = 3
} EServerState;
#define _EServerState_MIN EST_INIT
#define _EServerState_MAX EST_CRASH
#define _EServerState_ARRAYSIZE ((EServerState)(EST_CRASH+1))
#define _EServerState_ALLSIZE (4)

typedef enum _NFEventSrcType {
    NF_EVENT_NONE_TYPE = 0,
    NF_EVENT_SERVER_TYPE = 1,
    NF_EVENT_GM_TYPE = 2,
    NF_EVENT_PLAYER_TYPE = 4
} NFEventSrcType;
#define _NFEventSrcType_MIN NF_EVENT_NONE_TYPE
#define _NFEventSrcType_MAX NF_EVENT_PLAYER_TYPE
#define _NFEventSrcType_ARRAYSIZE ((NFEventSrcType)(NF_EVENT_PLAYER_TYPE+1))
#define _NFEventSrcType_ALLSIZE (4)

typedef enum _NFEventIdType {
    NF_EVENT_NONE = 0,
    NF_EVENT_SERVER_TYPE_BEGIN = 1,
    NF_EVENT_SERVER_TASK_GROUP_FINISH = 2,
    NF_EVENT_SERVER_APP_FINISH_INITED = 5,
    NF_EVENT_SERVER_DEAD_EVENT = 6,
    NF_EVENT_GAME_SERVER_DUMP_EVENT = 8,
    NF_EVENT_LOGIC_SERVER_DUMP_EVENT = 9,
    NF_EVENT_WORLD_SERVER_DUMP_EVENT = 10,
    NF_EVENT_CENTER_SERVER_DUMP_VENT = 11,
    NF_EVENT_PROXY_SERVER_DUMP_EVENT = 12,
    NF_EVENT_PROXY_AGENT_SERVER_DUMP_EVENT = 13,
    NF_EVENT_STORE_SERVER_DMP_EVENT = 14,
    NF_EVENT_LOGIN_SERVER_DUMP_EVENT = 15,
    NF_EVENT_ROUTE_AGENT_SERVER_DUMP_EVENT = 16,
    NF_EVENT_ROUTE_SERVER_DUMP_EVENT = 17,
    NF_EVENT_MASTER_SERVER_DUMP_EVENT = 18,
    NF_EVENT_SERVER_REPORT_EVENT = 30,
    NF_EVENT_SERVER_SET_TIME_EVENT = 31,
    NF_EVENT_SERVER_TYPE_END = 99
} NFEventIdType;
#define _NFEventIdType_MIN NF_EVENT_NONE
#define _NFEventIdType_MAX NF_EVENT_SERVER_TYPE_END
#define _NFEventIdType_ARRAYSIZE ((NFEventIdType)(NF_EVENT_SERVER_TYPE_END+1))
#define _NFEventIdType_ALLSIZE (19)

/* Struct definitions */
struct Proto_KillAllServerNtf {
    char dummy_field;

	Proto_KillAllServerNtf();
	~Proto_KillAllServerNtf();
	Proto_KillAllServerNtf(const Proto_KillAllServerNtf& stArgsData);
	Proto_KillAllServerNtf& operator=(const Proto_KillAllServerNtf& stArgsData);
	void CopyData(const Proto_KillAllServerNtf& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_KillAllServerNtf& cc);
    void ToPb(NFrame::Proto_KillAllServerNtf* cc) const;
    NFrame::Proto_KillAllServerNtf ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_KillAllServerNtf) */
};

struct DynLibFileInfo {
    std::string file_md5;
    int32_t file_size;

	DynLibFileInfo();
	~DynLibFileInfo();
	DynLibFileInfo(const DynLibFileInfo& stArgsData);
	DynLibFileInfo& operator=(const DynLibFileInfo& stArgsData);
	void CopyData(const DynLibFileInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::DynLibFileInfo& cc);
    void ToPb(NFrame::DynLibFileInfo* cc) const;
    NFrame::DynLibFileInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:DynLibFileInfo) */
};

struct NFEventNoneData {
    int64_t param1;
    int64_t param2;
    int64_t param3;
    int64_t param4;
    int64_t param5;

	NFEventNoneData();
	~NFEventNoneData();
	NFEventNoneData(const NFEventNoneData& stArgsData);
	NFEventNoneData& operator=(const NFEventNoneData& stArgsData);
	void CopyData(const NFEventNoneData& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::NFEventNoneData& cc);
    void ToPb(NFrame::NFEventNoneData* cc) const;
    NFrame::NFEventNoneData ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:NFEventNoneData) */
};

struct NFEventScriptData {
    std::string event_type;
    std::string event_data;

	NFEventScriptData();
	~NFEventScriptData();
	NFEventScriptData(const NFEventScriptData& stArgsData);
	NFEventScriptData& operator=(const NFEventScriptData& stArgsData);
	void CopyData(const NFEventScriptData& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::NFEventScriptData& cc);
    void ToPb(NFrame::NFEventScriptData* cc) const;
    NFrame::NFEventScriptData ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:NFEventScriptData) */
};

struct Proto_DispInfo {
    uint64_t id;
    int32_t seq;
    int32_t req_seq;
    int32_t err_code;
    PacketDispType type;

	Proto_DispInfo();
	~Proto_DispInfo();
	Proto_DispInfo(const Proto_DispInfo& stArgsData);
	Proto_DispInfo& operator=(const Proto_DispInfo& stArgsData);
	void CopyData(const Proto_DispInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_DispInfo& cc);
    void ToPb(NFrame::Proto_DispInfo* cc) const;
    NFrame::Proto_DispInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_DispInfo) */
};

struct Proto_EventInfo {
    uint32_t server_type;
    uint64_t event_id;
    uint64_t src_type;
    uint64_t src_id;
    std::string full_message_name;

	Proto_EventInfo();
	~Proto_EventInfo();
	Proto_EventInfo(const Proto_EventInfo& stArgsData);
	Proto_EventInfo& operator=(const Proto_EventInfo& stArgsData);
	void CopyData(const Proto_EventInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_EventInfo& cc);
    void ToPb(NFrame::Proto_EventInfo* cc) const;
    NFrame::Proto_EventInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_EventInfo) */
};

struct Proto_KillAllServerRsp {
    int32_t result;

	Proto_KillAllServerRsp();
	~Proto_KillAllServerRsp();
	Proto_KillAllServerRsp(const Proto_KillAllServerRsp& stArgsData);
	Proto_KillAllServerRsp& operator=(const Proto_KillAllServerRsp& stArgsData);
	void CopyData(const Proto_KillAllServerRsp& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_KillAllServerRsp& cc);
    void ToPb(NFrame::Proto_KillAllServerRsp* cc) const;
    NFrame::Proto_KillAllServerRsp ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_KillAllServerRsp) */
};

struct Proto_RedirectInfo {
    std::vector<uint64_t> id;
    bool all;

	Proto_RedirectInfo();
	~Proto_RedirectInfo();
	Proto_RedirectInfo(const Proto_RedirectInfo& stArgsData);
	Proto_RedirectInfo& operator=(const Proto_RedirectInfo& stArgsData);
	void CopyData(const Proto_RedirectInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_RedirectInfo& cc);
    void ToPb(NFrame::Proto_RedirectInfo* cc) const;
    NFrame::Proto_RedirectInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_RedirectInfo) */
};

struct Proto_RpcInfo {
    int64_t req_rpc_id;
    int64_t rsp_rpc_id;
    int32_t rpc_ret_code;
    uint64_t req_rpc_hash;
    uint64_t rsp_rpc_hash;
    uint32_t req_bus_id;
    uint64_t req_server_type;
    bool is_script_rpc;

	Proto_RpcInfo();
	~Proto_RpcInfo();
	Proto_RpcInfo(const Proto_RpcInfo& stArgsData);
	Proto_RpcInfo& operator=(const Proto_RpcInfo& stArgsData);
	void CopyData(const Proto_RpcInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_RpcInfo& cc);
    void ToPb(NFrame::Proto_RpcInfo* cc) const;
    NFrame::Proto_RpcInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_RpcInfo) */
};

struct Proto_STSBroadPlayerMsgNotify {
    std::vector<uint64_t> user_id;
    uint32_t msg_id;
    std::string msg_data;

	Proto_STSBroadPlayerMsgNotify();
	~Proto_STSBroadPlayerMsgNotify();
	Proto_STSBroadPlayerMsgNotify(const Proto_STSBroadPlayerMsgNotify& stArgsData);
	Proto_STSBroadPlayerMsgNotify& operator=(const Proto_STSBroadPlayerMsgNotify& stArgsData);
	void CopyData(const Proto_STSBroadPlayerMsgNotify& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_STSBroadPlayerMsgNotify& cc);
    void ToPb(NFrame::Proto_STSBroadPlayerMsgNotify* cc) const;
    NFrame::Proto_STSBroadPlayerMsgNotify ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_STSBroadPlayerMsgNotify) */
};

struct Proto_STWebMsgRspNotify {
    uint64_t request_id;
    int32_t result;
    std::string err_msg;

	Proto_STWebMsgRspNotify();
	~Proto_STWebMsgRspNotify();
	Proto_STWebMsgRspNotify(const Proto_STWebMsgRspNotify& stArgsData);
	Proto_STWebMsgRspNotify& operator=(const Proto_STWebMsgRspNotify& stArgsData);
	void CopyData(const Proto_STWebMsgRspNotify& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_STWebMsgRspNotify& cc);
    void ToPb(NFrame::Proto_STWebMsgRspNotify* cc) const;
    NFrame::Proto_STWebMsgRspNotify ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_STWebMsgRspNotify) */
};

struct Proto_ScriptRpcResult {
    std::string req_type;
    std::string rsp_type;
    std::string respone;

	Proto_ScriptRpcResult();
	~Proto_ScriptRpcResult();
	Proto_ScriptRpcResult(const Proto_ScriptRpcResult& stArgsData);
	Proto_ScriptRpcResult& operator=(const Proto_ScriptRpcResult& stArgsData);
	void CopyData(const Proto_ScriptRpcResult& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_ScriptRpcResult& cc);
    void ToPb(NFrame::Proto_ScriptRpcResult* cc) const;
    NFrame::Proto_ScriptRpcResult ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_ScriptRpcResult) */
};

struct Proto_ServerDumpInfoNtf {
    std::string dump_info;
    uint32_t bus_id;

	Proto_ServerDumpInfoNtf();
	~Proto_ServerDumpInfoNtf();
	Proto_ServerDumpInfoNtf(const Proto_ServerDumpInfoNtf& stArgsData);
	Proto_ServerDumpInfoNtf& operator=(const Proto_ServerDumpInfoNtf& stArgsData);
	void CopyData(const Proto_ServerDumpInfoNtf& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_ServerDumpInfoNtf& cc);
    void ToPb(NFrame::Proto_ServerDumpInfoNtf* cc) const;
    NFrame::Proto_ServerDumpInfoNtf ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_ServerDumpInfoNtf) */
};

struct Proto_StoreInfo {
    uint64_t id;
    uint32_t table_id;

	Proto_StoreInfo();
	~Proto_StoreInfo();
	Proto_StoreInfo(const Proto_StoreInfo& stArgsData);
	Proto_StoreInfo& operator=(const Proto_StoreInfo& stArgsData);
	void CopyData(const Proto_StoreInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_StoreInfo& cc);
    void ToPb(NFrame::Proto_StoreInfo* cc) const;
    NFrame::Proto_StoreInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_StoreInfo) */
};

struct Proto_TransInfo {
    int32_t req_trans_id;
    int32_t rsp_trans_id;

	Proto_TransInfo();
	~Proto_TransInfo();
	Proto_TransInfo(const Proto_TransInfo& stArgsData);
	Proto_TransInfo& operator=(const Proto_TransInfo& stArgsData);
	void CopyData(const Proto_TransInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_TransInfo& cc);
    void ToPb(NFrame::Proto_TransInfo* cc) const;
    NFrame::Proto_TransInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_TransInfo) */
};

struct ServerInfoReport {
    uint32_t bus_id;
    std::string server_id;
    uint32_t server_type;
    std::string server_name;
    std::string url;
    std::string link_mode;
    uint32_t bus_length;
    std::string server_ip;
    uint32_t server_port;
    uint32_t server_http_port;
    std::string external_server_ip;
    uint32_t external_server_port;
    bool is_cross_server;
    std::string route_svr;
    uint32_t server_max_online;
    uint32_t server_cur_online;
    uint32_t server_state;
    std::string system_info;
    uint64_t total_mem;
    uint64_t free_mem;
    uint64_t used_mem;
    double proc_cpu;
    uint64_t proc_mem;
    uint32_t proc_thread;
    std::string proc_name;
    std::string proc_cwd;
    uint32_t proc_pid;
    std::string last_date;
    uint64_t last_time;
    std::string contract_info;
    std::string machine_addr;
    std::vector<std::string> db_name_list;
    std::vector<uint32_t> msg_id;
    std::vector<uint64_t> map_id_list;

	ServerInfoReport();
	~ServerInfoReport();
	ServerInfoReport(const ServerInfoReport& stArgsData);
	ServerInfoReport& operator=(const ServerInfoReport& stArgsData);
	void CopyData(const ServerInfoReport& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::ServerInfoReport& cc);
    void ToPb(NFrame::ServerInfoReport* cc) const;
    NFrame::ServerInfoReport ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:ServerInfoReport) */
};

struct ServerInfoReportListRespne {
    int32_t ret_code;

	ServerInfoReportListRespne();
	~ServerInfoReportListRespne();
	ServerInfoReportListRespne(const ServerInfoReportListRespne& stArgsData);
	ServerInfoReportListRespne& operator=(const ServerInfoReportListRespne& stArgsData);
	void CopyData(const ServerInfoReportListRespne& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::ServerInfoReportListRespne& cc);
    void ToPb(NFrame::ServerInfoReportListRespne* cc) const;
    NFrame::ServerInfoReportListRespne ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:ServerInfoReportListRespne) */
};

struct ZkServerInfo {
    std::string bus_url;
    std::string tcp_url;

	ZkServerInfo();
	~ZkServerInfo();
	ZkServerInfo(const ZkServerInfo& stArgsData);
	ZkServerInfo& operator=(const ZkServerInfo& stArgsData);
	void CopyData(const ZkServerInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::ZkServerInfo& cc);
    void ToPb(NFrame::ZkServerInfo* cc) const;
    NFrame::ZkServerInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:ZkServerInfo) */
};

struct DynLibFileInfoArray {
    std::vector<DynLibFileInfo> file_list;

	DynLibFileInfoArray();
	~DynLibFileInfoArray();
	DynLibFileInfoArray(const DynLibFileInfoArray& stArgsData);
	DynLibFileInfoArray& operator=(const DynLibFileInfoArray& stArgsData);
	void CopyData(const DynLibFileInfoArray& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::DynLibFileInfoArray& cc);
    void ToPb(NFrame::DynLibFileInfoArray* cc) const;
    NFrame::DynLibFileInfoArray ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:DynLibFileInfoArray) */
};

struct Proto_FramePkg {
    int32_t module_id;
    int32_t msg_id;
    std::string msg_data;
    Proto_DispInfo disp_info;
    Proto_TransInfo trans_info;
    Proto_StoreInfo store_info;
    Proto_EventInfo event_info;
    Proto_RedirectInfo redirect_info;
    Proto_RpcInfo rpc_info;

	Proto_FramePkg();
	~Proto_FramePkg();
	Proto_FramePkg(const Proto_FramePkg& stArgsData);
	Proto_FramePkg& operator=(const Proto_FramePkg& stArgsData);
	void CopyData(const Proto_FramePkg& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::Proto_FramePkg& cc);
    void ToPb(NFrame::Proto_FramePkg* cc) const;
    NFrame::Proto_FramePkg ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:Proto_FramePkg) */
};

struct ServerInfoReportList {
    std::vector<ServerInfoReport> server_list;

	ServerInfoReportList();
	~ServerInfoReportList();
	ServerInfoReportList(const ServerInfoReportList& stArgsData);
	ServerInfoReportList& operator=(const ServerInfoReportList& stArgsData);
	void CopyData(const ServerInfoReportList& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::ServerInfoReportList& cc);
    void ToPb(NFrame::ServerInfoReportList* cc) const;
    NFrame::ServerInfoReportList ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:ServerInfoReportList) */
};

/* Field tags (for use in manual encoding/decoding) */
#define DynLibFileInfo_file_md5_tag              1
#define DynLibFileInfo_file_size_tag             2
#define NFEventNoneData_param1_tag               1
#define NFEventNoneData_param2_tag               2
#define NFEventNoneData_param3_tag               3
#define NFEventNoneData_param4_tag               4
#define NFEventNoneData_param5_tag               5
#define NFEventScriptData_event_type_tag         1
#define NFEventScriptData_event_data_tag         2
#define Proto_DispInfo_id_tag                    1
#define Proto_DispInfo_seq_tag                   4
#define Proto_DispInfo_req_seq_tag               5
#define Proto_DispInfo_err_code_tag              6
#define Proto_DispInfo_type_tag                  7
#define Proto_EventInfo_server_type_tag          1
#define Proto_EventInfo_event_id_tag             2
#define Proto_EventInfo_src_type_tag             3
#define Proto_EventInfo_src_id_tag               4
#define Proto_EventInfo_full_message_name_tag    5
#define Proto_KillAllServerRsp_result_tag        1
#define Proto_RedirectInfo_id_tag                1
#define Proto_RedirectInfo_all_tag               2
#define Proto_RpcInfo_req_rpc_id_tag             1
#define Proto_RpcInfo_rsp_rpc_id_tag             2
#define Proto_RpcInfo_rpc_ret_code_tag           3
#define Proto_RpcInfo_req_rpc_hash_tag           4
#define Proto_RpcInfo_rsp_rpc_hash_tag           5
#define Proto_RpcInfo_req_bus_id_tag             6
#define Proto_RpcInfo_req_server_type_tag        7
#define Proto_RpcInfo_is_script_rpc_tag          8
#define Proto_STSBroadPlayerMsgNotify_user_id_tag 1
#define Proto_STSBroadPlayerMsgNotify_msg_id_tag 2
#define Proto_STSBroadPlayerMsgNotify_msg_data_tag 3
#define Proto_STWebMsgRspNotify_request_id_tag   1
#define Proto_STWebMsgRspNotify_result_tag       2
#define Proto_STWebMsgRspNotify_err_msg_tag      3
#define Proto_ScriptRpcResult_req_type_tag       1
#define Proto_ScriptRpcResult_rsp_type_tag       2
#define Proto_ScriptRpcResult_respone_tag        3
#define Proto_ServerDumpInfoNtf_dump_info_tag    1
#define Proto_ServerDumpInfoNtf_bus_id_tag       2
#define Proto_StoreInfo_id_tag                   1
#define Proto_StoreInfo_table_id_tag             2
#define Proto_TransInfo_req_trans_id_tag         1
#define Proto_TransInfo_rsp_trans_id_tag         2
#define ServerInfoReport_bus_id_tag              1
#define ServerInfoReport_server_id_tag           2
#define ServerInfoReport_server_type_tag         3
#define ServerInfoReport_server_name_tag         4
#define ServerInfoReport_url_tag                 5
#define ServerInfoReport_link_mode_tag           6
#define ServerInfoReport_bus_length_tag          7
#define ServerInfoReport_server_ip_tag           9
#define ServerInfoReport_server_port_tag         10
#define ServerInfoReport_server_http_port_tag    11
#define ServerInfoReport_external_server_ip_tag  12
#define ServerInfoReport_external_server_port_tag 13
#define ServerInfoReport_is_cross_server_tag     14
#define ServerInfoReport_route_svr_tag           15
#define ServerInfoReport_server_max_online_tag   30
#define ServerInfoReport_server_cur_online_tag   31
#define ServerInfoReport_server_state_tag        32
#define ServerInfoReport_system_info_tag         33
#define ServerInfoReport_total_mem_tag           34
#define ServerInfoReport_free_mem_tag            35
#define ServerInfoReport_used_mem_tag            36
#define ServerInfoReport_proc_cpu_tag            37
#define ServerInfoReport_proc_mem_tag            38
#define ServerInfoReport_proc_thread_tag         39
#define ServerInfoReport_proc_name_tag           40
#define ServerInfoReport_proc_cwd_tag            41
#define ServerInfoReport_proc_pid_tag            42
#define ServerInfoReport_last_date_tag           43
#define ServerInfoReport_last_time_tag           44
#define ServerInfoReport_contract_info_tag       45
#define ServerInfoReport_machine_addr_tag        46
#define ServerInfoReport_db_name_list_tag        47
#define ServerInfoReport_msg_id_tag              48
#define ServerInfoReport_map_id_list_tag         49
#define ServerInfoReportListRespne_ret_code_tag  1
#define ZkServerInfo_bus_url_tag                 1
#define ZkServerInfo_tcp_url_tag                 2
#define DynLibFileInfoArray_file_list_tag        1
#define Proto_FramePkg_module_id_tag             1
#define Proto_FramePkg_msg_id_tag                2
#define Proto_FramePkg_msg_data_tag              3
#define Proto_FramePkg_disp_info_tag             4
#define Proto_FramePkg_trans_info_tag            5
#define Proto_FramePkg_store_info_tag            6
#define Proto_FramePkg_event_info_tag            7
#define Proto_FramePkg_redirect_info_tag         8
#define Proto_FramePkg_rpc_info_tag              9
#define ServerInfoReportList_server_list_tag     1

/* Struct field encoding specification for nanopb */

/* Maximum encoded size of messages (where known) */
#define Proto_DispInfo_size                      46
#define Proto_TransInfo_size                     22
#define Proto_StoreInfo_size                     17
#define Proto_EventInfo_size                     73
#define Proto_ScriptRpcResult_size               102
#define Proto_RpcInfo_size                       74
#define Proto_RedirectInfo_size                  14
#define Proto_FramePkg_size                      314
#define ServerInfoReport_size                    648
#define ServerInfoReportList_size                652
#define ServerInfoReportListRespne_size          11
#define ZkServerInfo_size                        68
#define DynLibFileInfo_size                      45
#define DynLibFileInfoArray_size                 48
#define Proto_KillAllServerNtf_size              0
#define Proto_KillAllServerRsp_size              11
#define Proto_STSBroadPlayerMsgNotify_size       52
#define Proto_STWebMsgRspNotify_size             56
#define NFEventNoneData_size                     55
#define NFEventScriptData_size                   68
#define Proto_ServerDumpInfoNtf_size             40

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FRAMEMSG_MESSAGES \


#endif

/* @@protoc_insertion_point(eof) */

#endif
