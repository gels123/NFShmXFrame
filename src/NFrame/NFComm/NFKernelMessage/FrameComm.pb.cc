// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameComm.proto

#include "FrameComm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_FrameComm_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExcelSheetInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_pbAllServerConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_pbEncryptConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_pbRedisConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_pbRouteConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_pbTableConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_wxWorkRobotText;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameComm_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExcelPbInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameComm_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_pbMysqlConfig;
}  // namespace protobuf_FrameComm_2eproto
namespace NFrame {
class tbServerMgrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tbServerMgr>
      _instance;
} _tbServerMgr_default_instance_;
class pbMysqlConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pbMysqlConfig>
      _instance;
} _pbMysqlConfig_default_instance_;
class pbRedisConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pbRedisConfig>
      _instance;
} _pbRedisConfig_default_instance_;
class pbRouteConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pbRouteConfig>
      _instance;
} _pbRouteConfig_default_instance_;
class pbPluginConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pbPluginConfig>
      _instance;
} _pbPluginConfig_default_instance_;
class pbAllServerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pbAllServerConfig>
      _instance;
} _pbAllServerConfig_default_instance_;
class pbTableConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pbTableConfig>
      _instance;
} _pbTableConfig_default_instance_;
class pbEncryptConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pbEncryptConfig>
      _instance;
} _pbEncryptConfig_default_instance_;
class pbNFServerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pbNFServerConfig>
      _instance;
} _pbNFServerConfig_default_instance_;
class wxWorkRobotTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<wxWorkRobotText>
      _instance;
} _wxWorkRobotText_default_instance_;
class wxWorkRobotHttpPostDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<wxWorkRobotHttpPost>
      _instance;
} _wxWorkRobotHttpPost_default_instance_;
class ExcelSheetInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExcelSheetInfo>
      _instance;
} _ExcelSheetInfo_default_instance_;
class ExcelPbInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExcelPbInfo>
      _instance;
} _ExcelPbInfo_default_instance_;
class ExcelParseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExcelParseInfo>
      _instance;
} _ExcelParseInfo_default_instance_;
}  // namespace NFrame
namespace protobuf_FrameComm_2eproto {
static void InitDefaultstbServerMgr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_tbServerMgr_default_instance_;
    new (ptr) ::NFrame::tbServerMgr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::tbServerMgr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tbServerMgr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstbServerMgr}, {}};

static void InitDefaultspbMysqlConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_pbMysqlConfig_default_instance_;
    new (ptr) ::NFrame::pbMysqlConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::pbMysqlConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_pbMysqlConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultspbMysqlConfig}, {
      &protobuf_FrameComm_2eproto::scc_info_pbTableConfig.base,}};

static void InitDefaultspbRedisConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_pbRedisConfig_default_instance_;
    new (ptr) ::NFrame::pbRedisConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::pbRedisConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pbRedisConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspbRedisConfig}, {}};

static void InitDefaultspbRouteConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_pbRouteConfig_default_instance_;
    new (ptr) ::NFrame::pbRouteConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::pbRouteConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pbRouteConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspbRouteConfig}, {}};

static void InitDefaultspbPluginConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_pbPluginConfig_default_instance_;
    new (ptr) ::NFrame::pbPluginConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::pbPluginConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_pbPluginConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultspbPluginConfig}, {
      &protobuf_FrameComm_2eproto::scc_info_pbAllServerConfig.base,}};

static void InitDefaultspbAllServerConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_pbAllServerConfig_default_instance_;
    new (ptr) ::NFrame::pbAllServerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::pbAllServerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pbAllServerConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspbAllServerConfig}, {}};

static void InitDefaultspbTableConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_pbTableConfig_default_instance_;
    new (ptr) ::NFrame::pbTableConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::pbTableConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pbTableConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspbTableConfig}, {}};

static void InitDefaultspbEncryptConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_pbEncryptConfig_default_instance_;
    new (ptr) ::NFrame::pbEncryptConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::pbEncryptConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pbEncryptConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspbEncryptConfig}, {}};

static void InitDefaultspbNFServerConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_pbNFServerConfig_default_instance_;
    new (ptr) ::NFrame::pbNFServerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::pbNFServerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_pbNFServerConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultspbNFServerConfig}, {
      &protobuf_FrameComm_2eproto::scc_info_pbRouteConfig.base,
      &protobuf_FrameComm_2eproto::scc_info_pbMysqlConfig.base,
      &protobuf_FrameComm_2eproto::scc_info_pbRedisConfig.base,
      &protobuf_FrameComm_2eproto::scc_info_pbEncryptConfig.base,}};

static void InitDefaultswxWorkRobotText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_wxWorkRobotText_default_instance_;
    new (ptr) ::NFrame::wxWorkRobotText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::wxWorkRobotText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_wxWorkRobotText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultswxWorkRobotText}, {}};

static void InitDefaultswxWorkRobotHttpPost() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_wxWorkRobotHttpPost_default_instance_;
    new (ptr) ::NFrame::wxWorkRobotHttpPost();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::wxWorkRobotHttpPost::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_wxWorkRobotHttpPost =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultswxWorkRobotHttpPost}, {
      &protobuf_FrameComm_2eproto::scc_info_wxWorkRobotText.base,}};

static void InitDefaultsExcelSheetInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_ExcelSheetInfo_default_instance_;
    new (ptr) ::NFrame::ExcelSheetInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::ExcelSheetInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExcelSheetInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExcelSheetInfo}, {}};

static void InitDefaultsExcelPbInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_ExcelPbInfo_default_instance_;
    new (ptr) ::NFrame::ExcelPbInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::ExcelPbInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExcelPbInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExcelPbInfo}, {
      &protobuf_FrameComm_2eproto::scc_info_ExcelSheetInfo.base,}};

static void InitDefaultsExcelParseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_ExcelParseInfo_default_instance_;
    new (ptr) ::NFrame::ExcelParseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::ExcelParseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExcelParseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExcelParseInfo}, {
      &protobuf_FrameComm_2eproto::scc_info_ExcelPbInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_tbServerMgr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pbMysqlConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pbRedisConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pbRouteConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pbPluginConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pbAllServerConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pbTableConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pbEncryptConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pbNFServerConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_wxWorkRobotText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_wxWorkRobotHttpPost.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExcelSheetInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExcelPbInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExcelParseInfo.base);
}

::google::protobuf::Metadata file_level_metadata[14];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, contract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, machine_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, bus_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, server_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, cur_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, last_login_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, last_logout_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::tbServerMgr, create_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbMysqlConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbMysqlConfig, mysqlip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbMysqlConfig, mysqlport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbMysqlConfig, mysqldbname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbMysqlConfig, mysqluser_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbMysqlConfig, mysqlpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbMysqlConfig, tbconflist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbRedisConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbRedisConfig, redisip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbRedisConfig, redisport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbRedisConfig, redispass_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbRouteConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbRouteConfig, masterip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbRouteConfig, masterport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbRouteConfig, naminghost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbRouteConfig, namingpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbRouteConfig, routeagent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbPluginConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbPluginConfig, servertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbPluginConfig, frameplugins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbPluginConfig, serverplugins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbPluginConfig, workplugins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbPluginConfig, serverlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbAllServerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbAllServerConfig, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbAllServerConfig, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbAllServerConfig, servertype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbTableConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbTableConfig, tablename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbTableConfig, tablecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbTableConfig, cache_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbEncryptConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbEncryptConfig, publicauthencryptkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbEncryptConfig, encryptpolicy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbEncryptConfig, compresspolicy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbEncryptConfig, encrypykey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, servertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, servername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, busid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, buslength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, linkmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, idlesleepus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, handlemsgnumperframe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, serveropentime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, loadprotods_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, crossserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, serverip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, serverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, externalserverip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, externalserverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, httpport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, maxconnectnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, workthreadnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, netthreadnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, security_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, websocket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, parsetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, routeconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, mysqlconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, defaultdbname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, crossdbname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, redisconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, sendemail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, sendemailpass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, sendemailurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, sendemailport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, recvemail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, wxworkdrobot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, maxonlineplayernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, heartbeattimeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, clientkeepalivetimeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, clientversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, isnotoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::pbNFServerConfig, encryptconfig_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::wxWorkRobotText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::wxWorkRobotText, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::wxWorkRobotText, mentioned_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::wxWorkRobotText, mentioned_mobile_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::wxWorkRobotHttpPost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::wxWorkRobotHttpPost, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::wxWorkRobotHttpPost, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, unique_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, multi_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, createsql_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, field_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, import_proto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, colmessagetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, add_field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, othername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, sheetmsgname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelSheetInfo, protomsgname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelPbInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelPbInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelPbInfo, sheet_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelParseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ExcelParseInfo, excel_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NFrame::tbServerMgr)},
  { 15, -1, sizeof(::NFrame::pbMysqlConfig)},
  { 26, -1, sizeof(::NFrame::pbRedisConfig)},
  { 34, -1, sizeof(::NFrame::pbRouteConfig)},
  { 44, -1, sizeof(::NFrame::pbPluginConfig)},
  { 54, -1, sizeof(::NFrame::pbAllServerConfig)},
  { 62, -1, sizeof(::NFrame::pbTableConfig)},
  { 70, -1, sizeof(::NFrame::pbEncryptConfig)},
  { 79, -1, sizeof(::NFrame::pbNFServerConfig)},
  { 124, -1, sizeof(::NFrame::wxWorkRobotText)},
  { 132, -1, sizeof(::NFrame::wxWorkRobotHttpPost)},
  { 139, -1, sizeof(::NFrame::ExcelSheetInfo)},
  { 156, -1, sizeof(::NFrame::ExcelPbInfo)},
  { 163, -1, sizeof(::NFrame::ExcelParseInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_tbServerMgr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_pbMysqlConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_pbRedisConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_pbRouteConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_pbPluginConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_pbAllServerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_pbTableConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_pbEncryptConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_pbNFServerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_wxWorkRobotText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_wxWorkRobotHttpPost_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_ExcelSheetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_ExcelPbInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_ExcelParseInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FrameComm.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017FrameComm.proto\022\006NFrame\032\014nanopb.proto\032"
      "\017FrameEnum.proto\"\327\001\n\013tbServerMgr\022\n\n\002id\030\001"
      " \001(\004\022\020\n\010contract\030\002 \001(\t\022\024\n\014machine_addr\030\003"
      " \001(\t\022\n\n\002ip\030\004 \001(\t\022\020\n\010bus_name\030\005 \001(\t\022\023\n\013se"
      "rver_desc\030\006 \001(\t\022\021\n\tcur_count\030\007 \001(\r\022\027\n\017la"
      "st_login_time\030\010 \001(\004\022\030\n\020last_logout_time\030"
      "\t \001(\004\022\023\n\013create_time\030\n \001(\004:\006\222\?\003\230\002\001\"\245\001\n\rp"
      "bMysqlConfig\022\017\n\007MysqlIp\030\001 \001(\t\022\021\n\tMysqlPo"
      "rt\030\002 \001(\r\022\023\n\013MysqlDbName\030\003 \001(\t\022\021\n\tMysqlUs"
      "er\030\004 \001(\t\022\025\n\rMysqlPassword\030\005 \001(\t\022)\n\nTBCon"
      "fList\030\006 \003(\0132\025.NFrame.pbTableConfig:\006\222\?\003\230"
      "\002\001\"N\n\rpbRedisConfig\022\017\n\007RedisIp\030\001 \001(\t\022\021\n\t"
      "RedisPort\030\002 \001(\r\022\021\n\tRedisPass\030\003 \001(\t:\006\222\?\003\230"
      "\002\001\"y\n\rpbRouteConfig\022\020\n\010MasterIp\030\001 \001(\t\022\022\n"
      "\nMasterPort\030\002 \001(\r\022\022\n\nNamingHost\030\003 \001(\t\022\022\n"
      "\nNamingPath\030\004 \001(\t\022\022\n\nRouteAgent\030\005 \001(\t:\006\222"
      "\?\003\230\002\001\"\235\001\n\016pbPluginConfig\022\022\n\nServerType\030\001"
      " \001(\r\022\024\n\014FramePlugins\030\002 \003(\t\022\025\n\rServerPlug"
      "ins\030\003 \003(\t\022\023\n\013WorkPlugins\030\004 \003(\t\022-\n\nServer"
      "List\030\005 \003(\0132\031.NFrame.pbAllServerConfig:\006\222"
      "\?\003\230\002\001\"K\n\021pbAllServerConfig\022\016\n\006Server\030\001 \001"
      "(\t\022\n\n\002ID\030\002 \001(\t\022\022\n\nServerType\030\003 \001(\r:\006\222\?\003\230"
      "\002\001\"M\n\rpbTableConfig\022\021\n\tTableName\030\001 \001(\t\022\022"
      "\n\nTableCount\030\002 \001(\r\022\r\n\005Cache\030\003 \001(\010:\006\222\?\003\230\002"
      "\001\"z\n\017pbEncryptConfig\022\034\n\024PublicAuthEncryp"
      "tkey\030\001 \001(\t\022\025\n\rEncryptPolicy\030\n \001(\r\022\026\n\016Com"
      "pressPolicy\030\013 \001(\r\022\022\n\nEncrypyKey\030\014 \001(\t:\006\222"
      "\?\003\230\002\001\"\324\007\n\020pbNFServerConfig\022\020\n\010ServerId\030\001"
      " \001(\t\022\022\n\nServerType\030\002 \001(\r\022\022\n\nServerName\030\003"
      " \001(\t\022\r\n\005BusId\030\004 \001(\r\022\021\n\tBusLength\030\005 \001(\r\022\020"
      "\n\010LinkMode\030\007 \001(\t\022\013\n\003Url\030\010 \001(\t\022\023\n\013IdleSle"
      "epUS\030\t \001(\r\022\034\n\024HandleMsgNumPerFrame\030\n \001(\r"
      "\022\026\n\016ServerOpenTime\030\013 \001(\004\022\023\n\013LoadProtoDs\030"
      "\014 \001(\t\022\023\n\013CrossServer\030\r \001(\010\022\020\n\010ServerIp\030\024"
      " \001(\t\022\022\n\nServerPort\030\025 \001(\r\022\030\n\020ExternalServ"
      "erIp\030\026 \001(\t\022\032\n\022ExternalServerPort\030\027 \001(\r\022\020"
      "\n\010HttpPort\030\030 \001(\r\022\025\n\rMaxConnectNum\030\031 \001(\r\022"
      "\025\n\rWorkThreadNum\030\032 \001(\r\022\024\n\014NetThreadNum\030\033"
      " \001(\r\022\020\n\010Security\030\034 \001(\010\022\021\n\tWebSocket\030\035 \001("
      "\010\022\021\n\tParseType\030\036 \001(\r\022*\n\013RouteConfig\0302 \001("
      "\0132\025.NFrame.pbRouteConfig\022*\n\013MysqlConfig\030"
      "F \001(\0132\025.NFrame.pbMysqlConfig\022\025\n\rDefaultD"
      "BName\030K \001(\t\022\023\n\013CrossDBName\030L \001(\t\022*\n\013Redi"
      "sConfig\030P \001(\0132\025.NFrame.pbRedisConfig\022\021\n\t"
      "sendEmail\030[ \001(\t\022\025\n\rsendEmailPass\030\\ \001(\t\022\024"
      "\n\014sendEmailUrl\030] \001(\t\022\025\n\rsendEmailPort\030^ "
      "\001(\t\022\021\n\trecvEmail\030_ \001(\t\022\024\n\014wxWorkdRobot\030`"
      " \001(\t\022\032\n\022MaxOnlinePlayerNum\030d \001(\r\022\030\n\020Hear"
      "tBeatTimeout\030e \001(\r\022\036\n\026ClientKeepAliveTim"
      "eout\030f \001(\r\022\025\n\rClientVersion\030g \001(\r\022\021\n\tIsN"
      "oToken\030h \001(\010\022.\n\rEncryptConfig\030n \001(\0132\027.NF"
      "rame.pbEncryptConfig:\006\222\?\003\230\002\001\"a\n\017wxWorkRo"
      "botText\022\017\n\007content\030\001 \001(\t\022\026\n\016mentioned_li"
      "st\030\002 \003(\t\022\035\n\025mentioned_mobile_list\030\003 \003(\t:"
      "\006\222\?\003\230\002\001\"U\n\023wxWorkRobotHttpPost\022\017\n\007msgtyp"
      "e\030\001 \001(\t\022%\n\004text\030\002 \001(\0132\027.NFrame.wxWorkRob"
      "otText:\006\222\?\003\230\002\001\"\212\002\n\016ExcelSheetInfo\022\014\n\004nam"
      "e\030\001 \001(\t\022\024\n\014unique_index\030\002 \001(\t\022\023\n\013multi_i"
      "ndex\030\003 \001(\t\022\020\n\010relation\030\004 \001(\t\022\021\n\tcreateSq"
      "l\030\005 \001(\010\022\022\n\nfield_enum\030\006 \001(\t\022\024\n\014import_pr"
      "oto\030\007 \001(\t\022\026\n\016colMessageType\030\010 \001(\t\022\021\n\tadd"
      "_field\030\t \001(\t\022\021\n\totherName\030\n \001(\t\022\024\n\014sheet"
      "MsgName\030\013 \001(\t\022\024\n\014protoMsgName\030\014 \001(\t:\006\222\?\003"
      "\230\002\001\"m\n\013ExcelPbInfo\022\014\n\004name\030\001 \001(\t\022H\n\005shee"
      "t\030\002 \003(\0132\026.NFrame.ExcelSheetInfoB!\222\?\024\372\001\021S"
      "TL_UNORDERED_MAP\222\?\007\212\002\004name:\006\222\?\003\230\002\001\"_\n\016Ex"
      "celParseInfo\022E\n\005excel\030\001 \003(\0132\023.NFrame.Exc"
      "elPbInfoB!\222\?\024\372\001\021STL_UNORDERED_MAP\222\?\007\212\002\004n"
      "ame:\006\222\?\003\230\002\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2739);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrameComm.proto", &protobuf_RegisterTypes);
  ::protobuf_nanopb_2eproto::AddDescriptors();
  ::protobuf_FrameEnum_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrameComm_2eproto
namespace NFrame {

// ===================================================================

void tbServerMgr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tbServerMgr::kIdFieldNumber;
const int tbServerMgr::kContractFieldNumber;
const int tbServerMgr::kMachineAddrFieldNumber;
const int tbServerMgr::kIpFieldNumber;
const int tbServerMgr::kBusNameFieldNumber;
const int tbServerMgr::kServerDescFieldNumber;
const int tbServerMgr::kCurCountFieldNumber;
const int tbServerMgr::kLastLoginTimeFieldNumber;
const int tbServerMgr::kLastLogoutTimeFieldNumber;
const int tbServerMgr::kCreateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tbServerMgr::tbServerMgr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_tbServerMgr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.tbServerMgr)
}
tbServerMgr::tbServerMgr(const tbServerMgr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contract().size() > 0) {
    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  machine_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machine_addr().size() > 0) {
    machine_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_addr_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  bus_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bus_name().size() > 0) {
    bus_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bus_name_);
  }
  server_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_desc().size() > 0) {
    server_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_desc_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_count_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cur_count_));
  // @@protoc_insertion_point(copy_constructor:NFrame.tbServerMgr)
}

void tbServerMgr::SharedCtor() {
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bus_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cur_count_));
}

tbServerMgr::~tbServerMgr() {
  // @@protoc_insertion_point(destructor:NFrame.tbServerMgr)
  SharedDtor();
}

void tbServerMgr::SharedDtor() {
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bus_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tbServerMgr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tbServerMgr::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tbServerMgr& tbServerMgr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_tbServerMgr.base);
  return *internal_default_instance();
}


void tbServerMgr::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.tbServerMgr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bus_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cur_count_));
  _internal_metadata_.Clear();
}

bool tbServerMgr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.tbServerMgr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contract = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), static_cast<int>(this->contract().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.tbServerMgr.contract"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string machine_addr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machine_addr().data(), static_cast<int>(this->machine_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.tbServerMgr.machine_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.tbServerMgr.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bus_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bus_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bus_name().data(), static_cast<int>(this->bus_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.tbServerMgr.bus_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_desc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_desc().data(), static_cast<int>(this->server_desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.tbServerMgr.server_desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 last_login_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_login_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 last_logout_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_logout_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 create_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.tbServerMgr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.tbServerMgr)
  return false;
#undef DO_
}

void tbServerMgr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.tbServerMgr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), static_cast<int>(this->contract().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.tbServerMgr.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // string machine_addr = 3;
  if (this->machine_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_addr().data(), static_cast<int>(this->machine_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.tbServerMgr.machine_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->machine_addr(), output);
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.tbServerMgr.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ip(), output);
  }

  // string bus_name = 5;
  if (this->bus_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bus_name().data(), static_cast<int>(this->bus_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.tbServerMgr.bus_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bus_name(), output);
  }

  // string server_desc = 6;
  if (this->server_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_desc().data(), static_cast<int>(this->server_desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.tbServerMgr.server_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->server_desc(), output);
  }

  // uint32 cur_count = 7;
  if (this->cur_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->cur_count(), output);
  }

  // uint64 last_login_time = 8;
  if (this->last_login_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->last_login_time(), output);
  }

  // uint64 last_logout_time = 9;
  if (this->last_logout_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->last_logout_time(), output);
  }

  // uint64 create_time = 10;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->create_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.tbServerMgr)
}

::google::protobuf::uint8* tbServerMgr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.tbServerMgr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), static_cast<int>(this->contract().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.tbServerMgr.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // string machine_addr = 3;
  if (this->machine_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_addr().data(), static_cast<int>(this->machine_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.tbServerMgr.machine_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->machine_addr(), target);
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.tbServerMgr.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ip(), target);
  }

  // string bus_name = 5;
  if (this->bus_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bus_name().data(), static_cast<int>(this->bus_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.tbServerMgr.bus_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bus_name(), target);
  }

  // string server_desc = 6;
  if (this->server_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_desc().data(), static_cast<int>(this->server_desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.tbServerMgr.server_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->server_desc(), target);
  }

  // uint32 cur_count = 7;
  if (this->cur_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->cur_count(), target);
  }

  // uint64 last_login_time = 8;
  if (this->last_login_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->last_login_time(), target);
  }

  // uint64 last_logout_time = 9;
  if (this->last_logout_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->last_logout_time(), target);
  }

  // uint64 create_time = 10;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->create_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.tbServerMgr)
  return target;
}

size_t tbServerMgr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.tbServerMgr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // string machine_addr = 3;
  if (this->machine_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_addr());
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string bus_name = 5;
  if (this->bus_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bus_name());
  }

  // string server_desc = 6;
  if (this->server_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_desc());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 last_login_time = 8;
  if (this->last_login_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->last_login_time());
  }

  // uint64 last_logout_time = 9;
  if (this->last_logout_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->last_logout_time());
  }

  // uint64 create_time = 10;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());
  }

  // uint32 cur_count = 7;
  if (this->cur_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tbServerMgr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.tbServerMgr)
  GOOGLE_DCHECK_NE(&from, this);
  const tbServerMgr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tbServerMgr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.tbServerMgr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.tbServerMgr)
    MergeFrom(*source);
  }
}

void tbServerMgr::MergeFrom(const tbServerMgr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.tbServerMgr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.machine_addr().size() > 0) {

    machine_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_addr_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.bus_name().size() > 0) {

    bus_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bus_name_);
  }
  if (from.server_desc().size() > 0) {

    server_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_desc_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.last_login_time() != 0) {
    set_last_login_time(from.last_login_time());
  }
  if (from.last_logout_time() != 0) {
    set_last_logout_time(from.last_logout_time());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.cur_count() != 0) {
    set_cur_count(from.cur_count());
  }
}

void tbServerMgr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.tbServerMgr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tbServerMgr::CopyFrom(const tbServerMgr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.tbServerMgr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tbServerMgr::IsInitialized() const {
  return true;
}

void tbServerMgr::Swap(tbServerMgr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tbServerMgr::InternalSwap(tbServerMgr* other) {
  using std::swap;
  contract_.Swap(&other->contract_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_addr_.Swap(&other->machine_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bus_name_.Swap(&other->bus_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_desc_.Swap(&other->server_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(last_login_time_, other->last_login_time_);
  swap(last_logout_time_, other->last_logout_time_);
  swap(create_time_, other->create_time_);
  swap(cur_count_, other->cur_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tbServerMgr::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pbMysqlConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbMysqlConfig::kMysqlIpFieldNumber;
const int pbMysqlConfig::kMysqlPortFieldNumber;
const int pbMysqlConfig::kMysqlDbNameFieldNumber;
const int pbMysqlConfig::kMysqlUserFieldNumber;
const int pbMysqlConfig::kMysqlPasswordFieldNumber;
const int pbMysqlConfig::kTBConfListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbMysqlConfig::pbMysqlConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_pbMysqlConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.pbMysqlConfig)
}
pbMysqlConfig::pbMysqlConfig(const pbMysqlConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tbconflist_(from.tbconflist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mysqlip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mysqlip().size() > 0) {
    mysqlip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mysqlip_);
  }
  mysqldbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mysqldbname().size() > 0) {
    mysqldbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mysqldbname_);
  }
  mysqluser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mysqluser().size() > 0) {
    mysqluser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mysqluser_);
  }
  mysqlpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mysqlpassword().size() > 0) {
    mysqlpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mysqlpassword_);
  }
  mysqlport_ = from.mysqlport_;
  // @@protoc_insertion_point(copy_constructor:NFrame.pbMysqlConfig)
}

void pbMysqlConfig::SharedCtor() {
  mysqlip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqldbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqluser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqlpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqlport_ = 0u;
}

pbMysqlConfig::~pbMysqlConfig() {
  // @@protoc_insertion_point(destructor:NFrame.pbMysqlConfig)
  SharedDtor();
}

void pbMysqlConfig::SharedDtor() {
  mysqlip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqldbname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqluser_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqlpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pbMysqlConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pbMysqlConfig::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pbMysqlConfig& pbMysqlConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_pbMysqlConfig.base);
  return *internal_default_instance();
}


void pbMysqlConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.pbMysqlConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tbconflist_.Clear();
  mysqlip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqldbname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqluser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqlpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mysqlport_ = 0u;
  _internal_metadata_.Clear();
}

bool pbMysqlConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.pbMysqlConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string MysqlIp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mysqlip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mysqlip().data(), static_cast<int>(this->mysqlip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbMysqlConfig.MysqlIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MysqlPort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mysqlport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MysqlDbName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mysqldbname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mysqldbname().data(), static_cast<int>(this->mysqldbname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbMysqlConfig.MysqlDbName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MysqlUser = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mysqluser()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mysqluser().data(), static_cast<int>(this->mysqluser().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbMysqlConfig.MysqlUser"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MysqlPassword = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mysqlpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mysqlpassword().data(), static_cast<int>(this->mysqlpassword().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbMysqlConfig.MysqlPassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFrame.pbTableConfig TBConfList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tbconflist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.pbMysqlConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.pbMysqlConfig)
  return false;
#undef DO_
}

void pbMysqlConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.pbMysqlConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string MysqlIp = 1;
  if (this->mysqlip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mysqlip().data(), static_cast<int>(this->mysqlip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbMysqlConfig.MysqlIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mysqlip(), output);
  }

  // uint32 MysqlPort = 2;
  if (this->mysqlport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mysqlport(), output);
  }

  // string MysqlDbName = 3;
  if (this->mysqldbname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mysqldbname().data(), static_cast<int>(this->mysqldbname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbMysqlConfig.MysqlDbName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mysqldbname(), output);
  }

  // string MysqlUser = 4;
  if (this->mysqluser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mysqluser().data(), static_cast<int>(this->mysqluser().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbMysqlConfig.MysqlUser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mysqluser(), output);
  }

  // string MysqlPassword = 5;
  if (this->mysqlpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mysqlpassword().data(), static_cast<int>(this->mysqlpassword().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbMysqlConfig.MysqlPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mysqlpassword(), output);
  }

  // repeated .NFrame.pbTableConfig TBConfList = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tbconflist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->tbconflist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.pbMysqlConfig)
}

::google::protobuf::uint8* pbMysqlConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.pbMysqlConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string MysqlIp = 1;
  if (this->mysqlip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mysqlip().data(), static_cast<int>(this->mysqlip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbMysqlConfig.MysqlIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mysqlip(), target);
  }

  // uint32 MysqlPort = 2;
  if (this->mysqlport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mysqlport(), target);
  }

  // string MysqlDbName = 3;
  if (this->mysqldbname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mysqldbname().data(), static_cast<int>(this->mysqldbname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbMysqlConfig.MysqlDbName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mysqldbname(), target);
  }

  // string MysqlUser = 4;
  if (this->mysqluser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mysqluser().data(), static_cast<int>(this->mysqluser().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbMysqlConfig.MysqlUser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mysqluser(), target);
  }

  // string MysqlPassword = 5;
  if (this->mysqlpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mysqlpassword().data(), static_cast<int>(this->mysqlpassword().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbMysqlConfig.MysqlPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mysqlpassword(), target);
  }

  // repeated .NFrame.pbTableConfig TBConfList = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tbconflist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->tbconflist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.pbMysqlConfig)
  return target;
}

size_t pbMysqlConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.pbMysqlConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFrame.pbTableConfig TBConfList = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->tbconflist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tbconflist(static_cast<int>(i)));
    }
  }

  // string MysqlIp = 1;
  if (this->mysqlip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mysqlip());
  }

  // string MysqlDbName = 3;
  if (this->mysqldbname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mysqldbname());
  }

  // string MysqlUser = 4;
  if (this->mysqluser().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mysqluser());
  }

  // string MysqlPassword = 5;
  if (this->mysqlpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mysqlpassword());
  }

  // uint32 MysqlPort = 2;
  if (this->mysqlport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mysqlport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pbMysqlConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.pbMysqlConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const pbMysqlConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pbMysqlConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.pbMysqlConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.pbMysqlConfig)
    MergeFrom(*source);
  }
}

void pbMysqlConfig::MergeFrom(const pbMysqlConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.pbMysqlConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tbconflist_.MergeFrom(from.tbconflist_);
  if (from.mysqlip().size() > 0) {

    mysqlip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mysqlip_);
  }
  if (from.mysqldbname().size() > 0) {

    mysqldbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mysqldbname_);
  }
  if (from.mysqluser().size() > 0) {

    mysqluser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mysqluser_);
  }
  if (from.mysqlpassword().size() > 0) {

    mysqlpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mysqlpassword_);
  }
  if (from.mysqlport() != 0) {
    set_mysqlport(from.mysqlport());
  }
}

void pbMysqlConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.pbMysqlConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbMysqlConfig::CopyFrom(const pbMysqlConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.pbMysqlConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbMysqlConfig::IsInitialized() const {
  return true;
}

void pbMysqlConfig::Swap(pbMysqlConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbMysqlConfig::InternalSwap(pbMysqlConfig* other) {
  using std::swap;
  CastToBase(&tbconflist_)->InternalSwap(CastToBase(&other->tbconflist_));
  mysqlip_.Swap(&other->mysqlip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mysqldbname_.Swap(&other->mysqldbname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mysqluser_.Swap(&other->mysqluser_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mysqlpassword_.Swap(&other->mysqlpassword_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mysqlport_, other->mysqlport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pbMysqlConfig::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pbRedisConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbRedisConfig::kRedisIpFieldNumber;
const int pbRedisConfig::kRedisPortFieldNumber;
const int pbRedisConfig::kRedisPassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbRedisConfig::pbRedisConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_pbRedisConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.pbRedisConfig)
}
pbRedisConfig::pbRedisConfig(const pbRedisConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redisip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.redisip().size() > 0) {
    redisip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redisip_);
  }
  redispass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.redispass().size() > 0) {
    redispass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redispass_);
  }
  redisport_ = from.redisport_;
  // @@protoc_insertion_point(copy_constructor:NFrame.pbRedisConfig)
}

void pbRedisConfig::SharedCtor() {
  redisip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redispass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redisport_ = 0u;
}

pbRedisConfig::~pbRedisConfig() {
  // @@protoc_insertion_point(destructor:NFrame.pbRedisConfig)
  SharedDtor();
}

void pbRedisConfig::SharedDtor() {
  redisip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redispass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pbRedisConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pbRedisConfig::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pbRedisConfig& pbRedisConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_pbRedisConfig.base);
  return *internal_default_instance();
}


void pbRedisConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.pbRedisConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  redisip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redispass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redisport_ = 0u;
  _internal_metadata_.Clear();
}

bool pbRedisConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.pbRedisConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string RedisIp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redisip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->redisip().data(), static_cast<int>(this->redisip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbRedisConfig.RedisIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RedisPort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &redisport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RedisPass = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redispass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->redispass().data(), static_cast<int>(this->redispass().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbRedisConfig.RedisPass"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.pbRedisConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.pbRedisConfig)
  return false;
#undef DO_
}

void pbRedisConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.pbRedisConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RedisIp = 1;
  if (this->redisip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redisip().data(), static_cast<int>(this->redisip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRedisConfig.RedisIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->redisip(), output);
  }

  // uint32 RedisPort = 2;
  if (this->redisport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->redisport(), output);
  }

  // string RedisPass = 3;
  if (this->redispass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redispass().data(), static_cast<int>(this->redispass().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRedisConfig.RedisPass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->redispass(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.pbRedisConfig)
}

::google::protobuf::uint8* pbRedisConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.pbRedisConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RedisIp = 1;
  if (this->redisip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redisip().data(), static_cast<int>(this->redisip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRedisConfig.RedisIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->redisip(), target);
  }

  // uint32 RedisPort = 2;
  if (this->redisport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->redisport(), target);
  }

  // string RedisPass = 3;
  if (this->redispass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redispass().data(), static_cast<int>(this->redispass().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRedisConfig.RedisPass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->redispass(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.pbRedisConfig)
  return target;
}

size_t pbRedisConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.pbRedisConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string RedisIp = 1;
  if (this->redisip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redisip());
  }

  // string RedisPass = 3;
  if (this->redispass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redispass());
  }

  // uint32 RedisPort = 2;
  if (this->redisport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->redisport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pbRedisConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.pbRedisConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const pbRedisConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pbRedisConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.pbRedisConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.pbRedisConfig)
    MergeFrom(*source);
  }
}

void pbRedisConfig::MergeFrom(const pbRedisConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.pbRedisConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.redisip().size() > 0) {

    redisip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redisip_);
  }
  if (from.redispass().size() > 0) {

    redispass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redispass_);
  }
  if (from.redisport() != 0) {
    set_redisport(from.redisport());
  }
}

void pbRedisConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.pbRedisConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbRedisConfig::CopyFrom(const pbRedisConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.pbRedisConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbRedisConfig::IsInitialized() const {
  return true;
}

void pbRedisConfig::Swap(pbRedisConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbRedisConfig::InternalSwap(pbRedisConfig* other) {
  using std::swap;
  redisip_.Swap(&other->redisip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redispass_.Swap(&other->redispass_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(redisport_, other->redisport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pbRedisConfig::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pbRouteConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbRouteConfig::kMasterIpFieldNumber;
const int pbRouteConfig::kMasterPortFieldNumber;
const int pbRouteConfig::kNamingHostFieldNumber;
const int pbRouteConfig::kNamingPathFieldNumber;
const int pbRouteConfig::kRouteAgentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbRouteConfig::pbRouteConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_pbRouteConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.pbRouteConfig)
}
pbRouteConfig::pbRouteConfig(const pbRouteConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  masterip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.masterip().size() > 0) {
    masterip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.masterip_);
  }
  naminghost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.naminghost().size() > 0) {
    naminghost_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.naminghost_);
  }
  namingpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.namingpath().size() > 0) {
    namingpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namingpath_);
  }
  routeagent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.routeagent().size() > 0) {
    routeagent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routeagent_);
  }
  masterport_ = from.masterport_;
  // @@protoc_insertion_point(copy_constructor:NFrame.pbRouteConfig)
}

void pbRouteConfig::SharedCtor() {
  masterip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  naminghost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namingpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routeagent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  masterport_ = 0u;
}

pbRouteConfig::~pbRouteConfig() {
  // @@protoc_insertion_point(destructor:NFrame.pbRouteConfig)
  SharedDtor();
}

void pbRouteConfig::SharedDtor() {
  masterip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  naminghost_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namingpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routeagent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pbRouteConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pbRouteConfig::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pbRouteConfig& pbRouteConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_pbRouteConfig.base);
  return *internal_default_instance();
}


void pbRouteConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.pbRouteConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  masterip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  naminghost_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namingpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routeagent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  masterport_ = 0u;
  _internal_metadata_.Clear();
}

bool pbRouteConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.pbRouteConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string MasterIp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_masterip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->masterip().data(), static_cast<int>(this->masterip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbRouteConfig.MasterIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MasterPort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &masterport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NamingHost = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_naminghost()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->naminghost().data(), static_cast<int>(this->naminghost().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbRouteConfig.NamingHost"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NamingPath = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namingpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namingpath().data(), static_cast<int>(this->namingpath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbRouteConfig.NamingPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RouteAgent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_routeagent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->routeagent().data(), static_cast<int>(this->routeagent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbRouteConfig.RouteAgent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.pbRouteConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.pbRouteConfig)
  return false;
#undef DO_
}

void pbRouteConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.pbRouteConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string MasterIp = 1;
  if (this->masterip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->masterip().data(), static_cast<int>(this->masterip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRouteConfig.MasterIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->masterip(), output);
  }

  // uint32 MasterPort = 2;
  if (this->masterport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->masterport(), output);
  }

  // string NamingHost = 3;
  if (this->naminghost().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->naminghost().data(), static_cast<int>(this->naminghost().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRouteConfig.NamingHost");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->naminghost(), output);
  }

  // string NamingPath = 4;
  if (this->namingpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namingpath().data(), static_cast<int>(this->namingpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRouteConfig.NamingPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->namingpath(), output);
  }

  // string RouteAgent = 5;
  if (this->routeagent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->routeagent().data(), static_cast<int>(this->routeagent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRouteConfig.RouteAgent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->routeagent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.pbRouteConfig)
}

::google::protobuf::uint8* pbRouteConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.pbRouteConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string MasterIp = 1;
  if (this->masterip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->masterip().data(), static_cast<int>(this->masterip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRouteConfig.MasterIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->masterip(), target);
  }

  // uint32 MasterPort = 2;
  if (this->masterport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->masterport(), target);
  }

  // string NamingHost = 3;
  if (this->naminghost().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->naminghost().data(), static_cast<int>(this->naminghost().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRouteConfig.NamingHost");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->naminghost(), target);
  }

  // string NamingPath = 4;
  if (this->namingpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namingpath().data(), static_cast<int>(this->namingpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRouteConfig.NamingPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->namingpath(), target);
  }

  // string RouteAgent = 5;
  if (this->routeagent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->routeagent().data(), static_cast<int>(this->routeagent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbRouteConfig.RouteAgent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->routeagent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.pbRouteConfig)
  return target;
}

size_t pbRouteConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.pbRouteConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string MasterIp = 1;
  if (this->masterip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->masterip());
  }

  // string NamingHost = 3;
  if (this->naminghost().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->naminghost());
  }

  // string NamingPath = 4;
  if (this->namingpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->namingpath());
  }

  // string RouteAgent = 5;
  if (this->routeagent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->routeagent());
  }

  // uint32 MasterPort = 2;
  if (this->masterport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->masterport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pbRouteConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.pbRouteConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const pbRouteConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pbRouteConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.pbRouteConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.pbRouteConfig)
    MergeFrom(*source);
  }
}

void pbRouteConfig::MergeFrom(const pbRouteConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.pbRouteConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.masterip().size() > 0) {

    masterip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.masterip_);
  }
  if (from.naminghost().size() > 0) {

    naminghost_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.naminghost_);
  }
  if (from.namingpath().size() > 0) {

    namingpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namingpath_);
  }
  if (from.routeagent().size() > 0) {

    routeagent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routeagent_);
  }
  if (from.masterport() != 0) {
    set_masterport(from.masterport());
  }
}

void pbRouteConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.pbRouteConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbRouteConfig::CopyFrom(const pbRouteConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.pbRouteConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbRouteConfig::IsInitialized() const {
  return true;
}

void pbRouteConfig::Swap(pbRouteConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbRouteConfig::InternalSwap(pbRouteConfig* other) {
  using std::swap;
  masterip_.Swap(&other->masterip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  naminghost_.Swap(&other->naminghost_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  namingpath_.Swap(&other->namingpath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  routeagent_.Swap(&other->routeagent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(masterport_, other->masterport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pbRouteConfig::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pbPluginConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbPluginConfig::kServerTypeFieldNumber;
const int pbPluginConfig::kFramePluginsFieldNumber;
const int pbPluginConfig::kServerPluginsFieldNumber;
const int pbPluginConfig::kWorkPluginsFieldNumber;
const int pbPluginConfig::kServerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbPluginConfig::pbPluginConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_pbPluginConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.pbPluginConfig)
}
pbPluginConfig::pbPluginConfig(const pbPluginConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      frameplugins_(from.frameplugins_),
      serverplugins_(from.serverplugins_),
      workplugins_(from.workplugins_),
      serverlist_(from.serverlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servertype_ = from.servertype_;
  // @@protoc_insertion_point(copy_constructor:NFrame.pbPluginConfig)
}

void pbPluginConfig::SharedCtor() {
  servertype_ = 0u;
}

pbPluginConfig::~pbPluginConfig() {
  // @@protoc_insertion_point(destructor:NFrame.pbPluginConfig)
  SharedDtor();
}

void pbPluginConfig::SharedDtor() {
}

void pbPluginConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pbPluginConfig::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pbPluginConfig& pbPluginConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_pbPluginConfig.base);
  return *internal_default_instance();
}


void pbPluginConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.pbPluginConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frameplugins_.Clear();
  serverplugins_.Clear();
  workplugins_.Clear();
  serverlist_.Clear();
  servertype_ = 0u;
  _internal_metadata_.Clear();
}

bool pbPluginConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.pbPluginConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ServerType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string FramePlugins = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_frameplugins()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->frameplugins(this->frameplugins_size() - 1).data(),
            static_cast<int>(this->frameplugins(this->frameplugins_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbPluginConfig.FramePlugins"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ServerPlugins = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_serverplugins()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverplugins(this->serverplugins_size() - 1).data(),
            static_cast<int>(this->serverplugins(this->serverplugins_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbPluginConfig.ServerPlugins"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string WorkPlugins = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_workplugins()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->workplugins(this->workplugins_size() - 1).data(),
            static_cast<int>(this->workplugins(this->workplugins_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbPluginConfig.WorkPlugins"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFrame.pbAllServerConfig ServerList = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_serverlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.pbPluginConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.pbPluginConfig)
  return false;
#undef DO_
}

void pbPluginConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.pbPluginConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ServerType = 1;
  if (this->servertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->servertype(), output);
  }

  // repeated string FramePlugins = 2;
  for (int i = 0, n = this->frameplugins_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frameplugins(i).data(), static_cast<int>(this->frameplugins(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbPluginConfig.FramePlugins");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->frameplugins(i), output);
  }

  // repeated string ServerPlugins = 3;
  for (int i = 0, n = this->serverplugins_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverplugins(i).data(), static_cast<int>(this->serverplugins(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbPluginConfig.ServerPlugins");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->serverplugins(i), output);
  }

  // repeated string WorkPlugins = 4;
  for (int i = 0, n = this->workplugins_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workplugins(i).data(), static_cast<int>(this->workplugins(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbPluginConfig.WorkPlugins");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->workplugins(i), output);
  }

  // repeated .NFrame.pbAllServerConfig ServerList = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->serverlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->serverlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.pbPluginConfig)
}

::google::protobuf::uint8* pbPluginConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.pbPluginConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ServerType = 1;
  if (this->servertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->servertype(), target);
  }

  // repeated string FramePlugins = 2;
  for (int i = 0, n = this->frameplugins_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frameplugins(i).data(), static_cast<int>(this->frameplugins(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbPluginConfig.FramePlugins");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->frameplugins(i), target);
  }

  // repeated string ServerPlugins = 3;
  for (int i = 0, n = this->serverplugins_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverplugins(i).data(), static_cast<int>(this->serverplugins(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbPluginConfig.ServerPlugins");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->serverplugins(i), target);
  }

  // repeated string WorkPlugins = 4;
  for (int i = 0, n = this->workplugins_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workplugins(i).data(), static_cast<int>(this->workplugins(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbPluginConfig.WorkPlugins");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->workplugins(i), target);
  }

  // repeated .NFrame.pbAllServerConfig ServerList = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->serverlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->serverlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.pbPluginConfig)
  return target;
}

size_t pbPluginConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.pbPluginConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string FramePlugins = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->frameplugins_size());
  for (int i = 0, n = this->frameplugins_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->frameplugins(i));
  }

  // repeated string ServerPlugins = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->serverplugins_size());
  for (int i = 0, n = this->serverplugins_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->serverplugins(i));
  }

  // repeated string WorkPlugins = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->workplugins_size());
  for (int i = 0, n = this->workplugins_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->workplugins(i));
  }

  // repeated .NFrame.pbAllServerConfig ServerList = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->serverlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->serverlist(static_cast<int>(i)));
    }
  }

  // uint32 ServerType = 1;
  if (this->servertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->servertype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pbPluginConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.pbPluginConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const pbPluginConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pbPluginConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.pbPluginConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.pbPluginConfig)
    MergeFrom(*source);
  }
}

void pbPluginConfig::MergeFrom(const pbPluginConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.pbPluginConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frameplugins_.MergeFrom(from.frameplugins_);
  serverplugins_.MergeFrom(from.serverplugins_);
  workplugins_.MergeFrom(from.workplugins_);
  serverlist_.MergeFrom(from.serverlist_);
  if (from.servertype() != 0) {
    set_servertype(from.servertype());
  }
}

void pbPluginConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.pbPluginConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbPluginConfig::CopyFrom(const pbPluginConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.pbPluginConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbPluginConfig::IsInitialized() const {
  return true;
}

void pbPluginConfig::Swap(pbPluginConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbPluginConfig::InternalSwap(pbPluginConfig* other) {
  using std::swap;
  frameplugins_.InternalSwap(CastToBase(&other->frameplugins_));
  serverplugins_.InternalSwap(CastToBase(&other->serverplugins_));
  workplugins_.InternalSwap(CastToBase(&other->workplugins_));
  CastToBase(&serverlist_)->InternalSwap(CastToBase(&other->serverlist_));
  swap(servertype_, other->servertype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pbPluginConfig::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pbAllServerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbAllServerConfig::kServerFieldNumber;
const int pbAllServerConfig::kIDFieldNumber;
const int pbAllServerConfig::kServerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbAllServerConfig::pbAllServerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_pbAllServerConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.pbAllServerConfig)
}
pbAllServerConfig::pbAllServerConfig(const pbAllServerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  servertype_ = from.servertype_;
  // @@protoc_insertion_point(copy_constructor:NFrame.pbAllServerConfig)
}

void pbAllServerConfig::SharedCtor() {
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servertype_ = 0u;
}

pbAllServerConfig::~pbAllServerConfig() {
  // @@protoc_insertion_point(destructor:NFrame.pbAllServerConfig)
  SharedDtor();
}

void pbAllServerConfig::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pbAllServerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pbAllServerConfig::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pbAllServerConfig& pbAllServerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_pbAllServerConfig.base);
  return *internal_default_instance();
}


void pbAllServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.pbAllServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servertype_ = 0u;
  _internal_metadata_.Clear();
}

bool pbAllServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.pbAllServerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbAllServerConfig.Server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbAllServerConfig.ID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ServerType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.pbAllServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.pbAllServerConfig)
  return false;
#undef DO_
}

void pbAllServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.pbAllServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbAllServerConfig.Server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server(), output);
  }

  // string ID = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbAllServerConfig.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // uint32 ServerType = 3;
  if (this->servertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->servertype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.pbAllServerConfig)
}

::google::protobuf::uint8* pbAllServerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.pbAllServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbAllServerConfig.Server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server(), target);
  }

  // string ID = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbAllServerConfig.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // uint32 ServerType = 3;
  if (this->servertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->servertype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.pbAllServerConfig)
  return target;
}

size_t pbAllServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.pbAllServerConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Server = 1;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  // string ID = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // uint32 ServerType = 3;
  if (this->servertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->servertype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pbAllServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.pbAllServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const pbAllServerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pbAllServerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.pbAllServerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.pbAllServerConfig)
    MergeFrom(*source);
  }
}

void pbAllServerConfig::MergeFrom(const pbAllServerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.pbAllServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.servertype() != 0) {
    set_servertype(from.servertype());
  }
}

void pbAllServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.pbAllServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbAllServerConfig::CopyFrom(const pbAllServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.pbAllServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbAllServerConfig::IsInitialized() const {
  return true;
}

void pbAllServerConfig::Swap(pbAllServerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbAllServerConfig::InternalSwap(pbAllServerConfig* other) {
  using std::swap;
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(servertype_, other->servertype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pbAllServerConfig::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pbTableConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbTableConfig::kTableNameFieldNumber;
const int pbTableConfig::kTableCountFieldNumber;
const int pbTableConfig::kCacheFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbTableConfig::pbTableConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_pbTableConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.pbTableConfig)
}
pbTableConfig::pbTableConfig(const pbTableConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tablename().size() > 0) {
    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  ::memcpy(&tablecount_, &from.tablecount_,
    static_cast<size_t>(reinterpret_cast<char*>(&cache_) -
    reinterpret_cast<char*>(&tablecount_)) + sizeof(cache_));
  // @@protoc_insertion_point(copy_constructor:NFrame.pbTableConfig)
}

void pbTableConfig::SharedCtor() {
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tablecount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cache_) -
      reinterpret_cast<char*>(&tablecount_)) + sizeof(cache_));
}

pbTableConfig::~pbTableConfig() {
  // @@protoc_insertion_point(destructor:NFrame.pbTableConfig)
  SharedDtor();
}

void pbTableConfig::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pbTableConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pbTableConfig::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pbTableConfig& pbTableConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_pbTableConfig.base);
  return *internal_default_instance();
}


void pbTableConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.pbTableConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tablecount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cache_) -
      reinterpret_cast<char*>(&tablecount_)) + sizeof(cache_));
  _internal_metadata_.Clear();
}

bool pbTableConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.pbTableConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string TableName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), static_cast<int>(this->tablename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbTableConfig.TableName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TableCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tablecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Cache = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.pbTableConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.pbTableConfig)
  return false;
#undef DO_
}

void pbTableConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.pbTableConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbTableConfig.TableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // uint32 TableCount = 2;
  if (this->tablecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tablecount(), output);
  }

  // bool Cache = 3;
  if (this->cache() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->cache(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.pbTableConfig)
}

::google::protobuf::uint8* pbTableConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.pbTableConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string TableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbTableConfig.TableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // uint32 TableCount = 2;
  if (this->tablecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tablecount(), target);
  }

  // bool Cache = 3;
  if (this->cache() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->cache(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.pbTableConfig)
  return target;
}

size_t pbTableConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.pbTableConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // uint32 TableCount = 2;
  if (this->tablecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tablecount());
  }

  // bool Cache = 3;
  if (this->cache() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pbTableConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.pbTableConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const pbTableConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pbTableConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.pbTableConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.pbTableConfig)
    MergeFrom(*source);
  }
}

void pbTableConfig::MergeFrom(const pbTableConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.pbTableConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  if (from.tablecount() != 0) {
    set_tablecount(from.tablecount());
  }
  if (from.cache() != 0) {
    set_cache(from.cache());
  }
}

void pbTableConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.pbTableConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbTableConfig::CopyFrom(const pbTableConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.pbTableConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbTableConfig::IsInitialized() const {
  return true;
}

void pbTableConfig::Swap(pbTableConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbTableConfig::InternalSwap(pbTableConfig* other) {
  using std::swap;
  tablename_.Swap(&other->tablename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tablecount_, other->tablecount_);
  swap(cache_, other->cache_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pbTableConfig::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pbEncryptConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbEncryptConfig::kPublicAuthEncryptkeyFieldNumber;
const int pbEncryptConfig::kEncryptPolicyFieldNumber;
const int pbEncryptConfig::kCompressPolicyFieldNumber;
const int pbEncryptConfig::kEncrypyKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbEncryptConfig::pbEncryptConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_pbEncryptConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.pbEncryptConfig)
}
pbEncryptConfig::pbEncryptConfig(const pbEncryptConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  publicauthencryptkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publicauthencryptkey().size() > 0) {
    publicauthencryptkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publicauthencryptkey_);
  }
  encrypykey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.encrypykey().size() > 0) {
    encrypykey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypykey_);
  }
  ::memcpy(&encryptpolicy_, &from.encryptpolicy_,
    static_cast<size_t>(reinterpret_cast<char*>(&compresspolicy_) -
    reinterpret_cast<char*>(&encryptpolicy_)) + sizeof(compresspolicy_));
  // @@protoc_insertion_point(copy_constructor:NFrame.pbEncryptConfig)
}

void pbEncryptConfig::SharedCtor() {
  publicauthencryptkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypykey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&encryptpolicy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compresspolicy_) -
      reinterpret_cast<char*>(&encryptpolicy_)) + sizeof(compresspolicy_));
}

pbEncryptConfig::~pbEncryptConfig() {
  // @@protoc_insertion_point(destructor:NFrame.pbEncryptConfig)
  SharedDtor();
}

void pbEncryptConfig::SharedDtor() {
  publicauthencryptkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypykey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pbEncryptConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pbEncryptConfig::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pbEncryptConfig& pbEncryptConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_pbEncryptConfig.base);
  return *internal_default_instance();
}


void pbEncryptConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.pbEncryptConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publicauthencryptkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypykey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&encryptpolicy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compresspolicy_) -
      reinterpret_cast<char*>(&encryptpolicy_)) + sizeof(compresspolicy_));
  _internal_metadata_.Clear();
}

bool pbEncryptConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.pbEncryptConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PublicAuthEncryptkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publicauthencryptkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publicauthencryptkey().data(), static_cast<int>(this->publicauthencryptkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbEncryptConfig.PublicAuthEncryptkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EncryptPolicy = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encryptpolicy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CompressPolicy = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compresspolicy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string EncrypyKey = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encrypykey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->encrypykey().data(), static_cast<int>(this->encrypykey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbEncryptConfig.EncrypyKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.pbEncryptConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.pbEncryptConfig)
  return false;
#undef DO_
}

void pbEncryptConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.pbEncryptConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PublicAuthEncryptkey = 1;
  if (this->publicauthencryptkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publicauthencryptkey().data(), static_cast<int>(this->publicauthencryptkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbEncryptConfig.PublicAuthEncryptkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->publicauthencryptkey(), output);
  }

  // uint32 EncryptPolicy = 10;
  if (this->encryptpolicy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->encryptpolicy(), output);
  }

  // uint32 CompressPolicy = 11;
  if (this->compresspolicy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->compresspolicy(), output);
  }

  // string EncrypyKey = 12;
  if (this->encrypykey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->encrypykey().data(), static_cast<int>(this->encrypykey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbEncryptConfig.EncrypyKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->encrypykey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.pbEncryptConfig)
}

::google::protobuf::uint8* pbEncryptConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.pbEncryptConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PublicAuthEncryptkey = 1;
  if (this->publicauthencryptkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publicauthencryptkey().data(), static_cast<int>(this->publicauthencryptkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbEncryptConfig.PublicAuthEncryptkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->publicauthencryptkey(), target);
  }

  // uint32 EncryptPolicy = 10;
  if (this->encryptpolicy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->encryptpolicy(), target);
  }

  // uint32 CompressPolicy = 11;
  if (this->compresspolicy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->compresspolicy(), target);
  }

  // string EncrypyKey = 12;
  if (this->encrypykey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->encrypykey().data(), static_cast<int>(this->encrypykey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbEncryptConfig.EncrypyKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->encrypykey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.pbEncryptConfig)
  return target;
}

size_t pbEncryptConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.pbEncryptConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PublicAuthEncryptkey = 1;
  if (this->publicauthencryptkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publicauthencryptkey());
  }

  // string EncrypyKey = 12;
  if (this->encrypykey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->encrypykey());
  }

  // uint32 EncryptPolicy = 10;
  if (this->encryptpolicy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encryptpolicy());
  }

  // uint32 CompressPolicy = 11;
  if (this->compresspolicy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compresspolicy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pbEncryptConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.pbEncryptConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const pbEncryptConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pbEncryptConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.pbEncryptConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.pbEncryptConfig)
    MergeFrom(*source);
  }
}

void pbEncryptConfig::MergeFrom(const pbEncryptConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.pbEncryptConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.publicauthencryptkey().size() > 0) {

    publicauthencryptkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publicauthencryptkey_);
  }
  if (from.encrypykey().size() > 0) {

    encrypykey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypykey_);
  }
  if (from.encryptpolicy() != 0) {
    set_encryptpolicy(from.encryptpolicy());
  }
  if (from.compresspolicy() != 0) {
    set_compresspolicy(from.compresspolicy());
  }
}

void pbEncryptConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.pbEncryptConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbEncryptConfig::CopyFrom(const pbEncryptConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.pbEncryptConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbEncryptConfig::IsInitialized() const {
  return true;
}

void pbEncryptConfig::Swap(pbEncryptConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbEncryptConfig::InternalSwap(pbEncryptConfig* other) {
  using std::swap;
  publicauthencryptkey_.Swap(&other->publicauthencryptkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  encrypykey_.Swap(&other->encrypykey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(encryptpolicy_, other->encryptpolicy_);
  swap(compresspolicy_, other->compresspolicy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pbEncryptConfig::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pbNFServerConfig::InitAsDefaultInstance() {
  ::NFrame::_pbNFServerConfig_default_instance_._instance.get_mutable()->routeconfig_ = const_cast< ::NFrame::pbRouteConfig*>(
      ::NFrame::pbRouteConfig::internal_default_instance());
  ::NFrame::_pbNFServerConfig_default_instance_._instance.get_mutable()->mysqlconfig_ = const_cast< ::NFrame::pbMysqlConfig*>(
      ::NFrame::pbMysqlConfig::internal_default_instance());
  ::NFrame::_pbNFServerConfig_default_instance_._instance.get_mutable()->redisconfig_ = const_cast< ::NFrame::pbRedisConfig*>(
      ::NFrame::pbRedisConfig::internal_default_instance());
  ::NFrame::_pbNFServerConfig_default_instance_._instance.get_mutable()->encryptconfig_ = const_cast< ::NFrame::pbEncryptConfig*>(
      ::NFrame::pbEncryptConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbNFServerConfig::kServerIdFieldNumber;
const int pbNFServerConfig::kServerTypeFieldNumber;
const int pbNFServerConfig::kServerNameFieldNumber;
const int pbNFServerConfig::kBusIdFieldNumber;
const int pbNFServerConfig::kBusLengthFieldNumber;
const int pbNFServerConfig::kLinkModeFieldNumber;
const int pbNFServerConfig::kUrlFieldNumber;
const int pbNFServerConfig::kIdleSleepUSFieldNumber;
const int pbNFServerConfig::kHandleMsgNumPerFrameFieldNumber;
const int pbNFServerConfig::kServerOpenTimeFieldNumber;
const int pbNFServerConfig::kLoadProtoDsFieldNumber;
const int pbNFServerConfig::kCrossServerFieldNumber;
const int pbNFServerConfig::kServerIpFieldNumber;
const int pbNFServerConfig::kServerPortFieldNumber;
const int pbNFServerConfig::kExternalServerIpFieldNumber;
const int pbNFServerConfig::kExternalServerPortFieldNumber;
const int pbNFServerConfig::kHttpPortFieldNumber;
const int pbNFServerConfig::kMaxConnectNumFieldNumber;
const int pbNFServerConfig::kWorkThreadNumFieldNumber;
const int pbNFServerConfig::kNetThreadNumFieldNumber;
const int pbNFServerConfig::kSecurityFieldNumber;
const int pbNFServerConfig::kWebSocketFieldNumber;
const int pbNFServerConfig::kParseTypeFieldNumber;
const int pbNFServerConfig::kRouteConfigFieldNumber;
const int pbNFServerConfig::kMysqlConfigFieldNumber;
const int pbNFServerConfig::kDefaultDBNameFieldNumber;
const int pbNFServerConfig::kCrossDBNameFieldNumber;
const int pbNFServerConfig::kRedisConfigFieldNumber;
const int pbNFServerConfig::kSendEmailFieldNumber;
const int pbNFServerConfig::kSendEmailPassFieldNumber;
const int pbNFServerConfig::kSendEmailUrlFieldNumber;
const int pbNFServerConfig::kSendEmailPortFieldNumber;
const int pbNFServerConfig::kRecvEmailFieldNumber;
const int pbNFServerConfig::kWxWorkdRobotFieldNumber;
const int pbNFServerConfig::kMaxOnlinePlayerNumFieldNumber;
const int pbNFServerConfig::kHeartBeatTimeoutFieldNumber;
const int pbNFServerConfig::kClientKeepAliveTimeoutFieldNumber;
const int pbNFServerConfig::kClientVersionFieldNumber;
const int pbNFServerConfig::kIsNoTokenFieldNumber;
const int pbNFServerConfig::kEncryptConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbNFServerConfig::pbNFServerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_pbNFServerConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.pbNFServerConfig)
}
pbNFServerConfig::pbNFServerConfig(const pbNFServerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverid().size() > 0) {
    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  linkmode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.linkmode().size() > 0) {
    linkmode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.linkmode_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  loadprotods_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.loadprotods().size() > 0) {
    loadprotods_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loadprotods_);
  }
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverip().size() > 0) {
    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  externalserverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.externalserverip().size() > 0) {
    externalserverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.externalserverip_);
  }
  defaultdbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.defaultdbname().size() > 0) {
    defaultdbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.defaultdbname_);
  }
  crossdbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crossdbname().size() > 0) {
    crossdbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crossdbname_);
  }
  sendemail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sendemail().size() > 0) {
    sendemail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendemail_);
  }
  sendemailpass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sendemailpass().size() > 0) {
    sendemailpass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendemailpass_);
  }
  sendemailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sendemailurl().size() > 0) {
    sendemailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendemailurl_);
  }
  sendemailport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sendemailport().size() > 0) {
    sendemailport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendemailport_);
  }
  recvemail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recvemail().size() > 0) {
    recvemail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvemail_);
  }
  wxworkdrobot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wxworkdrobot().size() > 0) {
    wxworkdrobot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wxworkdrobot_);
  }
  if (from.has_routeconfig()) {
    routeconfig_ = new ::NFrame::pbRouteConfig(*from.routeconfig_);
  } else {
    routeconfig_ = NULL;
  }
  if (from.has_mysqlconfig()) {
    mysqlconfig_ = new ::NFrame::pbMysqlConfig(*from.mysqlconfig_);
  } else {
    mysqlconfig_ = NULL;
  }
  if (from.has_redisconfig()) {
    redisconfig_ = new ::NFrame::pbRedisConfig(*from.redisconfig_);
  } else {
    redisconfig_ = NULL;
  }
  if (from.has_encryptconfig()) {
    encryptconfig_ = new ::NFrame::pbEncryptConfig(*from.encryptconfig_);
  } else {
    encryptconfig_ = NULL;
  }
  ::memcpy(&servertype_, &from.servertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&clientkeepalivetimeout_) -
    reinterpret_cast<char*>(&servertype_)) + sizeof(clientkeepalivetimeout_));
  // @@protoc_insertion_point(copy_constructor:NFrame.pbNFServerConfig)
}

void pbNFServerConfig::SharedCtor() {
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  linkmode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loadprotods_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externalserverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  defaultdbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crossdbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemailpass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemailport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvemail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wxworkdrobot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&routeconfig_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientkeepalivetimeout_) -
      reinterpret_cast<char*>(&routeconfig_)) + sizeof(clientkeepalivetimeout_));
}

pbNFServerConfig::~pbNFServerConfig() {
  // @@protoc_insertion_point(destructor:NFrame.pbNFServerConfig)
  SharedDtor();
}

void pbNFServerConfig::SharedDtor() {
  serverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  linkmode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loadprotods_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externalserverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  defaultdbname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crossdbname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemailpass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemailurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemailport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvemail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wxworkdrobot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete routeconfig_;
  if (this != internal_default_instance()) delete mysqlconfig_;
  if (this != internal_default_instance()) delete redisconfig_;
  if (this != internal_default_instance()) delete encryptconfig_;
}

void pbNFServerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pbNFServerConfig::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pbNFServerConfig& pbNFServerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_pbNFServerConfig.base);
  return *internal_default_instance();
}


void pbNFServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.pbNFServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  linkmode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loadprotods_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externalserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  defaultdbname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crossdbname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemailpass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemailurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendemailport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvemail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wxworkdrobot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && routeconfig_ != NULL) {
    delete routeconfig_;
  }
  routeconfig_ = NULL;
  if (GetArenaNoVirtual() == NULL && mysqlconfig_ != NULL) {
    delete mysqlconfig_;
  }
  mysqlconfig_ = NULL;
  if (GetArenaNoVirtual() == NULL && redisconfig_ != NULL) {
    delete redisconfig_;
  }
  redisconfig_ = NULL;
  if (GetArenaNoVirtual() == NULL && encryptconfig_ != NULL) {
    delete encryptconfig_;
  }
  encryptconfig_ = NULL;
  ::memset(&servertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientkeepalivetimeout_) -
      reinterpret_cast<char*>(&servertype_)) + sizeof(clientkeepalivetimeout_));
  _internal_metadata_.Clear();
}

bool pbNFServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.pbNFServerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ServerId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverid().data(), static_cast<int>(this->serverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.ServerId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ServerType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.ServerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BusId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &busid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BusLength = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buslength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LinkMode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_linkmode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->linkmode().data(), static_cast<int>(this->linkmode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.LinkMode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Url = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.Url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IdleSleepUS = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idlesleepus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 HandleMsgNumPerFrame = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &handlemsgnumperframe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ServerOpenTime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serveropentime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LoadProtoDs = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loadprotods()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loadprotods().data(), static_cast<int>(this->loadprotods().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.LoadProtoDs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CrossServer = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &crossserver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerIp = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverip().data(), static_cast<int>(this->serverip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.ServerIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ServerPort = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ExternalServerIp = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_externalserverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->externalserverip().data(), static_cast<int>(this->externalserverip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.ExternalServerIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ExternalServerPort = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &externalserverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 HttpPort = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &httpport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxConnectNum = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxconnectnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 WorkThreadNum = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &workthreadnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 NetThreadNum = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &netthreadnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Security = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &security_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool WebSocket = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &websocket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ParseType = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parsetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.pbRouteConfig RouteConfig = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routeconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.pbMysqlConfig MysqlConfig = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mysqlconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DefaultDBName = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 602 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_defaultdbname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->defaultdbname().data(), static_cast<int>(this->defaultdbname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.DefaultDBName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CrossDBName = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_crossdbname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->crossdbname().data(), static_cast<int>(this->crossdbname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.CrossDBName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.pbRedisConfig RedisConfig = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_redisconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sendEmail = 91;
      case 91: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendemail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendemail().data(), static_cast<int>(this->sendemail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.sendEmail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sendEmailPass = 92;
      case 92: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendemailpass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendemailpass().data(), static_cast<int>(this->sendemailpass().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.sendEmailPass"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sendEmailUrl = 93;
      case 93: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendemailurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendemailurl().data(), static_cast<int>(this->sendemailurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.sendEmailUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sendEmailPort = 94;
      case 94: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendemailport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendemailport().data(), static_cast<int>(this->sendemailport().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.sendEmailPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string recvEmail = 95;
      case 95: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recvemail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recvemail().data(), static_cast<int>(this->recvemail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.recvEmail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wxWorkdRobot = 96;
      case 96: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 770 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wxworkdrobot()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wxworkdrobot().data(), static_cast<int>(this->wxworkdrobot().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.pbNFServerConfig.wxWorkdRobot"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxOnlinePlayerNum = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxonlineplayernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 HeartBeatTimeout = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 808 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heartbeattimeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ClientKeepAliveTimeout = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 816 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clientkeepalivetimeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ClientVersion = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 824 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clientversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsNoToken = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 832 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isnotoken_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.pbEncryptConfig EncryptConfig = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_encryptconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.pbNFServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.pbNFServerConfig)
  return false;
#undef DO_
}

void pbNFServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.pbNFServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ServerId = 1;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.ServerId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->serverid(), output);
  }

  // uint32 ServerType = 2;
  if (this->servertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->servertype(), output);
  }

  // string ServerName = 3;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->servername(), output);
  }

  // uint32 BusId = 4;
  if (this->busid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->busid(), output);
  }

  // uint32 BusLength = 5;
  if (this->buslength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->buslength(), output);
  }

  // string LinkMode = 7;
  if (this->linkmode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->linkmode().data(), static_cast<int>(this->linkmode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.LinkMode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->linkmode(), output);
  }

  // string Url = 8;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->url(), output);
  }

  // uint32 IdleSleepUS = 9;
  if (this->idlesleepus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->idlesleepus(), output);
  }

  // uint32 HandleMsgNumPerFrame = 10;
  if (this->handlemsgnumperframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->handlemsgnumperframe(), output);
  }

  // uint64 ServerOpenTime = 11;
  if (this->serveropentime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->serveropentime(), output);
  }

  // string LoadProtoDs = 12;
  if (this->loadprotods().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loadprotods().data(), static_cast<int>(this->loadprotods().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.LoadProtoDs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->loadprotods(), output);
  }

  // bool CrossServer = 13;
  if (this->crossserver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->crossserver(), output);
  }

  // string ServerIp = 20;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), static_cast<int>(this->serverip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.ServerIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->serverip(), output);
  }

  // uint32 ServerPort = 21;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->serverport(), output);
  }

  // string ExternalServerIp = 22;
  if (this->externalserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->externalserverip().data(), static_cast<int>(this->externalserverip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.ExternalServerIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->externalserverip(), output);
  }

  // uint32 ExternalServerPort = 23;
  if (this->externalserverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->externalserverport(), output);
  }

  // uint32 HttpPort = 24;
  if (this->httpport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->httpport(), output);
  }

  // uint32 MaxConnectNum = 25;
  if (this->maxconnectnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->maxconnectnum(), output);
  }

  // uint32 WorkThreadNum = 26;
  if (this->workthreadnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->workthreadnum(), output);
  }

  // uint32 NetThreadNum = 27;
  if (this->netthreadnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->netthreadnum(), output);
  }

  // bool Security = 28;
  if (this->security() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->security(), output);
  }

  // bool WebSocket = 29;
  if (this->websocket() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(29, this->websocket(), output);
  }

  // uint32 ParseType = 30;
  if (this->parsetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->parsetype(), output);
  }

  // .NFrame.pbRouteConfig RouteConfig = 50;
  if (this->has_routeconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->_internal_routeconfig(), output);
  }

  // .NFrame.pbMysqlConfig MysqlConfig = 70;
  if (this->has_mysqlconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, this->_internal_mysqlconfig(), output);
  }

  // string DefaultDBName = 75;
  if (this->defaultdbname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->defaultdbname().data(), static_cast<int>(this->defaultdbname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.DefaultDBName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      75, this->defaultdbname(), output);
  }

  // string CrossDBName = 76;
  if (this->crossdbname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crossdbname().data(), static_cast<int>(this->crossdbname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.CrossDBName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      76, this->crossdbname(), output);
  }

  // .NFrame.pbRedisConfig RedisConfig = 80;
  if (this->has_redisconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80, this->_internal_redisconfig(), output);
  }

  // string sendEmail = 91;
  if (this->sendemail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendemail().data(), static_cast<int>(this->sendemail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.sendEmail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      91, this->sendemail(), output);
  }

  // string sendEmailPass = 92;
  if (this->sendemailpass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendemailpass().data(), static_cast<int>(this->sendemailpass().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.sendEmailPass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      92, this->sendemailpass(), output);
  }

  // string sendEmailUrl = 93;
  if (this->sendemailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendemailurl().data(), static_cast<int>(this->sendemailurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.sendEmailUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      93, this->sendemailurl(), output);
  }

  // string sendEmailPort = 94;
  if (this->sendemailport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendemailport().data(), static_cast<int>(this->sendemailport().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.sendEmailPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      94, this->sendemailport(), output);
  }

  // string recvEmail = 95;
  if (this->recvemail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recvemail().data(), static_cast<int>(this->recvemail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.recvEmail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      95, this->recvemail(), output);
  }

  // string wxWorkdRobot = 96;
  if (this->wxworkdrobot().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wxworkdrobot().data(), static_cast<int>(this->wxworkdrobot().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.wxWorkdRobot");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      96, this->wxworkdrobot(), output);
  }

  // uint32 MaxOnlinePlayerNum = 100;
  if (this->maxonlineplayernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(100, this->maxonlineplayernum(), output);
  }

  // uint32 HeartBeatTimeout = 101;
  if (this->heartbeattimeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(101, this->heartbeattimeout(), output);
  }

  // uint32 ClientKeepAliveTimeout = 102;
  if (this->clientkeepalivetimeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(102, this->clientkeepalivetimeout(), output);
  }

  // uint32 ClientVersion = 103;
  if (this->clientversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(103, this->clientversion(), output);
  }

  // bool IsNoToken = 104;
  if (this->isnotoken() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(104, this->isnotoken(), output);
  }

  // .NFrame.pbEncryptConfig EncryptConfig = 110;
  if (this->has_encryptconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110, this->_internal_encryptconfig(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.pbNFServerConfig)
}

::google::protobuf::uint8* pbNFServerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.pbNFServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ServerId = 1;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.ServerId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->serverid(), target);
  }

  // uint32 ServerType = 2;
  if (this->servertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->servertype(), target);
  }

  // string ServerName = 3;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->servername(), target);
  }

  // uint32 BusId = 4;
  if (this->busid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->busid(), target);
  }

  // uint32 BusLength = 5;
  if (this->buslength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->buslength(), target);
  }

  // string LinkMode = 7;
  if (this->linkmode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->linkmode().data(), static_cast<int>(this->linkmode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.LinkMode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->linkmode(), target);
  }

  // string Url = 8;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->url(), target);
  }

  // uint32 IdleSleepUS = 9;
  if (this->idlesleepus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->idlesleepus(), target);
  }

  // uint32 HandleMsgNumPerFrame = 10;
  if (this->handlemsgnumperframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->handlemsgnumperframe(), target);
  }

  // uint64 ServerOpenTime = 11;
  if (this->serveropentime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->serveropentime(), target);
  }

  // string LoadProtoDs = 12;
  if (this->loadprotods().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loadprotods().data(), static_cast<int>(this->loadprotods().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.LoadProtoDs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->loadprotods(), target);
  }

  // bool CrossServer = 13;
  if (this->crossserver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->crossserver(), target);
  }

  // string ServerIp = 20;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), static_cast<int>(this->serverip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.ServerIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->serverip(), target);
  }

  // uint32 ServerPort = 21;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->serverport(), target);
  }

  // string ExternalServerIp = 22;
  if (this->externalserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->externalserverip().data(), static_cast<int>(this->externalserverip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.ExternalServerIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->externalserverip(), target);
  }

  // uint32 ExternalServerPort = 23;
  if (this->externalserverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->externalserverport(), target);
  }

  // uint32 HttpPort = 24;
  if (this->httpport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->httpport(), target);
  }

  // uint32 MaxConnectNum = 25;
  if (this->maxconnectnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->maxconnectnum(), target);
  }

  // uint32 WorkThreadNum = 26;
  if (this->workthreadnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->workthreadnum(), target);
  }

  // uint32 NetThreadNum = 27;
  if (this->netthreadnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->netthreadnum(), target);
  }

  // bool Security = 28;
  if (this->security() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->security(), target);
  }

  // bool WebSocket = 29;
  if (this->websocket() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(29, this->websocket(), target);
  }

  // uint32 ParseType = 30;
  if (this->parsetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->parsetype(), target);
  }

  // .NFrame.pbRouteConfig RouteConfig = 50;
  if (this->has_routeconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, this->_internal_routeconfig(), deterministic, target);
  }

  // .NFrame.pbMysqlConfig MysqlConfig = 70;
  if (this->has_mysqlconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        70, this->_internal_mysqlconfig(), deterministic, target);
  }

  // string DefaultDBName = 75;
  if (this->defaultdbname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->defaultdbname().data(), static_cast<int>(this->defaultdbname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.DefaultDBName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        75, this->defaultdbname(), target);
  }

  // string CrossDBName = 76;
  if (this->crossdbname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crossdbname().data(), static_cast<int>(this->crossdbname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.CrossDBName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        76, this->crossdbname(), target);
  }

  // .NFrame.pbRedisConfig RedisConfig = 80;
  if (this->has_redisconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        80, this->_internal_redisconfig(), deterministic, target);
  }

  // string sendEmail = 91;
  if (this->sendemail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendemail().data(), static_cast<int>(this->sendemail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.sendEmail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        91, this->sendemail(), target);
  }

  // string sendEmailPass = 92;
  if (this->sendemailpass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendemailpass().data(), static_cast<int>(this->sendemailpass().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.sendEmailPass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        92, this->sendemailpass(), target);
  }

  // string sendEmailUrl = 93;
  if (this->sendemailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendemailurl().data(), static_cast<int>(this->sendemailurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.sendEmailUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        93, this->sendemailurl(), target);
  }

  // string sendEmailPort = 94;
  if (this->sendemailport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendemailport().data(), static_cast<int>(this->sendemailport().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.sendEmailPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        94, this->sendemailport(), target);
  }

  // string recvEmail = 95;
  if (this->recvemail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recvemail().data(), static_cast<int>(this->recvemail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.recvEmail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        95, this->recvemail(), target);
  }

  // string wxWorkdRobot = 96;
  if (this->wxworkdrobot().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wxworkdrobot().data(), static_cast<int>(this->wxworkdrobot().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.pbNFServerConfig.wxWorkdRobot");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        96, this->wxworkdrobot(), target);
  }

  // uint32 MaxOnlinePlayerNum = 100;
  if (this->maxonlineplayernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(100, this->maxonlineplayernum(), target);
  }

  // uint32 HeartBeatTimeout = 101;
  if (this->heartbeattimeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(101, this->heartbeattimeout(), target);
  }

  // uint32 ClientKeepAliveTimeout = 102;
  if (this->clientkeepalivetimeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(102, this->clientkeepalivetimeout(), target);
  }

  // uint32 ClientVersion = 103;
  if (this->clientversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(103, this->clientversion(), target);
  }

  // bool IsNoToken = 104;
  if (this->isnotoken() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(104, this->isnotoken(), target);
  }

  // .NFrame.pbEncryptConfig EncryptConfig = 110;
  if (this->has_encryptconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        110, this->_internal_encryptconfig(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.pbNFServerConfig)
  return target;
}

size_t pbNFServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.pbNFServerConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ServerId = 1;
  if (this->serverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverid());
  }

  // string ServerName = 3;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // string LinkMode = 7;
  if (this->linkmode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->linkmode());
  }

  // string Url = 8;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string LoadProtoDs = 12;
  if (this->loadprotods().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->loadprotods());
  }

  // string ServerIp = 20;
  if (this->serverip().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverip());
  }

  // string ExternalServerIp = 22;
  if (this->externalserverip().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->externalserverip());
  }

  // string DefaultDBName = 75;
  if (this->defaultdbname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->defaultdbname());
  }

  // string CrossDBName = 76;
  if (this->crossdbname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->crossdbname());
  }

  // string sendEmail = 91;
  if (this->sendemail().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendemail());
  }

  // string sendEmailPass = 92;
  if (this->sendemailpass().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendemailpass());
  }

  // string sendEmailUrl = 93;
  if (this->sendemailurl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendemailurl());
  }

  // string sendEmailPort = 94;
  if (this->sendemailport().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendemailport());
  }

  // string recvEmail = 95;
  if (this->recvemail().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recvemail());
  }

  // string wxWorkdRobot = 96;
  if (this->wxworkdrobot().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wxworkdrobot());
  }

  // .NFrame.pbRouteConfig RouteConfig = 50;
  if (this->has_routeconfig()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *routeconfig_);
  }

  // .NFrame.pbMysqlConfig MysqlConfig = 70;
  if (this->has_mysqlconfig()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mysqlconfig_);
  }

  // .NFrame.pbRedisConfig RedisConfig = 80;
  if (this->has_redisconfig()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *redisconfig_);
  }

  // .NFrame.pbEncryptConfig EncryptConfig = 110;
  if (this->has_encryptconfig()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *encryptconfig_);
  }

  // uint32 ServerType = 2;
  if (this->servertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->servertype());
  }

  // uint32 BusId = 4;
  if (this->busid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->busid());
  }

  // uint32 BusLength = 5;
  if (this->buslength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buslength());
  }

  // uint32 IdleSleepUS = 9;
  if (this->idlesleepus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idlesleepus());
  }

  // uint64 ServerOpenTime = 11;
  if (this->serveropentime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serveropentime());
  }

  // uint32 HandleMsgNumPerFrame = 10;
  if (this->handlemsgnumperframe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->handlemsgnumperframe());
  }

  // uint32 ServerPort = 21;
  if (this->serverport() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serverport());
  }

  // uint32 ExternalServerPort = 23;
  if (this->externalserverport() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->externalserverport());
  }

  // uint32 HttpPort = 24;
  if (this->httpport() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->httpport());
  }

  // uint32 MaxConnectNum = 25;
  if (this->maxconnectnum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxconnectnum());
  }

  // uint32 WorkThreadNum = 26;
  if (this->workthreadnum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->workthreadnum());
  }

  // uint32 NetThreadNum = 27;
  if (this->netthreadnum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->netthreadnum());
  }

  // uint32 ParseType = 30;
  if (this->parsetype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parsetype());
  }

  // uint32 ClientVersion = 103;
  if (this->clientversion() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clientversion());
  }

  // bool CrossServer = 13;
  if (this->crossserver() != 0) {
    total_size += 1 + 1;
  }

  // bool Security = 28;
  if (this->security() != 0) {
    total_size += 2 + 1;
  }

  // bool WebSocket = 29;
  if (this->websocket() != 0) {
    total_size += 2 + 1;
  }

  // bool IsNoToken = 104;
  if (this->isnotoken() != 0) {
    total_size += 2 + 1;
  }

  // uint32 MaxOnlinePlayerNum = 100;
  if (this->maxonlineplayernum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxonlineplayernum());
  }

  // uint32 HeartBeatTimeout = 101;
  if (this->heartbeattimeout() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heartbeattimeout());
  }

  // uint32 ClientKeepAliveTimeout = 102;
  if (this->clientkeepalivetimeout() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clientkeepalivetimeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pbNFServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.pbNFServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const pbNFServerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pbNFServerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.pbNFServerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.pbNFServerConfig)
    MergeFrom(*source);
  }
}

void pbNFServerConfig::MergeFrom(const pbNFServerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.pbNFServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid().size() > 0) {

    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.linkmode().size() > 0) {

    linkmode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.linkmode_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.loadprotods().size() > 0) {

    loadprotods_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loadprotods_);
  }
  if (from.serverip().size() > 0) {

    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  if (from.externalserverip().size() > 0) {

    externalserverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.externalserverip_);
  }
  if (from.defaultdbname().size() > 0) {

    defaultdbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.defaultdbname_);
  }
  if (from.crossdbname().size() > 0) {

    crossdbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crossdbname_);
  }
  if (from.sendemail().size() > 0) {

    sendemail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendemail_);
  }
  if (from.sendemailpass().size() > 0) {

    sendemailpass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendemailpass_);
  }
  if (from.sendemailurl().size() > 0) {

    sendemailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendemailurl_);
  }
  if (from.sendemailport().size() > 0) {

    sendemailport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendemailport_);
  }
  if (from.recvemail().size() > 0) {

    recvemail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvemail_);
  }
  if (from.wxworkdrobot().size() > 0) {

    wxworkdrobot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wxworkdrobot_);
  }
  if (from.has_routeconfig()) {
    mutable_routeconfig()->::NFrame::pbRouteConfig::MergeFrom(from.routeconfig());
  }
  if (from.has_mysqlconfig()) {
    mutable_mysqlconfig()->::NFrame::pbMysqlConfig::MergeFrom(from.mysqlconfig());
  }
  if (from.has_redisconfig()) {
    mutable_redisconfig()->::NFrame::pbRedisConfig::MergeFrom(from.redisconfig());
  }
  if (from.has_encryptconfig()) {
    mutable_encryptconfig()->::NFrame::pbEncryptConfig::MergeFrom(from.encryptconfig());
  }
  if (from.servertype() != 0) {
    set_servertype(from.servertype());
  }
  if (from.busid() != 0) {
    set_busid(from.busid());
  }
  if (from.buslength() != 0) {
    set_buslength(from.buslength());
  }
  if (from.idlesleepus() != 0) {
    set_idlesleepus(from.idlesleepus());
  }
  if (from.serveropentime() != 0) {
    set_serveropentime(from.serveropentime());
  }
  if (from.handlemsgnumperframe() != 0) {
    set_handlemsgnumperframe(from.handlemsgnumperframe());
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.externalserverport() != 0) {
    set_externalserverport(from.externalserverport());
  }
  if (from.httpport() != 0) {
    set_httpport(from.httpport());
  }
  if (from.maxconnectnum() != 0) {
    set_maxconnectnum(from.maxconnectnum());
  }
  if (from.workthreadnum() != 0) {
    set_workthreadnum(from.workthreadnum());
  }
  if (from.netthreadnum() != 0) {
    set_netthreadnum(from.netthreadnum());
  }
  if (from.parsetype() != 0) {
    set_parsetype(from.parsetype());
  }
  if (from.clientversion() != 0) {
    set_clientversion(from.clientversion());
  }
  if (from.crossserver() != 0) {
    set_crossserver(from.crossserver());
  }
  if (from.security() != 0) {
    set_security(from.security());
  }
  if (from.websocket() != 0) {
    set_websocket(from.websocket());
  }
  if (from.isnotoken() != 0) {
    set_isnotoken(from.isnotoken());
  }
  if (from.maxonlineplayernum() != 0) {
    set_maxonlineplayernum(from.maxonlineplayernum());
  }
  if (from.heartbeattimeout() != 0) {
    set_heartbeattimeout(from.heartbeattimeout());
  }
  if (from.clientkeepalivetimeout() != 0) {
    set_clientkeepalivetimeout(from.clientkeepalivetimeout());
  }
}

void pbNFServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.pbNFServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbNFServerConfig::CopyFrom(const pbNFServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.pbNFServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbNFServerConfig::IsInitialized() const {
  return true;
}

void pbNFServerConfig::Swap(pbNFServerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbNFServerConfig::InternalSwap(pbNFServerConfig* other) {
  using std::swap;
  serverid_.Swap(&other->serverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  servername_.Swap(&other->servername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  linkmode_.Swap(&other->linkmode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  loadprotods_.Swap(&other->loadprotods_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serverip_.Swap(&other->serverip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  externalserverip_.Swap(&other->externalserverip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  defaultdbname_.Swap(&other->defaultdbname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  crossdbname_.Swap(&other->crossdbname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sendemail_.Swap(&other->sendemail_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sendemailpass_.Swap(&other->sendemailpass_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sendemailurl_.Swap(&other->sendemailurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sendemailport_.Swap(&other->sendemailport_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recvemail_.Swap(&other->recvemail_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wxworkdrobot_.Swap(&other->wxworkdrobot_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(routeconfig_, other->routeconfig_);
  swap(mysqlconfig_, other->mysqlconfig_);
  swap(redisconfig_, other->redisconfig_);
  swap(encryptconfig_, other->encryptconfig_);
  swap(servertype_, other->servertype_);
  swap(busid_, other->busid_);
  swap(buslength_, other->buslength_);
  swap(idlesleepus_, other->idlesleepus_);
  swap(serveropentime_, other->serveropentime_);
  swap(handlemsgnumperframe_, other->handlemsgnumperframe_);
  swap(serverport_, other->serverport_);
  swap(externalserverport_, other->externalserverport_);
  swap(httpport_, other->httpport_);
  swap(maxconnectnum_, other->maxconnectnum_);
  swap(workthreadnum_, other->workthreadnum_);
  swap(netthreadnum_, other->netthreadnum_);
  swap(parsetype_, other->parsetype_);
  swap(clientversion_, other->clientversion_);
  swap(crossserver_, other->crossserver_);
  swap(security_, other->security_);
  swap(websocket_, other->websocket_);
  swap(isnotoken_, other->isnotoken_);
  swap(maxonlineplayernum_, other->maxonlineplayernum_);
  swap(heartbeattimeout_, other->heartbeattimeout_);
  swap(clientkeepalivetimeout_, other->clientkeepalivetimeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pbNFServerConfig::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void wxWorkRobotText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int wxWorkRobotText::kContentFieldNumber;
const int wxWorkRobotText::kMentionedListFieldNumber;
const int wxWorkRobotText::kMentionedMobileListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

wxWorkRobotText::wxWorkRobotText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_wxWorkRobotText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.wxWorkRobotText)
}
wxWorkRobotText::wxWorkRobotText(const wxWorkRobotText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mentioned_list_(from.mentioned_list_),
      mentioned_mobile_list_(from.mentioned_mobile_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.wxWorkRobotText)
}

void wxWorkRobotText::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

wxWorkRobotText::~wxWorkRobotText() {
  // @@protoc_insertion_point(destructor:NFrame.wxWorkRobotText)
  SharedDtor();
}

void wxWorkRobotText::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void wxWorkRobotText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* wxWorkRobotText::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const wxWorkRobotText& wxWorkRobotText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_wxWorkRobotText.base);
  return *internal_default_instance();
}


void wxWorkRobotText::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.wxWorkRobotText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mentioned_list_.Clear();
  mentioned_mobile_list_.Clear();
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool wxWorkRobotText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.wxWorkRobotText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.wxWorkRobotText.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string mentioned_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mentioned_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mentioned_list(this->mentioned_list_size() - 1).data(),
            static_cast<int>(this->mentioned_list(this->mentioned_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.wxWorkRobotText.mentioned_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string mentioned_mobile_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mentioned_mobile_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mentioned_mobile_list(this->mentioned_mobile_list_size() - 1).data(),
            static_cast<int>(this->mentioned_mobile_list(this->mentioned_mobile_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.wxWorkRobotText.mentioned_mobile_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.wxWorkRobotText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.wxWorkRobotText)
  return false;
#undef DO_
}

void wxWorkRobotText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.wxWorkRobotText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.wxWorkRobotText.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  // repeated string mentioned_list = 2;
  for (int i = 0, n = this->mentioned_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mentioned_list(i).data(), static_cast<int>(this->mentioned_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.wxWorkRobotText.mentioned_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->mentioned_list(i), output);
  }

  // repeated string mentioned_mobile_list = 3;
  for (int i = 0, n = this->mentioned_mobile_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mentioned_mobile_list(i).data(), static_cast<int>(this->mentioned_mobile_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.wxWorkRobotText.mentioned_mobile_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->mentioned_mobile_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.wxWorkRobotText)
}

::google::protobuf::uint8* wxWorkRobotText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.wxWorkRobotText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.wxWorkRobotText.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  // repeated string mentioned_list = 2;
  for (int i = 0, n = this->mentioned_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mentioned_list(i).data(), static_cast<int>(this->mentioned_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.wxWorkRobotText.mentioned_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->mentioned_list(i), target);
  }

  // repeated string mentioned_mobile_list = 3;
  for (int i = 0, n = this->mentioned_mobile_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mentioned_mobile_list(i).data(), static_cast<int>(this->mentioned_mobile_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.wxWorkRobotText.mentioned_mobile_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->mentioned_mobile_list(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.wxWorkRobotText)
  return target;
}

size_t wxWorkRobotText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.wxWorkRobotText)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string mentioned_list = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mentioned_list_size());
  for (int i = 0, n = this->mentioned_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mentioned_list(i));
  }

  // repeated string mentioned_mobile_list = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mentioned_mobile_list_size());
  for (int i = 0, n = this->mentioned_mobile_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mentioned_mobile_list(i));
  }

  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void wxWorkRobotText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.wxWorkRobotText)
  GOOGLE_DCHECK_NE(&from, this);
  const wxWorkRobotText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const wxWorkRobotText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.wxWorkRobotText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.wxWorkRobotText)
    MergeFrom(*source);
  }
}

void wxWorkRobotText::MergeFrom(const wxWorkRobotText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.wxWorkRobotText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mentioned_list_.MergeFrom(from.mentioned_list_);
  mentioned_mobile_list_.MergeFrom(from.mentioned_mobile_list_);
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void wxWorkRobotText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.wxWorkRobotText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wxWorkRobotText::CopyFrom(const wxWorkRobotText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.wxWorkRobotText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wxWorkRobotText::IsInitialized() const {
  return true;
}

void wxWorkRobotText::Swap(wxWorkRobotText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void wxWorkRobotText::InternalSwap(wxWorkRobotText* other) {
  using std::swap;
  mentioned_list_.InternalSwap(CastToBase(&other->mentioned_list_));
  mentioned_mobile_list_.InternalSwap(CastToBase(&other->mentioned_mobile_list_));
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata wxWorkRobotText::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void wxWorkRobotHttpPost::InitAsDefaultInstance() {
  ::NFrame::_wxWorkRobotHttpPost_default_instance_._instance.get_mutable()->text_ = const_cast< ::NFrame::wxWorkRobotText*>(
      ::NFrame::wxWorkRobotText::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int wxWorkRobotHttpPost::kMsgtypeFieldNumber;
const int wxWorkRobotHttpPost::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

wxWorkRobotHttpPost::wxWorkRobotHttpPost()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_wxWorkRobotHttpPost.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.wxWorkRobotHttpPost)
}
wxWorkRobotHttpPost::wxWorkRobotHttpPost(const wxWorkRobotHttpPost& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgtype().size() > 0) {
    msgtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgtype_);
  }
  if (from.has_text()) {
    text_ = new ::NFrame::wxWorkRobotText(*from.text_);
  } else {
    text_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.wxWorkRobotHttpPost)
}

void wxWorkRobotHttpPost::SharedCtor() {
  msgtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_ = NULL;
}

wxWorkRobotHttpPost::~wxWorkRobotHttpPost() {
  // @@protoc_insertion_point(destructor:NFrame.wxWorkRobotHttpPost)
  SharedDtor();
}

void wxWorkRobotHttpPost::SharedDtor() {
  msgtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete text_;
}

void wxWorkRobotHttpPost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* wxWorkRobotHttpPost::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const wxWorkRobotHttpPost& wxWorkRobotHttpPost::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_wxWorkRobotHttpPost.base);
  return *internal_default_instance();
}


void wxWorkRobotHttpPost::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.wxWorkRobotHttpPost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  _internal_metadata_.Clear();
}

bool wxWorkRobotHttpPost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.wxWorkRobotHttpPost)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msgtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgtype().data(), static_cast<int>(this->msgtype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.wxWorkRobotHttpPost.msgtype"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.wxWorkRobotText text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.wxWorkRobotHttpPost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.wxWorkRobotHttpPost)
  return false;
#undef DO_
}

void wxWorkRobotHttpPost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.wxWorkRobotHttpPost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msgtype = 1;
  if (this->msgtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgtype().data(), static_cast<int>(this->msgtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.wxWorkRobotHttpPost.msgtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msgtype(), output);
  }

  // .NFrame.wxWorkRobotText text = 2;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.wxWorkRobotHttpPost)
}

::google::protobuf::uint8* wxWorkRobotHttpPost::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.wxWorkRobotHttpPost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msgtype = 1;
  if (this->msgtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgtype().data(), static_cast<int>(this->msgtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.wxWorkRobotHttpPost.msgtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msgtype(), target);
  }

  // .NFrame.wxWorkRobotText text = 2;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_text(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.wxWorkRobotHttpPost)
  return target;
}

size_t wxWorkRobotHttpPost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.wxWorkRobotHttpPost)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msgtype = 1;
  if (this->msgtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgtype());
  }

  // .NFrame.wxWorkRobotText text = 2;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void wxWorkRobotHttpPost::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.wxWorkRobotHttpPost)
  GOOGLE_DCHECK_NE(&from, this);
  const wxWorkRobotHttpPost* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const wxWorkRobotHttpPost>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.wxWorkRobotHttpPost)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.wxWorkRobotHttpPost)
    MergeFrom(*source);
  }
}

void wxWorkRobotHttpPost::MergeFrom(const wxWorkRobotHttpPost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.wxWorkRobotHttpPost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgtype().size() > 0) {

    msgtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgtype_);
  }
  if (from.has_text()) {
    mutable_text()->::NFrame::wxWorkRobotText::MergeFrom(from.text());
  }
}

void wxWorkRobotHttpPost::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.wxWorkRobotHttpPost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wxWorkRobotHttpPost::CopyFrom(const wxWorkRobotHttpPost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.wxWorkRobotHttpPost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wxWorkRobotHttpPost::IsInitialized() const {
  return true;
}

void wxWorkRobotHttpPost::Swap(wxWorkRobotHttpPost* other) {
  if (other == this) return;
  InternalSwap(other);
}
void wxWorkRobotHttpPost::InternalSwap(wxWorkRobotHttpPost* other) {
  using std::swap;
  msgtype_.Swap(&other->msgtype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(text_, other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata wxWorkRobotHttpPost::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExcelSheetInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExcelSheetInfo::kNameFieldNumber;
const int ExcelSheetInfo::kUniqueIndexFieldNumber;
const int ExcelSheetInfo::kMultiIndexFieldNumber;
const int ExcelSheetInfo::kRelationFieldNumber;
const int ExcelSheetInfo::kCreateSqlFieldNumber;
const int ExcelSheetInfo::kFieldEnumFieldNumber;
const int ExcelSheetInfo::kImportProtoFieldNumber;
const int ExcelSheetInfo::kColMessageTypeFieldNumber;
const int ExcelSheetInfo::kAddFieldFieldNumber;
const int ExcelSheetInfo::kOtherNameFieldNumber;
const int ExcelSheetInfo::kSheetMsgNameFieldNumber;
const int ExcelSheetInfo::kProtoMsgNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExcelSheetInfo::ExcelSheetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_ExcelSheetInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.ExcelSheetInfo)
}
ExcelSheetInfo::ExcelSheetInfo(const ExcelSheetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  unique_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unique_index().size() > 0) {
    unique_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unique_index_);
  }
  multi_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.multi_index().size() > 0) {
    multi_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.multi_index_);
  }
  relation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relation().size() > 0) {
    relation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relation_);
  }
  field_enum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field_enum().size() > 0) {
    field_enum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_enum_);
  }
  import_proto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.import_proto().size() > 0) {
    import_proto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.import_proto_);
  }
  colmessagetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.colmessagetype().size() > 0) {
    colmessagetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.colmessagetype_);
  }
  add_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.add_field().size() > 0) {
    add_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.add_field_);
  }
  othername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.othername().size() > 0) {
    othername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.othername_);
  }
  sheetmsgname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sheetmsgname().size() > 0) {
    sheetmsgname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sheetmsgname_);
  }
  protomsgname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protomsgname().size() > 0) {
    protomsgname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protomsgname_);
  }
  createsql_ = from.createsql_;
  // @@protoc_insertion_point(copy_constructor:NFrame.ExcelSheetInfo)
}

void ExcelSheetInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unique_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  multi_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_enum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  import_proto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  colmessagetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  othername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sheetmsgname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protomsgname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createsql_ = false;
}

ExcelSheetInfo::~ExcelSheetInfo() {
  // @@protoc_insertion_point(destructor:NFrame.ExcelSheetInfo)
  SharedDtor();
}

void ExcelSheetInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unique_index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  multi_index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_enum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  import_proto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  colmessagetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  othername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sheetmsgname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protomsgname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExcelSheetInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExcelSheetInfo::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExcelSheetInfo& ExcelSheetInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_ExcelSheetInfo.base);
  return *internal_default_instance();
}


void ExcelSheetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.ExcelSheetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unique_index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  multi_index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_enum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  import_proto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  colmessagetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  othername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sheetmsgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protomsgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createsql_ = false;
  _internal_metadata_.Clear();
}

bool ExcelSheetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.ExcelSheetInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unique_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unique_index()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unique_index().data(), static_cast<int>(this->unique_index().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.unique_index"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string multi_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_multi_index()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->multi_index().data(), static_cast<int>(this->multi_index().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.multi_index"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string relation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_relation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->relation().data(), static_cast<int>(this->relation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.relation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool createSql = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &createsql_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string field_enum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_enum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_enum().data(), static_cast<int>(this->field_enum().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.field_enum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string import_proto = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_import_proto()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->import_proto().data(), static_cast<int>(this->import_proto().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.import_proto"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string colMessageType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_colmessagetype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->colmessagetype().data(), static_cast<int>(this->colmessagetype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.colMessageType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string add_field = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_add_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->add_field().data(), static_cast<int>(this->add_field().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.add_field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string otherName = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_othername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->othername().data(), static_cast<int>(this->othername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.otherName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sheetMsgName = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sheetmsgname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sheetmsgname().data(), static_cast<int>(this->sheetmsgname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.sheetMsgName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string protoMsgName = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protomsgname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protomsgname().data(), static_cast<int>(this->protomsgname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelSheetInfo.protoMsgName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.ExcelSheetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.ExcelSheetInfo)
  return false;
#undef DO_
}

void ExcelSheetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.ExcelSheetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string unique_index = 2;
  if (this->unique_index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unique_index().data(), static_cast<int>(this->unique_index().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.unique_index");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->unique_index(), output);
  }

  // string multi_index = 3;
  if (this->multi_index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->multi_index().data(), static_cast<int>(this->multi_index().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.multi_index");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->multi_index(), output);
  }

  // string relation = 4;
  if (this->relation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->relation().data(), static_cast<int>(this->relation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.relation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->relation(), output);
  }

  // bool createSql = 5;
  if (this->createsql() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->createsql(), output);
  }

  // string field_enum = 6;
  if (this->field_enum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_enum().data(), static_cast<int>(this->field_enum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.field_enum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->field_enum(), output);
  }

  // string import_proto = 7;
  if (this->import_proto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->import_proto().data(), static_cast<int>(this->import_proto().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.import_proto");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->import_proto(), output);
  }

  // string colMessageType = 8;
  if (this->colmessagetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->colmessagetype().data(), static_cast<int>(this->colmessagetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.colMessageType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->colmessagetype(), output);
  }

  // string add_field = 9;
  if (this->add_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->add_field().data(), static_cast<int>(this->add_field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.add_field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->add_field(), output);
  }

  // string otherName = 10;
  if (this->othername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->othername().data(), static_cast<int>(this->othername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.otherName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->othername(), output);
  }

  // string sheetMsgName = 11;
  if (this->sheetmsgname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sheetmsgname().data(), static_cast<int>(this->sheetmsgname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.sheetMsgName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sheetmsgname(), output);
  }

  // string protoMsgName = 12;
  if (this->protomsgname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protomsgname().data(), static_cast<int>(this->protomsgname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.protoMsgName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->protomsgname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.ExcelSheetInfo)
}

::google::protobuf::uint8* ExcelSheetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.ExcelSheetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string unique_index = 2;
  if (this->unique_index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unique_index().data(), static_cast<int>(this->unique_index().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.unique_index");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->unique_index(), target);
  }

  // string multi_index = 3;
  if (this->multi_index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->multi_index().data(), static_cast<int>(this->multi_index().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.multi_index");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->multi_index(), target);
  }

  // string relation = 4;
  if (this->relation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->relation().data(), static_cast<int>(this->relation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.relation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->relation(), target);
  }

  // bool createSql = 5;
  if (this->createsql() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->createsql(), target);
  }

  // string field_enum = 6;
  if (this->field_enum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_enum().data(), static_cast<int>(this->field_enum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.field_enum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->field_enum(), target);
  }

  // string import_proto = 7;
  if (this->import_proto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->import_proto().data(), static_cast<int>(this->import_proto().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.import_proto");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->import_proto(), target);
  }

  // string colMessageType = 8;
  if (this->colmessagetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->colmessagetype().data(), static_cast<int>(this->colmessagetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.colMessageType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->colmessagetype(), target);
  }

  // string add_field = 9;
  if (this->add_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->add_field().data(), static_cast<int>(this->add_field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.add_field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->add_field(), target);
  }

  // string otherName = 10;
  if (this->othername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->othername().data(), static_cast<int>(this->othername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.otherName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->othername(), target);
  }

  // string sheetMsgName = 11;
  if (this->sheetmsgname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sheetmsgname().data(), static_cast<int>(this->sheetmsgname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.sheetMsgName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sheetmsgname(), target);
  }

  // string protoMsgName = 12;
  if (this->protomsgname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protomsgname().data(), static_cast<int>(this->protomsgname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelSheetInfo.protoMsgName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->protomsgname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.ExcelSheetInfo)
  return target;
}

size_t ExcelSheetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.ExcelSheetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string unique_index = 2;
  if (this->unique_index().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unique_index());
  }

  // string multi_index = 3;
  if (this->multi_index().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->multi_index());
  }

  // string relation = 4;
  if (this->relation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->relation());
  }

  // string field_enum = 6;
  if (this->field_enum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_enum());
  }

  // string import_proto = 7;
  if (this->import_proto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->import_proto());
  }

  // string colMessageType = 8;
  if (this->colmessagetype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->colmessagetype());
  }

  // string add_field = 9;
  if (this->add_field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->add_field());
  }

  // string otherName = 10;
  if (this->othername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->othername());
  }

  // string sheetMsgName = 11;
  if (this->sheetmsgname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sheetmsgname());
  }

  // string protoMsgName = 12;
  if (this->protomsgname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protomsgname());
  }

  // bool createSql = 5;
  if (this->createsql() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExcelSheetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.ExcelSheetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ExcelSheetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExcelSheetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.ExcelSheetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.ExcelSheetInfo)
    MergeFrom(*source);
  }
}

void ExcelSheetInfo::MergeFrom(const ExcelSheetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.ExcelSheetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.unique_index().size() > 0) {

    unique_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unique_index_);
  }
  if (from.multi_index().size() > 0) {

    multi_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.multi_index_);
  }
  if (from.relation().size() > 0) {

    relation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relation_);
  }
  if (from.field_enum().size() > 0) {

    field_enum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_enum_);
  }
  if (from.import_proto().size() > 0) {

    import_proto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.import_proto_);
  }
  if (from.colmessagetype().size() > 0) {

    colmessagetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.colmessagetype_);
  }
  if (from.add_field().size() > 0) {

    add_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.add_field_);
  }
  if (from.othername().size() > 0) {

    othername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.othername_);
  }
  if (from.sheetmsgname().size() > 0) {

    sheetmsgname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sheetmsgname_);
  }
  if (from.protomsgname().size() > 0) {

    protomsgname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protomsgname_);
  }
  if (from.createsql() != 0) {
    set_createsql(from.createsql());
  }
}

void ExcelSheetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.ExcelSheetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExcelSheetInfo::CopyFrom(const ExcelSheetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.ExcelSheetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExcelSheetInfo::IsInitialized() const {
  return true;
}

void ExcelSheetInfo::Swap(ExcelSheetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExcelSheetInfo::InternalSwap(ExcelSheetInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unique_index_.Swap(&other->unique_index_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  multi_index_.Swap(&other->multi_index_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  relation_.Swap(&other->relation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  field_enum_.Swap(&other->field_enum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  import_proto_.Swap(&other->import_proto_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  colmessagetype_.Swap(&other->colmessagetype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  add_field_.Swap(&other->add_field_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  othername_.Swap(&other->othername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sheetmsgname_.Swap(&other->sheetmsgname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  protomsgname_.Swap(&other->protomsgname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(createsql_, other->createsql_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExcelSheetInfo::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExcelPbInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExcelPbInfo::kNameFieldNumber;
const int ExcelPbInfo::kSheetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExcelPbInfo::ExcelPbInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_ExcelPbInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.ExcelPbInfo)
}
ExcelPbInfo::ExcelPbInfo(const ExcelPbInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sheet_(from.sheet_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.ExcelPbInfo)
}

void ExcelPbInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExcelPbInfo::~ExcelPbInfo() {
  // @@protoc_insertion_point(destructor:NFrame.ExcelPbInfo)
  SharedDtor();
}

void ExcelPbInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExcelPbInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExcelPbInfo::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExcelPbInfo& ExcelPbInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_ExcelPbInfo.base);
  return *internal_default_instance();
}


void ExcelPbInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.ExcelPbInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sheet_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ExcelPbInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.ExcelPbInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ExcelPbInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFrame.ExcelSheetInfo sheet = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sheet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.ExcelPbInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.ExcelPbInfo)
  return false;
#undef DO_
}

void ExcelPbInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.ExcelPbInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelPbInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .NFrame.ExcelSheetInfo sheet = 2 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sheet_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->sheet(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.ExcelPbInfo)
}

::google::protobuf::uint8* ExcelPbInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.ExcelPbInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ExcelPbInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .NFrame.ExcelSheetInfo sheet = 2 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sheet_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->sheet(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.ExcelPbInfo)
  return target;
}

size_t ExcelPbInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.ExcelPbInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFrame.ExcelSheetInfo sheet = 2 [(.nanopb) = {
  {
    unsigned int count = static_cast<unsigned int>(this->sheet_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sheet(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExcelPbInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.ExcelPbInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ExcelPbInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExcelPbInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.ExcelPbInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.ExcelPbInfo)
    MergeFrom(*source);
  }
}

void ExcelPbInfo::MergeFrom(const ExcelPbInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.ExcelPbInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sheet_.MergeFrom(from.sheet_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ExcelPbInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.ExcelPbInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExcelPbInfo::CopyFrom(const ExcelPbInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.ExcelPbInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExcelPbInfo::IsInitialized() const {
  return true;
}

void ExcelPbInfo::Swap(ExcelPbInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExcelPbInfo::InternalSwap(ExcelPbInfo* other) {
  using std::swap;
  CastToBase(&sheet_)->InternalSwap(CastToBase(&other->sheet_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExcelPbInfo::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExcelParseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExcelParseInfo::kExcelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExcelParseInfo::ExcelParseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameComm_2eproto::scc_info_ExcelParseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.ExcelParseInfo)
}
ExcelParseInfo::ExcelParseInfo(const ExcelParseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      excel_(from.excel_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFrame.ExcelParseInfo)
}

void ExcelParseInfo::SharedCtor() {
}

ExcelParseInfo::~ExcelParseInfo() {
  // @@protoc_insertion_point(destructor:NFrame.ExcelParseInfo)
  SharedDtor();
}

void ExcelParseInfo::SharedDtor() {
}

void ExcelParseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExcelParseInfo::descriptor() {
  ::protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExcelParseInfo& ExcelParseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameComm_2eproto::scc_info_ExcelParseInfo.base);
  return *internal_default_instance();
}


void ExcelParseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.ExcelParseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  excel_.Clear();
  _internal_metadata_.Clear();
}

bool ExcelParseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.ExcelParseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFrame.ExcelPbInfo excel = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_excel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.ExcelParseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.ExcelParseInfo)
  return false;
#undef DO_
}

void ExcelParseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.ExcelParseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFrame.ExcelPbInfo excel = 1 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->excel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->excel(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.ExcelParseInfo)
}

::google::protobuf::uint8* ExcelParseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.ExcelParseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFrame.ExcelPbInfo excel = 1 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->excel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->excel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.ExcelParseInfo)
  return target;
}

size_t ExcelParseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.ExcelParseInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFrame.ExcelPbInfo excel = 1 [(.nanopb) = {
  {
    unsigned int count = static_cast<unsigned int>(this->excel_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->excel(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExcelParseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.ExcelParseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ExcelParseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExcelParseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.ExcelParseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.ExcelParseInfo)
    MergeFrom(*source);
  }
}

void ExcelParseInfo::MergeFrom(const ExcelParseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.ExcelParseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  excel_.MergeFrom(from.excel_);
}

void ExcelParseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.ExcelParseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExcelParseInfo::CopyFrom(const ExcelParseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.ExcelParseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExcelParseInfo::IsInitialized() const {
  return true;
}

void ExcelParseInfo::Swap(ExcelParseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExcelParseInfo::InternalSwap(ExcelParseInfo* other) {
  using std::swap;
  CastToBase(&excel_)->InternalSwap(CastToBase(&other->excel_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExcelParseInfo::GetMetadata() const {
  protobuf_FrameComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFrame
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::tbServerMgr* Arena::CreateMaybeMessage< ::NFrame::tbServerMgr >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::tbServerMgr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::pbMysqlConfig* Arena::CreateMaybeMessage< ::NFrame::pbMysqlConfig >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::pbMysqlConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::pbRedisConfig* Arena::CreateMaybeMessage< ::NFrame::pbRedisConfig >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::pbRedisConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::pbRouteConfig* Arena::CreateMaybeMessage< ::NFrame::pbRouteConfig >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::pbRouteConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::pbPluginConfig* Arena::CreateMaybeMessage< ::NFrame::pbPluginConfig >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::pbPluginConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::pbAllServerConfig* Arena::CreateMaybeMessage< ::NFrame::pbAllServerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::pbAllServerConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::pbTableConfig* Arena::CreateMaybeMessage< ::NFrame::pbTableConfig >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::pbTableConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::pbEncryptConfig* Arena::CreateMaybeMessage< ::NFrame::pbEncryptConfig >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::pbEncryptConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::pbNFServerConfig* Arena::CreateMaybeMessage< ::NFrame::pbNFServerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::pbNFServerConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::wxWorkRobotText* Arena::CreateMaybeMessage< ::NFrame::wxWorkRobotText >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::wxWorkRobotText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::wxWorkRobotHttpPost* Arena::CreateMaybeMessage< ::NFrame::wxWorkRobotHttpPost >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::wxWorkRobotHttpPost >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::ExcelSheetInfo* Arena::CreateMaybeMessage< ::NFrame::ExcelSheetInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::ExcelSheetInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::ExcelPbInfo* Arena::CreateMaybeMessage< ::NFrame::ExcelPbInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::ExcelPbInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::ExcelParseInfo* Arena::CreateMaybeMessage< ::NFrame::ExcelParseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::ExcelParseInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
