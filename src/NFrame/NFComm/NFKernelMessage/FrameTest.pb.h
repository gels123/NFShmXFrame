// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameTest.proto

#ifndef PROTOBUF_INCLUDED_FrameTest_2eproto
#define PROTOBUF_INCLUDED_FrameTest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "nanopb.pb.h"
#include "FrameTestEnum.pb.h"
#include "FrameTestComm.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_FrameTest_2eproto 

namespace protobuf_FrameTest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_FrameTest_2eproto
namespace NFrame {
class wxWorkRobotTextMore;
class wxWorkRobotTextMoreDefaultTypeInternal;
extern wxWorkRobotTextMoreDefaultTypeInternal _wxWorkRobotTextMore_default_instance_;
}  // namespace NFrame
namespace google {
namespace protobuf {
template<> ::NFrame::wxWorkRobotTextMore* Arena::CreateMaybeMessage<::NFrame::wxWorkRobotTextMore>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace NFrame {

// ===================================================================

class wxWorkRobotTextMore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFrame.wxWorkRobotTextMore) */ {
 public:
  wxWorkRobotTextMore();
  virtual ~wxWorkRobotTextMore();

  wxWorkRobotTextMore(const wxWorkRobotTextMore& from);

  inline wxWorkRobotTextMore& operator=(const wxWorkRobotTextMore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  wxWorkRobotTextMore(wxWorkRobotTextMore&& from) noexcept
    : wxWorkRobotTextMore() {
    *this = ::std::move(from);
  }

  inline wxWorkRobotTextMore& operator=(wxWorkRobotTextMore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const wxWorkRobotTextMore& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const wxWorkRobotTextMore* internal_default_instance() {
    return reinterpret_cast<const wxWorkRobotTextMore*>(
               &_wxWorkRobotTextMore_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(wxWorkRobotTextMore* other);
  friend void swap(wxWorkRobotTextMore& a, wxWorkRobotTextMore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline wxWorkRobotTextMore* New() const final {
    return CreateMaybeMessage<wxWorkRobotTextMore>(NULL);
  }

  wxWorkRobotTextMore* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<wxWorkRobotTextMore>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const wxWorkRobotTextMore& from);
  void MergeFrom(const wxWorkRobotTextMore& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(wxWorkRobotTextMore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NFrameComm.wxWorkRobotTextTest test_map = 1 [(.nanopb) = {
  int test_map_size() const;
  void clear_test_map();
  static const int kTestMapFieldNumber = 1;
  ::NFrameComm::wxWorkRobotTextTest* mutable_test_map(int index);
  ::google::protobuf::RepeatedPtrField< ::NFrameComm::wxWorkRobotTextTest >*
      mutable_test_map();
  const ::NFrameComm::wxWorkRobotTextTest& test_map(int index) const;
  ::NFrameComm::wxWorkRobotTextTest* add_test_map();
  const ::google::protobuf::RepeatedPtrField< ::NFrameComm::wxWorkRobotTextTest >&
      test_map() const;

  // repeated .NFrameComm.wxWorkRobotTextTest test_set = 2 [(.nanopb) = {
  int test_set_size() const;
  void clear_test_set();
  static const int kTestSetFieldNumber = 2;
  ::NFrameComm::wxWorkRobotTextTest* mutable_test_set(int index);
  ::google::protobuf::RepeatedPtrField< ::NFrameComm::wxWorkRobotTextTest >*
      mutable_test_set();
  const ::NFrameComm::wxWorkRobotTextTest& test_set(int index) const;
  ::NFrameComm::wxWorkRobotTextTest* add_test_set();
  const ::google::protobuf::RepeatedPtrField< ::NFrameComm::wxWorkRobotTextTest >&
      test_set() const;

  // @@protoc_insertion_point(class_scope:NFrame.wxWorkRobotTextMore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NFrameComm::wxWorkRobotTextTest > test_map_;
  ::google::protobuf::RepeatedPtrField< ::NFrameComm::wxWorkRobotTextTest > test_set_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameTest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// wxWorkRobotTextMore

// repeated .NFrameComm.wxWorkRobotTextTest test_map = 1 [(.nanopb) = {
inline int wxWorkRobotTextMore::test_map_size() const {
  return test_map_.size();
}
inline ::NFrameComm::wxWorkRobotTextTest* wxWorkRobotTextMore::mutable_test_map(int index) {
  // @@protoc_insertion_point(field_mutable:NFrame.wxWorkRobotTextMore.test_map)
  return test_map_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NFrameComm::wxWorkRobotTextTest >*
wxWorkRobotTextMore::mutable_test_map() {
  // @@protoc_insertion_point(field_mutable_list:NFrame.wxWorkRobotTextMore.test_map)
  return &test_map_;
}
inline const ::NFrameComm::wxWorkRobotTextTest& wxWorkRobotTextMore::test_map(int index) const {
  // @@protoc_insertion_point(field_get:NFrame.wxWorkRobotTextMore.test_map)
  return test_map_.Get(index);
}
inline ::NFrameComm::wxWorkRobotTextTest* wxWorkRobotTextMore::add_test_map() {
  // @@protoc_insertion_point(field_add:NFrame.wxWorkRobotTextMore.test_map)
  return test_map_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NFrameComm::wxWorkRobotTextTest >&
wxWorkRobotTextMore::test_map() const {
  // @@protoc_insertion_point(field_list:NFrame.wxWorkRobotTextMore.test_map)
  return test_map_;
}

// repeated .NFrameComm.wxWorkRobotTextTest test_set = 2 [(.nanopb) = {
inline int wxWorkRobotTextMore::test_set_size() const {
  return test_set_.size();
}
inline ::NFrameComm::wxWorkRobotTextTest* wxWorkRobotTextMore::mutable_test_set(int index) {
  // @@protoc_insertion_point(field_mutable:NFrame.wxWorkRobotTextMore.test_set)
  return test_set_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NFrameComm::wxWorkRobotTextTest >*
wxWorkRobotTextMore::mutable_test_set() {
  // @@protoc_insertion_point(field_mutable_list:NFrame.wxWorkRobotTextMore.test_set)
  return &test_set_;
}
inline const ::NFrameComm::wxWorkRobotTextTest& wxWorkRobotTextMore::test_set(int index) const {
  // @@protoc_insertion_point(field_get:NFrame.wxWorkRobotTextMore.test_set)
  return test_set_.Get(index);
}
inline ::NFrameComm::wxWorkRobotTextTest* wxWorkRobotTextMore::add_test_set() {
  // @@protoc_insertion_point(field_add:NFrame.wxWorkRobotTextMore.test_set)
  return test_set_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NFrameComm::wxWorkRobotTextTest >&
wxWorkRobotTextMore::test_set() const {
  // @@protoc_insertion_point(field_list:NFrame.wxWorkRobotTextMore.test_set)
  return test_set_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace NFrame

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_FrameTest_2eproto
