// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameBehavior.proto

#include "FrameBehavior.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace NFrame {
class BevLogBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BevLogBaseInfo>
      _instance;
} _BevLogBaseInfo_default_instance_;
class BevLogDeviceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BevLogDeviceInfo>
      _instance;
} _BevLogDeviceInfo_default_instance_;
class BevLogRoleBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BevLogRoleBaseInfo>
      _instance;
} _BevLogRoleBaseInfo_default_instance_;
class BevLogTransBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BevLogTransBaseInfo>
      _instance;
} _BevLogTransBaseInfo_default_instance_;
class ServerStateFlowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerStateFlow>
      _instance;
} _ServerStateFlow_default_instance_;
}  // namespace NFrame
namespace protobuf_FrameBehavior_2eproto {
static void InitDefaultsBevLogBaseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_BevLogBaseInfo_default_instance_;
    new (ptr) ::NFrame::BevLogBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::BevLogBaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BevLogBaseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBevLogBaseInfo}, {}};

static void InitDefaultsBevLogDeviceInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_BevLogDeviceInfo_default_instance_;
    new (ptr) ::NFrame::BevLogDeviceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::BevLogDeviceInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BevLogDeviceInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBevLogDeviceInfo}, {}};

static void InitDefaultsBevLogRoleBaseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_BevLogRoleBaseInfo_default_instance_;
    new (ptr) ::NFrame::BevLogRoleBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::BevLogRoleBaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BevLogRoleBaseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBevLogRoleBaseInfo}, {}};

static void InitDefaultsBevLogTransBaseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_BevLogTransBaseInfo_default_instance_;
    new (ptr) ::NFrame::BevLogTransBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::BevLogTransBaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BevLogTransBaseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBevLogTransBaseInfo}, {}};

static void InitDefaultsServerStateFlow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_ServerStateFlow_default_instance_;
    new (ptr) ::NFrame::ServerStateFlow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::ServerStateFlow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerStateFlow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerStateFlow}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BevLogBaseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BevLogDeviceInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BevLogRoleBaseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BevLogTransBaseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerStateFlow.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogBaseInfo, szgamesvrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogBaseInfo, tdteventtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogBaseInfo, szvgameappid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogBaseInfo, iplatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogBaseInfo, iizoneareaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogBaseInfo, szvopenid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szclientversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szsystemsoftware_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szsystemhardware_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, sztelecomoper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, sznetwork_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, iscreenwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, iscreenhight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, fdensity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szcpuhardware_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, imemory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szglrender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szglversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, iisroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szipstr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, iport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szipv6str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szmacaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, szinstallpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogDeviceInfo, icountrycode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, szvroleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, szvrolename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, iihomelevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, isurvivelevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, ibattlelevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, llfamilyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, iiviplevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, iprofid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, igender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, ibattleforce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogRoleBaseInfo, ibirthtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogTransBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogTransBaseInfo, iglobalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogTransBaseInfo, ierrcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogTransBaseInfo, ieottype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogTransBaseInfo, ulltransstarttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::BevLogTransBaseInfo, ulltransstoptime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerStateFlow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerStateFlow, tdteventtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerStateFlow, szvgameip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerStateFlow, iizoneareaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerStateFlow, iitimeshift_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NFrame::BevLogBaseInfo)},
  { 11, -1, sizeof(::NFrame::BevLogDeviceInfo)},
  { 36, -1, sizeof(::NFrame::BevLogRoleBaseInfo)},
  { 52, -1, sizeof(::NFrame::BevLogTransBaseInfo)},
  { 62, -1, sizeof(::NFrame::ServerStateFlow)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_BevLogBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_BevLogDeviceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_BevLogRoleBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_BevLogTransBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_ServerStateFlow_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FrameBehavior.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023FrameBehavior.proto\022\006NFrame\032\014nanopb.pr"
      "oto\032\017FrameEnum.proto\"\350\001\n\016BevLogBaseInfo\022"
      "2\n\013szGameSvrId\030\001 \001(\tB\035\222\?\024\222\001\021MAX_STRING_L"
      "EN_32\222\?\003\200\002\001\022\024\n\014tDtEventTime\030\002 \001(\004\0223\n\014szV"
      "GameAppid\030\003 \001(\tB\035\222\?\024\222\001\021MAX_STRING_LEN_32"
      "\222\?\003\200\002\001\022\017\n\007iPlatID\030\004 \001(\005\022\024\n\014iIZoneAreaID\030"
      "\005 \001(\005\0220\n\tszVopenid\030\006 \001(\tB\035\222\?\024\222\001\021MAX_STRI"
      "NG_LEN_64\222\?\003\200\002\001\"\305\006\n\020BevLogDeviceInfo\0226\n\017"
      "szClientVersion\030\001 \001(\tB\035\222\?\024\222\001\021MAX_STRING_"
      "LEN_64\222\?\003\200\002\001\0227\n\020szSystemSoftware\030\002 \001(\tB\035"
      "\222\?\024\222\001\021MAX_STRING_LEN_64\222\?\003\200\002\001\0227\n\020szSyste"
      "mHardware\030\003 \001(\tB\035\222\?\024\222\001\021MAX_STRING_LEN_64"
      "\222\?\003\200\002\001\0224\n\rszTelecomOper\030\004 \001(\tB\035\222\?\024\222\001\021MAX"
      "_STRING_LEN_64\222\?\003\200\002\001\0220\n\tszNetwork\030\005 \001(\tB"
      "\035\222\?\024\222\001\021MAX_STRING_LEN_64\222\?\003\200\002\001\022\024\n\014iScree"
      "nWidth\030\006 \001(\005\022\024\n\014iScreenHight\030\007 \001(\005\022\020\n\010fD"
      "ensity\030\010 \001(\002\0224\n\rszCpuHardware\030\t \001(\tB\035\222\?\024"
      "\222\001\021MAX_STRING_LEN_64\222\?\003\200\002\001\022\017\n\007iMemory\030\n "
      "\001(\005\0221\n\nszGLRender\030\013 \001(\tB\035\222\?\024\222\001\021MAX_STRIN"
      "G_LEN_64\222\?\003\200\002\001\0223\n\013szGLVersion\030\014 \001(\tB\036\222\?\025"
      "\222\001\022MAX_STRING_LEN_128\222\?\003\200\002\001\0221\n\nszDeviceI"
      "d\030\r \001(\tB\035\222\?\024\222\001\021MAX_STRING_LEN_64\222\?\003\200\002\001\022\017"
      "\n\007iIsRoot\030\016 \001(\005\022.\n\007szIPStr\030\017 \001(\tB\035\222\?\024\222\001\021"
      "MAX_STRING_LEN_16\222\?\003\200\002\001\022\r\n\005iPort\030\020 \001(\005\0220"
      "\n\tszIPV6Str\030\021 \001(\tB\035\222\?\024\222\001\021MAX_STRING_LEN_"
      "64\222\?\003\200\002\001\0220\n\tszMacAddr\030\022 \001(\tB\035\222\?\024\222\001\021MAX_S"
      "TRING_LEN_32\222\?\003\200\002\001\0225\n\rszInstallPath\030\023 \001("
      "\tB\036\222\?\025\222\001\022MAX_STRING_LEN_256\222\?\003\200\002\001\022\024\n\014iCo"
      "untryCode\030\024 \001(\005\"\261\002\n\022BevLogRoleBaseInfo\0220"
      "\n\tszVRoleID\030\001 \001(\tB\035\222\?\024\222\001\021MAX_STRING_LEN_"
      "64\222\?\003\200\002\001\0223\n\013szVRoleName\030\002 \001(\tB\036\222\?\025\222\001\022MAX"
      "_STRING_LEN_128\222\?\003\200\002\001\022\023\n\013iIHomeLevel\030\003 \001"
      "(\005\022\025\n\riSurviveLevel\030\004 \001(\005\022\024\n\014iBattleLeve"
      "l\030\005 \001(\005\022\022\n\nllFamilyID\030\006 \001(\003\022\022\n\niIVipLeve"
      "l\030\007 \001(\005\022\017\n\007iProfId\030\010 \001(\005\022\017\n\007iGender\030\t \001("
      "\005\022\024\n\014iBattleForce\030\n \001(\005\022\022\n\niBirthTime\030\013 "
      "\001(\005\"\201\001\n\023BevLogTransBaseInfo\022\021\n\tiGlobalID"
      "\030\001 \001(\005\022\020\n\010iErrCode\030\002 \001(\005\022\020\n\010iEotType\030\003 \001"
      "(\005\022\031\n\021ullTransStartTime\030\004 \001(\004\022\030\n\020ullTran"
      "sStopTime\030\005 \001(\004\"\214\001\n\017ServerStateFlow\022\034\n\014t"
      "DtEventTime\030\001 \001(\004B\006\222\?\003\310\002\001\0220\n\tszVGameIP\030\002"
      " \001(\tB\035\222\?\024\222\001\021MAX_STRING_LEN_32\222\?\003\200\002\001\022\024\n\014i"
      "IZoneAreaID\030\003 \001(\005\022\023\n\013iITimeShift\030\004 \001(\005b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1726);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrameBehavior.proto", &protobuf_RegisterTypes);
  ::protobuf_nanopb_2eproto::AddDescriptors();
  ::protobuf_FrameEnum_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrameBehavior_2eproto
namespace NFrame {

// ===================================================================

void BevLogBaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BevLogBaseInfo::kSzGameSvrIdFieldNumber;
const int BevLogBaseInfo::kTDtEventTimeFieldNumber;
const int BevLogBaseInfo::kSzVGameAppidFieldNumber;
const int BevLogBaseInfo::kIPlatIDFieldNumber;
const int BevLogBaseInfo::kIIZoneAreaIDFieldNumber;
const int BevLogBaseInfo::kSzVopenidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BevLogBaseInfo::BevLogBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameBehavior_2eproto::scc_info_BevLogBaseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.BevLogBaseInfo)
}
BevLogBaseInfo::BevLogBaseInfo(const BevLogBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szgamesvrid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szgamesvrid().size() > 0) {
    szgamesvrid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szgamesvrid_);
  }
  szvgameappid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szvgameappid().size() > 0) {
    szvgameappid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvgameappid_);
  }
  szvopenid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szvopenid().size() > 0) {
    szvopenid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvopenid_);
  }
  ::memcpy(&tdteventtime_, &from.tdteventtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&iizoneareaid_) -
    reinterpret_cast<char*>(&tdteventtime_)) + sizeof(iizoneareaid_));
  // @@protoc_insertion_point(copy_constructor:NFrame.BevLogBaseInfo)
}

void BevLogBaseInfo::SharedCtor() {
  szgamesvrid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szvgameappid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szvopenid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tdteventtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iizoneareaid_) -
      reinterpret_cast<char*>(&tdteventtime_)) + sizeof(iizoneareaid_));
}

BevLogBaseInfo::~BevLogBaseInfo() {
  // @@protoc_insertion_point(destructor:NFrame.BevLogBaseInfo)
  SharedDtor();
}

void BevLogBaseInfo::SharedDtor() {
  szgamesvrid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szvgameappid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szvopenid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BevLogBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BevLogBaseInfo::descriptor() {
  ::protobuf_FrameBehavior_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameBehavior_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BevLogBaseInfo& BevLogBaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameBehavior_2eproto::scc_info_BevLogBaseInfo.base);
  return *internal_default_instance();
}


void BevLogBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.BevLogBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  szgamesvrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szvgameappid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szvopenid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tdteventtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iizoneareaid_) -
      reinterpret_cast<char*>(&tdteventtime_)) + sizeof(iizoneareaid_));
  _internal_metadata_.Clear();
}

bool BevLogBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.BevLogBaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string szGameSvrId = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szgamesvrid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szgamesvrid().data(), static_cast<int>(this->szgamesvrid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogBaseInfo.szGameSvrId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tDtEventTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tdteventtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szVGameAppid = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szvgameappid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szvgameappid().data(), static_cast<int>(this->szvgameappid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogBaseInfo.szVGameAppid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iPlatID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iplatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iIZoneAreaID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iizoneareaid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szVopenid = 6 [(.nanopb) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szvopenid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szvopenid().data(), static_cast<int>(this->szvopenid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogBaseInfo.szVopenid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.BevLogBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.BevLogBaseInfo)
  return false;
#undef DO_
}

void BevLogBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.BevLogBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string szGameSvrId = 1 [(.nanopb) = {
  if (this->szgamesvrid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szgamesvrid().data(), static_cast<int>(this->szgamesvrid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogBaseInfo.szGameSvrId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->szgamesvrid(), output);
  }

  // uint64 tDtEventTime = 2;
  if (this->tdteventtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tdteventtime(), output);
  }

  // string szVGameAppid = 3 [(.nanopb) = {
  if (this->szvgameappid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvgameappid().data(), static_cast<int>(this->szvgameappid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogBaseInfo.szVGameAppid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->szvgameappid(), output);
  }

  // int32 iPlatID = 4;
  if (this->iplatid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->iplatid(), output);
  }

  // int32 iIZoneAreaID = 5;
  if (this->iizoneareaid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->iizoneareaid(), output);
  }

  // string szVopenid = 6 [(.nanopb) = {
  if (this->szvopenid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvopenid().data(), static_cast<int>(this->szvopenid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogBaseInfo.szVopenid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->szvopenid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.BevLogBaseInfo)
}

::google::protobuf::uint8* BevLogBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.BevLogBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string szGameSvrId = 1 [(.nanopb) = {
  if (this->szgamesvrid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szgamesvrid().data(), static_cast<int>(this->szgamesvrid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogBaseInfo.szGameSvrId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->szgamesvrid(), target);
  }

  // uint64 tDtEventTime = 2;
  if (this->tdteventtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->tdteventtime(), target);
  }

  // string szVGameAppid = 3 [(.nanopb) = {
  if (this->szvgameappid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvgameappid().data(), static_cast<int>(this->szvgameappid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogBaseInfo.szVGameAppid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->szvgameappid(), target);
  }

  // int32 iPlatID = 4;
  if (this->iplatid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->iplatid(), target);
  }

  // int32 iIZoneAreaID = 5;
  if (this->iizoneareaid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->iizoneareaid(), target);
  }

  // string szVopenid = 6 [(.nanopb) = {
  if (this->szvopenid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvopenid().data(), static_cast<int>(this->szvopenid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogBaseInfo.szVopenid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->szvopenid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.BevLogBaseInfo)
  return target;
}

size_t BevLogBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.BevLogBaseInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string szGameSvrId = 1 [(.nanopb) = {
  if (this->szgamesvrid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szgamesvrid());
  }

  // string szVGameAppid = 3 [(.nanopb) = {
  if (this->szvgameappid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szvgameappid());
  }

  // string szVopenid = 6 [(.nanopb) = {
  if (this->szvopenid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szvopenid());
  }

  // uint64 tDtEventTime = 2;
  if (this->tdteventtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tdteventtime());
  }

  // int32 iPlatID = 4;
  if (this->iplatid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iplatid());
  }

  // int32 iIZoneAreaID = 5;
  if (this->iizoneareaid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iizoneareaid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BevLogBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.BevLogBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BevLogBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BevLogBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.BevLogBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.BevLogBaseInfo)
    MergeFrom(*source);
  }
}

void BevLogBaseInfo::MergeFrom(const BevLogBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.BevLogBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.szgamesvrid().size() > 0) {

    szgamesvrid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szgamesvrid_);
  }
  if (from.szvgameappid().size() > 0) {

    szvgameappid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvgameappid_);
  }
  if (from.szvopenid().size() > 0) {

    szvopenid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvopenid_);
  }
  if (from.tdteventtime() != 0) {
    set_tdteventtime(from.tdteventtime());
  }
  if (from.iplatid() != 0) {
    set_iplatid(from.iplatid());
  }
  if (from.iizoneareaid() != 0) {
    set_iizoneareaid(from.iizoneareaid());
  }
}

void BevLogBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.BevLogBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BevLogBaseInfo::CopyFrom(const BevLogBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.BevLogBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BevLogBaseInfo::IsInitialized() const {
  return true;
}

void BevLogBaseInfo::Swap(BevLogBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BevLogBaseInfo::InternalSwap(BevLogBaseInfo* other) {
  using std::swap;
  szgamesvrid_.Swap(&other->szgamesvrid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szvgameappid_.Swap(&other->szvgameappid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szvopenid_.Swap(&other->szvopenid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tdteventtime_, other->tdteventtime_);
  swap(iplatid_, other->iplatid_);
  swap(iizoneareaid_, other->iizoneareaid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BevLogBaseInfo::GetMetadata() const {
  protobuf_FrameBehavior_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameBehavior_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BevLogDeviceInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BevLogDeviceInfo::kSzClientVersionFieldNumber;
const int BevLogDeviceInfo::kSzSystemSoftwareFieldNumber;
const int BevLogDeviceInfo::kSzSystemHardwareFieldNumber;
const int BevLogDeviceInfo::kSzTelecomOperFieldNumber;
const int BevLogDeviceInfo::kSzNetworkFieldNumber;
const int BevLogDeviceInfo::kIScreenWidthFieldNumber;
const int BevLogDeviceInfo::kIScreenHightFieldNumber;
const int BevLogDeviceInfo::kFDensityFieldNumber;
const int BevLogDeviceInfo::kSzCpuHardwareFieldNumber;
const int BevLogDeviceInfo::kIMemoryFieldNumber;
const int BevLogDeviceInfo::kSzGLRenderFieldNumber;
const int BevLogDeviceInfo::kSzGLVersionFieldNumber;
const int BevLogDeviceInfo::kSzDeviceIdFieldNumber;
const int BevLogDeviceInfo::kIIsRootFieldNumber;
const int BevLogDeviceInfo::kSzIPStrFieldNumber;
const int BevLogDeviceInfo::kIPortFieldNumber;
const int BevLogDeviceInfo::kSzIPV6StrFieldNumber;
const int BevLogDeviceInfo::kSzMacAddrFieldNumber;
const int BevLogDeviceInfo::kSzInstallPathFieldNumber;
const int BevLogDeviceInfo::kICountryCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BevLogDeviceInfo::BevLogDeviceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameBehavior_2eproto::scc_info_BevLogDeviceInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.BevLogDeviceInfo)
}
BevLogDeviceInfo::BevLogDeviceInfo(const BevLogDeviceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szclientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szclientversion().size() > 0) {
    szclientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szclientversion_);
  }
  szsystemsoftware_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szsystemsoftware().size() > 0) {
    szsystemsoftware_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szsystemsoftware_);
  }
  szsystemhardware_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szsystemhardware().size() > 0) {
    szsystemhardware_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szsystemhardware_);
  }
  sztelecomoper_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sztelecomoper().size() > 0) {
    sztelecomoper_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sztelecomoper_);
  }
  sznetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sznetwork().size() > 0) {
    sznetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sznetwork_);
  }
  szcpuhardware_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szcpuhardware().size() > 0) {
    szcpuhardware_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcpuhardware_);
  }
  szglrender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szglrender().size() > 0) {
    szglrender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szglrender_);
  }
  szglversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szglversion().size() > 0) {
    szglversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szglversion_);
  }
  szdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szdeviceid().size() > 0) {
    szdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szdeviceid_);
  }
  szipstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szipstr().size() > 0) {
    szipstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szipstr_);
  }
  szipv6str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szipv6str().size() > 0) {
    szipv6str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szipv6str_);
  }
  szmacaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szmacaddr().size() > 0) {
    szmacaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmacaddr_);
  }
  szinstallpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szinstallpath().size() > 0) {
    szinstallpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szinstallpath_);
  }
  ::memcpy(&iscreenwidth_, &from.iscreenwidth_,
    static_cast<size_t>(reinterpret_cast<char*>(&icountrycode_) -
    reinterpret_cast<char*>(&iscreenwidth_)) + sizeof(icountrycode_));
  // @@protoc_insertion_point(copy_constructor:NFrame.BevLogDeviceInfo)
}

void BevLogDeviceInfo::SharedCtor() {
  szclientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szsystemsoftware_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szsystemhardware_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sztelecomoper_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sznetwork_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcpuhardware_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szglrender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szglversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szipstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szipv6str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmacaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szinstallpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&iscreenwidth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&icountrycode_) -
      reinterpret_cast<char*>(&iscreenwidth_)) + sizeof(icountrycode_));
}

BevLogDeviceInfo::~BevLogDeviceInfo() {
  // @@protoc_insertion_point(destructor:NFrame.BevLogDeviceInfo)
  SharedDtor();
}

void BevLogDeviceInfo::SharedDtor() {
  szclientversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szsystemsoftware_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szsystemhardware_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sztelecomoper_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sznetwork_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcpuhardware_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szglrender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szglversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szipstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szipv6str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmacaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szinstallpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BevLogDeviceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BevLogDeviceInfo::descriptor() {
  ::protobuf_FrameBehavior_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameBehavior_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BevLogDeviceInfo& BevLogDeviceInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameBehavior_2eproto::scc_info_BevLogDeviceInfo.base);
  return *internal_default_instance();
}


void BevLogDeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.BevLogDeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  szclientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szsystemsoftware_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szsystemhardware_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sztelecomoper_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sznetwork_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcpuhardware_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szglrender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szglversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szipstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szipv6str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmacaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szinstallpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&iscreenwidth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&icountrycode_) -
      reinterpret_cast<char*>(&iscreenwidth_)) + sizeof(icountrycode_));
  _internal_metadata_.Clear();
}

bool BevLogDeviceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.BevLogDeviceInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string szClientVersion = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szclientversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szclientversion().data(), static_cast<int>(this->szclientversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szClientVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szSystemSoftware = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szsystemsoftware()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szsystemsoftware().data(), static_cast<int>(this->szsystemsoftware().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szSystemSoftware"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szSystemHardware = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szsystemhardware()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szsystemhardware().data(), static_cast<int>(this->szsystemhardware().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szSystemHardware"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szTelecomOper = 4 [(.nanopb) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sztelecomoper()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sztelecomoper().data(), static_cast<int>(this->sztelecomoper().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szTelecomOper"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szNetwork = 5 [(.nanopb) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sznetwork()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sznetwork().data(), static_cast<int>(this->sznetwork().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szNetwork"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iScreenWidth = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iscreenwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iScreenHight = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iscreenhight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fDensity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fdensity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szCpuHardware = 9 [(.nanopb) = {
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szcpuhardware()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szcpuhardware().data(), static_cast<int>(this->szcpuhardware().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szCpuHardware"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iMemory = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &imemory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szGLRender = 11 [(.nanopb) = {
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szglrender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szglrender().data(), static_cast<int>(this->szglrender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szGLRender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szGLVersion = 12 [(.nanopb) = {
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szglversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szglversion().data(), static_cast<int>(this->szglversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szGLVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szDeviceId = 13 [(.nanopb) = {
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szdeviceid().data(), static_cast<int>(this->szdeviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szDeviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iIsRoot = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iisroot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szIPStr = 15 [(.nanopb) = {
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szipstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szipstr().data(), static_cast<int>(this->szipstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szIPStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iPort = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szIPV6Str = 17 [(.nanopb) = {
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szipv6str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szipv6str().data(), static_cast<int>(this->szipv6str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szIPV6Str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szMacAddr = 18 [(.nanopb) = {
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szmacaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szmacaddr().data(), static_cast<int>(this->szmacaddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szMacAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szInstallPath = 19 [(.nanopb) = {
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szinstallpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szinstallpath().data(), static_cast<int>(this->szinstallpath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogDeviceInfo.szInstallPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iCountryCode = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &icountrycode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.BevLogDeviceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.BevLogDeviceInfo)
  return false;
#undef DO_
}

void BevLogDeviceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.BevLogDeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string szClientVersion = 1 [(.nanopb) = {
  if (this->szclientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szclientversion().data(), static_cast<int>(this->szclientversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szClientVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->szclientversion(), output);
  }

  // string szSystemSoftware = 2 [(.nanopb) = {
  if (this->szsystemsoftware().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szsystemsoftware().data(), static_cast<int>(this->szsystemsoftware().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szSystemSoftware");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szsystemsoftware(), output);
  }

  // string szSystemHardware = 3 [(.nanopb) = {
  if (this->szsystemhardware().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szsystemhardware().data(), static_cast<int>(this->szsystemhardware().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szSystemHardware");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->szsystemhardware(), output);
  }

  // string szTelecomOper = 4 [(.nanopb) = {
  if (this->sztelecomoper().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sztelecomoper().data(), static_cast<int>(this->sztelecomoper().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szTelecomOper");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sztelecomoper(), output);
  }

  // string szNetwork = 5 [(.nanopb) = {
  if (this->sznetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sznetwork().data(), static_cast<int>(this->sznetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szNetwork");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sznetwork(), output);
  }

  // int32 iScreenWidth = 6;
  if (this->iscreenwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->iscreenwidth(), output);
  }

  // int32 iScreenHight = 7;
  if (this->iscreenhight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->iscreenhight(), output);
  }

  // float fDensity = 8;
  if (this->fdensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->fdensity(), output);
  }

  // string szCpuHardware = 9 [(.nanopb) = {
  if (this->szcpuhardware().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szcpuhardware().data(), static_cast<int>(this->szcpuhardware().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szCpuHardware");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->szcpuhardware(), output);
  }

  // int32 iMemory = 10;
  if (this->imemory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->imemory(), output);
  }

  // string szGLRender = 11 [(.nanopb) = {
  if (this->szglrender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szglrender().data(), static_cast<int>(this->szglrender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szGLRender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->szglrender(), output);
  }

  // string szGLVersion = 12 [(.nanopb) = {
  if (this->szglversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szglversion().data(), static_cast<int>(this->szglversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szGLVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->szglversion(), output);
  }

  // string szDeviceId = 13 [(.nanopb) = {
  if (this->szdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szdeviceid().data(), static_cast<int>(this->szdeviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szDeviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->szdeviceid(), output);
  }

  // int32 iIsRoot = 14;
  if (this->iisroot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->iisroot(), output);
  }

  // string szIPStr = 15 [(.nanopb) = {
  if (this->szipstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szipstr().data(), static_cast<int>(this->szipstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szIPStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->szipstr(), output);
  }

  // int32 iPort = 16;
  if (this->iport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->iport(), output);
  }

  // string szIPV6Str = 17 [(.nanopb) = {
  if (this->szipv6str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szipv6str().data(), static_cast<int>(this->szipv6str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szIPV6Str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->szipv6str(), output);
  }

  // string szMacAddr = 18 [(.nanopb) = {
  if (this->szmacaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmacaddr().data(), static_cast<int>(this->szmacaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szMacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->szmacaddr(), output);
  }

  // string szInstallPath = 19 [(.nanopb) = {
  if (this->szinstallpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szinstallpath().data(), static_cast<int>(this->szinstallpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szInstallPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->szinstallpath(), output);
  }

  // int32 iCountryCode = 20;
  if (this->icountrycode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->icountrycode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.BevLogDeviceInfo)
}

::google::protobuf::uint8* BevLogDeviceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.BevLogDeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string szClientVersion = 1 [(.nanopb) = {
  if (this->szclientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szclientversion().data(), static_cast<int>(this->szclientversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szClientVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->szclientversion(), target);
  }

  // string szSystemSoftware = 2 [(.nanopb) = {
  if (this->szsystemsoftware().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szsystemsoftware().data(), static_cast<int>(this->szsystemsoftware().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szSystemSoftware");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szsystemsoftware(), target);
  }

  // string szSystemHardware = 3 [(.nanopb) = {
  if (this->szsystemhardware().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szsystemhardware().data(), static_cast<int>(this->szsystemhardware().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szSystemHardware");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->szsystemhardware(), target);
  }

  // string szTelecomOper = 4 [(.nanopb) = {
  if (this->sztelecomoper().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sztelecomoper().data(), static_cast<int>(this->sztelecomoper().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szTelecomOper");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sztelecomoper(), target);
  }

  // string szNetwork = 5 [(.nanopb) = {
  if (this->sznetwork().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sznetwork().data(), static_cast<int>(this->sznetwork().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szNetwork");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sznetwork(), target);
  }

  // int32 iScreenWidth = 6;
  if (this->iscreenwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->iscreenwidth(), target);
  }

  // int32 iScreenHight = 7;
  if (this->iscreenhight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->iscreenhight(), target);
  }

  // float fDensity = 8;
  if (this->fdensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->fdensity(), target);
  }

  // string szCpuHardware = 9 [(.nanopb) = {
  if (this->szcpuhardware().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szcpuhardware().data(), static_cast<int>(this->szcpuhardware().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szCpuHardware");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->szcpuhardware(), target);
  }

  // int32 iMemory = 10;
  if (this->imemory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->imemory(), target);
  }

  // string szGLRender = 11 [(.nanopb) = {
  if (this->szglrender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szglrender().data(), static_cast<int>(this->szglrender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szGLRender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->szglrender(), target);
  }

  // string szGLVersion = 12 [(.nanopb) = {
  if (this->szglversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szglversion().data(), static_cast<int>(this->szglversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szGLVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->szglversion(), target);
  }

  // string szDeviceId = 13 [(.nanopb) = {
  if (this->szdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szdeviceid().data(), static_cast<int>(this->szdeviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szDeviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->szdeviceid(), target);
  }

  // int32 iIsRoot = 14;
  if (this->iisroot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->iisroot(), target);
  }

  // string szIPStr = 15 [(.nanopb) = {
  if (this->szipstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szipstr().data(), static_cast<int>(this->szipstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szIPStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->szipstr(), target);
  }

  // int32 iPort = 16;
  if (this->iport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->iport(), target);
  }

  // string szIPV6Str = 17 [(.nanopb) = {
  if (this->szipv6str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szipv6str().data(), static_cast<int>(this->szipv6str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szIPV6Str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->szipv6str(), target);
  }

  // string szMacAddr = 18 [(.nanopb) = {
  if (this->szmacaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmacaddr().data(), static_cast<int>(this->szmacaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szMacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->szmacaddr(), target);
  }

  // string szInstallPath = 19 [(.nanopb) = {
  if (this->szinstallpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szinstallpath().data(), static_cast<int>(this->szinstallpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogDeviceInfo.szInstallPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->szinstallpath(), target);
  }

  // int32 iCountryCode = 20;
  if (this->icountrycode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->icountrycode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.BevLogDeviceInfo)
  return target;
}

size_t BevLogDeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.BevLogDeviceInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string szClientVersion = 1 [(.nanopb) = {
  if (this->szclientversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szclientversion());
  }

  // string szSystemSoftware = 2 [(.nanopb) = {
  if (this->szsystemsoftware().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szsystemsoftware());
  }

  // string szSystemHardware = 3 [(.nanopb) = {
  if (this->szsystemhardware().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szsystemhardware());
  }

  // string szTelecomOper = 4 [(.nanopb) = {
  if (this->sztelecomoper().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sztelecomoper());
  }

  // string szNetwork = 5 [(.nanopb) = {
  if (this->sznetwork().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sznetwork());
  }

  // string szCpuHardware = 9 [(.nanopb) = {
  if (this->szcpuhardware().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szcpuhardware());
  }

  // string szGLRender = 11 [(.nanopb) = {
  if (this->szglrender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szglrender());
  }

  // string szGLVersion = 12 [(.nanopb) = {
  if (this->szglversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szglversion());
  }

  // string szDeviceId = 13 [(.nanopb) = {
  if (this->szdeviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szdeviceid());
  }

  // string szIPStr = 15 [(.nanopb) = {
  if (this->szipstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szipstr());
  }

  // string szIPV6Str = 17 [(.nanopb) = {
  if (this->szipv6str().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szipv6str());
  }

  // string szMacAddr = 18 [(.nanopb) = {
  if (this->szmacaddr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szmacaddr());
  }

  // string szInstallPath = 19 [(.nanopb) = {
  if (this->szinstallpath().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szinstallpath());
  }

  // int32 iScreenWidth = 6;
  if (this->iscreenwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iscreenwidth());
  }

  // int32 iScreenHight = 7;
  if (this->iscreenhight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iscreenhight());
  }

  // float fDensity = 8;
  if (this->fdensity() != 0) {
    total_size += 1 + 4;
  }

  // int32 iMemory = 10;
  if (this->imemory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->imemory());
  }

  // int32 iIsRoot = 14;
  if (this->iisroot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iisroot());
  }

  // int32 iPort = 16;
  if (this->iport() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iport());
  }

  // int32 iCountryCode = 20;
  if (this->icountrycode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->icountrycode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BevLogDeviceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.BevLogDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BevLogDeviceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BevLogDeviceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.BevLogDeviceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.BevLogDeviceInfo)
    MergeFrom(*source);
  }
}

void BevLogDeviceInfo::MergeFrom(const BevLogDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.BevLogDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.szclientversion().size() > 0) {

    szclientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szclientversion_);
  }
  if (from.szsystemsoftware().size() > 0) {

    szsystemsoftware_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szsystemsoftware_);
  }
  if (from.szsystemhardware().size() > 0) {

    szsystemhardware_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szsystemhardware_);
  }
  if (from.sztelecomoper().size() > 0) {

    sztelecomoper_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sztelecomoper_);
  }
  if (from.sznetwork().size() > 0) {

    sznetwork_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sznetwork_);
  }
  if (from.szcpuhardware().size() > 0) {

    szcpuhardware_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcpuhardware_);
  }
  if (from.szglrender().size() > 0) {

    szglrender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szglrender_);
  }
  if (from.szglversion().size() > 0) {

    szglversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szglversion_);
  }
  if (from.szdeviceid().size() > 0) {

    szdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szdeviceid_);
  }
  if (from.szipstr().size() > 0) {

    szipstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szipstr_);
  }
  if (from.szipv6str().size() > 0) {

    szipv6str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szipv6str_);
  }
  if (from.szmacaddr().size() > 0) {

    szmacaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmacaddr_);
  }
  if (from.szinstallpath().size() > 0) {

    szinstallpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szinstallpath_);
  }
  if (from.iscreenwidth() != 0) {
    set_iscreenwidth(from.iscreenwidth());
  }
  if (from.iscreenhight() != 0) {
    set_iscreenhight(from.iscreenhight());
  }
  if (from.fdensity() != 0) {
    set_fdensity(from.fdensity());
  }
  if (from.imemory() != 0) {
    set_imemory(from.imemory());
  }
  if (from.iisroot() != 0) {
    set_iisroot(from.iisroot());
  }
  if (from.iport() != 0) {
    set_iport(from.iport());
  }
  if (from.icountrycode() != 0) {
    set_icountrycode(from.icountrycode());
  }
}

void BevLogDeviceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.BevLogDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BevLogDeviceInfo::CopyFrom(const BevLogDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.BevLogDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BevLogDeviceInfo::IsInitialized() const {
  return true;
}

void BevLogDeviceInfo::Swap(BevLogDeviceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BevLogDeviceInfo::InternalSwap(BevLogDeviceInfo* other) {
  using std::swap;
  szclientversion_.Swap(&other->szclientversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szsystemsoftware_.Swap(&other->szsystemsoftware_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szsystemhardware_.Swap(&other->szsystemhardware_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sztelecomoper_.Swap(&other->sztelecomoper_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sznetwork_.Swap(&other->sznetwork_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szcpuhardware_.Swap(&other->szcpuhardware_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szglrender_.Swap(&other->szglrender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szglversion_.Swap(&other->szglversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szdeviceid_.Swap(&other->szdeviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szipstr_.Swap(&other->szipstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szipv6str_.Swap(&other->szipv6str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szmacaddr_.Swap(&other->szmacaddr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szinstallpath_.Swap(&other->szinstallpath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(iscreenwidth_, other->iscreenwidth_);
  swap(iscreenhight_, other->iscreenhight_);
  swap(fdensity_, other->fdensity_);
  swap(imemory_, other->imemory_);
  swap(iisroot_, other->iisroot_);
  swap(iport_, other->iport_);
  swap(icountrycode_, other->icountrycode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BevLogDeviceInfo::GetMetadata() const {
  protobuf_FrameBehavior_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameBehavior_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BevLogRoleBaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BevLogRoleBaseInfo::kSzVRoleIDFieldNumber;
const int BevLogRoleBaseInfo::kSzVRoleNameFieldNumber;
const int BevLogRoleBaseInfo::kIIHomeLevelFieldNumber;
const int BevLogRoleBaseInfo::kISurviveLevelFieldNumber;
const int BevLogRoleBaseInfo::kIBattleLevelFieldNumber;
const int BevLogRoleBaseInfo::kLlFamilyIDFieldNumber;
const int BevLogRoleBaseInfo::kIIVipLevelFieldNumber;
const int BevLogRoleBaseInfo::kIProfIdFieldNumber;
const int BevLogRoleBaseInfo::kIGenderFieldNumber;
const int BevLogRoleBaseInfo::kIBattleForceFieldNumber;
const int BevLogRoleBaseInfo::kIBirthTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BevLogRoleBaseInfo::BevLogRoleBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameBehavior_2eproto::scc_info_BevLogRoleBaseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.BevLogRoleBaseInfo)
}
BevLogRoleBaseInfo::BevLogRoleBaseInfo(const BevLogRoleBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szvroleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szvroleid().size() > 0) {
    szvroleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvroleid_);
  }
  szvrolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szvrolename().size() > 0) {
    szvrolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvrolename_);
  }
  ::memcpy(&iihomelevel_, &from.iihomelevel_,
    static_cast<size_t>(reinterpret_cast<char*>(&ibirthtime_) -
    reinterpret_cast<char*>(&iihomelevel_)) + sizeof(ibirthtime_));
  // @@protoc_insertion_point(copy_constructor:NFrame.BevLogRoleBaseInfo)
}

void BevLogRoleBaseInfo::SharedCtor() {
  szvroleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szvrolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&iihomelevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ibirthtime_) -
      reinterpret_cast<char*>(&iihomelevel_)) + sizeof(ibirthtime_));
}

BevLogRoleBaseInfo::~BevLogRoleBaseInfo() {
  // @@protoc_insertion_point(destructor:NFrame.BevLogRoleBaseInfo)
  SharedDtor();
}

void BevLogRoleBaseInfo::SharedDtor() {
  szvroleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szvrolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BevLogRoleBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BevLogRoleBaseInfo::descriptor() {
  ::protobuf_FrameBehavior_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameBehavior_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BevLogRoleBaseInfo& BevLogRoleBaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameBehavior_2eproto::scc_info_BevLogRoleBaseInfo.base);
  return *internal_default_instance();
}


void BevLogRoleBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.BevLogRoleBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  szvroleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szvrolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&iihomelevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ibirthtime_) -
      reinterpret_cast<char*>(&iihomelevel_)) + sizeof(ibirthtime_));
  _internal_metadata_.Clear();
}

bool BevLogRoleBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.BevLogRoleBaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string szVRoleID = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szvroleid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szvroleid().data(), static_cast<int>(this->szvroleid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogRoleBaseInfo.szVRoleID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szVRoleName = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szvrolename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szvrolename().data(), static_cast<int>(this->szvrolename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.BevLogRoleBaseInfo.szVRoleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iIHomeLevel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iihomelevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iSurviveLevel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isurvivelevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iBattleLevel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ibattlelevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 llFamilyID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &llfamilyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iIVipLevel = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iiviplevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iProfId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iprofid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iGender = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &igender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iBattleForce = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ibattleforce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iBirthTime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ibirthtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.BevLogRoleBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.BevLogRoleBaseInfo)
  return false;
#undef DO_
}

void BevLogRoleBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.BevLogRoleBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string szVRoleID = 1 [(.nanopb) = {
  if (this->szvroleid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvroleid().data(), static_cast<int>(this->szvroleid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogRoleBaseInfo.szVRoleID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->szvroleid(), output);
  }

  // string szVRoleName = 2 [(.nanopb) = {
  if (this->szvrolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvrolename().data(), static_cast<int>(this->szvrolename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogRoleBaseInfo.szVRoleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szvrolename(), output);
  }

  // int32 iIHomeLevel = 3;
  if (this->iihomelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->iihomelevel(), output);
  }

  // int32 iSurviveLevel = 4;
  if (this->isurvivelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->isurvivelevel(), output);
  }

  // int32 iBattleLevel = 5;
  if (this->ibattlelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ibattlelevel(), output);
  }

  // int64 llFamilyID = 6;
  if (this->llfamilyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->llfamilyid(), output);
  }

  // int32 iIVipLevel = 7;
  if (this->iiviplevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->iiviplevel(), output);
  }

  // int32 iProfId = 8;
  if (this->iprofid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->iprofid(), output);
  }

  // int32 iGender = 9;
  if (this->igender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->igender(), output);
  }

  // int32 iBattleForce = 10;
  if (this->ibattleforce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->ibattleforce(), output);
  }

  // int32 iBirthTime = 11;
  if (this->ibirthtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->ibirthtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.BevLogRoleBaseInfo)
}

::google::protobuf::uint8* BevLogRoleBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.BevLogRoleBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string szVRoleID = 1 [(.nanopb) = {
  if (this->szvroleid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvroleid().data(), static_cast<int>(this->szvroleid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogRoleBaseInfo.szVRoleID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->szvroleid(), target);
  }

  // string szVRoleName = 2 [(.nanopb) = {
  if (this->szvrolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvrolename().data(), static_cast<int>(this->szvrolename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.BevLogRoleBaseInfo.szVRoleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szvrolename(), target);
  }

  // int32 iIHomeLevel = 3;
  if (this->iihomelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->iihomelevel(), target);
  }

  // int32 iSurviveLevel = 4;
  if (this->isurvivelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->isurvivelevel(), target);
  }

  // int32 iBattleLevel = 5;
  if (this->ibattlelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ibattlelevel(), target);
  }

  // int64 llFamilyID = 6;
  if (this->llfamilyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->llfamilyid(), target);
  }

  // int32 iIVipLevel = 7;
  if (this->iiviplevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->iiviplevel(), target);
  }

  // int32 iProfId = 8;
  if (this->iprofid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->iprofid(), target);
  }

  // int32 iGender = 9;
  if (this->igender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->igender(), target);
  }

  // int32 iBattleForce = 10;
  if (this->ibattleforce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->ibattleforce(), target);
  }

  // int32 iBirthTime = 11;
  if (this->ibirthtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->ibirthtime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.BevLogRoleBaseInfo)
  return target;
}

size_t BevLogRoleBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.BevLogRoleBaseInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string szVRoleID = 1 [(.nanopb) = {
  if (this->szvroleid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szvroleid());
  }

  // string szVRoleName = 2 [(.nanopb) = {
  if (this->szvrolename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szvrolename());
  }

  // int32 iIHomeLevel = 3;
  if (this->iihomelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iihomelevel());
  }

  // int32 iSurviveLevel = 4;
  if (this->isurvivelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isurvivelevel());
  }

  // int64 llFamilyID = 6;
  if (this->llfamilyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->llfamilyid());
  }

  // int32 iBattleLevel = 5;
  if (this->ibattlelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ibattlelevel());
  }

  // int32 iIVipLevel = 7;
  if (this->iiviplevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iiviplevel());
  }

  // int32 iProfId = 8;
  if (this->iprofid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iprofid());
  }

  // int32 iGender = 9;
  if (this->igender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->igender());
  }

  // int32 iBattleForce = 10;
  if (this->ibattleforce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ibattleforce());
  }

  // int32 iBirthTime = 11;
  if (this->ibirthtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ibirthtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BevLogRoleBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.BevLogRoleBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BevLogRoleBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BevLogRoleBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.BevLogRoleBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.BevLogRoleBaseInfo)
    MergeFrom(*source);
  }
}

void BevLogRoleBaseInfo::MergeFrom(const BevLogRoleBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.BevLogRoleBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.szvroleid().size() > 0) {

    szvroleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvroleid_);
  }
  if (from.szvrolename().size() > 0) {

    szvrolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvrolename_);
  }
  if (from.iihomelevel() != 0) {
    set_iihomelevel(from.iihomelevel());
  }
  if (from.isurvivelevel() != 0) {
    set_isurvivelevel(from.isurvivelevel());
  }
  if (from.llfamilyid() != 0) {
    set_llfamilyid(from.llfamilyid());
  }
  if (from.ibattlelevel() != 0) {
    set_ibattlelevel(from.ibattlelevel());
  }
  if (from.iiviplevel() != 0) {
    set_iiviplevel(from.iiviplevel());
  }
  if (from.iprofid() != 0) {
    set_iprofid(from.iprofid());
  }
  if (from.igender() != 0) {
    set_igender(from.igender());
  }
  if (from.ibattleforce() != 0) {
    set_ibattleforce(from.ibattleforce());
  }
  if (from.ibirthtime() != 0) {
    set_ibirthtime(from.ibirthtime());
  }
}

void BevLogRoleBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.BevLogRoleBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BevLogRoleBaseInfo::CopyFrom(const BevLogRoleBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.BevLogRoleBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BevLogRoleBaseInfo::IsInitialized() const {
  return true;
}

void BevLogRoleBaseInfo::Swap(BevLogRoleBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BevLogRoleBaseInfo::InternalSwap(BevLogRoleBaseInfo* other) {
  using std::swap;
  szvroleid_.Swap(&other->szvroleid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szvrolename_.Swap(&other->szvrolename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(iihomelevel_, other->iihomelevel_);
  swap(isurvivelevel_, other->isurvivelevel_);
  swap(llfamilyid_, other->llfamilyid_);
  swap(ibattlelevel_, other->ibattlelevel_);
  swap(iiviplevel_, other->iiviplevel_);
  swap(iprofid_, other->iprofid_);
  swap(igender_, other->igender_);
  swap(ibattleforce_, other->ibattleforce_);
  swap(ibirthtime_, other->ibirthtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BevLogRoleBaseInfo::GetMetadata() const {
  protobuf_FrameBehavior_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameBehavior_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BevLogTransBaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BevLogTransBaseInfo::kIGlobalIDFieldNumber;
const int BevLogTransBaseInfo::kIErrCodeFieldNumber;
const int BevLogTransBaseInfo::kIEotTypeFieldNumber;
const int BevLogTransBaseInfo::kUllTransStartTimeFieldNumber;
const int BevLogTransBaseInfo::kUllTransStopTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BevLogTransBaseInfo::BevLogTransBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameBehavior_2eproto::scc_info_BevLogTransBaseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.BevLogTransBaseInfo)
}
BevLogTransBaseInfo::BevLogTransBaseInfo(const BevLogTransBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&iglobalid_, &from.iglobalid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ieottype_) -
    reinterpret_cast<char*>(&iglobalid_)) + sizeof(ieottype_));
  // @@protoc_insertion_point(copy_constructor:NFrame.BevLogTransBaseInfo)
}

void BevLogTransBaseInfo::SharedCtor() {
  ::memset(&iglobalid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ieottype_) -
      reinterpret_cast<char*>(&iglobalid_)) + sizeof(ieottype_));
}

BevLogTransBaseInfo::~BevLogTransBaseInfo() {
  // @@protoc_insertion_point(destructor:NFrame.BevLogTransBaseInfo)
  SharedDtor();
}

void BevLogTransBaseInfo::SharedDtor() {
}

void BevLogTransBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BevLogTransBaseInfo::descriptor() {
  ::protobuf_FrameBehavior_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameBehavior_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BevLogTransBaseInfo& BevLogTransBaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameBehavior_2eproto::scc_info_BevLogTransBaseInfo.base);
  return *internal_default_instance();
}


void BevLogTransBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.BevLogTransBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&iglobalid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ieottype_) -
      reinterpret_cast<char*>(&iglobalid_)) + sizeof(ieottype_));
  _internal_metadata_.Clear();
}

bool BevLogTransBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.BevLogTransBaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 iGlobalID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iglobalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iErrCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ierrcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iEotType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ieottype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ullTransStartTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ulltransstarttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ullTransStopTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ulltransstoptime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.BevLogTransBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.BevLogTransBaseInfo)
  return false;
#undef DO_
}

void BevLogTransBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.BevLogTransBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iGlobalID = 1;
  if (this->iglobalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->iglobalid(), output);
  }

  // int32 iErrCode = 2;
  if (this->ierrcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ierrcode(), output);
  }

  // int32 iEotType = 3;
  if (this->ieottype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ieottype(), output);
  }

  // uint64 ullTransStartTime = 4;
  if (this->ulltransstarttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ulltransstarttime(), output);
  }

  // uint64 ullTransStopTime = 5;
  if (this->ulltransstoptime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->ulltransstoptime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.BevLogTransBaseInfo)
}

::google::protobuf::uint8* BevLogTransBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.BevLogTransBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iGlobalID = 1;
  if (this->iglobalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->iglobalid(), target);
  }

  // int32 iErrCode = 2;
  if (this->ierrcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ierrcode(), target);
  }

  // int32 iEotType = 3;
  if (this->ieottype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ieottype(), target);
  }

  // uint64 ullTransStartTime = 4;
  if (this->ulltransstarttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ulltransstarttime(), target);
  }

  // uint64 ullTransStopTime = 5;
  if (this->ulltransstoptime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->ulltransstoptime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.BevLogTransBaseInfo)
  return target;
}

size_t BevLogTransBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.BevLogTransBaseInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 iGlobalID = 1;
  if (this->iglobalid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iglobalid());
  }

  // int32 iErrCode = 2;
  if (this->ierrcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ierrcode());
  }

  // uint64 ullTransStartTime = 4;
  if (this->ulltransstarttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ulltransstarttime());
  }

  // uint64 ullTransStopTime = 5;
  if (this->ulltransstoptime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ulltransstoptime());
  }

  // int32 iEotType = 3;
  if (this->ieottype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ieottype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BevLogTransBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.BevLogTransBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BevLogTransBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BevLogTransBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.BevLogTransBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.BevLogTransBaseInfo)
    MergeFrom(*source);
  }
}

void BevLogTransBaseInfo::MergeFrom(const BevLogTransBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.BevLogTransBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.iglobalid() != 0) {
    set_iglobalid(from.iglobalid());
  }
  if (from.ierrcode() != 0) {
    set_ierrcode(from.ierrcode());
  }
  if (from.ulltransstarttime() != 0) {
    set_ulltransstarttime(from.ulltransstarttime());
  }
  if (from.ulltransstoptime() != 0) {
    set_ulltransstoptime(from.ulltransstoptime());
  }
  if (from.ieottype() != 0) {
    set_ieottype(from.ieottype());
  }
}

void BevLogTransBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.BevLogTransBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BevLogTransBaseInfo::CopyFrom(const BevLogTransBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.BevLogTransBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BevLogTransBaseInfo::IsInitialized() const {
  return true;
}

void BevLogTransBaseInfo::Swap(BevLogTransBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BevLogTransBaseInfo::InternalSwap(BevLogTransBaseInfo* other) {
  using std::swap;
  swap(iglobalid_, other->iglobalid_);
  swap(ierrcode_, other->ierrcode_);
  swap(ulltransstarttime_, other->ulltransstarttime_);
  swap(ulltransstoptime_, other->ulltransstoptime_);
  swap(ieottype_, other->ieottype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BevLogTransBaseInfo::GetMetadata() const {
  protobuf_FrameBehavior_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameBehavior_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerStateFlow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerStateFlow::kTDtEventTimeFieldNumber;
const int ServerStateFlow::kSzVGameIPFieldNumber;
const int ServerStateFlow::kIIZoneAreaIDFieldNumber;
const int ServerStateFlow::kIITimeShiftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerStateFlow::ServerStateFlow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameBehavior_2eproto::scc_info_ServerStateFlow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.ServerStateFlow)
}
ServerStateFlow::ServerStateFlow(const ServerStateFlow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szvgameip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szvgameip().size() > 0) {
    szvgameip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvgameip_);
  }
  ::memcpy(&tdteventtime_, &from.tdteventtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&iitimeshift_) -
    reinterpret_cast<char*>(&tdteventtime_)) + sizeof(iitimeshift_));
  // @@protoc_insertion_point(copy_constructor:NFrame.ServerStateFlow)
}

void ServerStateFlow::SharedCtor() {
  szvgameip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tdteventtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iitimeshift_) -
      reinterpret_cast<char*>(&tdteventtime_)) + sizeof(iitimeshift_));
}

ServerStateFlow::~ServerStateFlow() {
  // @@protoc_insertion_point(destructor:NFrame.ServerStateFlow)
  SharedDtor();
}

void ServerStateFlow::SharedDtor() {
  szvgameip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerStateFlow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerStateFlow::descriptor() {
  ::protobuf_FrameBehavior_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameBehavior_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerStateFlow& ServerStateFlow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameBehavior_2eproto::scc_info_ServerStateFlow.base);
  return *internal_default_instance();
}


void ServerStateFlow::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.ServerStateFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  szvgameip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tdteventtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iitimeshift_) -
      reinterpret_cast<char*>(&tdteventtime_)) + sizeof(iitimeshift_));
  _internal_metadata_.Clear();
}

bool ServerStateFlow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.ServerStateFlow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 tDtEventTime = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tdteventtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szVGameIP = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szvgameip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szvgameip().data(), static_cast<int>(this->szvgameip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerStateFlow.szVGameIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iIZoneAreaID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iizoneareaid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iITimeShift = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iitimeshift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.ServerStateFlow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.ServerStateFlow)
  return false;
#undef DO_
}

void ServerStateFlow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.ServerStateFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 tDtEventTime = 1 [(.nanopb) = {
  if (this->tdteventtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tdteventtime(), output);
  }

  // string szVGameIP = 2 [(.nanopb) = {
  if (this->szvgameip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvgameip().data(), static_cast<int>(this->szvgameip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerStateFlow.szVGameIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szvgameip(), output);
  }

  // int32 iIZoneAreaID = 3;
  if (this->iizoneareaid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->iizoneareaid(), output);
  }

  // int32 iITimeShift = 4;
  if (this->iitimeshift() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->iitimeshift(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.ServerStateFlow)
}

::google::protobuf::uint8* ServerStateFlow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.ServerStateFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 tDtEventTime = 1 [(.nanopb) = {
  if (this->tdteventtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->tdteventtime(), target);
  }

  // string szVGameIP = 2 [(.nanopb) = {
  if (this->szvgameip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvgameip().data(), static_cast<int>(this->szvgameip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerStateFlow.szVGameIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szvgameip(), target);
  }

  // int32 iIZoneAreaID = 3;
  if (this->iizoneareaid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->iizoneareaid(), target);
  }

  // int32 iITimeShift = 4;
  if (this->iitimeshift() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->iitimeshift(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.ServerStateFlow)
  return target;
}

size_t ServerStateFlow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.ServerStateFlow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string szVGameIP = 2 [(.nanopb) = {
  if (this->szvgameip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szvgameip());
  }

  // uint64 tDtEventTime = 1 [(.nanopb) = {
  if (this->tdteventtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tdteventtime());
  }

  // int32 iIZoneAreaID = 3;
  if (this->iizoneareaid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iizoneareaid());
  }

  // int32 iITimeShift = 4;
  if (this->iitimeshift() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iitimeshift());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerStateFlow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.ServerStateFlow)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerStateFlow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerStateFlow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.ServerStateFlow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.ServerStateFlow)
    MergeFrom(*source);
  }
}

void ServerStateFlow::MergeFrom(const ServerStateFlow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.ServerStateFlow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.szvgameip().size() > 0) {

    szvgameip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvgameip_);
  }
  if (from.tdteventtime() != 0) {
    set_tdteventtime(from.tdteventtime());
  }
  if (from.iizoneareaid() != 0) {
    set_iizoneareaid(from.iizoneareaid());
  }
  if (from.iitimeshift() != 0) {
    set_iitimeshift(from.iitimeshift());
  }
}

void ServerStateFlow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.ServerStateFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerStateFlow::CopyFrom(const ServerStateFlow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.ServerStateFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerStateFlow::IsInitialized() const {
  return true;
}

void ServerStateFlow::Swap(ServerStateFlow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerStateFlow::InternalSwap(ServerStateFlow* other) {
  using std::swap;
  szvgameip_.Swap(&other->szvgameip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tdteventtime_, other->tdteventtime_);
  swap(iizoneareaid_, other->iizoneareaid_);
  swap(iitimeshift_, other->iitimeshift_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerStateFlow::GetMetadata() const {
  protobuf_FrameBehavior_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameBehavior_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFrame
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::BevLogBaseInfo* Arena::CreateMaybeMessage< ::NFrame::BevLogBaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::BevLogBaseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::BevLogDeviceInfo* Arena::CreateMaybeMessage< ::NFrame::BevLogDeviceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::BevLogDeviceInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::BevLogRoleBaseInfo* Arena::CreateMaybeMessage< ::NFrame::BevLogRoleBaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::BevLogRoleBaseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::BevLogTransBaseInfo* Arena::CreateMaybeMessage< ::NFrame::BevLogTransBaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::BevLogTransBaseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::ServerStateFlow* Arena::CreateMaybeMessage< ::NFrame::ServerStateFlow >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::ServerStateFlow >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
