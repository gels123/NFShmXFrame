/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 */

#ifndef PB_NFRAME_FRAMEBEHAVIOR_NANOPB_H_INCLUDED
#define PB_NFRAME_FRAMEBEHAVIOR_NANOPB_H_INCLUDED
#include <string>
#include <vector>
#include <unordered_map>
#include <map>
#include <NFComm/NFCore/NFHash.hpp>
#include "NFComm/NFShmStl/NFShmString.h"
#include <pb.h>

#include "FrameBehavior.pb.h"
#include "FrameEnum.nanopb.h"


/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
struct BevLogBaseInfo {
    NFShmString<MAX_STRING_LEN_32> szGameSvrId;
    uint64_t tDtEventTime;
    NFShmString<MAX_STRING_LEN_32> szVGameAppid;
    int32_t iPlatID;
    int32_t iIZoneAreaID;
    NFShmString<MAX_STRING_LEN_64> szVopenid;

	BevLogBaseInfo();
	~BevLogBaseInfo();
	BevLogBaseInfo(const BevLogBaseInfo& stArgsData);
	BevLogBaseInfo& operator=(const BevLogBaseInfo& stArgsData);
	void CopyData(const BevLogBaseInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::BevLogBaseInfo& cc);
    void ToPb(NFrame::BevLogBaseInfo* cc) const;
    NFrame::BevLogBaseInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:BevLogBaseInfo) */
};

struct BevLogDeviceInfo {
    NFShmString<MAX_STRING_LEN_64> szClientVersion;
    NFShmString<MAX_STRING_LEN_64> szSystemSoftware;
    NFShmString<MAX_STRING_LEN_64> szSystemHardware;
    NFShmString<MAX_STRING_LEN_64> szTelecomOper;
    NFShmString<MAX_STRING_LEN_64> szNetwork;
    int32_t iScreenWidth;
    int32_t iScreenHight;
    float fDensity;
    NFShmString<MAX_STRING_LEN_64> szCpuHardware;
    int32_t iMemory;
    NFShmString<MAX_STRING_LEN_64> szGLRender;
    NFShmString<MAX_STRING_LEN_128> szGLVersion;
    NFShmString<MAX_STRING_LEN_64> szDeviceId;
    int32_t iIsRoot;
    NFShmString<MAX_STRING_LEN_16> szIPStr;
    int32_t iPort;
    NFShmString<MAX_STRING_LEN_64> szIPV6Str;
    NFShmString<MAX_STRING_LEN_32> szMacAddr;
    NFShmString<MAX_STRING_LEN_256> szInstallPath;
    int32_t iCountryCode;

	BevLogDeviceInfo();
	~BevLogDeviceInfo();
	BevLogDeviceInfo(const BevLogDeviceInfo& stArgsData);
	BevLogDeviceInfo& operator=(const BevLogDeviceInfo& stArgsData);
	void CopyData(const BevLogDeviceInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::BevLogDeviceInfo& cc);
    void ToPb(NFrame::BevLogDeviceInfo* cc) const;
    NFrame::BevLogDeviceInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:BevLogDeviceInfo) */
};

struct BevLogRoleBaseInfo {
    NFShmString<MAX_STRING_LEN_64> szVRoleID;
    NFShmString<MAX_STRING_LEN_128> szVRoleName;
    int32_t iIHomeLevel;
    int32_t iSurviveLevel;
    int32_t iBattleLevel;
    int64_t llFamilyID;
    int32_t iIVipLevel;
    int32_t iProfId;
    int32_t iGender;
    int32_t iBattleForce;
    int32_t iBirthTime;

	BevLogRoleBaseInfo();
	~BevLogRoleBaseInfo();
	BevLogRoleBaseInfo(const BevLogRoleBaseInfo& stArgsData);
	BevLogRoleBaseInfo& operator=(const BevLogRoleBaseInfo& stArgsData);
	void CopyData(const BevLogRoleBaseInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::BevLogRoleBaseInfo& cc);
    void ToPb(NFrame::BevLogRoleBaseInfo* cc) const;
    NFrame::BevLogRoleBaseInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:BevLogRoleBaseInfo) */
};

struct BevLogTransBaseInfo {
    int32_t iGlobalID;
    int32_t iErrCode;
    int32_t iEotType;
    uint64_t ullTransStartTime;
    uint64_t ullTransStopTime;

	BevLogTransBaseInfo();
	~BevLogTransBaseInfo();
	BevLogTransBaseInfo(const BevLogTransBaseInfo& stArgsData);
	BevLogTransBaseInfo& operator=(const BevLogTransBaseInfo& stArgsData);
	void CopyData(const BevLogTransBaseInfo& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::BevLogTransBaseInfo& cc);
    void ToPb(NFrame::BevLogTransBaseInfo* cc) const;
    NFrame::BevLogTransBaseInfo ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:BevLogTransBaseInfo) */
};

struct ServerStateFlow {
    uint64_t tDtEventTime;
    NFShmString<MAX_STRING_LEN_32> szVGameIP;
    int32_t iIZoneAreaID;
    int32_t iITimeShift;

	ServerStateFlow();
	~ServerStateFlow();
	ServerStateFlow(const ServerStateFlow& stArgsData);
	ServerStateFlow& operator=(const ServerStateFlow& stArgsData);
	void CopyData(const ServerStateFlow& stArgsData);
	int CreateInit();
	int ResumeInit();
	void Init();
    bool FromPb(const NFrame::ServerStateFlow& cc);
    void ToPb(NFrame::ServerStateFlow* cc) const;
    NFrame::ServerStateFlow ToPb() const;
    std::string ShortDebugString() const;

/* @@protoc_insertion_point(struct:ServerStateFlow) */
};

/* Field tags (for use in manual encoding/decoding) */
#define BevLogBaseInfo_szGameSvrId_tag           1
#define BevLogBaseInfo_tDtEventTime_tag          2
#define BevLogBaseInfo_szVGameAppid_tag          3
#define BevLogBaseInfo_iPlatID_tag               4
#define BevLogBaseInfo_iIZoneAreaID_tag          5
#define BevLogBaseInfo_szVopenid_tag             6
#define BevLogDeviceInfo_szClientVersion_tag     1
#define BevLogDeviceInfo_szSystemSoftware_tag    2
#define BevLogDeviceInfo_szSystemHardware_tag    3
#define BevLogDeviceInfo_szTelecomOper_tag       4
#define BevLogDeviceInfo_szNetwork_tag           5
#define BevLogDeviceInfo_iScreenWidth_tag        6
#define BevLogDeviceInfo_iScreenHight_tag        7
#define BevLogDeviceInfo_fDensity_tag            8
#define BevLogDeviceInfo_szCpuHardware_tag       9
#define BevLogDeviceInfo_iMemory_tag             10
#define BevLogDeviceInfo_szGLRender_tag          11
#define BevLogDeviceInfo_szGLVersion_tag         12
#define BevLogDeviceInfo_szDeviceId_tag          13
#define BevLogDeviceInfo_iIsRoot_tag             14
#define BevLogDeviceInfo_szIPStr_tag             15
#define BevLogDeviceInfo_iPort_tag               16
#define BevLogDeviceInfo_szIPV6Str_tag           17
#define BevLogDeviceInfo_szMacAddr_tag           18
#define BevLogDeviceInfo_szInstallPath_tag       19
#define BevLogDeviceInfo_iCountryCode_tag        20
#define BevLogRoleBaseInfo_szVRoleID_tag         1
#define BevLogRoleBaseInfo_szVRoleName_tag       2
#define BevLogRoleBaseInfo_iIHomeLevel_tag       3
#define BevLogRoleBaseInfo_iSurviveLevel_tag     4
#define BevLogRoleBaseInfo_iBattleLevel_tag      5
#define BevLogRoleBaseInfo_llFamilyID_tag        6
#define BevLogRoleBaseInfo_iIVipLevel_tag        7
#define BevLogRoleBaseInfo_iProfId_tag           8
#define BevLogRoleBaseInfo_iGender_tag           9
#define BevLogRoleBaseInfo_iBattleForce_tag      10
#define BevLogRoleBaseInfo_iBirthTime_tag        11
#define BevLogTransBaseInfo_iGlobalID_tag        1
#define BevLogTransBaseInfo_iErrCode_tag         2
#define BevLogTransBaseInfo_iEotType_tag         3
#define BevLogTransBaseInfo_ullTransStartTime_tag 4
#define BevLogTransBaseInfo_ullTransStopTime_tag 5
#define ServerStateFlow_tDtEventTime_tag         1
#define ServerStateFlow_szVGameIP_tag            2
#define ServerStateFlow_iIZoneAreaID_tag         3
#define ServerStateFlow_iITimeShift_tag          4

/* Struct field encoding specification for nanopb */

/* Maximum encoded size of messages (where known) */
#define BevLogBaseInfo_size                      167
#define BevLogDeviceInfo_size                    1112
#define BevLogRoleBaseInfo_size                  296
#define BevLogTransBaseInfo_size                 55
#define ServerStateFlow_size                     67

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FRAMEBEHAVIOR_MESSAGES \


#endif

/* @@protoc_insertion_point(eof) */

#endif
