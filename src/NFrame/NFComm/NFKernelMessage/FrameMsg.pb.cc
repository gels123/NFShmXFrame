// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameMsg.proto

#include "FrameMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_FrameMsg_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DynLibFileInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Proto_DispInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Proto_EventInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Proto_RedirectInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Proto_RpcInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Proto_StoreInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Proto_TransInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerInfoReport;
}  // namespace protobuf_FrameMsg_2eproto
namespace NFrame {
class Proto_DispInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_DispInfo>
      _instance;
} _Proto_DispInfo_default_instance_;
class Proto_TransInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_TransInfo>
      _instance;
} _Proto_TransInfo_default_instance_;
class Proto_StoreInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_StoreInfo>
      _instance;
} _Proto_StoreInfo_default_instance_;
class Proto_EventInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_EventInfo>
      _instance;
} _Proto_EventInfo_default_instance_;
class Proto_ScriptRpcResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_ScriptRpcResult>
      _instance;
} _Proto_ScriptRpcResult_default_instance_;
class Proto_RpcInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_RpcInfo>
      _instance;
} _Proto_RpcInfo_default_instance_;
class Proto_RedirectInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_RedirectInfo>
      _instance;
} _Proto_RedirectInfo_default_instance_;
class Proto_FramePkgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_FramePkg>
      _instance;
} _Proto_FramePkg_default_instance_;
class ServerInfoReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerInfoReport>
      _instance;
} _ServerInfoReport_default_instance_;
class ServerInfoReportListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerInfoReportList>
      _instance;
} _ServerInfoReportList_default_instance_;
class ServerInfoReportListRespneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerInfoReportListRespne>
      _instance;
} _ServerInfoReportListRespne_default_instance_;
class ZkServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ZkServerInfo>
      _instance;
} _ZkServerInfo_default_instance_;
class DynLibFileInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DynLibFileInfo>
      _instance;
} _DynLibFileInfo_default_instance_;
class DynLibFileInfoArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DynLibFileInfoArray>
      _instance;
} _DynLibFileInfoArray_default_instance_;
class Proto_KillAllServerNtfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_KillAllServerNtf>
      _instance;
} _Proto_KillAllServerNtf_default_instance_;
class Proto_KillAllServerRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_KillAllServerRsp>
      _instance;
} _Proto_KillAllServerRsp_default_instance_;
class Proto_STSBroadPlayerMsgNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_STSBroadPlayerMsgNotify>
      _instance;
} _Proto_STSBroadPlayerMsgNotify_default_instance_;
class Proto_STWebMsgRspNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_STWebMsgRspNotify>
      _instance;
} _Proto_STWebMsgRspNotify_default_instance_;
class NFEventNoneDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NFEventNoneData>
      _instance;
} _NFEventNoneData_default_instance_;
class NFEventScriptDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NFEventScriptData>
      _instance;
} _NFEventScriptData_default_instance_;
class Proto_ServerDumpInfoNtfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proto_ServerDumpInfoNtf>
      _instance;
} _Proto_ServerDumpInfoNtf_default_instance_;
}  // namespace NFrame
namespace protobuf_FrameMsg_2eproto {
static void InitDefaultsProto_DispInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_DispInfo_default_instance_;
    new (ptr) ::NFrame::Proto_DispInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_DispInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_DispInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_DispInfo}, {}};

static void InitDefaultsProto_TransInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_TransInfo_default_instance_;
    new (ptr) ::NFrame::Proto_TransInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_TransInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_TransInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_TransInfo}, {}};

static void InitDefaultsProto_StoreInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_StoreInfo_default_instance_;
    new (ptr) ::NFrame::Proto_StoreInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_StoreInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_StoreInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_StoreInfo}, {}};

static void InitDefaultsProto_EventInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_EventInfo_default_instance_;
    new (ptr) ::NFrame::Proto_EventInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_EventInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_EventInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_EventInfo}, {}};

static void InitDefaultsProto_ScriptRpcResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_ScriptRpcResult_default_instance_;
    new (ptr) ::NFrame::Proto_ScriptRpcResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_ScriptRpcResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_ScriptRpcResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_ScriptRpcResult}, {}};

static void InitDefaultsProto_RpcInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_RpcInfo_default_instance_;
    new (ptr) ::NFrame::Proto_RpcInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_RpcInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_RpcInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_RpcInfo}, {}};

static void InitDefaultsProto_RedirectInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_RedirectInfo_default_instance_;
    new (ptr) ::NFrame::Proto_RedirectInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_RedirectInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_RedirectInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_RedirectInfo}, {}};

static void InitDefaultsProto_FramePkg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_FramePkg_default_instance_;
    new (ptr) ::NFrame::Proto_FramePkg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_FramePkg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_Proto_FramePkg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsProto_FramePkg}, {
      &protobuf_FrameMsg_2eproto::scc_info_Proto_DispInfo.base,
      &protobuf_FrameMsg_2eproto::scc_info_Proto_TransInfo.base,
      &protobuf_FrameMsg_2eproto::scc_info_Proto_StoreInfo.base,
      &protobuf_FrameMsg_2eproto::scc_info_Proto_EventInfo.base,
      &protobuf_FrameMsg_2eproto::scc_info_Proto_RedirectInfo.base,
      &protobuf_FrameMsg_2eproto::scc_info_Proto_RpcInfo.base,}};

static void InitDefaultsServerInfoReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_ServerInfoReport_default_instance_;
    new (ptr) ::NFrame::ServerInfoReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::ServerInfoReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerInfoReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerInfoReport}, {}};

static void InitDefaultsServerInfoReportList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_ServerInfoReportList_default_instance_;
    new (ptr) ::NFrame::ServerInfoReportList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::ServerInfoReportList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerInfoReportList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerInfoReportList}, {
      &protobuf_FrameMsg_2eproto::scc_info_ServerInfoReport.base,}};

static void InitDefaultsServerInfoReportListRespne() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_ServerInfoReportListRespne_default_instance_;
    new (ptr) ::NFrame::ServerInfoReportListRespne();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::ServerInfoReportListRespne::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerInfoReportListRespne =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerInfoReportListRespne}, {}};

static void InitDefaultsZkServerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_ZkServerInfo_default_instance_;
    new (ptr) ::NFrame::ZkServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::ZkServerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ZkServerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsZkServerInfo}, {}};

static void InitDefaultsDynLibFileInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_DynLibFileInfo_default_instance_;
    new (ptr) ::NFrame::DynLibFileInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::DynLibFileInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DynLibFileInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDynLibFileInfo}, {}};

static void InitDefaultsDynLibFileInfoArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_DynLibFileInfoArray_default_instance_;
    new (ptr) ::NFrame::DynLibFileInfoArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::DynLibFileInfoArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DynLibFileInfoArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDynLibFileInfoArray}, {
      &protobuf_FrameMsg_2eproto::scc_info_DynLibFileInfo.base,}};

static void InitDefaultsProto_KillAllServerNtf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_KillAllServerNtf_default_instance_;
    new (ptr) ::NFrame::Proto_KillAllServerNtf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_KillAllServerNtf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_KillAllServerNtf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_KillAllServerNtf}, {}};

static void InitDefaultsProto_KillAllServerRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_KillAllServerRsp_default_instance_;
    new (ptr) ::NFrame::Proto_KillAllServerRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_KillAllServerRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_KillAllServerRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_KillAllServerRsp}, {}};

static void InitDefaultsProto_STSBroadPlayerMsgNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_STSBroadPlayerMsgNotify_default_instance_;
    new (ptr) ::NFrame::Proto_STSBroadPlayerMsgNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_STSBroadPlayerMsgNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_STSBroadPlayerMsgNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_STSBroadPlayerMsgNotify}, {}};

static void InitDefaultsProto_STWebMsgRspNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_STWebMsgRspNotify_default_instance_;
    new (ptr) ::NFrame::Proto_STWebMsgRspNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_STWebMsgRspNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_STWebMsgRspNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_STWebMsgRspNotify}, {}};

static void InitDefaultsNFEventNoneData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_NFEventNoneData_default_instance_;
    new (ptr) ::NFrame::NFEventNoneData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::NFEventNoneData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NFEventNoneData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNFEventNoneData}, {}};

static void InitDefaultsNFEventScriptData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_NFEventScriptData_default_instance_;
    new (ptr) ::NFrame::NFEventScriptData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::NFEventScriptData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NFEventScriptData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNFEventScriptData}, {}};

static void InitDefaultsProto_ServerDumpInfoNtf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_Proto_ServerDumpInfoNtf_default_instance_;
    new (ptr) ::NFrame::Proto_ServerDumpInfoNtf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::Proto_ServerDumpInfoNtf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Proto_ServerDumpInfoNtf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProto_ServerDumpInfoNtf}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_DispInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_TransInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_StoreInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_EventInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_ScriptRpcResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_RpcInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_RedirectInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_FramePkg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerInfoReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerInfoReportList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerInfoReportListRespne.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ZkServerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DynLibFileInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DynLibFileInfoArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_KillAllServerNtf.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_KillAllServerRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_STSBroadPlayerMsgNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_STWebMsgRspNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NFEventNoneData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NFEventScriptData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proto_ServerDumpInfoNtf.base);
}

::google::protobuf::Metadata file_level_metadata[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_DispInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_DispInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_DispInfo, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_DispInfo, req_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_DispInfo, err_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_DispInfo, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_TransInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_TransInfo, req_trans_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_TransInfo, rsp_trans_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_StoreInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_StoreInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_StoreInfo, table_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_EventInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_EventInfo, server_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_EventInfo, event_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_EventInfo, src_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_EventInfo, src_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_EventInfo, full_message_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_ScriptRpcResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_ScriptRpcResult, req_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_ScriptRpcResult, rsp_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_ScriptRpcResult, respone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RpcInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RpcInfo, req_rpc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RpcInfo, rsp_rpc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RpcInfo, rpc_ret_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RpcInfo, req_rpc_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RpcInfo, rsp_rpc_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RpcInfo, req_bus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RpcInfo, req_server_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RpcInfo, is_script_rpc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RedirectInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RedirectInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_RedirectInfo, all_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_FramePkg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_FramePkg, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_FramePkg, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_FramePkg, msg_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_FramePkg, disp_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_FramePkg, trans_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_FramePkg, store_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_FramePkg, event_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_FramePkg, redirect_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_FramePkg, rpc_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, bus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, server_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, server_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, link_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, bus_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, server_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, server_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, server_http_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, external_server_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, external_server_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, is_cross_server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, route_svr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, server_max_online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, server_cur_online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, server_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, system_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, total_mem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, free_mem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, used_mem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, proc_cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, proc_mem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, proc_thread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, proc_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, proc_cwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, proc_pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, last_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, last_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, contract_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, machine_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, db_name_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReport, map_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReportList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReportList, server_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReportListRespne, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ServerInfoReportListRespne, ret_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ZkServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ZkServerInfo, bus_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::ZkServerInfo, tcp_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::DynLibFileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::DynLibFileInfo, file_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::DynLibFileInfo, file_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::DynLibFileInfoArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::DynLibFileInfoArray, file_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_KillAllServerNtf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_KillAllServerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_KillAllServerRsp, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_STSBroadPlayerMsgNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_STSBroadPlayerMsgNotify, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_STSBroadPlayerMsgNotify, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_STSBroadPlayerMsgNotify, msg_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_STWebMsgRspNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_STWebMsgRspNotify, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_STWebMsgRspNotify, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_STWebMsgRspNotify, err_msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::NFEventNoneData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::NFEventNoneData, param1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::NFEventNoneData, param2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::NFEventNoneData, param3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::NFEventNoneData, param4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::NFEventNoneData, param5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::NFEventScriptData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::NFEventScriptData, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::NFEventScriptData, event_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_ServerDumpInfoNtf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_ServerDumpInfoNtf, dump_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::Proto_ServerDumpInfoNtf, bus_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NFrame::Proto_DispInfo)},
  { 10, -1, sizeof(::NFrame::Proto_TransInfo)},
  { 17, -1, sizeof(::NFrame::Proto_StoreInfo)},
  { 24, -1, sizeof(::NFrame::Proto_EventInfo)},
  { 34, -1, sizeof(::NFrame::Proto_ScriptRpcResult)},
  { 42, -1, sizeof(::NFrame::Proto_RpcInfo)},
  { 55, -1, sizeof(::NFrame::Proto_RedirectInfo)},
  { 62, -1, sizeof(::NFrame::Proto_FramePkg)},
  { 76, -1, sizeof(::NFrame::ServerInfoReport)},
  { 115, -1, sizeof(::NFrame::ServerInfoReportList)},
  { 121, -1, sizeof(::NFrame::ServerInfoReportListRespne)},
  { 127, -1, sizeof(::NFrame::ZkServerInfo)},
  { 134, -1, sizeof(::NFrame::DynLibFileInfo)},
  { 141, -1, sizeof(::NFrame::DynLibFileInfoArray)},
  { 147, -1, sizeof(::NFrame::Proto_KillAllServerNtf)},
  { 152, -1, sizeof(::NFrame::Proto_KillAllServerRsp)},
  { 158, -1, sizeof(::NFrame::Proto_STSBroadPlayerMsgNotify)},
  { 166, -1, sizeof(::NFrame::Proto_STWebMsgRspNotify)},
  { 174, -1, sizeof(::NFrame::NFEventNoneData)},
  { 184, -1, sizeof(::NFrame::NFEventScriptData)},
  { 191, -1, sizeof(::NFrame::Proto_ServerDumpInfoNtf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_DispInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_TransInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_StoreInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_EventInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_ScriptRpcResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_RpcInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_RedirectInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_FramePkg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_ServerInfoReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_ServerInfoReportList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_ServerInfoReportListRespne_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_ZkServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_DynLibFileInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_DynLibFileInfoArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_KillAllServerNtf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_KillAllServerRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_STSBroadPlayerMsgNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_STWebMsgRspNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_NFEventNoneData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_NFEventScriptData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_Proto_ServerDumpInfoNtf_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FrameMsg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016FrameMsg.proto\022\006NFrame\032\014nanopb.proto\"z"
      "\n\016Proto_DispInfo\022\n\n\002id\030\001 \001(\004\022\013\n\003seq\030\004 \001("
      "\005\022\017\n\007req_seq\030\005 \001(\005\022\020\n\010err_code\030\006 \001(\005\022$\n\004"
      "type\030\007 \001(\0162\026.NFrame.PacketDispType:\006\222\?\003\230"
      "\002\001\"E\n\017Proto_TransInfo\022\024\n\014req_trans_id\030\001 "
      "\001(\005\022\024\n\014rsp_trans_id\030\002 \001(\005:\006\222\?\003\230\002\001\"7\n\017Pro"
      "to_StoreInfo\022\n\n\002id\030\001 \001(\004\022\020\n\010table_id\030\002 \001"
      "(\r:\006\222\?\003\230\002\001\"}\n\017Proto_EventInfo\022\023\n\013server_"
      "type\030\001 \001(\r\022\020\n\010event_id\030\002 \001(\004\022\020\n\010src_type"
      "\030\003 \001(\004\022\016\n\006src_id\030\004 \001(\004\022\031\n\021full_message_n"
      "ame\030\005 \001(\t:\006\222\?\003\230\002\001\"T\n\025Proto_ScriptRpcResu"
      "lt\022\020\n\010req_type\030\001 \001(\t\022\020\n\010rsp_type\030\002 \001(\t\022\017"
      "\n\007respone\030\003 \001(\t:\006\222\?\003\230\002\001\"\305\001\n\rProto_RpcInf"
      "o\022\022\n\nreq_rpc_id\030\001 \001(\003\022\022\n\nrsp_rpc_id\030\002 \001("
      "\003\022\024\n\014rpc_ret_code\030\003 \001(\005\022\024\n\014req_rpc_hash\030"
      "\004 \001(\004\022\024\n\014rsp_rpc_hash\030\005 \001(\004\022\022\n\nreq_bus_i"
      "d\030\006 \001(\r\022\027\n\017req_server_type\030\007 \001(\004\022\025\n\ris_s"
      "cript_rpc\030\010 \001(\010:\006\222\?\003\230\002\001\"5\n\022Proto_Redirec"
      "tInfo\022\n\n\002id\030\001 \003(\004\022\013\n\003all\030\002 \001(\010:\006\222\?\003\230\002\001\"\333"
      "\002\n\016Proto_FramePkg\022\021\n\tmodule_id\030\001 \001(\005\022\016\n\006"
      "msg_id\030\002 \001(\005\022\020\n\010msg_data\030\003 \001(\014\022)\n\tdisp_i"
      "nfo\030\004 \001(\0132\026.NFrame.Proto_DispInfo\022+\n\ntra"
      "ns_info\030\005 \001(\0132\027.NFrame.Proto_TransInfo\022+"
      "\n\nstore_info\030\006 \001(\0132\027.NFrame.Proto_StoreI"
      "nfo\022+\n\nevent_info\030\007 \001(\0132\027.NFrame.Proto_E"
      "ventInfo\0221\n\rredirect_info\030\010 \001(\0132\032.NFrame"
      ".Proto_RedirectInfo\022\'\n\010rpc_info\030\t \001(\0132\025."
      "NFrame.Proto_RpcInfo:\006\222\?\003\230\002\001\"\331\005\n\020ServerI"
      "nfoReport\022\016\n\006bus_id\030\001 \001(\r\022\021\n\tserver_id\030\002"
      " \001(\t\022\023\n\013server_type\030\003 \001(\r\022\023\n\013server_name"
      "\030\004 \001(\t\022\013\n\003url\030\005 \001(\t\022\021\n\tlink_mode\030\006 \001(\t\022\022"
      "\n\nbus_length\030\007 \001(\r\022\021\n\tserver_ip\030\t \001(\t\022\023\n"
      "\013server_port\030\n \001(\r\022\030\n\020server_http_port\030\013"
      " \001(\r\022\032\n\022external_server_ip\030\014 \001(\t\022\034\n\024exte"
      "rnal_server_port\030\r \001(\r\022\027\n\017is_cross_serve"
      "r\030\016 \001(\010\022\021\n\troute_svr\030\017 \001(\t\022\031\n\021server_max"
      "_online\030\036 \001(\r\022\031\n\021server_cur_online\030\037 \001(\r"
      "\022\024\n\014server_state\030  \001(\r\022\023\n\013system_info\030! "
      "\001(\t\022\021\n\ttotal_mem\030\" \001(\004\022\020\n\010free_mem\030# \001(\004"
      "\022\020\n\010used_mem\030$ \001(\004\022\020\n\010proc_cpu\030% \001(\001\022\020\n\010"
      "proc_mem\030& \001(\004\022\023\n\013proc_thread\030\' \001(\r\022\021\n\tp"
      "roc_name\030( \001(\t\022\020\n\010proc_cwd\030) \001(\t\022\020\n\010proc"
      "_pid\030* \001(\r\022\021\n\tlast_date\030+ \001(\t\022\021\n\tlast_ti"
      "me\030, \001(\004\022\025\n\rcontract_info\030- \001(\t\022\024\n\014machi"
      "ne_addr\030. \001(\t\022\024\n\014db_name_list\030/ \003(\t\022\016\n\006m"
      "sg_id\0300 \003(\r\022\023\n\013map_id_list\0301 \003(\004:\006\222\?\003\230\002\001"
      "\"M\n\024ServerInfoReportList\022-\n\013server_list\030"
      "\001 \003(\0132\030.NFrame.ServerInfoReport:\006\222\?\003\230\002\001\""
      "6\n\032ServerInfoReportListRespne\022\020\n\010ret_cod"
      "e\030\001 \001(\005:\006\222\?\003\230\002\001\"8\n\014ZkServerInfo\022\017\n\007bus_u"
      "rl\030\001 \001(\t\022\017\n\007tcp_url\030\002 \001(\t:\006\222\?\003\230\002\001\"=\n\016Dyn"
      "LibFileInfo\022\020\n\010file_md5\030\001 \001(\t\022\021\n\tfile_si"
      "ze\030\002 \001(\005:\006\222\?\003\230\002\001\"H\n\023DynLibFileInfoArray\022"
      ")\n\tfile_list\030\001 \003(\0132\026.NFrame.DynLibFileIn"
      "fo:\006\222\?\003\230\002\001\" \n\026Proto_KillAllServerNtf:\006\222\?"
      "\003\230\002\001\"0\n\026Proto_KillAllServerRsp\022\016\n\006result"
      "\030\001 \001(\005:\006\222\?\003\230\002\001\"Z\n\035Proto_STSBroadPlayerMs"
      "gNotify\022\017\n\007user_id\030\001 \003(\004\022\016\n\006msg_id\030\002 \001(\r"
      "\022\020\n\010msg_data\030\003 \001(\014:\006\222\?\003\230\002\001\"V\n\027Proto_STWe"
      "bMsgRspNotify\022\022\n\nrequest_id\030\001 \001(\004\022\016\n\006res"
      "ult\030\002 \001(\005\022\017\n\007err_msg\030\003 \001(\t:\006\222\?\003\230\002\001\"i\n\017NF"
      "EventNoneData\022\016\n\006param1\030\001 \001(\003\022\016\n\006param2\030"
      "\002 \001(\003\022\016\n\006param3\030\003 \001(\003\022\016\n\006param4\030\004 \001(\003\022\016\n"
      "\006param5\030\005 \001(\003:\006\222\?\003\230\002\001\"C\n\021NFEventScriptDa"
      "ta\022\022\n\nevent_type\030\001 \001(\t\022\022\n\nevent_data\030\002 \001"
      "(\t:\006\222\?\003\230\002\001\"D\n\027Proto_ServerDumpInfoNtf\022\021\n"
      "\tdump_info\030\001 \001(\t\022\016\n\006bus_id\030\002 \001(\r:\006\222\?\003\230\002\001"
      "*\256\026\n\016FrameServerMsg\022\025\n\021NF_FRAME_MSG_NONE"
      "\020\000\022\"\n\036NF_SERVER_TO_SERVER_HEART_BEAT\020\001\022&"
      "\n\"NF_SERVER_TO_SERVER_HEART_BEAT_RSP\020\002\022\'"
      "\n#NF_SERVER_TO_SERVER_BUS_CONNECT_REQ\020\003\022"
      "\'\n#NF_SERVER_TO_SERVER_BUS_CONNECT_RSP\020\004"
      "\022\036\n\032NF_GTM_KILL_ALL_SERVER_NTF\0202\022\036\n\032NF_S"
      "TS_KILL_ALL_SERVER_NTF\0203\022\035\n\031NF_STS_SEND_"
      "DUMP_INFO_NTF\0204\022$\n NF_MasterTMonitor_REL"
      "OAD_CMD_REQ\020P\022%\n!NF_MasterTMonitor_RESTA"
      "RT_CMD_REQ\020Q\022#\n\037NF_MasterTMonitor_START_"
      "CMD_REQ\020R\022\"\n\036NF_MasterTMonitor_STOP_CMD_"
      "REQ\020S\022&\n\"NF_MasterTMonitor_STOP_ALL_CMD_"
      "REQ\020T\022(\n$NF_MasterTMonitor_RELOAD_ALL_CM"
      "D_REQ\020U\022)\n%NF_MasterTMonitor_RESTART_ALL"
      "_CMD_REQ\020V\022\'\n#NF_MasterTMonitor_START_AL"
      "L_CMD_REQ\020W\022$\n NF_MonitorTMaster_RELOAD_"
      "CMD_RSP\020Z\022%\n!NF_MonitorTMaster_RESTART_C"
      "MD_RSP\020[\022#\n\037NF_MonitorTMaster_START_CMD_"
      "RSP\020\\\022\"\n\036NF_MonitorTMaster_STOP_CMD_RSP\020"
      "]\022&\n\"NF_MonitorTMaster_STOP_ALL_CMD_RSP\020"
      "^\022(\n$NF_MonitorTMaster_RELOAD_ALL_CMD_RS"
      "P\020_\022)\n%NF_MonitorTMaster_RESTART_ALL_CMD"
      "_RSP\020`\022\'\n#NF_MonitorTMaster_START_ALL_CM"
      "D_RSP\020a\022 \n\034NF_SERVER_TO_SERVER_REGISTER\020"
      "d\022$\n NF_SERVER_TO_SERVER_REGISTER_RSP\020e\022"
      "*\n&NF_MASTER_SERVER_SEND_OTHERS_TO_SERVE"
      "R\020f\022%\n!NF_SERVER_TO_MASTER_SERVER_REPORT"
      "\020g\022\'\n#NF_ROUTER_CMD_INTERNAL_C2R_REGISTE"
      "R\020h\022\'\n#NF_ROUTER_CMD_INTERNAL_R2C_REGIST"
      "ER\020i\022(\n$NF_ROUTER_CMD_INTERNAL_C2R_HEART"
      "BEAT\020j\022(\n$NF_ROUTER_CMD_INTERNAL_R2C_HEA"
      "RTBEAT\020k\022\036\n\032NF_ROUTER_CMD_DISPATCH_MOD\020l"
      "\022%\n!NF_ROUTER_CMD_DISPATCH_ROUNDROBIN\020m\022"
      "$\n NF_ROUTER_CMD_DISPATCH_BROADCAST\020n\022/\n"
      "+NF_ROUTER_CMD_DISPATCH_BROADCAST_AND_MA"
      "STER\020o\022+\n\'NF_ROUTER_CMD_DISPATCH_BORADCA"
      "ST_MASTER\020p\022*\n&NF_ROUTER_CMD_DISPATCH_BO"
      "RADCAST_SLAVE\020q\022!\n\035NF_ROUTER_CMD_DISPATC"
      "H_DIRECT\020r\022-\n)NF_ROUTER_CMD_INTERNAL_R2C"
      "_DISPATCHFAILED\020s\0220\n,NF_ROUTER_CMD_INTER"
      "NAL_C2R_REG_RAASSOCAPPSVS\020t\022\037\n\033NF_SERVER"
      "_TO_SERVER_RPC_CMD\020w\022!\n\035NF_SERVER_TO_SER"
      "VER_TRANS_CMD\020x\022$\n NF_SERVER_TO_STORE_SE"
      "RVER_DB_CMD\020y\022$\n NF_STORE_SERVER_TO_SERV"
      "ER_DB_CMD\020z\022%\n!NF_WORLD_ROUTER_CMD_TO_SU"
      "IT_LOGIC\020{\022#\n\037NF_SNS_ROUTER_CMD_TO_SUIT_"
      "LOGIC\020|\022\"\n\036NF_STS_BROAD_PLAYER_MSG_NOTIF"
      "Y\020}\022%\n!NF_SEVER_TO_WEB_SERVER_RSP_NOTIFY"
      "\020~\022\'\n#NF_SERVER_BROAD_EVENT_TO_SERVER_CM"
      "D\020\177\022/\n*NF_SERVER_REDIRECT_MSG_TO_PROXY_S"
      "ERVER_CMD\020\200\001\022/\n*NF_SERVER_TO_SERVER_REGI"
      "STER_ROOM_INFO_RPC\020\201\001\022\033\n\026NF_STORESVR_C2S"
      "_SELECT\020\310\001\022\033\n\026NF_STORESVR_S2C_SELECT\020\311\001\022"
      "\036\n\031NF_STORESVR_C2S_SELECTOBJ\020\312\001\022\036\n\031NF_ST"
      "ORESVR_S2C_SELECTOBJ\020\313\001\022\033\n\026NF_STORESVR_C"
      "2S_INSERT\020\314\001\022\033\n\026NF_STORESVR_S2C_INSERT\020\315"
      "\001\022\036\n\031NF_STORESVR_C2S_INSERTOBJ\020\316\001\022\036\n\031NF_"
      "STORESVR_S2C_INSERTOBJ\020\317\001\022\033\n\026NF_STORESVR"
      "_C2S_DELETE\020\320\001\022\033\n\026NF_STORESVR_S2C_DELETE"
      "\020\321\001\022\036\n\031NF_STORESVR_C2S_DELETEOBJ\020\322\001\022\036\n\031N"
      "F_STORESVR_S2C_DELETEOBJ\020\323\001\022\033\n\026NF_STORES"
      "VR_C2S_MODIFY\020\324\001\022\033\n\026NF_STORESVR_S2C_MODI"
      "FY\020\325\001\022\036\n\031NF_STORESVR_C2S_MODIFYOBJ\020\326\001\022\036\n"
      "\031NF_STORESVR_S2C_MODIFYOBJ\020\327\001\022\033\n\026NF_STOR"
      "ESVR_C2S_UPDATE\020\330\001\022\033\n\026NF_STORESVR_S2C_UP"
      "DATE\020\331\001\022\036\n\031NF_STORESVR_C2S_UPDATEOBJ\020\332\001\022"
      "\036\n\031NF_STORESVR_S2C_UPDATEOBJ\020\333\001\022\036\n\031NF_ST"
      "ORESVR_C2S_DESCSTORE\020\334\001\022\036\n\031NF_STORESVR_S"
      "2C_DESCSTORE\020\335\001\022\034\n\027NF_STORESVR_C2S_EXECU"
      "TE\020\336\001\022\034\n\027NF_STORESVR_S2C_EXECUTE\020\337\001\022!\n\034N"
      "F_STORESVR_C2S_EXECUTE_MORE\020\340\001\022!\n\034NF_STO"
      "RESVR_S2C_EXECUTE_MORE\020\341\001*\223\001\n\016PacketDisp"
      "Type\022\024\n\020E_DISP_TYPE_NONE\020\000\022\036\n\032E_DISP_TYP"
      "E_BY_TRANSACTION\020\001\022\031\n\025E_DISP_TYPE_BY_ROL"
      "EID\020\002\022\030\n\024E_DISP_TYPE_BY_MSGID\020\003\022\026\n\022E_DIS"
      "P_TYPE_BY_RPC\020\004*I\n\014EServerState\022\014\n\010EST_I"
      "NIT\020\000\022\016\n\nEST_NARMAL\020\001\022\014\n\010EST_BUSY\020\002\022\r\n\tE"
      "ST_CRASH\020\003*r\n\016NFEventSrcType\022\026\n\022NF_EVENT"
      "_NONE_TYPE\020\000\022\030\n\024NF_EVENT_SERVER_TYPE\020\001\022\024"
      "\n\020NF_EVENT_GM_TYPE\020\002\022\030\n\024NF_EVENT_PLAYER_"
      "TYPE\020\004*\301\005\n\rNFEventIdType\022\021\n\rNF_EVENT_NON"
      "E\020\000\022\036\n\032NF_EVENT_SERVER_TYPE_BEGIN\020\001\022%\n!N"
      "F_EVENT_SERVER_TASK_GROUP_FINISH\020\002\022%\n!NF"
      "_EVENT_SERVER_APP_FINISH_INITED\020\005\022\036\n\032NF_"
      "EVENT_SERVER_DEAD_EVENT\020\006\022#\n\037NF_EVENT_GA"
      "ME_SERVER_DUMP_EVENT\020\010\022$\n NF_EVENT_LOGIC"
      "_SERVER_DUMP_EVENT\020\t\022$\n NF_EVENT_WORLD_S"
      "ERVER_DUMP_EVENT\020\n\022$\n NF_EVENT_CENTER_SE"
      "RVER_DUMP_VENT\020\013\022$\n NF_EVENT_PROXY_SERVE"
      "R_DUMP_EVENT\020\014\022*\n&NF_EVENT_PROXY_AGENT_S"
      "ERVER_DUMP_EVENT\020\r\022#\n\037NF_EVENT_STORE_SER"
      "VER_DMP_EVENT\020\016\022$\n NF_EVENT_LOGIN_SERVER"
      "_DUMP_EVENT\020\017\022*\n&NF_EVENT_ROUTE_AGENT_SE"
      "RVER_DUMP_EVENT\020\020\022$\n NF_EVENT_ROUTE_SERV"
      "ER_DUMP_EVENT\020\021\022%\n!NF_EVENT_MASTER_SERVE"
      "R_DUMP_EVENT\020\022\022 \n\034NF_EVENT_SERVER_REPORT"
      "_EVENT\020\036\022\"\n\036NF_EVENT_SERVER_SET_TIME_EVE"
      "NT\020\037\022\034\n\030NF_EVENT_SERVER_TYPE_END\020cb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6602);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrameMsg.proto", &protobuf_RegisterTypes);
  ::protobuf_nanopb_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrameMsg_2eproto
namespace NFrame {
const ::google::protobuf::EnumDescriptor* FrameServerMsg_descriptor() {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameMsg_2eproto::file_level_enum_descriptors[0];
}
bool FrameServerMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 50:
    case 51:
    case 52:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PacketDispType_descriptor() {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameMsg_2eproto::file_level_enum_descriptors[1];
}
bool PacketDispType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EServerState_descriptor() {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameMsg_2eproto::file_level_enum_descriptors[2];
}
bool EServerState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* NFEventSrcType_descriptor() {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameMsg_2eproto::file_level_enum_descriptors[3];
}
bool NFEventSrcType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* NFEventIdType_descriptor() {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameMsg_2eproto::file_level_enum_descriptors[4];
}
bool NFEventIdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 30:
    case 31:
    case 99:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Proto_DispInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_DispInfo::kIdFieldNumber;
const int Proto_DispInfo::kSeqFieldNumber;
const int Proto_DispInfo::kReqSeqFieldNumber;
const int Proto_DispInfo::kErrCodeFieldNumber;
const int Proto_DispInfo::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_DispInfo::Proto_DispInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_DispInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_DispInfo)
}
Proto_DispInfo::Proto_DispInfo(const Proto_DispInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_DispInfo)
}

void Proto_DispInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

Proto_DispInfo::~Proto_DispInfo() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_DispInfo)
  SharedDtor();
}

void Proto_DispInfo::SharedDtor() {
}

void Proto_DispInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_DispInfo::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_DispInfo& Proto_DispInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_DispInfo.base);
  return *internal_default_instance();
}


void Proto_DispInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_DispInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Proto_DispInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_DispInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 req_seq = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &req_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 err_code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.PacketDispType type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::NFrame::PacketDispType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_DispInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_DispInfo)
  return false;
#undef DO_
}

void Proto_DispInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_DispInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // int32 seq = 4;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->seq(), output);
  }

  // int32 req_seq = 5;
  if (this->req_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->req_seq(), output);
  }

  // int32 err_code = 6;
  if (this->err_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->err_code(), output);
  }

  // .NFrame.PacketDispType type = 7;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_DispInfo)
}

::google::protobuf::uint8* Proto_DispInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_DispInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // int32 seq = 4;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->seq(), target);
  }

  // int32 req_seq = 5;
  if (this->req_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->req_seq(), target);
  }

  // int32 err_code = 6;
  if (this->err_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->err_code(), target);
  }

  // .NFrame.PacketDispType type = 7;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_DispInfo)
  return target;
}

size_t Proto_DispInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_DispInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 seq = 4;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seq());
  }

  // int32 req_seq = 5;
  if (this->req_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->req_seq());
  }

  // int32 err_code = 6;
  if (this->err_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_code());
  }

  // .NFrame.PacketDispType type = 7;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_DispInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_DispInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_DispInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_DispInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_DispInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_DispInfo)
    MergeFrom(*source);
  }
}

void Proto_DispInfo::MergeFrom(const Proto_DispInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_DispInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.req_seq() != 0) {
    set_req_seq(from.req_seq());
  }
  if (from.err_code() != 0) {
    set_err_code(from.err_code());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Proto_DispInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_DispInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_DispInfo::CopyFrom(const Proto_DispInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_DispInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_DispInfo::IsInitialized() const {
  return true;
}

void Proto_DispInfo::Swap(Proto_DispInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_DispInfo::InternalSwap(Proto_DispInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(seq_, other->seq_);
  swap(req_seq_, other->req_seq_);
  swap(err_code_, other->err_code_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_DispInfo::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_TransInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_TransInfo::kReqTransIdFieldNumber;
const int Proto_TransInfo::kRspTransIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_TransInfo::Proto_TransInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_TransInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_TransInfo)
}
Proto_TransInfo::Proto_TransInfo(const Proto_TransInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&req_trans_id_, &from.req_trans_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rsp_trans_id_) -
    reinterpret_cast<char*>(&req_trans_id_)) + sizeof(rsp_trans_id_));
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_TransInfo)
}

void Proto_TransInfo::SharedCtor() {
  ::memset(&req_trans_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_trans_id_) -
      reinterpret_cast<char*>(&req_trans_id_)) + sizeof(rsp_trans_id_));
}

Proto_TransInfo::~Proto_TransInfo() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_TransInfo)
  SharedDtor();
}

void Proto_TransInfo::SharedDtor() {
}

void Proto_TransInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_TransInfo::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_TransInfo& Proto_TransInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_TransInfo.base);
  return *internal_default_instance();
}


void Proto_TransInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_TransInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&req_trans_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_trans_id_) -
      reinterpret_cast<char*>(&req_trans_id_)) + sizeof(rsp_trans_id_));
  _internal_metadata_.Clear();
}

bool Proto_TransInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_TransInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 req_trans_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &req_trans_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rsp_trans_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rsp_trans_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_TransInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_TransInfo)
  return false;
#undef DO_
}

void Proto_TransInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_TransInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 req_trans_id = 1;
  if (this->req_trans_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->req_trans_id(), output);
  }

  // int32 rsp_trans_id = 2;
  if (this->rsp_trans_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rsp_trans_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_TransInfo)
}

::google::protobuf::uint8* Proto_TransInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_TransInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 req_trans_id = 1;
  if (this->req_trans_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->req_trans_id(), target);
  }

  // int32 rsp_trans_id = 2;
  if (this->rsp_trans_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rsp_trans_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_TransInfo)
  return target;
}

size_t Proto_TransInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_TransInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 req_trans_id = 1;
  if (this->req_trans_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->req_trans_id());
  }

  // int32 rsp_trans_id = 2;
  if (this->rsp_trans_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rsp_trans_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_TransInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_TransInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_TransInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_TransInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_TransInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_TransInfo)
    MergeFrom(*source);
  }
}

void Proto_TransInfo::MergeFrom(const Proto_TransInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_TransInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.req_trans_id() != 0) {
    set_req_trans_id(from.req_trans_id());
  }
  if (from.rsp_trans_id() != 0) {
    set_rsp_trans_id(from.rsp_trans_id());
  }
}

void Proto_TransInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_TransInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_TransInfo::CopyFrom(const Proto_TransInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_TransInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_TransInfo::IsInitialized() const {
  return true;
}

void Proto_TransInfo::Swap(Proto_TransInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_TransInfo::InternalSwap(Proto_TransInfo* other) {
  using std::swap;
  swap(req_trans_id_, other->req_trans_id_);
  swap(rsp_trans_id_, other->rsp_trans_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_TransInfo::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_StoreInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_StoreInfo::kIdFieldNumber;
const int Proto_StoreInfo::kTableIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_StoreInfo::Proto_StoreInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_StoreInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_StoreInfo)
}
Proto_StoreInfo::Proto_StoreInfo(const Proto_StoreInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&table_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(table_id_));
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_StoreInfo)
}

void Proto_StoreInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&table_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(table_id_));
}

Proto_StoreInfo::~Proto_StoreInfo() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_StoreInfo)
  SharedDtor();
}

void Proto_StoreInfo::SharedDtor() {
}

void Proto_StoreInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_StoreInfo::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_StoreInfo& Proto_StoreInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_StoreInfo.base);
  return *internal_default_instance();
}


void Proto_StoreInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_StoreInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&table_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(table_id_));
  _internal_metadata_.Clear();
}

bool Proto_StoreInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_StoreInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 table_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_StoreInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_StoreInfo)
  return false;
#undef DO_
}

void Proto_StoreInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_StoreInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint32 table_id = 2;
  if (this->table_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->table_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_StoreInfo)
}

::google::protobuf::uint8* Proto_StoreInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_StoreInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint32 table_id = 2;
  if (this->table_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->table_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_StoreInfo)
  return target;
}

size_t Proto_StoreInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_StoreInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 table_id = 2;
  if (this->table_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->table_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_StoreInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_StoreInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_StoreInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_StoreInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_StoreInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_StoreInfo)
    MergeFrom(*source);
  }
}

void Proto_StoreInfo::MergeFrom(const Proto_StoreInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_StoreInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.table_id() != 0) {
    set_table_id(from.table_id());
  }
}

void Proto_StoreInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_StoreInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_StoreInfo::CopyFrom(const Proto_StoreInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_StoreInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_StoreInfo::IsInitialized() const {
  return true;
}

void Proto_StoreInfo::Swap(Proto_StoreInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_StoreInfo::InternalSwap(Proto_StoreInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(table_id_, other->table_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_StoreInfo::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_EventInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_EventInfo::kServerTypeFieldNumber;
const int Proto_EventInfo::kEventIdFieldNumber;
const int Proto_EventInfo::kSrcTypeFieldNumber;
const int Proto_EventInfo::kSrcIdFieldNumber;
const int Proto_EventInfo::kFullMessageNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_EventInfo::Proto_EventInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_EventInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_EventInfo)
}
Proto_EventInfo::Proto_EventInfo(const Proto_EventInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  full_message_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.full_message_name().size() > 0) {
    full_message_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_message_name_);
  }
  ::memcpy(&event_id_, &from.event_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_type_) -
    reinterpret_cast<char*>(&event_id_)) + sizeof(server_type_));
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_EventInfo)
}

void Proto_EventInfo::SharedCtor() {
  full_message_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&event_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_type_) -
      reinterpret_cast<char*>(&event_id_)) + sizeof(server_type_));
}

Proto_EventInfo::~Proto_EventInfo() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_EventInfo)
  SharedDtor();
}

void Proto_EventInfo::SharedDtor() {
  full_message_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_EventInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_EventInfo::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_EventInfo& Proto_EventInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_EventInfo.base);
  return *internal_default_instance();
}


void Proto_EventInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_EventInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  full_message_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&event_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_type_) -
      reinterpret_cast<char*>(&event_id_)) + sizeof(server_type_));
  _internal_metadata_.Clear();
}

bool Proto_EventInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_EventInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 server_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 event_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &event_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 src_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &src_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 src_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &src_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string full_message_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_message_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->full_message_name().data(), static_cast<int>(this->full_message_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.Proto_EventInfo.full_message_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_EventInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_EventInfo)
  return false;
#undef DO_
}

void Proto_EventInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_EventInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 server_type = 1;
  if (this->server_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_type(), output);
  }

  // uint64 event_id = 2;
  if (this->event_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->event_id(), output);
  }

  // uint64 src_type = 3;
  if (this->src_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->src_type(), output);
  }

  // uint64 src_id = 4;
  if (this->src_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->src_id(), output);
  }

  // string full_message_name = 5;
  if (this->full_message_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_message_name().data(), static_cast<int>(this->full_message_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_EventInfo.full_message_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->full_message_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_EventInfo)
}

::google::protobuf::uint8* Proto_EventInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_EventInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 server_type = 1;
  if (this->server_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_type(), target);
  }

  // uint64 event_id = 2;
  if (this->event_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->event_id(), target);
  }

  // uint64 src_type = 3;
  if (this->src_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->src_type(), target);
  }

  // uint64 src_id = 4;
  if (this->src_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->src_id(), target);
  }

  // string full_message_name = 5;
  if (this->full_message_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_message_name().data(), static_cast<int>(this->full_message_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_EventInfo.full_message_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->full_message_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_EventInfo)
  return target;
}

size_t Proto_EventInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_EventInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string full_message_name = 5;
  if (this->full_message_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->full_message_name());
  }

  // uint64 event_id = 2;
  if (this->event_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->event_id());
  }

  // uint64 src_type = 3;
  if (this->src_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->src_type());
  }

  // uint64 src_id = 4;
  if (this->src_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->src_id());
  }

  // uint32 server_type = 1;
  if (this->server_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_EventInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_EventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_EventInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_EventInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_EventInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_EventInfo)
    MergeFrom(*source);
  }
}

void Proto_EventInfo::MergeFrom(const Proto_EventInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_EventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.full_message_name().size() > 0) {

    full_message_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_message_name_);
  }
  if (from.event_id() != 0) {
    set_event_id(from.event_id());
  }
  if (from.src_type() != 0) {
    set_src_type(from.src_type());
  }
  if (from.src_id() != 0) {
    set_src_id(from.src_id());
  }
  if (from.server_type() != 0) {
    set_server_type(from.server_type());
  }
}

void Proto_EventInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_EventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_EventInfo::CopyFrom(const Proto_EventInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_EventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_EventInfo::IsInitialized() const {
  return true;
}

void Proto_EventInfo::Swap(Proto_EventInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_EventInfo::InternalSwap(Proto_EventInfo* other) {
  using std::swap;
  full_message_name_.Swap(&other->full_message_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(event_id_, other->event_id_);
  swap(src_type_, other->src_type_);
  swap(src_id_, other->src_id_);
  swap(server_type_, other->server_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_EventInfo::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_ScriptRpcResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_ScriptRpcResult::kReqTypeFieldNumber;
const int Proto_ScriptRpcResult::kRspTypeFieldNumber;
const int Proto_ScriptRpcResult::kResponeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_ScriptRpcResult::Proto_ScriptRpcResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_ScriptRpcResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_ScriptRpcResult)
}
Proto_ScriptRpcResult::Proto_ScriptRpcResult(const Proto_ScriptRpcResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  req_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.req_type().size() > 0) {
    req_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.req_type_);
  }
  rsp_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rsp_type().size() > 0) {
    rsp_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rsp_type_);
  }
  respone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.respone().size() > 0) {
    respone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.respone_);
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_ScriptRpcResult)
}

void Proto_ScriptRpcResult::SharedCtor() {
  req_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rsp_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  respone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Proto_ScriptRpcResult::~Proto_ScriptRpcResult() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_ScriptRpcResult)
  SharedDtor();
}

void Proto_ScriptRpcResult::SharedDtor() {
  req_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rsp_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  respone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_ScriptRpcResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_ScriptRpcResult::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_ScriptRpcResult& Proto_ScriptRpcResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_ScriptRpcResult.base);
  return *internal_default_instance();
}


void Proto_ScriptRpcResult::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_ScriptRpcResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rsp_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  respone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Proto_ScriptRpcResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_ScriptRpcResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string req_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_req_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->req_type().data(), static_cast<int>(this->req_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.Proto_ScriptRpcResult.req_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rsp_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rsp_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rsp_type().data(), static_cast<int>(this->rsp_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.Proto_ScriptRpcResult.rsp_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string respone = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->respone().data(), static_cast<int>(this->respone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.Proto_ScriptRpcResult.respone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_ScriptRpcResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_ScriptRpcResult)
  return false;
#undef DO_
}

void Proto_ScriptRpcResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_ScriptRpcResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_type = 1;
  if (this->req_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_type().data(), static_cast<int>(this->req_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_ScriptRpcResult.req_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->req_type(), output);
  }

  // string rsp_type = 2;
  if (this->rsp_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rsp_type().data(), static_cast<int>(this->rsp_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_ScriptRpcResult.rsp_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rsp_type(), output);
  }

  // string respone = 3;
  if (this->respone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->respone().data(), static_cast<int>(this->respone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_ScriptRpcResult.respone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->respone(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_ScriptRpcResult)
}

::google::protobuf::uint8* Proto_ScriptRpcResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_ScriptRpcResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_type = 1;
  if (this->req_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_type().data(), static_cast<int>(this->req_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_ScriptRpcResult.req_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->req_type(), target);
  }

  // string rsp_type = 2;
  if (this->rsp_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rsp_type().data(), static_cast<int>(this->rsp_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_ScriptRpcResult.rsp_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rsp_type(), target);
  }

  // string respone = 3;
  if (this->respone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->respone().data(), static_cast<int>(this->respone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_ScriptRpcResult.respone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->respone(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_ScriptRpcResult)
  return target;
}

size_t Proto_ScriptRpcResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_ScriptRpcResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string req_type = 1;
  if (this->req_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->req_type());
  }

  // string rsp_type = 2;
  if (this->rsp_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rsp_type());
  }

  // string respone = 3;
  if (this->respone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->respone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_ScriptRpcResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_ScriptRpcResult)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_ScriptRpcResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_ScriptRpcResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_ScriptRpcResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_ScriptRpcResult)
    MergeFrom(*source);
  }
}

void Proto_ScriptRpcResult::MergeFrom(const Proto_ScriptRpcResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_ScriptRpcResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.req_type().size() > 0) {

    req_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.req_type_);
  }
  if (from.rsp_type().size() > 0) {

    rsp_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rsp_type_);
  }
  if (from.respone().size() > 0) {

    respone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.respone_);
  }
}

void Proto_ScriptRpcResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_ScriptRpcResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_ScriptRpcResult::CopyFrom(const Proto_ScriptRpcResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_ScriptRpcResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_ScriptRpcResult::IsInitialized() const {
  return true;
}

void Proto_ScriptRpcResult::Swap(Proto_ScriptRpcResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_ScriptRpcResult::InternalSwap(Proto_ScriptRpcResult* other) {
  using std::swap;
  req_type_.Swap(&other->req_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rsp_type_.Swap(&other->rsp_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  respone_.Swap(&other->respone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_ScriptRpcResult::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_RpcInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_RpcInfo::kReqRpcIdFieldNumber;
const int Proto_RpcInfo::kRspRpcIdFieldNumber;
const int Proto_RpcInfo::kRpcRetCodeFieldNumber;
const int Proto_RpcInfo::kReqRpcHashFieldNumber;
const int Proto_RpcInfo::kRspRpcHashFieldNumber;
const int Proto_RpcInfo::kReqBusIdFieldNumber;
const int Proto_RpcInfo::kReqServerTypeFieldNumber;
const int Proto_RpcInfo::kIsScriptRpcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_RpcInfo::Proto_RpcInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_RpcInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_RpcInfo)
}
Proto_RpcInfo::Proto_RpcInfo(const Proto_RpcInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&req_rpc_id_, &from.req_rpc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_script_rpc_) -
    reinterpret_cast<char*>(&req_rpc_id_)) + sizeof(is_script_rpc_));
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_RpcInfo)
}

void Proto_RpcInfo::SharedCtor() {
  ::memset(&req_rpc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_script_rpc_) -
      reinterpret_cast<char*>(&req_rpc_id_)) + sizeof(is_script_rpc_));
}

Proto_RpcInfo::~Proto_RpcInfo() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_RpcInfo)
  SharedDtor();
}

void Proto_RpcInfo::SharedDtor() {
}

void Proto_RpcInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_RpcInfo::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_RpcInfo& Proto_RpcInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_RpcInfo.base);
  return *internal_default_instance();
}


void Proto_RpcInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_RpcInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&req_rpc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_script_rpc_) -
      reinterpret_cast<char*>(&req_rpc_id_)) + sizeof(is_script_rpc_));
  _internal_metadata_.Clear();
}

bool Proto_RpcInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_RpcInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 req_rpc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &req_rpc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 rsp_rpc_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rsp_rpc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rpc_ret_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpc_ret_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 req_rpc_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &req_rpc_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 rsp_rpc_hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rsp_rpc_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 req_bus_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &req_bus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 req_server_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &req_server_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_script_rpc = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_script_rpc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_RpcInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_RpcInfo)
  return false;
#undef DO_
}

void Proto_RpcInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_RpcInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 req_rpc_id = 1;
  if (this->req_rpc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->req_rpc_id(), output);
  }

  // int64 rsp_rpc_id = 2;
  if (this->rsp_rpc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rsp_rpc_id(), output);
  }

  // int32 rpc_ret_code = 3;
  if (this->rpc_ret_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rpc_ret_code(), output);
  }

  // uint64 req_rpc_hash = 4;
  if (this->req_rpc_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->req_rpc_hash(), output);
  }

  // uint64 rsp_rpc_hash = 5;
  if (this->rsp_rpc_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->rsp_rpc_hash(), output);
  }

  // uint32 req_bus_id = 6;
  if (this->req_bus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->req_bus_id(), output);
  }

  // uint64 req_server_type = 7;
  if (this->req_server_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->req_server_type(), output);
  }

  // bool is_script_rpc = 8;
  if (this->is_script_rpc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_script_rpc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_RpcInfo)
}

::google::protobuf::uint8* Proto_RpcInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_RpcInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 req_rpc_id = 1;
  if (this->req_rpc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->req_rpc_id(), target);
  }

  // int64 rsp_rpc_id = 2;
  if (this->rsp_rpc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->rsp_rpc_id(), target);
  }

  // int32 rpc_ret_code = 3;
  if (this->rpc_ret_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rpc_ret_code(), target);
  }

  // uint64 req_rpc_hash = 4;
  if (this->req_rpc_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->req_rpc_hash(), target);
  }

  // uint64 rsp_rpc_hash = 5;
  if (this->rsp_rpc_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->rsp_rpc_hash(), target);
  }

  // uint32 req_bus_id = 6;
  if (this->req_bus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->req_bus_id(), target);
  }

  // uint64 req_server_type = 7;
  if (this->req_server_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->req_server_type(), target);
  }

  // bool is_script_rpc = 8;
  if (this->is_script_rpc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_script_rpc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_RpcInfo)
  return target;
}

size_t Proto_RpcInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_RpcInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 req_rpc_id = 1;
  if (this->req_rpc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->req_rpc_id());
  }

  // int64 rsp_rpc_id = 2;
  if (this->rsp_rpc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rsp_rpc_id());
  }

  // uint64 req_rpc_hash = 4;
  if (this->req_rpc_hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->req_rpc_hash());
  }

  // int32 rpc_ret_code = 3;
  if (this->rpc_ret_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpc_ret_code());
  }

  // uint32 req_bus_id = 6;
  if (this->req_bus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->req_bus_id());
  }

  // uint64 rsp_rpc_hash = 5;
  if (this->rsp_rpc_hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rsp_rpc_hash());
  }

  // uint64 req_server_type = 7;
  if (this->req_server_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->req_server_type());
  }

  // bool is_script_rpc = 8;
  if (this->is_script_rpc() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_RpcInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_RpcInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_RpcInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_RpcInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_RpcInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_RpcInfo)
    MergeFrom(*source);
  }
}

void Proto_RpcInfo::MergeFrom(const Proto_RpcInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_RpcInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.req_rpc_id() != 0) {
    set_req_rpc_id(from.req_rpc_id());
  }
  if (from.rsp_rpc_id() != 0) {
    set_rsp_rpc_id(from.rsp_rpc_id());
  }
  if (from.req_rpc_hash() != 0) {
    set_req_rpc_hash(from.req_rpc_hash());
  }
  if (from.rpc_ret_code() != 0) {
    set_rpc_ret_code(from.rpc_ret_code());
  }
  if (from.req_bus_id() != 0) {
    set_req_bus_id(from.req_bus_id());
  }
  if (from.rsp_rpc_hash() != 0) {
    set_rsp_rpc_hash(from.rsp_rpc_hash());
  }
  if (from.req_server_type() != 0) {
    set_req_server_type(from.req_server_type());
  }
  if (from.is_script_rpc() != 0) {
    set_is_script_rpc(from.is_script_rpc());
  }
}

void Proto_RpcInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_RpcInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_RpcInfo::CopyFrom(const Proto_RpcInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_RpcInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_RpcInfo::IsInitialized() const {
  return true;
}

void Proto_RpcInfo::Swap(Proto_RpcInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_RpcInfo::InternalSwap(Proto_RpcInfo* other) {
  using std::swap;
  swap(req_rpc_id_, other->req_rpc_id_);
  swap(rsp_rpc_id_, other->rsp_rpc_id_);
  swap(req_rpc_hash_, other->req_rpc_hash_);
  swap(rpc_ret_code_, other->rpc_ret_code_);
  swap(req_bus_id_, other->req_bus_id_);
  swap(rsp_rpc_hash_, other->rsp_rpc_hash_);
  swap(req_server_type_, other->req_server_type_);
  swap(is_script_rpc_, other->is_script_rpc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_RpcInfo::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_RedirectInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_RedirectInfo::kIdFieldNumber;
const int Proto_RedirectInfo::kAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_RedirectInfo::Proto_RedirectInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_RedirectInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_RedirectInfo)
}
Proto_RedirectInfo::Proto_RedirectInfo(const Proto_RedirectInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  all_ = from.all_;
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_RedirectInfo)
}

void Proto_RedirectInfo::SharedCtor() {
  all_ = false;
}

Proto_RedirectInfo::~Proto_RedirectInfo() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_RedirectInfo)
  SharedDtor();
}

void Proto_RedirectInfo::SharedDtor() {
}

void Proto_RedirectInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_RedirectInfo::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_RedirectInfo& Proto_RedirectInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_RedirectInfo.base);
  return *internal_default_instance();
}


void Proto_RedirectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_RedirectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.Clear();
  all_ = false;
  _internal_metadata_.Clear();
}

bool Proto_RedirectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_RedirectInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool all = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_RedirectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_RedirectInfo)
  return false;
#undef DO_
}

void Proto_RedirectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_RedirectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 id = 1;
  if (this->id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _id_cached_byte_size_));
  }
  for (int i = 0, n = this->id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->id(i), output);
  }

  // bool all = 2;
  if (this->all() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->all(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_RedirectInfo)
}

::google::protobuf::uint8* Proto_RedirectInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_RedirectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 id = 1;
  if (this->id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->id_, target);
  }

  // bool all = 2;
  if (this->all() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->all(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_RedirectInfo)
  return target;
}

size_t Proto_RedirectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_RedirectInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool all = 2;
  if (this->all() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_RedirectInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_RedirectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_RedirectInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_RedirectInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_RedirectInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_RedirectInfo)
    MergeFrom(*source);
  }
}

void Proto_RedirectInfo::MergeFrom(const Proto_RedirectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_RedirectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_.MergeFrom(from.id_);
  if (from.all() != 0) {
    set_all(from.all());
  }
}

void Proto_RedirectInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_RedirectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_RedirectInfo::CopyFrom(const Proto_RedirectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_RedirectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_RedirectInfo::IsInitialized() const {
  return true;
}

void Proto_RedirectInfo::Swap(Proto_RedirectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_RedirectInfo::InternalSwap(Proto_RedirectInfo* other) {
  using std::swap;
  id_.InternalSwap(&other->id_);
  swap(all_, other->all_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_RedirectInfo::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_FramePkg::InitAsDefaultInstance() {
  ::NFrame::_Proto_FramePkg_default_instance_._instance.get_mutable()->disp_info_ = const_cast< ::NFrame::Proto_DispInfo*>(
      ::NFrame::Proto_DispInfo::internal_default_instance());
  ::NFrame::_Proto_FramePkg_default_instance_._instance.get_mutable()->trans_info_ = const_cast< ::NFrame::Proto_TransInfo*>(
      ::NFrame::Proto_TransInfo::internal_default_instance());
  ::NFrame::_Proto_FramePkg_default_instance_._instance.get_mutable()->store_info_ = const_cast< ::NFrame::Proto_StoreInfo*>(
      ::NFrame::Proto_StoreInfo::internal_default_instance());
  ::NFrame::_Proto_FramePkg_default_instance_._instance.get_mutable()->event_info_ = const_cast< ::NFrame::Proto_EventInfo*>(
      ::NFrame::Proto_EventInfo::internal_default_instance());
  ::NFrame::_Proto_FramePkg_default_instance_._instance.get_mutable()->redirect_info_ = const_cast< ::NFrame::Proto_RedirectInfo*>(
      ::NFrame::Proto_RedirectInfo::internal_default_instance());
  ::NFrame::_Proto_FramePkg_default_instance_._instance.get_mutable()->rpc_info_ = const_cast< ::NFrame::Proto_RpcInfo*>(
      ::NFrame::Proto_RpcInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_FramePkg::kModuleIdFieldNumber;
const int Proto_FramePkg::kMsgIdFieldNumber;
const int Proto_FramePkg::kMsgDataFieldNumber;
const int Proto_FramePkg::kDispInfoFieldNumber;
const int Proto_FramePkg::kTransInfoFieldNumber;
const int Proto_FramePkg::kStoreInfoFieldNumber;
const int Proto_FramePkg::kEventInfoFieldNumber;
const int Proto_FramePkg::kRedirectInfoFieldNumber;
const int Proto_FramePkg::kRpcInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_FramePkg::Proto_FramePkg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_FramePkg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_FramePkg)
}
Proto_FramePkg::Proto_FramePkg(const Proto_FramePkg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_data().size() > 0) {
    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  if (from.has_disp_info()) {
    disp_info_ = new ::NFrame::Proto_DispInfo(*from.disp_info_);
  } else {
    disp_info_ = NULL;
  }
  if (from.has_trans_info()) {
    trans_info_ = new ::NFrame::Proto_TransInfo(*from.trans_info_);
  } else {
    trans_info_ = NULL;
  }
  if (from.has_store_info()) {
    store_info_ = new ::NFrame::Proto_StoreInfo(*from.store_info_);
  } else {
    store_info_ = NULL;
  }
  if (from.has_event_info()) {
    event_info_ = new ::NFrame::Proto_EventInfo(*from.event_info_);
  } else {
    event_info_ = NULL;
  }
  if (from.has_redirect_info()) {
    redirect_info_ = new ::NFrame::Proto_RedirectInfo(*from.redirect_info_);
  } else {
    redirect_info_ = NULL;
  }
  if (from.has_rpc_info()) {
    rpc_info_ = new ::NFrame::Proto_RpcInfo(*from.rpc_info_);
  } else {
    rpc_info_ = NULL;
  }
  ::memcpy(&module_id_, &from.module_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_id_) -
    reinterpret_cast<char*>(&module_id_)) + sizeof(msg_id_));
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_FramePkg)
}

void Proto_FramePkg::SharedCtor() {
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&disp_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&disp_info_)) + sizeof(msg_id_));
}

Proto_FramePkg::~Proto_FramePkg() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_FramePkg)
  SharedDtor();
}

void Proto_FramePkg::SharedDtor() {
  msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete disp_info_;
  if (this != internal_default_instance()) delete trans_info_;
  if (this != internal_default_instance()) delete store_info_;
  if (this != internal_default_instance()) delete event_info_;
  if (this != internal_default_instance()) delete redirect_info_;
  if (this != internal_default_instance()) delete rpc_info_;
}

void Proto_FramePkg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_FramePkg::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_FramePkg& Proto_FramePkg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_FramePkg.base);
  return *internal_default_instance();
}


void Proto_FramePkg::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_FramePkg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && disp_info_ != NULL) {
    delete disp_info_;
  }
  disp_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && trans_info_ != NULL) {
    delete trans_info_;
  }
  trans_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && store_info_ != NULL) {
    delete store_info_;
  }
  store_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && event_info_ != NULL) {
    delete event_info_;
  }
  event_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && redirect_info_ != NULL) {
    delete redirect_info_;
  }
  redirect_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && rpc_info_ != NULL) {
    delete rpc_info_;
  }
  rpc_info_ = NULL;
  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(msg_id_));
  _internal_metadata_.Clear();
}

bool Proto_FramePkg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_FramePkg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 module_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &module_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.Proto_DispInfo disp_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disp_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.Proto_TransInfo trans_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trans_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.Proto_StoreInfo store_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_store_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.Proto_EventInfo event_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.Proto_RedirectInfo redirect_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_redirect_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.Proto_RpcInfo rpc_info = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rpc_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_FramePkg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_FramePkg)
  return false;
#undef DO_
}

void Proto_FramePkg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_FramePkg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 module_id = 1;
  if (this->module_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->module_id(), output);
  }

  // int32 msg_id = 2;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->msg_id(), output);
  }

  // bytes msg_data = 3;
  if (this->msg_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msg_data(), output);
  }

  // .NFrame.Proto_DispInfo disp_info = 4;
  if (this->has_disp_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_disp_info(), output);
  }

  // .NFrame.Proto_TransInfo trans_info = 5;
  if (this->has_trans_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_trans_info(), output);
  }

  // .NFrame.Proto_StoreInfo store_info = 6;
  if (this->has_store_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_store_info(), output);
  }

  // .NFrame.Proto_EventInfo event_info = 7;
  if (this->has_event_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_event_info(), output);
  }

  // .NFrame.Proto_RedirectInfo redirect_info = 8;
  if (this->has_redirect_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_redirect_info(), output);
  }

  // .NFrame.Proto_RpcInfo rpc_info = 9;
  if (this->has_rpc_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_rpc_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_FramePkg)
}

::google::protobuf::uint8* Proto_FramePkg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_FramePkg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 module_id = 1;
  if (this->module_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->module_id(), target);
  }

  // int32 msg_id = 2;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->msg_id(), target);
  }

  // bytes msg_data = 3;
  if (this->msg_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msg_data(), target);
  }

  // .NFrame.Proto_DispInfo disp_info = 4;
  if (this->has_disp_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_disp_info(), deterministic, target);
  }

  // .NFrame.Proto_TransInfo trans_info = 5;
  if (this->has_trans_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_trans_info(), deterministic, target);
  }

  // .NFrame.Proto_StoreInfo store_info = 6;
  if (this->has_store_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_store_info(), deterministic, target);
  }

  // .NFrame.Proto_EventInfo event_info = 7;
  if (this->has_event_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_event_info(), deterministic, target);
  }

  // .NFrame.Proto_RedirectInfo redirect_info = 8;
  if (this->has_redirect_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_redirect_info(), deterministic, target);
  }

  // .NFrame.Proto_RpcInfo rpc_info = 9;
  if (this->has_rpc_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_rpc_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_FramePkg)
  return target;
}

size_t Proto_FramePkg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_FramePkg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msg_data = 3;
  if (this->msg_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg_data());
  }

  // .NFrame.Proto_DispInfo disp_info = 4;
  if (this->has_disp_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *disp_info_);
  }

  // .NFrame.Proto_TransInfo trans_info = 5;
  if (this->has_trans_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *trans_info_);
  }

  // .NFrame.Proto_StoreInfo store_info = 6;
  if (this->has_store_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *store_info_);
  }

  // .NFrame.Proto_EventInfo event_info = 7;
  if (this->has_event_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_info_);
  }

  // .NFrame.Proto_RedirectInfo redirect_info = 8;
  if (this->has_redirect_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *redirect_info_);
  }

  // .NFrame.Proto_RpcInfo rpc_info = 9;
  if (this->has_rpc_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rpc_info_);
  }

  // int32 module_id = 1;
  if (this->module_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->module_id());
  }

  // int32 msg_id = 2;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_FramePkg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_FramePkg)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_FramePkg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_FramePkg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_FramePkg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_FramePkg)
    MergeFrom(*source);
  }
}

void Proto_FramePkg::MergeFrom(const Proto_FramePkg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_FramePkg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_data().size() > 0) {

    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  if (from.has_disp_info()) {
    mutable_disp_info()->::NFrame::Proto_DispInfo::MergeFrom(from.disp_info());
  }
  if (from.has_trans_info()) {
    mutable_trans_info()->::NFrame::Proto_TransInfo::MergeFrom(from.trans_info());
  }
  if (from.has_store_info()) {
    mutable_store_info()->::NFrame::Proto_StoreInfo::MergeFrom(from.store_info());
  }
  if (from.has_event_info()) {
    mutable_event_info()->::NFrame::Proto_EventInfo::MergeFrom(from.event_info());
  }
  if (from.has_redirect_info()) {
    mutable_redirect_info()->::NFrame::Proto_RedirectInfo::MergeFrom(from.redirect_info());
  }
  if (from.has_rpc_info()) {
    mutable_rpc_info()->::NFrame::Proto_RpcInfo::MergeFrom(from.rpc_info());
  }
  if (from.module_id() != 0) {
    set_module_id(from.module_id());
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
}

void Proto_FramePkg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_FramePkg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_FramePkg::CopyFrom(const Proto_FramePkg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_FramePkg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_FramePkg::IsInitialized() const {
  return true;
}

void Proto_FramePkg::Swap(Proto_FramePkg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_FramePkg::InternalSwap(Proto_FramePkg* other) {
  using std::swap;
  msg_data_.Swap(&other->msg_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(disp_info_, other->disp_info_);
  swap(trans_info_, other->trans_info_);
  swap(store_info_, other->store_info_);
  swap(event_info_, other->event_info_);
  swap(redirect_info_, other->redirect_info_);
  swap(rpc_info_, other->rpc_info_);
  swap(module_id_, other->module_id_);
  swap(msg_id_, other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_FramePkg::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerInfoReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfoReport::kBusIdFieldNumber;
const int ServerInfoReport::kServerIdFieldNumber;
const int ServerInfoReport::kServerTypeFieldNumber;
const int ServerInfoReport::kServerNameFieldNumber;
const int ServerInfoReport::kUrlFieldNumber;
const int ServerInfoReport::kLinkModeFieldNumber;
const int ServerInfoReport::kBusLengthFieldNumber;
const int ServerInfoReport::kServerIpFieldNumber;
const int ServerInfoReport::kServerPortFieldNumber;
const int ServerInfoReport::kServerHttpPortFieldNumber;
const int ServerInfoReport::kExternalServerIpFieldNumber;
const int ServerInfoReport::kExternalServerPortFieldNumber;
const int ServerInfoReport::kIsCrossServerFieldNumber;
const int ServerInfoReport::kRouteSvrFieldNumber;
const int ServerInfoReport::kServerMaxOnlineFieldNumber;
const int ServerInfoReport::kServerCurOnlineFieldNumber;
const int ServerInfoReport::kServerStateFieldNumber;
const int ServerInfoReport::kSystemInfoFieldNumber;
const int ServerInfoReport::kTotalMemFieldNumber;
const int ServerInfoReport::kFreeMemFieldNumber;
const int ServerInfoReport::kUsedMemFieldNumber;
const int ServerInfoReport::kProcCpuFieldNumber;
const int ServerInfoReport::kProcMemFieldNumber;
const int ServerInfoReport::kProcThreadFieldNumber;
const int ServerInfoReport::kProcNameFieldNumber;
const int ServerInfoReport::kProcCwdFieldNumber;
const int ServerInfoReport::kProcPidFieldNumber;
const int ServerInfoReport::kLastDateFieldNumber;
const int ServerInfoReport::kLastTimeFieldNumber;
const int ServerInfoReport::kContractInfoFieldNumber;
const int ServerInfoReport::kMachineAddrFieldNumber;
const int ServerInfoReport::kDbNameListFieldNumber;
const int ServerInfoReport::kMsgIdFieldNumber;
const int ServerInfoReport::kMapIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfoReport::ServerInfoReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_ServerInfoReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.ServerInfoReport)
}
ServerInfoReport::ServerInfoReport(const ServerInfoReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      db_name_list_(from.db_name_list_),
      msg_id_(from.msg_id_),
      map_id_list_(from.map_id_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_id().size() > 0) {
    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  link_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link_mode().size() > 0) {
    link_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_mode_);
  }
  server_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_ip().size() > 0) {
    server_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ip_);
  }
  external_server_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.external_server_ip().size() > 0) {
    external_server_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_server_ip_);
  }
  route_svr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.route_svr().size() > 0) {
    route_svr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_svr_);
  }
  system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_info().size() > 0) {
    system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_info_);
  }
  proc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proc_name().size() > 0) {
    proc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proc_name_);
  }
  proc_cwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proc_cwd().size() > 0) {
    proc_cwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proc_cwd_);
  }
  last_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_date().size() > 0) {
    last_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_date_);
  }
  contract_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contract_info().size() > 0) {
    contract_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_info_);
  }
  machine_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machine_addr().size() > 0) {
    machine_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_addr_);
  }
  ::memcpy(&bus_id_, &from.bus_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_time_) -
    reinterpret_cast<char*>(&bus_id_)) + sizeof(last_time_));
  // @@protoc_insertion_point(copy_constructor:NFrame.ServerInfoReport)
}

void ServerInfoReport::SharedCtor() {
  server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_server_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_svr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proc_cwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bus_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_time_) -
      reinterpret_cast<char*>(&bus_id_)) + sizeof(last_time_));
}

ServerInfoReport::~ServerInfoReport() {
  // @@protoc_insertion_point(destructor:NFrame.ServerInfoReport)
  SharedDtor();
}

void ServerInfoReport::SharedDtor() {
  server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_server_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_svr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proc_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proc_cwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerInfoReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerInfoReport::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfoReport& ServerInfoReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_ServerInfoReport.base);
  return *internal_default_instance();
}


void ServerInfoReport::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.ServerInfoReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  db_name_list_.Clear();
  msg_id_.Clear();
  map_id_list_.Clear();
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_server_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_svr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proc_cwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bus_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_time_) -
      reinterpret_cast<char*>(&bus_id_)) + sizeof(last_time_));
  _internal_metadata_.Clear();
}

bool ServerInfoReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.ServerInfoReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bus_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_id().data(), static_cast<int>(this->server_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.server_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link_mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link_mode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link_mode().data(), static_cast<int>(this->link_mode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.link_mode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bus_length = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bus_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_ip = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_ip().data(), static_cast<int>(this->server_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.server_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_port = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_http_port = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_http_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string external_server_ip = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_external_server_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->external_server_ip().data(), static_cast<int>(this->external_server_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.external_server_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 external_server_port = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &external_server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_cross_server = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_cross_server_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string route_svr = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_route_svr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->route_svr().data(), static_cast<int>(this->route_svr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.route_svr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_max_online = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_max_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_cur_online = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_cur_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_state = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string system_info = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->system_info().data(), static_cast<int>(this->system_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.system_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_mem = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_mem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 free_mem = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &free_mem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 used_mem = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &used_mem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double proc_cpu = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 297 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &proc_cpu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 proc_mem = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proc_mem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 proc_thread = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proc_thread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string proc_name = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proc_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proc_name().data(), static_cast<int>(this->proc_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.proc_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string proc_cwd = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proc_cwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proc_cwd().data(), static_cast<int>(this->proc_cwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.proc_cwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 proc_pid = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proc_pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_date = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_date().data(), static_cast<int>(this->last_date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.last_date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 last_time = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contract_info = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract_info().data(), static_cast<int>(this->contract_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.contract_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string machine_addr = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machine_addr().data(), static_cast<int>(this->machine_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.machine_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string db_name_list = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_db_name_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name_list(this->db_name_list_size() - 1).data(),
            static_cast<int>(this->db_name_list(this->db_name_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ServerInfoReport.db_name_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 msg_id = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_msg_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 384 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 386u, input, this->mutable_msg_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 map_id_list = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_map_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 394u, input, this->mutable_map_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.ServerInfoReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.ServerInfoReport)
  return false;
#undef DO_
}

void ServerInfoReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.ServerInfoReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bus_id = 1;
  if (this->bus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bus_id(), output);
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.server_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_id(), output);
  }

  // uint32 server_type = 3;
  if (this->server_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_type(), output);
  }

  // string server_name = 4;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->server_name(), output);
  }

  // string url = 5;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->url(), output);
  }

  // string link_mode = 6;
  if (this->link_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_mode().data(), static_cast<int>(this->link_mode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.link_mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->link_mode(), output);
  }

  // uint32 bus_length = 7;
  if (this->bus_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->bus_length(), output);
  }

  // string server_ip = 9;
  if (this->server_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_ip().data(), static_cast<int>(this->server_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.server_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->server_ip(), output);
  }

  // uint32 server_port = 10;
  if (this->server_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->server_port(), output);
  }

  // uint32 server_http_port = 11;
  if (this->server_http_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->server_http_port(), output);
  }

  // string external_server_ip = 12;
  if (this->external_server_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->external_server_ip().data(), static_cast<int>(this->external_server_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.external_server_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->external_server_ip(), output);
  }

  // uint32 external_server_port = 13;
  if (this->external_server_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->external_server_port(), output);
  }

  // bool is_cross_server = 14;
  if (this->is_cross_server() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_cross_server(), output);
  }

  // string route_svr = 15;
  if (this->route_svr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->route_svr().data(), static_cast<int>(this->route_svr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.route_svr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->route_svr(), output);
  }

  // uint32 server_max_online = 30;
  if (this->server_max_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->server_max_online(), output);
  }

  // uint32 server_cur_online = 31;
  if (this->server_cur_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->server_cur_online(), output);
  }

  // uint32 server_state = 32;
  if (this->server_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->server_state(), output);
  }

  // string system_info = 33;
  if (this->system_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_info().data(), static_cast<int>(this->system_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.system_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->system_info(), output);
  }

  // uint64 total_mem = 34;
  if (this->total_mem() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(34, this->total_mem(), output);
  }

  // uint64 free_mem = 35;
  if (this->free_mem() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(35, this->free_mem(), output);
  }

  // uint64 used_mem = 36;
  if (this->used_mem() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(36, this->used_mem(), output);
  }

  // double proc_cpu = 37;
  if (this->proc_cpu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(37, this->proc_cpu(), output);
  }

  // uint64 proc_mem = 38;
  if (this->proc_mem() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(38, this->proc_mem(), output);
  }

  // uint32 proc_thread = 39;
  if (this->proc_thread() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(39, this->proc_thread(), output);
  }

  // string proc_name = 40;
  if (this->proc_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proc_name().data(), static_cast<int>(this->proc_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.proc_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      40, this->proc_name(), output);
  }

  // string proc_cwd = 41;
  if (this->proc_cwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proc_cwd().data(), static_cast<int>(this->proc_cwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.proc_cwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->proc_cwd(), output);
  }

  // uint32 proc_pid = 42;
  if (this->proc_pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->proc_pid(), output);
  }

  // string last_date = 43;
  if (this->last_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_date().data(), static_cast<int>(this->last_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.last_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      43, this->last_date(), output);
  }

  // uint64 last_time = 44;
  if (this->last_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(44, this->last_time(), output);
  }

  // string contract_info = 45;
  if (this->contract_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_info().data(), static_cast<int>(this->contract_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.contract_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      45, this->contract_info(), output);
  }

  // string machine_addr = 46;
  if (this->machine_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_addr().data(), static_cast<int>(this->machine_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.machine_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      46, this->machine_addr(), output);
  }

  // repeated string db_name_list = 47;
  for (int i = 0, n = this->db_name_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name_list(i).data(), static_cast<int>(this->db_name_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.db_name_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      47, this->db_name_list(i), output);
  }

  // repeated uint32 msg_id = 48;
  if (this->msg_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(48, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _msg_id_cached_byte_size_));
  }
  for (int i = 0, n = this->msg_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->msg_id(i), output);
  }

  // repeated uint64 map_id_list = 49;
  if (this->map_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(49, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _map_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->map_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->map_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.ServerInfoReport)
}

::google::protobuf::uint8* ServerInfoReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.ServerInfoReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bus_id = 1;
  if (this->bus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bus_id(), target);
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_id().data(), static_cast<int>(this->server_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.server_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_id(), target);
  }

  // uint32 server_type = 3;
  if (this->server_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_type(), target);
  }

  // string server_name = 4;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->server_name(), target);
  }

  // string url = 5;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->url(), target);
  }

  // string link_mode = 6;
  if (this->link_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link_mode().data(), static_cast<int>(this->link_mode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.link_mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->link_mode(), target);
  }

  // uint32 bus_length = 7;
  if (this->bus_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->bus_length(), target);
  }

  // string server_ip = 9;
  if (this->server_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_ip().data(), static_cast<int>(this->server_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.server_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->server_ip(), target);
  }

  // uint32 server_port = 10;
  if (this->server_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->server_port(), target);
  }

  // uint32 server_http_port = 11;
  if (this->server_http_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->server_http_port(), target);
  }

  // string external_server_ip = 12;
  if (this->external_server_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->external_server_ip().data(), static_cast<int>(this->external_server_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.external_server_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->external_server_ip(), target);
  }

  // uint32 external_server_port = 13;
  if (this->external_server_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->external_server_port(), target);
  }

  // bool is_cross_server = 14;
  if (this->is_cross_server() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_cross_server(), target);
  }

  // string route_svr = 15;
  if (this->route_svr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->route_svr().data(), static_cast<int>(this->route_svr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.route_svr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->route_svr(), target);
  }

  // uint32 server_max_online = 30;
  if (this->server_max_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->server_max_online(), target);
  }

  // uint32 server_cur_online = 31;
  if (this->server_cur_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->server_cur_online(), target);
  }

  // uint32 server_state = 32;
  if (this->server_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->server_state(), target);
  }

  // string system_info = 33;
  if (this->system_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_info().data(), static_cast<int>(this->system_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.system_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->system_info(), target);
  }

  // uint64 total_mem = 34;
  if (this->total_mem() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(34, this->total_mem(), target);
  }

  // uint64 free_mem = 35;
  if (this->free_mem() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(35, this->free_mem(), target);
  }

  // uint64 used_mem = 36;
  if (this->used_mem() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(36, this->used_mem(), target);
  }

  // double proc_cpu = 37;
  if (this->proc_cpu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(37, this->proc_cpu(), target);
  }

  // uint64 proc_mem = 38;
  if (this->proc_mem() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(38, this->proc_mem(), target);
  }

  // uint32 proc_thread = 39;
  if (this->proc_thread() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(39, this->proc_thread(), target);
  }

  // string proc_name = 40;
  if (this->proc_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proc_name().data(), static_cast<int>(this->proc_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.proc_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->proc_name(), target);
  }

  // string proc_cwd = 41;
  if (this->proc_cwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proc_cwd().data(), static_cast<int>(this->proc_cwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.proc_cwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->proc_cwd(), target);
  }

  // uint32 proc_pid = 42;
  if (this->proc_pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->proc_pid(), target);
  }

  // string last_date = 43;
  if (this->last_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_date().data(), static_cast<int>(this->last_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.last_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        43, this->last_date(), target);
  }

  // uint64 last_time = 44;
  if (this->last_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(44, this->last_time(), target);
  }

  // string contract_info = 45;
  if (this->contract_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_info().data(), static_cast<int>(this->contract_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.contract_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        45, this->contract_info(), target);
  }

  // string machine_addr = 46;
  if (this->machine_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_addr().data(), static_cast<int>(this->machine_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.machine_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        46, this->machine_addr(), target);
  }

  // repeated string db_name_list = 47;
  for (int i = 0, n = this->db_name_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name_list(i).data(), static_cast<int>(this->db_name_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ServerInfoReport.db_name_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(47, this->db_name_list(i), target);
  }

  // repeated uint32 msg_id = 48;
  if (this->msg_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      48,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _msg_id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->msg_id_, target);
  }

  // repeated uint64 map_id_list = 49;
  if (this->map_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      49,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _map_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->map_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.ServerInfoReport)
  return target;
}

size_t ServerInfoReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.ServerInfoReport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string db_name_list = 47;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->db_name_list_size());
  for (int i = 0, n = this->db_name_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->db_name_list(i));
  }

  // repeated uint32 msg_id = 48;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->msg_id_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _msg_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 map_id_list = 49;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->map_id_list_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _map_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string server_id = 2;
  if (this->server_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_id());
  }

  // string server_name = 4;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // string url = 5;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string link_mode = 6;
  if (this->link_mode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link_mode());
  }

  // string server_ip = 9;
  if (this->server_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_ip());
  }

  // string external_server_ip = 12;
  if (this->external_server_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->external_server_ip());
  }

  // string route_svr = 15;
  if (this->route_svr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->route_svr());
  }

  // string system_info = 33;
  if (this->system_info().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system_info());
  }

  // string proc_name = 40;
  if (this->proc_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proc_name());
  }

  // string proc_cwd = 41;
  if (this->proc_cwd().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proc_cwd());
  }

  // string last_date = 43;
  if (this->last_date().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_date());
  }

  // string contract_info = 45;
  if (this->contract_info().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract_info());
  }

  // string machine_addr = 46;
  if (this->machine_addr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_addr());
  }

  // uint32 bus_id = 1;
  if (this->bus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bus_id());
  }

  // uint32 server_type = 3;
  if (this->server_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_type());
  }

  // uint32 bus_length = 7;
  if (this->bus_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bus_length());
  }

  // uint32 server_port = 10;
  if (this->server_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_port());
  }

  // uint32 server_http_port = 11;
  if (this->server_http_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_http_port());
  }

  // uint32 external_server_port = 13;
  if (this->external_server_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->external_server_port());
  }

  // bool is_cross_server = 14;
  if (this->is_cross_server() != 0) {
    total_size += 1 + 1;
  }

  // uint32 server_max_online = 30;
  if (this->server_max_online() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_max_online());
  }

  // uint32 server_cur_online = 31;
  if (this->server_cur_online() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_cur_online());
  }

  // uint32 server_state = 32;
  if (this->server_state() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_state());
  }

  // uint64 total_mem = 34;
  if (this->total_mem() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_mem());
  }

  // uint64 free_mem = 35;
  if (this->free_mem() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->free_mem());
  }

  // uint64 used_mem = 36;
  if (this->used_mem() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->used_mem());
  }

  // double proc_cpu = 37;
  if (this->proc_cpu() != 0) {
    total_size += 2 + 8;
  }

  // uint64 proc_mem = 38;
  if (this->proc_mem() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->proc_mem());
  }

  // uint32 proc_thread = 39;
  if (this->proc_thread() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->proc_thread());
  }

  // uint32 proc_pid = 42;
  if (this->proc_pid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->proc_pid());
  }

  // uint64 last_time = 44;
  if (this->last_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->last_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerInfoReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.ServerInfoReport)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfoReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfoReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.ServerInfoReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.ServerInfoReport)
    MergeFrom(*source);
  }
}

void ServerInfoReport::MergeFrom(const ServerInfoReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.ServerInfoReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  db_name_list_.MergeFrom(from.db_name_list_);
  msg_id_.MergeFrom(from.msg_id_);
  map_id_list_.MergeFrom(from.map_id_list_);
  if (from.server_id().size() > 0) {

    server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
  }
  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.link_mode().size() > 0) {

    link_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_mode_);
  }
  if (from.server_ip().size() > 0) {

    server_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ip_);
  }
  if (from.external_server_ip().size() > 0) {

    external_server_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_server_ip_);
  }
  if (from.route_svr().size() > 0) {

    route_svr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_svr_);
  }
  if (from.system_info().size() > 0) {

    system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_info_);
  }
  if (from.proc_name().size() > 0) {

    proc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proc_name_);
  }
  if (from.proc_cwd().size() > 0) {

    proc_cwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proc_cwd_);
  }
  if (from.last_date().size() > 0) {

    last_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_date_);
  }
  if (from.contract_info().size() > 0) {

    contract_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_info_);
  }
  if (from.machine_addr().size() > 0) {

    machine_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_addr_);
  }
  if (from.bus_id() != 0) {
    set_bus_id(from.bus_id());
  }
  if (from.server_type() != 0) {
    set_server_type(from.server_type());
  }
  if (from.bus_length() != 0) {
    set_bus_length(from.bus_length());
  }
  if (from.server_port() != 0) {
    set_server_port(from.server_port());
  }
  if (from.server_http_port() != 0) {
    set_server_http_port(from.server_http_port());
  }
  if (from.external_server_port() != 0) {
    set_external_server_port(from.external_server_port());
  }
  if (from.is_cross_server() != 0) {
    set_is_cross_server(from.is_cross_server());
  }
  if (from.server_max_online() != 0) {
    set_server_max_online(from.server_max_online());
  }
  if (from.server_cur_online() != 0) {
    set_server_cur_online(from.server_cur_online());
  }
  if (from.server_state() != 0) {
    set_server_state(from.server_state());
  }
  if (from.total_mem() != 0) {
    set_total_mem(from.total_mem());
  }
  if (from.free_mem() != 0) {
    set_free_mem(from.free_mem());
  }
  if (from.used_mem() != 0) {
    set_used_mem(from.used_mem());
  }
  if (from.proc_cpu() != 0) {
    set_proc_cpu(from.proc_cpu());
  }
  if (from.proc_mem() != 0) {
    set_proc_mem(from.proc_mem());
  }
  if (from.proc_thread() != 0) {
    set_proc_thread(from.proc_thread());
  }
  if (from.proc_pid() != 0) {
    set_proc_pid(from.proc_pid());
  }
  if (from.last_time() != 0) {
    set_last_time(from.last_time());
  }
}

void ServerInfoReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.ServerInfoReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfoReport::CopyFrom(const ServerInfoReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.ServerInfoReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfoReport::IsInitialized() const {
  return true;
}

void ServerInfoReport::Swap(ServerInfoReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfoReport::InternalSwap(ServerInfoReport* other) {
  using std::swap;
  db_name_list_.InternalSwap(CastToBase(&other->db_name_list_));
  msg_id_.InternalSwap(&other->msg_id_);
  map_id_list_.InternalSwap(&other->map_id_list_);
  server_id_.Swap(&other->server_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  link_mode_.Swap(&other->link_mode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_ip_.Swap(&other->server_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  external_server_ip_.Swap(&other->external_server_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  route_svr_.Swap(&other->route_svr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  system_info_.Swap(&other->system_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  proc_name_.Swap(&other->proc_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  proc_cwd_.Swap(&other->proc_cwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_date_.Swap(&other->last_date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_info_.Swap(&other->contract_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_addr_.Swap(&other->machine_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bus_id_, other->bus_id_);
  swap(server_type_, other->server_type_);
  swap(bus_length_, other->bus_length_);
  swap(server_port_, other->server_port_);
  swap(server_http_port_, other->server_http_port_);
  swap(external_server_port_, other->external_server_port_);
  swap(is_cross_server_, other->is_cross_server_);
  swap(server_max_online_, other->server_max_online_);
  swap(server_cur_online_, other->server_cur_online_);
  swap(server_state_, other->server_state_);
  swap(total_mem_, other->total_mem_);
  swap(free_mem_, other->free_mem_);
  swap(used_mem_, other->used_mem_);
  swap(proc_cpu_, other->proc_cpu_);
  swap(proc_mem_, other->proc_mem_);
  swap(proc_thread_, other->proc_thread_);
  swap(proc_pid_, other->proc_pid_);
  swap(last_time_, other->last_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerInfoReport::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerInfoReportList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfoReportList::kServerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfoReportList::ServerInfoReportList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_ServerInfoReportList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.ServerInfoReportList)
}
ServerInfoReportList::ServerInfoReportList(const ServerInfoReportList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      server_list_(from.server_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFrame.ServerInfoReportList)
}

void ServerInfoReportList::SharedCtor() {
}

ServerInfoReportList::~ServerInfoReportList() {
  // @@protoc_insertion_point(destructor:NFrame.ServerInfoReportList)
  SharedDtor();
}

void ServerInfoReportList::SharedDtor() {
}

void ServerInfoReportList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerInfoReportList::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfoReportList& ServerInfoReportList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_ServerInfoReportList.base);
  return *internal_default_instance();
}


void ServerInfoReportList::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.ServerInfoReportList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerInfoReportList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.ServerInfoReportList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFrame.ServerInfoReport server_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_server_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.ServerInfoReportList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.ServerInfoReportList)
  return false;
#undef DO_
}

void ServerInfoReportList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.ServerInfoReportList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFrame.ServerInfoReport server_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->server_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.ServerInfoReportList)
}

::google::protobuf::uint8* ServerInfoReportList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.ServerInfoReportList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFrame.ServerInfoReport server_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->server_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.ServerInfoReportList)
  return target;
}

size_t ServerInfoReportList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.ServerInfoReportList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFrame.ServerInfoReport server_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->server_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->server_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerInfoReportList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.ServerInfoReportList)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfoReportList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfoReportList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.ServerInfoReportList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.ServerInfoReportList)
    MergeFrom(*source);
  }
}

void ServerInfoReportList::MergeFrom(const ServerInfoReportList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.ServerInfoReportList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  server_list_.MergeFrom(from.server_list_);
}

void ServerInfoReportList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.ServerInfoReportList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfoReportList::CopyFrom(const ServerInfoReportList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.ServerInfoReportList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfoReportList::IsInitialized() const {
  return true;
}

void ServerInfoReportList::Swap(ServerInfoReportList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfoReportList::InternalSwap(ServerInfoReportList* other) {
  using std::swap;
  CastToBase(&server_list_)->InternalSwap(CastToBase(&other->server_list_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerInfoReportList::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerInfoReportListRespne::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfoReportListRespne::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfoReportListRespne::ServerInfoReportListRespne()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_ServerInfoReportListRespne.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.ServerInfoReportListRespne)
}
ServerInfoReportListRespne::ServerInfoReportListRespne(const ServerInfoReportListRespne& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_code_ = from.ret_code_;
  // @@protoc_insertion_point(copy_constructor:NFrame.ServerInfoReportListRespne)
}

void ServerInfoReportListRespne::SharedCtor() {
  ret_code_ = 0;
}

ServerInfoReportListRespne::~ServerInfoReportListRespne() {
  // @@protoc_insertion_point(destructor:NFrame.ServerInfoReportListRespne)
  SharedDtor();
}

void ServerInfoReportListRespne::SharedDtor() {
}

void ServerInfoReportListRespne::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerInfoReportListRespne::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfoReportListRespne& ServerInfoReportListRespne::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_ServerInfoReportListRespne.base);
  return *internal_default_instance();
}


void ServerInfoReportListRespne::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.ServerInfoReportListRespne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_code_ = 0;
  _internal_metadata_.Clear();
}

bool ServerInfoReportListRespne::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.ServerInfoReportListRespne)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.ServerInfoReportListRespne)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.ServerInfoReportListRespne)
  return false;
#undef DO_
}

void ServerInfoReportListRespne::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.ServerInfoReportListRespne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret_code = 1;
  if (this->ret_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.ServerInfoReportListRespne)
}

::google::protobuf::uint8* ServerInfoReportListRespne::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.ServerInfoReportListRespne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret_code = 1;
  if (this->ret_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.ServerInfoReportListRespne)
  return target;
}

size_t ServerInfoReportListRespne::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.ServerInfoReportListRespne)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 ret_code = 1;
  if (this->ret_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerInfoReportListRespne::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.ServerInfoReportListRespne)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfoReportListRespne* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfoReportListRespne>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.ServerInfoReportListRespne)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.ServerInfoReportListRespne)
    MergeFrom(*source);
  }
}

void ServerInfoReportListRespne::MergeFrom(const ServerInfoReportListRespne& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.ServerInfoReportListRespne)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret_code() != 0) {
    set_ret_code(from.ret_code());
  }
}

void ServerInfoReportListRespne::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.ServerInfoReportListRespne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfoReportListRespne::CopyFrom(const ServerInfoReportListRespne& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.ServerInfoReportListRespne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfoReportListRespne::IsInitialized() const {
  return true;
}

void ServerInfoReportListRespne::Swap(ServerInfoReportListRespne* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfoReportListRespne::InternalSwap(ServerInfoReportListRespne* other) {
  using std::swap;
  swap(ret_code_, other->ret_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerInfoReportListRespne::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ZkServerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZkServerInfo::kBusUrlFieldNumber;
const int ZkServerInfo::kTcpUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZkServerInfo::ZkServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_ZkServerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.ZkServerInfo)
}
ZkServerInfo::ZkServerInfo(const ZkServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bus_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bus_url().size() > 0) {
    bus_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bus_url_);
  }
  tcp_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tcp_url().size() > 0) {
    tcp_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tcp_url_);
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.ZkServerInfo)
}

void ZkServerInfo::SharedCtor() {
  bus_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tcp_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ZkServerInfo::~ZkServerInfo() {
  // @@protoc_insertion_point(destructor:NFrame.ZkServerInfo)
  SharedDtor();
}

void ZkServerInfo::SharedDtor() {
  bus_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tcp_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZkServerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ZkServerInfo::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZkServerInfo& ZkServerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_ZkServerInfo.base);
  return *internal_default_instance();
}


void ZkServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.ZkServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bus_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tcp_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ZkServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.ZkServerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bus_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bus_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bus_url().data(), static_cast<int>(this->bus_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ZkServerInfo.bus_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tcp_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tcp_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tcp_url().data(), static_cast<int>(this->tcp_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.ZkServerInfo.tcp_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.ZkServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.ZkServerInfo)
  return false;
#undef DO_
}

void ZkServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.ZkServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bus_url = 1;
  if (this->bus_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bus_url().data(), static_cast<int>(this->bus_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ZkServerInfo.bus_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bus_url(), output);
  }

  // string tcp_url = 2;
  if (this->tcp_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tcp_url().data(), static_cast<int>(this->tcp_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ZkServerInfo.tcp_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tcp_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.ZkServerInfo)
}

::google::protobuf::uint8* ZkServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.ZkServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bus_url = 1;
  if (this->bus_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bus_url().data(), static_cast<int>(this->bus_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ZkServerInfo.bus_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bus_url(), target);
  }

  // string tcp_url = 2;
  if (this->tcp_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tcp_url().data(), static_cast<int>(this->tcp_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.ZkServerInfo.tcp_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tcp_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.ZkServerInfo)
  return target;
}

size_t ZkServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.ZkServerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string bus_url = 1;
  if (this->bus_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bus_url());
  }

  // string tcp_url = 2;
  if (this->tcp_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tcp_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZkServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.ZkServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ZkServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZkServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.ZkServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.ZkServerInfo)
    MergeFrom(*source);
  }
}

void ZkServerInfo::MergeFrom(const ZkServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.ZkServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bus_url().size() > 0) {

    bus_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bus_url_);
  }
  if (from.tcp_url().size() > 0) {

    tcp_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tcp_url_);
  }
}

void ZkServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.ZkServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZkServerInfo::CopyFrom(const ZkServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.ZkServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZkServerInfo::IsInitialized() const {
  return true;
}

void ZkServerInfo::Swap(ZkServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZkServerInfo::InternalSwap(ZkServerInfo* other) {
  using std::swap;
  bus_url_.Swap(&other->bus_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tcp_url_.Swap(&other->tcp_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ZkServerInfo::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DynLibFileInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynLibFileInfo::kFileMd5FieldNumber;
const int DynLibFileInfo::kFileSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynLibFileInfo::DynLibFileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_DynLibFileInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.DynLibFileInfo)
}
DynLibFileInfo::DynLibFileInfo(const DynLibFileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_md5().size() > 0) {
    file_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_md5_);
  }
  file_size_ = from.file_size_;
  // @@protoc_insertion_point(copy_constructor:NFrame.DynLibFileInfo)
}

void DynLibFileInfo::SharedCtor() {
  file_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_size_ = 0;
}

DynLibFileInfo::~DynLibFileInfo() {
  // @@protoc_insertion_point(destructor:NFrame.DynLibFileInfo)
  SharedDtor();
}

void DynLibFileInfo::SharedDtor() {
  file_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DynLibFileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DynLibFileInfo::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynLibFileInfo& DynLibFileInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_DynLibFileInfo.base);
  return *internal_default_instance();
}


void DynLibFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.DynLibFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_size_ = 0;
  _internal_metadata_.Clear();
}

bool DynLibFileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.DynLibFileInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_md5 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_md5().data(), static_cast<int>(this->file_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.DynLibFileInfo.file_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 file_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.DynLibFileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.DynLibFileInfo)
  return false;
#undef DO_
}

void DynLibFileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.DynLibFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_md5 = 1;
  if (this->file_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_md5().data(), static_cast<int>(this->file_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.DynLibFileInfo.file_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_md5(), output);
  }

  // int32 file_size = 2;
  if (this->file_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->file_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.DynLibFileInfo)
}

::google::protobuf::uint8* DynLibFileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.DynLibFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_md5 = 1;
  if (this->file_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_md5().data(), static_cast<int>(this->file_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.DynLibFileInfo.file_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_md5(), target);
  }

  // int32 file_size = 2;
  if (this->file_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->file_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.DynLibFileInfo)
  return target;
}

size_t DynLibFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.DynLibFileInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_md5 = 1;
  if (this->file_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_md5());
  }

  // int32 file_size = 2;
  if (this->file_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->file_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DynLibFileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.DynLibFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DynLibFileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynLibFileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.DynLibFileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.DynLibFileInfo)
    MergeFrom(*source);
  }
}

void DynLibFileInfo::MergeFrom(const DynLibFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.DynLibFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_md5().size() > 0) {

    file_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_md5_);
  }
  if (from.file_size() != 0) {
    set_file_size(from.file_size());
  }
}

void DynLibFileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.DynLibFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynLibFileInfo::CopyFrom(const DynLibFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.DynLibFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynLibFileInfo::IsInitialized() const {
  return true;
}

void DynLibFileInfo::Swap(DynLibFileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynLibFileInfo::InternalSwap(DynLibFileInfo* other) {
  using std::swap;
  file_md5_.Swap(&other->file_md5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_size_, other->file_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DynLibFileInfo::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DynLibFileInfoArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynLibFileInfoArray::kFileListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynLibFileInfoArray::DynLibFileInfoArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_DynLibFileInfoArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.DynLibFileInfoArray)
}
DynLibFileInfoArray::DynLibFileInfoArray(const DynLibFileInfoArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      file_list_(from.file_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFrame.DynLibFileInfoArray)
}

void DynLibFileInfoArray::SharedCtor() {
}

DynLibFileInfoArray::~DynLibFileInfoArray() {
  // @@protoc_insertion_point(destructor:NFrame.DynLibFileInfoArray)
  SharedDtor();
}

void DynLibFileInfoArray::SharedDtor() {
}

void DynLibFileInfoArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DynLibFileInfoArray::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynLibFileInfoArray& DynLibFileInfoArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_DynLibFileInfoArray.base);
  return *internal_default_instance();
}


void DynLibFileInfoArray::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.DynLibFileInfoArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_list_.Clear();
  _internal_metadata_.Clear();
}

bool DynLibFileInfoArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.DynLibFileInfoArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFrame.DynLibFileInfo file_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_file_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.DynLibFileInfoArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.DynLibFileInfoArray)
  return false;
#undef DO_
}

void DynLibFileInfoArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.DynLibFileInfoArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFrame.DynLibFileInfo file_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->file_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->file_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.DynLibFileInfoArray)
}

::google::protobuf::uint8* DynLibFileInfoArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.DynLibFileInfoArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFrame.DynLibFileInfo file_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->file_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->file_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.DynLibFileInfoArray)
  return target;
}

size_t DynLibFileInfoArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.DynLibFileInfoArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFrame.DynLibFileInfo file_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->file_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->file_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DynLibFileInfoArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.DynLibFileInfoArray)
  GOOGLE_DCHECK_NE(&from, this);
  const DynLibFileInfoArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynLibFileInfoArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.DynLibFileInfoArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.DynLibFileInfoArray)
    MergeFrom(*source);
  }
}

void DynLibFileInfoArray::MergeFrom(const DynLibFileInfoArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.DynLibFileInfoArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_list_.MergeFrom(from.file_list_);
}

void DynLibFileInfoArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.DynLibFileInfoArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynLibFileInfoArray::CopyFrom(const DynLibFileInfoArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.DynLibFileInfoArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynLibFileInfoArray::IsInitialized() const {
  return true;
}

void DynLibFileInfoArray::Swap(DynLibFileInfoArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynLibFileInfoArray::InternalSwap(DynLibFileInfoArray* other) {
  using std::swap;
  CastToBase(&file_list_)->InternalSwap(CastToBase(&other->file_list_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DynLibFileInfoArray::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_KillAllServerNtf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_KillAllServerNtf::Proto_KillAllServerNtf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_KillAllServerNtf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_KillAllServerNtf)
}
Proto_KillAllServerNtf::Proto_KillAllServerNtf(const Proto_KillAllServerNtf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_KillAllServerNtf)
}

void Proto_KillAllServerNtf::SharedCtor() {
}

Proto_KillAllServerNtf::~Proto_KillAllServerNtf() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_KillAllServerNtf)
  SharedDtor();
}

void Proto_KillAllServerNtf::SharedDtor() {
}

void Proto_KillAllServerNtf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_KillAllServerNtf::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_KillAllServerNtf& Proto_KillAllServerNtf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_KillAllServerNtf.base);
  return *internal_default_instance();
}


void Proto_KillAllServerNtf::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_KillAllServerNtf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Proto_KillAllServerNtf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_KillAllServerNtf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_KillAllServerNtf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_KillAllServerNtf)
  return false;
#undef DO_
}

void Proto_KillAllServerNtf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_KillAllServerNtf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_KillAllServerNtf)
}

::google::protobuf::uint8* Proto_KillAllServerNtf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_KillAllServerNtf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_KillAllServerNtf)
  return target;
}

size_t Proto_KillAllServerNtf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_KillAllServerNtf)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_KillAllServerNtf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_KillAllServerNtf)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_KillAllServerNtf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_KillAllServerNtf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_KillAllServerNtf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_KillAllServerNtf)
    MergeFrom(*source);
  }
}

void Proto_KillAllServerNtf::MergeFrom(const Proto_KillAllServerNtf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_KillAllServerNtf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Proto_KillAllServerNtf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_KillAllServerNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_KillAllServerNtf::CopyFrom(const Proto_KillAllServerNtf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_KillAllServerNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_KillAllServerNtf::IsInitialized() const {
  return true;
}

void Proto_KillAllServerNtf::Swap(Proto_KillAllServerNtf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_KillAllServerNtf::InternalSwap(Proto_KillAllServerNtf* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_KillAllServerNtf::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_KillAllServerRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_KillAllServerRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_KillAllServerRsp::Proto_KillAllServerRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_KillAllServerRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_KillAllServerRsp)
}
Proto_KillAllServerRsp::Proto_KillAllServerRsp(const Proto_KillAllServerRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_KillAllServerRsp)
}

void Proto_KillAllServerRsp::SharedCtor() {
  result_ = 0;
}

Proto_KillAllServerRsp::~Proto_KillAllServerRsp() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_KillAllServerRsp)
  SharedDtor();
}

void Proto_KillAllServerRsp::SharedDtor() {
}

void Proto_KillAllServerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_KillAllServerRsp::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_KillAllServerRsp& Proto_KillAllServerRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_KillAllServerRsp.base);
  return *internal_default_instance();
}


void Proto_KillAllServerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_KillAllServerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool Proto_KillAllServerRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_KillAllServerRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_KillAllServerRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_KillAllServerRsp)
  return false;
#undef DO_
}

void Proto_KillAllServerRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_KillAllServerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_KillAllServerRsp)
}

::google::protobuf::uint8* Proto_KillAllServerRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_KillAllServerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_KillAllServerRsp)
  return target;
}

size_t Proto_KillAllServerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_KillAllServerRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_KillAllServerRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_KillAllServerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_KillAllServerRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_KillAllServerRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_KillAllServerRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_KillAllServerRsp)
    MergeFrom(*source);
  }
}

void Proto_KillAllServerRsp::MergeFrom(const Proto_KillAllServerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_KillAllServerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void Proto_KillAllServerRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_KillAllServerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_KillAllServerRsp::CopyFrom(const Proto_KillAllServerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_KillAllServerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_KillAllServerRsp::IsInitialized() const {
  return true;
}

void Proto_KillAllServerRsp::Swap(Proto_KillAllServerRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_KillAllServerRsp::InternalSwap(Proto_KillAllServerRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_KillAllServerRsp::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_STSBroadPlayerMsgNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_STSBroadPlayerMsgNotify::kUserIdFieldNumber;
const int Proto_STSBroadPlayerMsgNotify::kMsgIdFieldNumber;
const int Proto_STSBroadPlayerMsgNotify::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_STSBroadPlayerMsgNotify::Proto_STSBroadPlayerMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_STSBroadPlayerMsgNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_STSBroadPlayerMsgNotify)
}
Proto_STSBroadPlayerMsgNotify::Proto_STSBroadPlayerMsgNotify(const Proto_STSBroadPlayerMsgNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_id_(from.user_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_data().size() > 0) {
    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_STSBroadPlayerMsgNotify)
}

void Proto_STSBroadPlayerMsgNotify::SharedCtor() {
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = 0u;
}

Proto_STSBroadPlayerMsgNotify::~Proto_STSBroadPlayerMsgNotify() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_STSBroadPlayerMsgNotify)
  SharedDtor();
}

void Proto_STSBroadPlayerMsgNotify::SharedDtor() {
  msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_STSBroadPlayerMsgNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_STSBroadPlayerMsgNotify::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_STSBroadPlayerMsgNotify& Proto_STSBroadPlayerMsgNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_STSBroadPlayerMsgNotify.base);
  return *internal_default_instance();
}


void Proto_STSBroadPlayerMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_STSBroadPlayerMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.Clear();
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = 0u;
  _internal_metadata_.Clear();
}

bool Proto_STSBroadPlayerMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_STSBroadPlayerMsgNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_user_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_user_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_STSBroadPlayerMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_STSBroadPlayerMsgNotify)
  return false;
#undef DO_
}

void Proto_STSBroadPlayerMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_STSBroadPlayerMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 user_id = 1;
  if (this->user_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _user_id_cached_byte_size_));
  }
  for (int i = 0, n = this->user_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->user_id(i), output);
  }

  // uint32 msg_id = 2;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msg_id(), output);
  }

  // bytes msg_data = 3;
  if (this->msg_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msg_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_STSBroadPlayerMsgNotify)
}

::google::protobuf::uint8* Proto_STSBroadPlayerMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_STSBroadPlayerMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 user_id = 1;
  if (this->user_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _user_id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->user_id_, target);
  }

  // uint32 msg_id = 2;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msg_id(), target);
  }

  // bytes msg_data = 3;
  if (this->msg_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msg_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_STSBroadPlayerMsgNotify)
  return target;
}

size_t Proto_STSBroadPlayerMsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_STSBroadPlayerMsgNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 user_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->user_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _user_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes msg_data = 3;
  if (this->msg_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg_data());
  }

  // uint32 msg_id = 2;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_STSBroadPlayerMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_STSBroadPlayerMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_STSBroadPlayerMsgNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_STSBroadPlayerMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_STSBroadPlayerMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_STSBroadPlayerMsgNotify)
    MergeFrom(*source);
  }
}

void Proto_STSBroadPlayerMsgNotify::MergeFrom(const Proto_STSBroadPlayerMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_STSBroadPlayerMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_id_.MergeFrom(from.user_id_);
  if (from.msg_data().size() > 0) {

    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
}

void Proto_STSBroadPlayerMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_STSBroadPlayerMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_STSBroadPlayerMsgNotify::CopyFrom(const Proto_STSBroadPlayerMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_STSBroadPlayerMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_STSBroadPlayerMsgNotify::IsInitialized() const {
  return true;
}

void Proto_STSBroadPlayerMsgNotify::Swap(Proto_STSBroadPlayerMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_STSBroadPlayerMsgNotify::InternalSwap(Proto_STSBroadPlayerMsgNotify* other) {
  using std::swap;
  user_id_.InternalSwap(&other->user_id_);
  msg_data_.Swap(&other->msg_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_id_, other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_STSBroadPlayerMsgNotify::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_STWebMsgRspNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_STWebMsgRspNotify::kRequestIdFieldNumber;
const int Proto_STWebMsgRspNotify::kResultFieldNumber;
const int Proto_STWebMsgRspNotify::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_STWebMsgRspNotify::Proto_STWebMsgRspNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_STWebMsgRspNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_STWebMsgRspNotify)
}
Proto_STWebMsgRspNotify::Proto_STWebMsgRspNotify(const Proto_STWebMsgRspNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err_msg().size() > 0) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_STWebMsgRspNotify)
}

void Proto_STWebMsgRspNotify::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(result_));
}

Proto_STWebMsgRspNotify::~Proto_STWebMsgRspNotify() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_STWebMsgRspNotify)
  SharedDtor();
}

void Proto_STWebMsgRspNotify::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_STWebMsgRspNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_STWebMsgRspNotify::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_STWebMsgRspNotify& Proto_STWebMsgRspNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_STWebMsgRspNotify.base);
  return *internal_default_instance();
}


void Proto_STWebMsgRspNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_STWebMsgRspNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool Proto_STWebMsgRspNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_STWebMsgRspNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string err_msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err_msg().data(), static_cast<int>(this->err_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.Proto_STWebMsgRspNotify.err_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_STWebMsgRspNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_STWebMsgRspNotify)
  return false;
#undef DO_
}

void Proto_STWebMsgRspNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_STWebMsgRspNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->request_id(), output);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err_msg().data(), static_cast<int>(this->err_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_STWebMsgRspNotify.err_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->err_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_STWebMsgRspNotify)
}

::google::protobuf::uint8* Proto_STWebMsgRspNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_STWebMsgRspNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->request_id(), target);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err_msg().data(), static_cast<int>(this->err_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_STWebMsgRspNotify.err_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->err_msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_STWebMsgRspNotify)
  return target;
}

size_t Proto_STWebMsgRspNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_STWebMsgRspNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err_msg());
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->request_id());
  }

  // int32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_STWebMsgRspNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_STWebMsgRspNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_STWebMsgRspNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_STWebMsgRspNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_STWebMsgRspNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_STWebMsgRspNotify)
    MergeFrom(*source);
  }
}

void Proto_STWebMsgRspNotify::MergeFrom(const Proto_STWebMsgRspNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_STWebMsgRspNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void Proto_STWebMsgRspNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_STWebMsgRspNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_STWebMsgRspNotify::CopyFrom(const Proto_STWebMsgRspNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_STWebMsgRspNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_STWebMsgRspNotify::IsInitialized() const {
  return true;
}

void Proto_STWebMsgRspNotify::Swap(Proto_STWebMsgRspNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_STWebMsgRspNotify::InternalSwap(Proto_STWebMsgRspNotify* other) {
  using std::swap;
  err_msg_.Swap(&other->err_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_id_, other->request_id_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_STWebMsgRspNotify::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NFEventNoneData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NFEventNoneData::kParam1FieldNumber;
const int NFEventNoneData::kParam2FieldNumber;
const int NFEventNoneData::kParam3FieldNumber;
const int NFEventNoneData::kParam4FieldNumber;
const int NFEventNoneData::kParam5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NFEventNoneData::NFEventNoneData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_NFEventNoneData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.NFEventNoneData)
}
NFEventNoneData::NFEventNoneData(const NFEventNoneData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&param1_, &from.param1_,
    static_cast<size_t>(reinterpret_cast<char*>(&param5_) -
    reinterpret_cast<char*>(&param1_)) + sizeof(param5_));
  // @@protoc_insertion_point(copy_constructor:NFrame.NFEventNoneData)
}

void NFEventNoneData::SharedCtor() {
  ::memset(&param1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param5_) -
      reinterpret_cast<char*>(&param1_)) + sizeof(param5_));
}

NFEventNoneData::~NFEventNoneData() {
  // @@protoc_insertion_point(destructor:NFrame.NFEventNoneData)
  SharedDtor();
}

void NFEventNoneData::SharedDtor() {
}

void NFEventNoneData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NFEventNoneData::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NFEventNoneData& NFEventNoneData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_NFEventNoneData.base);
  return *internal_default_instance();
}


void NFEventNoneData::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.NFEventNoneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&param1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param5_) -
      reinterpret_cast<char*>(&param1_)) + sizeof(param5_));
  _internal_metadata_.Clear();
}

bool NFEventNoneData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.NFEventNoneData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 param1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 param2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 param3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 param4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 param5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.NFEventNoneData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.NFEventNoneData)
  return false;
#undef DO_
}

void NFEventNoneData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.NFEventNoneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 param1 = 1;
  if (this->param1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->param1(), output);
  }

  // int64 param2 = 2;
  if (this->param2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->param2(), output);
  }

  // int64 param3 = 3;
  if (this->param3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->param3(), output);
  }

  // int64 param4 = 4;
  if (this->param4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->param4(), output);
  }

  // int64 param5 = 5;
  if (this->param5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->param5(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.NFEventNoneData)
}

::google::protobuf::uint8* NFEventNoneData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.NFEventNoneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 param1 = 1;
  if (this->param1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->param1(), target);
  }

  // int64 param2 = 2;
  if (this->param2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->param2(), target);
  }

  // int64 param3 = 3;
  if (this->param3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->param3(), target);
  }

  // int64 param4 = 4;
  if (this->param4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->param4(), target);
  }

  // int64 param5 = 5;
  if (this->param5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->param5(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.NFEventNoneData)
  return target;
}

size_t NFEventNoneData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.NFEventNoneData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 param1 = 1;
  if (this->param1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->param1());
  }

  // int64 param2 = 2;
  if (this->param2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->param2());
  }

  // int64 param3 = 3;
  if (this->param3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->param3());
  }

  // int64 param4 = 4;
  if (this->param4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->param4());
  }

  // int64 param5 = 5;
  if (this->param5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->param5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NFEventNoneData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.NFEventNoneData)
  GOOGLE_DCHECK_NE(&from, this);
  const NFEventNoneData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NFEventNoneData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.NFEventNoneData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.NFEventNoneData)
    MergeFrom(*source);
  }
}

void NFEventNoneData::MergeFrom(const NFEventNoneData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.NFEventNoneData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param1() != 0) {
    set_param1(from.param1());
  }
  if (from.param2() != 0) {
    set_param2(from.param2());
  }
  if (from.param3() != 0) {
    set_param3(from.param3());
  }
  if (from.param4() != 0) {
    set_param4(from.param4());
  }
  if (from.param5() != 0) {
    set_param5(from.param5());
  }
}

void NFEventNoneData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.NFEventNoneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NFEventNoneData::CopyFrom(const NFEventNoneData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.NFEventNoneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NFEventNoneData::IsInitialized() const {
  return true;
}

void NFEventNoneData::Swap(NFEventNoneData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NFEventNoneData::InternalSwap(NFEventNoneData* other) {
  using std::swap;
  swap(param1_, other->param1_);
  swap(param2_, other->param2_);
  swap(param3_, other->param3_);
  swap(param4_, other->param4_);
  swap(param5_, other->param5_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NFEventNoneData::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NFEventScriptData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NFEventScriptData::kEventTypeFieldNumber;
const int NFEventScriptData::kEventDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NFEventScriptData::NFEventScriptData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_NFEventScriptData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.NFEventScriptData)
}
NFEventScriptData::NFEventScriptData(const NFEventScriptData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_type().size() > 0) {
    event_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_type_);
  }
  event_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_data().size() > 0) {
    event_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_data_);
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.NFEventScriptData)
}

void NFEventScriptData::SharedCtor() {
  event_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NFEventScriptData::~NFEventScriptData() {
  // @@protoc_insertion_point(destructor:NFrame.NFEventScriptData)
  SharedDtor();
}

void NFEventScriptData::SharedDtor() {
  event_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NFEventScriptData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NFEventScriptData::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NFEventScriptData& NFEventScriptData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_NFEventScriptData.base);
  return *internal_default_instance();
}


void NFEventScriptData::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.NFEventScriptData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool NFEventScriptData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.NFEventScriptData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string event_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_type().data(), static_cast<int>(this->event_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.NFEventScriptData.event_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string event_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_data().data(), static_cast<int>(this->event_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.NFEventScriptData.event_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.NFEventScriptData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.NFEventScriptData)
  return false;
#undef DO_
}

void NFEventScriptData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.NFEventScriptData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_type = 1;
  if (this->event_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_type().data(), static_cast<int>(this->event_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.NFEventScriptData.event_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_type(), output);
  }

  // string event_data = 2;
  if (this->event_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_data().data(), static_cast<int>(this->event_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.NFEventScriptData.event_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->event_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.NFEventScriptData)
}

::google::protobuf::uint8* NFEventScriptData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.NFEventScriptData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_type = 1;
  if (this->event_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_type().data(), static_cast<int>(this->event_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.NFEventScriptData.event_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_type(), target);
  }

  // string event_data = 2;
  if (this->event_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_data().data(), static_cast<int>(this->event_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.NFEventScriptData.event_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->event_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.NFEventScriptData)
  return target;
}

size_t NFEventScriptData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.NFEventScriptData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string event_type = 1;
  if (this->event_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_type());
  }

  // string event_data = 2;
  if (this->event_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NFEventScriptData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.NFEventScriptData)
  GOOGLE_DCHECK_NE(&from, this);
  const NFEventScriptData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NFEventScriptData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.NFEventScriptData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.NFEventScriptData)
    MergeFrom(*source);
  }
}

void NFEventScriptData::MergeFrom(const NFEventScriptData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.NFEventScriptData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event_type().size() > 0) {

    event_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_type_);
  }
  if (from.event_data().size() > 0) {

    event_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_data_);
  }
}

void NFEventScriptData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.NFEventScriptData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NFEventScriptData::CopyFrom(const NFEventScriptData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.NFEventScriptData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NFEventScriptData::IsInitialized() const {
  return true;
}

void NFEventScriptData::Swap(NFEventScriptData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NFEventScriptData::InternalSwap(NFEventScriptData* other) {
  using std::swap;
  event_type_.Swap(&other->event_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  event_data_.Swap(&other->event_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NFEventScriptData::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proto_ServerDumpInfoNtf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_ServerDumpInfoNtf::kDumpInfoFieldNumber;
const int Proto_ServerDumpInfoNtf::kBusIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_ServerDumpInfoNtf::Proto_ServerDumpInfoNtf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMsg_2eproto::scc_info_Proto_ServerDumpInfoNtf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.Proto_ServerDumpInfoNtf)
}
Proto_ServerDumpInfoNtf::Proto_ServerDumpInfoNtf(const Proto_ServerDumpInfoNtf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dump_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dump_info().size() > 0) {
    dump_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dump_info_);
  }
  bus_id_ = from.bus_id_;
  // @@protoc_insertion_point(copy_constructor:NFrame.Proto_ServerDumpInfoNtf)
}

void Proto_ServerDumpInfoNtf::SharedCtor() {
  dump_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bus_id_ = 0u;
}

Proto_ServerDumpInfoNtf::~Proto_ServerDumpInfoNtf() {
  // @@protoc_insertion_point(destructor:NFrame.Proto_ServerDumpInfoNtf)
  SharedDtor();
}

void Proto_ServerDumpInfoNtf::SharedDtor() {
  dump_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proto_ServerDumpInfoNtf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proto_ServerDumpInfoNtf::descriptor() {
  ::protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proto_ServerDumpInfoNtf& Proto_ServerDumpInfoNtf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMsg_2eproto::scc_info_Proto_ServerDumpInfoNtf.base);
  return *internal_default_instance();
}


void Proto_ServerDumpInfoNtf::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.Proto_ServerDumpInfoNtf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dump_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bus_id_ = 0u;
  _internal_metadata_.Clear();
}

bool Proto_ServerDumpInfoNtf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.Proto_ServerDumpInfoNtf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string dump_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dump_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dump_info().data(), static_cast<int>(this->dump_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.Proto_ServerDumpInfoNtf.dump_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bus_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.Proto_ServerDumpInfoNtf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.Proto_ServerDumpInfoNtf)
  return false;
#undef DO_
}

void Proto_ServerDumpInfoNtf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.Proto_ServerDumpInfoNtf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dump_info = 1;
  if (this->dump_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dump_info().data(), static_cast<int>(this->dump_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_ServerDumpInfoNtf.dump_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dump_info(), output);
  }

  // uint32 bus_id = 2;
  if (this->bus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bus_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.Proto_ServerDumpInfoNtf)
}

::google::protobuf::uint8* Proto_ServerDumpInfoNtf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.Proto_ServerDumpInfoNtf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dump_info = 1;
  if (this->dump_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dump_info().data(), static_cast<int>(this->dump_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.Proto_ServerDumpInfoNtf.dump_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dump_info(), target);
  }

  // uint32 bus_id = 2;
  if (this->bus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bus_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.Proto_ServerDumpInfoNtf)
  return target;
}

size_t Proto_ServerDumpInfoNtf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.Proto_ServerDumpInfoNtf)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dump_info = 1;
  if (this->dump_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dump_info());
  }

  // uint32 bus_id = 2;
  if (this->bus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bus_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proto_ServerDumpInfoNtf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.Proto_ServerDumpInfoNtf)
  GOOGLE_DCHECK_NE(&from, this);
  const Proto_ServerDumpInfoNtf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_ServerDumpInfoNtf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.Proto_ServerDumpInfoNtf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.Proto_ServerDumpInfoNtf)
    MergeFrom(*source);
  }
}

void Proto_ServerDumpInfoNtf::MergeFrom(const Proto_ServerDumpInfoNtf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.Proto_ServerDumpInfoNtf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dump_info().size() > 0) {

    dump_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dump_info_);
  }
  if (from.bus_id() != 0) {
    set_bus_id(from.bus_id());
  }
}

void Proto_ServerDumpInfoNtf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.Proto_ServerDumpInfoNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_ServerDumpInfoNtf::CopyFrom(const Proto_ServerDumpInfoNtf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.Proto_ServerDumpInfoNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_ServerDumpInfoNtf::IsInitialized() const {
  return true;
}

void Proto_ServerDumpInfoNtf::Swap(Proto_ServerDumpInfoNtf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_ServerDumpInfoNtf::InternalSwap(Proto_ServerDumpInfoNtf* other) {
  using std::swap;
  dump_info_.Swap(&other->dump_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bus_id_, other->bus_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proto_ServerDumpInfoNtf::GetMetadata() const {
  protobuf_FrameMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFrame
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_DispInfo* Arena::CreateMaybeMessage< ::NFrame::Proto_DispInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_DispInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_TransInfo* Arena::CreateMaybeMessage< ::NFrame::Proto_TransInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_TransInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_StoreInfo* Arena::CreateMaybeMessage< ::NFrame::Proto_StoreInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_StoreInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_EventInfo* Arena::CreateMaybeMessage< ::NFrame::Proto_EventInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_EventInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_ScriptRpcResult* Arena::CreateMaybeMessage< ::NFrame::Proto_ScriptRpcResult >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_ScriptRpcResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_RpcInfo* Arena::CreateMaybeMessage< ::NFrame::Proto_RpcInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_RpcInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_RedirectInfo* Arena::CreateMaybeMessage< ::NFrame::Proto_RedirectInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_RedirectInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_FramePkg* Arena::CreateMaybeMessage< ::NFrame::Proto_FramePkg >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_FramePkg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::ServerInfoReport* Arena::CreateMaybeMessage< ::NFrame::ServerInfoReport >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::ServerInfoReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::ServerInfoReportList* Arena::CreateMaybeMessage< ::NFrame::ServerInfoReportList >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::ServerInfoReportList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::ServerInfoReportListRespne* Arena::CreateMaybeMessage< ::NFrame::ServerInfoReportListRespne >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::ServerInfoReportListRespne >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::ZkServerInfo* Arena::CreateMaybeMessage< ::NFrame::ZkServerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::ZkServerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::DynLibFileInfo* Arena::CreateMaybeMessage< ::NFrame::DynLibFileInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::DynLibFileInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::DynLibFileInfoArray* Arena::CreateMaybeMessage< ::NFrame::DynLibFileInfoArray >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::DynLibFileInfoArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_KillAllServerNtf* Arena::CreateMaybeMessage< ::NFrame::Proto_KillAllServerNtf >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_KillAllServerNtf >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_KillAllServerRsp* Arena::CreateMaybeMessage< ::NFrame::Proto_KillAllServerRsp >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_KillAllServerRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_STSBroadPlayerMsgNotify* Arena::CreateMaybeMessage< ::NFrame::Proto_STSBroadPlayerMsgNotify >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_STSBroadPlayerMsgNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_STWebMsgRspNotify* Arena::CreateMaybeMessage< ::NFrame::Proto_STWebMsgRspNotify >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_STWebMsgRspNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::NFEventNoneData* Arena::CreateMaybeMessage< ::NFrame::NFEventNoneData >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::NFEventNoneData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::NFEventScriptData* Arena::CreateMaybeMessage< ::NFrame::NFEventScriptData >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::NFEventScriptData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::Proto_ServerDumpInfoNtf* Arena::CreateMaybeMessage< ::NFrame::Proto_ServerDumpInfoNtf >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::Proto_ServerDumpInfoNtf >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
