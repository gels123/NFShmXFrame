// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameTestComm.proto

#include "FrameTestComm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_FrameTestComm_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameTestComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BevLogTestItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameTestComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WelfareNodeDBDataGetTaskManual;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameTestComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WelfareNodeDBDataPddBuy;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameTestComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WelfareNodeDBDataPddOpen;
}  // namespace protobuf_FrameTestComm_2eproto
namespace NFrameComm {
class wxWorkRobotTextTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<wxWorkRobotTextTest>
      _instance;
} _wxWorkRobotTextTest_default_instance_;
class WelfareNodeDBDataPddBuyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WelfareNodeDBDataPddBuy>
      _instance;
} _WelfareNodeDBDataPddBuy_default_instance_;
class WelfareNodeDBDataPddOpenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WelfareNodeDBDataPddOpen>
      _instance;
} _WelfareNodeDBDataPddOpen_default_instance_;
class WelfareNodeDBDataGetTaskManualDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WelfareNodeDBDataGetTaskManual>
      _instance;
} _WelfareNodeDBDataGetTaskManual_default_instance_;
class WelfareNodeDBDataUnionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WelfareNodeDBDataUnion>
      _instance;
  const ::NFrameComm::WelfareNodeDBDataPddBuy* m_stpddbuy_;
  const ::NFrameComm::WelfareNodeDBDataPddOpen* m_stpddopen_;
  const ::NFrameComm::WelfareNodeDBDataGetTaskManual* m_stgettaskmanual_;
  ::google::protobuf::uint32 m_dwbuycount_;
  ::google::protobuf::uint32 m_dwlastbuytime_;
  ::google::protobuf::internal::ArenaStringPtr test_string_;
  ::google::protobuf::internal::ArenaStringPtr test_string_stl_;
  ::google::protobuf::internal::ArenaStringPtr test_bytes_;
  ::google::protobuf::internal::ArenaStringPtr test_bytes_stl_;
  int test_enum_;
  ::google::protobuf::uint32 m_dwbuycount2_;
  ::google::protobuf::uint32 m_dwlastbuytime2_;
} _WelfareNodeDBDataUnion_default_instance_;
class BevLogTestItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BevLogTestItem>
      _instance;
} _BevLogTestItem_default_instance_;
class BevLogTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BevLogTest>
      _instance;
} _BevLogTest_default_instance_;
}  // namespace NFrameComm
namespace protobuf_FrameTestComm_2eproto {
static void InitDefaultswxWorkRobotTextTest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrameComm::_wxWorkRobotTextTest_default_instance_;
    new (ptr) ::NFrameComm::wxWorkRobotTextTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrameComm::wxWorkRobotTextTest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_wxWorkRobotTextTest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultswxWorkRobotTextTest}, {}};

static void InitDefaultsWelfareNodeDBDataPddBuy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrameComm::_WelfareNodeDBDataPddBuy_default_instance_;
    new (ptr) ::NFrameComm::WelfareNodeDBDataPddBuy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrameComm::WelfareNodeDBDataPddBuy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WelfareNodeDBDataPddBuy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWelfareNodeDBDataPddBuy}, {}};

static void InitDefaultsWelfareNodeDBDataPddOpen() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrameComm::_WelfareNodeDBDataPddOpen_default_instance_;
    new (ptr) ::NFrameComm::WelfareNodeDBDataPddOpen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrameComm::WelfareNodeDBDataPddOpen::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WelfareNodeDBDataPddOpen =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWelfareNodeDBDataPddOpen}, {}};

static void InitDefaultsWelfareNodeDBDataGetTaskManual() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrameComm::_WelfareNodeDBDataGetTaskManual_default_instance_;
    new (ptr) ::NFrameComm::WelfareNodeDBDataGetTaskManual();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrameComm::WelfareNodeDBDataGetTaskManual::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WelfareNodeDBDataGetTaskManual =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWelfareNodeDBDataGetTaskManual}, {}};

static void InitDefaultsWelfareNodeDBDataUnion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrameComm::_WelfareNodeDBDataUnion_default_instance_;
    new (ptr) ::NFrameComm::WelfareNodeDBDataUnion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrameComm::WelfareNodeDBDataUnion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_WelfareNodeDBDataUnion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsWelfareNodeDBDataUnion}, {
      &protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataPddBuy.base,
      &protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataPddOpen.base,
      &protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataGetTaskManual.base,}};

static void InitDefaultsBevLogTestItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrameComm::_BevLogTestItem_default_instance_;
    new (ptr) ::NFrameComm::BevLogTestItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrameComm::BevLogTestItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BevLogTestItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBevLogTestItem}, {}};

static void InitDefaultsBevLogTest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrameComm::_BevLogTest_default_instance_;
    new (ptr) ::NFrameComm::BevLogTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrameComm::BevLogTest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BevLogTest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBevLogTest}, {
      &protobuf_FrameTestComm_2eproto::scc_info_BevLogTestItem.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_wxWorkRobotTextTest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WelfareNodeDBDataPddBuy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WelfareNodeDBDataPddOpen.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WelfareNodeDBDataGetTaskManual.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WelfareNodeDBDataUnion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BevLogTestItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BevLogTest.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_string_stl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_string_repeated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_string_stl_repeated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_string_stl_vector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_string_stl_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_string_stl_unordered_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_int_vector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_int_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_int_unordered_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_bytes_stl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_bytes_repeated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_bytes_stl_repeated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_bytes_stl_vector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_bytes_stl_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::wxWorkRobotTextTest, test_bytes_stl_unordered_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, m_dwbuycount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, m_dwlastbuytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_string_stl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_string_repeated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_string_stl_repeated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_string_stl_vector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_string_stl_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_string_stl_unordered_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_int_vector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_int_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_int_unordered_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_bytes_stl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_bytes_repeated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_bytes_stl_repeated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_bytes_stl_vector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_bytes_stl_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddBuy, test_bytes_stl_unordered_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddOpen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddOpen, m_dwopencount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddOpen, m_dwlastjointime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddOpen, m_ullteamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddOpen, m_dwrwdcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataPddOpen, m_dwlastrwdtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataGetTaskManual, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataGetTaskManual, m_istate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataUnion, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, m_stpddbuy_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, m_stpddopen_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, m_stgettaskmanual_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, m_dwbuycount_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, m_dwlastbuytime_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, test_string_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, test_string_stl_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, test_bytes_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, test_bytes_stl_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, test_enum_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, m_dwbuycount2_),
  offsetof(::NFrameComm::WelfareNodeDBDataUnionDefaultTypeInternal, m_dwlastbuytime2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataUnion, m_stpddbuy1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataUnion, m_stData_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::WelfareNodeDBDataUnion, m_stData2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTestItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTestItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTestItem, item_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTest, tdteventtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTest, szvgameip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTest, iizoneareaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTest, iitimeshift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTest, item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTest, item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrameComm::BevLogTest, id_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NFrameComm::wxWorkRobotTextTest)},
  { 23, -1, sizeof(::NFrameComm::WelfareNodeDBDataPddBuy)},
  { 47, -1, sizeof(::NFrameComm::WelfareNodeDBDataPddOpen)},
  { 57, -1, sizeof(::NFrameComm::WelfareNodeDBDataGetTaskManual)},
  { 63, -1, sizeof(::NFrameComm::WelfareNodeDBDataUnion)},
  { 83, -1, sizeof(::NFrameComm::BevLogTestItem)},
  { 90, -1, sizeof(::NFrameComm::BevLogTest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrameComm::_wxWorkRobotTextTest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrameComm::_WelfareNodeDBDataPddBuy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrameComm::_WelfareNodeDBDataPddOpen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrameComm::_WelfareNodeDBDataGetTaskManual_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrameComm::_WelfareNodeDBDataUnion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrameComm::_BevLogTestItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrameComm::_BevLogTest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FrameTestComm.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023FrameTestComm.proto\022\nNFrameComm\032\014nanop"
      "b.proto\032\023FrameTestEnum.proto\"\277\014\n\023wxWorkR"
      "obotTextTest\022\022\n\002id\030d \001(\rB\006\222\?\003\220\002\001\0220\n\013test"
      "_string\030\001 \001(\tB\033\222\?\030\222\001\025FRAME_ENUM_STRING_N"
      "UM\022:\n\017test_string_stl\030\002 \001(\tB!\222\?\030\222\001\025FRAME"
      "_ENUM_STRING_NUM\222\?\003\200\002\001\022Z\n\024test_string_re"
      "peated\030\003 \003(\tB<\222\?\036\212\001\033FRAME_ENUM_DEFAULT_R"
      "EPEATED\222\?\030\222\001\025FRAME_ENUM_STRING_NUM\022d\n\030te"
      "st_string_stl_repeated\030\004 \003(\tBB\222\?\036\212\001\033FRAM"
      "E_ENUM_DEFAULT_REPEATED\222\?\030\222\001\025FRAME_ENUM_"
      "STRING_NUM\222\?\003\200\002\001\022r\n\026test_string_stl_vect"
      "or\030\005 \003(\tBR\222\?\036\212\001\033FRAME_ENUM_DEFAULT_REPEA"
      "TED\222\?\030\222\001\025FRAME_ENUM_STRING_NUM\222\?\003\200\002\001\222\?\r\372"
      "\001\nSTL_VECTOR\022n\n\024test_string_stl_list\030\006 \003"
      "(\tBP\222\?\036\212\001\033FRAME_ENUM_DEFAULT_REPEATED\222\?\030"
      "\222\001\025FRAME_ENUM_STRING_NUM\222\?\003\200\002\001\222\?\013\372\001\010STL_"
      "LIST\022\200\001\n\035test_string_stl_unordered_set\030\007"
      " \003(\tBY\222\?\036\212\001\033FRAME_ENUM_DEFAULT_REPEATED\222"
      "\?\030\222\001\025FRAME_ENUM_STRING_NUM\222\?\003\200\002\001\222\?\024\372\001\021ST"
      "L_UNORDERED_SET\022J\n\017test_int_vector\030\010 \003(\005"
      "B1\222\?\036\212\001\033FRAME_ENUM_DEFAULT_REPEATED\222\?\r\372\001"
      "\nSTL_VECTOR\022H\n\rtest_int_list\030\t \003(\005B1\222\?\036\212"
      "\001\033FRAME_ENUM_DEFAULT_REPEATED\222\?\r\372\001\nSTL_V"
      "ECTOR\022X\n\026test_int_unordered_set\030\n \003(\005B8\222"
      "\?\036\212\001\033FRAME_ENUM_DEFAULT_REPEATED\222\?\024\372\001\021ST"
      "L_UNORDERED_SET\022/\n\ntest_bytes\030\013 \001(\tB\033\222\?\030"
      "\222\001\025FRAME_ENUM_STRING_NUM\0229\n\016test_bytes_s"
      "tl\030\014 \001(\tB!\222\?\030\222\001\025FRAME_ENUM_STRING_NUM\222\?\003"
      "\200\002\001\022Y\n\023test_bytes_repeated\030\r \003(\tB<\222\?\036\212\001\033"
      "FRAME_ENUM_DEFAULT_REPEATED\222\?\030\222\001\025FRAME_E"
      "NUM_STRING_NUM\022c\n\027test_bytes_stl_repeate"
      "d\030\016 \003(\tBB\222\?\036\212\001\033FRAME_ENUM_DEFAULT_REPEAT"
      "ED\222\?\030\222\001\025FRAME_ENUM_STRING_NUM\222\?\003\200\002\001\022q\n\025t"
      "est_bytes_stl_vector\030\017 \003(\tBR\222\?\036\212\001\033FRAME_"
      "ENUM_DEFAULT_REPEATED\222\?\030\222\001\025FRAME_ENUM_ST"
      "RING_NUM\222\?\003\200\002\001\222\?\r\372\001\nSTL_VECTOR\022m\n\023test_b"
      "ytes_stl_list\030\020 \003(\tBP\222\?\036\212\001\033FRAME_ENUM_DE"
      "FAULT_REPEATED\222\?\030\222\001\025FRAME_ENUM_STRING_NU"
      "M\222\?\003\200\002\001\222\?\013\372\001\010STL_LIST\022\177\n\034test_bytes_stl_"
      "unordered_set\030\021 \003(\tBY\222\?\036\212\001\033FRAME_ENUM_DE"
      "FAULT_REPEATED\222\?\030\222\001\025FRAME_ENUM_STRING_NU"
      "M\222\?\003\200\002\001\222\?\024\372\001\021STL_UNORDERED_SET\"\336\014\n\027Welfa"
      "reNodeDBDataPddBuy\022\024\n\014m_dwBuyCount\030d \001(\r"
      "\022\027\n\017m_dwLastBuyTime\030f \001(\r\0220\n\013test_string"
      "\030\001 \001(\tB\033\222\?\030\222\001\025FRAME_ENUM_STRING_NUM\022:\n\017t"
      "est_string_stl\030\002 \001(\tB!\222\?\030\222\001\025FRAME_ENUM_S"
      "TRING_NUM\222\?\003\200\002\001\022Z\n\024test_string_repeated\030"
      "\003 \003(\tB<\222\?\036\212\001\033FRAME_ENUM_DEFAULT_REPEATED"
      "\222\?\030\222\001\025FRAME_ENUM_STRING_NUM\022d\n\030test_stri"
      "ng_stl_repeated\030\004 \003(\tBB\222\?\036\212\001\033FRAME_ENUM_"
      "DEFAULT_REPEATED\222\?\030\222\001\025FRAME_ENUM_STRING_"
      "NUM\222\?\003\200\002\001\022r\n\026test_string_stl_vector\030\005 \003("
      "\tBR\222\?\036\212\001\033FRAME_ENUM_DEFAULT_REPEATED\222\?\030\222"
      "\001\025FRAME_ENUM_STRING_NUM\222\?\003\200\002\001\222\?\r\372\001\nSTL_V"
      "ECTOR\022n\n\024test_string_stl_list\030\006 \003(\tBP\222\?\036"
      "\212\001\033FRAME_ENUM_DEFAULT_REPEATED\222\?\030\222\001\025FRAM"
      "E_ENUM_STRING_NUM\222\?\003\200\002\001\222\?\013\372\001\010STL_LIST\022\200\001"
      "\n\035test_string_stl_unordered_set\030\007 \003(\tBY\222"
      "\?\036\212\001\033FRAME_ENUM_DEFAULT_REPEATED\222\?\030\222\001\025FR"
      "AME_ENUM_STRING_NUM\222\?\003\200\002\001\222\?\024\372\001\021STL_UNORD"
      "ERED_SET\022J\n\017test_int_vector\030\010 \003(\005B1\222\?\036\212\001"
      "\033FRAME_ENUM_DEFAULT_REPEATED\222\?\r\372\001\nSTL_VE"
      "CTOR\022H\n\rtest_int_list\030\t \003(\005B1\222\?\036\212\001\033FRAME"
      "_ENUM_DEFAULT_REPEATED\222\?\r\372\001\nSTL_VECTOR\022X"
      "\n\026test_int_unordered_set\030\n \003(\005B8\222\?\036\212\001\033FR"
      "AME_ENUM_DEFAULT_REPEATED\222\?\024\372\001\021STL_UNORD"
      "ERED_SET\022/\n\ntest_bytes\030\013 \001(\014B\033\222\?\030\222\001\025FRAM"
      "E_ENUM_STRING_NUM\0229\n\016test_bytes_stl\030\014 \001("
      "\014B!\222\?\030\222\001\025FRAME_ENUM_STRING_NUM\222\?\003\200\002\001\022Y\n\023"
      "test_bytes_repeated\030\r \003(\tB<\222\?\036\212\001\033FRAME_E"
      "NUM_DEFAULT_REPEATED\222\?\030\222\001\025FRAME_ENUM_STR"
      "ING_NUM\022c\n\027test_bytes_stl_repeated\030\016 \003(\t"
      "BB\222\?\036\212\001\033FRAME_ENUM_DEFAULT_REPEATED\222\?\030\222\001"
      "\025FRAME_ENUM_STRING_NUM\222\?\003\200\002\001\022q\n\025test_byt"
      "es_stl_vector\030\017 \003(\tBR\222\?\036\212\001\033FRAME_ENUM_DE"
      "FAULT_REPEATED\222\?\030\222\001\025FRAME_ENUM_STRING_NU"
      "M\222\?\003\200\002\001\222\?\r\372\001\nSTL_VECTOR\022m\n\023test_bytes_st"
      "l_list\030\020 \003(\tBP\222\?\036\212\001\033FRAME_ENUM_DEFAULT_R"
      "EPEATED\222\?\030\222\001\025FRAME_ENUM_STRING_NUM\222\?\003\200\002\001"
      "\222\?\013\372\001\010STL_LIST\022\177\n\034test_bytes_stl_unorder"
      "ed_set\030\021 \003(\tBY\222\?\036\212\001\033FRAME_ENUM_DEFAULT_R"
      "EPEATED\222\?\030\222\001\025FRAME_ENUM_STRING_NUM\222\?\003\200\002\001"
      "\222\?\024\372\001\021STL_UNORDERED_SET\"\217\001\n\030WelfareNodeD"
      "BDataPddOpen\022\025\n\rm_dwOpenCount\030\001 \001(\r\022\030\n\020m"
      "_dwLastJoinTime\030\002 \001(\r\022\023\n\013m_ullTeamID\030\003 \001"
      "(\004\022\024\n\014m_dwRwdCount\030\004 \001(\r\022\027\n\017m_dwLastRwdT"
      "ime\030\005 \001(\r\"2\n\036WelfareNodeDBDataGetTaskMan"
      "ual\022\020\n\010m_iState\030\001 \001(\005\"\261\005\n\026WelfareNodeDBD"
      "ataUnion\022:\n\nm_stPddBuy\030\221N \001(\0132#.NFrameCo"
      "mm.WelfareNodeDBDataPddBuyH\000\022<\n\013m_stPddO"
      "pen\030\222N \001(\0132$.NFrameComm.WelfareNodeDBDat"
      "aPddOpenH\000\022H\n\021m_stGetTaskManual\030\223N \001(\0132*"
      ".NFrameComm.WelfareNodeDBDataGetTaskManu"
      "alH\000\022\026\n\014m_dwBuyCount\030d \001(\rH\000\022\031\n\017m_dwLast"
      "BuyTime\030f \001(\rH\000\0222\n\013test_string\030\001 \001(\tB\033\222\?"
      "\030\222\001\025FRAME_ENUM_STRING_NUMH\000\022<\n\017test_stri"
      "ng_stl\030\002 \001(\tB!\222\?\030\222\001\025FRAME_ENUM_STRING_NU"
      "M\222\?\003\200\002\001H\000\0221\n\ntest_bytes\030\013 \001(\014B\033\222\?\030\222\001\025FRA"
      "ME_ENUM_STRING_NUMH\000\022;\n\016test_bytes_stl\030\014"
      " \001(\014B!\222\?\030\222\001\025FRAME_ENUM_STRING_NUM\222\?\003\200\002\001H"
      "\000\0224\n\ttest_enum\030\r \001(\0162\037.NFrameEnum.FrameG"
      "lobalTestEnumH\000\022\030\n\rm_dwBuyCount2\030\350\007 \001(\rH"
      "\001\022\033\n\020m_dwLastBuyTime2\030\352\007 \001(\rH\001\0228\n\013m_stPd"
      "dBuy1\030o \001(\0132#.NFrameComm.WelfareNodeDBDa"
      "taPddBuyB\n\n\010m_stDataB\013\n\tm_stData2\"3\n\016Bev"
      "LogTestItem\022\017\n\007item_id\030\001 \001(\r\022\020\n\010item_num"
      "\030\002 \001(\r\"\351\001\n\nBevLogTest\022\024\n\014tDtEventTime\030\001 "
      "\001(\004\0220\n\tszVGameIP\030\002 \001(\tB\035\222\?\024\222\001\021MAX_STRING"
      "_LEN_32\222\?\003\200\002\001\022\024\n\014iIZoneAreaID\030\003 \001(\005\022\023\n\013i"
      "ITimeShift\030\004 \001(\005\022(\n\004item\030\005 \001(\0132\032.NFrameC"
      "omm.BevLogTestItem\022-\n\titem_list\030\006 \003(\0132\032."
      "NFrameComm.BevLogTestItem\022\017\n\007id_list\030\007 \003"
      "(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4490);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrameTestComm.proto", &protobuf_RegisterTypes);
  ::protobuf_nanopb_2eproto::AddDescriptors();
  ::protobuf_FrameTestEnum_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrameTestComm_2eproto
namespace NFrameComm {

// ===================================================================

void wxWorkRobotTextTest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int wxWorkRobotTextTest::kIdFieldNumber;
const int wxWorkRobotTextTest::kTestStringFieldNumber;
const int wxWorkRobotTextTest::kTestStringStlFieldNumber;
const int wxWorkRobotTextTest::kTestStringRepeatedFieldNumber;
const int wxWorkRobotTextTest::kTestStringStlRepeatedFieldNumber;
const int wxWorkRobotTextTest::kTestStringStlVectorFieldNumber;
const int wxWorkRobotTextTest::kTestStringStlListFieldNumber;
const int wxWorkRobotTextTest::kTestStringStlUnorderedSetFieldNumber;
const int wxWorkRobotTextTest::kTestIntVectorFieldNumber;
const int wxWorkRobotTextTest::kTestIntListFieldNumber;
const int wxWorkRobotTextTest::kTestIntUnorderedSetFieldNumber;
const int wxWorkRobotTextTest::kTestBytesFieldNumber;
const int wxWorkRobotTextTest::kTestBytesStlFieldNumber;
const int wxWorkRobotTextTest::kTestBytesRepeatedFieldNumber;
const int wxWorkRobotTextTest::kTestBytesStlRepeatedFieldNumber;
const int wxWorkRobotTextTest::kTestBytesStlVectorFieldNumber;
const int wxWorkRobotTextTest::kTestBytesStlListFieldNumber;
const int wxWorkRobotTextTest::kTestBytesStlUnorderedSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

wxWorkRobotTextTest::wxWorkRobotTextTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameTestComm_2eproto::scc_info_wxWorkRobotTextTest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrameComm.wxWorkRobotTextTest)
}
wxWorkRobotTextTest::wxWorkRobotTextTest(const wxWorkRobotTextTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      test_string_repeated_(from.test_string_repeated_),
      test_string_stl_repeated_(from.test_string_stl_repeated_),
      test_string_stl_vector_(from.test_string_stl_vector_),
      test_string_stl_list_(from.test_string_stl_list_),
      test_string_stl_unordered_set_(from.test_string_stl_unordered_set_),
      test_int_vector_(from.test_int_vector_),
      test_int_list_(from.test_int_list_),
      test_int_unordered_set_(from.test_int_unordered_set_),
      test_bytes_repeated_(from.test_bytes_repeated_),
      test_bytes_stl_repeated_(from.test_bytes_stl_repeated_),
      test_bytes_stl_vector_(from.test_bytes_stl_vector_),
      test_bytes_stl_list_(from.test_bytes_stl_list_),
      test_bytes_stl_unordered_set_(from.test_bytes_stl_unordered_set_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  test_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_string().size() > 0) {
    test_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_string_);
  }
  test_string_stl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_string_stl().size() > 0) {
    test_string_stl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_string_stl_);
  }
  test_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_bytes().size() > 0) {
    test_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_bytes_);
  }
  test_bytes_stl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_bytes_stl().size() > 0) {
    test_bytes_stl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_bytes_stl_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:NFrameComm.wxWorkRobotTextTest)
}

void wxWorkRobotTextTest::SharedCtor() {
  test_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_string_stl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_stl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

wxWorkRobotTextTest::~wxWorkRobotTextTest() {
  // @@protoc_insertion_point(destructor:NFrameComm.wxWorkRobotTextTest)
  SharedDtor();
}

void wxWorkRobotTextTest::SharedDtor() {
  test_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_string_stl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_stl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void wxWorkRobotTextTest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* wxWorkRobotTextTest::descriptor() {
  ::protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const wxWorkRobotTextTest& wxWorkRobotTextTest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameTestComm_2eproto::scc_info_wxWorkRobotTextTest.base);
  return *internal_default_instance();
}


void wxWorkRobotTextTest::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrameComm.wxWorkRobotTextTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  test_string_repeated_.Clear();
  test_string_stl_repeated_.Clear();
  test_string_stl_vector_.Clear();
  test_string_stl_list_.Clear();
  test_string_stl_unordered_set_.Clear();
  test_int_vector_.Clear();
  test_int_list_.Clear();
  test_int_unordered_set_.Clear();
  test_bytes_repeated_.Clear();
  test_bytes_stl_repeated_.Clear();
  test_bytes_stl_vector_.Clear();
  test_bytes_stl_list_.Clear();
  test_bytes_stl_unordered_set_.Clear();
  test_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_string_stl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_stl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool wxWorkRobotTextTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrameComm.wxWorkRobotTextTest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string test_string = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string().data(), static_cast<int>(this->test_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_string_stl = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_string_stl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl().data(), static_cast<int>(this->test_string_stl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_string_stl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_string_repeated = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string_repeated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_repeated(this->test_string_repeated_size() - 1).data(),
            static_cast<int>(this->test_string_repeated(this->test_string_repeated_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_string_repeated"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_string_stl_repeated = 4 [(.nanopb) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string_stl_repeated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl_repeated(this->test_string_stl_repeated_size() - 1).data(),
            static_cast<int>(this->test_string_stl_repeated(this->test_string_stl_repeated_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_string_stl_repeated"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_string_stl_vector = 5 [(.nanopb) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string_stl_vector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl_vector(this->test_string_stl_vector_size() - 1).data(),
            static_cast<int>(this->test_string_stl_vector(this->test_string_stl_vector_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_string_stl_vector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_string_stl_list = 6 [(.nanopb) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string_stl_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl_list(this->test_string_stl_list_size() - 1).data(),
            static_cast<int>(this->test_string_stl_list(this->test_string_stl_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_string_stl_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_string_stl_unordered_set = 7 [(.nanopb) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string_stl_unordered_set()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl_unordered_set(this->test_string_stl_unordered_set_size() - 1).data(),
            static_cast<int>(this->test_string_stl_unordered_set(this->test_string_stl_unordered_set_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_string_stl_unordered_set"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 test_int_vector = 8 [(.nanopb) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_test_int_vector())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_test_int_vector())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 test_int_list = 9 [(.nanopb) = {
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_test_int_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_test_int_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 test_int_unordered_set = 10 [(.nanopb) = {
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_test_int_unordered_set())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_test_int_unordered_set())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_bytes = 11 [(.nanopb) = {
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_bytes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes().data(), static_cast<int>(this->test_bytes().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_bytes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_bytes_stl = 12 [(.nanopb) = {
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_bytes_stl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_stl().data(), static_cast<int>(this->test_bytes_stl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_bytes_stl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_bytes_repeated = 13 [(.nanopb) = {
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_bytes_repeated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_repeated(this->test_bytes_repeated_size() - 1).data(),
            static_cast<int>(this->test_bytes_repeated(this->test_bytes_repeated_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_bytes_repeated"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_bytes_stl_repeated = 14 [(.nanopb) = {
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_bytes_stl_repeated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_stl_repeated(this->test_bytes_stl_repeated_size() - 1).data(),
            static_cast<int>(this->test_bytes_stl_repeated(this->test_bytes_stl_repeated_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_repeated"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_bytes_stl_vector = 15 [(.nanopb) = {
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_bytes_stl_vector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_stl_vector(this->test_bytes_stl_vector_size() - 1).data(),
            static_cast<int>(this->test_bytes_stl_vector(this->test_bytes_stl_vector_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_vector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_bytes_stl_list = 16 [(.nanopb) = {
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_bytes_stl_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_stl_list(this->test_bytes_stl_list_size() - 1).data(),
            static_cast<int>(this->test_bytes_stl_list(this->test_bytes_stl_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_bytes_stl_unordered_set = 17 [(.nanopb) = {
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_bytes_stl_unordered_set()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_stl_unordered_set(this->test_bytes_stl_unordered_set_size() - 1).data(),
            static_cast<int>(this->test_bytes_stl_unordered_set(this->test_bytes_stl_unordered_set_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_unordered_set"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 100 [(.nanopb) = {
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrameComm.wxWorkRobotTextTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrameComm.wxWorkRobotTextTest)
  return false;
#undef DO_
}

void wxWorkRobotTextTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrameComm.wxWorkRobotTextTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string test_string = 1 [(.nanopb) = {
  if (this->test_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string().data(), static_cast<int>(this->test_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->test_string(), output);
  }

  // string test_string_stl = 2 [(.nanopb) = {
  if (this->test_string_stl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl().data(), static_cast<int>(this->test_string_stl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_stl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->test_string_stl(), output);
  }

  // repeated string test_string_repeated = 3 [(.nanopb) = {
  for (int i = 0, n = this->test_string_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_repeated(i).data(), static_cast<int>(this->test_string_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_repeated");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->test_string_repeated(i), output);
  }

  // repeated string test_string_stl_repeated = 4 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_repeated(i).data(), static_cast<int>(this->test_string_stl_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_stl_repeated");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->test_string_stl_repeated(i), output);
  }

  // repeated string test_string_stl_vector = 5 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_vector(i).data(), static_cast<int>(this->test_string_stl_vector(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_stl_vector");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->test_string_stl_vector(i), output);
  }

  // repeated string test_string_stl_list = 6 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_list(i).data(), static_cast<int>(this->test_string_stl_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_stl_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->test_string_stl_list(i), output);
  }

  // repeated string test_string_stl_unordered_set = 7 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_unordered_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_unordered_set(i).data(), static_cast<int>(this->test_string_stl_unordered_set(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_stl_unordered_set");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->test_string_stl_unordered_set(i), output);
  }

  // repeated int32 test_int_vector = 8 [(.nanopb) = {
  if (this->test_int_vector_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _test_int_vector_cached_byte_size_));
  }
  for (int i = 0, n = this->test_int_vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->test_int_vector(i), output);
  }

  // repeated int32 test_int_list = 9 [(.nanopb) = {
  if (this->test_int_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _test_int_list_cached_byte_size_));
  }
  for (int i = 0, n = this->test_int_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->test_int_list(i), output);
  }

  // repeated int32 test_int_unordered_set = 10 [(.nanopb) = {
  if (this->test_int_unordered_set_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _test_int_unordered_set_cached_byte_size_));
  }
  for (int i = 0, n = this->test_int_unordered_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->test_int_unordered_set(i), output);
  }

  // string test_bytes = 11 [(.nanopb) = {
  if (this->test_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes().data(), static_cast<int>(this->test_bytes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->test_bytes(), output);
  }

  // string test_bytes_stl = 12 [(.nanopb) = {
  if (this->test_bytes_stl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl().data(), static_cast<int>(this->test_bytes_stl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_stl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->test_bytes_stl(), output);
  }

  // repeated string test_bytes_repeated = 13 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_repeated(i).data(), static_cast<int>(this->test_bytes_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_repeated");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->test_bytes_repeated(i), output);
  }

  // repeated string test_bytes_stl_repeated = 14 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_repeated(i).data(), static_cast<int>(this->test_bytes_stl_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_repeated");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->test_bytes_stl_repeated(i), output);
  }

  // repeated string test_bytes_stl_vector = 15 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_vector(i).data(), static_cast<int>(this->test_bytes_stl_vector(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_vector");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->test_bytes_stl_vector(i), output);
  }

  // repeated string test_bytes_stl_list = 16 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_list(i).data(), static_cast<int>(this->test_bytes_stl_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->test_bytes_stl_list(i), output);
  }

  // repeated string test_bytes_stl_unordered_set = 17 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_unordered_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_unordered_set(i).data(), static_cast<int>(this->test_bytes_stl_unordered_set(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_unordered_set");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->test_bytes_stl_unordered_set(i), output);
  }

  // uint32 id = 100 [(.nanopb) = {
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(100, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrameComm.wxWorkRobotTextTest)
}

::google::protobuf::uint8* wxWorkRobotTextTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrameComm.wxWorkRobotTextTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string test_string = 1 [(.nanopb) = {
  if (this->test_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string().data(), static_cast<int>(this->test_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->test_string(), target);
  }

  // string test_string_stl = 2 [(.nanopb) = {
  if (this->test_string_stl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl().data(), static_cast<int>(this->test_string_stl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_stl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->test_string_stl(), target);
  }

  // repeated string test_string_repeated = 3 [(.nanopb) = {
  for (int i = 0, n = this->test_string_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_repeated(i).data(), static_cast<int>(this->test_string_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_repeated");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->test_string_repeated(i), target);
  }

  // repeated string test_string_stl_repeated = 4 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_repeated(i).data(), static_cast<int>(this->test_string_stl_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_stl_repeated");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->test_string_stl_repeated(i), target);
  }

  // repeated string test_string_stl_vector = 5 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_vector(i).data(), static_cast<int>(this->test_string_stl_vector(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_stl_vector");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->test_string_stl_vector(i), target);
  }

  // repeated string test_string_stl_list = 6 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_list(i).data(), static_cast<int>(this->test_string_stl_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_stl_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->test_string_stl_list(i), target);
  }

  // repeated string test_string_stl_unordered_set = 7 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_unordered_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_unordered_set(i).data(), static_cast<int>(this->test_string_stl_unordered_set(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_string_stl_unordered_set");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->test_string_stl_unordered_set(i), target);
  }

  // repeated int32 test_int_vector = 8 [(.nanopb) = {
  if (this->test_int_vector_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _test_int_vector_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->test_int_vector_, target);
  }

  // repeated int32 test_int_list = 9 [(.nanopb) = {
  if (this->test_int_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _test_int_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->test_int_list_, target);
  }

  // repeated int32 test_int_unordered_set = 10 [(.nanopb) = {
  if (this->test_int_unordered_set_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _test_int_unordered_set_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->test_int_unordered_set_, target);
  }

  // string test_bytes = 11 [(.nanopb) = {
  if (this->test_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes().data(), static_cast<int>(this->test_bytes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->test_bytes(), target);
  }

  // string test_bytes_stl = 12 [(.nanopb) = {
  if (this->test_bytes_stl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl().data(), static_cast<int>(this->test_bytes_stl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_stl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->test_bytes_stl(), target);
  }

  // repeated string test_bytes_repeated = 13 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_repeated(i).data(), static_cast<int>(this->test_bytes_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_repeated");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->test_bytes_repeated(i), target);
  }

  // repeated string test_bytes_stl_repeated = 14 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_repeated(i).data(), static_cast<int>(this->test_bytes_stl_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_repeated");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->test_bytes_stl_repeated(i), target);
  }

  // repeated string test_bytes_stl_vector = 15 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_vector(i).data(), static_cast<int>(this->test_bytes_stl_vector(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_vector");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->test_bytes_stl_vector(i), target);
  }

  // repeated string test_bytes_stl_list = 16 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_list(i).data(), static_cast<int>(this->test_bytes_stl_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(16, this->test_bytes_stl_list(i), target);
  }

  // repeated string test_bytes_stl_unordered_set = 17 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_unordered_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_unordered_set(i).data(), static_cast<int>(this->test_bytes_stl_unordered_set(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.wxWorkRobotTextTest.test_bytes_stl_unordered_set");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(17, this->test_bytes_stl_unordered_set(i), target);
  }

  // uint32 id = 100 [(.nanopb) = {
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(100, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrameComm.wxWorkRobotTextTest)
  return target;
}

size_t wxWorkRobotTextTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrameComm.wxWorkRobotTextTest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string test_string_repeated = 3 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_string_repeated_size());
  for (int i = 0, n = this->test_string_repeated_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string_repeated(i));
  }

  // repeated string test_string_stl_repeated = 4 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_string_stl_repeated_size());
  for (int i = 0, n = this->test_string_stl_repeated_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string_stl_repeated(i));
  }

  // repeated string test_string_stl_vector = 5 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_string_stl_vector_size());
  for (int i = 0, n = this->test_string_stl_vector_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string_stl_vector(i));
  }

  // repeated string test_string_stl_list = 6 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_string_stl_list_size());
  for (int i = 0, n = this->test_string_stl_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string_stl_list(i));
  }

  // repeated string test_string_stl_unordered_set = 7 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_string_stl_unordered_set_size());
  for (int i = 0, n = this->test_string_stl_unordered_set_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string_stl_unordered_set(i));
  }

  // repeated int32 test_int_vector = 8 [(.nanopb) = {
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->test_int_vector_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_int_vector_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 test_int_list = 9 [(.nanopb) = {
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->test_int_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_int_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 test_int_unordered_set = 10 [(.nanopb) = {
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->test_int_unordered_set_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_int_unordered_set_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string test_bytes_repeated = 13 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_bytes_repeated_size());
  for (int i = 0, n = this->test_bytes_repeated_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_bytes_repeated(i));
  }

  // repeated string test_bytes_stl_repeated = 14 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_bytes_stl_repeated_size());
  for (int i = 0, n = this->test_bytes_stl_repeated_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_bytes_stl_repeated(i));
  }

  // repeated string test_bytes_stl_vector = 15 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_bytes_stl_vector_size());
  for (int i = 0, n = this->test_bytes_stl_vector_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_bytes_stl_vector(i));
  }

  // repeated string test_bytes_stl_list = 16 [(.nanopb) = {
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->test_bytes_stl_list_size());
  for (int i = 0, n = this->test_bytes_stl_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_bytes_stl_list(i));
  }

  // repeated string test_bytes_stl_unordered_set = 17 [(.nanopb) = {
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->test_bytes_stl_unordered_set_size());
  for (int i = 0, n = this->test_bytes_stl_unordered_set_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_bytes_stl_unordered_set(i));
  }

  // string test_string = 1 [(.nanopb) = {
  if (this->test_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_string());
  }

  // string test_string_stl = 2 [(.nanopb) = {
  if (this->test_string_stl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_string_stl());
  }

  // string test_bytes = 11 [(.nanopb) = {
  if (this->test_bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_bytes());
  }

  // string test_bytes_stl = 12 [(.nanopb) = {
  if (this->test_bytes_stl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_bytes_stl());
  }

  // uint32 id = 100 [(.nanopb) = {
  if (this->id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void wxWorkRobotTextTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrameComm.wxWorkRobotTextTest)
  GOOGLE_DCHECK_NE(&from, this);
  const wxWorkRobotTextTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const wxWorkRobotTextTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrameComm.wxWorkRobotTextTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrameComm.wxWorkRobotTextTest)
    MergeFrom(*source);
  }
}

void wxWorkRobotTextTest::MergeFrom(const wxWorkRobotTextTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrameComm.wxWorkRobotTextTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  test_string_repeated_.MergeFrom(from.test_string_repeated_);
  test_string_stl_repeated_.MergeFrom(from.test_string_stl_repeated_);
  test_string_stl_vector_.MergeFrom(from.test_string_stl_vector_);
  test_string_stl_list_.MergeFrom(from.test_string_stl_list_);
  test_string_stl_unordered_set_.MergeFrom(from.test_string_stl_unordered_set_);
  test_int_vector_.MergeFrom(from.test_int_vector_);
  test_int_list_.MergeFrom(from.test_int_list_);
  test_int_unordered_set_.MergeFrom(from.test_int_unordered_set_);
  test_bytes_repeated_.MergeFrom(from.test_bytes_repeated_);
  test_bytes_stl_repeated_.MergeFrom(from.test_bytes_stl_repeated_);
  test_bytes_stl_vector_.MergeFrom(from.test_bytes_stl_vector_);
  test_bytes_stl_list_.MergeFrom(from.test_bytes_stl_list_);
  test_bytes_stl_unordered_set_.MergeFrom(from.test_bytes_stl_unordered_set_);
  if (from.test_string().size() > 0) {

    test_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_string_);
  }
  if (from.test_string_stl().size() > 0) {

    test_string_stl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_string_stl_);
  }
  if (from.test_bytes().size() > 0) {

    test_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_bytes_);
  }
  if (from.test_bytes_stl().size() > 0) {

    test_bytes_stl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_bytes_stl_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void wxWorkRobotTextTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrameComm.wxWorkRobotTextTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wxWorkRobotTextTest::CopyFrom(const wxWorkRobotTextTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrameComm.wxWorkRobotTextTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wxWorkRobotTextTest::IsInitialized() const {
  return true;
}

void wxWorkRobotTextTest::Swap(wxWorkRobotTextTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void wxWorkRobotTextTest::InternalSwap(wxWorkRobotTextTest* other) {
  using std::swap;
  test_string_repeated_.InternalSwap(CastToBase(&other->test_string_repeated_));
  test_string_stl_repeated_.InternalSwap(CastToBase(&other->test_string_stl_repeated_));
  test_string_stl_vector_.InternalSwap(CastToBase(&other->test_string_stl_vector_));
  test_string_stl_list_.InternalSwap(CastToBase(&other->test_string_stl_list_));
  test_string_stl_unordered_set_.InternalSwap(CastToBase(&other->test_string_stl_unordered_set_));
  test_int_vector_.InternalSwap(&other->test_int_vector_);
  test_int_list_.InternalSwap(&other->test_int_list_);
  test_int_unordered_set_.InternalSwap(&other->test_int_unordered_set_);
  test_bytes_repeated_.InternalSwap(CastToBase(&other->test_bytes_repeated_));
  test_bytes_stl_repeated_.InternalSwap(CastToBase(&other->test_bytes_stl_repeated_));
  test_bytes_stl_vector_.InternalSwap(CastToBase(&other->test_bytes_stl_vector_));
  test_bytes_stl_list_.InternalSwap(CastToBase(&other->test_bytes_stl_list_));
  test_bytes_stl_unordered_set_.InternalSwap(CastToBase(&other->test_bytes_stl_unordered_set_));
  test_string_.Swap(&other->test_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_string_stl_.Swap(&other->test_string_stl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_bytes_.Swap(&other->test_bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_bytes_stl_.Swap(&other->test_bytes_stl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata wxWorkRobotTextTest::GetMetadata() const {
  protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WelfareNodeDBDataPddBuy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WelfareNodeDBDataPddBuy::kMDwBuyCountFieldNumber;
const int WelfareNodeDBDataPddBuy::kMDwLastBuyTimeFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestStringFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestStringStlFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestStringRepeatedFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestStringStlRepeatedFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestStringStlVectorFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestStringStlListFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestStringStlUnorderedSetFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestIntVectorFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestIntListFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestIntUnorderedSetFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestBytesFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestBytesStlFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestBytesRepeatedFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestBytesStlRepeatedFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestBytesStlVectorFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestBytesStlListFieldNumber;
const int WelfareNodeDBDataPddBuy::kTestBytesStlUnorderedSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WelfareNodeDBDataPddBuy::WelfareNodeDBDataPddBuy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataPddBuy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrameComm.WelfareNodeDBDataPddBuy)
}
WelfareNodeDBDataPddBuy::WelfareNodeDBDataPddBuy(const WelfareNodeDBDataPddBuy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      test_string_repeated_(from.test_string_repeated_),
      test_string_stl_repeated_(from.test_string_stl_repeated_),
      test_string_stl_vector_(from.test_string_stl_vector_),
      test_string_stl_list_(from.test_string_stl_list_),
      test_string_stl_unordered_set_(from.test_string_stl_unordered_set_),
      test_int_vector_(from.test_int_vector_),
      test_int_list_(from.test_int_list_),
      test_int_unordered_set_(from.test_int_unordered_set_),
      test_bytes_repeated_(from.test_bytes_repeated_),
      test_bytes_stl_repeated_(from.test_bytes_stl_repeated_),
      test_bytes_stl_vector_(from.test_bytes_stl_vector_),
      test_bytes_stl_list_(from.test_bytes_stl_list_),
      test_bytes_stl_unordered_set_(from.test_bytes_stl_unordered_set_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  test_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_string().size() > 0) {
    test_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_string_);
  }
  test_string_stl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_string_stl().size() > 0) {
    test_string_stl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_string_stl_);
  }
  test_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_bytes().size() > 0) {
    test_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_bytes_);
  }
  test_bytes_stl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_bytes_stl().size() > 0) {
    test_bytes_stl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_bytes_stl_);
  }
  ::memcpy(&m_dwbuycount_, &from.m_dwbuycount_,
    static_cast<size_t>(reinterpret_cast<char*>(&m_dwlastbuytime_) -
    reinterpret_cast<char*>(&m_dwbuycount_)) + sizeof(m_dwlastbuytime_));
  // @@protoc_insertion_point(copy_constructor:NFrameComm.WelfareNodeDBDataPddBuy)
}

void WelfareNodeDBDataPddBuy::SharedCtor() {
  test_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_string_stl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_stl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&m_dwbuycount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m_dwlastbuytime_) -
      reinterpret_cast<char*>(&m_dwbuycount_)) + sizeof(m_dwlastbuytime_));
}

WelfareNodeDBDataPddBuy::~WelfareNodeDBDataPddBuy() {
  // @@protoc_insertion_point(destructor:NFrameComm.WelfareNodeDBDataPddBuy)
  SharedDtor();
}

void WelfareNodeDBDataPddBuy::SharedDtor() {
  test_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_string_stl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_stl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WelfareNodeDBDataPddBuy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WelfareNodeDBDataPddBuy::descriptor() {
  ::protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WelfareNodeDBDataPddBuy& WelfareNodeDBDataPddBuy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataPddBuy.base);
  return *internal_default_instance();
}


void WelfareNodeDBDataPddBuy::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrameComm.WelfareNodeDBDataPddBuy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  test_string_repeated_.Clear();
  test_string_stl_repeated_.Clear();
  test_string_stl_vector_.Clear();
  test_string_stl_list_.Clear();
  test_string_stl_unordered_set_.Clear();
  test_int_vector_.Clear();
  test_int_list_.Clear();
  test_int_unordered_set_.Clear();
  test_bytes_repeated_.Clear();
  test_bytes_stl_repeated_.Clear();
  test_bytes_stl_vector_.Clear();
  test_bytes_stl_list_.Clear();
  test_bytes_stl_unordered_set_.Clear();
  test_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_string_stl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_stl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&m_dwbuycount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m_dwlastbuytime_) -
      reinterpret_cast<char*>(&m_dwbuycount_)) + sizeof(m_dwlastbuytime_));
  _internal_metadata_.Clear();
}

bool WelfareNodeDBDataPddBuy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrameComm.WelfareNodeDBDataPddBuy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string test_string = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string().data(), static_cast<int>(this->test_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_string_stl = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_string_stl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl().data(), static_cast<int>(this->test_string_stl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_string_repeated = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string_repeated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_repeated(this->test_string_repeated_size() - 1).data(),
            static_cast<int>(this->test_string_repeated(this->test_string_repeated_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_string_repeated"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_string_stl_repeated = 4 [(.nanopb) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string_stl_repeated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl_repeated(this->test_string_stl_repeated_size() - 1).data(),
            static_cast<int>(this->test_string_stl_repeated(this->test_string_stl_repeated_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_repeated"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_string_stl_vector = 5 [(.nanopb) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string_stl_vector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl_vector(this->test_string_stl_vector_size() - 1).data(),
            static_cast<int>(this->test_string_stl_vector(this->test_string_stl_vector_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_vector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_string_stl_list = 6 [(.nanopb) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string_stl_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl_list(this->test_string_stl_list_size() - 1).data(),
            static_cast<int>(this->test_string_stl_list(this->test_string_stl_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_string_stl_unordered_set = 7 [(.nanopb) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string_stl_unordered_set()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl_unordered_set(this->test_string_stl_unordered_set_size() - 1).data(),
            static_cast<int>(this->test_string_stl_unordered_set(this->test_string_stl_unordered_set_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_unordered_set"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 test_int_vector = 8 [(.nanopb) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_test_int_vector())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_test_int_vector())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 test_int_list = 9 [(.nanopb) = {
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_test_int_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_test_int_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 test_int_unordered_set = 10 [(.nanopb) = {
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_test_int_unordered_set())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_test_int_unordered_set())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes test_bytes = 11 [(.nanopb) = {
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_test_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes test_bytes_stl = 12 [(.nanopb) = {
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_test_bytes_stl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_bytes_repeated = 13 [(.nanopb) = {
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_bytes_repeated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_repeated(this->test_bytes_repeated_size() - 1).data(),
            static_cast<int>(this->test_bytes_repeated(this->test_bytes_repeated_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_repeated"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_bytes_stl_repeated = 14 [(.nanopb) = {
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_bytes_stl_repeated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_stl_repeated(this->test_bytes_stl_repeated_size() - 1).data(),
            static_cast<int>(this->test_bytes_stl_repeated(this->test_bytes_stl_repeated_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_repeated"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_bytes_stl_vector = 15 [(.nanopb) = {
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_bytes_stl_vector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_stl_vector(this->test_bytes_stl_vector_size() - 1).data(),
            static_cast<int>(this->test_bytes_stl_vector(this->test_bytes_stl_vector_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_vector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_bytes_stl_list = 16 [(.nanopb) = {
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_bytes_stl_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_stl_list(this->test_bytes_stl_list_size() - 1).data(),
            static_cast<int>(this->test_bytes_stl_list(this->test_bytes_stl_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string test_bytes_stl_unordered_set = 17 [(.nanopb) = {
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_bytes_stl_unordered_set()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_bytes_stl_unordered_set(this->test_bytes_stl_unordered_set_size() - 1).data(),
            static_cast<int>(this->test_bytes_stl_unordered_set(this->test_bytes_stl_unordered_set_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_unordered_set"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 m_dwBuyCount = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_dwbuycount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 m_dwLastBuyTime = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 816 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_dwlastbuytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrameComm.WelfareNodeDBDataPddBuy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrameComm.WelfareNodeDBDataPddBuy)
  return false;
#undef DO_
}

void WelfareNodeDBDataPddBuy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrameComm.WelfareNodeDBDataPddBuy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string test_string = 1 [(.nanopb) = {
  if (this->test_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string().data(), static_cast<int>(this->test_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->test_string(), output);
  }

  // string test_string_stl = 2 [(.nanopb) = {
  if (this->test_string_stl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl().data(), static_cast<int>(this->test_string_stl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->test_string_stl(), output);
  }

  // repeated string test_string_repeated = 3 [(.nanopb) = {
  for (int i = 0, n = this->test_string_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_repeated(i).data(), static_cast<int>(this->test_string_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_repeated");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->test_string_repeated(i), output);
  }

  // repeated string test_string_stl_repeated = 4 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_repeated(i).data(), static_cast<int>(this->test_string_stl_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_repeated");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->test_string_stl_repeated(i), output);
  }

  // repeated string test_string_stl_vector = 5 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_vector(i).data(), static_cast<int>(this->test_string_stl_vector(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_vector");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->test_string_stl_vector(i), output);
  }

  // repeated string test_string_stl_list = 6 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_list(i).data(), static_cast<int>(this->test_string_stl_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->test_string_stl_list(i), output);
  }

  // repeated string test_string_stl_unordered_set = 7 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_unordered_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_unordered_set(i).data(), static_cast<int>(this->test_string_stl_unordered_set(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_unordered_set");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->test_string_stl_unordered_set(i), output);
  }

  // repeated int32 test_int_vector = 8 [(.nanopb) = {
  if (this->test_int_vector_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _test_int_vector_cached_byte_size_));
  }
  for (int i = 0, n = this->test_int_vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->test_int_vector(i), output);
  }

  // repeated int32 test_int_list = 9 [(.nanopb) = {
  if (this->test_int_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _test_int_list_cached_byte_size_));
  }
  for (int i = 0, n = this->test_int_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->test_int_list(i), output);
  }

  // repeated int32 test_int_unordered_set = 10 [(.nanopb) = {
  if (this->test_int_unordered_set_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _test_int_unordered_set_cached_byte_size_));
  }
  for (int i = 0, n = this->test_int_unordered_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->test_int_unordered_set(i), output);
  }

  // bytes test_bytes = 11 [(.nanopb) = {
  if (this->test_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->test_bytes(), output);
  }

  // bytes test_bytes_stl = 12 [(.nanopb) = {
  if (this->test_bytes_stl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->test_bytes_stl(), output);
  }

  // repeated string test_bytes_repeated = 13 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_repeated(i).data(), static_cast<int>(this->test_bytes_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_repeated");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->test_bytes_repeated(i), output);
  }

  // repeated string test_bytes_stl_repeated = 14 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_repeated(i).data(), static_cast<int>(this->test_bytes_stl_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_repeated");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->test_bytes_stl_repeated(i), output);
  }

  // repeated string test_bytes_stl_vector = 15 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_vector(i).data(), static_cast<int>(this->test_bytes_stl_vector(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_vector");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->test_bytes_stl_vector(i), output);
  }

  // repeated string test_bytes_stl_list = 16 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_list(i).data(), static_cast<int>(this->test_bytes_stl_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->test_bytes_stl_list(i), output);
  }

  // repeated string test_bytes_stl_unordered_set = 17 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_unordered_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_unordered_set(i).data(), static_cast<int>(this->test_bytes_stl_unordered_set(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_unordered_set");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->test_bytes_stl_unordered_set(i), output);
  }

  // uint32 m_dwBuyCount = 100;
  if (this->m_dwbuycount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(100, this->m_dwbuycount(), output);
  }

  // uint32 m_dwLastBuyTime = 102;
  if (this->m_dwlastbuytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(102, this->m_dwlastbuytime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrameComm.WelfareNodeDBDataPddBuy)
}

::google::protobuf::uint8* WelfareNodeDBDataPddBuy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrameComm.WelfareNodeDBDataPddBuy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string test_string = 1 [(.nanopb) = {
  if (this->test_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string().data(), static_cast<int>(this->test_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->test_string(), target);
  }

  // string test_string_stl = 2 [(.nanopb) = {
  if (this->test_string_stl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl().data(), static_cast<int>(this->test_string_stl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->test_string_stl(), target);
  }

  // repeated string test_string_repeated = 3 [(.nanopb) = {
  for (int i = 0, n = this->test_string_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_repeated(i).data(), static_cast<int>(this->test_string_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_repeated");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->test_string_repeated(i), target);
  }

  // repeated string test_string_stl_repeated = 4 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_repeated(i).data(), static_cast<int>(this->test_string_stl_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_repeated");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->test_string_stl_repeated(i), target);
  }

  // repeated string test_string_stl_vector = 5 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_vector(i).data(), static_cast<int>(this->test_string_stl_vector(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_vector");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->test_string_stl_vector(i), target);
  }

  // repeated string test_string_stl_list = 6 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_list(i).data(), static_cast<int>(this->test_string_stl_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->test_string_stl_list(i), target);
  }

  // repeated string test_string_stl_unordered_set = 7 [(.nanopb) = {
  for (int i = 0, n = this->test_string_stl_unordered_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl_unordered_set(i).data(), static_cast<int>(this->test_string_stl_unordered_set(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_string_stl_unordered_set");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->test_string_stl_unordered_set(i), target);
  }

  // repeated int32 test_int_vector = 8 [(.nanopb) = {
  if (this->test_int_vector_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _test_int_vector_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->test_int_vector_, target);
  }

  // repeated int32 test_int_list = 9 [(.nanopb) = {
  if (this->test_int_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _test_int_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->test_int_list_, target);
  }

  // repeated int32 test_int_unordered_set = 10 [(.nanopb) = {
  if (this->test_int_unordered_set_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _test_int_unordered_set_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->test_int_unordered_set_, target);
  }

  // bytes test_bytes = 11 [(.nanopb) = {
  if (this->test_bytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->test_bytes(), target);
  }

  // bytes test_bytes_stl = 12 [(.nanopb) = {
  if (this->test_bytes_stl().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->test_bytes_stl(), target);
  }

  // repeated string test_bytes_repeated = 13 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_repeated(i).data(), static_cast<int>(this->test_bytes_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_repeated");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->test_bytes_repeated(i), target);
  }

  // repeated string test_bytes_stl_repeated = 14 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_repeated_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_repeated(i).data(), static_cast<int>(this->test_bytes_stl_repeated(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_repeated");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->test_bytes_stl_repeated(i), target);
  }

  // repeated string test_bytes_stl_vector = 15 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_vector_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_vector(i).data(), static_cast<int>(this->test_bytes_stl_vector(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_vector");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->test_bytes_stl_vector(i), target);
  }

  // repeated string test_bytes_stl_list = 16 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_list(i).data(), static_cast<int>(this->test_bytes_stl_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(16, this->test_bytes_stl_list(i), target);
  }

  // repeated string test_bytes_stl_unordered_set = 17 [(.nanopb) = {
  for (int i = 0, n = this->test_bytes_stl_unordered_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_bytes_stl_unordered_set(i).data(), static_cast<int>(this->test_bytes_stl_unordered_set(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataPddBuy.test_bytes_stl_unordered_set");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(17, this->test_bytes_stl_unordered_set(i), target);
  }

  // uint32 m_dwBuyCount = 100;
  if (this->m_dwbuycount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(100, this->m_dwbuycount(), target);
  }

  // uint32 m_dwLastBuyTime = 102;
  if (this->m_dwlastbuytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(102, this->m_dwlastbuytime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrameComm.WelfareNodeDBDataPddBuy)
  return target;
}

size_t WelfareNodeDBDataPddBuy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrameComm.WelfareNodeDBDataPddBuy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string test_string_repeated = 3 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_string_repeated_size());
  for (int i = 0, n = this->test_string_repeated_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string_repeated(i));
  }

  // repeated string test_string_stl_repeated = 4 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_string_stl_repeated_size());
  for (int i = 0, n = this->test_string_stl_repeated_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string_stl_repeated(i));
  }

  // repeated string test_string_stl_vector = 5 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_string_stl_vector_size());
  for (int i = 0, n = this->test_string_stl_vector_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string_stl_vector(i));
  }

  // repeated string test_string_stl_list = 6 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_string_stl_list_size());
  for (int i = 0, n = this->test_string_stl_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string_stl_list(i));
  }

  // repeated string test_string_stl_unordered_set = 7 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_string_stl_unordered_set_size());
  for (int i = 0, n = this->test_string_stl_unordered_set_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string_stl_unordered_set(i));
  }

  // repeated int32 test_int_vector = 8 [(.nanopb) = {
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->test_int_vector_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_int_vector_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 test_int_list = 9 [(.nanopb) = {
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->test_int_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_int_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 test_int_unordered_set = 10 [(.nanopb) = {
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->test_int_unordered_set_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_int_unordered_set_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string test_bytes_repeated = 13 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_bytes_repeated_size());
  for (int i = 0, n = this->test_bytes_repeated_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_bytes_repeated(i));
  }

  // repeated string test_bytes_stl_repeated = 14 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_bytes_stl_repeated_size());
  for (int i = 0, n = this->test_bytes_stl_repeated_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_bytes_stl_repeated(i));
  }

  // repeated string test_bytes_stl_vector = 15 [(.nanopb) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_bytes_stl_vector_size());
  for (int i = 0, n = this->test_bytes_stl_vector_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_bytes_stl_vector(i));
  }

  // repeated string test_bytes_stl_list = 16 [(.nanopb) = {
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->test_bytes_stl_list_size());
  for (int i = 0, n = this->test_bytes_stl_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_bytes_stl_list(i));
  }

  // repeated string test_bytes_stl_unordered_set = 17 [(.nanopb) = {
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->test_bytes_stl_unordered_set_size());
  for (int i = 0, n = this->test_bytes_stl_unordered_set_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_bytes_stl_unordered_set(i));
  }

  // string test_string = 1 [(.nanopb) = {
  if (this->test_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_string());
  }

  // string test_string_stl = 2 [(.nanopb) = {
  if (this->test_string_stl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_string_stl());
  }

  // bytes test_bytes = 11 [(.nanopb) = {
  if (this->test_bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->test_bytes());
  }

  // bytes test_bytes_stl = 12 [(.nanopb) = {
  if (this->test_bytes_stl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->test_bytes_stl());
  }

  // uint32 m_dwBuyCount = 100;
  if (this->m_dwbuycount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_dwbuycount());
  }

  // uint32 m_dwLastBuyTime = 102;
  if (this->m_dwlastbuytime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_dwlastbuytime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WelfareNodeDBDataPddBuy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrameComm.WelfareNodeDBDataPddBuy)
  GOOGLE_DCHECK_NE(&from, this);
  const WelfareNodeDBDataPddBuy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WelfareNodeDBDataPddBuy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrameComm.WelfareNodeDBDataPddBuy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrameComm.WelfareNodeDBDataPddBuy)
    MergeFrom(*source);
  }
}

void WelfareNodeDBDataPddBuy::MergeFrom(const WelfareNodeDBDataPddBuy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrameComm.WelfareNodeDBDataPddBuy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  test_string_repeated_.MergeFrom(from.test_string_repeated_);
  test_string_stl_repeated_.MergeFrom(from.test_string_stl_repeated_);
  test_string_stl_vector_.MergeFrom(from.test_string_stl_vector_);
  test_string_stl_list_.MergeFrom(from.test_string_stl_list_);
  test_string_stl_unordered_set_.MergeFrom(from.test_string_stl_unordered_set_);
  test_int_vector_.MergeFrom(from.test_int_vector_);
  test_int_list_.MergeFrom(from.test_int_list_);
  test_int_unordered_set_.MergeFrom(from.test_int_unordered_set_);
  test_bytes_repeated_.MergeFrom(from.test_bytes_repeated_);
  test_bytes_stl_repeated_.MergeFrom(from.test_bytes_stl_repeated_);
  test_bytes_stl_vector_.MergeFrom(from.test_bytes_stl_vector_);
  test_bytes_stl_list_.MergeFrom(from.test_bytes_stl_list_);
  test_bytes_stl_unordered_set_.MergeFrom(from.test_bytes_stl_unordered_set_);
  if (from.test_string().size() > 0) {

    test_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_string_);
  }
  if (from.test_string_stl().size() > 0) {

    test_string_stl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_string_stl_);
  }
  if (from.test_bytes().size() > 0) {

    test_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_bytes_);
  }
  if (from.test_bytes_stl().size() > 0) {

    test_bytes_stl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_bytes_stl_);
  }
  if (from.m_dwbuycount() != 0) {
    set_m_dwbuycount(from.m_dwbuycount());
  }
  if (from.m_dwlastbuytime() != 0) {
    set_m_dwlastbuytime(from.m_dwlastbuytime());
  }
}

void WelfareNodeDBDataPddBuy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrameComm.WelfareNodeDBDataPddBuy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareNodeDBDataPddBuy::CopyFrom(const WelfareNodeDBDataPddBuy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrameComm.WelfareNodeDBDataPddBuy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareNodeDBDataPddBuy::IsInitialized() const {
  return true;
}

void WelfareNodeDBDataPddBuy::Swap(WelfareNodeDBDataPddBuy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WelfareNodeDBDataPddBuy::InternalSwap(WelfareNodeDBDataPddBuy* other) {
  using std::swap;
  test_string_repeated_.InternalSwap(CastToBase(&other->test_string_repeated_));
  test_string_stl_repeated_.InternalSwap(CastToBase(&other->test_string_stl_repeated_));
  test_string_stl_vector_.InternalSwap(CastToBase(&other->test_string_stl_vector_));
  test_string_stl_list_.InternalSwap(CastToBase(&other->test_string_stl_list_));
  test_string_stl_unordered_set_.InternalSwap(CastToBase(&other->test_string_stl_unordered_set_));
  test_int_vector_.InternalSwap(&other->test_int_vector_);
  test_int_list_.InternalSwap(&other->test_int_list_);
  test_int_unordered_set_.InternalSwap(&other->test_int_unordered_set_);
  test_bytes_repeated_.InternalSwap(CastToBase(&other->test_bytes_repeated_));
  test_bytes_stl_repeated_.InternalSwap(CastToBase(&other->test_bytes_stl_repeated_));
  test_bytes_stl_vector_.InternalSwap(CastToBase(&other->test_bytes_stl_vector_));
  test_bytes_stl_list_.InternalSwap(CastToBase(&other->test_bytes_stl_list_));
  test_bytes_stl_unordered_set_.InternalSwap(CastToBase(&other->test_bytes_stl_unordered_set_));
  test_string_.Swap(&other->test_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_string_stl_.Swap(&other->test_string_stl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_bytes_.Swap(&other->test_bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_bytes_stl_.Swap(&other->test_bytes_stl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(m_dwbuycount_, other->m_dwbuycount_);
  swap(m_dwlastbuytime_, other->m_dwlastbuytime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WelfareNodeDBDataPddBuy::GetMetadata() const {
  protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WelfareNodeDBDataPddOpen::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WelfareNodeDBDataPddOpen::kMDwOpenCountFieldNumber;
const int WelfareNodeDBDataPddOpen::kMDwLastJoinTimeFieldNumber;
const int WelfareNodeDBDataPddOpen::kMUllTeamIDFieldNumber;
const int WelfareNodeDBDataPddOpen::kMDwRwdCountFieldNumber;
const int WelfareNodeDBDataPddOpen::kMDwLastRwdTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WelfareNodeDBDataPddOpen::WelfareNodeDBDataPddOpen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataPddOpen.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrameComm.WelfareNodeDBDataPddOpen)
}
WelfareNodeDBDataPddOpen::WelfareNodeDBDataPddOpen(const WelfareNodeDBDataPddOpen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&m_dwopencount_, &from.m_dwopencount_,
    static_cast<size_t>(reinterpret_cast<char*>(&m_dwlastrwdtime_) -
    reinterpret_cast<char*>(&m_dwopencount_)) + sizeof(m_dwlastrwdtime_));
  // @@protoc_insertion_point(copy_constructor:NFrameComm.WelfareNodeDBDataPddOpen)
}

void WelfareNodeDBDataPddOpen::SharedCtor() {
  ::memset(&m_dwopencount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m_dwlastrwdtime_) -
      reinterpret_cast<char*>(&m_dwopencount_)) + sizeof(m_dwlastrwdtime_));
}

WelfareNodeDBDataPddOpen::~WelfareNodeDBDataPddOpen() {
  // @@protoc_insertion_point(destructor:NFrameComm.WelfareNodeDBDataPddOpen)
  SharedDtor();
}

void WelfareNodeDBDataPddOpen::SharedDtor() {
}

void WelfareNodeDBDataPddOpen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WelfareNodeDBDataPddOpen::descriptor() {
  ::protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WelfareNodeDBDataPddOpen& WelfareNodeDBDataPddOpen::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataPddOpen.base);
  return *internal_default_instance();
}


void WelfareNodeDBDataPddOpen::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrameComm.WelfareNodeDBDataPddOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&m_dwopencount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m_dwlastrwdtime_) -
      reinterpret_cast<char*>(&m_dwopencount_)) + sizeof(m_dwlastrwdtime_));
  _internal_metadata_.Clear();
}

bool WelfareNodeDBDataPddOpen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrameComm.WelfareNodeDBDataPddOpen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 m_dwOpenCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_dwopencount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 m_dwLastJoinTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_dwlastjointime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 m_ullTeamID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &m_ullteamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 m_dwRwdCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_dwrwdcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 m_dwLastRwdTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_dwlastrwdtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrameComm.WelfareNodeDBDataPddOpen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrameComm.WelfareNodeDBDataPddOpen)
  return false;
#undef DO_
}

void WelfareNodeDBDataPddOpen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrameComm.WelfareNodeDBDataPddOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 m_dwOpenCount = 1;
  if (this->m_dwopencount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_dwopencount(), output);
  }

  // uint32 m_dwLastJoinTime = 2;
  if (this->m_dwlastjointime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_dwlastjointime(), output);
  }

  // uint64 m_ullTeamID = 3;
  if (this->m_ullteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->m_ullteamid(), output);
  }

  // uint32 m_dwRwdCount = 4;
  if (this->m_dwrwdcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->m_dwrwdcount(), output);
  }

  // uint32 m_dwLastRwdTime = 5;
  if (this->m_dwlastrwdtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->m_dwlastrwdtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrameComm.WelfareNodeDBDataPddOpen)
}

::google::protobuf::uint8* WelfareNodeDBDataPddOpen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrameComm.WelfareNodeDBDataPddOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 m_dwOpenCount = 1;
  if (this->m_dwopencount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_dwopencount(), target);
  }

  // uint32 m_dwLastJoinTime = 2;
  if (this->m_dwlastjointime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_dwlastjointime(), target);
  }

  // uint64 m_ullTeamID = 3;
  if (this->m_ullteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->m_ullteamid(), target);
  }

  // uint32 m_dwRwdCount = 4;
  if (this->m_dwrwdcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->m_dwrwdcount(), target);
  }

  // uint32 m_dwLastRwdTime = 5;
  if (this->m_dwlastrwdtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->m_dwlastrwdtime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrameComm.WelfareNodeDBDataPddOpen)
  return target;
}

size_t WelfareNodeDBDataPddOpen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrameComm.WelfareNodeDBDataPddOpen)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 m_dwOpenCount = 1;
  if (this->m_dwopencount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_dwopencount());
  }

  // uint32 m_dwLastJoinTime = 2;
  if (this->m_dwlastjointime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_dwlastjointime());
  }

  // uint64 m_ullTeamID = 3;
  if (this->m_ullteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->m_ullteamid());
  }

  // uint32 m_dwRwdCount = 4;
  if (this->m_dwrwdcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_dwrwdcount());
  }

  // uint32 m_dwLastRwdTime = 5;
  if (this->m_dwlastrwdtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_dwlastrwdtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WelfareNodeDBDataPddOpen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrameComm.WelfareNodeDBDataPddOpen)
  GOOGLE_DCHECK_NE(&from, this);
  const WelfareNodeDBDataPddOpen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WelfareNodeDBDataPddOpen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrameComm.WelfareNodeDBDataPddOpen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrameComm.WelfareNodeDBDataPddOpen)
    MergeFrom(*source);
  }
}

void WelfareNodeDBDataPddOpen::MergeFrom(const WelfareNodeDBDataPddOpen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrameComm.WelfareNodeDBDataPddOpen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.m_dwopencount() != 0) {
    set_m_dwopencount(from.m_dwopencount());
  }
  if (from.m_dwlastjointime() != 0) {
    set_m_dwlastjointime(from.m_dwlastjointime());
  }
  if (from.m_ullteamid() != 0) {
    set_m_ullteamid(from.m_ullteamid());
  }
  if (from.m_dwrwdcount() != 0) {
    set_m_dwrwdcount(from.m_dwrwdcount());
  }
  if (from.m_dwlastrwdtime() != 0) {
    set_m_dwlastrwdtime(from.m_dwlastrwdtime());
  }
}

void WelfareNodeDBDataPddOpen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrameComm.WelfareNodeDBDataPddOpen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareNodeDBDataPddOpen::CopyFrom(const WelfareNodeDBDataPddOpen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrameComm.WelfareNodeDBDataPddOpen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareNodeDBDataPddOpen::IsInitialized() const {
  return true;
}

void WelfareNodeDBDataPddOpen::Swap(WelfareNodeDBDataPddOpen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WelfareNodeDBDataPddOpen::InternalSwap(WelfareNodeDBDataPddOpen* other) {
  using std::swap;
  swap(m_dwopencount_, other->m_dwopencount_);
  swap(m_dwlastjointime_, other->m_dwlastjointime_);
  swap(m_ullteamid_, other->m_ullteamid_);
  swap(m_dwrwdcount_, other->m_dwrwdcount_);
  swap(m_dwlastrwdtime_, other->m_dwlastrwdtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WelfareNodeDBDataPddOpen::GetMetadata() const {
  protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WelfareNodeDBDataGetTaskManual::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WelfareNodeDBDataGetTaskManual::kMIStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WelfareNodeDBDataGetTaskManual::WelfareNodeDBDataGetTaskManual()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataGetTaskManual.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrameComm.WelfareNodeDBDataGetTaskManual)
}
WelfareNodeDBDataGetTaskManual::WelfareNodeDBDataGetTaskManual(const WelfareNodeDBDataGetTaskManual& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  m_istate_ = from.m_istate_;
  // @@protoc_insertion_point(copy_constructor:NFrameComm.WelfareNodeDBDataGetTaskManual)
}

void WelfareNodeDBDataGetTaskManual::SharedCtor() {
  m_istate_ = 0;
}

WelfareNodeDBDataGetTaskManual::~WelfareNodeDBDataGetTaskManual() {
  // @@protoc_insertion_point(destructor:NFrameComm.WelfareNodeDBDataGetTaskManual)
  SharedDtor();
}

void WelfareNodeDBDataGetTaskManual::SharedDtor() {
}

void WelfareNodeDBDataGetTaskManual::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WelfareNodeDBDataGetTaskManual::descriptor() {
  ::protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WelfareNodeDBDataGetTaskManual& WelfareNodeDBDataGetTaskManual::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataGetTaskManual.base);
  return *internal_default_instance();
}


void WelfareNodeDBDataGetTaskManual::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrameComm.WelfareNodeDBDataGetTaskManual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  m_istate_ = 0;
  _internal_metadata_.Clear();
}

bool WelfareNodeDBDataGetTaskManual::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrameComm.WelfareNodeDBDataGetTaskManual)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 m_iState = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_istate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrameComm.WelfareNodeDBDataGetTaskManual)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrameComm.WelfareNodeDBDataGetTaskManual)
  return false;
#undef DO_
}

void WelfareNodeDBDataGetTaskManual::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrameComm.WelfareNodeDBDataGetTaskManual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 m_iState = 1;
  if (this->m_istate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_istate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrameComm.WelfareNodeDBDataGetTaskManual)
}

::google::protobuf::uint8* WelfareNodeDBDataGetTaskManual::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrameComm.WelfareNodeDBDataGetTaskManual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 m_iState = 1;
  if (this->m_istate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_istate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrameComm.WelfareNodeDBDataGetTaskManual)
  return target;
}

size_t WelfareNodeDBDataGetTaskManual::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrameComm.WelfareNodeDBDataGetTaskManual)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 m_iState = 1;
  if (this->m_istate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m_istate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WelfareNodeDBDataGetTaskManual::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrameComm.WelfareNodeDBDataGetTaskManual)
  GOOGLE_DCHECK_NE(&from, this);
  const WelfareNodeDBDataGetTaskManual* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WelfareNodeDBDataGetTaskManual>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrameComm.WelfareNodeDBDataGetTaskManual)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrameComm.WelfareNodeDBDataGetTaskManual)
    MergeFrom(*source);
  }
}

void WelfareNodeDBDataGetTaskManual::MergeFrom(const WelfareNodeDBDataGetTaskManual& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrameComm.WelfareNodeDBDataGetTaskManual)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.m_istate() != 0) {
    set_m_istate(from.m_istate());
  }
}

void WelfareNodeDBDataGetTaskManual::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrameComm.WelfareNodeDBDataGetTaskManual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareNodeDBDataGetTaskManual::CopyFrom(const WelfareNodeDBDataGetTaskManual& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrameComm.WelfareNodeDBDataGetTaskManual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareNodeDBDataGetTaskManual::IsInitialized() const {
  return true;
}

void WelfareNodeDBDataGetTaskManual::Swap(WelfareNodeDBDataGetTaskManual* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WelfareNodeDBDataGetTaskManual::InternalSwap(WelfareNodeDBDataGetTaskManual* other) {
  using std::swap;
  swap(m_istate_, other->m_istate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WelfareNodeDBDataGetTaskManual::GetMetadata() const {
  protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WelfareNodeDBDataUnion::InitAsDefaultInstance() {
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.m_stpddbuy_ = const_cast< ::NFrameComm::WelfareNodeDBDataPddBuy*>(
      ::NFrameComm::WelfareNodeDBDataPddBuy::internal_default_instance());
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.m_stpddopen_ = const_cast< ::NFrameComm::WelfareNodeDBDataPddOpen*>(
      ::NFrameComm::WelfareNodeDBDataPddOpen::internal_default_instance());
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.m_stgettaskmanual_ = const_cast< ::NFrameComm::WelfareNodeDBDataGetTaskManual*>(
      ::NFrameComm::WelfareNodeDBDataGetTaskManual::internal_default_instance());
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.m_dwbuycount_ = 0u;
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.m_dwlastbuytime_ = 0u;
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.test_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.test_string_stl_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.test_bytes_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.test_bytes_stl_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.test_enum_ = 0;
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.m_dwbuycount2_ = 0u;
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_.m_dwlastbuytime2_ = 0u;
  ::NFrameComm::_WelfareNodeDBDataUnion_default_instance_._instance.get_mutable()->m_stpddbuy1_ = const_cast< ::NFrameComm::WelfareNodeDBDataPddBuy*>(
      ::NFrameComm::WelfareNodeDBDataPddBuy::internal_default_instance());
}
void WelfareNodeDBDataUnion::set_allocated_m_stpddbuy(::NFrameComm::WelfareNodeDBDataPddBuy* m_stpddbuy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_m_stData();
  if (m_stpddbuy) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      m_stpddbuy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, m_stpddbuy, submessage_arena);
    }
    set_has_m_stpddbuy();
    m_stData_.m_stpddbuy_ = m_stpddbuy;
  }
  // @@protoc_insertion_point(field_set_allocated:NFrameComm.WelfareNodeDBDataUnion.m_stPddBuy)
}
void WelfareNodeDBDataUnion::set_allocated_m_stpddopen(::NFrameComm::WelfareNodeDBDataPddOpen* m_stpddopen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_m_stData();
  if (m_stpddopen) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      m_stpddopen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, m_stpddopen, submessage_arena);
    }
    set_has_m_stpddopen();
    m_stData_.m_stpddopen_ = m_stpddopen;
  }
  // @@protoc_insertion_point(field_set_allocated:NFrameComm.WelfareNodeDBDataUnion.m_stPddOpen)
}
void WelfareNodeDBDataUnion::set_allocated_m_stgettaskmanual(::NFrameComm::WelfareNodeDBDataGetTaskManual* m_stgettaskmanual) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_m_stData();
  if (m_stgettaskmanual) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      m_stgettaskmanual = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, m_stgettaskmanual, submessage_arena);
    }
    set_has_m_stgettaskmanual();
    m_stData_.m_stgettaskmanual_ = m_stgettaskmanual;
  }
  // @@protoc_insertion_point(field_set_allocated:NFrameComm.WelfareNodeDBDataUnion.m_stGetTaskManual)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WelfareNodeDBDataUnion::kMStPddBuyFieldNumber;
const int WelfareNodeDBDataUnion::kMStPddOpenFieldNumber;
const int WelfareNodeDBDataUnion::kMStGetTaskManualFieldNumber;
const int WelfareNodeDBDataUnion::kMDwBuyCountFieldNumber;
const int WelfareNodeDBDataUnion::kMDwLastBuyTimeFieldNumber;
const int WelfareNodeDBDataUnion::kTestStringFieldNumber;
const int WelfareNodeDBDataUnion::kTestStringStlFieldNumber;
const int WelfareNodeDBDataUnion::kTestBytesFieldNumber;
const int WelfareNodeDBDataUnion::kTestBytesStlFieldNumber;
const int WelfareNodeDBDataUnion::kTestEnumFieldNumber;
const int WelfareNodeDBDataUnion::kMDwBuyCount2FieldNumber;
const int WelfareNodeDBDataUnion::kMDwLastBuyTime2FieldNumber;
const int WelfareNodeDBDataUnion::kMStPddBuy1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WelfareNodeDBDataUnion::WelfareNodeDBDataUnion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataUnion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrameComm.WelfareNodeDBDataUnion)
}
WelfareNodeDBDataUnion::WelfareNodeDBDataUnion(const WelfareNodeDBDataUnion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_m_stpddbuy1()) {
    m_stpddbuy1_ = new ::NFrameComm::WelfareNodeDBDataPddBuy(*from.m_stpddbuy1_);
  } else {
    m_stpddbuy1_ = NULL;
  }
  clear_has_m_stData();
  switch (from.m_stData_case()) {
    case kMStPddBuy: {
      mutable_m_stpddbuy()->::NFrameComm::WelfareNodeDBDataPddBuy::MergeFrom(from.m_stpddbuy());
      break;
    }
    case kMStPddOpen: {
      mutable_m_stpddopen()->::NFrameComm::WelfareNodeDBDataPddOpen::MergeFrom(from.m_stpddopen());
      break;
    }
    case kMStGetTaskManual: {
      mutable_m_stgettaskmanual()->::NFrameComm::WelfareNodeDBDataGetTaskManual::MergeFrom(from.m_stgettaskmanual());
      break;
    }
    case kMDwBuyCount: {
      set_m_dwbuycount(from.m_dwbuycount());
      break;
    }
    case kMDwLastBuyTime: {
      set_m_dwlastbuytime(from.m_dwlastbuytime());
      break;
    }
    case kTestString: {
      set_test_string(from.test_string());
      break;
    }
    case kTestStringStl: {
      set_test_string_stl(from.test_string_stl());
      break;
    }
    case kTestBytes: {
      set_test_bytes(from.test_bytes());
      break;
    }
    case kTestBytesStl: {
      set_test_bytes_stl(from.test_bytes_stl());
      break;
    }
    case kTestEnum: {
      set_test_enum(from.test_enum());
      break;
    }
    case M_STDATA_NOT_SET: {
      break;
    }
  }
  clear_has_m_stData2();
  switch (from.m_stData2_case()) {
    case kMDwBuyCount2: {
      set_m_dwbuycount2(from.m_dwbuycount2());
      break;
    }
    case kMDwLastBuyTime2: {
      set_m_dwlastbuytime2(from.m_dwlastbuytime2());
      break;
    }
    case M_STDATA2_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:NFrameComm.WelfareNodeDBDataUnion)
}

void WelfareNodeDBDataUnion::SharedCtor() {
  m_stpddbuy1_ = NULL;
  clear_has_m_stData();
  clear_has_m_stData2();
}

WelfareNodeDBDataUnion::~WelfareNodeDBDataUnion() {
  // @@protoc_insertion_point(destructor:NFrameComm.WelfareNodeDBDataUnion)
  SharedDtor();
}

void WelfareNodeDBDataUnion::SharedDtor() {
  if (this != internal_default_instance()) delete m_stpddbuy1_;
  if (has_m_stData()) {
    clear_m_stData();
  }
  if (has_m_stData2()) {
    clear_m_stData2();
  }
}

void WelfareNodeDBDataUnion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WelfareNodeDBDataUnion::descriptor() {
  ::protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WelfareNodeDBDataUnion& WelfareNodeDBDataUnion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameTestComm_2eproto::scc_info_WelfareNodeDBDataUnion.base);
  return *internal_default_instance();
}


void WelfareNodeDBDataUnion::clear_m_stData() {
// @@protoc_insertion_point(one_of_clear_start:NFrameComm.WelfareNodeDBDataUnion)
  switch (m_stData_case()) {
    case kMStPddBuy: {
      delete m_stData_.m_stpddbuy_;
      break;
    }
    case kMStPddOpen: {
      delete m_stData_.m_stpddopen_;
      break;
    }
    case kMStGetTaskManual: {
      delete m_stData_.m_stgettaskmanual_;
      break;
    }
    case kMDwBuyCount: {
      // No need to clear
      break;
    }
    case kMDwLastBuyTime: {
      // No need to clear
      break;
    }
    case kTestString: {
      m_stData_.test_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTestStringStl: {
      m_stData_.test_string_stl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTestBytes: {
      m_stData_.test_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTestBytesStl: {
      m_stData_.test_bytes_stl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTestEnum: {
      // No need to clear
      break;
    }
    case M_STDATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = M_STDATA_NOT_SET;
}

void WelfareNodeDBDataUnion::clear_m_stData2() {
// @@protoc_insertion_point(one_of_clear_start:NFrameComm.WelfareNodeDBDataUnion)
  switch (m_stData2_case()) {
    case kMDwBuyCount2: {
      // No need to clear
      break;
    }
    case kMDwLastBuyTime2: {
      // No need to clear
      break;
    }
    case M_STDATA2_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = M_STDATA2_NOT_SET;
}


void WelfareNodeDBDataUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrameComm.WelfareNodeDBDataUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && m_stpddbuy1_ != NULL) {
    delete m_stpddbuy1_;
  }
  m_stpddbuy1_ = NULL;
  clear_m_stData();
  clear_m_stData2();
  _internal_metadata_.Clear();
}

bool WelfareNodeDBDataUnion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrameComm.WelfareNodeDBDataUnion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(80029u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string test_string = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string().data(), static_cast<int>(this->test_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataUnion.test_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_string_stl = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_string_stl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_string_stl().data(), static_cast<int>(this->test_string_stl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.WelfareNodeDBDataUnion.test_string_stl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes test_bytes = 11 [(.nanopb) = {
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_test_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes test_bytes_stl = 12 [(.nanopb) = {
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_test_bytes_stl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrameEnum.FrameGlobalTestEnum test_enum = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_test_enum(static_cast< ::NFrameEnum::FrameGlobalTestEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 m_dwBuyCount = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {
          clear_m_stData();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_stData_.m_dwbuycount_)));
          set_has_m_dwbuycount();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 m_dwLastBuyTime = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 816 & 0xFF */)) {
          clear_m_stData();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_stData_.m_dwlastbuytime_)));
          set_has_m_dwlastbuytime();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrameComm.WelfareNodeDBDataPddBuy m_stPddBuy1 = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m_stpddbuy1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 m_dwBuyCount2 = 1000;
      case 1000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 8000 & 0xFF */)) {
          clear_m_stData2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_stData2_.m_dwbuycount2_)));
          set_has_m_dwbuycount2();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 m_dwLastBuyTime2 = 1002;
      case 1002: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 8016 & 0xFF */)) {
          clear_m_stData2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_stData2_.m_dwlastbuytime2_)));
          set_has_m_dwlastbuytime2();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrameComm.WelfareNodeDBDataPddBuy m_stPddBuy = 10001;
      case 10001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 80010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m_stpddbuy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrameComm.WelfareNodeDBDataPddOpen m_stPddOpen = 10002;
      case 10002: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 80018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m_stpddopen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrameComm.WelfareNodeDBDataGetTaskManual m_stGetTaskManual = 10003;
      case 10003: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 80026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m_stgettaskmanual()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrameComm.WelfareNodeDBDataUnion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrameComm.WelfareNodeDBDataUnion)
  return false;
#undef DO_
}

void WelfareNodeDBDataUnion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrameComm.WelfareNodeDBDataUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string test_string = 1 [(.nanopb) = {
  if (has_test_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string().data(), static_cast<int>(this->test_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataUnion.test_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->test_string(), output);
  }

  // string test_string_stl = 2 [(.nanopb) = {
  if (has_test_string_stl()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl().data(), static_cast<int>(this->test_string_stl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataUnion.test_string_stl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->test_string_stl(), output);
  }

  // bytes test_bytes = 11 [(.nanopb) = {
  if (has_test_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->test_bytes(), output);
  }

  // bytes test_bytes_stl = 12 [(.nanopb) = {
  if (has_test_bytes_stl()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->test_bytes_stl(), output);
  }

  // .NFrameEnum.FrameGlobalTestEnum test_enum = 13;
  if (has_test_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->test_enum(), output);
  }

  // uint32 m_dwBuyCount = 100;
  if (has_m_dwbuycount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(100, this->m_dwbuycount(), output);
  }

  // uint32 m_dwLastBuyTime = 102;
  if (has_m_dwlastbuytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(102, this->m_dwlastbuytime(), output);
  }

  // .NFrameComm.WelfareNodeDBDataPddBuy m_stPddBuy1 = 111;
  if (this->has_m_stpddbuy1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111, this->_internal_m_stpddbuy1(), output);
  }

  // uint32 m_dwBuyCount2 = 1000;
  if (has_m_dwbuycount2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1000, this->m_dwbuycount2(), output);
  }

  // uint32 m_dwLastBuyTime2 = 1002;
  if (has_m_dwlastbuytime2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1002, this->m_dwlastbuytime2(), output);
  }

  // .NFrameComm.WelfareNodeDBDataPddBuy m_stPddBuy = 10001;
  if (has_m_stpddbuy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10001, this->_internal_m_stpddbuy(), output);
  }

  // .NFrameComm.WelfareNodeDBDataPddOpen m_stPddOpen = 10002;
  if (has_m_stpddopen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10002, this->_internal_m_stpddopen(), output);
  }

  // .NFrameComm.WelfareNodeDBDataGetTaskManual m_stGetTaskManual = 10003;
  if (has_m_stgettaskmanual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10003, this->_internal_m_stgettaskmanual(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrameComm.WelfareNodeDBDataUnion)
}

::google::protobuf::uint8* WelfareNodeDBDataUnion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrameComm.WelfareNodeDBDataUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string test_string = 1 [(.nanopb) = {
  if (has_test_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string().data(), static_cast<int>(this->test_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataUnion.test_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->test_string(), target);
  }

  // string test_string_stl = 2 [(.nanopb) = {
  if (has_test_string_stl()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_string_stl().data(), static_cast<int>(this->test_string_stl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.WelfareNodeDBDataUnion.test_string_stl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->test_string_stl(), target);
  }

  // bytes test_bytes = 11 [(.nanopb) = {
  if (has_test_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->test_bytes(), target);
  }

  // bytes test_bytes_stl = 12 [(.nanopb) = {
  if (has_test_bytes_stl()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->test_bytes_stl(), target);
  }

  // .NFrameEnum.FrameGlobalTestEnum test_enum = 13;
  if (has_test_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->test_enum(), target);
  }

  // uint32 m_dwBuyCount = 100;
  if (has_m_dwbuycount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(100, this->m_dwbuycount(), target);
  }

  // uint32 m_dwLastBuyTime = 102;
  if (has_m_dwlastbuytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(102, this->m_dwlastbuytime(), target);
  }

  // .NFrameComm.WelfareNodeDBDataPddBuy m_stPddBuy1 = 111;
  if (this->has_m_stpddbuy1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        111, this->_internal_m_stpddbuy1(), deterministic, target);
  }

  // uint32 m_dwBuyCount2 = 1000;
  if (has_m_dwbuycount2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1000, this->m_dwbuycount2(), target);
  }

  // uint32 m_dwLastBuyTime2 = 1002;
  if (has_m_dwlastbuytime2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1002, this->m_dwlastbuytime2(), target);
  }

  // .NFrameComm.WelfareNodeDBDataPddBuy m_stPddBuy = 10001;
  if (has_m_stpddbuy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10001, this->_internal_m_stpddbuy(), deterministic, target);
  }

  // .NFrameComm.WelfareNodeDBDataPddOpen m_stPddOpen = 10002;
  if (has_m_stpddopen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10002, this->_internal_m_stpddopen(), deterministic, target);
  }

  // .NFrameComm.WelfareNodeDBDataGetTaskManual m_stGetTaskManual = 10003;
  if (has_m_stgettaskmanual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10003, this->_internal_m_stgettaskmanual(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrameComm.WelfareNodeDBDataUnion)
  return target;
}

size_t WelfareNodeDBDataUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrameComm.WelfareNodeDBDataUnion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrameComm.WelfareNodeDBDataPddBuy m_stPddBuy1 = 111;
  if (this->has_m_stpddbuy1()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *m_stpddbuy1_);
  }

  switch (m_stData_case()) {
    // .NFrameComm.WelfareNodeDBDataPddBuy m_stPddBuy = 10001;
    case kMStPddBuy: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *m_stData_.m_stpddbuy_);
      break;
    }
    // .NFrameComm.WelfareNodeDBDataPddOpen m_stPddOpen = 10002;
    case kMStPddOpen: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *m_stData_.m_stpddopen_);
      break;
    }
    // .NFrameComm.WelfareNodeDBDataGetTaskManual m_stGetTaskManual = 10003;
    case kMStGetTaskManual: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *m_stData_.m_stgettaskmanual_);
      break;
    }
    // uint32 m_dwBuyCount = 100;
    case kMDwBuyCount: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_dwbuycount());
      break;
    }
    // uint32 m_dwLastBuyTime = 102;
    case kMDwLastBuyTime: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_dwlastbuytime());
      break;
    }
    // string test_string = 1 [(.nanopb) = {
    case kTestString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test_string());
      break;
    }
    // string test_string_stl = 2 [(.nanopb) = {
    case kTestStringStl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test_string_stl());
      break;
    }
    // bytes test_bytes = 11 [(.nanopb) = {
    case kTestBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->test_bytes());
      break;
    }
    // bytes test_bytes_stl = 12 [(.nanopb) = {
    case kTestBytesStl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->test_bytes_stl());
      break;
    }
    // .NFrameEnum.FrameGlobalTestEnum test_enum = 13;
    case kTestEnum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->test_enum());
      break;
    }
    case M_STDATA_NOT_SET: {
      break;
    }
  }
  switch (m_stData2_case()) {
    // uint32 m_dwBuyCount2 = 1000;
    case kMDwBuyCount2: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_dwbuycount2());
      break;
    }
    // uint32 m_dwLastBuyTime2 = 1002;
    case kMDwLastBuyTime2: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_dwlastbuytime2());
      break;
    }
    case M_STDATA2_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WelfareNodeDBDataUnion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrameComm.WelfareNodeDBDataUnion)
  GOOGLE_DCHECK_NE(&from, this);
  const WelfareNodeDBDataUnion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WelfareNodeDBDataUnion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrameComm.WelfareNodeDBDataUnion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrameComm.WelfareNodeDBDataUnion)
    MergeFrom(*source);
  }
}

void WelfareNodeDBDataUnion::MergeFrom(const WelfareNodeDBDataUnion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrameComm.WelfareNodeDBDataUnion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_m_stpddbuy1()) {
    mutable_m_stpddbuy1()->::NFrameComm::WelfareNodeDBDataPddBuy::MergeFrom(from.m_stpddbuy1());
  }
  switch (from.m_stData_case()) {
    case kMStPddBuy: {
      mutable_m_stpddbuy()->::NFrameComm::WelfareNodeDBDataPddBuy::MergeFrom(from.m_stpddbuy());
      break;
    }
    case kMStPddOpen: {
      mutable_m_stpddopen()->::NFrameComm::WelfareNodeDBDataPddOpen::MergeFrom(from.m_stpddopen());
      break;
    }
    case kMStGetTaskManual: {
      mutable_m_stgettaskmanual()->::NFrameComm::WelfareNodeDBDataGetTaskManual::MergeFrom(from.m_stgettaskmanual());
      break;
    }
    case kMDwBuyCount: {
      set_m_dwbuycount(from.m_dwbuycount());
      break;
    }
    case kMDwLastBuyTime: {
      set_m_dwlastbuytime(from.m_dwlastbuytime());
      break;
    }
    case kTestString: {
      set_test_string(from.test_string());
      break;
    }
    case kTestStringStl: {
      set_test_string_stl(from.test_string_stl());
      break;
    }
    case kTestBytes: {
      set_test_bytes(from.test_bytes());
      break;
    }
    case kTestBytesStl: {
      set_test_bytes_stl(from.test_bytes_stl());
      break;
    }
    case kTestEnum: {
      set_test_enum(from.test_enum());
      break;
    }
    case M_STDATA_NOT_SET: {
      break;
    }
  }
  switch (from.m_stData2_case()) {
    case kMDwBuyCount2: {
      set_m_dwbuycount2(from.m_dwbuycount2());
      break;
    }
    case kMDwLastBuyTime2: {
      set_m_dwlastbuytime2(from.m_dwlastbuytime2());
      break;
    }
    case M_STDATA2_NOT_SET: {
      break;
    }
  }
}

void WelfareNodeDBDataUnion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrameComm.WelfareNodeDBDataUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareNodeDBDataUnion::CopyFrom(const WelfareNodeDBDataUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrameComm.WelfareNodeDBDataUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareNodeDBDataUnion::IsInitialized() const {
  return true;
}

void WelfareNodeDBDataUnion::Swap(WelfareNodeDBDataUnion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WelfareNodeDBDataUnion::InternalSwap(WelfareNodeDBDataUnion* other) {
  using std::swap;
  swap(m_stpddbuy1_, other->m_stpddbuy1_);
  swap(m_stData_, other->m_stData_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(m_stData2_, other->m_stData2_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WelfareNodeDBDataUnion::GetMetadata() const {
  protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BevLogTestItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BevLogTestItem::kItemIdFieldNumber;
const int BevLogTestItem::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BevLogTestItem::BevLogTestItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameTestComm_2eproto::scc_info_BevLogTestItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrameComm.BevLogTestItem)
}
BevLogTestItem::BevLogTestItem(const BevLogTestItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(item_num_));
  // @@protoc_insertion_point(copy_constructor:NFrameComm.BevLogTestItem)
}

void BevLogTestItem::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(item_num_));
}

BevLogTestItem::~BevLogTestItem() {
  // @@protoc_insertion_point(destructor:NFrameComm.BevLogTestItem)
  SharedDtor();
}

void BevLogTestItem::SharedDtor() {
}

void BevLogTestItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BevLogTestItem::descriptor() {
  ::protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BevLogTestItem& BevLogTestItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameTestComm_2eproto::scc_info_BevLogTestItem.base);
  return *internal_default_instance();
}


void BevLogTestItem::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrameComm.BevLogTestItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(item_num_));
  _internal_metadata_.Clear();
}

bool BevLogTestItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrameComm.BevLogTestItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrameComm.BevLogTestItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrameComm.BevLogTestItem)
  return false;
#undef DO_
}

void BevLogTestItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrameComm.BevLogTestItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrameComm.BevLogTestItem)
}

::google::protobuf::uint8* BevLogTestItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrameComm.BevLogTestItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrameComm.BevLogTestItem)
  return target;
}

size_t BevLogTestItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrameComm.BevLogTestItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BevLogTestItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrameComm.BevLogTestItem)
  GOOGLE_DCHECK_NE(&from, this);
  const BevLogTestItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BevLogTestItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrameComm.BevLogTestItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrameComm.BevLogTestItem)
    MergeFrom(*source);
  }
}

void BevLogTestItem::MergeFrom(const BevLogTestItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrameComm.BevLogTestItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.item_num() != 0) {
    set_item_num(from.item_num());
  }
}

void BevLogTestItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrameComm.BevLogTestItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BevLogTestItem::CopyFrom(const BevLogTestItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrameComm.BevLogTestItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BevLogTestItem::IsInitialized() const {
  return true;
}

void BevLogTestItem::Swap(BevLogTestItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BevLogTestItem::InternalSwap(BevLogTestItem* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(item_num_, other->item_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BevLogTestItem::GetMetadata() const {
  protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BevLogTest::InitAsDefaultInstance() {
  ::NFrameComm::_BevLogTest_default_instance_._instance.get_mutable()->item_ = const_cast< ::NFrameComm::BevLogTestItem*>(
      ::NFrameComm::BevLogTestItem::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BevLogTest::kTDtEventTimeFieldNumber;
const int BevLogTest::kSzVGameIPFieldNumber;
const int BevLogTest::kIIZoneAreaIDFieldNumber;
const int BevLogTest::kIITimeShiftFieldNumber;
const int BevLogTest::kItemFieldNumber;
const int BevLogTest::kItemListFieldNumber;
const int BevLogTest::kIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BevLogTest::BevLogTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameTestComm_2eproto::scc_info_BevLogTest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrameComm.BevLogTest)
}
BevLogTest::BevLogTest(const BevLogTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      id_list_(from.id_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szvgameip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szvgameip().size() > 0) {
    szvgameip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvgameip_);
  }
  if (from.has_item()) {
    item_ = new ::NFrameComm::BevLogTestItem(*from.item_);
  } else {
    item_ = NULL;
  }
  ::memcpy(&tdteventtime_, &from.tdteventtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&iitimeshift_) -
    reinterpret_cast<char*>(&tdteventtime_)) + sizeof(iitimeshift_));
  // @@protoc_insertion_point(copy_constructor:NFrameComm.BevLogTest)
}

void BevLogTest::SharedCtor() {
  szvgameip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&item_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iitimeshift_) -
      reinterpret_cast<char*>(&item_)) + sizeof(iitimeshift_));
}

BevLogTest::~BevLogTest() {
  // @@protoc_insertion_point(destructor:NFrameComm.BevLogTest)
  SharedDtor();
}

void BevLogTest::SharedDtor() {
  szvgameip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete item_;
}

void BevLogTest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BevLogTest::descriptor() {
  ::protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BevLogTest& BevLogTest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameTestComm_2eproto::scc_info_BevLogTest.base);
  return *internal_default_instance();
}


void BevLogTest::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrameComm.BevLogTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  id_list_.Clear();
  szvgameip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  ::memset(&tdteventtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iitimeshift_) -
      reinterpret_cast<char*>(&tdteventtime_)) + sizeof(iitimeshift_));
  _internal_metadata_.Clear();
}

bool BevLogTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrameComm.BevLogTest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 tDtEventTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tdteventtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szVGameIP = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szvgameip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szvgameip().data(), static_cast<int>(this->szvgameip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrameComm.BevLogTest.szVGameIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iIZoneAreaID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iizoneareaid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iITimeShift = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iitimeshift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrameComm.BevLogTestItem item = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFrameComm.BevLogTestItem item_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 id_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrameComm.BevLogTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrameComm.BevLogTest)
  return false;
#undef DO_
}

void BevLogTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrameComm.BevLogTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 tDtEventTime = 1;
  if (this->tdteventtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tdteventtime(), output);
  }

  // string szVGameIP = 2 [(.nanopb) = {
  if (this->szvgameip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvgameip().data(), static_cast<int>(this->szvgameip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.BevLogTest.szVGameIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szvgameip(), output);
  }

  // int32 iIZoneAreaID = 3;
  if (this->iizoneareaid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->iizoneareaid(), output);
  }

  // int32 iITimeShift = 4;
  if (this->iitimeshift() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->iitimeshift(), output);
  }

  // .NFrameComm.BevLogTestItem item = 5;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_item(), output);
  }

  // repeated .NFrameComm.BevLogTestItem item_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->item_list(static_cast<int>(i)),
      output);
  }

  // repeated int32 id_list = 7;
  if (this->id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrameComm.BevLogTest)
}

::google::protobuf::uint8* BevLogTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrameComm.BevLogTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 tDtEventTime = 1;
  if (this->tdteventtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->tdteventtime(), target);
  }

  // string szVGameIP = 2 [(.nanopb) = {
  if (this->szvgameip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szvgameip().data(), static_cast<int>(this->szvgameip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrameComm.BevLogTest.szVGameIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szvgameip(), target);
  }

  // int32 iIZoneAreaID = 3;
  if (this->iizoneareaid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->iizoneareaid(), target);
  }

  // int32 iITimeShift = 4;
  if (this->iitimeshift() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->iitimeshift(), target);
  }

  // .NFrameComm.BevLogTestItem item = 5;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_item(), deterministic, target);
  }

  // repeated .NFrameComm.BevLogTestItem item_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 id_list = 7;
  if (this->id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrameComm.BevLogTest)
  return target;
}

size_t BevLogTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrameComm.BevLogTest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFrameComm.BevLogTestItem item_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item_list(static_cast<int>(i)));
    }
  }

  // repeated int32 id_list = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string szVGameIP = 2 [(.nanopb) = {
  if (this->szvgameip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szvgameip());
  }

  // .NFrameComm.BevLogTestItem item = 5;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }

  // uint64 tDtEventTime = 1;
  if (this->tdteventtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tdteventtime());
  }

  // int32 iIZoneAreaID = 3;
  if (this->iizoneareaid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iizoneareaid());
  }

  // int32 iITimeShift = 4;
  if (this->iitimeshift() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iitimeshift());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BevLogTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrameComm.BevLogTest)
  GOOGLE_DCHECK_NE(&from, this);
  const BevLogTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BevLogTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrameComm.BevLogTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrameComm.BevLogTest)
    MergeFrom(*source);
  }
}

void BevLogTest::MergeFrom(const BevLogTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrameComm.BevLogTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  id_list_.MergeFrom(from.id_list_);
  if (from.szvgameip().size() > 0) {

    szvgameip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szvgameip_);
  }
  if (from.has_item()) {
    mutable_item()->::NFrameComm::BevLogTestItem::MergeFrom(from.item());
  }
  if (from.tdteventtime() != 0) {
    set_tdteventtime(from.tdteventtime());
  }
  if (from.iizoneareaid() != 0) {
    set_iizoneareaid(from.iizoneareaid());
  }
  if (from.iitimeshift() != 0) {
    set_iitimeshift(from.iitimeshift());
  }
}

void BevLogTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrameComm.BevLogTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BevLogTest::CopyFrom(const BevLogTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrameComm.BevLogTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BevLogTest::IsInitialized() const {
  return true;
}

void BevLogTest::Swap(BevLogTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BevLogTest::InternalSwap(BevLogTest* other) {
  using std::swap;
  CastToBase(&item_list_)->InternalSwap(CastToBase(&other->item_list_));
  id_list_.InternalSwap(&other->id_list_);
  szvgameip_.Swap(&other->szvgameip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(item_, other->item_);
  swap(tdteventtime_, other->tdteventtime_);
  swap(iizoneareaid_, other->iizoneareaid_);
  swap(iitimeshift_, other->iitimeshift_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BevLogTest::GetMetadata() const {
  protobuf_FrameTestComm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTestComm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFrameComm
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrameComm::wxWorkRobotTextTest* Arena::CreateMaybeMessage< ::NFrameComm::wxWorkRobotTextTest >(Arena* arena) {
  return Arena::CreateInternal< ::NFrameComm::wxWorkRobotTextTest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrameComm::WelfareNodeDBDataPddBuy* Arena::CreateMaybeMessage< ::NFrameComm::WelfareNodeDBDataPddBuy >(Arena* arena) {
  return Arena::CreateInternal< ::NFrameComm::WelfareNodeDBDataPddBuy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrameComm::WelfareNodeDBDataPddOpen* Arena::CreateMaybeMessage< ::NFrameComm::WelfareNodeDBDataPddOpen >(Arena* arena) {
  return Arena::CreateInternal< ::NFrameComm::WelfareNodeDBDataPddOpen >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrameComm::WelfareNodeDBDataGetTaskManual* Arena::CreateMaybeMessage< ::NFrameComm::WelfareNodeDBDataGetTaskManual >(Arena* arena) {
  return Arena::CreateInternal< ::NFrameComm::WelfareNodeDBDataGetTaskManual >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrameComm::WelfareNodeDBDataUnion* Arena::CreateMaybeMessage< ::NFrameComm::WelfareNodeDBDataUnion >(Arena* arena) {
  return Arena::CreateInternal< ::NFrameComm::WelfareNodeDBDataUnion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrameComm::BevLogTestItem* Arena::CreateMaybeMessage< ::NFrameComm::BevLogTestItem >(Arena* arena) {
  return Arena::CreateInternal< ::NFrameComm::BevLogTestItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrameComm::BevLogTest* Arena::CreateMaybeMessage< ::NFrameComm::BevLogTest >(Arena* arena) {
  return Arena::CreateInternal< ::NFrameComm::BevLogTest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
