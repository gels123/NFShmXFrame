// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameSqlData.proto

#include "FrameSqlData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_FrameSqlData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameSqlData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_storesvr_baseinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameSqlData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_storesvr_opres;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameSqlData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_storesvr_vk;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameSqlData_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_storesvr_wherecond;
}  // namespace protobuf_FrameSqlData_2eproto
namespace NFrame {
class storesvr_vkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_vk>
      _instance;
} _storesvr_vk_default_instance_;
class storesvr_wherecondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_wherecond>
      _instance;
} _storesvr_wherecond_default_instance_;
class storesvr_baseinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_baseinfo>
      _instance;
} _storesvr_baseinfo_default_instance_;
class storesvr_opresDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_opres>
      _instance;
} _storesvr_opres_default_instance_;
class storesvr_selDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_sel>
      _instance;
} _storesvr_sel_default_instance_;
class storesvr_sel_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_sel_res>
      _instance;
} _storesvr_sel_res_default_instance_;
class storesvr_selobjDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_selobj>
      _instance;
} _storesvr_selobj_default_instance_;
class storesvr_selobj_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_selobj_res>
      _instance;
} _storesvr_selobj_res_default_instance_;
class storesvr_insertobjDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_insertobj>
      _instance;
} _storesvr_insertobj_default_instance_;
class storesvr_insertobj_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_insertobj_res>
      _instance;
} _storesvr_insertobj_res_default_instance_;
class storesvr_insertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_insert>
      _instance;
} _storesvr_insert_default_instance_;
class storesvr_insert_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_insert_res>
      _instance;
} _storesvr_insert_res_default_instance_;
class storesvr_delDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_del>
      _instance;
} _storesvr_del_default_instance_;
class storesvr_del_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_del_res>
      _instance;
} _storesvr_del_res_default_instance_;
class storesvr_delobjDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_delobj>
      _instance;
} _storesvr_delobj_default_instance_;
class storesvr_delobj_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_delobj_res>
      _instance;
} _storesvr_delobj_res_default_instance_;
class storesvr_modDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_mod>
      _instance;
} _storesvr_mod_default_instance_;
class storesvr_mod_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_mod_res>
      _instance;
} _storesvr_mod_res_default_instance_;
class storesvr_modobjDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_modobj>
      _instance;
} _storesvr_modobj_default_instance_;
class storesvr_modobj_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_modobj_res>
      _instance;
} _storesvr_modobj_res_default_instance_;
class storesvr_updateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_update>
      _instance;
} _storesvr_update_default_instance_;
class storesvr_update_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_update_res>
      _instance;
} _storesvr_update_res_default_instance_;
class storesvr_updateobjDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_updateobj>
      _instance;
} _storesvr_updateobj_default_instance_;
class storesvr_updateobj_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_updateobj_res>
      _instance;
} _storesvr_updateobj_res_default_instance_;
class storesvr_executeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_execute>
      _instance;
} _storesvr_execute_default_instance_;
class storesvr_execute_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_execute_res>
      _instance;
} _storesvr_execute_res_default_instance_;
class storesvr_execute_moreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_execute_more>
      _instance;
} _storesvr_execute_more_default_instance_;
class storesvr_execute_more_resDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<storesvr_execute_more_res>
      _instance;
} _storesvr_execute_more_res_default_instance_;
}  // namespace NFrame
namespace protobuf_FrameSqlData_2eproto {
static void InitDefaultsstoresvr_vk() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_vk_default_instance_;
    new (ptr) ::NFrame::storesvr_vk();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_vk::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_storesvr_vk =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsstoresvr_vk}, {}};

static void InitDefaultsstoresvr_wherecond() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_wherecond_default_instance_;
    new (ptr) ::NFrame::storesvr_wherecond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_wherecond::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_storesvr_wherecond =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsstoresvr_wherecond}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_vk.base,}};

static void InitDefaultsstoresvr_baseinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_baseinfo_default_instance_;
    new (ptr) ::NFrame::storesvr_baseinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_baseinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_storesvr_baseinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsstoresvr_baseinfo}, {}};

static void InitDefaultsstoresvr_opres() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_opres_default_instance_;
    new (ptr) ::NFrame::storesvr_opres();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_opres::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_storesvr_opres =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsstoresvr_opres}, {}};

static void InitDefaultsstoresvr_sel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_sel_default_instance_;
    new (ptr) ::NFrame::storesvr_sel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_sel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_sel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_sel}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_wherecond.base,}};

static void InitDefaultsstoresvr_sel_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_sel_res_default_instance_;
    new (ptr) ::NFrame::storesvr_sel_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_sel_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_sel_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_sel_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_selobj() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_selobj_default_instance_;
    new (ptr) ::NFrame::storesvr_selobj();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_selobj::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_storesvr_selobj =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsstoresvr_selobj}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,}};

static void InitDefaultsstoresvr_selobj_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_selobj_res_default_instance_;
    new (ptr) ::NFrame::storesvr_selobj_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_selobj_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_selobj_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_selobj_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_insertobj() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_insertobj_default_instance_;
    new (ptr) ::NFrame::storesvr_insertobj();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_insertobj::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_storesvr_insertobj =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsstoresvr_insertobj}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,}};

static void InitDefaultsstoresvr_insertobj_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_insertobj_res_default_instance_;
    new (ptr) ::NFrame::storesvr_insertobj_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_insertobj_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_insertobj_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_insertobj_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_insert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_insert_default_instance_;
    new (ptr) ::NFrame::storesvr_insert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_insert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_storesvr_insert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsstoresvr_insert}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,}};

static void InitDefaultsstoresvr_insert_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_insert_res_default_instance_;
    new (ptr) ::NFrame::storesvr_insert_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_insert_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_insert_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_insert_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_del() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_del_default_instance_;
    new (ptr) ::NFrame::storesvr_del();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_del::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_del =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_del}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_wherecond.base,}};

static void InitDefaultsstoresvr_del_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_del_res_default_instance_;
    new (ptr) ::NFrame::storesvr_del_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_del_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_del_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_del_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_delobj() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_delobj_default_instance_;
    new (ptr) ::NFrame::storesvr_delobj();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_delobj::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_storesvr_delobj =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsstoresvr_delobj}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,}};

static void InitDefaultsstoresvr_delobj_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_delobj_res_default_instance_;
    new (ptr) ::NFrame::storesvr_delobj_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_delobj_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_delobj_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_delobj_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_mod() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_mod_default_instance_;
    new (ptr) ::NFrame::storesvr_mod();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_mod::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_mod =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_mod}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_wherecond.base,}};

static void InitDefaultsstoresvr_mod_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_mod_res_default_instance_;
    new (ptr) ::NFrame::storesvr_mod_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_mod_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_mod_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_mod_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_modobj() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_modobj_default_instance_;
    new (ptr) ::NFrame::storesvr_modobj();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_modobj::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_storesvr_modobj =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsstoresvr_modobj}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,}};

static void InitDefaultsstoresvr_modobj_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_modobj_res_default_instance_;
    new (ptr) ::NFrame::storesvr_modobj_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_modobj_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_modobj_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_modobj_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_update() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_update_default_instance_;
    new (ptr) ::NFrame::storesvr_update();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_update::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_update =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_update}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_wherecond.base,}};

static void InitDefaultsstoresvr_update_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_update_res_default_instance_;
    new (ptr) ::NFrame::storesvr_update_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_update_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_update_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_update_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_updateobj() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_updateobj_default_instance_;
    new (ptr) ::NFrame::storesvr_updateobj();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_updateobj::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_storesvr_updateobj =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsstoresvr_updateobj}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,}};

static void InitDefaultsstoresvr_updateobj_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_updateobj_res_default_instance_;
    new (ptr) ::NFrame::storesvr_updateobj_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_updateobj_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_updateobj_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_updateobj_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_execute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_execute_default_instance_;
    new (ptr) ::NFrame::storesvr_execute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_execute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_storesvr_execute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsstoresvr_execute}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,}};

static void InitDefaultsstoresvr_execute_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_execute_res_default_instance_;
    new (ptr) ::NFrame::storesvr_execute_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_execute_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_execute_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_execute_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

static void InitDefaultsstoresvr_execute_more() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_execute_more_default_instance_;
    new (ptr) ::NFrame::storesvr_execute_more();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_execute_more::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_storesvr_execute_more =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsstoresvr_execute_more}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,}};

static void InitDefaultsstoresvr_execute_more_res() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_storesvr_execute_more_res_default_instance_;
    new (ptr) ::NFrame::storesvr_execute_more_res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::storesvr_execute_more_res::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_storesvr_execute_more_res =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsstoresvr_execute_more_res}, {
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base,
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_vk.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_wherecond.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_baseinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_opres.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_sel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_sel_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_selobj.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_selobj_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_insertobj.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_insertobj_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_insert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_insert_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_del.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_del_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_delobj.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_delobj_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_mod.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_mod_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_modobj.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_modobj_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_update.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_update_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_updateobj.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_updateobj_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_execute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_execute_res.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_execute_more.base);
  ::google::protobuf::internal::InitSCC(&scc_info_storesvr_execute_more_res.base);
}

::google::protobuf::Metadata file_level_metadata[28];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_vk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_vk, column_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_vk, column_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_vk, cmp_operator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_vk, column_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_vk, logic_operator_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_wherecond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_wherecond, mod_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_wherecond, where_conds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_wherecond, where_additional_conds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_wherecond, private_keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_baseinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_baseinfo, dbname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_baseinfo, tbname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_baseinfo, clname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_baseinfo, sel_fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_baseinfo, max_records_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_baseinfo, package_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_opres, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_opres, mod_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_opres, err_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_opres, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_sel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_sel, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_sel, cond_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_sel_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_sel_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_sel_res, opres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_sel_res, is_lastbatch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_sel_res, row_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_sel_res, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_selobj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_selobj, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_selobj, mod_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_selobj, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_selobj_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_selobj_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_selobj_res, opres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_selobj_res, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insertobj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insertobj, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insertobj, mod_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insertobj, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insertobj_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insertobj_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insertobj_res, opres_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insert, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insert, mod_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insert, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insert_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insert_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_insert_res, opres_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_del, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_del, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_del, cond_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_del_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_del_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_del_res, opres_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_delobj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_delobj, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_delobj, mod_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_delobj, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_delobj_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_delobj_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_delobj_res, opres_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_mod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_mod, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_mod, cond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_mod, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_mod_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_mod_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_mod_res, opres_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_modobj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_modobj, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_modobj, mod_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_modobj, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_modobj_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_modobj_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_modobj_res, opres_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_update, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_update, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_update, cond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_update, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_update_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_update_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_update_res, opres_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_updateobj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_updateobj, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_updateobj, mod_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_updateobj, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_updateobj_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_updateobj_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_updateobj_res, opres_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute, mod_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_res, opres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_res, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_more, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_more, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_more, mod_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_more, record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_more_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_more_res, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_more_res, opres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_more_res, is_lastbatch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_more_res, row_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::storesvr_execute_more_res, record_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NFrame::storesvr_vk)},
  { 10, -1, sizeof(::NFrame::storesvr_wherecond)},
  { 19, -1, sizeof(::NFrame::storesvr_baseinfo)},
  { 30, -1, sizeof(::NFrame::storesvr_opres)},
  { 38, -1, sizeof(::NFrame::storesvr_sel)},
  { 45, -1, sizeof(::NFrame::storesvr_sel_res)},
  { 55, -1, sizeof(::NFrame::storesvr_selobj)},
  { 63, -1, sizeof(::NFrame::storesvr_selobj_res)},
  { 71, -1, sizeof(::NFrame::storesvr_insertobj)},
  { 79, -1, sizeof(::NFrame::storesvr_insertobj_res)},
  { 86, -1, sizeof(::NFrame::storesvr_insert)},
  { 94, -1, sizeof(::NFrame::storesvr_insert_res)},
  { 101, -1, sizeof(::NFrame::storesvr_del)},
  { 108, -1, sizeof(::NFrame::storesvr_del_res)},
  { 115, -1, sizeof(::NFrame::storesvr_delobj)},
  { 123, -1, sizeof(::NFrame::storesvr_delobj_res)},
  { 130, -1, sizeof(::NFrame::storesvr_mod)},
  { 138, -1, sizeof(::NFrame::storesvr_mod_res)},
  { 145, -1, sizeof(::NFrame::storesvr_modobj)},
  { 153, -1, sizeof(::NFrame::storesvr_modobj_res)},
  { 160, -1, sizeof(::NFrame::storesvr_update)},
  { 168, -1, sizeof(::NFrame::storesvr_update_res)},
  { 175, -1, sizeof(::NFrame::storesvr_updateobj)},
  { 183, -1, sizeof(::NFrame::storesvr_updateobj_res)},
  { 190, -1, sizeof(::NFrame::storesvr_execute)},
  { 198, -1, sizeof(::NFrame::storesvr_execute_res)},
  { 206, -1, sizeof(::NFrame::storesvr_execute_more)},
  { 214, -1, sizeof(::NFrame::storesvr_execute_more_res)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_vk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_wherecond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_baseinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_opres_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_sel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_sel_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_selobj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_selobj_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_insertobj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_insertobj_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_insert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_insert_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_del_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_del_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_delobj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_delobj_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_mod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_mod_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_modobj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_modobj_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_update_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_update_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_updateobj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_updateobj_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_execute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_execute_res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_execute_more_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_storesvr_execute_more_res_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FrameSqlData.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 28);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022FrameSqlData.proto\022\006NFrame\032\014nanopb.pro"
      "to\"\341\001\n\013storesvr_vk\022\023\n\013column_name\030\001 \001(\t\022"
      "\024\n\014column_value\030\002 \001(\t\0223\n\014cmp_operator\030\003 "
      "\001(\0162\035.NFrame.storesvr_cmp_operator\0221\n\013co"
      "lumn_type\030\004 \001(\0162\034.NFrame.storesvr_column"
      "_type\0227\n\016logic_operator\030\005 \001(\0162\037.NFrame.s"
      "toresvr_logic_operator:\006\222\?\003\230\002\001\"\215\001\n\022store"
      "svr_wherecond\022\017\n\007mod_key\030\001 \001(\004\022(\n\013where_"
      "conds\030\002 \003(\0132\023.NFrame.storesvr_vk\022\036\n\026wher"
      "e_additional_conds\030\003 \001(\t\022\024\n\014private_keys"
      "\030\004 \003(\t:\006\222\?\003\230\002\001\"\212\001\n\021storesvr_baseinfo\022\016\n\006"
      "dbname\030\001 \001(\t\022\016\n\006tbname\030\002 \001(\t\022\016\n\006clname\030\003"
      " \001(\t\022\022\n\nsel_fields\030\004 \003(\t\022\023\n\013max_records\030"
      "\005 \001(\r\022\024\n\014package_name\030\006 \001(\t:\006\222\?\003\230\002\001\"K\n\016s"
      "toresvr_opres\022\017\n\007mod_key\030\001 \001(\004\022\020\n\010err_co"
      "de\030\002 \001(\005\022\016\n\006errmsg\030\003 \001(\t:\006\222\?\003\230\002\001\"m\n\014stor"
      "esvr_sel\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame.stor"
      "esvr_baseinfo\022(\n\004cond\030\002 \001(\0132\032.NFrame.sto"
      "resvr_wherecond:\006\222\?\003\230\002\001\"\247\001\n\020storesvr_sel"
      "_res\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame.storesvr"
      "_baseinfo\022%\n\005opres\030\002 \001(\0132\026.NFrame.stores"
      "vr_opres\022\024\n\014is_lastbatch\030\003 \001(\010\022\021\n\trow_co"
      "unt\030\004 \001(\005\022\016\n\006record\030\005 \003(\014:\006\222\?\003\230\002\001\"g\n\017sto"
      "resvr_selobj\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame."
      "storesvr_baseinfo\022\017\n\007mod_key\030\002 \001(\004\022\016\n\006re"
      "cord\030\003 \001(\014:\006\222\?\003\230\002\001\"\201\001\n\023storesvr_selobj_r"
      "es\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame.storesvr_b"
      "aseinfo\022%\n\005opres\030\002 \001(\0132\026.NFrame.storesvr"
      "_opres\022\016\n\006record\030\003 \001(\014:\006\222\?\003\230\002\001\"j\n\022stores"
      "vr_insertobj\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame."
      "storesvr_baseinfo\022\017\n\007mod_key\030\002 \001(\004\022\016\n\006re"
      "cord\030\003 \001(\014:\006\222\?\003\230\002\001\"t\n\026storesvr_insertobj"
      "_res\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame.storesvr"
      "_baseinfo\022%\n\005opres\030\002 \001(\0132\026.NFrame.stores"
      "vr_opres:\006\222\?\003\230\002\001\"g\n\017storesvr_insert\022+\n\010b"
      "aseinfo\030\001 \001(\0132\031.NFrame.storesvr_baseinfo"
      "\022\017\n\007mod_key\030\002 \001(\004\022\016\n\006record\030\003 \003(\014:\006\222\?\003\230\002"
      "\001\"q\n\023storesvr_insert_res\022+\n\010baseinfo\030\001 \001"
      "(\0132\031.NFrame.storesvr_baseinfo\022%\n\005opres\030\002"
      " \001(\0132\026.NFrame.storesvr_opres:\006\222\?\003\230\002\001\"m\n\014"
      "storesvr_del\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame."
      "storesvr_baseinfo\022(\n\004cond\030\002 \001(\0132\032.NFrame"
      ".storesvr_wherecond:\006\222\?\003\230\002\001\"n\n\020storesvr_"
      "del_res\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame.store"
      "svr_baseinfo\022%\n\005opres\030\002 \001(\0132\026.NFrame.sto"
      "resvr_opres:\006\222\?\003\230\002\001\"g\n\017storesvr_delobj\022+"
      "\n\010baseinfo\030\001 \001(\0132\031.NFrame.storesvr_basei"
      "nfo\022\017\n\007mod_key\030\002 \001(\004\022\016\n\006record\030\003 \001(\014:\006\222\?"
      "\003\230\002\001\"q\n\023storesvr_delobj_res\022+\n\010baseinfo\030"
      "\001 \001(\0132\031.NFrame.storesvr_baseinfo\022%\n\005opre"
      "s\030\002 \001(\0132\026.NFrame.storesvr_opres:\006\222\?\003\230\002\001\""
      "}\n\014storesvr_mod\022+\n\010baseinfo\030\001 \001(\0132\031.NFra"
      "me.storesvr_baseinfo\022(\n\004cond\030\002 \001(\0132\032.NFr"
      "ame.storesvr_wherecond\022\016\n\006record\030\003 \001(\014:\006"
      "\222\?\003\230\002\001\"n\n\020storesvr_mod_res\022+\n\010baseinfo\030\001"
      " \001(\0132\031.NFrame.storesvr_baseinfo\022%\n\005opres"
      "\030\002 \001(\0132\026.NFrame.storesvr_opres:\006\222\?\003\230\002\001\"g"
      "\n\017storesvr_modobj\022+\n\010baseinfo\030\001 \001(\0132\031.NF"
      "rame.storesvr_baseinfo\022\017\n\007mod_key\030\002 \001(\004\022"
      "\016\n\006record\030\003 \001(\014:\006\222\?\003\230\002\001\"q\n\023storesvr_modo"
      "bj_res\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame.stores"
      "vr_baseinfo\022%\n\005opres\030\002 \001(\0132\026.NFrame.stor"
      "esvr_opres:\006\222\?\003\230\002\001\"\200\001\n\017storesvr_update\022+"
      "\n\010baseinfo\030\001 \001(\0132\031.NFrame.storesvr_basei"
      "nfo\022(\n\004cond\030\002 \001(\0132\032.NFrame.storesvr_wher"
      "econd\022\016\n\006record\030\003 \001(\014:\006\222\?\003\230\002\001\"q\n\023storesv"
      "r_update_res\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame."
      "storesvr_baseinfo\022%\n\005opres\030\002 \001(\0132\026.NFram"
      "e.storesvr_opres:\006\222\?\003\230\002\001\"j\n\022storesvr_upd"
      "ateobj\022+\n\010baseinfo\030\001 \001(\0132\031.NFrame.stores"
      "vr_baseinfo\022\017\n\007mod_key\030\002 \001(\004\022\016\n\006record\030\003"
      " \001(\014:\006\222\?\003\230\002\001\"t\n\026storesvr_updateobj_res\022+"
      "\n\010baseinfo\030\001 \001(\0132\031.NFrame.storesvr_basei"
      "nfo\022%\n\005opres\030\002 \001(\0132\026.NFrame.storesvr_opr"
      "es:\006\222\?\003\230\002\001\"h\n\020storesvr_execute\022+\n\010basein"
      "fo\030\001 \001(\0132\031.NFrame.storesvr_baseinfo\022\017\n\007m"
      "od_key\030\002 \001(\004\022\016\n\006record\030\003 \001(\014:\006\222\?\003\230\002\001\"\202\001\n"
      "\024storesvr_execute_res\022+\n\010baseinfo\030\001 \001(\0132"
      "\031.NFrame.storesvr_baseinfo\022%\n\005opres\030\002 \001("
      "\0132\026.NFrame.storesvr_opres\022\016\n\006record\030\003 \001("
      "\014:\006\222\?\003\230\002\001\"m\n\025storesvr_execute_more\022+\n\010ba"
      "seinfo\030\001 \001(\0132\031.NFrame.storesvr_baseinfo\022"
      "\017\n\007mod_key\030\002 \001(\004\022\016\n\006record\030\003 \001(\014:\006\222\?\003\230\002\001"
      "\"\260\001\n\031storesvr_execute_more_res\022+\n\010basein"
      "fo\030\001 \001(\0132\031.NFrame.storesvr_baseinfo\022%\n\005o"
      "pres\030\002 \001(\0132\026.NFrame.storesvr_opres\022\024\n\014is"
      "_lastbatch\030\003 \001(\010\022\021\n\trow_count\030\004 \001(\005\022\016\n\006r"
      "ecord\030\005 \003(\014:\006\222\?\003\230\002\001*:\n\017storesvr_dbtype\022\023"
      "\n\017E_DBTYPE_SQLITE\020\000\022\022\n\016E_DBTYPE_MYSQL\020\001*"
      "R\n\027storesvr_logic_operator\022\022\n\016E_LOGICOP_"
      "NONE\020\000\022\021\n\rE_LOGICOP_AND\020\001\022\020\n\014E_LOGICOP_O"
      "R\020\002*\230\001\n\025storesvr_cmp_operator\022\021\n\rE_CMPOP"
      "_EQUAL\020\000\022\023\n\017E_CMPOP_GREATER\020\001\022\020\n\014E_CMPOP"
      "_LESS\020\002\022\030\n\024E_CMPOP_GREATEREQUAL\020\003\022\025\n\021E_C"
      "MPOP_LESSEQUAL\020\004\022\024\n\020E_CMPOP_NOTEQUAL\020\005*E"
      "\n\024storesvr_column_type\022\024\n\020E_COLUMNTYPE_N"
      "UM\020\000\022\027\n\023E_COLUMNTYPE_STRING\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3877);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrameSqlData.proto", &protobuf_RegisterTypes);
  ::protobuf_nanopb_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrameSqlData_2eproto
namespace NFrame {
const ::google::protobuf::EnumDescriptor* storesvr_dbtype_descriptor() {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameSqlData_2eproto::file_level_enum_descriptors[0];
}
bool storesvr_dbtype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* storesvr_logic_operator_descriptor() {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameSqlData_2eproto::file_level_enum_descriptors[1];
}
bool storesvr_logic_operator_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* storesvr_cmp_operator_descriptor() {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameSqlData_2eproto::file_level_enum_descriptors[2];
}
bool storesvr_cmp_operator_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* storesvr_column_type_descriptor() {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameSqlData_2eproto::file_level_enum_descriptors[3];
}
bool storesvr_column_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void storesvr_vk::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_vk::kColumnNameFieldNumber;
const int storesvr_vk::kColumnValueFieldNumber;
const int storesvr_vk::kCmpOperatorFieldNumber;
const int storesvr_vk::kColumnTypeFieldNumber;
const int storesvr_vk::kLogicOperatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_vk::storesvr_vk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_vk.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_vk)
}
storesvr_vk::storesvr_vk(const storesvr_vk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  column_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.column_name().size() > 0) {
    column_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_name_);
  }
  column_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.column_value().size() > 0) {
    column_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_value_);
  }
  ::memcpy(&cmp_operator_, &from.cmp_operator_,
    static_cast<size_t>(reinterpret_cast<char*>(&logic_operator_) -
    reinterpret_cast<char*>(&cmp_operator_)) + sizeof(logic_operator_));
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_vk)
}

void storesvr_vk::SharedCtor() {
  column_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmp_operator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logic_operator_) -
      reinterpret_cast<char*>(&cmp_operator_)) + sizeof(logic_operator_));
}

storesvr_vk::~storesvr_vk() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_vk)
  SharedDtor();
}

void storesvr_vk::SharedDtor() {
  column_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void storesvr_vk::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_vk::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_vk& storesvr_vk::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_vk.base);
  return *internal_default_instance();
}


void storesvr_vk::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_vk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  column_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  column_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmp_operator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logic_operator_) -
      reinterpret_cast<char*>(&cmp_operator_)) + sizeof(logic_operator_));
  _internal_metadata_.Clear();
}

bool storesvr_vk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_vk)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string column_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_column_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->column_name().data(), static_cast<int>(this->column_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.storesvr_vk.column_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string column_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_column_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->column_value().data(), static_cast<int>(this->column_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.storesvr_vk.column_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_cmp_operator cmp_operator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmp_operator(static_cast< ::NFrame::storesvr_cmp_operator >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_column_type column_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_column_type(static_cast< ::NFrame::storesvr_column_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_logic_operator logic_operator = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_logic_operator(static_cast< ::NFrame::storesvr_logic_operator >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_vk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_vk)
  return false;
#undef DO_
}

void storesvr_vk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_vk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string column_name = 1;
  if (this->column_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->column_name().data(), static_cast<int>(this->column_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_vk.column_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->column_name(), output);
  }

  // string column_value = 2;
  if (this->column_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->column_value().data(), static_cast<int>(this->column_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_vk.column_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->column_value(), output);
  }

  // .NFrame.storesvr_cmp_operator cmp_operator = 3;
  if (this->cmp_operator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->cmp_operator(), output);
  }

  // .NFrame.storesvr_column_type column_type = 4;
  if (this->column_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->column_type(), output);
  }

  // .NFrame.storesvr_logic_operator logic_operator = 5;
  if (this->logic_operator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->logic_operator(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_vk)
}

::google::protobuf::uint8* storesvr_vk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_vk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string column_name = 1;
  if (this->column_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->column_name().data(), static_cast<int>(this->column_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_vk.column_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->column_name(), target);
  }

  // string column_value = 2;
  if (this->column_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->column_value().data(), static_cast<int>(this->column_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_vk.column_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->column_value(), target);
  }

  // .NFrame.storesvr_cmp_operator cmp_operator = 3;
  if (this->cmp_operator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->cmp_operator(), target);
  }

  // .NFrame.storesvr_column_type column_type = 4;
  if (this->column_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->column_type(), target);
  }

  // .NFrame.storesvr_logic_operator logic_operator = 5;
  if (this->logic_operator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->logic_operator(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_vk)
  return target;
}

size_t storesvr_vk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_vk)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string column_name = 1;
  if (this->column_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->column_name());
  }

  // string column_value = 2;
  if (this->column_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->column_value());
  }

  // .NFrame.storesvr_cmp_operator cmp_operator = 3;
  if (this->cmp_operator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmp_operator());
  }

  // .NFrame.storesvr_column_type column_type = 4;
  if (this->column_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->column_type());
  }

  // .NFrame.storesvr_logic_operator logic_operator = 5;
  if (this->logic_operator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->logic_operator());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_vk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_vk)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_vk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_vk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_vk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_vk)
    MergeFrom(*source);
  }
}

void storesvr_vk::MergeFrom(const storesvr_vk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_vk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.column_name().size() > 0) {

    column_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_name_);
  }
  if (from.column_value().size() > 0) {

    column_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.column_value_);
  }
  if (from.cmp_operator() != 0) {
    set_cmp_operator(from.cmp_operator());
  }
  if (from.column_type() != 0) {
    set_column_type(from.column_type());
  }
  if (from.logic_operator() != 0) {
    set_logic_operator(from.logic_operator());
  }
}

void storesvr_vk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_vk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_vk::CopyFrom(const storesvr_vk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_vk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_vk::IsInitialized() const {
  return true;
}

void storesvr_vk::Swap(storesvr_vk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_vk::InternalSwap(storesvr_vk* other) {
  using std::swap;
  column_name_.Swap(&other->column_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  column_value_.Swap(&other->column_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmp_operator_, other->cmp_operator_);
  swap(column_type_, other->column_type_);
  swap(logic_operator_, other->logic_operator_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_vk::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_wherecond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_wherecond::kModKeyFieldNumber;
const int storesvr_wherecond::kWhereCondsFieldNumber;
const int storesvr_wherecond::kWhereAdditionalCondsFieldNumber;
const int storesvr_wherecond::kPrivateKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_wherecond::storesvr_wherecond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_wherecond.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_wherecond)
}
storesvr_wherecond::storesvr_wherecond(const storesvr_wherecond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      where_conds_(from.where_conds_),
      private_keys_(from.private_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  where_additional_conds_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.where_additional_conds().size() > 0) {
    where_additional_conds_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.where_additional_conds_);
  }
  mod_key_ = from.mod_key_;
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_wherecond)
}

void storesvr_wherecond::SharedCtor() {
  where_additional_conds_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mod_key_ = GOOGLE_ULONGLONG(0);
}

storesvr_wherecond::~storesvr_wherecond() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_wherecond)
  SharedDtor();
}

void storesvr_wherecond::SharedDtor() {
  where_additional_conds_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void storesvr_wherecond::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_wherecond::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_wherecond& storesvr_wherecond::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_wherecond.base);
  return *internal_default_instance();
}


void storesvr_wherecond::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_wherecond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  where_conds_.Clear();
  private_keys_.Clear();
  where_additional_conds_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mod_key_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool storesvr_wherecond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_wherecond)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 mod_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFrame.storesvr_vk where_conds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_where_conds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string where_additional_conds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_where_additional_conds()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->where_additional_conds().data(), static_cast<int>(this->where_additional_conds().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.storesvr_wherecond.where_additional_conds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string private_keys = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_private_keys()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->private_keys(this->private_keys_size() - 1).data(),
            static_cast<int>(this->private_keys(this->private_keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.storesvr_wherecond.private_keys"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_wherecond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_wherecond)
  return false;
#undef DO_
}

void storesvr_wherecond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_wherecond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mod_key = 1;
  if (this->mod_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mod_key(), output);
  }

  // repeated .NFrame.storesvr_vk where_conds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->where_conds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->where_conds(static_cast<int>(i)),
      output);
  }

  // string where_additional_conds = 3;
  if (this->where_additional_conds().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->where_additional_conds().data(), static_cast<int>(this->where_additional_conds().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_wherecond.where_additional_conds");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->where_additional_conds(), output);
  }

  // repeated string private_keys = 4;
  for (int i = 0, n = this->private_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_keys(i).data(), static_cast<int>(this->private_keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_wherecond.private_keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->private_keys(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_wherecond)
}

::google::protobuf::uint8* storesvr_wherecond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_wherecond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mod_key = 1;
  if (this->mod_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mod_key(), target);
  }

  // repeated .NFrame.storesvr_vk where_conds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->where_conds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->where_conds(static_cast<int>(i)), deterministic, target);
  }

  // string where_additional_conds = 3;
  if (this->where_additional_conds().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->where_additional_conds().data(), static_cast<int>(this->where_additional_conds().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_wherecond.where_additional_conds");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->where_additional_conds(), target);
  }

  // repeated string private_keys = 4;
  for (int i = 0, n = this->private_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_keys(i).data(), static_cast<int>(this->private_keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_wherecond.private_keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->private_keys(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_wherecond)
  return target;
}

size_t storesvr_wherecond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_wherecond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFrame.storesvr_vk where_conds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->where_conds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->where_conds(static_cast<int>(i)));
    }
  }

  // repeated string private_keys = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->private_keys_size());
  for (int i = 0, n = this->private_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->private_keys(i));
  }

  // string where_additional_conds = 3;
  if (this->where_additional_conds().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->where_additional_conds());
  }

  // uint64 mod_key = 1;
  if (this->mod_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mod_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_wherecond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_wherecond)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_wherecond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_wherecond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_wherecond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_wherecond)
    MergeFrom(*source);
  }
}

void storesvr_wherecond::MergeFrom(const storesvr_wherecond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_wherecond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  where_conds_.MergeFrom(from.where_conds_);
  private_keys_.MergeFrom(from.private_keys_);
  if (from.where_additional_conds().size() > 0) {

    where_additional_conds_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.where_additional_conds_);
  }
  if (from.mod_key() != 0) {
    set_mod_key(from.mod_key());
  }
}

void storesvr_wherecond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_wherecond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_wherecond::CopyFrom(const storesvr_wherecond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_wherecond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_wherecond::IsInitialized() const {
  return true;
}

void storesvr_wherecond::Swap(storesvr_wherecond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_wherecond::InternalSwap(storesvr_wherecond* other) {
  using std::swap;
  CastToBase(&where_conds_)->InternalSwap(CastToBase(&other->where_conds_));
  private_keys_.InternalSwap(CastToBase(&other->private_keys_));
  where_additional_conds_.Swap(&other->where_additional_conds_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mod_key_, other->mod_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_wherecond::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_baseinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_baseinfo::kDbnameFieldNumber;
const int storesvr_baseinfo::kTbnameFieldNumber;
const int storesvr_baseinfo::kClnameFieldNumber;
const int storesvr_baseinfo::kSelFieldsFieldNumber;
const int storesvr_baseinfo::kMaxRecordsFieldNumber;
const int storesvr_baseinfo::kPackageNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_baseinfo::storesvr_baseinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_baseinfo)
}
storesvr_baseinfo::storesvr_baseinfo(const storesvr_baseinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sel_fields_(from.sel_fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dbname().size() > 0) {
    dbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dbname_);
  }
  tbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tbname().size() > 0) {
    tbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tbname_);
  }
  clname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clname().size() > 0) {
    clname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clname_);
  }
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package_name().size() > 0) {
    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  max_records_ = from.max_records_;
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_baseinfo)
}

void storesvr_baseinfo::SharedCtor() {
  dbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_records_ = 0u;
}

storesvr_baseinfo::~storesvr_baseinfo() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_baseinfo)
  SharedDtor();
}

void storesvr_baseinfo::SharedDtor() {
  dbname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tbname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void storesvr_baseinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_baseinfo::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_baseinfo& storesvr_baseinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_baseinfo.base);
  return *internal_default_instance();
}


void storesvr_baseinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_baseinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sel_fields_.Clear();
  dbname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tbname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_records_ = 0u;
  _internal_metadata_.Clear();
}

bool storesvr_baseinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_baseinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string dbname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dbname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dbname().data(), static_cast<int>(this->dbname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.storesvr_baseinfo.dbname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tbname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tbname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tbname().data(), static_cast<int>(this->tbname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.storesvr_baseinfo.tbname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string clname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clname().data(), static_cast<int>(this->clname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.storesvr_baseinfo.clname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sel_fields = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_sel_fields()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sel_fields(this->sel_fields_size() - 1).data(),
            static_cast<int>(this->sel_fields(this->sel_fields_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.storesvr_baseinfo.sel_fields"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_records = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_records_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.storesvr_baseinfo.package_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_baseinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_baseinfo)
  return false;
#undef DO_
}

void storesvr_baseinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_baseinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dbname = 1;
  if (this->dbname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dbname().data(), static_cast<int>(this->dbname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_baseinfo.dbname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dbname(), output);
  }

  // string tbname = 2;
  if (this->tbname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tbname().data(), static_cast<int>(this->tbname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_baseinfo.tbname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tbname(), output);
  }

  // string clname = 3;
  if (this->clname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clname().data(), static_cast<int>(this->clname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_baseinfo.clname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clname(), output);
  }

  // repeated string sel_fields = 4;
  for (int i = 0, n = this->sel_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sel_fields(i).data(), static_cast<int>(this->sel_fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_baseinfo.sel_fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->sel_fields(i), output);
  }

  // uint32 max_records = 5;
  if (this->max_records() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->max_records(), output);
  }

  // string package_name = 6;
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_baseinfo.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->package_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_baseinfo)
}

::google::protobuf::uint8* storesvr_baseinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_baseinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dbname = 1;
  if (this->dbname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dbname().data(), static_cast<int>(this->dbname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_baseinfo.dbname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dbname(), target);
  }

  // string tbname = 2;
  if (this->tbname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tbname().data(), static_cast<int>(this->tbname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_baseinfo.tbname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tbname(), target);
  }

  // string clname = 3;
  if (this->clname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clname().data(), static_cast<int>(this->clname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_baseinfo.clname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clname(), target);
  }

  // repeated string sel_fields = 4;
  for (int i = 0, n = this->sel_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sel_fields(i).data(), static_cast<int>(this->sel_fields(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_baseinfo.sel_fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->sel_fields(i), target);
  }

  // uint32 max_records = 5;
  if (this->max_records() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->max_records(), target);
  }

  // string package_name = 6;
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_baseinfo.package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->package_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_baseinfo)
  return target;
}

size_t storesvr_baseinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_baseinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string sel_fields = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sel_fields_size());
  for (int i = 0, n = this->sel_fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->sel_fields(i));
  }

  // string dbname = 1;
  if (this->dbname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dbname());
  }

  // string tbname = 2;
  if (this->tbname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tbname());
  }

  // string clname = 3;
  if (this->clname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clname());
  }

  // string package_name = 6;
  if (this->package_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package_name());
  }

  // uint32 max_records = 5;
  if (this->max_records() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_records());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_baseinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_baseinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_baseinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_baseinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_baseinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_baseinfo)
    MergeFrom(*source);
  }
}

void storesvr_baseinfo::MergeFrom(const storesvr_baseinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_baseinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sel_fields_.MergeFrom(from.sel_fields_);
  if (from.dbname().size() > 0) {

    dbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dbname_);
  }
  if (from.tbname().size() > 0) {

    tbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tbname_);
  }
  if (from.clname().size() > 0) {

    clname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clname_);
  }
  if (from.package_name().size() > 0) {

    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  if (from.max_records() != 0) {
    set_max_records(from.max_records());
  }
}

void storesvr_baseinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_baseinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_baseinfo::CopyFrom(const storesvr_baseinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_baseinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_baseinfo::IsInitialized() const {
  return true;
}

void storesvr_baseinfo::Swap(storesvr_baseinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_baseinfo::InternalSwap(storesvr_baseinfo* other) {
  using std::swap;
  sel_fields_.InternalSwap(CastToBase(&other->sel_fields_));
  dbname_.Swap(&other->dbname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tbname_.Swap(&other->tbname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  clname_.Swap(&other->clname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_name_.Swap(&other->package_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_records_, other->max_records_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_baseinfo::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_opres::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_opres::kModKeyFieldNumber;
const int storesvr_opres::kErrCodeFieldNumber;
const int storesvr_opres::kErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_opres::storesvr_opres()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_opres)
}
storesvr_opres::storesvr_opres(const storesvr_opres& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  ::memcpy(&mod_key_, &from.mod_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&err_code_) -
    reinterpret_cast<char*>(&mod_key_)) + sizeof(err_code_));
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_opres)
}

void storesvr_opres::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mod_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&mod_key_)) + sizeof(err_code_));
}

storesvr_opres::~storesvr_opres() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_opres)
  SharedDtor();
}

void storesvr_opres::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void storesvr_opres::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_opres::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_opres& storesvr_opres::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_opres.base);
  return *internal_default_instance();
}


void storesvr_opres::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_opres)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mod_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&err_code_) -
      reinterpret_cast<char*>(&mod_key_)) + sizeof(err_code_));
  _internal_metadata_.Clear();
}

bool storesvr_opres::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_opres)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 mod_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 err_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFrame.storesvr_opres.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_opres)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_opres)
  return false;
#undef DO_
}

void storesvr_opres::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_opres)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mod_key = 1;
  if (this->mod_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mod_key(), output);
  }

  // int32 err_code = 2;
  if (this->err_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->err_code(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_opres.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_opres)
}

::google::protobuf::uint8* storesvr_opres::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_opres)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mod_key = 1;
  if (this->mod_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mod_key(), target);
  }

  // int32 err_code = 2;
  if (this->err_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->err_code(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFrame.storesvr_opres.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_opres)
  return target;
}

size_t storesvr_opres::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_opres)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // uint64 mod_key = 1;
  if (this->mod_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mod_key());
  }

  // int32 err_code = 2;
  if (this->err_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_opres::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_opres)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_opres* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_opres>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_opres)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_opres)
    MergeFrom(*source);
  }
}

void storesvr_opres::MergeFrom(const storesvr_opres& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_opres)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.mod_key() != 0) {
    set_mod_key(from.mod_key());
  }
  if (from.err_code() != 0) {
    set_err_code(from.err_code());
  }
}

void storesvr_opres::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_opres)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_opres::CopyFrom(const storesvr_opres& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_opres)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_opres::IsInitialized() const {
  return true;
}

void storesvr_opres::Swap(storesvr_opres* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_opres::InternalSwap(storesvr_opres* other) {
  using std::swap;
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mod_key_, other->mod_key_);
  swap(err_code_, other->err_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_opres::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_sel::InitAsDefaultInstance() {
  ::NFrame::_storesvr_sel_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_sel_default_instance_._instance.get_mutable()->cond_ = const_cast< ::NFrame::storesvr_wherecond*>(
      ::NFrame::storesvr_wherecond::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_sel::kBaseinfoFieldNumber;
const int storesvr_sel::kCondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_sel::storesvr_sel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_sel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_sel)
}
storesvr_sel::storesvr_sel(const storesvr_sel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_cond()) {
    cond_ = new ::NFrame::storesvr_wherecond(*from.cond_);
  } else {
    cond_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_sel)
}

void storesvr_sel::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cond_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(cond_));
}

storesvr_sel::~storesvr_sel() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_sel)
  SharedDtor();
}

void storesvr_sel::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete cond_;
}

void storesvr_sel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_sel::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_sel& storesvr_sel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_sel.base);
  return *internal_default_instance();
}


void storesvr_sel::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_sel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_sel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_sel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_wherecond cond = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_sel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_sel)
  return false;
#undef DO_
}

void storesvr_sel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_sel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cond(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_sel)
}

::google::protobuf::uint8* storesvr_sel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_sel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cond(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_sel)
  return target;
}

size_t storesvr_sel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_sel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cond_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_sel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_sel)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_sel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_sel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_sel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_sel)
    MergeFrom(*source);
  }
}

void storesvr_sel::MergeFrom(const storesvr_sel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_sel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_cond()) {
    mutable_cond()->::NFrame::storesvr_wherecond::MergeFrom(from.cond());
  }
}

void storesvr_sel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_sel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_sel::CopyFrom(const storesvr_sel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_sel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_sel::IsInitialized() const {
  return true;
}

void storesvr_sel::Swap(storesvr_sel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_sel::InternalSwap(storesvr_sel* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(cond_, other->cond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_sel::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_sel_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_sel_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_sel_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_sel_res::kBaseinfoFieldNumber;
const int storesvr_sel_res::kOpresFieldNumber;
const int storesvr_sel_res::kIsLastbatchFieldNumber;
const int storesvr_sel_res::kRowCountFieldNumber;
const int storesvr_sel_res::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_sel_res::storesvr_sel_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_sel_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_sel_res)
}
storesvr_sel_res::storesvr_sel_res(const storesvr_sel_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_(from.record_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  ::memcpy(&is_lastbatch_, &from.is_lastbatch_,
    static_cast<size_t>(reinterpret_cast<char*>(&row_count_) -
    reinterpret_cast<char*>(&is_lastbatch_)) + sizeof(row_count_));
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_sel_res)
}

void storesvr_sel_res::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_count_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(row_count_));
}

storesvr_sel_res::~storesvr_sel_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_sel_res)
  SharedDtor();
}

void storesvr_sel_res::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_sel_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_sel_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_sel_res& storesvr_sel_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_sel_res.base);
  return *internal_default_instance();
}


void storesvr_sel_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_sel_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.Clear();
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  ::memset(&is_lastbatch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_count_) -
      reinterpret_cast<char*>(&is_lastbatch_)) + sizeof(row_count_));
  _internal_metadata_.Clear();
}

bool storesvr_sel_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_sel_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_lastbatch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_lastbatch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 row_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes record = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_sel_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_sel_res)
  return false;
#undef DO_
}

void storesvr_sel_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_sel_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  // bool is_lastbatch = 3;
  if (this->is_lastbatch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_lastbatch(), output);
  }

  // int32 row_count = 4;
  if (this->row_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->row_count(), output);
  }

  // repeated bytes record = 5;
  for (int i = 0, n = this->record_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->record(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_sel_res)
}

::google::protobuf::uint8* storesvr_sel_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_sel_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  // bool is_lastbatch = 3;
  if (this->is_lastbatch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_lastbatch(), target);
  }

  // int32 row_count = 4;
  if (this->row_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->row_count(), target);
  }

  // repeated bytes record = 5;
  for (int i = 0, n = this->record_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(5, this->record(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_sel_res)
  return target;
}

size_t storesvr_sel_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_sel_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes record = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->record_size());
  for (int i = 0, n = this->record_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->record(i));
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  // bool is_lastbatch = 3;
  if (this->is_lastbatch() != 0) {
    total_size += 1 + 1;
  }

  // int32 row_count = 4;
  if (this->row_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_sel_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_sel_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_sel_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_sel_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_sel_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_sel_res)
    MergeFrom(*source);
  }
}

void storesvr_sel_res::MergeFrom(const storesvr_sel_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_sel_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_.MergeFrom(from.record_);
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
  if (from.is_lastbatch() != 0) {
    set_is_lastbatch(from.is_lastbatch());
  }
  if (from.row_count() != 0) {
    set_row_count(from.row_count());
  }
}

void storesvr_sel_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_sel_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_sel_res::CopyFrom(const storesvr_sel_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_sel_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_sel_res::IsInitialized() const {
  return true;
}

void storesvr_sel_res::Swap(storesvr_sel_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_sel_res::InternalSwap(storesvr_sel_res* other) {
  using std::swap;
  record_.InternalSwap(CastToBase(&other->record_));
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  swap(is_lastbatch_, other->is_lastbatch_);
  swap(row_count_, other->row_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_sel_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_selobj::InitAsDefaultInstance() {
  ::NFrame::_storesvr_selobj_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_selobj::kBaseinfoFieldNumber;
const int storesvr_selobj::kModKeyFieldNumber;
const int storesvr_selobj::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_selobj::storesvr_selobj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_selobj.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_selobj)
}
storesvr_selobj::storesvr_selobj(const storesvr_selobj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  mod_key_ = from.mod_key_;
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_selobj)
}

void storesvr_selobj::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_key_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(mod_key_));
}

storesvr_selobj::~storesvr_selobj() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_selobj)
  SharedDtor();
}

void storesvr_selobj::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
}

void storesvr_selobj::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_selobj::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_selobj& storesvr_selobj::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_selobj.base);
  return *internal_default_instance();
}


void storesvr_selobj::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_selobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  mod_key_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool storesvr_selobj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_selobj)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mod_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_selobj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_selobj)
  return false;
#undef DO_
}

void storesvr_selobj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_selobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mod_key(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_selobj)
}

::google::protobuf::uint8* storesvr_selobj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_selobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mod_key(), target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_selobj)
  return target;
}

size_t storesvr_selobj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_selobj)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mod_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_selobj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_selobj)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_selobj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_selobj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_selobj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_selobj)
    MergeFrom(*source);
  }
}

void storesvr_selobj::MergeFrom(const storesvr_selobj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_selobj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.mod_key() != 0) {
    set_mod_key(from.mod_key());
  }
}

void storesvr_selobj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_selobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_selobj::CopyFrom(const storesvr_selobj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_selobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_selobj::IsInitialized() const {
  return true;
}

void storesvr_selobj::Swap(storesvr_selobj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_selobj::InternalSwap(storesvr_selobj* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(mod_key_, other->mod_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_selobj::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_selobj_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_selobj_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_selobj_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_selobj_res::kBaseinfoFieldNumber;
const int storesvr_selobj_res::kOpresFieldNumber;
const int storesvr_selobj_res::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_selobj_res::storesvr_selobj_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_selobj_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_selobj_res)
}
storesvr_selobj_res::storesvr_selobj_res(const storesvr_selobj_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_selobj_res)
}

void storesvr_selobj_res::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opres_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(opres_));
}

storesvr_selobj_res::~storesvr_selobj_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_selobj_res)
  SharedDtor();
}

void storesvr_selobj_res::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_selobj_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_selobj_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_selobj_res& storesvr_selobj_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_selobj_res.base);
  return *internal_default_instance();
}


void storesvr_selobj_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_selobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_selobj_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_selobj_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_selobj_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_selobj_res)
  return false;
#undef DO_
}

void storesvr_selobj_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_selobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_selobj_res)
}

::google::protobuf::uint8* storesvr_selobj_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_selobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_selobj_res)
  return target;
}

size_t storesvr_selobj_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_selobj_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_selobj_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_selobj_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_selobj_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_selobj_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_selobj_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_selobj_res)
    MergeFrom(*source);
  }
}

void storesvr_selobj_res::MergeFrom(const storesvr_selobj_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_selobj_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
}

void storesvr_selobj_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_selobj_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_selobj_res::CopyFrom(const storesvr_selobj_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_selobj_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_selobj_res::IsInitialized() const {
  return true;
}

void storesvr_selobj_res::Swap(storesvr_selobj_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_selobj_res::InternalSwap(storesvr_selobj_res* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_selobj_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_insertobj::InitAsDefaultInstance() {
  ::NFrame::_storesvr_insertobj_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_insertobj::kBaseinfoFieldNumber;
const int storesvr_insertobj::kModKeyFieldNumber;
const int storesvr_insertobj::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_insertobj::storesvr_insertobj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_insertobj.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_insertobj)
}
storesvr_insertobj::storesvr_insertobj(const storesvr_insertobj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  mod_key_ = from.mod_key_;
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_insertobj)
}

void storesvr_insertobj::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_key_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(mod_key_));
}

storesvr_insertobj::~storesvr_insertobj() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_insertobj)
  SharedDtor();
}

void storesvr_insertobj::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
}

void storesvr_insertobj::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_insertobj::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_insertobj& storesvr_insertobj::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_insertobj.base);
  return *internal_default_instance();
}


void storesvr_insertobj::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_insertobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  mod_key_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool storesvr_insertobj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_insertobj)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mod_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_insertobj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_insertobj)
  return false;
#undef DO_
}

void storesvr_insertobj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_insertobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mod_key(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_insertobj)
}

::google::protobuf::uint8* storesvr_insertobj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_insertobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mod_key(), target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_insertobj)
  return target;
}

size_t storesvr_insertobj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_insertobj)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mod_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_insertobj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_insertobj)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_insertobj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_insertobj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_insertobj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_insertobj)
    MergeFrom(*source);
  }
}

void storesvr_insertobj::MergeFrom(const storesvr_insertobj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_insertobj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.mod_key() != 0) {
    set_mod_key(from.mod_key());
  }
}

void storesvr_insertobj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_insertobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_insertobj::CopyFrom(const storesvr_insertobj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_insertobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_insertobj::IsInitialized() const {
  return true;
}

void storesvr_insertobj::Swap(storesvr_insertobj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_insertobj::InternalSwap(storesvr_insertobj* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(mod_key_, other->mod_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_insertobj::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_insertobj_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_insertobj_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_insertobj_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_insertobj_res::kBaseinfoFieldNumber;
const int storesvr_insertobj_res::kOpresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_insertobj_res::storesvr_insertobj_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_insertobj_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_insertobj_res)
}
storesvr_insertobj_res::storesvr_insertobj_res(const storesvr_insertobj_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_insertobj_res)
}

void storesvr_insertobj_res::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opres_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(opres_));
}

storesvr_insertobj_res::~storesvr_insertobj_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_insertobj_res)
  SharedDtor();
}

void storesvr_insertobj_res::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_insertobj_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_insertobj_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_insertobj_res& storesvr_insertobj_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_insertobj_res.base);
  return *internal_default_instance();
}


void storesvr_insertobj_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_insertobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_insertobj_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_insertobj_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_insertobj_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_insertobj_res)
  return false;
#undef DO_
}

void storesvr_insertobj_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_insertobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_insertobj_res)
}

::google::protobuf::uint8* storesvr_insertobj_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_insertobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_insertobj_res)
  return target;
}

size_t storesvr_insertobj_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_insertobj_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_insertobj_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_insertobj_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_insertobj_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_insertobj_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_insertobj_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_insertobj_res)
    MergeFrom(*source);
  }
}

void storesvr_insertobj_res::MergeFrom(const storesvr_insertobj_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_insertobj_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
}

void storesvr_insertobj_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_insertobj_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_insertobj_res::CopyFrom(const storesvr_insertobj_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_insertobj_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_insertobj_res::IsInitialized() const {
  return true;
}

void storesvr_insertobj_res::Swap(storesvr_insertobj_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_insertobj_res::InternalSwap(storesvr_insertobj_res* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_insertobj_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_insert::InitAsDefaultInstance() {
  ::NFrame::_storesvr_insert_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_insert::kBaseinfoFieldNumber;
const int storesvr_insert::kModKeyFieldNumber;
const int storesvr_insert::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_insert::storesvr_insert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_insert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_insert)
}
storesvr_insert::storesvr_insert(const storesvr_insert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_(from.record_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  mod_key_ = from.mod_key_;
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_insert)
}

void storesvr_insert::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_key_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(mod_key_));
}

storesvr_insert::~storesvr_insert() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_insert)
  SharedDtor();
}

void storesvr_insert::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
}

void storesvr_insert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_insert::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_insert& storesvr_insert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_insert.base);
  return *internal_default_instance();
}


void storesvr_insert::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_insert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.Clear();
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  mod_key_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool storesvr_insert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_insert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mod_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_insert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_insert)
  return false;
#undef DO_
}

void storesvr_insert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_insert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mod_key(), output);
  }

  // repeated bytes record = 3;
  for (int i = 0, n = this->record_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->record(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_insert)
}

::google::protobuf::uint8* storesvr_insert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_insert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mod_key(), target);
  }

  // repeated bytes record = 3;
  for (int i = 0, n = this->record_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->record(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_insert)
  return target;
}

size_t storesvr_insert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_insert)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes record = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->record_size());
  for (int i = 0, n = this->record_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->record(i));
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mod_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_insert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_insert)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_insert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_insert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_insert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_insert)
    MergeFrom(*source);
  }
}

void storesvr_insert::MergeFrom(const storesvr_insert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_insert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_.MergeFrom(from.record_);
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.mod_key() != 0) {
    set_mod_key(from.mod_key());
  }
}

void storesvr_insert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_insert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_insert::CopyFrom(const storesvr_insert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_insert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_insert::IsInitialized() const {
  return true;
}

void storesvr_insert::Swap(storesvr_insert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_insert::InternalSwap(storesvr_insert* other) {
  using std::swap;
  record_.InternalSwap(CastToBase(&other->record_));
  swap(baseinfo_, other->baseinfo_);
  swap(mod_key_, other->mod_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_insert::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_insert_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_insert_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_insert_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_insert_res::kBaseinfoFieldNumber;
const int storesvr_insert_res::kOpresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_insert_res::storesvr_insert_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_insert_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_insert_res)
}
storesvr_insert_res::storesvr_insert_res(const storesvr_insert_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_insert_res)
}

void storesvr_insert_res::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opres_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(opres_));
}

storesvr_insert_res::~storesvr_insert_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_insert_res)
  SharedDtor();
}

void storesvr_insert_res::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_insert_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_insert_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_insert_res& storesvr_insert_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_insert_res.base);
  return *internal_default_instance();
}


void storesvr_insert_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_insert_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_insert_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_insert_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_insert_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_insert_res)
  return false;
#undef DO_
}

void storesvr_insert_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_insert_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_insert_res)
}

::google::protobuf::uint8* storesvr_insert_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_insert_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_insert_res)
  return target;
}

size_t storesvr_insert_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_insert_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_insert_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_insert_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_insert_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_insert_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_insert_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_insert_res)
    MergeFrom(*source);
  }
}

void storesvr_insert_res::MergeFrom(const storesvr_insert_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_insert_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
}

void storesvr_insert_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_insert_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_insert_res::CopyFrom(const storesvr_insert_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_insert_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_insert_res::IsInitialized() const {
  return true;
}

void storesvr_insert_res::Swap(storesvr_insert_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_insert_res::InternalSwap(storesvr_insert_res* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_insert_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_del::InitAsDefaultInstance() {
  ::NFrame::_storesvr_del_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_del_default_instance_._instance.get_mutable()->cond_ = const_cast< ::NFrame::storesvr_wherecond*>(
      ::NFrame::storesvr_wherecond::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_del::kBaseinfoFieldNumber;
const int storesvr_del::kCondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_del::storesvr_del()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_del.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_del)
}
storesvr_del::storesvr_del(const storesvr_del& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_cond()) {
    cond_ = new ::NFrame::storesvr_wherecond(*from.cond_);
  } else {
    cond_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_del)
}

void storesvr_del::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cond_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(cond_));
}

storesvr_del::~storesvr_del() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_del)
  SharedDtor();
}

void storesvr_del::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete cond_;
}

void storesvr_del::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_del::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_del& storesvr_del::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_del.base);
  return *internal_default_instance();
}


void storesvr_del::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_del)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_del::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_del)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_wherecond cond = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_del)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_del)
  return false;
#undef DO_
}

void storesvr_del::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_del)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cond(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_del)
}

::google::protobuf::uint8* storesvr_del::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_del)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cond(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_del)
  return target;
}

size_t storesvr_del::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_del)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cond_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_del::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_del)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_del* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_del>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_del)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_del)
    MergeFrom(*source);
  }
}

void storesvr_del::MergeFrom(const storesvr_del& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_del)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_cond()) {
    mutable_cond()->::NFrame::storesvr_wherecond::MergeFrom(from.cond());
  }
}

void storesvr_del::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_del)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_del::CopyFrom(const storesvr_del& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_del)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_del::IsInitialized() const {
  return true;
}

void storesvr_del::Swap(storesvr_del* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_del::InternalSwap(storesvr_del* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(cond_, other->cond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_del::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_del_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_del_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_del_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_del_res::kBaseinfoFieldNumber;
const int storesvr_del_res::kOpresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_del_res::storesvr_del_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_del_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_del_res)
}
storesvr_del_res::storesvr_del_res(const storesvr_del_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_del_res)
}

void storesvr_del_res::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opres_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(opres_));
}

storesvr_del_res::~storesvr_del_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_del_res)
  SharedDtor();
}

void storesvr_del_res::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_del_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_del_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_del_res& storesvr_del_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_del_res.base);
  return *internal_default_instance();
}


void storesvr_del_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_del_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_del_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_del_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_del_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_del_res)
  return false;
#undef DO_
}

void storesvr_del_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_del_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_del_res)
}

::google::protobuf::uint8* storesvr_del_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_del_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_del_res)
  return target;
}

size_t storesvr_del_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_del_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_del_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_del_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_del_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_del_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_del_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_del_res)
    MergeFrom(*source);
  }
}

void storesvr_del_res::MergeFrom(const storesvr_del_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_del_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
}

void storesvr_del_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_del_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_del_res::CopyFrom(const storesvr_del_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_del_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_del_res::IsInitialized() const {
  return true;
}

void storesvr_del_res::Swap(storesvr_del_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_del_res::InternalSwap(storesvr_del_res* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_del_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_delobj::InitAsDefaultInstance() {
  ::NFrame::_storesvr_delobj_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_delobj::kBaseinfoFieldNumber;
const int storesvr_delobj::kModKeyFieldNumber;
const int storesvr_delobj::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_delobj::storesvr_delobj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_delobj.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_delobj)
}
storesvr_delobj::storesvr_delobj(const storesvr_delobj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  mod_key_ = from.mod_key_;
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_delobj)
}

void storesvr_delobj::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_key_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(mod_key_));
}

storesvr_delobj::~storesvr_delobj() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_delobj)
  SharedDtor();
}

void storesvr_delobj::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
}

void storesvr_delobj::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_delobj::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_delobj& storesvr_delobj::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_delobj.base);
  return *internal_default_instance();
}


void storesvr_delobj::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_delobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  mod_key_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool storesvr_delobj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_delobj)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mod_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_delobj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_delobj)
  return false;
#undef DO_
}

void storesvr_delobj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_delobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mod_key(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_delobj)
}

::google::protobuf::uint8* storesvr_delobj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_delobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mod_key(), target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_delobj)
  return target;
}

size_t storesvr_delobj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_delobj)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mod_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_delobj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_delobj)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_delobj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_delobj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_delobj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_delobj)
    MergeFrom(*source);
  }
}

void storesvr_delobj::MergeFrom(const storesvr_delobj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_delobj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.mod_key() != 0) {
    set_mod_key(from.mod_key());
  }
}

void storesvr_delobj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_delobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_delobj::CopyFrom(const storesvr_delobj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_delobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_delobj::IsInitialized() const {
  return true;
}

void storesvr_delobj::Swap(storesvr_delobj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_delobj::InternalSwap(storesvr_delobj* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(mod_key_, other->mod_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_delobj::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_delobj_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_delobj_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_delobj_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_delobj_res::kBaseinfoFieldNumber;
const int storesvr_delobj_res::kOpresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_delobj_res::storesvr_delobj_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_delobj_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_delobj_res)
}
storesvr_delobj_res::storesvr_delobj_res(const storesvr_delobj_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_delobj_res)
}

void storesvr_delobj_res::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opres_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(opres_));
}

storesvr_delobj_res::~storesvr_delobj_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_delobj_res)
  SharedDtor();
}

void storesvr_delobj_res::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_delobj_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_delobj_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_delobj_res& storesvr_delobj_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_delobj_res.base);
  return *internal_default_instance();
}


void storesvr_delobj_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_delobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_delobj_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_delobj_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_delobj_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_delobj_res)
  return false;
#undef DO_
}

void storesvr_delobj_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_delobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_delobj_res)
}

::google::protobuf::uint8* storesvr_delobj_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_delobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_delobj_res)
  return target;
}

size_t storesvr_delobj_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_delobj_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_delobj_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_delobj_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_delobj_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_delobj_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_delobj_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_delobj_res)
    MergeFrom(*source);
  }
}

void storesvr_delobj_res::MergeFrom(const storesvr_delobj_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_delobj_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
}

void storesvr_delobj_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_delobj_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_delobj_res::CopyFrom(const storesvr_delobj_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_delobj_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_delobj_res::IsInitialized() const {
  return true;
}

void storesvr_delobj_res::Swap(storesvr_delobj_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_delobj_res::InternalSwap(storesvr_delobj_res* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_delobj_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_mod::InitAsDefaultInstance() {
  ::NFrame::_storesvr_mod_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_mod_default_instance_._instance.get_mutable()->cond_ = const_cast< ::NFrame::storesvr_wherecond*>(
      ::NFrame::storesvr_wherecond::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_mod::kBaseinfoFieldNumber;
const int storesvr_mod::kCondFieldNumber;
const int storesvr_mod::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_mod::storesvr_mod()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_mod.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_mod)
}
storesvr_mod::storesvr_mod(const storesvr_mod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_cond()) {
    cond_ = new ::NFrame::storesvr_wherecond(*from.cond_);
  } else {
    cond_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_mod)
}

void storesvr_mod::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cond_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(cond_));
}

storesvr_mod::~storesvr_mod() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_mod)
  SharedDtor();
}

void storesvr_mod::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete cond_;
}

void storesvr_mod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_mod::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_mod& storesvr_mod::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_mod.base);
  return *internal_default_instance();
}


void storesvr_mod::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_mod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_mod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_mod)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_wherecond cond = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_mod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_mod)
  return false;
#undef DO_
}

void storesvr_mod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_mod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cond(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_mod)
}

::google::protobuf::uint8* storesvr_mod::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_mod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cond(), deterministic, target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_mod)
  return target;
}

size_t storesvr_mod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_mod)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cond_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_mod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_mod)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_mod* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_mod>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_mod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_mod)
    MergeFrom(*source);
  }
}

void storesvr_mod::MergeFrom(const storesvr_mod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_mod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_cond()) {
    mutable_cond()->::NFrame::storesvr_wherecond::MergeFrom(from.cond());
  }
}

void storesvr_mod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_mod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_mod::CopyFrom(const storesvr_mod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_mod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_mod::IsInitialized() const {
  return true;
}

void storesvr_mod::Swap(storesvr_mod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_mod::InternalSwap(storesvr_mod* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(cond_, other->cond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_mod::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_mod_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_mod_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_mod_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_mod_res::kBaseinfoFieldNumber;
const int storesvr_mod_res::kOpresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_mod_res::storesvr_mod_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_mod_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_mod_res)
}
storesvr_mod_res::storesvr_mod_res(const storesvr_mod_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_mod_res)
}

void storesvr_mod_res::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opres_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(opres_));
}

storesvr_mod_res::~storesvr_mod_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_mod_res)
  SharedDtor();
}

void storesvr_mod_res::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_mod_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_mod_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_mod_res& storesvr_mod_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_mod_res.base);
  return *internal_default_instance();
}


void storesvr_mod_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_mod_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_mod_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_mod_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_mod_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_mod_res)
  return false;
#undef DO_
}

void storesvr_mod_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_mod_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_mod_res)
}

::google::protobuf::uint8* storesvr_mod_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_mod_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_mod_res)
  return target;
}

size_t storesvr_mod_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_mod_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_mod_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_mod_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_mod_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_mod_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_mod_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_mod_res)
    MergeFrom(*source);
  }
}

void storesvr_mod_res::MergeFrom(const storesvr_mod_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_mod_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
}

void storesvr_mod_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_mod_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_mod_res::CopyFrom(const storesvr_mod_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_mod_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_mod_res::IsInitialized() const {
  return true;
}

void storesvr_mod_res::Swap(storesvr_mod_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_mod_res::InternalSwap(storesvr_mod_res* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_mod_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_modobj::InitAsDefaultInstance() {
  ::NFrame::_storesvr_modobj_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_modobj::kBaseinfoFieldNumber;
const int storesvr_modobj::kModKeyFieldNumber;
const int storesvr_modobj::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_modobj::storesvr_modobj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_modobj.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_modobj)
}
storesvr_modobj::storesvr_modobj(const storesvr_modobj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  mod_key_ = from.mod_key_;
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_modobj)
}

void storesvr_modobj::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_key_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(mod_key_));
}

storesvr_modobj::~storesvr_modobj() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_modobj)
  SharedDtor();
}

void storesvr_modobj::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
}

void storesvr_modobj::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_modobj::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_modobj& storesvr_modobj::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_modobj.base);
  return *internal_default_instance();
}


void storesvr_modobj::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_modobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  mod_key_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool storesvr_modobj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_modobj)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mod_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_modobj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_modobj)
  return false;
#undef DO_
}

void storesvr_modobj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_modobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mod_key(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_modobj)
}

::google::protobuf::uint8* storesvr_modobj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_modobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mod_key(), target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_modobj)
  return target;
}

size_t storesvr_modobj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_modobj)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mod_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_modobj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_modobj)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_modobj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_modobj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_modobj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_modobj)
    MergeFrom(*source);
  }
}

void storesvr_modobj::MergeFrom(const storesvr_modobj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_modobj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.mod_key() != 0) {
    set_mod_key(from.mod_key());
  }
}

void storesvr_modobj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_modobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_modobj::CopyFrom(const storesvr_modobj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_modobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_modobj::IsInitialized() const {
  return true;
}

void storesvr_modobj::Swap(storesvr_modobj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_modobj::InternalSwap(storesvr_modobj* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(mod_key_, other->mod_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_modobj::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_modobj_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_modobj_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_modobj_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_modobj_res::kBaseinfoFieldNumber;
const int storesvr_modobj_res::kOpresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_modobj_res::storesvr_modobj_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_modobj_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_modobj_res)
}
storesvr_modobj_res::storesvr_modobj_res(const storesvr_modobj_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_modobj_res)
}

void storesvr_modobj_res::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opres_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(opres_));
}

storesvr_modobj_res::~storesvr_modobj_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_modobj_res)
  SharedDtor();
}

void storesvr_modobj_res::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_modobj_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_modobj_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_modobj_res& storesvr_modobj_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_modobj_res.base);
  return *internal_default_instance();
}


void storesvr_modobj_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_modobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_modobj_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_modobj_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_modobj_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_modobj_res)
  return false;
#undef DO_
}

void storesvr_modobj_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_modobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_modobj_res)
}

::google::protobuf::uint8* storesvr_modobj_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_modobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_modobj_res)
  return target;
}

size_t storesvr_modobj_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_modobj_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_modobj_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_modobj_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_modobj_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_modobj_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_modobj_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_modobj_res)
    MergeFrom(*source);
  }
}

void storesvr_modobj_res::MergeFrom(const storesvr_modobj_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_modobj_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
}

void storesvr_modobj_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_modobj_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_modobj_res::CopyFrom(const storesvr_modobj_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_modobj_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_modobj_res::IsInitialized() const {
  return true;
}

void storesvr_modobj_res::Swap(storesvr_modobj_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_modobj_res::InternalSwap(storesvr_modobj_res* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_modobj_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_update::InitAsDefaultInstance() {
  ::NFrame::_storesvr_update_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_update_default_instance_._instance.get_mutable()->cond_ = const_cast< ::NFrame::storesvr_wherecond*>(
      ::NFrame::storesvr_wherecond::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_update::kBaseinfoFieldNumber;
const int storesvr_update::kCondFieldNumber;
const int storesvr_update::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_update::storesvr_update()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_update.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_update)
}
storesvr_update::storesvr_update(const storesvr_update& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_cond()) {
    cond_ = new ::NFrame::storesvr_wherecond(*from.cond_);
  } else {
    cond_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_update)
}

void storesvr_update::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cond_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(cond_));
}

storesvr_update::~storesvr_update() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_update)
  SharedDtor();
}

void storesvr_update::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete cond_;
}

void storesvr_update::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_update::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_update& storesvr_update::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_update.base);
  return *internal_default_instance();
}


void storesvr_update::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_update)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_wherecond cond = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_update)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_update)
  return false;
#undef DO_
}

void storesvr_update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cond(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_update)
}

::google::protobuf::uint8* storesvr_update::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cond(), deterministic, target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_update)
  return target;
}

size_t storesvr_update::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_update)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_wherecond cond = 2;
  if (this->has_cond()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cond_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_update::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_update)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_update* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_update>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_update)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_update)
    MergeFrom(*source);
  }
}

void storesvr_update::MergeFrom(const storesvr_update& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_update)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_cond()) {
    mutable_cond()->::NFrame::storesvr_wherecond::MergeFrom(from.cond());
  }
}

void storesvr_update::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_update::CopyFrom(const storesvr_update& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_update::IsInitialized() const {
  return true;
}

void storesvr_update::Swap(storesvr_update* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_update::InternalSwap(storesvr_update* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(cond_, other->cond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_update::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_update_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_update_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_update_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_update_res::kBaseinfoFieldNumber;
const int storesvr_update_res::kOpresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_update_res::storesvr_update_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_update_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_update_res)
}
storesvr_update_res::storesvr_update_res(const storesvr_update_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_update_res)
}

void storesvr_update_res::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opres_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(opres_));
}

storesvr_update_res::~storesvr_update_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_update_res)
  SharedDtor();
}

void storesvr_update_res::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_update_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_update_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_update_res& storesvr_update_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_update_res.base);
  return *internal_default_instance();
}


void storesvr_update_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_update_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_update_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_update_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_update_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_update_res)
  return false;
#undef DO_
}

void storesvr_update_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_update_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_update_res)
}

::google::protobuf::uint8* storesvr_update_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_update_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_update_res)
  return target;
}

size_t storesvr_update_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_update_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_update_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_update_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_update_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_update_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_update_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_update_res)
    MergeFrom(*source);
  }
}

void storesvr_update_res::MergeFrom(const storesvr_update_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_update_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
}

void storesvr_update_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_update_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_update_res::CopyFrom(const storesvr_update_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_update_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_update_res::IsInitialized() const {
  return true;
}

void storesvr_update_res::Swap(storesvr_update_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_update_res::InternalSwap(storesvr_update_res* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_update_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_updateobj::InitAsDefaultInstance() {
  ::NFrame::_storesvr_updateobj_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_updateobj::kBaseinfoFieldNumber;
const int storesvr_updateobj::kModKeyFieldNumber;
const int storesvr_updateobj::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_updateobj::storesvr_updateobj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_updateobj.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_updateobj)
}
storesvr_updateobj::storesvr_updateobj(const storesvr_updateobj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  mod_key_ = from.mod_key_;
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_updateobj)
}

void storesvr_updateobj::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_key_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(mod_key_));
}

storesvr_updateobj::~storesvr_updateobj() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_updateobj)
  SharedDtor();
}

void storesvr_updateobj::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
}

void storesvr_updateobj::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_updateobj::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_updateobj& storesvr_updateobj::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_updateobj.base);
  return *internal_default_instance();
}


void storesvr_updateobj::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_updateobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  mod_key_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool storesvr_updateobj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_updateobj)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mod_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_updateobj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_updateobj)
  return false;
#undef DO_
}

void storesvr_updateobj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_updateobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mod_key(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_updateobj)
}

::google::protobuf::uint8* storesvr_updateobj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_updateobj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mod_key(), target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_updateobj)
  return target;
}

size_t storesvr_updateobj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_updateobj)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mod_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_updateobj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_updateobj)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_updateobj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_updateobj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_updateobj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_updateobj)
    MergeFrom(*source);
  }
}

void storesvr_updateobj::MergeFrom(const storesvr_updateobj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_updateobj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.mod_key() != 0) {
    set_mod_key(from.mod_key());
  }
}

void storesvr_updateobj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_updateobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_updateobj::CopyFrom(const storesvr_updateobj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_updateobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_updateobj::IsInitialized() const {
  return true;
}

void storesvr_updateobj::Swap(storesvr_updateobj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_updateobj::InternalSwap(storesvr_updateobj* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(mod_key_, other->mod_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_updateobj::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_updateobj_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_updateobj_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_updateobj_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_updateobj_res::kBaseinfoFieldNumber;
const int storesvr_updateobj_res::kOpresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_updateobj_res::storesvr_updateobj_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_updateobj_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_updateobj_res)
}
storesvr_updateobj_res::storesvr_updateobj_res(const storesvr_updateobj_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_updateobj_res)
}

void storesvr_updateobj_res::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opres_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(opres_));
}

storesvr_updateobj_res::~storesvr_updateobj_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_updateobj_res)
  SharedDtor();
}

void storesvr_updateobj_res::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_updateobj_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_updateobj_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_updateobj_res& storesvr_updateobj_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_updateobj_res.base);
  return *internal_default_instance();
}


void storesvr_updateobj_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_updateobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_updateobj_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_updateobj_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_updateobj_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_updateobj_res)
  return false;
#undef DO_
}

void storesvr_updateobj_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_updateobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_updateobj_res)
}

::google::protobuf::uint8* storesvr_updateobj_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_updateobj_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_updateobj_res)
  return target;
}

size_t storesvr_updateobj_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_updateobj_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_updateobj_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_updateobj_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_updateobj_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_updateobj_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_updateobj_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_updateobj_res)
    MergeFrom(*source);
  }
}

void storesvr_updateobj_res::MergeFrom(const storesvr_updateobj_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_updateobj_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
}

void storesvr_updateobj_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_updateobj_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_updateobj_res::CopyFrom(const storesvr_updateobj_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_updateobj_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_updateobj_res::IsInitialized() const {
  return true;
}

void storesvr_updateobj_res::Swap(storesvr_updateobj_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_updateobj_res::InternalSwap(storesvr_updateobj_res* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_updateobj_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_execute::InitAsDefaultInstance() {
  ::NFrame::_storesvr_execute_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_execute::kBaseinfoFieldNumber;
const int storesvr_execute::kModKeyFieldNumber;
const int storesvr_execute::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_execute::storesvr_execute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_execute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_execute)
}
storesvr_execute::storesvr_execute(const storesvr_execute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  mod_key_ = from.mod_key_;
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_execute)
}

void storesvr_execute::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_key_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(mod_key_));
}

storesvr_execute::~storesvr_execute() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_execute)
  SharedDtor();
}

void storesvr_execute::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
}

void storesvr_execute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_execute::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_execute& storesvr_execute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_execute.base);
  return *internal_default_instance();
}


void storesvr_execute::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_execute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  mod_key_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool storesvr_execute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_execute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mod_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_execute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_execute)
  return false;
#undef DO_
}

void storesvr_execute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_execute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mod_key(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_execute)
}

::google::protobuf::uint8* storesvr_execute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_execute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mod_key(), target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_execute)
  return target;
}

size_t storesvr_execute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_execute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mod_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_execute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_execute)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_execute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_execute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_execute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_execute)
    MergeFrom(*source);
  }
}

void storesvr_execute::MergeFrom(const storesvr_execute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_execute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.mod_key() != 0) {
    set_mod_key(from.mod_key());
  }
}

void storesvr_execute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_execute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_execute::CopyFrom(const storesvr_execute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_execute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_execute::IsInitialized() const {
  return true;
}

void storesvr_execute::Swap(storesvr_execute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_execute::InternalSwap(storesvr_execute* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(mod_key_, other->mod_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_execute::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_execute_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_execute_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_execute_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_execute_res::kBaseinfoFieldNumber;
const int storesvr_execute_res::kOpresFieldNumber;
const int storesvr_execute_res::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_execute_res::storesvr_execute_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_execute_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_execute_res)
}
storesvr_execute_res::storesvr_execute_res(const storesvr_execute_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_execute_res)
}

void storesvr_execute_res::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opres_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(opres_));
}

storesvr_execute_res::~storesvr_execute_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_execute_res)
  SharedDtor();
}

void storesvr_execute_res::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_execute_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_execute_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_execute_res& storesvr_execute_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_execute_res.base);
  return *internal_default_instance();
}


void storesvr_execute_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_execute_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  _internal_metadata_.Clear();
}

bool storesvr_execute_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_execute_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_execute_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_execute_res)
  return false;
#undef DO_
}

void storesvr_execute_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_execute_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_execute_res)
}

::google::protobuf::uint8* storesvr_execute_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_execute_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_execute_res)
  return target;
}

size_t storesvr_execute_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_execute_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_execute_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_execute_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_execute_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_execute_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_execute_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_execute_res)
    MergeFrom(*source);
  }
}

void storesvr_execute_res::MergeFrom(const storesvr_execute_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_execute_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
}

void storesvr_execute_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_execute_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_execute_res::CopyFrom(const storesvr_execute_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_execute_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_execute_res::IsInitialized() const {
  return true;
}

void storesvr_execute_res::Swap(storesvr_execute_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_execute_res::InternalSwap(storesvr_execute_res* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_execute_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_execute_more::InitAsDefaultInstance() {
  ::NFrame::_storesvr_execute_more_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_execute_more::kBaseinfoFieldNumber;
const int storesvr_execute_more::kModKeyFieldNumber;
const int storesvr_execute_more::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_execute_more::storesvr_execute_more()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_execute_more.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_execute_more)
}
storesvr_execute_more::storesvr_execute_more(const storesvr_execute_more& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record().size() > 0) {
    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  mod_key_ = from.mod_key_;
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_execute_more)
}

void storesvr_execute_more::SharedCtor() {
  record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_key_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(mod_key_));
}

storesvr_execute_more::~storesvr_execute_more() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_execute_more)
  SharedDtor();
}

void storesvr_execute_more::SharedDtor() {
  record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
}

void storesvr_execute_more::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_execute_more::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_execute_more& storesvr_execute_more::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_execute_more.base);
  return *internal_default_instance();
}


void storesvr_execute_more::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_execute_more)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  mod_key_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool storesvr_execute_more::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_execute_more)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mod_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_execute_more)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_execute_more)
  return false;
#undef DO_
}

void storesvr_execute_more::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_execute_more)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mod_key(), output);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_execute_more)
}

::google::protobuf::uint8* storesvr_execute_more::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_execute_more)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mod_key(), target);
  }

  // bytes record = 3;
  if (this->record().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->record(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_execute_more)
  return target;
}

size_t storesvr_execute_more::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_execute_more)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes record = 3;
  if (this->record().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record());
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // uint64 mod_key = 2;
  if (this->mod_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mod_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_execute_more::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_execute_more)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_execute_more* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_execute_more>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_execute_more)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_execute_more)
    MergeFrom(*source);
  }
}

void storesvr_execute_more::MergeFrom(const storesvr_execute_more& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_execute_more)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record().size() > 0) {

    record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_);
  }
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.mod_key() != 0) {
    set_mod_key(from.mod_key());
  }
}

void storesvr_execute_more::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_execute_more)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_execute_more::CopyFrom(const storesvr_execute_more& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_execute_more)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_execute_more::IsInitialized() const {
  return true;
}

void storesvr_execute_more::Swap(storesvr_execute_more* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_execute_more::InternalSwap(storesvr_execute_more* other) {
  using std::swap;
  record_.Swap(&other->record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(mod_key_, other->mod_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_execute_more::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void storesvr_execute_more_res::InitAsDefaultInstance() {
  ::NFrame::_storesvr_execute_more_res_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::NFrame::storesvr_baseinfo*>(
      ::NFrame::storesvr_baseinfo::internal_default_instance());
  ::NFrame::_storesvr_execute_more_res_default_instance_._instance.get_mutable()->opres_ = const_cast< ::NFrame::storesvr_opres*>(
      ::NFrame::storesvr_opres::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int storesvr_execute_more_res::kBaseinfoFieldNumber;
const int storesvr_execute_more_res::kOpresFieldNumber;
const int storesvr_execute_more_res::kIsLastbatchFieldNumber;
const int storesvr_execute_more_res::kRowCountFieldNumber;
const int storesvr_execute_more_res::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

storesvr_execute_more_res::storesvr_execute_more_res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameSqlData_2eproto::scc_info_storesvr_execute_more_res.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.storesvr_execute_more_res)
}
storesvr_execute_more_res::storesvr_execute_more_res(const storesvr_execute_more_res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_(from.record_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::NFrame::storesvr_baseinfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_opres()) {
    opres_ = new ::NFrame::storesvr_opres(*from.opres_);
  } else {
    opres_ = NULL;
  }
  ::memcpy(&is_lastbatch_, &from.is_lastbatch_,
    static_cast<size_t>(reinterpret_cast<char*>(&row_count_) -
    reinterpret_cast<char*>(&is_lastbatch_)) + sizeof(row_count_));
  // @@protoc_insertion_point(copy_constructor:NFrame.storesvr_execute_more_res)
}

void storesvr_execute_more_res::SharedCtor() {
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_count_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(row_count_));
}

storesvr_execute_more_res::~storesvr_execute_more_res() {
  // @@protoc_insertion_point(destructor:NFrame.storesvr_execute_more_res)
  SharedDtor();
}

void storesvr_execute_more_res::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete opres_;
}

void storesvr_execute_more_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* storesvr_execute_more_res::descriptor() {
  ::protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const storesvr_execute_more_res& storesvr_execute_more_res::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameSqlData_2eproto::scc_info_storesvr_execute_more_res.base);
  return *internal_default_instance();
}


void storesvr_execute_more_res::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.storesvr_execute_more_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_.Clear();
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) {
    delete baseinfo_;
  }
  baseinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && opres_ != NULL) {
    delete opres_;
  }
  opres_ = NULL;
  ::memset(&is_lastbatch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_count_) -
      reinterpret_cast<char*>(&is_lastbatch_)) + sizeof(row_count_));
  _internal_metadata_.Clear();
}

bool storesvr_execute_more_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.storesvr_execute_more_res)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFrame.storesvr_baseinfo baseinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFrame.storesvr_opres opres = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_opres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_lastbatch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_lastbatch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 row_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes record = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.storesvr_execute_more_res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.storesvr_execute_more_res)
  return false;
#undef DO_
}

void storesvr_execute_more_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.storesvr_execute_more_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseinfo(), output);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_opres(), output);
  }

  // bool is_lastbatch = 3;
  if (this->is_lastbatch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_lastbatch(), output);
  }

  // int32 row_count = 4;
  if (this->row_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->row_count(), output);
  }

  // repeated bytes record = 5;
  for (int i = 0, n = this->record_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->record(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.storesvr_execute_more_res)
}

::google::protobuf::uint8* storesvr_execute_more_res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.storesvr_execute_more_res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseinfo(), deterministic, target);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_opres(), deterministic, target);
  }

  // bool is_lastbatch = 3;
  if (this->is_lastbatch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_lastbatch(), target);
  }

  // int32 row_count = 4;
  if (this->row_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->row_count(), target);
  }

  // repeated bytes record = 5;
  for (int i = 0, n = this->record_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(5, this->record(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.storesvr_execute_more_res)
  return target;
}

size_t storesvr_execute_more_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.storesvr_execute_more_res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes record = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->record_size());
  for (int i = 0, n = this->record_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->record(i));
  }

  // .NFrame.storesvr_baseinfo baseinfo = 1;
  if (this->has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  // .NFrame.storesvr_opres opres = 2;
  if (this->has_opres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *opres_);
  }

  // bool is_lastbatch = 3;
  if (this->is_lastbatch() != 0) {
    total_size += 1 + 1;
  }

  // int32 row_count = 4;
  if (this->row_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void storesvr_execute_more_res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.storesvr_execute_more_res)
  GOOGLE_DCHECK_NE(&from, this);
  const storesvr_execute_more_res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const storesvr_execute_more_res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.storesvr_execute_more_res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.storesvr_execute_more_res)
    MergeFrom(*source);
  }
}

void storesvr_execute_more_res::MergeFrom(const storesvr_execute_more_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.storesvr_execute_more_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_.MergeFrom(from.record_);
  if (from.has_baseinfo()) {
    mutable_baseinfo()->::NFrame::storesvr_baseinfo::MergeFrom(from.baseinfo());
  }
  if (from.has_opres()) {
    mutable_opres()->::NFrame::storesvr_opres::MergeFrom(from.opres());
  }
  if (from.is_lastbatch() != 0) {
    set_is_lastbatch(from.is_lastbatch());
  }
  if (from.row_count() != 0) {
    set_row_count(from.row_count());
  }
}

void storesvr_execute_more_res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.storesvr_execute_more_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storesvr_execute_more_res::CopyFrom(const storesvr_execute_more_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.storesvr_execute_more_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storesvr_execute_more_res::IsInitialized() const {
  return true;
}

void storesvr_execute_more_res::Swap(storesvr_execute_more_res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void storesvr_execute_more_res::InternalSwap(storesvr_execute_more_res* other) {
  using std::swap;
  record_.InternalSwap(CastToBase(&other->record_));
  swap(baseinfo_, other->baseinfo_);
  swap(opres_, other->opres_);
  swap(is_lastbatch_, other->is_lastbatch_);
  swap(row_count_, other->row_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata storesvr_execute_more_res::GetMetadata() const {
  protobuf_FrameSqlData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameSqlData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFrame
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_vk* Arena::CreateMaybeMessage< ::NFrame::storesvr_vk >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_vk >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_wherecond* Arena::CreateMaybeMessage< ::NFrame::storesvr_wherecond >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_wherecond >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_baseinfo* Arena::CreateMaybeMessage< ::NFrame::storesvr_baseinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_baseinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_opres* Arena::CreateMaybeMessage< ::NFrame::storesvr_opres >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_opres >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_sel* Arena::CreateMaybeMessage< ::NFrame::storesvr_sel >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_sel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_sel_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_sel_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_sel_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_selobj* Arena::CreateMaybeMessage< ::NFrame::storesvr_selobj >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_selobj >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_selobj_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_selobj_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_selobj_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_insertobj* Arena::CreateMaybeMessage< ::NFrame::storesvr_insertobj >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_insertobj >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_insertobj_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_insertobj_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_insertobj_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_insert* Arena::CreateMaybeMessage< ::NFrame::storesvr_insert >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_insert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_insert_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_insert_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_insert_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_del* Arena::CreateMaybeMessage< ::NFrame::storesvr_del >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_del >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_del_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_del_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_del_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_delobj* Arena::CreateMaybeMessage< ::NFrame::storesvr_delobj >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_delobj >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_delobj_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_delobj_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_delobj_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_mod* Arena::CreateMaybeMessage< ::NFrame::storesvr_mod >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_mod >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_mod_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_mod_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_mod_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_modobj* Arena::CreateMaybeMessage< ::NFrame::storesvr_modobj >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_modobj >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_modobj_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_modobj_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_modobj_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_update* Arena::CreateMaybeMessage< ::NFrame::storesvr_update >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_update >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_update_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_update_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_update_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_updateobj* Arena::CreateMaybeMessage< ::NFrame::storesvr_updateobj >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_updateobj >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_updateobj_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_updateobj_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_updateobj_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_execute* Arena::CreateMaybeMessage< ::NFrame::storesvr_execute >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_execute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_execute_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_execute_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_execute_res >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_execute_more* Arena::CreateMaybeMessage< ::NFrame::storesvr_execute_more >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_execute_more >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::storesvr_execute_more_res* Arena::CreateMaybeMessage< ::NFrame::storesvr_execute_more_res >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::storesvr_execute_more_res >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
