// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameTest.proto

#include "FrameTest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_FrameTestComm_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameTestComm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_wxWorkRobotTextTest;
}  // namespace protobuf_FrameTestComm_2eproto
namespace NFrame {
class wxWorkRobotTextMoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<wxWorkRobotTextMore>
      _instance;
} _wxWorkRobotTextMore_default_instance_;
}  // namespace NFrame
namespace protobuf_FrameTest_2eproto {
static void InitDefaultswxWorkRobotTextMore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFrame::_wxWorkRobotTextMore_default_instance_;
    new (ptr) ::NFrame::wxWorkRobotTextMore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFrame::wxWorkRobotTextMore::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_wxWorkRobotTextMore =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultswxWorkRobotTextMore}, {
      &protobuf_FrameTestComm_2eproto::scc_info_wxWorkRobotTextTest.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_wxWorkRobotTextMore.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::wxWorkRobotTextMore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::wxWorkRobotTextMore, test_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFrame::wxWorkRobotTextMore, test_set_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NFrame::wxWorkRobotTextMore)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFrame::_wxWorkRobotTextMore_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FrameTest.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017FrameTest.proto\022\006NFrame\032\014nanopb.proto\032"
      "\023FrameTestEnum.proto\032\023FrameTestComm.prot"
      "o\"\367\001\n\023wxWorkRobotTextMore\022s\n\010test_map\030\001 "
      "\003(\0132\037.NFrameComm.wxWorkRobotTextTestB@\222\?"
      "\036\212\001\033FRAME_ENUM_DEFAULT_REPEATED\222\?\024\372\001\021STL"
      "_UNORDERED_MAP\222\?\005\212\002\002id\022k\n\010test_set\030\002 \003(\013"
      "2\037.NFrameComm.wxWorkRobotTextTestB8\222\?\036\212\001"
      "\033FRAME_ENUM_DEFAULT_REPEATED\222\?\024\372\001\021STL_UN"
      "ORDERED_SETb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 339);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrameTest.proto", &protobuf_RegisterTypes);
  ::protobuf_nanopb_2eproto::AddDescriptors();
  ::protobuf_FrameTestEnum_2eproto::AddDescriptors();
  ::protobuf_FrameTestComm_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrameTest_2eproto
namespace NFrame {

// ===================================================================

void wxWorkRobotTextMore::InitAsDefaultInstance() {
}
void wxWorkRobotTextMore::clear_test_map() {
  test_map_.Clear();
}
void wxWorkRobotTextMore::clear_test_set() {
  test_set_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int wxWorkRobotTextMore::kTestMapFieldNumber;
const int wxWorkRobotTextMore::kTestSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

wxWorkRobotTextMore::wxWorkRobotTextMore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameTest_2eproto::scc_info_wxWorkRobotTextMore.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFrame.wxWorkRobotTextMore)
}
wxWorkRobotTextMore::wxWorkRobotTextMore(const wxWorkRobotTextMore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      test_map_(from.test_map_),
      test_set_(from.test_set_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFrame.wxWorkRobotTextMore)
}

void wxWorkRobotTextMore::SharedCtor() {
}

wxWorkRobotTextMore::~wxWorkRobotTextMore() {
  // @@protoc_insertion_point(destructor:NFrame.wxWorkRobotTextMore)
  SharedDtor();
}

void wxWorkRobotTextMore::SharedDtor() {
}

void wxWorkRobotTextMore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* wxWorkRobotTextMore::descriptor() {
  ::protobuf_FrameTest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const wxWorkRobotTextMore& wxWorkRobotTextMore::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameTest_2eproto::scc_info_wxWorkRobotTextMore.base);
  return *internal_default_instance();
}


void wxWorkRobotTextMore::Clear() {
// @@protoc_insertion_point(message_clear_start:NFrame.wxWorkRobotTextMore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  test_map_.Clear();
  test_set_.Clear();
  _internal_metadata_.Clear();
}

bool wxWorkRobotTextMore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFrame.wxWorkRobotTextMore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFrameComm.wxWorkRobotTextTest test_map = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_test_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFrameComm.wxWorkRobotTextTest test_set = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_test_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFrame.wxWorkRobotTextMore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFrame.wxWorkRobotTextMore)
  return false;
#undef DO_
}

void wxWorkRobotTextMore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFrame.wxWorkRobotTextMore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFrameComm.wxWorkRobotTextTest test_map = 1 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->test_map_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->test_map(static_cast<int>(i)),
      output);
  }

  // repeated .NFrameComm.wxWorkRobotTextTest test_set = 2 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->test_set_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->test_set(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFrame.wxWorkRobotTextMore)
}

::google::protobuf::uint8* wxWorkRobotTextMore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFrame.wxWorkRobotTextMore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFrameComm.wxWorkRobotTextTest test_map = 1 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->test_map_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->test_map(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFrameComm.wxWorkRobotTextTest test_set = 2 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->test_set_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->test_set(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFrame.wxWorkRobotTextMore)
  return target;
}

size_t wxWorkRobotTextMore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFrame.wxWorkRobotTextMore)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFrameComm.wxWorkRobotTextTest test_map = 1 [(.nanopb) = {
  {
    unsigned int count = static_cast<unsigned int>(this->test_map_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->test_map(static_cast<int>(i)));
    }
  }

  // repeated .NFrameComm.wxWorkRobotTextTest test_set = 2 [(.nanopb) = {
  {
    unsigned int count = static_cast<unsigned int>(this->test_set_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->test_set(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void wxWorkRobotTextMore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFrame.wxWorkRobotTextMore)
  GOOGLE_DCHECK_NE(&from, this);
  const wxWorkRobotTextMore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const wxWorkRobotTextMore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFrame.wxWorkRobotTextMore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFrame.wxWorkRobotTextMore)
    MergeFrom(*source);
  }
}

void wxWorkRobotTextMore::MergeFrom(const wxWorkRobotTextMore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFrame.wxWorkRobotTextMore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  test_map_.MergeFrom(from.test_map_);
  test_set_.MergeFrom(from.test_set_);
}

void wxWorkRobotTextMore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFrame.wxWorkRobotTextMore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wxWorkRobotTextMore::CopyFrom(const wxWorkRobotTextMore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFrame.wxWorkRobotTextMore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wxWorkRobotTextMore::IsInitialized() const {
  return true;
}

void wxWorkRobotTextMore::Swap(wxWorkRobotTextMore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void wxWorkRobotTextMore::InternalSwap(wxWorkRobotTextMore* other) {
  using std::swap;
  CastToBase(&test_map_)->InternalSwap(CastToBase(&other->test_map_));
  CastToBase(&test_set_)->InternalSwap(CastToBase(&other->test_set_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata wxWorkRobotTextMore::GetMetadata() const {
  protobuf_FrameTest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameTest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFrame
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFrame::wxWorkRobotTextMore* Arena::CreateMaybeMessage< ::NFrame::wxWorkRobotTextMore >(Arena* arena) {
  return Arena::CreateInternal< ::NFrame::wxWorkRobotTextMore >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
