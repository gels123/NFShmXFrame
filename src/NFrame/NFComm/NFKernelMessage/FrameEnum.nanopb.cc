/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.3.9 */

#include <sstream>
#include "NFComm/NFObjCommon/NFShmMgr.h"
#include "FrameEnum.nanopb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif



const char *NF_SERVER_TYPE_name(NF_SERVER_TYPE v) {
    switch (v) {
        case NF_ST_NONE: return "NF_ST_NONE";
        case NF_ST_MASTER_SERVER: return "NF_ST_MASTER_SERVER";
        case NF_ST_ROUTE_SERVER: return "NF_ST_ROUTE_SERVER";
        case NF_ST_ROUTE_AGENT_SERVER: return "NF_ST_ROUTE_AGENT_SERVER";
        case NF_ST_PROXY_SERVER: return "NF_ST_PROXY_SERVER";
        case NF_ST_PROXY_AGENT_SERVER: return "NF_ST_PROXY_AGENT_SERVER";
        case NF_ST_STORE_SERVER: return "NF_ST_STORE_SERVER";
        case NF_ST_LOGIN_SERVER: return "NF_ST_LOGIN_SERVER";
        case NF_ST_WORLD_SERVER: return "NF_ST_WORLD_SERVER";
        case NF_ST_LOGIC_SERVER: return "NF_ST_LOGIC_SERVER";
        case NF_ST_GAME_SERVER: return "NF_ST_GAME_SERVER";
        case NF_ST_SNS_SERVER: return "NF_ST_SNS_SERVER";
        case NF_ST_WEB_SERVER: return "NF_ST_WEB_SERVER";
        case NF_ST_ONLINE_SERVER: return "NF_ST_ONLINE_SERVER";
        case NF_ST_CENTER_SERVER: return "NF_ST_CENTER_SERVER";
        case NF_ST_MATCH_SERVER: return "NF_ST_MATCH_SERVER";
        case NF_ST_CITY_SERVER: return "NF_ST_CITY_SERVER";
        case NF_ST_CHECK_SERVER: return "NF_ST_CHECK_SERVER";
        case NF_ST_NAVMESH_SERVER: return "NF_ST_NAVMESH_SERVER";
        case NF_ST_MAX: return "NF_ST_MAX";
    }
    return "unknown";
}







/* @@protoc_insertion_point(eof) */
