// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_cs_login.proto

#ifndef PROTOBUF_proto_5fcs_5flogin_2eproto__INCLUDED
#define PROTOBUF_proto_5fcs_5flogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto_login {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

class Proto_UserSimpleData;
class Proto_UserLoginExternalData;
class Proto_UserDetailCommonData;
class Proto_CSReconnectReq;
class Proto_SCReconnectRsp;
class Proto_CSHeartBeatReq;
class Proto_SCHeartBeatRsp;
class Proto_CSRegisterAccountReq;
class Proto_SCRegisterAccountRsp;
class Proto_CSServerIP;
class Proto_CSAccountLoginReq;
class Proto_SCAccountLoginRsp;
class Proto_CSUserLoginReq;
class Proto_SCUserLoginRsp;
class Proto_CSChangeFaceReq;
class Proto_SCChangeFaceRsp;
class Proto_CSChangeNickNameReq;
class Proto_SCChangNickNameRsp;
class Proto_CSQueryUserReq;
class Proto_SCQueryUserRsp;
class Proto_CS_LoginServer_PhoneAutoCodeReq;
class Proto_SC_LoginServer_PhoneAutoCodeRsp;
class Proto_CS_LoginServer_CheckPhoneCodeReq;
class Proto_SC_LoginServer_CheckPhoneCodeRsp;
class Proto_CS_ChangePasswordReq;
class Proto_SC_ChangePasswordRsp;
class Proto_SC_LoginServer_NotifyPhoneCheck;
class Proto_CS_Player_PhoneAutoCodeReq;
class Proto_SC_Player_PhoneAutoCodeRsp;
class Proto_CS_Player_CheckPhoneCodeReq;
class Proto_SC_Player_CheckPhoneCodeRsp;
class Proto_CS_Player_BindPhoneReq;
class Proto_SC_Player_BindPhoneRsp;
class Proto_CS_PhoneChangeBandPasswordReq;
class Proto_SC_PhoneChangeBandPasswordRsp;
class Proto_CSCheckContractInfoReq;
class Proto_SCCheckContractInfoRsp;
class Proto_SCKetPlayerNotify;

enum Proto_LOGIN_CS_CMD {
  NF_CS_MSG_CHECK_CONTRACT_INFO_REQ = 1001,
  NF_SC_MSG_CHECK_CONTRACT_INFO_RSP = 1002,
  NF_CS_Msg_ReConnect_REQ = 1005,
  NF_SC_Msg_ReConnect_RSP = 1006,
  NF_SC_Msg_KitPlayer_Notify = 1007,
  NF_CS_Msg_HeartBeat_REQ = 1009,
  NF_SC_Msg_HeartBeat_RSP = 1010,
  NF_CS_MSG_AccountLoginReq = 1101,
  NF_SC_MSG_AccountLoginRsp = 1102,
  NF_CS_MSG_UserLoginReq = 1103,
  NF_SC_MSG_UserLoginRsp = 1104,
  NF_CS_MSG_RegisterAccountReq = 1105,
  NF_SC_MSG_RegisterAccountRsp = 1106,
  NF_CS_MSG_LoginServer_PhoneAutoCodeReq = 1107,
  NF_SC_MSG_LoginServer_PhoneAutoCodeRsp = 1108,
  NF_CS_MSG_LoginServer_CheckPhoneCodeReq = 1109,
  NF_SC_MSG_LoginServer_CheckPhoneCodeRsp = 1110,
  NF_CS_MSG_CHANGE_PASSWORD_REQ = 1111,
  NF_SC_MSG_CHANGE_PASSWORD_RESP = 1112,
  NF_SC_MSG_LoginServer_NotifyPhoneCheck = 1113,
  NF_CS_MSG_PlayerPhoneAutoCodeReq = 1130,
  NF_SC_MSG_PlayerPhoneAutoCodeRsp = 1131,
  NF_CS_MSG_PlayerCheckPhoneCodeReq = 1132,
  NF_SC_MSG_PlayerCheckPhoneCodeRsp = 1133,
  NF_CS_MSG_ChangeFaceReq = 1134,
  NF_SC_MSG_ChangeFaceRsp = 1135,
  NF_CS_MSG_ChangeNickNameReq = 1136,
  NF_SC_MSG_ChangeNickNameRsp = 1137,
  NF_CS_MSG_BIND_PHONE_REQ = 1138,
  NF_CS_MSG_BIND_PHONE_RSP = 1139,
  NF_CS_MSG_PHONE_CHANG_BAND_PASSWORD_REQ = 1140,
  NF_CS_MSG_PHONE_CHANG_BAND_PASSWORD_RSP = 1141,
  NF_CS_QUERY_USER_SIMPLE_DATA_REQ = 1198,
  NF_SC_QUERY_USER_SIMPLE_DATA_RSP = 1199
};
bool Proto_LOGIN_CS_CMD_IsValid(int value);
const Proto_LOGIN_CS_CMD Proto_LOGIN_CS_CMD_MIN = NF_CS_MSG_CHECK_CONTRACT_INFO_REQ;
const Proto_LOGIN_CS_CMD Proto_LOGIN_CS_CMD_MAX = NF_SC_QUERY_USER_SIMPLE_DATA_RSP;
const int Proto_LOGIN_CS_CMD_ARRAYSIZE = Proto_LOGIN_CS_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* Proto_LOGIN_CS_CMD_descriptor();
inline const ::std::string& Proto_LOGIN_CS_CMD_Name(Proto_LOGIN_CS_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    Proto_LOGIN_CS_CMD_descriptor(), value);
}
inline bool Proto_LOGIN_CS_CMD_Parse(
    const ::std::string& name, Proto_LOGIN_CS_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Proto_LOGIN_CS_CMD>(
    Proto_LOGIN_CS_CMD_descriptor(), name, value);
}
// ===================================================================

class Proto_UserSimpleData : public ::google::protobuf::Message {
 public:
  Proto_UserSimpleData();
  virtual ~Proto_UserSimpleData();

  Proto_UserSimpleData(const Proto_UserSimpleData& from);

  inline Proto_UserSimpleData& operator=(const Proto_UserSimpleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_UserSimpleData& default_instance();

  void Swap(Proto_UserSimpleData* other);

  // implements Message ----------------------------------------------

  Proto_UserSimpleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_UserSimpleData& from);
  void MergeFrom(const Proto_UserSimpleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // optional string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional uint32 face = 3;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 3;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);

  // optional uint32 gender = 4;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 4;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);

  // optional uint32 age = 5;
  inline bool has_age() const;
  inline void clear_age();
  static const int kAgeFieldNumber = 5;
  inline ::google::protobuf::uint32 age() const;
  inline void set_age(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_UserSimpleData)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_face();
  inline void clear_has_face();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_age();
  inline void clear_has_age();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 userid_;
  ::std::string* nickname_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 age_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_UserSimpleData* default_instance_;
};
// -------------------------------------------------------------------

class Proto_UserLoginExternalData : public ::google::protobuf::Message {
 public:
  Proto_UserLoginExternalData();
  virtual ~Proto_UserLoginExternalData();

  Proto_UserLoginExternalData(const Proto_UserLoginExternalData& from);

  inline Proto_UserLoginExternalData& operator=(const Proto_UserLoginExternalData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_UserLoginExternalData& default_instance();

  void Swap(Proto_UserLoginExternalData* other);

  // implements Message ----------------------------------------------

  Proto_UserLoginExternalData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_UserLoginExternalData& from);
  void MergeFrom(const Proto_UserLoginExternalData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 aread_id = 1;
  inline bool has_aread_id() const;
  inline void clear_aread_id();
  static const int kAreadIdFieldNumber = 1;
  inline ::google::protobuf::uint32 aread_id() const;
  inline void set_aread_id(::google::protobuf::uint32 value);

  // optional uint32 agent_id = 2;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 2;
  inline ::google::protobuf::uint32 agent_id() const;
  inline void set_agent_id(::google::protobuf::uint32 value);

  // optional uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);

  // optional uint64 referral_code = 4;
  inline bool has_referral_code() const;
  inline void clear_referral_code();
  static const int kReferralCodeFieldNumber = 4;
  inline ::google::protobuf::uint64 referral_code() const;
  inline void set_referral_code(::google::protobuf::uint64 value);

  // optional string platform_os = 5;
  inline bool has_platform_os() const;
  inline void clear_platform_os();
  static const int kPlatformOsFieldNumber = 5;
  inline const ::std::string& platform_os() const;
  inline void set_platform_os(const ::std::string& value);
  inline void set_platform_os(const char* value);
  inline void set_platform_os(const char* value, size_t size);
  inline ::std::string* mutable_platform_os();
  inline ::std::string* release_platform_os();
  inline void set_allocated_platform_os(::std::string* platform_os);

  // optional string country = 6;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 6;
  inline const ::std::string& country() const;
  inline void set_country(const ::std::string& value);
  inline void set_country(const char* value);
  inline void set_country(const char* value, size_t size);
  inline ::std::string* mutable_country();
  inline ::std::string* release_country();
  inline void set_allocated_country(::std::string* country);

  // optional string province = 7;
  inline bool has_province() const;
  inline void clear_province();
  static const int kProvinceFieldNumber = 7;
  inline const ::std::string& province() const;
  inline void set_province(const ::std::string& value);
  inline void set_province(const char* value);
  inline void set_province(const char* value, size_t size);
  inline ::std::string* mutable_province();
  inline ::std::string* release_province();
  inline void set_allocated_province(::std::string* province);

  // optional string city = 8;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 8;
  inline const ::std::string& city() const;
  inline void set_city(const ::std::string& value);
  inline void set_city(const char* value);
  inline void set_city(const char* value, size_t size);
  inline ::std::string* mutable_city();
  inline ::std::string* release_city();
  inline void set_allocated_city(::std::string* city);

  // optional string phone_mode = 9;
  inline bool has_phone_mode() const;
  inline void clear_phone_mode();
  static const int kPhoneModeFieldNumber = 9;
  inline const ::std::string& phone_mode() const;
  inline void set_phone_mode(const ::std::string& value);
  inline void set_phone_mode(const char* value);
  inline void set_phone_mode(const char* value, size_t size);
  inline ::std::string* mutable_phone_mode();
  inline ::std::string* release_phone_mode();
  inline void set_allocated_phone_mode(::std::string* phone_mode);

  // optional string device_id = 10;
  inline bool has_device_id() const;
  inline void clear_device_id();
  static const int kDeviceIdFieldNumber = 10;
  inline const ::std::string& device_id() const;
  inline void set_device_id(const ::std::string& value);
  inline void set_device_id(const char* value);
  inline void set_device_id(const char* value, size_t size);
  inline ::std::string* mutable_device_id();
  inline ::std::string* release_device_id();
  inline void set_allocated_device_id(::std::string* device_id);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_UserLoginExternalData)
 private:
  inline void set_has_aread_id();
  inline void clear_has_aread_id();
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_referral_code();
  inline void clear_has_referral_code();
  inline void set_has_platform_os();
  inline void clear_has_platform_os();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_province();
  inline void clear_has_province();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_phone_mode();
  inline void clear_has_phone_mode();
  inline void set_has_device_id();
  inline void clear_has_device_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 aread_id_;
  ::google::protobuf::uint32 agent_id_;
  ::google::protobuf::uint64 referral_code_;
  ::std::string* platform_os_;
  ::std::string* country_;
  ::std::string* province_;
  ::std::string* city_;
  ::std::string* phone_mode_;
  ::std::string* device_id_;
  ::google::protobuf::uint32 channel_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_UserLoginExternalData* default_instance_;
};
// -------------------------------------------------------------------

class Proto_UserDetailCommonData : public ::google::protobuf::Message {
 public:
  Proto_UserDetailCommonData();
  virtual ~Proto_UserDetailCommonData();

  Proto_UserDetailCommonData(const Proto_UserDetailCommonData& from);

  inline Proto_UserDetailCommonData& operator=(const Proto_UserDetailCommonData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_UserDetailCommonData& default_instance();

  void Swap(Proto_UserDetailCommonData* other);

  // implements Message ----------------------------------------------

  Proto_UserDetailCommonData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_UserDetailCommonData& from);
  void MergeFrom(const Proto_UserDetailCommonData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nick_name = 1;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 1;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint32 face_id = 2;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 2;
  inline ::google::protobuf::uint32 face_id() const;
  inline void set_face_id(::google::protobuf::uint32 value);

  // optional uint32 gender = 3;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 3;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);

  // optional uint64 jetton = 4;
  inline bool has_jetton() const;
  inline void clear_jetton();
  static const int kJettonFieldNumber = 4;
  inline ::google::protobuf::uint64 jetton() const;
  inline void set_jetton(::google::protobuf::uint64 value);

  // optional uint64 bank_jetton = 5;
  inline bool has_bank_jetton() const;
  inline void clear_bank_jetton();
  static const int kBankJettonFieldNumber = 5;
  inline ::google::protobuf::uint64 bank_jetton() const;
  inline void set_bank_jetton(::google::protobuf::uint64 value);

  // optional uint64 agent_id = 6;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 6;
  inline ::google::protobuf::uint64 agent_id() const;
  inline void set_agent_id(::google::protobuf::uint64 value);

  // optional uint64 phonenum = 7;
  inline bool has_phonenum() const;
  inline void clear_phonenum();
  static const int kPhonenumFieldNumber = 7;
  inline ::google::protobuf::uint64 phonenum() const;
  inline void set_phonenum(::google::protobuf::uint64 value);

  // optional uint32 vip_level = 8;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional uint32 aread_id = 9;
  inline bool has_aread_id() const;
  inline void clear_aread_id();
  static const int kAreadIdFieldNumber = 9;
  inline ::google::protobuf::uint32 aread_id() const;
  inline void set_aread_id(::google::protobuf::uint32 value);

  // optional uint64 referrer_id = 10;
  inline bool has_referrer_id() const;
  inline void clear_referrer_id();
  static const int kReferrerIdFieldNumber = 10;
  inline ::google::protobuf::uint64 referrer_id() const;
  inline void set_referrer_id(::google::protobuf::uint64 value);

  // optional bool first_recharge = 11;
  inline bool has_first_recharge() const;
  inline void clear_first_recharge();
  static const int kFirstRechargeFieldNumber = 11;
  inline bool first_recharge() const;
  inline void set_first_recharge(bool value);

  // optional uint64 show_userid = 12;
  inline bool has_show_userid() const;
  inline void clear_show_userid();
  static const int kShowUseridFieldNumber = 12;
  inline ::google::protobuf::uint64 show_userid() const;
  inline void set_show_userid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_UserDetailCommonData)
 private:
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_face_id();
  inline void clear_has_face_id();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_jetton();
  inline void clear_has_jetton();
  inline void set_has_bank_jetton();
  inline void clear_has_bank_jetton();
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_phonenum();
  inline void clear_has_phonenum();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_aread_id();
  inline void clear_has_aread_id();
  inline void set_has_referrer_id();
  inline void clear_has_referrer_id();
  inline void set_has_first_recharge();
  inline void clear_has_first_recharge();
  inline void set_has_show_userid();
  inline void clear_has_show_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nick_name_;
  ::google::protobuf::uint32 face_id_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint64 jetton_;
  ::google::protobuf::uint64 bank_jetton_;
  ::google::protobuf::uint64 agent_id_;
  ::google::protobuf::uint64 phonenum_;
  ::google::protobuf::uint32 vip_level_;
  ::google::protobuf::uint32 aread_id_;
  ::google::protobuf::uint64 referrer_id_;
  ::google::protobuf::uint64 show_userid_;
  bool first_recharge_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_UserDetailCommonData* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSReconnectReq : public ::google::protobuf::Message {
 public:
  Proto_CSReconnectReq();
  virtual ~Proto_CSReconnectReq();

  Proto_CSReconnectReq(const Proto_CSReconnectReq& from);

  inline Proto_CSReconnectReq& operator=(const Proto_CSReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSReconnectReq& default_instance();

  void Swap(Proto_CSReconnectReq* other);

  // implements Message ----------------------------------------------

  Proto_CSReconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSReconnectReq& from);
  void MergeFrom(const Proto_CSReconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CSReconnectReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSReconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCReconnectRsp : public ::google::protobuf::Message {
 public:
  Proto_SCReconnectRsp();
  virtual ~Proto_SCReconnectRsp();

  Proto_SCReconnectRsp(const Proto_SCReconnectRsp& from);

  inline Proto_SCReconnectRsp& operator=(const Proto_SCReconnectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCReconnectRsp& default_instance();

  void Swap(Proto_SCReconnectRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCReconnectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCReconnectRsp& from);
  void MergeFrom(const Proto_SCReconnectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SCReconnectRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCReconnectRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSHeartBeatReq : public ::google::protobuf::Message {
 public:
  Proto_CSHeartBeatReq();
  virtual ~Proto_CSHeartBeatReq();

  Proto_CSHeartBeatReq(const Proto_CSHeartBeatReq& from);

  inline Proto_CSHeartBeatReq& operator=(const Proto_CSHeartBeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSHeartBeatReq& default_instance();

  void Swap(Proto_CSHeartBeatReq* other);

  // implements Message ----------------------------------------------

  Proto_CSHeartBeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSHeartBeatReq& from);
  void MergeFrom(const Proto_CSHeartBeatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CSHeartBeatReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSHeartBeatReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCHeartBeatRsp : public ::google::protobuf::Message {
 public:
  Proto_SCHeartBeatRsp();
  virtual ~Proto_SCHeartBeatRsp();

  Proto_SCHeartBeatRsp(const Proto_SCHeartBeatRsp& from);

  inline Proto_SCHeartBeatRsp& operator=(const Proto_SCHeartBeatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCHeartBeatRsp& default_instance();

  void Swap(Proto_SCHeartBeatRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCHeartBeatRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCHeartBeatRsp& from);
  void MergeFrom(const Proto_SCHeartBeatRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SCHeartBeatRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCHeartBeatRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSRegisterAccountReq : public ::google::protobuf::Message {
 public:
  Proto_CSRegisterAccountReq();
  virtual ~Proto_CSRegisterAccountReq();

  Proto_CSRegisterAccountReq(const Proto_CSRegisterAccountReq& from);

  inline Proto_CSRegisterAccountReq& operator=(const Proto_CSRegisterAccountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSRegisterAccountReq& default_instance();

  void Swap(Proto_CSRegisterAccountReq* other);

  // implements Message ----------------------------------------------

  Proto_CSRegisterAccountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSRegisterAccountReq& from);
  void MergeFrom(const Proto_CSRegisterAccountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional string nick_name = 3;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 3;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional .proto_login.Proto_UserLoginExternalData ext_data = 4;
  inline bool has_ext_data() const;
  inline void clear_ext_data();
  static const int kExtDataFieldNumber = 4;
  inline const ::proto_login::Proto_UserLoginExternalData& ext_data() const;
  inline ::proto_login::Proto_UserLoginExternalData* mutable_ext_data();
  inline ::proto_login::Proto_UserLoginExternalData* release_ext_data();
  inline void set_allocated_ext_data(::proto_login::Proto_UserLoginExternalData* ext_data);

  // optional bool is_phone = 5;
  inline bool has_is_phone() const;
  inline void clear_is_phone();
  static const int kIsPhoneFieldNumber = 5;
  inline bool is_phone() const;
  inline void set_is_phone(bool value);

  // optional string device_id = 6;
  inline bool has_device_id() const;
  inline void clear_device_id();
  static const int kDeviceIdFieldNumber = 6;
  inline const ::std::string& device_id() const;
  inline void set_device_id(const ::std::string& value);
  inline void set_device_id(const char* value);
  inline void set_device_id(const char* value, size_t size);
  inline ::std::string* mutable_device_id();
  inline ::std::string* release_device_id();
  inline void set_allocated_device_id(::std::string* device_id);

  // optional string contract_info = 7;
  inline bool has_contract_info() const;
  inline void clear_contract_info();
  static const int kContractInfoFieldNumber = 7;
  inline const ::std::string& contract_info() const;
  inline void set_contract_info(const ::std::string& value);
  inline void set_contract_info(const char* value);
  inline void set_contract_info(const char* value, size_t size);
  inline ::std::string* mutable_contract_info();
  inline ::std::string* release_contract_info();
  inline void set_allocated_contract_info(::std::string* contract_info);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CSRegisterAccountReq)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_ext_data();
  inline void clear_has_ext_data();
  inline void set_has_is_phone();
  inline void clear_has_is_phone();
  inline void set_has_device_id();
  inline void clear_has_device_id();
  inline void set_has_contract_info();
  inline void clear_has_contract_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::std::string* password_;
  ::std::string* nick_name_;
  ::proto_login::Proto_UserLoginExternalData* ext_data_;
  ::std::string* device_id_;
  ::std::string* contract_info_;
  bool is_phone_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSRegisterAccountReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCRegisterAccountRsp : public ::google::protobuf::Message {
 public:
  Proto_SCRegisterAccountRsp();
  virtual ~Proto_SCRegisterAccountRsp();

  Proto_SCRegisterAccountRsp(const Proto_SCRegisterAccountRsp& from);

  inline Proto_SCRegisterAccountRsp& operator=(const Proto_SCRegisterAccountRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCRegisterAccountRsp& default_instance();

  void Swap(Proto_SCRegisterAccountRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCRegisterAccountRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCRegisterAccountRsp& from);
  void MergeFrom(const Proto_SCRegisterAccountRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 login_time = 3;
  inline bool has_login_time() const;
  inline void clear_login_time();
  static const int kLoginTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 login_time() const;
  inline void set_login_time(::google::protobuf::uint64 value);

  // optional string token = 4;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 4;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // repeated .proto_login.Proto_CSServerIP server_ip_list = 5;
  inline int server_ip_list_size() const;
  inline void clear_server_ip_list();
  static const int kServerIpListFieldNumber = 5;
  inline const ::proto_login::Proto_CSServerIP& server_ip_list(int index) const;
  inline ::proto_login::Proto_CSServerIP* mutable_server_ip_list(int index);
  inline ::proto_login::Proto_CSServerIP* add_server_ip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_CSServerIP >&
      server_ip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_CSServerIP >*
      mutable_server_ip_list();

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SCRegisterAccountRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_login_time();
  inline void clear_has_login_time();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 login_time_;
  ::std::string* token_;
  ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_CSServerIP > server_ip_list_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCRegisterAccountRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSServerIP : public ::google::protobuf::Message {
 public:
  Proto_CSServerIP();
  virtual ~Proto_CSServerIP();

  Proto_CSServerIP(const Proto_CSServerIP& from);

  inline Proto_CSServerIP& operator=(const Proto_CSServerIP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSServerIP& default_instance();

  void Swap(Proto_CSServerIP* other);

  // implements Message ----------------------------------------------

  Proto_CSServerIP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSServerIP& from);
  void MergeFrom(const Proto_CSServerIP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CSServerIP)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ip_;
  ::google::protobuf::uint32 port_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSServerIP* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSAccountLoginReq : public ::google::protobuf::Message {
 public:
  Proto_CSAccountLoginReq();
  virtual ~Proto_CSAccountLoginReq();

  Proto_CSAccountLoginReq(const Proto_CSAccountLoginReq& from);

  inline Proto_CSAccountLoginReq& operator=(const Proto_CSAccountLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSAccountLoginReq& default_instance();

  void Swap(Proto_CSAccountLoginReq* other);

  // implements Message ----------------------------------------------

  Proto_CSAccountLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSAccountLoginReq& from);
  void MergeFrom(const Proto_CSAccountLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 login_type = 1;
  inline bool has_login_type() const;
  inline void clear_login_type();
  static const int kLoginTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 login_type() const;
  inline void set_login_type(::google::protobuf::uint32 value);

  // optional string account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional string device_id = 4;
  inline bool has_device_id() const;
  inline void clear_device_id();
  static const int kDeviceIdFieldNumber = 4;
  inline const ::std::string& device_id() const;
  inline void set_device_id(const ::std::string& value);
  inline void set_device_id(const char* value);
  inline void set_device_id(const char* value, size_t size);
  inline ::std::string* mutable_device_id();
  inline ::std::string* release_device_id();
  inline void set_allocated_device_id(::std::string* device_id);

  // optional string contract_info = 5;
  inline bool has_contract_info() const;
  inline void clear_contract_info();
  static const int kContractInfoFieldNumber = 5;
  inline const ::std::string& contract_info() const;
  inline void set_contract_info(const ::std::string& value);
  inline void set_contract_info(const char* value);
  inline void set_contract_info(const char* value, size_t size);
  inline ::std::string* mutable_contract_info();
  inline ::std::string* release_contract_info();
  inline void set_allocated_contract_info(::std::string* contract_info);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CSAccountLoginReq)
 private:
  inline void set_has_login_type();
  inline void clear_has_login_type();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_device_id();
  inline void clear_has_device_id();
  inline void set_has_contract_info();
  inline void clear_has_contract_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::std::string* password_;
  ::std::string* device_id_;
  ::std::string* contract_info_;
  ::google::protobuf::uint32 login_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSAccountLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCAccountLoginRsp : public ::google::protobuf::Message {
 public:
  Proto_SCAccountLoginRsp();
  virtual ~Proto_SCAccountLoginRsp();

  Proto_SCAccountLoginRsp(const Proto_SCAccountLoginRsp& from);

  inline Proto_SCAccountLoginRsp& operator=(const Proto_SCAccountLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCAccountLoginRsp& default_instance();

  void Swap(Proto_SCAccountLoginRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCAccountLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCAccountLoginRsp& from);
  void MergeFrom(const Proto_SCAccountLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 login_time = 3;
  inline bool has_login_time() const;
  inline void clear_login_time();
  static const int kLoginTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 login_time() const;
  inline void set_login_time(::google::protobuf::uint64 value);

  // optional string token = 4;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 4;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // repeated .proto_login.Proto_CSServerIP server_ip_list = 5;
  inline int server_ip_list_size() const;
  inline void clear_server_ip_list();
  static const int kServerIpListFieldNumber = 5;
  inline const ::proto_login::Proto_CSServerIP& server_ip_list(int index) const;
  inline ::proto_login::Proto_CSServerIP* mutable_server_ip_list(int index);
  inline ::proto_login::Proto_CSServerIP* add_server_ip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_CSServerIP >&
      server_ip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_CSServerIP >*
      mutable_server_ip_list();

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SCAccountLoginRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_login_time();
  inline void clear_has_login_time();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 login_time_;
  ::std::string* token_;
  ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_CSServerIP > server_ip_list_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCAccountLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSUserLoginReq : public ::google::protobuf::Message {
 public:
  Proto_CSUserLoginReq();
  virtual ~Proto_CSUserLoginReq();

  Proto_CSUserLoginReq(const Proto_CSUserLoginReq& from);

  inline Proto_CSUserLoginReq& operator=(const Proto_CSUserLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSUserLoginReq& default_instance();

  void Swap(Proto_CSUserLoginReq* other);

  // implements Message ----------------------------------------------

  Proto_CSUserLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSUserLoginReq& from);
  void MergeFrom(const Proto_CSUserLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 login_time = 3;
  inline bool has_login_time() const;
  inline void clear_login_time();
  static const int kLoginTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 login_time() const;
  inline void set_login_time(::google::protobuf::uint64 value);

  // optional string token = 4;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 4;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // optional .proto_login.Proto_UserLoginExternalData ext_data = 5;
  inline bool has_ext_data() const;
  inline void clear_ext_data();
  static const int kExtDataFieldNumber = 5;
  inline const ::proto_login::Proto_UserLoginExternalData& ext_data() const;
  inline ::proto_login::Proto_UserLoginExternalData* mutable_ext_data();
  inline ::proto_login::Proto_UserLoginExternalData* release_ext_data();
  inline void set_allocated_ext_data(::proto_login::Proto_UserLoginExternalData* ext_data);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CSUserLoginReq)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_login_time();
  inline void clear_has_login_time();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_ext_data();
  inline void clear_has_ext_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 login_time_;
  ::std::string* token_;
  ::proto_login::Proto_UserLoginExternalData* ext_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSUserLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCUserLoginRsp : public ::google::protobuf::Message {
 public:
  Proto_SCUserLoginRsp();
  virtual ~Proto_SCUserLoginRsp();

  Proto_SCUserLoginRsp(const Proto_SCUserLoginRsp& from);

  inline Proto_SCUserLoginRsp& operator=(const Proto_SCUserLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCUserLoginRsp& default_instance();

  void Swap(Proto_SCUserLoginRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCUserLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCUserLoginRsp& from);
  void MergeFrom(const Proto_SCUserLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional .proto_login.Proto_UserDetailCommonData detail_data = 3;
  inline bool has_detail_data() const;
  inline void clear_detail_data();
  static const int kDetailDataFieldNumber = 3;
  inline const ::proto_login::Proto_UserDetailCommonData& detail_data() const;
  inline ::proto_login::Proto_UserDetailCommonData* mutable_detail_data();
  inline ::proto_login::Proto_UserDetailCommonData* release_detail_data();
  inline void set_allocated_detail_data(::proto_login::Proto_UserDetailCommonData* detail_data);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SCUserLoginRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_detail_data();
  inline void clear_has_detail_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::proto_login::Proto_UserDetailCommonData* detail_data_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCUserLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSChangeFaceReq : public ::google::protobuf::Message {
 public:
  Proto_CSChangeFaceReq();
  virtual ~Proto_CSChangeFaceReq();

  Proto_CSChangeFaceReq(const Proto_CSChangeFaceReq& from);

  inline Proto_CSChangeFaceReq& operator=(const Proto_CSChangeFaceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSChangeFaceReq& default_instance();

  void Swap(Proto_CSChangeFaceReq* other);

  // implements Message ----------------------------------------------

  Proto_CSChangeFaceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSChangeFaceReq& from);
  void MergeFrom(const Proto_CSChangeFaceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 face_id = 1;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 face_id() const;
  inline void set_face_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CSChangeFaceReq)
 private:
  inline void set_has_face_id();
  inline void clear_has_face_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 face_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSChangeFaceReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCChangeFaceRsp : public ::google::protobuf::Message {
 public:
  Proto_SCChangeFaceRsp();
  virtual ~Proto_SCChangeFaceRsp();

  Proto_SCChangeFaceRsp(const Proto_SCChangeFaceRsp& from);

  inline Proto_SCChangeFaceRsp& operator=(const Proto_SCChangeFaceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCChangeFaceRsp& default_instance();

  void Swap(Proto_SCChangeFaceRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCChangeFaceRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCChangeFaceRsp& from);
  void MergeFrom(const Proto_SCChangeFaceRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 face_id = 2;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 2;
  inline ::google::protobuf::int32 face_id() const;
  inline void set_face_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SCChangeFaceRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_face_id();
  inline void clear_has_face_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 face_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCChangeFaceRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSChangeNickNameReq : public ::google::protobuf::Message {
 public:
  Proto_CSChangeNickNameReq();
  virtual ~Proto_CSChangeNickNameReq();

  Proto_CSChangeNickNameReq(const Proto_CSChangeNickNameReq& from);

  inline Proto_CSChangeNickNameReq& operator=(const Proto_CSChangeNickNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSChangeNickNameReq& default_instance();

  void Swap(Proto_CSChangeNickNameReq* other);

  // implements Message ----------------------------------------------

  Proto_CSChangeNickNameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSChangeNickNameReq& from);
  void MergeFrom(const Proto_CSChangeNickNameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nick_name = 1;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 1;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CSChangeNickNameReq)
 private:
  inline void set_has_nick_name();
  inline void clear_has_nick_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nick_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSChangeNickNameReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCChangNickNameRsp : public ::google::protobuf::Message {
 public:
  Proto_SCChangNickNameRsp();
  virtual ~Proto_SCChangNickNameRsp();

  Proto_SCChangNickNameRsp(const Proto_SCChangNickNameRsp& from);

  inline Proto_SCChangNickNameRsp& operator=(const Proto_SCChangNickNameRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCChangNickNameRsp& default_instance();

  void Swap(Proto_SCChangNickNameRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCChangNickNameRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCChangNickNameRsp& from);
  void MergeFrom(const Proto_SCChangNickNameRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SCChangNickNameRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nick_name_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCChangNickNameRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSQueryUserReq : public ::google::protobuf::Message {
 public:
  Proto_CSQueryUserReq();
  virtual ~Proto_CSQueryUserReq();

  Proto_CSQueryUserReq(const Proto_CSQueryUserReq& from);

  inline Proto_CSQueryUserReq& operator=(const Proto_CSQueryUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSQueryUserReq& default_instance();

  void Swap(Proto_CSQueryUserReq* other);

  // implements Message ----------------------------------------------

  Proto_CSQueryUserReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSQueryUserReq& from);
  void MergeFrom(const Proto_CSQueryUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 query_user_id = 1;
  inline int query_user_id_size() const;
  inline void clear_query_user_id();
  static const int kQueryUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 query_user_id(int index) const;
  inline void set_query_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_query_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      query_user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_query_user_id();

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CSQueryUserReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > query_user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSQueryUserReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCQueryUserRsp : public ::google::protobuf::Message {
 public:
  Proto_SCQueryUserRsp();
  virtual ~Proto_SCQueryUserRsp();

  Proto_SCQueryUserRsp(const Proto_SCQueryUserRsp& from);

  inline Proto_SCQueryUserRsp& operator=(const Proto_SCQueryUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCQueryUserRsp& default_instance();

  void Swap(Proto_SCQueryUserRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCQueryUserRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCQueryUserRsp& from);
  void MergeFrom(const Proto_SCQueryUserRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto_login.Proto_UserSimpleData query_user_list = 2;
  inline int query_user_list_size() const;
  inline void clear_query_user_list();
  static const int kQueryUserListFieldNumber = 2;
  inline const ::proto_login::Proto_UserSimpleData& query_user_list(int index) const;
  inline ::proto_login::Proto_UserSimpleData* mutable_query_user_list(int index);
  inline ::proto_login::Proto_UserSimpleData* add_query_user_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_UserSimpleData >&
      query_user_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_UserSimpleData >*
      mutable_query_user_list();

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SCQueryUserRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_UserSimpleData > query_user_list_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCQueryUserRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CS_LoginServer_PhoneAutoCodeReq : public ::google::protobuf::Message {
 public:
  Proto_CS_LoginServer_PhoneAutoCodeReq();
  virtual ~Proto_CS_LoginServer_PhoneAutoCodeReq();

  Proto_CS_LoginServer_PhoneAutoCodeReq(const Proto_CS_LoginServer_PhoneAutoCodeReq& from);

  inline Proto_CS_LoginServer_PhoneAutoCodeReq& operator=(const Proto_CS_LoginServer_PhoneAutoCodeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CS_LoginServer_PhoneAutoCodeReq& default_instance();

  void Swap(Proto_CS_LoginServer_PhoneAutoCodeReq* other);

  // implements Message ----------------------------------------------

  Proto_CS_LoginServer_PhoneAutoCodeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CS_LoginServer_PhoneAutoCodeReq& from);
  void MergeFrom(const Proto_CS_LoginServer_PhoneAutoCodeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional uint32 code_type = 2;
  inline bool has_code_type() const;
  inline void clear_code_type();
  static const int kCodeTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 code_type() const;
  inline void set_code_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CS_LoginServer_PhoneAutoCodeReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_code_type();
  inline void clear_has_code_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::uint32 code_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CS_LoginServer_PhoneAutoCodeReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SC_LoginServer_PhoneAutoCodeRsp : public ::google::protobuf::Message {
 public:
  Proto_SC_LoginServer_PhoneAutoCodeRsp();
  virtual ~Proto_SC_LoginServer_PhoneAutoCodeRsp();

  Proto_SC_LoginServer_PhoneAutoCodeRsp(const Proto_SC_LoginServer_PhoneAutoCodeRsp& from);

  inline Proto_SC_LoginServer_PhoneAutoCodeRsp& operator=(const Proto_SC_LoginServer_PhoneAutoCodeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SC_LoginServer_PhoneAutoCodeRsp& default_instance();

  void Swap(Proto_SC_LoginServer_PhoneAutoCodeRsp* other);

  // implements Message ----------------------------------------------

  Proto_SC_LoginServer_PhoneAutoCodeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SC_LoginServer_PhoneAutoCodeRsp& from);
  void MergeFrom(const Proto_SC_LoginServer_PhoneAutoCodeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 phone_num = 2;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional uint32 code_type = 3;
  inline bool has_code_type() const;
  inline void clear_code_type();
  static const int kCodeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 code_type() const;
  inline void set_code_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SC_LoginServer_PhoneAutoCodeRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_code_type();
  inline void clear_has_code_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 code_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SC_LoginServer_PhoneAutoCodeRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CS_LoginServer_CheckPhoneCodeReq : public ::google::protobuf::Message {
 public:
  Proto_CS_LoginServer_CheckPhoneCodeReq();
  virtual ~Proto_CS_LoginServer_CheckPhoneCodeReq();

  Proto_CS_LoginServer_CheckPhoneCodeReq(const Proto_CS_LoginServer_CheckPhoneCodeReq& from);

  inline Proto_CS_LoginServer_CheckPhoneCodeReq& operator=(const Proto_CS_LoginServer_CheckPhoneCodeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CS_LoginServer_CheckPhoneCodeReq& default_instance();

  void Swap(Proto_CS_LoginServer_CheckPhoneCodeReq* other);

  // implements Message ----------------------------------------------

  Proto_CS_LoginServer_CheckPhoneCodeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CS_LoginServer_CheckPhoneCodeReq& from);
  void MergeFrom(const Proto_CS_LoginServer_CheckPhoneCodeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional uint32 auth_code = 2;
  inline bool has_auth_code() const;
  inline void clear_auth_code();
  static const int kAuthCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 auth_code() const;
  inline void set_auth_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CS_LoginServer_CheckPhoneCodeReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_auth_code();
  inline void clear_has_auth_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::uint32 auth_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CS_LoginServer_CheckPhoneCodeReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SC_LoginServer_CheckPhoneCodeRsp : public ::google::protobuf::Message {
 public:
  Proto_SC_LoginServer_CheckPhoneCodeRsp();
  virtual ~Proto_SC_LoginServer_CheckPhoneCodeRsp();

  Proto_SC_LoginServer_CheckPhoneCodeRsp(const Proto_SC_LoginServer_CheckPhoneCodeRsp& from);

  inline Proto_SC_LoginServer_CheckPhoneCodeRsp& operator=(const Proto_SC_LoginServer_CheckPhoneCodeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SC_LoginServer_CheckPhoneCodeRsp& default_instance();

  void Swap(Proto_SC_LoginServer_CheckPhoneCodeRsp* other);

  // implements Message ----------------------------------------------

  Proto_SC_LoginServer_CheckPhoneCodeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SC_LoginServer_CheckPhoneCodeRsp& from);
  void MergeFrom(const Proto_SC_LoginServer_CheckPhoneCodeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 phone_num = 2;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional uint32 code_type = 3;
  inline bool has_code_type() const;
  inline void clear_code_type();
  static const int kCodeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 code_type() const;
  inline void set_code_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SC_LoginServer_CheckPhoneCodeRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_code_type();
  inline void clear_has_code_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 code_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SC_LoginServer_CheckPhoneCodeRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CS_ChangePasswordReq : public ::google::protobuf::Message {
 public:
  Proto_CS_ChangePasswordReq();
  virtual ~Proto_CS_ChangePasswordReq();

  Proto_CS_ChangePasswordReq(const Proto_CS_ChangePasswordReq& from);

  inline Proto_CS_ChangePasswordReq& operator=(const Proto_CS_ChangePasswordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CS_ChangePasswordReq& default_instance();

  void Swap(Proto_CS_ChangePasswordReq* other);

  // implements Message ----------------------------------------------

  Proto_CS_ChangePasswordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CS_ChangePasswordReq& from);
  void MergeFrom(const Proto_CS_ChangePasswordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional string new_password = 2;
  inline bool has_new_password() const;
  inline void clear_new_password();
  static const int kNewPasswordFieldNumber = 2;
  inline const ::std::string& new_password() const;
  inline void set_new_password(const ::std::string& value);
  inline void set_new_password(const char* value);
  inline void set_new_password(const char* value, size_t size);
  inline ::std::string* mutable_new_password();
  inline ::std::string* release_new_password();
  inline void set_allocated_new_password(::std::string* new_password);

  // optional string device_id = 3;
  inline bool has_device_id() const;
  inline void clear_device_id();
  static const int kDeviceIdFieldNumber = 3;
  inline const ::std::string& device_id() const;
  inline void set_device_id(const ::std::string& value);
  inline void set_device_id(const char* value);
  inline void set_device_id(const char* value, size_t size);
  inline ::std::string* mutable_device_id();
  inline ::std::string* release_device_id();
  inline void set_allocated_device_id(::std::string* device_id);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CS_ChangePasswordReq)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_new_password();
  inline void clear_has_new_password();
  inline void set_has_device_id();
  inline void clear_has_device_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::std::string* new_password_;
  ::std::string* device_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CS_ChangePasswordReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SC_ChangePasswordRsp : public ::google::protobuf::Message {
 public:
  Proto_SC_ChangePasswordRsp();
  virtual ~Proto_SC_ChangePasswordRsp();

  Proto_SC_ChangePasswordRsp(const Proto_SC_ChangePasswordRsp& from);

  inline Proto_SC_ChangePasswordRsp& operator=(const Proto_SC_ChangePasswordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SC_ChangePasswordRsp& default_instance();

  void Swap(Proto_SC_ChangePasswordRsp* other);

  // implements Message ----------------------------------------------

  Proto_SC_ChangePasswordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SC_ChangePasswordRsp& from);
  void MergeFrom(const Proto_SC_ChangePasswordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SC_ChangePasswordRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SC_ChangePasswordRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SC_LoginServer_NotifyPhoneCheck : public ::google::protobuf::Message {
 public:
  Proto_SC_LoginServer_NotifyPhoneCheck();
  virtual ~Proto_SC_LoginServer_NotifyPhoneCheck();

  Proto_SC_LoginServer_NotifyPhoneCheck(const Proto_SC_LoginServer_NotifyPhoneCheck& from);

  inline Proto_SC_LoginServer_NotifyPhoneCheck& operator=(const Proto_SC_LoginServer_NotifyPhoneCheck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SC_LoginServer_NotifyPhoneCheck& default_instance();

  void Swap(Proto_SC_LoginServer_NotifyPhoneCheck* other);

  // implements Message ----------------------------------------------

  Proto_SC_LoginServer_NotifyPhoneCheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SC_LoginServer_NotifyPhoneCheck& from);
  void MergeFrom(const Proto_SC_LoginServer_NotifyPhoneCheck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 phone_num = 2;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SC_LoginServer_NotifyPhoneCheck)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SC_LoginServer_NotifyPhoneCheck* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CS_Player_PhoneAutoCodeReq : public ::google::protobuf::Message {
 public:
  Proto_CS_Player_PhoneAutoCodeReq();
  virtual ~Proto_CS_Player_PhoneAutoCodeReq();

  Proto_CS_Player_PhoneAutoCodeReq(const Proto_CS_Player_PhoneAutoCodeReq& from);

  inline Proto_CS_Player_PhoneAutoCodeReq& operator=(const Proto_CS_Player_PhoneAutoCodeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CS_Player_PhoneAutoCodeReq& default_instance();

  void Swap(Proto_CS_Player_PhoneAutoCodeReq* other);

  // implements Message ----------------------------------------------

  Proto_CS_Player_PhoneAutoCodeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CS_Player_PhoneAutoCodeReq& from);
  void MergeFrom(const Proto_CS_Player_PhoneAutoCodeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional uint32 code_type = 2;
  inline bool has_code_type() const;
  inline void clear_code_type();
  static const int kCodeTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 code_type() const;
  inline void set_code_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CS_Player_PhoneAutoCodeReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_code_type();
  inline void clear_has_code_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::uint32 code_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CS_Player_PhoneAutoCodeReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SC_Player_PhoneAutoCodeRsp : public ::google::protobuf::Message {
 public:
  Proto_SC_Player_PhoneAutoCodeRsp();
  virtual ~Proto_SC_Player_PhoneAutoCodeRsp();

  Proto_SC_Player_PhoneAutoCodeRsp(const Proto_SC_Player_PhoneAutoCodeRsp& from);

  inline Proto_SC_Player_PhoneAutoCodeRsp& operator=(const Proto_SC_Player_PhoneAutoCodeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SC_Player_PhoneAutoCodeRsp& default_instance();

  void Swap(Proto_SC_Player_PhoneAutoCodeRsp* other);

  // implements Message ----------------------------------------------

  Proto_SC_Player_PhoneAutoCodeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SC_Player_PhoneAutoCodeRsp& from);
  void MergeFrom(const Proto_SC_Player_PhoneAutoCodeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 phone_num = 2;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional uint32 code_type = 3;
  inline bool has_code_type() const;
  inline void clear_code_type();
  static const int kCodeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 code_type() const;
  inline void set_code_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SC_Player_PhoneAutoCodeRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_code_type();
  inline void clear_has_code_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 code_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SC_Player_PhoneAutoCodeRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CS_Player_CheckPhoneCodeReq : public ::google::protobuf::Message {
 public:
  Proto_CS_Player_CheckPhoneCodeReq();
  virtual ~Proto_CS_Player_CheckPhoneCodeReq();

  Proto_CS_Player_CheckPhoneCodeReq(const Proto_CS_Player_CheckPhoneCodeReq& from);

  inline Proto_CS_Player_CheckPhoneCodeReq& operator=(const Proto_CS_Player_CheckPhoneCodeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CS_Player_CheckPhoneCodeReq& default_instance();

  void Swap(Proto_CS_Player_CheckPhoneCodeReq* other);

  // implements Message ----------------------------------------------

  Proto_CS_Player_CheckPhoneCodeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CS_Player_CheckPhoneCodeReq& from);
  void MergeFrom(const Proto_CS_Player_CheckPhoneCodeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional uint32 auth_code = 2;
  inline bool has_auth_code() const;
  inline void clear_auth_code();
  static const int kAuthCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 auth_code() const;
  inline void set_auth_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CS_Player_CheckPhoneCodeReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_auth_code();
  inline void clear_has_auth_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::uint32 auth_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CS_Player_CheckPhoneCodeReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SC_Player_CheckPhoneCodeRsp : public ::google::protobuf::Message {
 public:
  Proto_SC_Player_CheckPhoneCodeRsp();
  virtual ~Proto_SC_Player_CheckPhoneCodeRsp();

  Proto_SC_Player_CheckPhoneCodeRsp(const Proto_SC_Player_CheckPhoneCodeRsp& from);

  inline Proto_SC_Player_CheckPhoneCodeRsp& operator=(const Proto_SC_Player_CheckPhoneCodeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SC_Player_CheckPhoneCodeRsp& default_instance();

  void Swap(Proto_SC_Player_CheckPhoneCodeRsp* other);

  // implements Message ----------------------------------------------

  Proto_SC_Player_CheckPhoneCodeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SC_Player_CheckPhoneCodeRsp& from);
  void MergeFrom(const Proto_SC_Player_CheckPhoneCodeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 phone_num = 2;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional uint32 code_type = 3;
  inline bool has_code_type() const;
  inline void clear_code_type();
  static const int kCodeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 code_type() const;
  inline void set_code_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SC_Player_CheckPhoneCodeRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_code_type();
  inline void clear_has_code_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 code_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SC_Player_CheckPhoneCodeRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CS_Player_BindPhoneReq : public ::google::protobuf::Message {
 public:
  Proto_CS_Player_BindPhoneReq();
  virtual ~Proto_CS_Player_BindPhoneReq();

  Proto_CS_Player_BindPhoneReq(const Proto_CS_Player_BindPhoneReq& from);

  inline Proto_CS_Player_BindPhoneReq& operator=(const Proto_CS_Player_BindPhoneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CS_Player_BindPhoneReq& default_instance();

  void Swap(Proto_CS_Player_BindPhoneReq* other);

  // implements Message ----------------------------------------------

  Proto_CS_Player_BindPhoneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CS_Player_BindPhoneReq& from);
  void MergeFrom(const Proto_CS_Player_BindPhoneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional string device_id = 4;
  inline bool has_device_id() const;
  inline void clear_device_id();
  static const int kDeviceIdFieldNumber = 4;
  inline const ::std::string& device_id() const;
  inline void set_device_id(const ::std::string& value);
  inline void set_device_id(const char* value);
  inline void set_device_id(const char* value, size_t size);
  inline ::std::string* mutable_device_id();
  inline ::std::string* release_device_id();
  inline void set_allocated_device_id(::std::string* device_id);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CS_Player_BindPhoneReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_device_id();
  inline void clear_has_device_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::std::string* nick_name_;
  ::std::string* password_;
  ::std::string* device_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CS_Player_BindPhoneReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SC_Player_BindPhoneRsp : public ::google::protobuf::Message {
 public:
  Proto_SC_Player_BindPhoneRsp();
  virtual ~Proto_SC_Player_BindPhoneRsp();

  Proto_SC_Player_BindPhoneRsp(const Proto_SC_Player_BindPhoneRsp& from);

  inline Proto_SC_Player_BindPhoneRsp& operator=(const Proto_SC_Player_BindPhoneRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SC_Player_BindPhoneRsp& default_instance();

  void Swap(Proto_SC_Player_BindPhoneRsp* other);

  // implements Message ----------------------------------------------

  Proto_SC_Player_BindPhoneRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SC_Player_BindPhoneRsp& from);
  void MergeFrom(const Proto_SC_Player_BindPhoneRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 phone_num = 2;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional string nick_name = 3;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 3;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SC_Player_BindPhoneRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::std::string* nick_name_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SC_Player_BindPhoneRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CS_PhoneChangeBandPasswordReq : public ::google::protobuf::Message {
 public:
  Proto_CS_PhoneChangeBandPasswordReq();
  virtual ~Proto_CS_PhoneChangeBandPasswordReq();

  Proto_CS_PhoneChangeBandPasswordReq(const Proto_CS_PhoneChangeBandPasswordReq& from);

  inline Proto_CS_PhoneChangeBandPasswordReq& operator=(const Proto_CS_PhoneChangeBandPasswordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CS_PhoneChangeBandPasswordReq& default_instance();

  void Swap(Proto_CS_PhoneChangeBandPasswordReq* other);

  // implements Message ----------------------------------------------

  Proto_CS_PhoneChangeBandPasswordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CS_PhoneChangeBandPasswordReq& from);
  void MergeFrom(const Proto_CS_PhoneChangeBandPasswordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional string new_password = 2;
  inline bool has_new_password() const;
  inline void clear_new_password();
  static const int kNewPasswordFieldNumber = 2;
  inline const ::std::string& new_password() const;
  inline void set_new_password(const ::std::string& value);
  inline void set_new_password(const char* value);
  inline void set_new_password(const char* value, size_t size);
  inline ::std::string* mutable_new_password();
  inline ::std::string* release_new_password();
  inline void set_allocated_new_password(::std::string* new_password);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CS_PhoneChangeBandPasswordReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_new_password();
  inline void clear_has_new_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::std::string* new_password_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CS_PhoneChangeBandPasswordReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SC_PhoneChangeBandPasswordRsp : public ::google::protobuf::Message {
 public:
  Proto_SC_PhoneChangeBandPasswordRsp();
  virtual ~Proto_SC_PhoneChangeBandPasswordRsp();

  Proto_SC_PhoneChangeBandPasswordRsp(const Proto_SC_PhoneChangeBandPasswordRsp& from);

  inline Proto_SC_PhoneChangeBandPasswordRsp& operator=(const Proto_SC_PhoneChangeBandPasswordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SC_PhoneChangeBandPasswordRsp& default_instance();

  void Swap(Proto_SC_PhoneChangeBandPasswordRsp* other);

  // implements Message ----------------------------------------------

  Proto_SC_PhoneChangeBandPasswordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SC_PhoneChangeBandPasswordRsp& from);
  void MergeFrom(const Proto_SC_PhoneChangeBandPasswordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SC_PhoneChangeBandPasswordRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SC_PhoneChangeBandPasswordRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSCheckContractInfoReq : public ::google::protobuf::Message {
 public:
  Proto_CSCheckContractInfoReq();
  virtual ~Proto_CSCheckContractInfoReq();

  Proto_CSCheckContractInfoReq(const Proto_CSCheckContractInfoReq& from);

  inline Proto_CSCheckContractInfoReq& operator=(const Proto_CSCheckContractInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSCheckContractInfoReq& default_instance();

  void Swap(Proto_CSCheckContractInfoReq* other);

  // implements Message ----------------------------------------------

  Proto_CSCheckContractInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSCheckContractInfoReq& from);
  void MergeFrom(const Proto_CSCheckContractInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string contract_info = 1;
  inline bool has_contract_info() const;
  inline void clear_contract_info();
  static const int kContractInfoFieldNumber = 1;
  inline const ::std::string& contract_info() const;
  inline void set_contract_info(const ::std::string& value);
  inline void set_contract_info(const char* value);
  inline void set_contract_info(const char* value, size_t size);
  inline ::std::string* mutable_contract_info();
  inline ::std::string* release_contract_info();
  inline void set_allocated_contract_info(::std::string* contract_info);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_CSCheckContractInfoReq)
 private:
  inline void set_has_contract_info();
  inline void clear_has_contract_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* contract_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSCheckContractInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCCheckContractInfoRsp : public ::google::protobuf::Message {
 public:
  Proto_SCCheckContractInfoRsp();
  virtual ~Proto_SCCheckContractInfoRsp();

  Proto_SCCheckContractInfoRsp(const Proto_SCCheckContractInfoRsp& from);

  inline Proto_SCCheckContractInfoRsp& operator=(const Proto_SCCheckContractInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCCheckContractInfoRsp& default_instance();

  void Swap(Proto_SCCheckContractInfoRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCCheckContractInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCCheckContractInfoRsp& from);
  void MergeFrom(const Proto_SCCheckContractInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SCCheckContractInfoRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCCheckContractInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCKetPlayerNotify : public ::google::protobuf::Message {
 public:
  Proto_SCKetPlayerNotify();
  virtual ~Proto_SCKetPlayerNotify();

  Proto_SCKetPlayerNotify(const Proto_SCKetPlayerNotify& from);

  inline Proto_SCKetPlayerNotify& operator=(const Proto_SCKetPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCKetPlayerNotify& default_instance();

  void Swap(Proto_SCKetPlayerNotify* other);

  // implements Message ----------------------------------------------

  Proto_SCKetPlayerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCKetPlayerNotify& from);
  void MergeFrom(const Proto_SCKetPlayerNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_login.Proto_SCKetPlayerNotify)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fcs_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fcs_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCKetPlayerNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// Proto_UserSimpleData

// optional uint64 userid = 1;
inline bool Proto_UserSimpleData::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_UserSimpleData::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_UserSimpleData::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_UserSimpleData::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 Proto_UserSimpleData::userid() const {
  return userid_;
}
inline void Proto_UserSimpleData::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
}

// optional string nickname = 2;
inline bool Proto_UserSimpleData::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_UserSimpleData::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_UserSimpleData::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_UserSimpleData::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& Proto_UserSimpleData::nickname() const {
  return *nickname_;
}
inline void Proto_UserSimpleData::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void Proto_UserSimpleData::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void Proto_UserSimpleData::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_UserSimpleData::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  return nickname_;
}
inline ::std::string* Proto_UserSimpleData::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_UserSimpleData::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 face = 3;
inline bool Proto_UserSimpleData::has_face() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_UserSimpleData::set_has_face() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_UserSimpleData::clear_has_face() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_UserSimpleData::clear_face() {
  face_ = 0u;
  clear_has_face();
}
inline ::google::protobuf::uint32 Proto_UserSimpleData::face() const {
  return face_;
}
inline void Proto_UserSimpleData::set_face(::google::protobuf::uint32 value) {
  set_has_face();
  face_ = value;
}

// optional uint32 gender = 4;
inline bool Proto_UserSimpleData::has_gender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_UserSimpleData::set_has_gender() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_UserSimpleData::clear_has_gender() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_UserSimpleData::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 Proto_UserSimpleData::gender() const {
  return gender_;
}
inline void Proto_UserSimpleData::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
}

// optional uint32 age = 5;
inline bool Proto_UserSimpleData::has_age() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_UserSimpleData::set_has_age() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_UserSimpleData::clear_has_age() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_UserSimpleData::clear_age() {
  age_ = 0u;
  clear_has_age();
}
inline ::google::protobuf::uint32 Proto_UserSimpleData::age() const {
  return age_;
}
inline void Proto_UserSimpleData::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
}

// -------------------------------------------------------------------

// Proto_UserLoginExternalData

// optional uint32 aread_id = 1;
inline bool Proto_UserLoginExternalData::has_aread_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_UserLoginExternalData::set_has_aread_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_UserLoginExternalData::clear_has_aread_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_UserLoginExternalData::clear_aread_id() {
  aread_id_ = 0u;
  clear_has_aread_id();
}
inline ::google::protobuf::uint32 Proto_UserLoginExternalData::aread_id() const {
  return aread_id_;
}
inline void Proto_UserLoginExternalData::set_aread_id(::google::protobuf::uint32 value) {
  set_has_aread_id();
  aread_id_ = value;
}

// optional uint32 agent_id = 2;
inline bool Proto_UserLoginExternalData::has_agent_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_UserLoginExternalData::set_has_agent_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_UserLoginExternalData::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_UserLoginExternalData::clear_agent_id() {
  agent_id_ = 0u;
  clear_has_agent_id();
}
inline ::google::protobuf::uint32 Proto_UserLoginExternalData::agent_id() const {
  return agent_id_;
}
inline void Proto_UserLoginExternalData::set_agent_id(::google::protobuf::uint32 value) {
  set_has_agent_id();
  agent_id_ = value;
}

// optional uint32 channel_id = 3;
inline bool Proto_UserLoginExternalData::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_UserLoginExternalData::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_UserLoginExternalData::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_UserLoginExternalData::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 Proto_UserLoginExternalData::channel_id() const {
  return channel_id_;
}
inline void Proto_UserLoginExternalData::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional uint64 referral_code = 4;
inline bool Proto_UserLoginExternalData::has_referral_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_UserLoginExternalData::set_has_referral_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_UserLoginExternalData::clear_has_referral_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_UserLoginExternalData::clear_referral_code() {
  referral_code_ = GOOGLE_ULONGLONG(0);
  clear_has_referral_code();
}
inline ::google::protobuf::uint64 Proto_UserLoginExternalData::referral_code() const {
  return referral_code_;
}
inline void Proto_UserLoginExternalData::set_referral_code(::google::protobuf::uint64 value) {
  set_has_referral_code();
  referral_code_ = value;
}

// optional string platform_os = 5;
inline bool Proto_UserLoginExternalData::has_platform_os() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_UserLoginExternalData::set_has_platform_os() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_UserLoginExternalData::clear_has_platform_os() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_UserLoginExternalData::clear_platform_os() {
  if (platform_os_ != &::google::protobuf::internal::kEmptyString) {
    platform_os_->clear();
  }
  clear_has_platform_os();
}
inline const ::std::string& Proto_UserLoginExternalData::platform_os() const {
  return *platform_os_;
}
inline void Proto_UserLoginExternalData::set_platform_os(const ::std::string& value) {
  set_has_platform_os();
  if (platform_os_ == &::google::protobuf::internal::kEmptyString) {
    platform_os_ = new ::std::string;
  }
  platform_os_->assign(value);
}
inline void Proto_UserLoginExternalData::set_platform_os(const char* value) {
  set_has_platform_os();
  if (platform_os_ == &::google::protobuf::internal::kEmptyString) {
    platform_os_ = new ::std::string;
  }
  platform_os_->assign(value);
}
inline void Proto_UserLoginExternalData::set_platform_os(const char* value, size_t size) {
  set_has_platform_os();
  if (platform_os_ == &::google::protobuf::internal::kEmptyString) {
    platform_os_ = new ::std::string;
  }
  platform_os_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_UserLoginExternalData::mutable_platform_os() {
  set_has_platform_os();
  if (platform_os_ == &::google::protobuf::internal::kEmptyString) {
    platform_os_ = new ::std::string;
  }
  return platform_os_;
}
inline ::std::string* Proto_UserLoginExternalData::release_platform_os() {
  clear_has_platform_os();
  if (platform_os_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_os_;
    platform_os_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_UserLoginExternalData::set_allocated_platform_os(::std::string* platform_os) {
  if (platform_os_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_os_;
  }
  if (platform_os) {
    set_has_platform_os();
    platform_os_ = platform_os;
  } else {
    clear_has_platform_os();
    platform_os_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string country = 6;
inline bool Proto_UserLoginExternalData::has_country() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_UserLoginExternalData::set_has_country() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_UserLoginExternalData::clear_has_country() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_UserLoginExternalData::clear_country() {
  if (country_ != &::google::protobuf::internal::kEmptyString) {
    country_->clear();
  }
  clear_has_country();
}
inline const ::std::string& Proto_UserLoginExternalData::country() const {
  return *country_;
}
inline void Proto_UserLoginExternalData::set_country(const ::std::string& value) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(value);
}
inline void Proto_UserLoginExternalData::set_country(const char* value) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(value);
}
inline void Proto_UserLoginExternalData::set_country(const char* value, size_t size) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_UserLoginExternalData::mutable_country() {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  return country_;
}
inline ::std::string* Proto_UserLoginExternalData::release_country() {
  clear_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = country_;
    country_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_UserLoginExternalData::set_allocated_country(::std::string* country) {
  if (country_ != &::google::protobuf::internal::kEmptyString) {
    delete country_;
  }
  if (country) {
    set_has_country();
    country_ = country;
  } else {
    clear_has_country();
    country_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string province = 7;
inline bool Proto_UserLoginExternalData::has_province() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto_UserLoginExternalData::set_has_province() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto_UserLoginExternalData::clear_has_province() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto_UserLoginExternalData::clear_province() {
  if (province_ != &::google::protobuf::internal::kEmptyString) {
    province_->clear();
  }
  clear_has_province();
}
inline const ::std::string& Proto_UserLoginExternalData::province() const {
  return *province_;
}
inline void Proto_UserLoginExternalData::set_province(const ::std::string& value) {
  set_has_province();
  if (province_ == &::google::protobuf::internal::kEmptyString) {
    province_ = new ::std::string;
  }
  province_->assign(value);
}
inline void Proto_UserLoginExternalData::set_province(const char* value) {
  set_has_province();
  if (province_ == &::google::protobuf::internal::kEmptyString) {
    province_ = new ::std::string;
  }
  province_->assign(value);
}
inline void Proto_UserLoginExternalData::set_province(const char* value, size_t size) {
  set_has_province();
  if (province_ == &::google::protobuf::internal::kEmptyString) {
    province_ = new ::std::string;
  }
  province_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_UserLoginExternalData::mutable_province() {
  set_has_province();
  if (province_ == &::google::protobuf::internal::kEmptyString) {
    province_ = new ::std::string;
  }
  return province_;
}
inline ::std::string* Proto_UserLoginExternalData::release_province() {
  clear_has_province();
  if (province_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = province_;
    province_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_UserLoginExternalData::set_allocated_province(::std::string* province) {
  if (province_ != &::google::protobuf::internal::kEmptyString) {
    delete province_;
  }
  if (province) {
    set_has_province();
    province_ = province;
  } else {
    clear_has_province();
    province_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string city = 8;
inline bool Proto_UserLoginExternalData::has_city() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Proto_UserLoginExternalData::set_has_city() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Proto_UserLoginExternalData::clear_has_city() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Proto_UserLoginExternalData::clear_city() {
  if (city_ != &::google::protobuf::internal::kEmptyString) {
    city_->clear();
  }
  clear_has_city();
}
inline const ::std::string& Proto_UserLoginExternalData::city() const {
  return *city_;
}
inline void Proto_UserLoginExternalData::set_city(const ::std::string& value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::kEmptyString) {
    city_ = new ::std::string;
  }
  city_->assign(value);
}
inline void Proto_UserLoginExternalData::set_city(const char* value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::kEmptyString) {
    city_ = new ::std::string;
  }
  city_->assign(value);
}
inline void Proto_UserLoginExternalData::set_city(const char* value, size_t size) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::kEmptyString) {
    city_ = new ::std::string;
  }
  city_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_UserLoginExternalData::mutable_city() {
  set_has_city();
  if (city_ == &::google::protobuf::internal::kEmptyString) {
    city_ = new ::std::string;
  }
  return city_;
}
inline ::std::string* Proto_UserLoginExternalData::release_city() {
  clear_has_city();
  if (city_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = city_;
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_UserLoginExternalData::set_allocated_city(::std::string* city) {
  if (city_ != &::google::protobuf::internal::kEmptyString) {
    delete city_;
  }
  if (city) {
    set_has_city();
    city_ = city;
  } else {
    clear_has_city();
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string phone_mode = 9;
inline bool Proto_UserLoginExternalData::has_phone_mode() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Proto_UserLoginExternalData::set_has_phone_mode() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Proto_UserLoginExternalData::clear_has_phone_mode() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Proto_UserLoginExternalData::clear_phone_mode() {
  if (phone_mode_ != &::google::protobuf::internal::kEmptyString) {
    phone_mode_->clear();
  }
  clear_has_phone_mode();
}
inline const ::std::string& Proto_UserLoginExternalData::phone_mode() const {
  return *phone_mode_;
}
inline void Proto_UserLoginExternalData::set_phone_mode(const ::std::string& value) {
  set_has_phone_mode();
  if (phone_mode_ == &::google::protobuf::internal::kEmptyString) {
    phone_mode_ = new ::std::string;
  }
  phone_mode_->assign(value);
}
inline void Proto_UserLoginExternalData::set_phone_mode(const char* value) {
  set_has_phone_mode();
  if (phone_mode_ == &::google::protobuf::internal::kEmptyString) {
    phone_mode_ = new ::std::string;
  }
  phone_mode_->assign(value);
}
inline void Proto_UserLoginExternalData::set_phone_mode(const char* value, size_t size) {
  set_has_phone_mode();
  if (phone_mode_ == &::google::protobuf::internal::kEmptyString) {
    phone_mode_ = new ::std::string;
  }
  phone_mode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_UserLoginExternalData::mutable_phone_mode() {
  set_has_phone_mode();
  if (phone_mode_ == &::google::protobuf::internal::kEmptyString) {
    phone_mode_ = new ::std::string;
  }
  return phone_mode_;
}
inline ::std::string* Proto_UserLoginExternalData::release_phone_mode() {
  clear_has_phone_mode();
  if (phone_mode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_mode_;
    phone_mode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_UserLoginExternalData::set_allocated_phone_mode(::std::string* phone_mode) {
  if (phone_mode_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_mode_;
  }
  if (phone_mode) {
    set_has_phone_mode();
    phone_mode_ = phone_mode;
  } else {
    clear_has_phone_mode();
    phone_mode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string device_id = 10;
inline bool Proto_UserLoginExternalData::has_device_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Proto_UserLoginExternalData::set_has_device_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Proto_UserLoginExternalData::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Proto_UserLoginExternalData::clear_device_id() {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    device_id_->clear();
  }
  clear_has_device_id();
}
inline const ::std::string& Proto_UserLoginExternalData::device_id() const {
  return *device_id_;
}
inline void Proto_UserLoginExternalData::set_device_id(const ::std::string& value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void Proto_UserLoginExternalData::set_device_id(const char* value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void Proto_UserLoginExternalData::set_device_id(const char* value, size_t size) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_UserLoginExternalData::mutable_device_id() {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  return device_id_;
}
inline ::std::string* Proto_UserLoginExternalData::release_device_id() {
  clear_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_id_;
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_UserLoginExternalData::set_allocated_device_id(::std::string* device_id) {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    delete device_id_;
  }
  if (device_id) {
    set_has_device_id();
    device_id_ = device_id;
  } else {
    clear_has_device_id();
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_UserDetailCommonData

// optional string nick_name = 1;
inline bool Proto_UserDetailCommonData::has_nick_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_nick_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_UserDetailCommonData::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_UserDetailCommonData::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& Proto_UserDetailCommonData::nick_name() const {
  return *nick_name_;
}
inline void Proto_UserDetailCommonData::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_UserDetailCommonData::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_UserDetailCommonData::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_UserDetailCommonData::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* Proto_UserDetailCommonData::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_UserDetailCommonData::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 face_id = 2;
inline bool Proto_UserDetailCommonData::has_face_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_face_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_UserDetailCommonData::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_UserDetailCommonData::clear_face_id() {
  face_id_ = 0u;
  clear_has_face_id();
}
inline ::google::protobuf::uint32 Proto_UserDetailCommonData::face_id() const {
  return face_id_;
}
inline void Proto_UserDetailCommonData::set_face_id(::google::protobuf::uint32 value) {
  set_has_face_id();
  face_id_ = value;
}

// optional uint32 gender = 3;
inline bool Proto_UserDetailCommonData::has_gender() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_gender() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_UserDetailCommonData::clear_has_gender() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_UserDetailCommonData::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 Proto_UserDetailCommonData::gender() const {
  return gender_;
}
inline void Proto_UserDetailCommonData::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
}

// optional uint64 jetton = 4;
inline bool Proto_UserDetailCommonData::has_jetton() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_jetton() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_UserDetailCommonData::clear_has_jetton() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_UserDetailCommonData::clear_jetton() {
  jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_jetton();
}
inline ::google::protobuf::uint64 Proto_UserDetailCommonData::jetton() const {
  return jetton_;
}
inline void Proto_UserDetailCommonData::set_jetton(::google::protobuf::uint64 value) {
  set_has_jetton();
  jetton_ = value;
}

// optional uint64 bank_jetton = 5;
inline bool Proto_UserDetailCommonData::has_bank_jetton() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_bank_jetton() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_UserDetailCommonData::clear_has_bank_jetton() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_UserDetailCommonData::clear_bank_jetton() {
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_bank_jetton();
}
inline ::google::protobuf::uint64 Proto_UserDetailCommonData::bank_jetton() const {
  return bank_jetton_;
}
inline void Proto_UserDetailCommonData::set_bank_jetton(::google::protobuf::uint64 value) {
  set_has_bank_jetton();
  bank_jetton_ = value;
}

// optional uint64 agent_id = 6;
inline bool Proto_UserDetailCommonData::has_agent_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_agent_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_UserDetailCommonData::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_UserDetailCommonData::clear_agent_id() {
  agent_id_ = GOOGLE_ULONGLONG(0);
  clear_has_agent_id();
}
inline ::google::protobuf::uint64 Proto_UserDetailCommonData::agent_id() const {
  return agent_id_;
}
inline void Proto_UserDetailCommonData::set_agent_id(::google::protobuf::uint64 value) {
  set_has_agent_id();
  agent_id_ = value;
}

// optional uint64 phonenum = 7;
inline bool Proto_UserDetailCommonData::has_phonenum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_phonenum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto_UserDetailCommonData::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto_UserDetailCommonData::clear_phonenum() {
  phonenum_ = GOOGLE_ULONGLONG(0);
  clear_has_phonenum();
}
inline ::google::protobuf::uint64 Proto_UserDetailCommonData::phonenum() const {
  return phonenum_;
}
inline void Proto_UserDetailCommonData::set_phonenum(::google::protobuf::uint64 value) {
  set_has_phonenum();
  phonenum_ = value;
}

// optional uint32 vip_level = 8;
inline bool Proto_UserDetailCommonData::has_vip_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_vip_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Proto_UserDetailCommonData::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Proto_UserDetailCommonData::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 Proto_UserDetailCommonData::vip_level() const {
  return vip_level_;
}
inline void Proto_UserDetailCommonData::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional uint32 aread_id = 9;
inline bool Proto_UserDetailCommonData::has_aread_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_aread_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Proto_UserDetailCommonData::clear_has_aread_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Proto_UserDetailCommonData::clear_aread_id() {
  aread_id_ = 0u;
  clear_has_aread_id();
}
inline ::google::protobuf::uint32 Proto_UserDetailCommonData::aread_id() const {
  return aread_id_;
}
inline void Proto_UserDetailCommonData::set_aread_id(::google::protobuf::uint32 value) {
  set_has_aread_id();
  aread_id_ = value;
}

// optional uint64 referrer_id = 10;
inline bool Proto_UserDetailCommonData::has_referrer_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_referrer_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Proto_UserDetailCommonData::clear_has_referrer_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Proto_UserDetailCommonData::clear_referrer_id() {
  referrer_id_ = GOOGLE_ULONGLONG(0);
  clear_has_referrer_id();
}
inline ::google::protobuf::uint64 Proto_UserDetailCommonData::referrer_id() const {
  return referrer_id_;
}
inline void Proto_UserDetailCommonData::set_referrer_id(::google::protobuf::uint64 value) {
  set_has_referrer_id();
  referrer_id_ = value;
}

// optional bool first_recharge = 11;
inline bool Proto_UserDetailCommonData::has_first_recharge() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_first_recharge() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Proto_UserDetailCommonData::clear_has_first_recharge() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Proto_UserDetailCommonData::clear_first_recharge() {
  first_recharge_ = false;
  clear_has_first_recharge();
}
inline bool Proto_UserDetailCommonData::first_recharge() const {
  return first_recharge_;
}
inline void Proto_UserDetailCommonData::set_first_recharge(bool value) {
  set_has_first_recharge();
  first_recharge_ = value;
}

// optional uint64 show_userid = 12;
inline bool Proto_UserDetailCommonData::has_show_userid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Proto_UserDetailCommonData::set_has_show_userid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Proto_UserDetailCommonData::clear_has_show_userid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Proto_UserDetailCommonData::clear_show_userid() {
  show_userid_ = GOOGLE_ULONGLONG(0);
  clear_has_show_userid();
}
inline ::google::protobuf::uint64 Proto_UserDetailCommonData::show_userid() const {
  return show_userid_;
}
inline void Proto_UserDetailCommonData::set_show_userid(::google::protobuf::uint64 value) {
  set_has_show_userid();
  show_userid_ = value;
}

// -------------------------------------------------------------------

// Proto_CSReconnectReq

// optional uint64 userid = 1;
inline bool Proto_CSReconnectReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSReconnectReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSReconnectReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSReconnectReq::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 Proto_CSReconnectReq::userid() const {
  return userid_;
}
inline void Proto_CSReconnectReq::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
}

// -------------------------------------------------------------------

// Proto_SCReconnectRsp

// optional int32 result = 1;
inline bool Proto_SCReconnectRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCReconnectRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCReconnectRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCReconnectRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCReconnectRsp::result() const {
  return result_;
}
inline void Proto_SCReconnectRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Proto_CSHeartBeatReq

// optional int32 userid = 1;
inline bool Proto_CSHeartBeatReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSHeartBeatReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSHeartBeatReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSHeartBeatReq::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 Proto_CSHeartBeatReq::userid() const {
  return userid_;
}
inline void Proto_CSHeartBeatReq::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// -------------------------------------------------------------------

// Proto_SCHeartBeatRsp

// optional int32 result = 1;
inline bool Proto_SCHeartBeatRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCHeartBeatRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCHeartBeatRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCHeartBeatRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCHeartBeatRsp::result() const {
  return result_;
}
inline void Proto_SCHeartBeatRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Proto_CSRegisterAccountReq

// optional string account = 1;
inline bool Proto_CSRegisterAccountReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSRegisterAccountReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSRegisterAccountReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSRegisterAccountReq::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto_CSRegisterAccountReq::account() const {
  return *account_;
}
inline void Proto_CSRegisterAccountReq::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_CSRegisterAccountReq::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_CSRegisterAccountReq::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSRegisterAccountReq::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto_CSRegisterAccountReq::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSRegisterAccountReq::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string password = 2;
inline bool Proto_CSRegisterAccountReq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CSRegisterAccountReq::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CSRegisterAccountReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CSRegisterAccountReq::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& Proto_CSRegisterAccountReq::password() const {
  return *password_;
}
inline void Proto_CSRegisterAccountReq::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Proto_CSRegisterAccountReq::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Proto_CSRegisterAccountReq::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSRegisterAccountReq::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* Proto_CSRegisterAccountReq::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSRegisterAccountReq::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string nick_name = 3;
inline bool Proto_CSRegisterAccountReq::has_nick_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_CSRegisterAccountReq::set_has_nick_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_CSRegisterAccountReq::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_CSRegisterAccountReq::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& Proto_CSRegisterAccountReq::nick_name() const {
  return *nick_name_;
}
inline void Proto_CSRegisterAccountReq::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_CSRegisterAccountReq::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_CSRegisterAccountReq::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSRegisterAccountReq::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* Proto_CSRegisterAccountReq::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSRegisterAccountReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_login.Proto_UserLoginExternalData ext_data = 4;
inline bool Proto_CSRegisterAccountReq::has_ext_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_CSRegisterAccountReq::set_has_ext_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_CSRegisterAccountReq::clear_has_ext_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_CSRegisterAccountReq::clear_ext_data() {
  if (ext_data_ != NULL) ext_data_->::proto_login::Proto_UserLoginExternalData::Clear();
  clear_has_ext_data();
}
inline const ::proto_login::Proto_UserLoginExternalData& Proto_CSRegisterAccountReq::ext_data() const {
  return ext_data_ != NULL ? *ext_data_ : *default_instance_->ext_data_;
}
inline ::proto_login::Proto_UserLoginExternalData* Proto_CSRegisterAccountReq::mutable_ext_data() {
  set_has_ext_data();
  if (ext_data_ == NULL) ext_data_ = new ::proto_login::Proto_UserLoginExternalData;
  return ext_data_;
}
inline ::proto_login::Proto_UserLoginExternalData* Proto_CSRegisterAccountReq::release_ext_data() {
  clear_has_ext_data();
  ::proto_login::Proto_UserLoginExternalData* temp = ext_data_;
  ext_data_ = NULL;
  return temp;
}
inline void Proto_CSRegisterAccountReq::set_allocated_ext_data(::proto_login::Proto_UserLoginExternalData* ext_data) {
  delete ext_data_;
  ext_data_ = ext_data;
  if (ext_data) {
    set_has_ext_data();
  } else {
    clear_has_ext_data();
  }
}

// optional bool is_phone = 5;
inline bool Proto_CSRegisterAccountReq::has_is_phone() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_CSRegisterAccountReq::set_has_is_phone() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_CSRegisterAccountReq::clear_has_is_phone() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_CSRegisterAccountReq::clear_is_phone() {
  is_phone_ = false;
  clear_has_is_phone();
}
inline bool Proto_CSRegisterAccountReq::is_phone() const {
  return is_phone_;
}
inline void Proto_CSRegisterAccountReq::set_is_phone(bool value) {
  set_has_is_phone();
  is_phone_ = value;
}

// optional string device_id = 6;
inline bool Proto_CSRegisterAccountReq::has_device_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_CSRegisterAccountReq::set_has_device_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_CSRegisterAccountReq::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_CSRegisterAccountReq::clear_device_id() {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    device_id_->clear();
  }
  clear_has_device_id();
}
inline const ::std::string& Proto_CSRegisterAccountReq::device_id() const {
  return *device_id_;
}
inline void Proto_CSRegisterAccountReq::set_device_id(const ::std::string& value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void Proto_CSRegisterAccountReq::set_device_id(const char* value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void Proto_CSRegisterAccountReq::set_device_id(const char* value, size_t size) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSRegisterAccountReq::mutable_device_id() {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  return device_id_;
}
inline ::std::string* Proto_CSRegisterAccountReq::release_device_id() {
  clear_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_id_;
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSRegisterAccountReq::set_allocated_device_id(::std::string* device_id) {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    delete device_id_;
  }
  if (device_id) {
    set_has_device_id();
    device_id_ = device_id;
  } else {
    clear_has_device_id();
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string contract_info = 7;
inline bool Proto_CSRegisterAccountReq::has_contract_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto_CSRegisterAccountReq::set_has_contract_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto_CSRegisterAccountReq::clear_has_contract_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto_CSRegisterAccountReq::clear_contract_info() {
  if (contract_info_ != &::google::protobuf::internal::kEmptyString) {
    contract_info_->clear();
  }
  clear_has_contract_info();
}
inline const ::std::string& Proto_CSRegisterAccountReq::contract_info() const {
  return *contract_info_;
}
inline void Proto_CSRegisterAccountReq::set_contract_info(const ::std::string& value) {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  contract_info_->assign(value);
}
inline void Proto_CSRegisterAccountReq::set_contract_info(const char* value) {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  contract_info_->assign(value);
}
inline void Proto_CSRegisterAccountReq::set_contract_info(const char* value, size_t size) {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  contract_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSRegisterAccountReq::mutable_contract_info() {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  return contract_info_;
}
inline ::std::string* Proto_CSRegisterAccountReq::release_contract_info() {
  clear_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = contract_info_;
    contract_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSRegisterAccountReq::set_allocated_contract_info(::std::string* contract_info) {
  if (contract_info_ != &::google::protobuf::internal::kEmptyString) {
    delete contract_info_;
  }
  if (contract_info) {
    set_has_contract_info();
    contract_info_ = contract_info;
  } else {
    clear_has_contract_info();
    contract_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_SCRegisterAccountRsp

// optional int32 result = 1;
inline bool Proto_SCRegisterAccountRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCRegisterAccountRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCRegisterAccountRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCRegisterAccountRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCRegisterAccountRsp::result() const {
  return result_;
}
inline void Proto_SCRegisterAccountRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_SCRegisterAccountRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SCRegisterAccountRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SCRegisterAccountRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SCRegisterAccountRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_SCRegisterAccountRsp::user_id() const {
  return user_id_;
}
inline void Proto_SCRegisterAccountRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint64 login_time = 3;
inline bool Proto_SCRegisterAccountRsp::has_login_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SCRegisterAccountRsp::set_has_login_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SCRegisterAccountRsp::clear_has_login_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SCRegisterAccountRsp::clear_login_time() {
  login_time_ = GOOGLE_ULONGLONG(0);
  clear_has_login_time();
}
inline ::google::protobuf::uint64 Proto_SCRegisterAccountRsp::login_time() const {
  return login_time_;
}
inline void Proto_SCRegisterAccountRsp::set_login_time(::google::protobuf::uint64 value) {
  set_has_login_time();
  login_time_ = value;
}

// optional string token = 4;
inline bool Proto_SCRegisterAccountRsp::has_token() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_SCRegisterAccountRsp::set_has_token() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_SCRegisterAccountRsp::clear_has_token() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_SCRegisterAccountRsp::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& Proto_SCRegisterAccountRsp::token() const {
  return *token_;
}
inline void Proto_SCRegisterAccountRsp::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void Proto_SCRegisterAccountRsp::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void Proto_SCRegisterAccountRsp::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_SCRegisterAccountRsp::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* Proto_SCRegisterAccountRsp::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_SCRegisterAccountRsp::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_login.Proto_CSServerIP server_ip_list = 5;
inline int Proto_SCRegisterAccountRsp::server_ip_list_size() const {
  return server_ip_list_.size();
}
inline void Proto_SCRegisterAccountRsp::clear_server_ip_list() {
  server_ip_list_.Clear();
}
inline const ::proto_login::Proto_CSServerIP& Proto_SCRegisterAccountRsp::server_ip_list(int index) const {
  return server_ip_list_.Get(index);
}
inline ::proto_login::Proto_CSServerIP* Proto_SCRegisterAccountRsp::mutable_server_ip_list(int index) {
  return server_ip_list_.Mutable(index);
}
inline ::proto_login::Proto_CSServerIP* Proto_SCRegisterAccountRsp::add_server_ip_list() {
  return server_ip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_CSServerIP >&
Proto_SCRegisterAccountRsp::server_ip_list() const {
  return server_ip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_CSServerIP >*
Proto_SCRegisterAccountRsp::mutable_server_ip_list() {
  return &server_ip_list_;
}

// -------------------------------------------------------------------

// Proto_CSServerIP

// optional string ip = 1;
inline bool Proto_CSServerIP::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSServerIP::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSServerIP::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSServerIP::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& Proto_CSServerIP::ip() const {
  return *ip_;
}
inline void Proto_CSServerIP::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void Proto_CSServerIP::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void Proto_CSServerIP::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSServerIP::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* Proto_CSServerIP::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSServerIP::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 port = 2;
inline bool Proto_CSServerIP::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CSServerIP::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CSServerIP::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CSServerIP::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 Proto_CSServerIP::port() const {
  return port_;
}
inline void Proto_CSServerIP::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// -------------------------------------------------------------------

// Proto_CSAccountLoginReq

// optional uint32 login_type = 1;
inline bool Proto_CSAccountLoginReq::has_login_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSAccountLoginReq::set_has_login_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSAccountLoginReq::clear_has_login_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSAccountLoginReq::clear_login_type() {
  login_type_ = 0u;
  clear_has_login_type();
}
inline ::google::protobuf::uint32 Proto_CSAccountLoginReq::login_type() const {
  return login_type_;
}
inline void Proto_CSAccountLoginReq::set_login_type(::google::protobuf::uint32 value) {
  set_has_login_type();
  login_type_ = value;
}

// optional string account = 2;
inline bool Proto_CSAccountLoginReq::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CSAccountLoginReq::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CSAccountLoginReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CSAccountLoginReq::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto_CSAccountLoginReq::account() const {
  return *account_;
}
inline void Proto_CSAccountLoginReq::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_CSAccountLoginReq::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_CSAccountLoginReq::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSAccountLoginReq::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto_CSAccountLoginReq::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSAccountLoginReq::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string password = 3;
inline bool Proto_CSAccountLoginReq::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_CSAccountLoginReq::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_CSAccountLoginReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_CSAccountLoginReq::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& Proto_CSAccountLoginReq::password() const {
  return *password_;
}
inline void Proto_CSAccountLoginReq::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Proto_CSAccountLoginReq::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Proto_CSAccountLoginReq::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSAccountLoginReq::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* Proto_CSAccountLoginReq::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSAccountLoginReq::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string device_id = 4;
inline bool Proto_CSAccountLoginReq::has_device_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_CSAccountLoginReq::set_has_device_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_CSAccountLoginReq::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_CSAccountLoginReq::clear_device_id() {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    device_id_->clear();
  }
  clear_has_device_id();
}
inline const ::std::string& Proto_CSAccountLoginReq::device_id() const {
  return *device_id_;
}
inline void Proto_CSAccountLoginReq::set_device_id(const ::std::string& value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void Proto_CSAccountLoginReq::set_device_id(const char* value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void Proto_CSAccountLoginReq::set_device_id(const char* value, size_t size) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSAccountLoginReq::mutable_device_id() {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  return device_id_;
}
inline ::std::string* Proto_CSAccountLoginReq::release_device_id() {
  clear_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_id_;
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSAccountLoginReq::set_allocated_device_id(::std::string* device_id) {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    delete device_id_;
  }
  if (device_id) {
    set_has_device_id();
    device_id_ = device_id;
  } else {
    clear_has_device_id();
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string contract_info = 5;
inline bool Proto_CSAccountLoginReq::has_contract_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_CSAccountLoginReq::set_has_contract_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_CSAccountLoginReq::clear_has_contract_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_CSAccountLoginReq::clear_contract_info() {
  if (contract_info_ != &::google::protobuf::internal::kEmptyString) {
    contract_info_->clear();
  }
  clear_has_contract_info();
}
inline const ::std::string& Proto_CSAccountLoginReq::contract_info() const {
  return *contract_info_;
}
inline void Proto_CSAccountLoginReq::set_contract_info(const ::std::string& value) {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  contract_info_->assign(value);
}
inline void Proto_CSAccountLoginReq::set_contract_info(const char* value) {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  contract_info_->assign(value);
}
inline void Proto_CSAccountLoginReq::set_contract_info(const char* value, size_t size) {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  contract_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSAccountLoginReq::mutable_contract_info() {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  return contract_info_;
}
inline ::std::string* Proto_CSAccountLoginReq::release_contract_info() {
  clear_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = contract_info_;
    contract_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSAccountLoginReq::set_allocated_contract_info(::std::string* contract_info) {
  if (contract_info_ != &::google::protobuf::internal::kEmptyString) {
    delete contract_info_;
  }
  if (contract_info) {
    set_has_contract_info();
    contract_info_ = contract_info;
  } else {
    clear_has_contract_info();
    contract_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_SCAccountLoginRsp

// optional int32 result = 1;
inline bool Proto_SCAccountLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCAccountLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCAccountLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCAccountLoginRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCAccountLoginRsp::result() const {
  return result_;
}
inline void Proto_SCAccountLoginRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_SCAccountLoginRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SCAccountLoginRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SCAccountLoginRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SCAccountLoginRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_SCAccountLoginRsp::user_id() const {
  return user_id_;
}
inline void Proto_SCAccountLoginRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint64 login_time = 3;
inline bool Proto_SCAccountLoginRsp::has_login_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SCAccountLoginRsp::set_has_login_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SCAccountLoginRsp::clear_has_login_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SCAccountLoginRsp::clear_login_time() {
  login_time_ = GOOGLE_ULONGLONG(0);
  clear_has_login_time();
}
inline ::google::protobuf::uint64 Proto_SCAccountLoginRsp::login_time() const {
  return login_time_;
}
inline void Proto_SCAccountLoginRsp::set_login_time(::google::protobuf::uint64 value) {
  set_has_login_time();
  login_time_ = value;
}

// optional string token = 4;
inline bool Proto_SCAccountLoginRsp::has_token() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_SCAccountLoginRsp::set_has_token() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_SCAccountLoginRsp::clear_has_token() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_SCAccountLoginRsp::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& Proto_SCAccountLoginRsp::token() const {
  return *token_;
}
inline void Proto_SCAccountLoginRsp::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void Proto_SCAccountLoginRsp::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void Proto_SCAccountLoginRsp::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_SCAccountLoginRsp::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* Proto_SCAccountLoginRsp::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_SCAccountLoginRsp::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_login.Proto_CSServerIP server_ip_list = 5;
inline int Proto_SCAccountLoginRsp::server_ip_list_size() const {
  return server_ip_list_.size();
}
inline void Proto_SCAccountLoginRsp::clear_server_ip_list() {
  server_ip_list_.Clear();
}
inline const ::proto_login::Proto_CSServerIP& Proto_SCAccountLoginRsp::server_ip_list(int index) const {
  return server_ip_list_.Get(index);
}
inline ::proto_login::Proto_CSServerIP* Proto_SCAccountLoginRsp::mutable_server_ip_list(int index) {
  return server_ip_list_.Mutable(index);
}
inline ::proto_login::Proto_CSServerIP* Proto_SCAccountLoginRsp::add_server_ip_list() {
  return server_ip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_CSServerIP >&
Proto_SCAccountLoginRsp::server_ip_list() const {
  return server_ip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_CSServerIP >*
Proto_SCAccountLoginRsp::mutable_server_ip_list() {
  return &server_ip_list_;
}

// -------------------------------------------------------------------

// Proto_CSUserLoginReq

// optional string account = 1;
inline bool Proto_CSUserLoginReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSUserLoginReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSUserLoginReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSUserLoginReq::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto_CSUserLoginReq::account() const {
  return *account_;
}
inline void Proto_CSUserLoginReq::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_CSUserLoginReq::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_CSUserLoginReq::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSUserLoginReq::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto_CSUserLoginReq::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSUserLoginReq::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 user_id = 2;
inline bool Proto_CSUserLoginReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CSUserLoginReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CSUserLoginReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CSUserLoginReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_CSUserLoginReq::user_id() const {
  return user_id_;
}
inline void Proto_CSUserLoginReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint64 login_time = 3;
inline bool Proto_CSUserLoginReq::has_login_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_CSUserLoginReq::set_has_login_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_CSUserLoginReq::clear_has_login_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_CSUserLoginReq::clear_login_time() {
  login_time_ = GOOGLE_ULONGLONG(0);
  clear_has_login_time();
}
inline ::google::protobuf::uint64 Proto_CSUserLoginReq::login_time() const {
  return login_time_;
}
inline void Proto_CSUserLoginReq::set_login_time(::google::protobuf::uint64 value) {
  set_has_login_time();
  login_time_ = value;
}

// optional string token = 4;
inline bool Proto_CSUserLoginReq::has_token() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_CSUserLoginReq::set_has_token() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_CSUserLoginReq::clear_has_token() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_CSUserLoginReq::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& Proto_CSUserLoginReq::token() const {
  return *token_;
}
inline void Proto_CSUserLoginReq::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void Proto_CSUserLoginReq::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void Proto_CSUserLoginReq::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSUserLoginReq::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* Proto_CSUserLoginReq::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSUserLoginReq::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_login.Proto_UserLoginExternalData ext_data = 5;
inline bool Proto_CSUserLoginReq::has_ext_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_CSUserLoginReq::set_has_ext_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_CSUserLoginReq::clear_has_ext_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_CSUserLoginReq::clear_ext_data() {
  if (ext_data_ != NULL) ext_data_->::proto_login::Proto_UserLoginExternalData::Clear();
  clear_has_ext_data();
}
inline const ::proto_login::Proto_UserLoginExternalData& Proto_CSUserLoginReq::ext_data() const {
  return ext_data_ != NULL ? *ext_data_ : *default_instance_->ext_data_;
}
inline ::proto_login::Proto_UserLoginExternalData* Proto_CSUserLoginReq::mutable_ext_data() {
  set_has_ext_data();
  if (ext_data_ == NULL) ext_data_ = new ::proto_login::Proto_UserLoginExternalData;
  return ext_data_;
}
inline ::proto_login::Proto_UserLoginExternalData* Proto_CSUserLoginReq::release_ext_data() {
  clear_has_ext_data();
  ::proto_login::Proto_UserLoginExternalData* temp = ext_data_;
  ext_data_ = NULL;
  return temp;
}
inline void Proto_CSUserLoginReq::set_allocated_ext_data(::proto_login::Proto_UserLoginExternalData* ext_data) {
  delete ext_data_;
  ext_data_ = ext_data;
  if (ext_data) {
    set_has_ext_data();
  } else {
    clear_has_ext_data();
  }
}

// -------------------------------------------------------------------

// Proto_SCUserLoginRsp

// optional int32 result = 1;
inline bool Proto_SCUserLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCUserLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCUserLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCUserLoginRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCUserLoginRsp::result() const {
  return result_;
}
inline void Proto_SCUserLoginRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_SCUserLoginRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SCUserLoginRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SCUserLoginRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SCUserLoginRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_SCUserLoginRsp::user_id() const {
  return user_id_;
}
inline void Proto_SCUserLoginRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional .proto_login.Proto_UserDetailCommonData detail_data = 3;
inline bool Proto_SCUserLoginRsp::has_detail_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SCUserLoginRsp::set_has_detail_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SCUserLoginRsp::clear_has_detail_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SCUserLoginRsp::clear_detail_data() {
  if (detail_data_ != NULL) detail_data_->::proto_login::Proto_UserDetailCommonData::Clear();
  clear_has_detail_data();
}
inline const ::proto_login::Proto_UserDetailCommonData& Proto_SCUserLoginRsp::detail_data() const {
  return detail_data_ != NULL ? *detail_data_ : *default_instance_->detail_data_;
}
inline ::proto_login::Proto_UserDetailCommonData* Proto_SCUserLoginRsp::mutable_detail_data() {
  set_has_detail_data();
  if (detail_data_ == NULL) detail_data_ = new ::proto_login::Proto_UserDetailCommonData;
  return detail_data_;
}
inline ::proto_login::Proto_UserDetailCommonData* Proto_SCUserLoginRsp::release_detail_data() {
  clear_has_detail_data();
  ::proto_login::Proto_UserDetailCommonData* temp = detail_data_;
  detail_data_ = NULL;
  return temp;
}
inline void Proto_SCUserLoginRsp::set_allocated_detail_data(::proto_login::Proto_UserDetailCommonData* detail_data) {
  delete detail_data_;
  detail_data_ = detail_data;
  if (detail_data) {
    set_has_detail_data();
  } else {
    clear_has_detail_data();
  }
}

// -------------------------------------------------------------------

// Proto_CSChangeFaceReq

// optional uint32 face_id = 1;
inline bool Proto_CSChangeFaceReq::has_face_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSChangeFaceReq::set_has_face_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSChangeFaceReq::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSChangeFaceReq::clear_face_id() {
  face_id_ = 0u;
  clear_has_face_id();
}
inline ::google::protobuf::uint32 Proto_CSChangeFaceReq::face_id() const {
  return face_id_;
}
inline void Proto_CSChangeFaceReq::set_face_id(::google::protobuf::uint32 value) {
  set_has_face_id();
  face_id_ = value;
}

// -------------------------------------------------------------------

// Proto_SCChangeFaceRsp

// optional int32 result = 1;
inline bool Proto_SCChangeFaceRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCChangeFaceRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCChangeFaceRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCChangeFaceRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCChangeFaceRsp::result() const {
  return result_;
}
inline void Proto_SCChangeFaceRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 face_id = 2;
inline bool Proto_SCChangeFaceRsp::has_face_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SCChangeFaceRsp::set_has_face_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SCChangeFaceRsp::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SCChangeFaceRsp::clear_face_id() {
  face_id_ = 0;
  clear_has_face_id();
}
inline ::google::protobuf::int32 Proto_SCChangeFaceRsp::face_id() const {
  return face_id_;
}
inline void Proto_SCChangeFaceRsp::set_face_id(::google::protobuf::int32 value) {
  set_has_face_id();
  face_id_ = value;
}

// -------------------------------------------------------------------

// Proto_CSChangeNickNameReq

// optional string nick_name = 1;
inline bool Proto_CSChangeNickNameReq::has_nick_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSChangeNickNameReq::set_has_nick_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSChangeNickNameReq::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSChangeNickNameReq::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& Proto_CSChangeNickNameReq::nick_name() const {
  return *nick_name_;
}
inline void Proto_CSChangeNickNameReq::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_CSChangeNickNameReq::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_CSChangeNickNameReq::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSChangeNickNameReq::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* Proto_CSChangeNickNameReq::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSChangeNickNameReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_SCChangNickNameRsp

// optional int32 result = 1;
inline bool Proto_SCChangNickNameRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCChangNickNameRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCChangNickNameRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCChangNickNameRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCChangNickNameRsp::result() const {
  return result_;
}
inline void Proto_SCChangNickNameRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string nick_name = 2;
inline bool Proto_SCChangNickNameRsp::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SCChangNickNameRsp::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SCChangNickNameRsp::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SCChangNickNameRsp::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& Proto_SCChangNickNameRsp::nick_name() const {
  return *nick_name_;
}
inline void Proto_SCChangNickNameRsp::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_SCChangNickNameRsp::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_SCChangNickNameRsp::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_SCChangNickNameRsp::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* Proto_SCChangNickNameRsp::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_SCChangNickNameRsp::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_CSQueryUserReq

// repeated uint64 query_user_id = 1;
inline int Proto_CSQueryUserReq::query_user_id_size() const {
  return query_user_id_.size();
}
inline void Proto_CSQueryUserReq::clear_query_user_id() {
  query_user_id_.Clear();
}
inline ::google::protobuf::uint64 Proto_CSQueryUserReq::query_user_id(int index) const {
  return query_user_id_.Get(index);
}
inline void Proto_CSQueryUserReq::set_query_user_id(int index, ::google::protobuf::uint64 value) {
  query_user_id_.Set(index, value);
}
inline void Proto_CSQueryUserReq::add_query_user_id(::google::protobuf::uint64 value) {
  query_user_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Proto_CSQueryUserReq::query_user_id() const {
  return query_user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Proto_CSQueryUserReq::mutable_query_user_id() {
  return &query_user_id_;
}

// -------------------------------------------------------------------

// Proto_SCQueryUserRsp

// optional int32 result = 1;
inline bool Proto_SCQueryUserRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCQueryUserRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCQueryUserRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCQueryUserRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCQueryUserRsp::result() const {
  return result_;
}
inline void Proto_SCQueryUserRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto_login.Proto_UserSimpleData query_user_list = 2;
inline int Proto_SCQueryUserRsp::query_user_list_size() const {
  return query_user_list_.size();
}
inline void Proto_SCQueryUserRsp::clear_query_user_list() {
  query_user_list_.Clear();
}
inline const ::proto_login::Proto_UserSimpleData& Proto_SCQueryUserRsp::query_user_list(int index) const {
  return query_user_list_.Get(index);
}
inline ::proto_login::Proto_UserSimpleData* Proto_SCQueryUserRsp::mutable_query_user_list(int index) {
  return query_user_list_.Mutable(index);
}
inline ::proto_login::Proto_UserSimpleData* Proto_SCQueryUserRsp::add_query_user_list() {
  return query_user_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_UserSimpleData >&
Proto_SCQueryUserRsp::query_user_list() const {
  return query_user_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_login::Proto_UserSimpleData >*
Proto_SCQueryUserRsp::mutable_query_user_list() {
  return &query_user_list_;
}

// -------------------------------------------------------------------

// Proto_CS_LoginServer_PhoneAutoCodeReq

// optional uint64 phone_num = 1;
inline bool Proto_CS_LoginServer_PhoneAutoCodeReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CS_LoginServer_PhoneAutoCodeReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CS_LoginServer_PhoneAutoCodeReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CS_LoginServer_PhoneAutoCodeReq::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_CS_LoginServer_PhoneAutoCodeReq::phone_num() const {
  return phone_num_;
}
inline void Proto_CS_LoginServer_PhoneAutoCodeReq::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional uint32 code_type = 2;
inline bool Proto_CS_LoginServer_PhoneAutoCodeReq::has_code_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CS_LoginServer_PhoneAutoCodeReq::set_has_code_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CS_LoginServer_PhoneAutoCodeReq::clear_has_code_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CS_LoginServer_PhoneAutoCodeReq::clear_code_type() {
  code_type_ = 0u;
  clear_has_code_type();
}
inline ::google::protobuf::uint32 Proto_CS_LoginServer_PhoneAutoCodeReq::code_type() const {
  return code_type_;
}
inline void Proto_CS_LoginServer_PhoneAutoCodeReq::set_code_type(::google::protobuf::uint32 value) {
  set_has_code_type();
  code_type_ = value;
}

// -------------------------------------------------------------------

// Proto_SC_LoginServer_PhoneAutoCodeRsp

// optional int32 result = 1;
inline bool Proto_SC_LoginServer_PhoneAutoCodeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SC_LoginServer_PhoneAutoCodeRsp::result() const {
  return result_;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 phone_num = 2;
inline bool Proto_SC_LoginServer_PhoneAutoCodeRsp::has_phone_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::set_has_phone_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_SC_LoginServer_PhoneAutoCodeRsp::phone_num() const {
  return phone_num_;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional uint32 code_type = 3;
inline bool Proto_SC_LoginServer_PhoneAutoCodeRsp::has_code_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::set_has_code_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::clear_has_code_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::clear_code_type() {
  code_type_ = 0u;
  clear_has_code_type();
}
inline ::google::protobuf::uint32 Proto_SC_LoginServer_PhoneAutoCodeRsp::code_type() const {
  return code_type_;
}
inline void Proto_SC_LoginServer_PhoneAutoCodeRsp::set_code_type(::google::protobuf::uint32 value) {
  set_has_code_type();
  code_type_ = value;
}

// -------------------------------------------------------------------

// Proto_CS_LoginServer_CheckPhoneCodeReq

// optional uint64 phone_num = 1;
inline bool Proto_CS_LoginServer_CheckPhoneCodeReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CS_LoginServer_CheckPhoneCodeReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CS_LoginServer_CheckPhoneCodeReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CS_LoginServer_CheckPhoneCodeReq::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_CS_LoginServer_CheckPhoneCodeReq::phone_num() const {
  return phone_num_;
}
inline void Proto_CS_LoginServer_CheckPhoneCodeReq::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional uint32 auth_code = 2;
inline bool Proto_CS_LoginServer_CheckPhoneCodeReq::has_auth_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CS_LoginServer_CheckPhoneCodeReq::set_has_auth_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CS_LoginServer_CheckPhoneCodeReq::clear_has_auth_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CS_LoginServer_CheckPhoneCodeReq::clear_auth_code() {
  auth_code_ = 0u;
  clear_has_auth_code();
}
inline ::google::protobuf::uint32 Proto_CS_LoginServer_CheckPhoneCodeReq::auth_code() const {
  return auth_code_;
}
inline void Proto_CS_LoginServer_CheckPhoneCodeReq::set_auth_code(::google::protobuf::uint32 value) {
  set_has_auth_code();
  auth_code_ = value;
}

// -------------------------------------------------------------------

// Proto_SC_LoginServer_CheckPhoneCodeRsp

// optional int32 result = 1;
inline bool Proto_SC_LoginServer_CheckPhoneCodeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SC_LoginServer_CheckPhoneCodeRsp::result() const {
  return result_;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 phone_num = 2;
inline bool Proto_SC_LoginServer_CheckPhoneCodeRsp::has_phone_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::set_has_phone_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_SC_LoginServer_CheckPhoneCodeRsp::phone_num() const {
  return phone_num_;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional uint32 code_type = 3;
inline bool Proto_SC_LoginServer_CheckPhoneCodeRsp::has_code_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::set_has_code_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::clear_has_code_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::clear_code_type() {
  code_type_ = 0u;
  clear_has_code_type();
}
inline ::google::protobuf::uint32 Proto_SC_LoginServer_CheckPhoneCodeRsp::code_type() const {
  return code_type_;
}
inline void Proto_SC_LoginServer_CheckPhoneCodeRsp::set_code_type(::google::protobuf::uint32 value) {
  set_has_code_type();
  code_type_ = value;
}

// -------------------------------------------------------------------

// Proto_CS_ChangePasswordReq

// optional string account = 1;
inline bool Proto_CS_ChangePasswordReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CS_ChangePasswordReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CS_ChangePasswordReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CS_ChangePasswordReq::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto_CS_ChangePasswordReq::account() const {
  return *account_;
}
inline void Proto_CS_ChangePasswordReq::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_CS_ChangePasswordReq::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_CS_ChangePasswordReq::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CS_ChangePasswordReq::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto_CS_ChangePasswordReq::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CS_ChangePasswordReq::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string new_password = 2;
inline bool Proto_CS_ChangePasswordReq::has_new_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CS_ChangePasswordReq::set_has_new_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CS_ChangePasswordReq::clear_has_new_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CS_ChangePasswordReq::clear_new_password() {
  if (new_password_ != &::google::protobuf::internal::kEmptyString) {
    new_password_->clear();
  }
  clear_has_new_password();
}
inline const ::std::string& Proto_CS_ChangePasswordReq::new_password() const {
  return *new_password_;
}
inline void Proto_CS_ChangePasswordReq::set_new_password(const ::std::string& value) {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  new_password_->assign(value);
}
inline void Proto_CS_ChangePasswordReq::set_new_password(const char* value) {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  new_password_->assign(value);
}
inline void Proto_CS_ChangePasswordReq::set_new_password(const char* value, size_t size) {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  new_password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CS_ChangePasswordReq::mutable_new_password() {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  return new_password_;
}
inline ::std::string* Proto_CS_ChangePasswordReq::release_new_password() {
  clear_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = new_password_;
    new_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CS_ChangePasswordReq::set_allocated_new_password(::std::string* new_password) {
  if (new_password_ != &::google::protobuf::internal::kEmptyString) {
    delete new_password_;
  }
  if (new_password) {
    set_has_new_password();
    new_password_ = new_password;
  } else {
    clear_has_new_password();
    new_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string device_id = 3;
inline bool Proto_CS_ChangePasswordReq::has_device_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_CS_ChangePasswordReq::set_has_device_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_CS_ChangePasswordReq::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_CS_ChangePasswordReq::clear_device_id() {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    device_id_->clear();
  }
  clear_has_device_id();
}
inline const ::std::string& Proto_CS_ChangePasswordReq::device_id() const {
  return *device_id_;
}
inline void Proto_CS_ChangePasswordReq::set_device_id(const ::std::string& value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void Proto_CS_ChangePasswordReq::set_device_id(const char* value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void Proto_CS_ChangePasswordReq::set_device_id(const char* value, size_t size) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CS_ChangePasswordReq::mutable_device_id() {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  return device_id_;
}
inline ::std::string* Proto_CS_ChangePasswordReq::release_device_id() {
  clear_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_id_;
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CS_ChangePasswordReq::set_allocated_device_id(::std::string* device_id) {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    delete device_id_;
  }
  if (device_id) {
    set_has_device_id();
    device_id_ = device_id;
  } else {
    clear_has_device_id();
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_SC_ChangePasswordRsp

// optional int32 result = 1;
inline bool Proto_SC_ChangePasswordRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SC_ChangePasswordRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SC_ChangePasswordRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SC_ChangePasswordRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SC_ChangePasswordRsp::result() const {
  return result_;
}
inline void Proto_SC_ChangePasswordRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Proto_SC_LoginServer_NotifyPhoneCheck

// optional int32 result = 1;
inline bool Proto_SC_LoginServer_NotifyPhoneCheck::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SC_LoginServer_NotifyPhoneCheck::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SC_LoginServer_NotifyPhoneCheck::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SC_LoginServer_NotifyPhoneCheck::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SC_LoginServer_NotifyPhoneCheck::result() const {
  return result_;
}
inline void Proto_SC_LoginServer_NotifyPhoneCheck::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 phone_num = 2;
inline bool Proto_SC_LoginServer_NotifyPhoneCheck::has_phone_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SC_LoginServer_NotifyPhoneCheck::set_has_phone_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SC_LoginServer_NotifyPhoneCheck::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SC_LoginServer_NotifyPhoneCheck::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_SC_LoginServer_NotifyPhoneCheck::phone_num() const {
  return phone_num_;
}
inline void Proto_SC_LoginServer_NotifyPhoneCheck::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// -------------------------------------------------------------------

// Proto_CS_Player_PhoneAutoCodeReq

// optional uint64 phone_num = 1;
inline bool Proto_CS_Player_PhoneAutoCodeReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CS_Player_PhoneAutoCodeReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CS_Player_PhoneAutoCodeReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CS_Player_PhoneAutoCodeReq::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_CS_Player_PhoneAutoCodeReq::phone_num() const {
  return phone_num_;
}
inline void Proto_CS_Player_PhoneAutoCodeReq::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional uint32 code_type = 2;
inline bool Proto_CS_Player_PhoneAutoCodeReq::has_code_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CS_Player_PhoneAutoCodeReq::set_has_code_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CS_Player_PhoneAutoCodeReq::clear_has_code_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CS_Player_PhoneAutoCodeReq::clear_code_type() {
  code_type_ = 0u;
  clear_has_code_type();
}
inline ::google::protobuf::uint32 Proto_CS_Player_PhoneAutoCodeReq::code_type() const {
  return code_type_;
}
inline void Proto_CS_Player_PhoneAutoCodeReq::set_code_type(::google::protobuf::uint32 value) {
  set_has_code_type();
  code_type_ = value;
}

// -------------------------------------------------------------------

// Proto_SC_Player_PhoneAutoCodeRsp

// optional int32 result = 1;
inline bool Proto_SC_Player_PhoneAutoCodeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SC_Player_PhoneAutoCodeRsp::result() const {
  return result_;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 phone_num = 2;
inline bool Proto_SC_Player_PhoneAutoCodeRsp::has_phone_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::set_has_phone_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_SC_Player_PhoneAutoCodeRsp::phone_num() const {
  return phone_num_;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional uint32 code_type = 3;
inline bool Proto_SC_Player_PhoneAutoCodeRsp::has_code_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::set_has_code_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::clear_has_code_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::clear_code_type() {
  code_type_ = 0u;
  clear_has_code_type();
}
inline ::google::protobuf::uint32 Proto_SC_Player_PhoneAutoCodeRsp::code_type() const {
  return code_type_;
}
inline void Proto_SC_Player_PhoneAutoCodeRsp::set_code_type(::google::protobuf::uint32 value) {
  set_has_code_type();
  code_type_ = value;
}

// -------------------------------------------------------------------

// Proto_CS_Player_CheckPhoneCodeReq

// optional uint64 phone_num = 1;
inline bool Proto_CS_Player_CheckPhoneCodeReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CS_Player_CheckPhoneCodeReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CS_Player_CheckPhoneCodeReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CS_Player_CheckPhoneCodeReq::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_CS_Player_CheckPhoneCodeReq::phone_num() const {
  return phone_num_;
}
inline void Proto_CS_Player_CheckPhoneCodeReq::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional uint32 auth_code = 2;
inline bool Proto_CS_Player_CheckPhoneCodeReq::has_auth_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CS_Player_CheckPhoneCodeReq::set_has_auth_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CS_Player_CheckPhoneCodeReq::clear_has_auth_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CS_Player_CheckPhoneCodeReq::clear_auth_code() {
  auth_code_ = 0u;
  clear_has_auth_code();
}
inline ::google::protobuf::uint32 Proto_CS_Player_CheckPhoneCodeReq::auth_code() const {
  return auth_code_;
}
inline void Proto_CS_Player_CheckPhoneCodeReq::set_auth_code(::google::protobuf::uint32 value) {
  set_has_auth_code();
  auth_code_ = value;
}

// -------------------------------------------------------------------

// Proto_SC_Player_CheckPhoneCodeRsp

// optional int32 result = 1;
inline bool Proto_SC_Player_CheckPhoneCodeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SC_Player_CheckPhoneCodeRsp::result() const {
  return result_;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 phone_num = 2;
inline bool Proto_SC_Player_CheckPhoneCodeRsp::has_phone_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::set_has_phone_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_SC_Player_CheckPhoneCodeRsp::phone_num() const {
  return phone_num_;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional uint32 code_type = 3;
inline bool Proto_SC_Player_CheckPhoneCodeRsp::has_code_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::set_has_code_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::clear_has_code_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::clear_code_type() {
  code_type_ = 0u;
  clear_has_code_type();
}
inline ::google::protobuf::uint32 Proto_SC_Player_CheckPhoneCodeRsp::code_type() const {
  return code_type_;
}
inline void Proto_SC_Player_CheckPhoneCodeRsp::set_code_type(::google::protobuf::uint32 value) {
  set_has_code_type();
  code_type_ = value;
}

// -------------------------------------------------------------------

// Proto_CS_Player_BindPhoneReq

// optional uint64 phone_num = 1;
inline bool Proto_CS_Player_BindPhoneReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CS_Player_BindPhoneReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CS_Player_BindPhoneReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CS_Player_BindPhoneReq::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_CS_Player_BindPhoneReq::phone_num() const {
  return phone_num_;
}
inline void Proto_CS_Player_BindPhoneReq::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional string nick_name = 2;
inline bool Proto_CS_Player_BindPhoneReq::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CS_Player_BindPhoneReq::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CS_Player_BindPhoneReq::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CS_Player_BindPhoneReq::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& Proto_CS_Player_BindPhoneReq::nick_name() const {
  return *nick_name_;
}
inline void Proto_CS_Player_BindPhoneReq::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_CS_Player_BindPhoneReq::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_CS_Player_BindPhoneReq::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CS_Player_BindPhoneReq::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* Proto_CS_Player_BindPhoneReq::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CS_Player_BindPhoneReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string password = 3;
inline bool Proto_CS_Player_BindPhoneReq::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_CS_Player_BindPhoneReq::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_CS_Player_BindPhoneReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_CS_Player_BindPhoneReq::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& Proto_CS_Player_BindPhoneReq::password() const {
  return *password_;
}
inline void Proto_CS_Player_BindPhoneReq::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Proto_CS_Player_BindPhoneReq::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Proto_CS_Player_BindPhoneReq::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CS_Player_BindPhoneReq::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* Proto_CS_Player_BindPhoneReq::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CS_Player_BindPhoneReq::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string device_id = 4;
inline bool Proto_CS_Player_BindPhoneReq::has_device_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_CS_Player_BindPhoneReq::set_has_device_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_CS_Player_BindPhoneReq::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_CS_Player_BindPhoneReq::clear_device_id() {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    device_id_->clear();
  }
  clear_has_device_id();
}
inline const ::std::string& Proto_CS_Player_BindPhoneReq::device_id() const {
  return *device_id_;
}
inline void Proto_CS_Player_BindPhoneReq::set_device_id(const ::std::string& value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void Proto_CS_Player_BindPhoneReq::set_device_id(const char* value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void Proto_CS_Player_BindPhoneReq::set_device_id(const char* value, size_t size) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CS_Player_BindPhoneReq::mutable_device_id() {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  return device_id_;
}
inline ::std::string* Proto_CS_Player_BindPhoneReq::release_device_id() {
  clear_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_id_;
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CS_Player_BindPhoneReq::set_allocated_device_id(::std::string* device_id) {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    delete device_id_;
  }
  if (device_id) {
    set_has_device_id();
    device_id_ = device_id;
  } else {
    clear_has_device_id();
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_SC_Player_BindPhoneRsp

// optional int32 result = 1;
inline bool Proto_SC_Player_BindPhoneRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SC_Player_BindPhoneRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SC_Player_BindPhoneRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SC_Player_BindPhoneRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SC_Player_BindPhoneRsp::result() const {
  return result_;
}
inline void Proto_SC_Player_BindPhoneRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 phone_num = 2;
inline bool Proto_SC_Player_BindPhoneRsp::has_phone_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SC_Player_BindPhoneRsp::set_has_phone_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SC_Player_BindPhoneRsp::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SC_Player_BindPhoneRsp::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_SC_Player_BindPhoneRsp::phone_num() const {
  return phone_num_;
}
inline void Proto_SC_Player_BindPhoneRsp::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional string nick_name = 3;
inline bool Proto_SC_Player_BindPhoneRsp::has_nick_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SC_Player_BindPhoneRsp::set_has_nick_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SC_Player_BindPhoneRsp::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SC_Player_BindPhoneRsp::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& Proto_SC_Player_BindPhoneRsp::nick_name() const {
  return *nick_name_;
}
inline void Proto_SC_Player_BindPhoneRsp::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_SC_Player_BindPhoneRsp::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_SC_Player_BindPhoneRsp::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_SC_Player_BindPhoneRsp::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* Proto_SC_Player_BindPhoneRsp::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_SC_Player_BindPhoneRsp::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_CS_PhoneChangeBandPasswordReq

// optional uint64 phone_num = 1;
inline bool Proto_CS_PhoneChangeBandPasswordReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CS_PhoneChangeBandPasswordReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CS_PhoneChangeBandPasswordReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CS_PhoneChangeBandPasswordReq::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_CS_PhoneChangeBandPasswordReq::phone_num() const {
  return phone_num_;
}
inline void Proto_CS_PhoneChangeBandPasswordReq::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional string new_password = 2;
inline bool Proto_CS_PhoneChangeBandPasswordReq::has_new_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CS_PhoneChangeBandPasswordReq::set_has_new_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CS_PhoneChangeBandPasswordReq::clear_has_new_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CS_PhoneChangeBandPasswordReq::clear_new_password() {
  if (new_password_ != &::google::protobuf::internal::kEmptyString) {
    new_password_->clear();
  }
  clear_has_new_password();
}
inline const ::std::string& Proto_CS_PhoneChangeBandPasswordReq::new_password() const {
  return *new_password_;
}
inline void Proto_CS_PhoneChangeBandPasswordReq::set_new_password(const ::std::string& value) {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  new_password_->assign(value);
}
inline void Proto_CS_PhoneChangeBandPasswordReq::set_new_password(const char* value) {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  new_password_->assign(value);
}
inline void Proto_CS_PhoneChangeBandPasswordReq::set_new_password(const char* value, size_t size) {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  new_password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CS_PhoneChangeBandPasswordReq::mutable_new_password() {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  return new_password_;
}
inline ::std::string* Proto_CS_PhoneChangeBandPasswordReq::release_new_password() {
  clear_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = new_password_;
    new_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CS_PhoneChangeBandPasswordReq::set_allocated_new_password(::std::string* new_password) {
  if (new_password_ != &::google::protobuf::internal::kEmptyString) {
    delete new_password_;
  }
  if (new_password) {
    set_has_new_password();
    new_password_ = new_password;
  } else {
    clear_has_new_password();
    new_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_SC_PhoneChangeBandPasswordRsp

// optional int32 result = 1;
inline bool Proto_SC_PhoneChangeBandPasswordRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SC_PhoneChangeBandPasswordRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SC_PhoneChangeBandPasswordRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SC_PhoneChangeBandPasswordRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SC_PhoneChangeBandPasswordRsp::result() const {
  return result_;
}
inline void Proto_SC_PhoneChangeBandPasswordRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Proto_CSCheckContractInfoReq

// optional string contract_info = 1;
inline bool Proto_CSCheckContractInfoReq::has_contract_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSCheckContractInfoReq::set_has_contract_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSCheckContractInfoReq::clear_has_contract_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSCheckContractInfoReq::clear_contract_info() {
  if (contract_info_ != &::google::protobuf::internal::kEmptyString) {
    contract_info_->clear();
  }
  clear_has_contract_info();
}
inline const ::std::string& Proto_CSCheckContractInfoReq::contract_info() const {
  return *contract_info_;
}
inline void Proto_CSCheckContractInfoReq::set_contract_info(const ::std::string& value) {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  contract_info_->assign(value);
}
inline void Proto_CSCheckContractInfoReq::set_contract_info(const char* value) {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  contract_info_->assign(value);
}
inline void Proto_CSCheckContractInfoReq::set_contract_info(const char* value, size_t size) {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  contract_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSCheckContractInfoReq::mutable_contract_info() {
  set_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    contract_info_ = new ::std::string;
  }
  return contract_info_;
}
inline ::std::string* Proto_CSCheckContractInfoReq::release_contract_info() {
  clear_has_contract_info();
  if (contract_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = contract_info_;
    contract_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSCheckContractInfoReq::set_allocated_contract_info(::std::string* contract_info) {
  if (contract_info_ != &::google::protobuf::internal::kEmptyString) {
    delete contract_info_;
  }
  if (contract_info) {
    set_has_contract_info();
    contract_info_ = contract_info;
  } else {
    clear_has_contract_info();
    contract_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_SCCheckContractInfoRsp

// optional int32 result = 1;
inline bool Proto_SCCheckContractInfoRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCCheckContractInfoRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCCheckContractInfoRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCCheckContractInfoRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCCheckContractInfoRsp::result() const {
  return result_;
}
inline void Proto_SCCheckContractInfoRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Proto_SCKetPlayerNotify

// optional int32 result = 1;
inline bool Proto_SCKetPlayerNotify::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCKetPlayerNotify::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCKetPlayerNotify::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCKetPlayerNotify::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCKetPlayerNotify::result() const {
  return result_;
}
inline void Proto_SCKetPlayerNotify::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_login

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_login::Proto_LOGIN_CS_CMD>() {
  return ::proto_login::Proto_LOGIN_CS_CMD_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fcs_5flogin_2eproto__INCLUDED
