// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_svr_login.proto

#ifndef PROTOBUF_proto_5fsvr_5flogin_2eproto__INCLUDED
#define PROTOBUF_proto_5fsvr_5flogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "proto_common.pb.h"
#include "proto_kernel.pb.h"
#include "proto_error_code.pb.h"
#include "proto_cs.pb.h"
#include "proto_cs_login.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

class Proto_LTWRegisterUserReq;
class Proto_WTLRegisterUserReq;
class Proto_LTLRegisterUserRsp;
class Proto_PTWUserLoginReq;
class Proto_WTPPlayerLoginRsp;
class Proto_WorldToLogicLoginReq;
class Proto_LogicToWorldLoginRsp;
class NotifyPlayerDisconnect;
class NotifyPlayerReconnectReq;
class NotifyPlayerReconnctRsp;
class WTLNotifyPlayerReconnectReq;
class LTWNotifyPlayerReconnectRsp;
class WTGNotifyPlayerReconnectReq;
class GTWNotifyPlayerReconnectRsp;
class LTSNotifyPlayerReconnectReq;
class Proto_WorldToLogicLogoutReq;
class Proto_LogicToWorldLogoutRsp;
class Proto_LogicToSnsLoginReq;
class Proto_SnsToLogicLoginRsp;
class Proto_LogicToSnsLogoutReq;
class Proto_SnsToLogicLogoutRsp;
class Proto_LogicToWorldLogoutReq;
class LTWebPhoneAuthCodeReq;
class WebTLPhoneAuthCodeRsp;
class LTWebPhoneCheckCodeReq;
class WebTLPhoneCheckCodeRsp;
class WebPhoneCodeRetMsg;
class LTSnsChangeFaceNotify;
class LTSnsChangeNickNameNotify;
class LTSnsChangeVipLevelNotify;
class LTSnsChangeUserIdNotify;
class LTLPlayerDeviceChangeNotify;

enum Proto_LoginSvrMsgID {
  NF_WTL_PLAYER_LOGIN_REQ = 130,
  NF_LTW_PLAYER_LOGIN_RSP = 131,
  NF_PTW_PLAYER_LOGIN_MSG = 132,
  NF_WTP_PLAYER_LOGIN_MSG_RSP = 133,
  NF_LTS_PLAYER_LOGIN_REQ = 134,
  NF_STL_PLAYER_LOGIN_RSP = 135,
  NF_LTS_PLAYER_LOGOUT_REQ = 136,
  NF_STL_PLAYER_LOGOUT_RSP = 137,
  NF_LTW_PLAYER_LOGOUT_REQ = 138,
  NF_WTL_PLAYER_LOGOUT_NOTIFY = 139,
  NF_LTW_REGISTER_USER_TO_WORLD_REQ = 140,
  NF_WTL_REGISTER_USER_TO_LOGIC_REQ = 141,
  NF_LTL_REGISTER_USER_TO_LOGIN_RSP = 142,
  NF_LTWeb_PHONE_AUTH_CODE_REQ = 143,
  NF_WebTL_PHONE_AUTH_CODE_RSP = 144,
  NF_LTWeb_PHONE_CHECK_CODE_REQ = 145,
  NF_WebTL_PHONE_CHECK_CODE_RSP = 146,
  NF_LTSns_CHANGE_FACE_NOTIFY = 147,
  NF_LTSns_CHANGE_NICKNAME_NOTIFY = 148,
  NF_LTSns_CHANGE_USERID_NOTIFY = 149,
  NF_PTW_PLAYER_RECONNECT_MSG = 150,
  NF_WTP_PLAYER_RECONNECT_MSG_RSP = 151,
  NF_WTL_PLAYER_RECONNECT_MSG = 152,
  NF_LTW_PLAYER_RECONNECT_MSG_RSP = 153,
  NF_LTS_PLAYER_RECONNECT_MSG = 154,
  NF_WTG_PLAYER_RECONNECT_MSG = 155,
  NF_GTW_PLAYER_RECONNECT_MSG_RSP = 156,
  NF_PTW_PLAYER_DISCONNECT_MSG = 170,
  NF_WTL_PLAYER_DISCONNECT_MSG = 171,
  NF_LTS_PLAYER_DISCONNECT_MSG = 172,
  NF_WTG_PLAYER_DISCONNECT_MSG = 173,
  NF_LTWeb_PLAYER_PHONE_AUTH_CODE_REQ = 176,
  NF_WebTL_PLAYER_PHONE_AUTH_CODE_RSP = 177,
  NF_LTWeb_PLAYER_PHONE_CHECK_CODE_REQ = 178,
  NF_WebTL_PLAYER_PHONE_CHECK_CODE_RSP = 179,
  NF_LTL_PLAYER_DEVICE_CHANGE_NOTIFY = 180,
  NF_LTS_PLAYER_VIPLVEL_CHANGE_NOTIFY = 181
};
bool Proto_LoginSvrMsgID_IsValid(int value);
const Proto_LoginSvrMsgID Proto_LoginSvrMsgID_MIN = NF_WTL_PLAYER_LOGIN_REQ;
const Proto_LoginSvrMsgID Proto_LoginSvrMsgID_MAX = NF_LTS_PLAYER_VIPLVEL_CHANGE_NOTIFY;
const int Proto_LoginSvrMsgID_ARRAYSIZE = Proto_LoginSvrMsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* Proto_LoginSvrMsgID_descriptor();
inline const ::std::string& Proto_LoginSvrMsgID_Name(Proto_LoginSvrMsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    Proto_LoginSvrMsgID_descriptor(), value);
}
inline bool Proto_LoginSvrMsgID_Parse(
    const ::std::string& name, Proto_LoginSvrMsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Proto_LoginSvrMsgID>(
    Proto_LoginSvrMsgID_descriptor(), name, value);
}
enum Proto_AccountState {
  E_ACCOUNTSTATE_OK = 0,
  E_ACCOUNTSTATE_FREEZE = 1,
  E_ACCOUNTSTATE_FORBIT = 2
};
bool Proto_AccountState_IsValid(int value);
const Proto_AccountState Proto_AccountState_MIN = E_ACCOUNTSTATE_OK;
const Proto_AccountState Proto_AccountState_MAX = E_ACCOUNTSTATE_FORBIT;
const int Proto_AccountState_ARRAYSIZE = Proto_AccountState_MAX + 1;

const ::google::protobuf::EnumDescriptor* Proto_AccountState_descriptor();
inline const ::std::string& Proto_AccountState_Name(Proto_AccountState value) {
  return ::google::protobuf::internal::NameOfEnum(
    Proto_AccountState_descriptor(), value);
}
inline bool Proto_AccountState_Parse(
    const ::std::string& name, Proto_AccountState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Proto_AccountState>(
    Proto_AccountState_descriptor(), name, value);
}
enum PhoneCodeType {
  PHONE_AUTO_CODE_NONE = 0,
  PHONE_AUTO_CODE_REGISTER = 1,
  PHONE_AUTO_CODE_CHANGE_PASSWORD = 2,
  PHONE_AUTO_CODE_CHANGE_DEVICE = 3,
  PHONE_AUTO_CODE_BIND_PHONE = 4,
  PHONE_AUTO_CODE_CHANG_BANK_PASSWORD = 5
};
bool PhoneCodeType_IsValid(int value);
const PhoneCodeType PhoneCodeType_MIN = PHONE_AUTO_CODE_NONE;
const PhoneCodeType PhoneCodeType_MAX = PHONE_AUTO_CODE_CHANG_BANK_PASSWORD;
const int PhoneCodeType_ARRAYSIZE = PhoneCodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PhoneCodeType_descriptor();
inline const ::std::string& PhoneCodeType_Name(PhoneCodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PhoneCodeType_descriptor(), value);
}
inline bool PhoneCodeType_Parse(
    const ::std::string& name, PhoneCodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PhoneCodeType>(
    PhoneCodeType_descriptor(), name, value);
}
// ===================================================================

class Proto_LTWRegisterUserReq : public ::google::protobuf::Message {
 public:
  Proto_LTWRegisterUserReq();
  virtual ~Proto_LTWRegisterUserReq();

  Proto_LTWRegisterUserReq(const Proto_LTWRegisterUserReq& from);

  inline Proto_LTWRegisterUserReq& operator=(const Proto_LTWRegisterUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LTWRegisterUserReq& default_instance();

  void Swap(Proto_LTWRegisterUserReq* other);

  // implements Message ----------------------------------------------

  Proto_LTWRegisterUserReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LTWRegisterUserReq& from);
  void MergeFrom(const Proto_LTWRegisterUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint64 phone_num = 3;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 3;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional .proto_ff.LoginCommonData ext_data = 4;
  inline bool has_ext_data() const;
  inline void clear_ext_data();
  static const int kExtDataFieldNumber = 4;
  inline const ::proto_ff::LoginCommonData& ext_data() const;
  inline ::proto_ff::LoginCommonData* mutable_ext_data();
  inline ::proto_ff::LoginCommonData* release_ext_data();
  inline void set_allocated_ext_data(::proto_ff::LoginCommonData* ext_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LTWRegisterUserReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_ext_data();
  inline void clear_has_ext_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;
  ::google::protobuf::uint64 phone_num_;
  ::proto_ff::LoginCommonData* ext_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_LTWRegisterUserReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_WTLRegisterUserReq : public ::google::protobuf::Message {
 public:
  Proto_WTLRegisterUserReq();
  virtual ~Proto_WTLRegisterUserReq();

  Proto_WTLRegisterUserReq(const Proto_WTLRegisterUserReq& from);

  inline Proto_WTLRegisterUserReq& operator=(const Proto_WTLRegisterUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_WTLRegisterUserReq& default_instance();

  void Swap(Proto_WTLRegisterUserReq* other);

  // implements Message ----------------------------------------------

  Proto_WTLRegisterUserReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_WTLRegisterUserReq& from);
  void MergeFrom(const Proto_WTLRegisterUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint64 phone_num = 3;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 3;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional .proto_ff.LoginCommonData ext_data = 4;
  inline bool has_ext_data() const;
  inline void clear_ext_data();
  static const int kExtDataFieldNumber = 4;
  inline const ::proto_ff::LoginCommonData& ext_data() const;
  inline ::proto_ff::LoginCommonData* mutable_ext_data();
  inline ::proto_ff::LoginCommonData* release_ext_data();
  inline void set_allocated_ext_data(::proto_ff::LoginCommonData* ext_data);

  // optional uint32 login_bus_id = 5;
  inline bool has_login_bus_id() const;
  inline void clear_login_bus_id();
  static const int kLoginBusIdFieldNumber = 5;
  inline ::google::protobuf::uint32 login_bus_id() const;
  inline void set_login_bus_id(::google::protobuf::uint32 value);

  // optional uint32 req_trans_id = 6;
  inline bool has_req_trans_id() const;
  inline void clear_req_trans_id();
  static const int kReqTransIdFieldNumber = 6;
  inline ::google::protobuf::uint32 req_trans_id() const;
  inline void set_req_trans_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_WTLRegisterUserReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_ext_data();
  inline void clear_has_ext_data();
  inline void set_has_login_bus_id();
  inline void clear_has_login_bus_id();
  inline void set_has_req_trans_id();
  inline void clear_has_req_trans_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;
  ::google::protobuf::uint64 phone_num_;
  ::proto_ff::LoginCommonData* ext_data_;
  ::google::protobuf::uint32 login_bus_id_;
  ::google::protobuf::uint32 req_trans_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_WTLRegisterUserReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LTLRegisterUserRsp : public ::google::protobuf::Message {
 public:
  Proto_LTLRegisterUserRsp();
  virtual ~Proto_LTLRegisterUserRsp();

  Proto_LTLRegisterUserRsp(const Proto_LTLRegisterUserRsp& from);

  inline Proto_LTLRegisterUserRsp& operator=(const Proto_LTLRegisterUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LTLRegisterUserRsp& default_instance();

  void Swap(Proto_LTLRegisterUserRsp* other);

  // implements Message ----------------------------------------------

  Proto_LTLRegisterUserRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LTLRegisterUserRsp& from);
  void MergeFrom(const Proto_LTLRegisterUserRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LTLRegisterUserRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_LTLRegisterUserRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_PTWUserLoginReq : public ::google::protobuf::Message {
 public:
  Proto_PTWUserLoginReq();
  virtual ~Proto_PTWUserLoginReq();

  Proto_PTWUserLoginReq(const Proto_PTWUserLoginReq& from);

  inline Proto_PTWUserLoginReq& operator=(const Proto_PTWUserLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_PTWUserLoginReq& default_instance();

  void Swap(Proto_PTWUserLoginReq* other);

  // implements Message ----------------------------------------------

  Proto_PTWUserLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_PTWUserLoginReq& from);
  void MergeFrom(const Proto_PTWUserLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional uint32 proxy_bus_id = 3;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 3;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // optional string client_ip = 4;
  inline bool has_client_ip() const;
  inline void clear_client_ip();
  static const int kClientIpFieldNumber = 4;
  inline const ::std::string& client_ip() const;
  inline void set_client_ip(const ::std::string& value);
  inline void set_client_ip(const char* value);
  inline void set_client_ip(const char* value, size_t size);
  inline ::std::string* mutable_client_ip();
  inline ::std::string* release_client_ip();
  inline void set_allocated_client_ip(::std::string* client_ip);

  // optional .proto_login.Proto_UserLoginExternalData ext_data = 5;
  inline bool has_ext_data() const;
  inline void clear_ext_data();
  static const int kExtDataFieldNumber = 5;
  inline const ::proto_login::Proto_UserLoginExternalData& ext_data() const;
  inline ::proto_login::Proto_UserLoginExternalData* mutable_ext_data();
  inline ::proto_login::Proto_UserLoginExternalData* release_ext_data();
  inline void set_allocated_ext_data(::proto_login::Proto_UserLoginExternalData* ext_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_PTWUserLoginReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();
  inline void set_has_client_ip();
  inline void clear_has_client_ip();
  inline void set_has_ext_data();
  inline void clear_has_ext_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::std::string* account_;
  ::std::string* client_ip_;
  ::proto_login::Proto_UserLoginExternalData* ext_data_;
  ::google::protobuf::uint32 proxy_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_PTWUserLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_WTPPlayerLoginRsp : public ::google::protobuf::Message {
 public:
  Proto_WTPPlayerLoginRsp();
  virtual ~Proto_WTPPlayerLoginRsp();

  Proto_WTPPlayerLoginRsp(const Proto_WTPPlayerLoginRsp& from);

  inline Proto_WTPPlayerLoginRsp& operator=(const Proto_WTPPlayerLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_WTPPlayerLoginRsp& default_instance();

  void Swap(Proto_WTPPlayerLoginRsp* other);

  // implements Message ----------------------------------------------

  Proto_WTPPlayerLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_WTPPlayerLoginRsp& from);
  void MergeFrom(const Proto_WTPPlayerLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 3;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 4;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 5;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 5;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint32 logic_bus_id = 6;
  inline bool has_logic_bus_id() const;
  inline void clear_logic_bus_id();
  static const int kLogicBusIdFieldNumber = 6;
  inline ::google::protobuf::uint32 logic_bus_id() const;
  inline void set_logic_bus_id(::google::protobuf::uint32 value);

  // optional .proto_login.Proto_UserDetailCommonData detail_data = 7;
  inline bool has_detail_data() const;
  inline void clear_detail_data();
  static const int kDetailDataFieldNumber = 7;
  inline const ::proto_login::Proto_UserDetailCommonData& detail_data() const;
  inline ::proto_login::Proto_UserDetailCommonData* mutable_detail_data();
  inline ::proto_login::Proto_UserDetailCommonData* release_detail_data();
  inline void set_allocated_detail_data(::proto_login::Proto_UserDetailCommonData* detail_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_WTPPlayerLoginRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_logic_bus_id();
  inline void clear_has_logic_bus_id();
  inline void set_has_detail_data();
  inline void clear_has_detail_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::proto_login::Proto_UserDetailCommonData* detail_data_;
  ::google::protobuf::uint32 logic_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_WTPPlayerLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_WorldToLogicLoginReq : public ::google::protobuf::Message {
 public:
  Proto_WorldToLogicLoginReq();
  virtual ~Proto_WorldToLogicLoginReq();

  Proto_WorldToLogicLoginReq(const Proto_WorldToLogicLoginReq& from);

  inline Proto_WorldToLogicLoginReq& operator=(const Proto_WorldToLogicLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_WorldToLogicLoginReq& default_instance();

  void Swap(Proto_WorldToLogicLoginReq* other);

  // implements Message ----------------------------------------------

  Proto_WorldToLogicLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_WorldToLogicLoginReq& from);
  void MergeFrom(const Proto_WorldToLogicLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 4;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint32 proxy_bus_id = 5;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 5;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // optional .proto_login.Proto_UserLoginExternalData ext_data = 6;
  inline bool has_ext_data() const;
  inline void clear_ext_data();
  static const int kExtDataFieldNumber = 6;
  inline const ::proto_login::Proto_UserLoginExternalData& ext_data() const;
  inline ::proto_login::Proto_UserLoginExternalData* mutable_ext_data();
  inline ::proto_login::Proto_UserLoginExternalData* release_ext_data();
  inline void set_allocated_ext_data(::proto_login::Proto_UserLoginExternalData* ext_data);

  // optional string client_ip = 7;
  inline bool has_client_ip() const;
  inline void clear_client_ip();
  static const int kClientIpFieldNumber = 7;
  inline const ::std::string& client_ip() const;
  inline void set_client_ip(const ::std::string& value);
  inline void set_client_ip(const char* value);
  inline void set_client_ip(const char* value, size_t size);
  inline ::std::string* mutable_client_ip();
  inline ::std::string* release_client_ip();
  inline void set_allocated_client_ip(::std::string* client_ip);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_WorldToLogicLoginReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();
  inline void set_has_ext_data();
  inline void clear_has_ext_data();
  inline void set_has_client_ip();
  inline void clear_has_client_ip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint32 proxy_bus_id_;
  ::proto_login::Proto_UserLoginExternalData* ext_data_;
  ::std::string* client_ip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_WorldToLogicLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LogicToWorldLoginRsp : public ::google::protobuf::Message {
 public:
  Proto_LogicToWorldLoginRsp();
  virtual ~Proto_LogicToWorldLoginRsp();

  Proto_LogicToWorldLoginRsp(const Proto_LogicToWorldLoginRsp& from);

  inline Proto_LogicToWorldLoginRsp& operator=(const Proto_LogicToWorldLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LogicToWorldLoginRsp& default_instance();

  void Swap(Proto_LogicToWorldLoginRsp* other);

  // implements Message ----------------------------------------------

  Proto_LogicToWorldLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LogicToWorldLoginRsp& from);
  void MergeFrom(const Proto_LogicToWorldLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional .proto_login.Proto_UserDetailCommonData detail_data = 3;
  inline bool has_detail_data() const;
  inline void clear_detail_data();
  static const int kDetailDataFieldNumber = 3;
  inline const ::proto_login::Proto_UserDetailCommonData& detail_data() const;
  inline ::proto_login::Proto_UserDetailCommonData* mutable_detail_data();
  inline ::proto_login::Proto_UserDetailCommonData* release_detail_data();
  inline void set_allocated_detail_data(::proto_login::Proto_UserDetailCommonData* detail_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LogicToWorldLoginRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_detail_data();
  inline void clear_has_detail_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::proto_login::Proto_UserDetailCommonData* detail_data_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_LogicToWorldLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyPlayerDisconnect : public ::google::protobuf::Message {
 public:
  NotifyPlayerDisconnect();
  virtual ~NotifyPlayerDisconnect();

  NotifyPlayerDisconnect(const NotifyPlayerDisconnect& from);

  inline NotifyPlayerDisconnect& operator=(const NotifyPlayerDisconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyPlayerDisconnect& default_instance();

  void Swap(NotifyPlayerDisconnect* other);

  // implements Message ----------------------------------------------

  NotifyPlayerDisconnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyPlayerDisconnect& from);
  void MergeFrom(const NotifyPlayerDisconnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyPlayerDisconnect)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static NotifyPlayerDisconnect* default_instance_;
};
// -------------------------------------------------------------------

class NotifyPlayerReconnectReq : public ::google::protobuf::Message {
 public:
  NotifyPlayerReconnectReq();
  virtual ~NotifyPlayerReconnectReq();

  NotifyPlayerReconnectReq(const NotifyPlayerReconnectReq& from);

  inline NotifyPlayerReconnectReq& operator=(const NotifyPlayerReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyPlayerReconnectReq& default_instance();

  void Swap(NotifyPlayerReconnectReq* other);

  // implements Message ----------------------------------------------

  NotifyPlayerReconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyPlayerReconnectReq& from);
  void MergeFrom(const NotifyPlayerReconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 proxy_bus_id = 2;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 2;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyPlayerReconnectReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 proxy_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static NotifyPlayerReconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class NotifyPlayerReconnctRsp : public ::google::protobuf::Message {
 public:
  NotifyPlayerReconnctRsp();
  virtual ~NotifyPlayerReconnctRsp();

  NotifyPlayerReconnctRsp(const NotifyPlayerReconnctRsp& from);

  inline NotifyPlayerReconnctRsp& operator=(const NotifyPlayerReconnctRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyPlayerReconnctRsp& default_instance();

  void Swap(NotifyPlayerReconnctRsp* other);

  // implements Message ----------------------------------------------

  NotifyPlayerReconnctRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyPlayerReconnctRsp& from);
  void MergeFrom(const NotifyPlayerReconnctRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 3;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 4;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 5;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 5;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint32 logic_bus_id = 6;
  inline bool has_logic_bus_id() const;
  inline void clear_logic_bus_id();
  static const int kLogicBusIdFieldNumber = 6;
  inline ::google::protobuf::uint32 logic_bus_id() const;
  inline void set_logic_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyPlayerReconnctRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_logic_bus_id();
  inline void clear_has_logic_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint32 logic_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static NotifyPlayerReconnctRsp* default_instance_;
};
// -------------------------------------------------------------------

class WTLNotifyPlayerReconnectReq : public ::google::protobuf::Message {
 public:
  WTLNotifyPlayerReconnectReq();
  virtual ~WTLNotifyPlayerReconnectReq();

  WTLNotifyPlayerReconnectReq(const WTLNotifyPlayerReconnectReq& from);

  inline WTLNotifyPlayerReconnectReq& operator=(const WTLNotifyPlayerReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WTLNotifyPlayerReconnectReq& default_instance();

  void Swap(WTLNotifyPlayerReconnectReq* other);

  // implements Message ----------------------------------------------

  WTLNotifyPlayerReconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WTLNotifyPlayerReconnectReq& from);
  void MergeFrom(const WTLNotifyPlayerReconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 4;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint32 proxy_bus_id = 6;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 6;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WTLNotifyPlayerReconnectReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint32 proxy_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static WTLNotifyPlayerReconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class LTWNotifyPlayerReconnectRsp : public ::google::protobuf::Message {
 public:
  LTWNotifyPlayerReconnectRsp();
  virtual ~LTWNotifyPlayerReconnectRsp();

  LTWNotifyPlayerReconnectRsp(const LTWNotifyPlayerReconnectRsp& from);

  inline LTWNotifyPlayerReconnectRsp& operator=(const LTWNotifyPlayerReconnectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTWNotifyPlayerReconnectRsp& default_instance();

  void Swap(LTWNotifyPlayerReconnectRsp* other);

  // implements Message ----------------------------------------------

  LTWNotifyPlayerReconnectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTWNotifyPlayerReconnectRsp& from);
  void MergeFrom(const LTWNotifyPlayerReconnectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LTWNotifyPlayerReconnectRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LTWNotifyPlayerReconnectRsp* default_instance_;
};
// -------------------------------------------------------------------

class WTGNotifyPlayerReconnectReq : public ::google::protobuf::Message {
 public:
  WTGNotifyPlayerReconnectReq();
  virtual ~WTGNotifyPlayerReconnectReq();

  WTGNotifyPlayerReconnectReq(const WTGNotifyPlayerReconnectReq& from);

  inline WTGNotifyPlayerReconnectReq& operator=(const WTGNotifyPlayerReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WTGNotifyPlayerReconnectReq& default_instance();

  void Swap(WTGNotifyPlayerReconnectReq* other);

  // implements Message ----------------------------------------------

  WTGNotifyPlayerReconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WTGNotifyPlayerReconnectReq& from);
  void MergeFrom(const WTGNotifyPlayerReconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 proxy_bus_id = 2;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 2;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // optional uint32 logic_bus_id = 3;
  inline bool has_logic_bus_id() const;
  inline void clear_logic_bus_id();
  static const int kLogicBusIdFieldNumber = 3;
  inline ::google::protobuf::uint32 logic_bus_id() const;
  inline void set_logic_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WTGNotifyPlayerReconnectReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();
  inline void set_has_logic_bus_id();
  inline void clear_has_logic_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 proxy_bus_id_;
  ::google::protobuf::uint32 logic_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static WTGNotifyPlayerReconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class GTWNotifyPlayerReconnectRsp : public ::google::protobuf::Message {
 public:
  GTWNotifyPlayerReconnectRsp();
  virtual ~GTWNotifyPlayerReconnectRsp();

  GTWNotifyPlayerReconnectRsp(const GTWNotifyPlayerReconnectRsp& from);

  inline GTWNotifyPlayerReconnectRsp& operator=(const GTWNotifyPlayerReconnectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTWNotifyPlayerReconnectRsp& default_instance();

  void Swap(GTWNotifyPlayerReconnectRsp* other);

  // implements Message ----------------------------------------------

  GTWNotifyPlayerReconnectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTWNotifyPlayerReconnectRsp& from);
  void MergeFrom(const GTWNotifyPlayerReconnectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GTWNotifyPlayerReconnectRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static GTWNotifyPlayerReconnectRsp* default_instance_;
};
// -------------------------------------------------------------------

class LTSNotifyPlayerReconnectReq : public ::google::protobuf::Message {
 public:
  LTSNotifyPlayerReconnectReq();
  virtual ~LTSNotifyPlayerReconnectReq();

  LTSNotifyPlayerReconnectReq(const LTSNotifyPlayerReconnectReq& from);

  inline LTSNotifyPlayerReconnectReq& operator=(const LTSNotifyPlayerReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTSNotifyPlayerReconnectReq& default_instance();

  void Swap(LTSNotifyPlayerReconnectReq* other);

  // implements Message ----------------------------------------------

  LTSNotifyPlayerReconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTSNotifyPlayerReconnectReq& from);
  void MergeFrom(const LTSNotifyPlayerReconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 logic_bus_id = 2;
  inline bool has_logic_bus_id() const;
  inline void clear_logic_bus_id();
  static const int kLogicBusIdFieldNumber = 2;
  inline ::google::protobuf::uint32 logic_bus_id() const;
  inline void set_logic_bus_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 3;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 3;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint64 last_login_time = 4;
  inline bool has_last_login_time() const;
  inline void clear_last_login_time();
  static const int kLastLoginTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 last_login_time() const;
  inline void set_last_login_time(::google::protobuf::uint64 value);

  // optional uint64 last_logout_time = 5;
  inline bool has_last_logout_time() const;
  inline void clear_last_logout_time();
  static const int kLastLogoutTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 last_logout_time() const;
  inline void set_last_logout_time(::google::protobuf::uint64 value);

  // optional .proto_ff.UserSimpleData simple_data = 6;
  inline bool has_simple_data() const;
  inline void clear_simple_data();
  static const int kSimpleDataFieldNumber = 6;
  inline const ::proto_ff::UserSimpleData& simple_data() const;
  inline ::proto_ff::UserSimpleData* mutable_simple_data();
  inline ::proto_ff::UserSimpleData* release_simple_data();
  inline void set_allocated_simple_data(::proto_ff::UserSimpleData* simple_data);

  // @@protoc_insertion_point(class_scope:proto_ff.LTSNotifyPlayerReconnectReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_logic_bus_id();
  inline void clear_has_logic_bus_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_last_login_time();
  inline void clear_has_last_login_time();
  inline void set_has_last_logout_time();
  inline void clear_has_last_logout_time();
  inline void set_has_simple_data();
  inline void clear_has_simple_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 logic_bus_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint64 last_login_time_;
  ::google::protobuf::uint64 last_logout_time_;
  ::proto_ff::UserSimpleData* simple_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LTSNotifyPlayerReconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_WorldToLogicLogoutReq : public ::google::protobuf::Message {
 public:
  Proto_WorldToLogicLogoutReq();
  virtual ~Proto_WorldToLogicLogoutReq();

  Proto_WorldToLogicLogoutReq(const Proto_WorldToLogicLogoutReq& from);

  inline Proto_WorldToLogicLogoutReq& operator=(const Proto_WorldToLogicLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_WorldToLogicLogoutReq& default_instance();

  void Swap(Proto_WorldToLogicLogoutReq* other);

  // implements Message ----------------------------------------------

  Proto_WorldToLogicLogoutReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_WorldToLogicLogoutReq& from);
  void MergeFrom(const Proto_WorldToLogicLogoutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_WorldToLogicLogoutReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_WorldToLogicLogoutReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LogicToWorldLogoutRsp : public ::google::protobuf::Message {
 public:
  Proto_LogicToWorldLogoutRsp();
  virtual ~Proto_LogicToWorldLogoutRsp();

  Proto_LogicToWorldLogoutRsp(const Proto_LogicToWorldLogoutRsp& from);

  inline Proto_LogicToWorldLogoutRsp& operator=(const Proto_LogicToWorldLogoutRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LogicToWorldLogoutRsp& default_instance();

  void Swap(Proto_LogicToWorldLogoutRsp* other);

  // implements Message ----------------------------------------------

  Proto_LogicToWorldLogoutRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LogicToWorldLogoutRsp& from);
  void MergeFrom(const Proto_LogicToWorldLogoutRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LogicToWorldLogoutRsp)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_LogicToWorldLogoutRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LogicToSnsLoginReq : public ::google::protobuf::Message {
 public:
  Proto_LogicToSnsLoginReq();
  virtual ~Proto_LogicToSnsLoginReq();

  Proto_LogicToSnsLoginReq(const Proto_LogicToSnsLoginReq& from);

  inline Proto_LogicToSnsLoginReq& operator=(const Proto_LogicToSnsLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LogicToSnsLoginReq& default_instance();

  void Swap(Proto_LogicToSnsLoginReq* other);

  // implements Message ----------------------------------------------

  Proto_LogicToSnsLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LogicToSnsLoginReq& from);
  void MergeFrom(const Proto_LogicToSnsLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 logic_bus_id = 2;
  inline bool has_logic_bus_id() const;
  inline void clear_logic_bus_id();
  static const int kLogicBusIdFieldNumber = 2;
  inline ::google::protobuf::uint32 logic_bus_id() const;
  inline void set_logic_bus_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 3;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 3;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint64 last_login_time = 4;
  inline bool has_last_login_time() const;
  inline void clear_last_login_time();
  static const int kLastLoginTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 last_login_time() const;
  inline void set_last_login_time(::google::protobuf::uint64 value);

  // optional uint64 last_logout_time = 5;
  inline bool has_last_logout_time() const;
  inline void clear_last_logout_time();
  static const int kLastLogoutTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 last_logout_time() const;
  inline void set_last_logout_time(::google::protobuf::uint64 value);

  // optional .proto_ff.UserSimpleData simple_data = 6;
  inline bool has_simple_data() const;
  inline void clear_simple_data();
  static const int kSimpleDataFieldNumber = 6;
  inline const ::proto_ff::UserSimpleData& simple_data() const;
  inline ::proto_ff::UserSimpleData* mutable_simple_data();
  inline ::proto_ff::UserSimpleData* release_simple_data();
  inline void set_allocated_simple_data(::proto_ff::UserSimpleData* simple_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LogicToSnsLoginReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_logic_bus_id();
  inline void clear_has_logic_bus_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_last_login_time();
  inline void clear_has_last_login_time();
  inline void set_has_last_logout_time();
  inline void clear_has_last_logout_time();
  inline void set_has_simple_data();
  inline void clear_has_simple_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 logic_bus_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint64 last_login_time_;
  ::google::protobuf::uint64 last_logout_time_;
  ::proto_ff::UserSimpleData* simple_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_LogicToSnsLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SnsToLogicLoginRsp : public ::google::protobuf::Message {
 public:
  Proto_SnsToLogicLoginRsp();
  virtual ~Proto_SnsToLogicLoginRsp();

  Proto_SnsToLogicLoginRsp(const Proto_SnsToLogicLoginRsp& from);

  inline Proto_SnsToLogicLoginRsp& operator=(const Proto_SnsToLogicLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SnsToLogicLoginRsp& default_instance();

  void Swap(Proto_SnsToLogicLoginRsp* other);

  // implements Message ----------------------------------------------

  Proto_SnsToLogicLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SnsToLogicLoginRsp& from);
  void MergeFrom(const Proto_SnsToLogicLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SnsToLogicLoginRsp)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SnsToLogicLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LogicToSnsLogoutReq : public ::google::protobuf::Message {
 public:
  Proto_LogicToSnsLogoutReq();
  virtual ~Proto_LogicToSnsLogoutReq();

  Proto_LogicToSnsLogoutReq(const Proto_LogicToSnsLogoutReq& from);

  inline Proto_LogicToSnsLogoutReq& operator=(const Proto_LogicToSnsLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LogicToSnsLogoutReq& default_instance();

  void Swap(Proto_LogicToSnsLogoutReq* other);

  // implements Message ----------------------------------------------

  Proto_LogicToSnsLogoutReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LogicToSnsLogoutReq& from);
  void MergeFrom(const Proto_LogicToSnsLogoutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 logic_svr_id = 2;
  inline bool has_logic_svr_id() const;
  inline void clear_logic_svr_id();
  static const int kLogicSvrIdFieldNumber = 2;
  inline ::google::protobuf::uint32 logic_svr_id() const;
  inline void set_logic_svr_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LogicToSnsLogoutReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_logic_svr_id();
  inline void clear_has_logic_svr_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 logic_svr_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_LogicToSnsLogoutReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SnsToLogicLogoutRsp : public ::google::protobuf::Message {
 public:
  Proto_SnsToLogicLogoutRsp();
  virtual ~Proto_SnsToLogicLogoutRsp();

  Proto_SnsToLogicLogoutRsp(const Proto_SnsToLogicLogoutRsp& from);

  inline Proto_SnsToLogicLogoutRsp& operator=(const Proto_SnsToLogicLogoutRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SnsToLogicLogoutRsp& default_instance();

  void Swap(Proto_SnsToLogicLogoutRsp* other);

  // implements Message ----------------------------------------------

  Proto_SnsToLogicLogoutRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SnsToLogicLogoutRsp& from);
  void MergeFrom(const Proto_SnsToLogicLogoutRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SnsToLogicLogoutRsp)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_SnsToLogicLogoutRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LogicToWorldLogoutReq : public ::google::protobuf::Message {
 public:
  Proto_LogicToWorldLogoutReq();
  virtual ~Proto_LogicToWorldLogoutReq();

  Proto_LogicToWorldLogoutReq(const Proto_LogicToWorldLogoutReq& from);

  inline Proto_LogicToWorldLogoutReq& operator=(const Proto_LogicToWorldLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LogicToWorldLogoutReq& default_instance();

  void Swap(Proto_LogicToWorldLogoutReq* other);

  // implements Message ----------------------------------------------

  Proto_LogicToWorldLogoutReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LogicToWorldLogoutReq& from);
  void MergeFrom(const Proto_LogicToWorldLogoutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LogicToWorldLogoutReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static Proto_LogicToWorldLogoutReq* default_instance_;
};
// -------------------------------------------------------------------

class LTWebPhoneAuthCodeReq : public ::google::protobuf::Message {
 public:
  LTWebPhoneAuthCodeReq();
  virtual ~LTWebPhoneAuthCodeReq();

  LTWebPhoneAuthCodeReq(const LTWebPhoneAuthCodeReq& from);

  inline LTWebPhoneAuthCodeReq& operator=(const LTWebPhoneAuthCodeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTWebPhoneAuthCodeReq& default_instance();

  void Swap(LTWebPhoneAuthCodeReq* other);

  // implements Message ----------------------------------------------

  LTWebPhoneAuthCodeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTWebPhoneAuthCodeReq& from);
  void MergeFrom(const LTWebPhoneAuthCodeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional uint32 code_type = 2;
  inline bool has_code_type() const;
  inline void clear_code_type();
  static const int kCodeTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 code_type() const;
  inline void set_code_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LTWebPhoneAuthCodeReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_code_type();
  inline void clear_has_code_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::uint32 code_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LTWebPhoneAuthCodeReq* default_instance_;
};
// -------------------------------------------------------------------

class WebTLPhoneAuthCodeRsp : public ::google::protobuf::Message {
 public:
  WebTLPhoneAuthCodeRsp();
  virtual ~WebTLPhoneAuthCodeRsp();

  WebTLPhoneAuthCodeRsp(const WebTLPhoneAuthCodeRsp& from);

  inline WebTLPhoneAuthCodeRsp& operator=(const WebTLPhoneAuthCodeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebTLPhoneAuthCodeRsp& default_instance();

  void Swap(WebTLPhoneAuthCodeRsp* other);

  // implements Message ----------------------------------------------

  WebTLPhoneAuthCodeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebTLPhoneAuthCodeRsp& from);
  void MergeFrom(const WebTLPhoneAuthCodeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 phone_num = 2;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional string msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:proto_ff.WebTLPhoneAuthCodeRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::std::string* msg_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static WebTLPhoneAuthCodeRsp* default_instance_;
};
// -------------------------------------------------------------------

class LTWebPhoneCheckCodeReq : public ::google::protobuf::Message {
 public:
  LTWebPhoneCheckCodeReq();
  virtual ~LTWebPhoneCheckCodeReq();

  LTWebPhoneCheckCodeReq(const LTWebPhoneCheckCodeReq& from);

  inline LTWebPhoneCheckCodeReq& operator=(const LTWebPhoneCheckCodeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTWebPhoneCheckCodeReq& default_instance();

  void Swap(LTWebPhoneCheckCodeReq* other);

  // implements Message ----------------------------------------------

  LTWebPhoneCheckCodeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTWebPhoneCheckCodeReq& from);
  void MergeFrom(const LTWebPhoneCheckCodeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional uint32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);

  // optional uint32 code_type = 3;
  inline bool has_code_type() const;
  inline void clear_code_type();
  static const int kCodeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 code_type() const;
  inline void set_code_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LTWebPhoneCheckCodeReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_code_type();
  inline void clear_has_code_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::google::protobuf::uint32 code_;
  ::google::protobuf::uint32 code_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LTWebPhoneCheckCodeReq* default_instance_;
};
// -------------------------------------------------------------------

class WebTLPhoneCheckCodeRsp : public ::google::protobuf::Message {
 public:
  WebTLPhoneCheckCodeRsp();
  virtual ~WebTLPhoneCheckCodeRsp();

  WebTLPhoneCheckCodeRsp(const WebTLPhoneCheckCodeRsp& from);

  inline WebTLPhoneCheckCodeRsp& operator=(const WebTLPhoneCheckCodeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebTLPhoneCheckCodeRsp& default_instance();

  void Swap(WebTLPhoneCheckCodeRsp* other);

  // implements Message ----------------------------------------------

  WebTLPhoneCheckCodeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebTLPhoneCheckCodeRsp& from);
  void MergeFrom(const WebTLPhoneCheckCodeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 phone_num = 2;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  inline ::google::protobuf::uint64 phone_num() const;
  inline void set_phone_num(::google::protobuf::uint64 value);

  // optional string msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:proto_ff.WebTLPhoneCheckCodeRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 phone_num_;
  ::std::string* msg_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static WebTLPhoneCheckCodeRsp* default_instance_;
};
// -------------------------------------------------------------------

class WebPhoneCodeRetMsg : public ::google::protobuf::Message {
 public:
  WebPhoneCodeRetMsg();
  virtual ~WebPhoneCodeRetMsg();

  WebPhoneCodeRetMsg(const WebPhoneCodeRetMsg& from);

  inline WebPhoneCodeRetMsg& operator=(const WebPhoneCodeRetMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebPhoneCodeRetMsg& default_instance();

  void Swap(WebPhoneCodeRetMsg* other);

  // implements Message ----------------------------------------------

  WebPhoneCodeRetMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebPhoneCodeRetMsg& from);
  void MergeFrom(const WebPhoneCodeRetMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // optional int64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WebPhoneCodeRetMsg)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static WebPhoneCodeRetMsg* default_instance_;
};
// -------------------------------------------------------------------

class LTSnsChangeFaceNotify : public ::google::protobuf::Message {
 public:
  LTSnsChangeFaceNotify();
  virtual ~LTSnsChangeFaceNotify();

  LTSnsChangeFaceNotify(const LTSnsChangeFaceNotify& from);

  inline LTSnsChangeFaceNotify& operator=(const LTSnsChangeFaceNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTSnsChangeFaceNotify& default_instance();

  void Swap(LTSnsChangeFaceNotify* other);

  // implements Message ----------------------------------------------

  LTSnsChangeFaceNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTSnsChangeFaceNotify& from);
  void MergeFrom(const LTSnsChangeFaceNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 face_id = 2;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 2;
  inline ::google::protobuf::uint32 face_id() const;
  inline void set_face_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LTSnsChangeFaceNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_face_id();
  inline void clear_has_face_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 face_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LTSnsChangeFaceNotify* default_instance_;
};
// -------------------------------------------------------------------

class LTSnsChangeNickNameNotify : public ::google::protobuf::Message {
 public:
  LTSnsChangeNickNameNotify();
  virtual ~LTSnsChangeNickNameNotify();

  LTSnsChangeNickNameNotify(const LTSnsChangeNickNameNotify& from);

  inline LTSnsChangeNickNameNotify& operator=(const LTSnsChangeNickNameNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTSnsChangeNickNameNotify& default_instance();

  void Swap(LTSnsChangeNickNameNotify* other);

  // implements Message ----------------------------------------------

  LTSnsChangeNickNameNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTSnsChangeNickNameNotify& from);
  void MergeFrom(const LTSnsChangeNickNameNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:proto_ff.LTSnsChangeNickNameNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LTSnsChangeNickNameNotify* default_instance_;
};
// -------------------------------------------------------------------

class LTSnsChangeVipLevelNotify : public ::google::protobuf::Message {
 public:
  LTSnsChangeVipLevelNotify();
  virtual ~LTSnsChangeVipLevelNotify();

  LTSnsChangeVipLevelNotify(const LTSnsChangeVipLevelNotify& from);

  inline LTSnsChangeVipLevelNotify& operator=(const LTSnsChangeVipLevelNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTSnsChangeVipLevelNotify& default_instance();

  void Swap(LTSnsChangeVipLevelNotify* other);

  // implements Message ----------------------------------------------

  LTSnsChangeVipLevelNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTSnsChangeVipLevelNotify& from);
  void MergeFrom(const LTSnsChangeVipLevelNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 vip_level = 3;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LTSnsChangeVipLevelNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 vip_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LTSnsChangeVipLevelNotify* default_instance_;
};
// -------------------------------------------------------------------

class LTSnsChangeUserIdNotify : public ::google::protobuf::Message {
 public:
  LTSnsChangeUserIdNotify();
  virtual ~LTSnsChangeUserIdNotify();

  LTSnsChangeUserIdNotify(const LTSnsChangeUserIdNotify& from);

  inline LTSnsChangeUserIdNotify& operator=(const LTSnsChangeUserIdNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTSnsChangeUserIdNotify& default_instance();

  void Swap(LTSnsChangeUserIdNotify* other);

  // implements Message ----------------------------------------------

  LTSnsChangeUserIdNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTSnsChangeUserIdNotify& from);
  void MergeFrom(const LTSnsChangeUserIdNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 show_userid = 2;
  inline bool has_show_userid() const;
  inline void clear_show_userid();
  static const int kShowUseridFieldNumber = 2;
  inline ::google::protobuf::uint64 show_userid() const;
  inline void set_show_userid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LTSnsChangeUserIdNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_show_userid();
  inline void clear_has_show_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 show_userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LTSnsChangeUserIdNotify* default_instance_;
};
// -------------------------------------------------------------------

class LTLPlayerDeviceChangeNotify : public ::google::protobuf::Message {
 public:
  LTLPlayerDeviceChangeNotify();
  virtual ~LTLPlayerDeviceChangeNotify();

  LTLPlayerDeviceChangeNotify(const LTLPlayerDeviceChangeNotify& from);

  inline LTLPlayerDeviceChangeNotify& operator=(const LTLPlayerDeviceChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTLPlayerDeviceChangeNotify& default_instance();

  void Swap(LTLPlayerDeviceChangeNotify* other);

  // implements Message ----------------------------------------------

  LTLPlayerDeviceChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTLPlayerDeviceChangeNotify& from);
  void MergeFrom(const LTLPlayerDeviceChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string device_id = 2;
  inline bool has_device_id() const;
  inline void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  inline const ::std::string& device_id() const;
  inline void set_device_id(const ::std::string& value);
  inline void set_device_id(const char* value);
  inline void set_device_id(const char* value, size_t size);
  inline ::std::string* mutable_device_id();
  inline ::std::string* release_device_id();
  inline void set_allocated_device_id(::std::string* device_id);

  // @@protoc_insertion_point(class_scope:proto_ff.LTLPlayerDeviceChangeNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_device_id();
  inline void clear_has_device_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::std::string* device_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5flogin_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LTLPlayerDeviceChangeNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// Proto_LTWRegisterUserReq

// optional uint64 user_id = 1;
inline bool Proto_LTWRegisterUserReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LTWRegisterUserReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LTWRegisterUserReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LTWRegisterUserReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_LTWRegisterUserReq::user_id() const {
  return user_id_;
}
inline void Proto_LTWRegisterUserReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional string nick_name = 2;
inline bool Proto_LTWRegisterUserReq::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_LTWRegisterUserReq::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_LTWRegisterUserReq::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_LTWRegisterUserReq::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& Proto_LTWRegisterUserReq::nick_name() const {
  return *nick_name_;
}
inline void Proto_LTWRegisterUserReq::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_LTWRegisterUserReq::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_LTWRegisterUserReq::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_LTWRegisterUserReq::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* Proto_LTWRegisterUserReq::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_LTWRegisterUserReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 phone_num = 3;
inline bool Proto_LTWRegisterUserReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_LTWRegisterUserReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_LTWRegisterUserReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_LTWRegisterUserReq::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_LTWRegisterUserReq::phone_num() const {
  return phone_num_;
}
inline void Proto_LTWRegisterUserReq::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional .proto_ff.LoginCommonData ext_data = 4;
inline bool Proto_LTWRegisterUserReq::has_ext_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_LTWRegisterUserReq::set_has_ext_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_LTWRegisterUserReq::clear_has_ext_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_LTWRegisterUserReq::clear_ext_data() {
  if (ext_data_ != NULL) ext_data_->::proto_ff::LoginCommonData::Clear();
  clear_has_ext_data();
}
inline const ::proto_ff::LoginCommonData& Proto_LTWRegisterUserReq::ext_data() const {
  return ext_data_ != NULL ? *ext_data_ : *default_instance_->ext_data_;
}
inline ::proto_ff::LoginCommonData* Proto_LTWRegisterUserReq::mutable_ext_data() {
  set_has_ext_data();
  if (ext_data_ == NULL) ext_data_ = new ::proto_ff::LoginCommonData;
  return ext_data_;
}
inline ::proto_ff::LoginCommonData* Proto_LTWRegisterUserReq::release_ext_data() {
  clear_has_ext_data();
  ::proto_ff::LoginCommonData* temp = ext_data_;
  ext_data_ = NULL;
  return temp;
}
inline void Proto_LTWRegisterUserReq::set_allocated_ext_data(::proto_ff::LoginCommonData* ext_data) {
  delete ext_data_;
  ext_data_ = ext_data;
  if (ext_data) {
    set_has_ext_data();
  } else {
    clear_has_ext_data();
  }
}

// -------------------------------------------------------------------

// Proto_WTLRegisterUserReq

// optional uint64 user_id = 1;
inline bool Proto_WTLRegisterUserReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_WTLRegisterUserReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_WTLRegisterUserReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_WTLRegisterUserReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_WTLRegisterUserReq::user_id() const {
  return user_id_;
}
inline void Proto_WTLRegisterUserReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional string nick_name = 2;
inline bool Proto_WTLRegisterUserReq::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_WTLRegisterUserReq::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_WTLRegisterUserReq::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_WTLRegisterUserReq::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& Proto_WTLRegisterUserReq::nick_name() const {
  return *nick_name_;
}
inline void Proto_WTLRegisterUserReq::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_WTLRegisterUserReq::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Proto_WTLRegisterUserReq::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_WTLRegisterUserReq::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* Proto_WTLRegisterUserReq::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_WTLRegisterUserReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 phone_num = 3;
inline bool Proto_WTLRegisterUserReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_WTLRegisterUserReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_WTLRegisterUserReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_WTLRegisterUserReq::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 Proto_WTLRegisterUserReq::phone_num() const {
  return phone_num_;
}
inline void Proto_WTLRegisterUserReq::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional .proto_ff.LoginCommonData ext_data = 4;
inline bool Proto_WTLRegisterUserReq::has_ext_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_WTLRegisterUserReq::set_has_ext_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_WTLRegisterUserReq::clear_has_ext_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_WTLRegisterUserReq::clear_ext_data() {
  if (ext_data_ != NULL) ext_data_->::proto_ff::LoginCommonData::Clear();
  clear_has_ext_data();
}
inline const ::proto_ff::LoginCommonData& Proto_WTLRegisterUserReq::ext_data() const {
  return ext_data_ != NULL ? *ext_data_ : *default_instance_->ext_data_;
}
inline ::proto_ff::LoginCommonData* Proto_WTLRegisterUserReq::mutable_ext_data() {
  set_has_ext_data();
  if (ext_data_ == NULL) ext_data_ = new ::proto_ff::LoginCommonData;
  return ext_data_;
}
inline ::proto_ff::LoginCommonData* Proto_WTLRegisterUserReq::release_ext_data() {
  clear_has_ext_data();
  ::proto_ff::LoginCommonData* temp = ext_data_;
  ext_data_ = NULL;
  return temp;
}
inline void Proto_WTLRegisterUserReq::set_allocated_ext_data(::proto_ff::LoginCommonData* ext_data) {
  delete ext_data_;
  ext_data_ = ext_data;
  if (ext_data) {
    set_has_ext_data();
  } else {
    clear_has_ext_data();
  }
}

// optional uint32 login_bus_id = 5;
inline bool Proto_WTLRegisterUserReq::has_login_bus_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_WTLRegisterUserReq::set_has_login_bus_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_WTLRegisterUserReq::clear_has_login_bus_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_WTLRegisterUserReq::clear_login_bus_id() {
  login_bus_id_ = 0u;
  clear_has_login_bus_id();
}
inline ::google::protobuf::uint32 Proto_WTLRegisterUserReq::login_bus_id() const {
  return login_bus_id_;
}
inline void Proto_WTLRegisterUserReq::set_login_bus_id(::google::protobuf::uint32 value) {
  set_has_login_bus_id();
  login_bus_id_ = value;
}

// optional uint32 req_trans_id = 6;
inline bool Proto_WTLRegisterUserReq::has_req_trans_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_WTLRegisterUserReq::set_has_req_trans_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_WTLRegisterUserReq::clear_has_req_trans_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_WTLRegisterUserReq::clear_req_trans_id() {
  req_trans_id_ = 0u;
  clear_has_req_trans_id();
}
inline ::google::protobuf::uint32 Proto_WTLRegisterUserReq::req_trans_id() const {
  return req_trans_id_;
}
inline void Proto_WTLRegisterUserReq::set_req_trans_id(::google::protobuf::uint32 value) {
  set_has_req_trans_id();
  req_trans_id_ = value;
}

// -------------------------------------------------------------------

// Proto_LTLRegisterUserRsp

// optional int32 result = 1;
inline bool Proto_LTLRegisterUserRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LTLRegisterUserRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LTLRegisterUserRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LTLRegisterUserRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_LTLRegisterUserRsp::result() const {
  return result_;
}
inline void Proto_LTLRegisterUserRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_LTLRegisterUserRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_LTLRegisterUserRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_LTLRegisterUserRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_LTLRegisterUserRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_LTLRegisterUserRsp::user_id() const {
  return user_id_;
}
inline void Proto_LTLRegisterUserRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// Proto_PTWUserLoginReq

// optional uint64 user_id = 1;
inline bool Proto_PTWUserLoginReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_PTWUserLoginReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_PTWUserLoginReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_PTWUserLoginReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_PTWUserLoginReq::user_id() const {
  return user_id_;
}
inline void Proto_PTWUserLoginReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional string account = 2;
inline bool Proto_PTWUserLoginReq::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_PTWUserLoginReq::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_PTWUserLoginReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_PTWUserLoginReq::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto_PTWUserLoginReq::account() const {
  return *account_;
}
inline void Proto_PTWUserLoginReq::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_PTWUserLoginReq::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_PTWUserLoginReq::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_PTWUserLoginReq::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto_PTWUserLoginReq::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_PTWUserLoginReq::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 proxy_bus_id = 3;
inline bool Proto_PTWUserLoginReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_PTWUserLoginReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_PTWUserLoginReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_PTWUserLoginReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 Proto_PTWUserLoginReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void Proto_PTWUserLoginReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// optional string client_ip = 4;
inline bool Proto_PTWUserLoginReq::has_client_ip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_PTWUserLoginReq::set_has_client_ip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_PTWUserLoginReq::clear_has_client_ip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_PTWUserLoginReq::clear_client_ip() {
  if (client_ip_ != &::google::protobuf::internal::kEmptyString) {
    client_ip_->clear();
  }
  clear_has_client_ip();
}
inline const ::std::string& Proto_PTWUserLoginReq::client_ip() const {
  return *client_ip_;
}
inline void Proto_PTWUserLoginReq::set_client_ip(const ::std::string& value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
}
inline void Proto_PTWUserLoginReq::set_client_ip(const char* value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
}
inline void Proto_PTWUserLoginReq::set_client_ip(const char* value, size_t size) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_PTWUserLoginReq::mutable_client_ip() {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  return client_ip_;
}
inline ::std::string* Proto_PTWUserLoginReq::release_client_ip() {
  clear_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = client_ip_;
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_PTWUserLoginReq::set_allocated_client_ip(::std::string* client_ip) {
  if (client_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete client_ip_;
  }
  if (client_ip) {
    set_has_client_ip();
    client_ip_ = client_ip;
  } else {
    clear_has_client_ip();
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_login.Proto_UserLoginExternalData ext_data = 5;
inline bool Proto_PTWUserLoginReq::has_ext_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_PTWUserLoginReq::set_has_ext_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_PTWUserLoginReq::clear_has_ext_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_PTWUserLoginReq::clear_ext_data() {
  if (ext_data_ != NULL) ext_data_->::proto_login::Proto_UserLoginExternalData::Clear();
  clear_has_ext_data();
}
inline const ::proto_login::Proto_UserLoginExternalData& Proto_PTWUserLoginReq::ext_data() const {
  return ext_data_ != NULL ? *ext_data_ : *default_instance_->ext_data_;
}
inline ::proto_login::Proto_UserLoginExternalData* Proto_PTWUserLoginReq::mutable_ext_data() {
  set_has_ext_data();
  if (ext_data_ == NULL) ext_data_ = new ::proto_login::Proto_UserLoginExternalData;
  return ext_data_;
}
inline ::proto_login::Proto_UserLoginExternalData* Proto_PTWUserLoginReq::release_ext_data() {
  clear_has_ext_data();
  ::proto_login::Proto_UserLoginExternalData* temp = ext_data_;
  ext_data_ = NULL;
  return temp;
}
inline void Proto_PTWUserLoginReq::set_allocated_ext_data(::proto_login::Proto_UserLoginExternalData* ext_data) {
  delete ext_data_;
  ext_data_ = ext_data;
  if (ext_data) {
    set_has_ext_data();
  } else {
    clear_has_ext_data();
  }
}

// -------------------------------------------------------------------

// Proto_WTPPlayerLoginRsp

// optional int32 result = 1;
inline bool Proto_WTPPlayerLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_WTPPlayerLoginRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_WTPPlayerLoginRsp::result() const {
  return result_;
}
inline void Proto_WTPPlayerLoginRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_WTPPlayerLoginRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_WTPPlayerLoginRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_WTPPlayerLoginRsp::user_id() const {
  return user_id_;
}
inline void Proto_WTPPlayerLoginRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 game_id = 3;
inline bool Proto_WTPPlayerLoginRsp::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_WTPPlayerLoginRsp::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 Proto_WTPPlayerLoginRsp::game_id() const {
  return game_id_;
}
inline void Proto_WTPPlayerLoginRsp::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 4;
inline bool Proto_WTPPlayerLoginRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_WTPPlayerLoginRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 Proto_WTPPlayerLoginRsp::room_id() const {
  return room_id_;
}
inline void Proto_WTPPlayerLoginRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 5;
inline bool Proto_WTPPlayerLoginRsp::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_WTPPlayerLoginRsp::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 Proto_WTPPlayerLoginRsp::game_bus_id() const {
  return game_bus_id_;
}
inline void Proto_WTPPlayerLoginRsp::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint32 logic_bus_id = 6;
inline bool Proto_WTPPlayerLoginRsp::has_logic_bus_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_logic_bus_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_logic_bus_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_WTPPlayerLoginRsp::clear_logic_bus_id() {
  logic_bus_id_ = 0u;
  clear_has_logic_bus_id();
}
inline ::google::protobuf::uint32 Proto_WTPPlayerLoginRsp::logic_bus_id() const {
  return logic_bus_id_;
}
inline void Proto_WTPPlayerLoginRsp::set_logic_bus_id(::google::protobuf::uint32 value) {
  set_has_logic_bus_id();
  logic_bus_id_ = value;
}

// optional .proto_login.Proto_UserDetailCommonData detail_data = 7;
inline bool Proto_WTPPlayerLoginRsp::has_detail_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_detail_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_detail_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto_WTPPlayerLoginRsp::clear_detail_data() {
  if (detail_data_ != NULL) detail_data_->::proto_login::Proto_UserDetailCommonData::Clear();
  clear_has_detail_data();
}
inline const ::proto_login::Proto_UserDetailCommonData& Proto_WTPPlayerLoginRsp::detail_data() const {
  return detail_data_ != NULL ? *detail_data_ : *default_instance_->detail_data_;
}
inline ::proto_login::Proto_UserDetailCommonData* Proto_WTPPlayerLoginRsp::mutable_detail_data() {
  set_has_detail_data();
  if (detail_data_ == NULL) detail_data_ = new ::proto_login::Proto_UserDetailCommonData;
  return detail_data_;
}
inline ::proto_login::Proto_UserDetailCommonData* Proto_WTPPlayerLoginRsp::release_detail_data() {
  clear_has_detail_data();
  ::proto_login::Proto_UserDetailCommonData* temp = detail_data_;
  detail_data_ = NULL;
  return temp;
}
inline void Proto_WTPPlayerLoginRsp::set_allocated_detail_data(::proto_login::Proto_UserDetailCommonData* detail_data) {
  delete detail_data_;
  detail_data_ = detail_data;
  if (detail_data) {
    set_has_detail_data();
  } else {
    clear_has_detail_data();
  }
}

// -------------------------------------------------------------------

// Proto_WorldToLogicLoginReq

// optional uint64 user_id = 1;
inline bool Proto_WorldToLogicLoginReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_WorldToLogicLoginReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_WorldToLogicLoginReq::user_id() const {
  return user_id_;
}
inline void Proto_WorldToLogicLoginReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 game_id = 2;
inline bool Proto_WorldToLogicLoginReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_WorldToLogicLoginReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 Proto_WorldToLogicLoginReq::game_id() const {
  return game_id_;
}
inline void Proto_WorldToLogicLoginReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool Proto_WorldToLogicLoginReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_WorldToLogicLoginReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 Proto_WorldToLogicLoginReq::room_id() const {
  return room_id_;
}
inline void Proto_WorldToLogicLoginReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 4;
inline bool Proto_WorldToLogicLoginReq::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_WorldToLogicLoginReq::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 Proto_WorldToLogicLoginReq::game_bus_id() const {
  return game_bus_id_;
}
inline void Proto_WorldToLogicLoginReq::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint32 proxy_bus_id = 5;
inline bool Proto_WorldToLogicLoginReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_WorldToLogicLoginReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 Proto_WorldToLogicLoginReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void Proto_WorldToLogicLoginReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// optional .proto_login.Proto_UserLoginExternalData ext_data = 6;
inline bool Proto_WorldToLogicLoginReq::has_ext_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_ext_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_ext_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_WorldToLogicLoginReq::clear_ext_data() {
  if (ext_data_ != NULL) ext_data_->::proto_login::Proto_UserLoginExternalData::Clear();
  clear_has_ext_data();
}
inline const ::proto_login::Proto_UserLoginExternalData& Proto_WorldToLogicLoginReq::ext_data() const {
  return ext_data_ != NULL ? *ext_data_ : *default_instance_->ext_data_;
}
inline ::proto_login::Proto_UserLoginExternalData* Proto_WorldToLogicLoginReq::mutable_ext_data() {
  set_has_ext_data();
  if (ext_data_ == NULL) ext_data_ = new ::proto_login::Proto_UserLoginExternalData;
  return ext_data_;
}
inline ::proto_login::Proto_UserLoginExternalData* Proto_WorldToLogicLoginReq::release_ext_data() {
  clear_has_ext_data();
  ::proto_login::Proto_UserLoginExternalData* temp = ext_data_;
  ext_data_ = NULL;
  return temp;
}
inline void Proto_WorldToLogicLoginReq::set_allocated_ext_data(::proto_login::Proto_UserLoginExternalData* ext_data) {
  delete ext_data_;
  ext_data_ = ext_data;
  if (ext_data) {
    set_has_ext_data();
  } else {
    clear_has_ext_data();
  }
}

// optional string client_ip = 7;
inline bool Proto_WorldToLogicLoginReq::has_client_ip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_client_ip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_client_ip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto_WorldToLogicLoginReq::clear_client_ip() {
  if (client_ip_ != &::google::protobuf::internal::kEmptyString) {
    client_ip_->clear();
  }
  clear_has_client_ip();
}
inline const ::std::string& Proto_WorldToLogicLoginReq::client_ip() const {
  return *client_ip_;
}
inline void Proto_WorldToLogicLoginReq::set_client_ip(const ::std::string& value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
}
inline void Proto_WorldToLogicLoginReq::set_client_ip(const char* value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
}
inline void Proto_WorldToLogicLoginReq::set_client_ip(const char* value, size_t size) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_WorldToLogicLoginReq::mutable_client_ip() {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  return client_ip_;
}
inline ::std::string* Proto_WorldToLogicLoginReq::release_client_ip() {
  clear_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = client_ip_;
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_WorldToLogicLoginReq::set_allocated_client_ip(::std::string* client_ip) {
  if (client_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete client_ip_;
  }
  if (client_ip) {
    set_has_client_ip();
    client_ip_ = client_ip;
  } else {
    clear_has_client_ip();
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_LogicToWorldLoginRsp

// optional uint32 result = 1;
inline bool Proto_LogicToWorldLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LogicToWorldLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LogicToWorldLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LogicToWorldLoginRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 Proto_LogicToWorldLoginRsp::result() const {
  return result_;
}
inline void Proto_LogicToWorldLoginRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_LogicToWorldLoginRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_LogicToWorldLoginRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_LogicToWorldLoginRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_LogicToWorldLoginRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_LogicToWorldLoginRsp::user_id() const {
  return user_id_;
}
inline void Proto_LogicToWorldLoginRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional .proto_login.Proto_UserDetailCommonData detail_data = 3;
inline bool Proto_LogicToWorldLoginRsp::has_detail_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_LogicToWorldLoginRsp::set_has_detail_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_LogicToWorldLoginRsp::clear_has_detail_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_LogicToWorldLoginRsp::clear_detail_data() {
  if (detail_data_ != NULL) detail_data_->::proto_login::Proto_UserDetailCommonData::Clear();
  clear_has_detail_data();
}
inline const ::proto_login::Proto_UserDetailCommonData& Proto_LogicToWorldLoginRsp::detail_data() const {
  return detail_data_ != NULL ? *detail_data_ : *default_instance_->detail_data_;
}
inline ::proto_login::Proto_UserDetailCommonData* Proto_LogicToWorldLoginRsp::mutable_detail_data() {
  set_has_detail_data();
  if (detail_data_ == NULL) detail_data_ = new ::proto_login::Proto_UserDetailCommonData;
  return detail_data_;
}
inline ::proto_login::Proto_UserDetailCommonData* Proto_LogicToWorldLoginRsp::release_detail_data() {
  clear_has_detail_data();
  ::proto_login::Proto_UserDetailCommonData* temp = detail_data_;
  detail_data_ = NULL;
  return temp;
}
inline void Proto_LogicToWorldLoginRsp::set_allocated_detail_data(::proto_login::Proto_UserDetailCommonData* detail_data) {
  delete detail_data_;
  detail_data_ = detail_data;
  if (detail_data) {
    set_has_detail_data();
  } else {
    clear_has_detail_data();
  }
}

// -------------------------------------------------------------------

// NotifyPlayerDisconnect

// optional uint64 player_id = 1;
inline bool NotifyPlayerDisconnect::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyPlayerDisconnect::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyPlayerDisconnect::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyPlayerDisconnect::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 NotifyPlayerDisconnect::player_id() const {
  return player_id_;
}
inline void NotifyPlayerDisconnect::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// NotifyPlayerReconnectReq

// optional uint64 player_id = 1;
inline bool NotifyPlayerReconnectReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyPlayerReconnectReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyPlayerReconnectReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyPlayerReconnectReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 NotifyPlayerReconnectReq::player_id() const {
  return player_id_;
}
inline void NotifyPlayerReconnectReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 proxy_bus_id = 2;
inline bool NotifyPlayerReconnectReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyPlayerReconnectReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyPlayerReconnectReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyPlayerReconnectReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 NotifyPlayerReconnectReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void NotifyPlayerReconnectReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// -------------------------------------------------------------------

// NotifyPlayerReconnctRsp

// optional int32 result = 1;
inline bool NotifyPlayerReconnctRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyPlayerReconnctRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyPlayerReconnctRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyPlayerReconnctRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 NotifyPlayerReconnctRsp::result() const {
  return result_;
}
inline void NotifyPlayerReconnctRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 player_id = 2;
inline bool NotifyPlayerReconnctRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyPlayerReconnctRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyPlayerReconnctRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyPlayerReconnctRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 NotifyPlayerReconnctRsp::player_id() const {
  return player_id_;
}
inline void NotifyPlayerReconnctRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 game_id = 3;
inline bool NotifyPlayerReconnctRsp::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyPlayerReconnctRsp::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyPlayerReconnctRsp::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyPlayerReconnctRsp::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 NotifyPlayerReconnctRsp::game_id() const {
  return game_id_;
}
inline void NotifyPlayerReconnctRsp::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 4;
inline bool NotifyPlayerReconnctRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyPlayerReconnctRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyPlayerReconnctRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyPlayerReconnctRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 NotifyPlayerReconnctRsp::room_id() const {
  return room_id_;
}
inline void NotifyPlayerReconnctRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 5;
inline bool NotifyPlayerReconnctRsp::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyPlayerReconnctRsp::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyPlayerReconnctRsp::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyPlayerReconnctRsp::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 NotifyPlayerReconnctRsp::game_bus_id() const {
  return game_bus_id_;
}
inline void NotifyPlayerReconnctRsp::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint32 logic_bus_id = 6;
inline bool NotifyPlayerReconnctRsp::has_logic_bus_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyPlayerReconnctRsp::set_has_logic_bus_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyPlayerReconnctRsp::clear_has_logic_bus_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyPlayerReconnctRsp::clear_logic_bus_id() {
  logic_bus_id_ = 0u;
  clear_has_logic_bus_id();
}
inline ::google::protobuf::uint32 NotifyPlayerReconnctRsp::logic_bus_id() const {
  return logic_bus_id_;
}
inline void NotifyPlayerReconnctRsp::set_logic_bus_id(::google::protobuf::uint32 value) {
  set_has_logic_bus_id();
  logic_bus_id_ = value;
}

// -------------------------------------------------------------------

// WTLNotifyPlayerReconnectReq

// optional uint64 player_id = 1;
inline bool WTLNotifyPlayerReconnectReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WTLNotifyPlayerReconnectReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WTLNotifyPlayerReconnectReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WTLNotifyPlayerReconnectReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 WTLNotifyPlayerReconnectReq::player_id() const {
  return player_id_;
}
inline void WTLNotifyPlayerReconnectReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 game_id = 2;
inline bool WTLNotifyPlayerReconnectReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WTLNotifyPlayerReconnectReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WTLNotifyPlayerReconnectReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WTLNotifyPlayerReconnectReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 WTLNotifyPlayerReconnectReq::game_id() const {
  return game_id_;
}
inline void WTLNotifyPlayerReconnectReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool WTLNotifyPlayerReconnectReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WTLNotifyPlayerReconnectReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WTLNotifyPlayerReconnectReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WTLNotifyPlayerReconnectReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 WTLNotifyPlayerReconnectReq::room_id() const {
  return room_id_;
}
inline void WTLNotifyPlayerReconnectReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 4;
inline bool WTLNotifyPlayerReconnectReq::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WTLNotifyPlayerReconnectReq::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WTLNotifyPlayerReconnectReq::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WTLNotifyPlayerReconnectReq::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 WTLNotifyPlayerReconnectReq::game_bus_id() const {
  return game_bus_id_;
}
inline void WTLNotifyPlayerReconnectReq::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint32 proxy_bus_id = 6;
inline bool WTLNotifyPlayerReconnectReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WTLNotifyPlayerReconnectReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WTLNotifyPlayerReconnectReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WTLNotifyPlayerReconnectReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 WTLNotifyPlayerReconnectReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void WTLNotifyPlayerReconnectReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// -------------------------------------------------------------------

// LTWNotifyPlayerReconnectRsp

// optional int32 result = 1;
inline bool LTWNotifyPlayerReconnectRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTWNotifyPlayerReconnectRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTWNotifyPlayerReconnectRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTWNotifyPlayerReconnectRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LTWNotifyPlayerReconnectRsp::result() const {
  return result_;
}
inline void LTWNotifyPlayerReconnectRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 player_id = 2;
inline bool LTWNotifyPlayerReconnectRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTWNotifyPlayerReconnectRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTWNotifyPlayerReconnectRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTWNotifyPlayerReconnectRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 LTWNotifyPlayerReconnectRsp::player_id() const {
  return player_id_;
}
inline void LTWNotifyPlayerReconnectRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// WTGNotifyPlayerReconnectReq

// optional uint64 player_id = 1;
inline bool WTGNotifyPlayerReconnectReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WTGNotifyPlayerReconnectReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WTGNotifyPlayerReconnectReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WTGNotifyPlayerReconnectReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 WTGNotifyPlayerReconnectReq::player_id() const {
  return player_id_;
}
inline void WTGNotifyPlayerReconnectReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 proxy_bus_id = 2;
inline bool WTGNotifyPlayerReconnectReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WTGNotifyPlayerReconnectReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WTGNotifyPlayerReconnectReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WTGNotifyPlayerReconnectReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 WTGNotifyPlayerReconnectReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void WTGNotifyPlayerReconnectReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// optional uint32 logic_bus_id = 3;
inline bool WTGNotifyPlayerReconnectReq::has_logic_bus_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WTGNotifyPlayerReconnectReq::set_has_logic_bus_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WTGNotifyPlayerReconnectReq::clear_has_logic_bus_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WTGNotifyPlayerReconnectReq::clear_logic_bus_id() {
  logic_bus_id_ = 0u;
  clear_has_logic_bus_id();
}
inline ::google::protobuf::uint32 WTGNotifyPlayerReconnectReq::logic_bus_id() const {
  return logic_bus_id_;
}
inline void WTGNotifyPlayerReconnectReq::set_logic_bus_id(::google::protobuf::uint32 value) {
  set_has_logic_bus_id();
  logic_bus_id_ = value;
}

// -------------------------------------------------------------------

// GTWNotifyPlayerReconnectRsp

// optional int32 result = 1;
inline bool GTWNotifyPlayerReconnectRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTWNotifyPlayerReconnectRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTWNotifyPlayerReconnectRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTWNotifyPlayerReconnectRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GTWNotifyPlayerReconnectRsp::result() const {
  return result_;
}
inline void GTWNotifyPlayerReconnectRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 player_id = 2;
inline bool GTWNotifyPlayerReconnectRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTWNotifyPlayerReconnectRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTWNotifyPlayerReconnectRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTWNotifyPlayerReconnectRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 GTWNotifyPlayerReconnectRsp::player_id() const {
  return player_id_;
}
inline void GTWNotifyPlayerReconnectRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// LTSNotifyPlayerReconnectReq

// optional uint64 player_id = 1;
inline bool LTSNotifyPlayerReconnectReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTSNotifyPlayerReconnectReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTSNotifyPlayerReconnectReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTSNotifyPlayerReconnectReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 LTSNotifyPlayerReconnectReq::player_id() const {
  return player_id_;
}
inline void LTSNotifyPlayerReconnectReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 logic_bus_id = 2;
inline bool LTSNotifyPlayerReconnectReq::has_logic_bus_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTSNotifyPlayerReconnectReq::set_has_logic_bus_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTSNotifyPlayerReconnectReq::clear_has_logic_bus_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTSNotifyPlayerReconnectReq::clear_logic_bus_id() {
  logic_bus_id_ = 0u;
  clear_has_logic_bus_id();
}
inline ::google::protobuf::uint32 LTSNotifyPlayerReconnectReq::logic_bus_id() const {
  return logic_bus_id_;
}
inline void LTSNotifyPlayerReconnectReq::set_logic_bus_id(::google::protobuf::uint32 value) {
  set_has_logic_bus_id();
  logic_bus_id_ = value;
}

// optional uint32 game_bus_id = 3;
inline bool LTSNotifyPlayerReconnectReq::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LTSNotifyPlayerReconnectReq::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LTSNotifyPlayerReconnectReq::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LTSNotifyPlayerReconnectReq::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 LTSNotifyPlayerReconnectReq::game_bus_id() const {
  return game_bus_id_;
}
inline void LTSNotifyPlayerReconnectReq::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint64 last_login_time = 4;
inline bool LTSNotifyPlayerReconnectReq::has_last_login_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LTSNotifyPlayerReconnectReq::set_has_last_login_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LTSNotifyPlayerReconnectReq::clear_has_last_login_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LTSNotifyPlayerReconnectReq::clear_last_login_time() {
  last_login_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_login_time();
}
inline ::google::protobuf::uint64 LTSNotifyPlayerReconnectReq::last_login_time() const {
  return last_login_time_;
}
inline void LTSNotifyPlayerReconnectReq::set_last_login_time(::google::protobuf::uint64 value) {
  set_has_last_login_time();
  last_login_time_ = value;
}

// optional uint64 last_logout_time = 5;
inline bool LTSNotifyPlayerReconnectReq::has_last_logout_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LTSNotifyPlayerReconnectReq::set_has_last_logout_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LTSNotifyPlayerReconnectReq::clear_has_last_logout_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LTSNotifyPlayerReconnectReq::clear_last_logout_time() {
  last_logout_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_logout_time();
}
inline ::google::protobuf::uint64 LTSNotifyPlayerReconnectReq::last_logout_time() const {
  return last_logout_time_;
}
inline void LTSNotifyPlayerReconnectReq::set_last_logout_time(::google::protobuf::uint64 value) {
  set_has_last_logout_time();
  last_logout_time_ = value;
}

// optional .proto_ff.UserSimpleData simple_data = 6;
inline bool LTSNotifyPlayerReconnectReq::has_simple_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LTSNotifyPlayerReconnectReq::set_has_simple_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LTSNotifyPlayerReconnectReq::clear_has_simple_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LTSNotifyPlayerReconnectReq::clear_simple_data() {
  if (simple_data_ != NULL) simple_data_->::proto_ff::UserSimpleData::Clear();
  clear_has_simple_data();
}
inline const ::proto_ff::UserSimpleData& LTSNotifyPlayerReconnectReq::simple_data() const {
  return simple_data_ != NULL ? *simple_data_ : *default_instance_->simple_data_;
}
inline ::proto_ff::UserSimpleData* LTSNotifyPlayerReconnectReq::mutable_simple_data() {
  set_has_simple_data();
  if (simple_data_ == NULL) simple_data_ = new ::proto_ff::UserSimpleData;
  return simple_data_;
}
inline ::proto_ff::UserSimpleData* LTSNotifyPlayerReconnectReq::release_simple_data() {
  clear_has_simple_data();
  ::proto_ff::UserSimpleData* temp = simple_data_;
  simple_data_ = NULL;
  return temp;
}
inline void LTSNotifyPlayerReconnectReq::set_allocated_simple_data(::proto_ff::UserSimpleData* simple_data) {
  delete simple_data_;
  simple_data_ = simple_data;
  if (simple_data) {
    set_has_simple_data();
  } else {
    clear_has_simple_data();
  }
}

// -------------------------------------------------------------------

// Proto_WorldToLogicLogoutReq

// optional uint64 player_id = 1;
inline bool Proto_WorldToLogicLogoutReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_WorldToLogicLogoutReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_WorldToLogicLogoutReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_WorldToLogicLogoutReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_WorldToLogicLogoutReq::player_id() const {
  return player_id_;
}
inline void Proto_WorldToLogicLogoutReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// Proto_LogicToWorldLogoutRsp

// optional uint64 player_id = 1;
inline bool Proto_LogicToWorldLogoutRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LogicToWorldLogoutRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LogicToWorldLogoutRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LogicToWorldLogoutRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_LogicToWorldLogoutRsp::player_id() const {
  return player_id_;
}
inline void Proto_LogicToWorldLogoutRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 result = 2;
inline bool Proto_LogicToWorldLogoutRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_LogicToWorldLogoutRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_LogicToWorldLogoutRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_LogicToWorldLogoutRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 Proto_LogicToWorldLogoutRsp::result() const {
  return result_;
}
inline void Proto_LogicToWorldLogoutRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Proto_LogicToSnsLoginReq

// optional uint64 player_id = 1;
inline bool Proto_LogicToSnsLoginReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LogicToSnsLoginReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LogicToSnsLoginReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LogicToSnsLoginReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_LogicToSnsLoginReq::player_id() const {
  return player_id_;
}
inline void Proto_LogicToSnsLoginReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 logic_bus_id = 2;
inline bool Proto_LogicToSnsLoginReq::has_logic_bus_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_LogicToSnsLoginReq::set_has_logic_bus_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_LogicToSnsLoginReq::clear_has_logic_bus_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_LogicToSnsLoginReq::clear_logic_bus_id() {
  logic_bus_id_ = 0u;
  clear_has_logic_bus_id();
}
inline ::google::protobuf::uint32 Proto_LogicToSnsLoginReq::logic_bus_id() const {
  return logic_bus_id_;
}
inline void Proto_LogicToSnsLoginReq::set_logic_bus_id(::google::protobuf::uint32 value) {
  set_has_logic_bus_id();
  logic_bus_id_ = value;
}

// optional uint32 game_bus_id = 3;
inline bool Proto_LogicToSnsLoginReq::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_LogicToSnsLoginReq::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_LogicToSnsLoginReq::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_LogicToSnsLoginReq::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 Proto_LogicToSnsLoginReq::game_bus_id() const {
  return game_bus_id_;
}
inline void Proto_LogicToSnsLoginReq::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint64 last_login_time = 4;
inline bool Proto_LogicToSnsLoginReq::has_last_login_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_LogicToSnsLoginReq::set_has_last_login_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_LogicToSnsLoginReq::clear_has_last_login_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_LogicToSnsLoginReq::clear_last_login_time() {
  last_login_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_login_time();
}
inline ::google::protobuf::uint64 Proto_LogicToSnsLoginReq::last_login_time() const {
  return last_login_time_;
}
inline void Proto_LogicToSnsLoginReq::set_last_login_time(::google::protobuf::uint64 value) {
  set_has_last_login_time();
  last_login_time_ = value;
}

// optional uint64 last_logout_time = 5;
inline bool Proto_LogicToSnsLoginReq::has_last_logout_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_LogicToSnsLoginReq::set_has_last_logout_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_LogicToSnsLoginReq::clear_has_last_logout_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_LogicToSnsLoginReq::clear_last_logout_time() {
  last_logout_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_logout_time();
}
inline ::google::protobuf::uint64 Proto_LogicToSnsLoginReq::last_logout_time() const {
  return last_logout_time_;
}
inline void Proto_LogicToSnsLoginReq::set_last_logout_time(::google::protobuf::uint64 value) {
  set_has_last_logout_time();
  last_logout_time_ = value;
}

// optional .proto_ff.UserSimpleData simple_data = 6;
inline bool Proto_LogicToSnsLoginReq::has_simple_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_LogicToSnsLoginReq::set_has_simple_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_LogicToSnsLoginReq::clear_has_simple_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_LogicToSnsLoginReq::clear_simple_data() {
  if (simple_data_ != NULL) simple_data_->::proto_ff::UserSimpleData::Clear();
  clear_has_simple_data();
}
inline const ::proto_ff::UserSimpleData& Proto_LogicToSnsLoginReq::simple_data() const {
  return simple_data_ != NULL ? *simple_data_ : *default_instance_->simple_data_;
}
inline ::proto_ff::UserSimpleData* Proto_LogicToSnsLoginReq::mutable_simple_data() {
  set_has_simple_data();
  if (simple_data_ == NULL) simple_data_ = new ::proto_ff::UserSimpleData;
  return simple_data_;
}
inline ::proto_ff::UserSimpleData* Proto_LogicToSnsLoginReq::release_simple_data() {
  clear_has_simple_data();
  ::proto_ff::UserSimpleData* temp = simple_data_;
  simple_data_ = NULL;
  return temp;
}
inline void Proto_LogicToSnsLoginReq::set_allocated_simple_data(::proto_ff::UserSimpleData* simple_data) {
  delete simple_data_;
  simple_data_ = simple_data;
  if (simple_data) {
    set_has_simple_data();
  } else {
    clear_has_simple_data();
  }
}

// -------------------------------------------------------------------

// Proto_SnsToLogicLoginRsp

// optional uint64 player_id = 1;
inline bool Proto_SnsToLogicLoginRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SnsToLogicLoginRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SnsToLogicLoginRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SnsToLogicLoginRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_SnsToLogicLoginRsp::player_id() const {
  return player_id_;
}
inline void Proto_SnsToLogicLoginRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 result = 2;
inline bool Proto_SnsToLogicLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SnsToLogicLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SnsToLogicLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SnsToLogicLoginRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 Proto_SnsToLogicLoginRsp::result() const {
  return result_;
}
inline void Proto_SnsToLogicLoginRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Proto_LogicToSnsLogoutReq

// optional uint64 player_id = 1;
inline bool Proto_LogicToSnsLogoutReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LogicToSnsLogoutReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LogicToSnsLogoutReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LogicToSnsLogoutReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_LogicToSnsLogoutReq::player_id() const {
  return player_id_;
}
inline void Proto_LogicToSnsLogoutReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 logic_svr_id = 2;
inline bool Proto_LogicToSnsLogoutReq::has_logic_svr_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_LogicToSnsLogoutReq::set_has_logic_svr_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_LogicToSnsLogoutReq::clear_has_logic_svr_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_LogicToSnsLogoutReq::clear_logic_svr_id() {
  logic_svr_id_ = 0u;
  clear_has_logic_svr_id();
}
inline ::google::protobuf::uint32 Proto_LogicToSnsLogoutReq::logic_svr_id() const {
  return logic_svr_id_;
}
inline void Proto_LogicToSnsLogoutReq::set_logic_svr_id(::google::protobuf::uint32 value) {
  set_has_logic_svr_id();
  logic_svr_id_ = value;
}

// -------------------------------------------------------------------

// Proto_SnsToLogicLogoutRsp

// optional uint64 player_id = 1;
inline bool Proto_SnsToLogicLogoutRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SnsToLogicLogoutRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SnsToLogicLogoutRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SnsToLogicLogoutRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_SnsToLogicLogoutRsp::player_id() const {
  return player_id_;
}
inline void Proto_SnsToLogicLogoutRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 result = 2;
inline bool Proto_SnsToLogicLogoutRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SnsToLogicLogoutRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SnsToLogicLogoutRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SnsToLogicLogoutRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 Proto_SnsToLogicLogoutRsp::result() const {
  return result_;
}
inline void Proto_SnsToLogicLogoutRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Proto_LogicToWorldLogoutReq

// optional uint64 player_id = 1;
inline bool Proto_LogicToWorldLogoutReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LogicToWorldLogoutReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LogicToWorldLogoutReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LogicToWorldLogoutReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_LogicToWorldLogoutReq::player_id() const {
  return player_id_;
}
inline void Proto_LogicToWorldLogoutReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// LTWebPhoneAuthCodeReq

// optional uint64 phone_num = 1;
inline bool LTWebPhoneAuthCodeReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTWebPhoneAuthCodeReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTWebPhoneAuthCodeReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTWebPhoneAuthCodeReq::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 LTWebPhoneAuthCodeReq::phone_num() const {
  return phone_num_;
}
inline void LTWebPhoneAuthCodeReq::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional uint32 code_type = 2;
inline bool LTWebPhoneAuthCodeReq::has_code_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTWebPhoneAuthCodeReq::set_has_code_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTWebPhoneAuthCodeReq::clear_has_code_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTWebPhoneAuthCodeReq::clear_code_type() {
  code_type_ = 0u;
  clear_has_code_type();
}
inline ::google::protobuf::uint32 LTWebPhoneAuthCodeReq::code_type() const {
  return code_type_;
}
inline void LTWebPhoneAuthCodeReq::set_code_type(::google::protobuf::uint32 value) {
  set_has_code_type();
  code_type_ = value;
}

// -------------------------------------------------------------------

// WebTLPhoneAuthCodeRsp

// optional int32 result = 1;
inline bool WebTLPhoneAuthCodeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebTLPhoneAuthCodeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebTLPhoneAuthCodeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebTLPhoneAuthCodeRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 WebTLPhoneAuthCodeRsp::result() const {
  return result_;
}
inline void WebTLPhoneAuthCodeRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 phone_num = 2;
inline bool WebTLPhoneAuthCodeRsp::has_phone_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebTLPhoneAuthCodeRsp::set_has_phone_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebTLPhoneAuthCodeRsp::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebTLPhoneAuthCodeRsp::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 WebTLPhoneAuthCodeRsp::phone_num() const {
  return phone_num_;
}
inline void WebTLPhoneAuthCodeRsp::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional string msg = 3;
inline bool WebTLPhoneAuthCodeRsp::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebTLPhoneAuthCodeRsp::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebTLPhoneAuthCodeRsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebTLPhoneAuthCodeRsp::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& WebTLPhoneAuthCodeRsp::msg() const {
  return *msg_;
}
inline void WebTLPhoneAuthCodeRsp::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void WebTLPhoneAuthCodeRsp::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void WebTLPhoneAuthCodeRsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WebTLPhoneAuthCodeRsp::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* WebTLPhoneAuthCodeRsp::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WebTLPhoneAuthCodeRsp::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LTWebPhoneCheckCodeReq

// optional uint64 phone_num = 1;
inline bool LTWebPhoneCheckCodeReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTWebPhoneCheckCodeReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTWebPhoneCheckCodeReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTWebPhoneCheckCodeReq::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 LTWebPhoneCheckCodeReq::phone_num() const {
  return phone_num_;
}
inline void LTWebPhoneCheckCodeReq::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional uint32 code = 2;
inline bool LTWebPhoneCheckCodeReq::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTWebPhoneCheckCodeReq::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTWebPhoneCheckCodeReq::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTWebPhoneCheckCodeReq::clear_code() {
  code_ = 0u;
  clear_has_code();
}
inline ::google::protobuf::uint32 LTWebPhoneCheckCodeReq::code() const {
  return code_;
}
inline void LTWebPhoneCheckCodeReq::set_code(::google::protobuf::uint32 value) {
  set_has_code();
  code_ = value;
}

// optional uint32 code_type = 3;
inline bool LTWebPhoneCheckCodeReq::has_code_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LTWebPhoneCheckCodeReq::set_has_code_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LTWebPhoneCheckCodeReq::clear_has_code_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LTWebPhoneCheckCodeReq::clear_code_type() {
  code_type_ = 0u;
  clear_has_code_type();
}
inline ::google::protobuf::uint32 LTWebPhoneCheckCodeReq::code_type() const {
  return code_type_;
}
inline void LTWebPhoneCheckCodeReq::set_code_type(::google::protobuf::uint32 value) {
  set_has_code_type();
  code_type_ = value;
}

// -------------------------------------------------------------------

// WebTLPhoneCheckCodeRsp

// optional int32 result = 1;
inline bool WebTLPhoneCheckCodeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebTLPhoneCheckCodeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebTLPhoneCheckCodeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebTLPhoneCheckCodeRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 WebTLPhoneCheckCodeRsp::result() const {
  return result_;
}
inline void WebTLPhoneCheckCodeRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 phone_num = 2;
inline bool WebTLPhoneCheckCodeRsp::has_phone_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebTLPhoneCheckCodeRsp::set_has_phone_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebTLPhoneCheckCodeRsp::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebTLPhoneCheckCodeRsp::clear_phone_num() {
  phone_num_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_num();
}
inline ::google::protobuf::uint64 WebTLPhoneCheckCodeRsp::phone_num() const {
  return phone_num_;
}
inline void WebTLPhoneCheckCodeRsp::set_phone_num(::google::protobuf::uint64 value) {
  set_has_phone_num();
  phone_num_ = value;
}

// optional string msg = 3;
inline bool WebTLPhoneCheckCodeRsp::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebTLPhoneCheckCodeRsp::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebTLPhoneCheckCodeRsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebTLPhoneCheckCodeRsp::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& WebTLPhoneCheckCodeRsp::msg() const {
  return *msg_;
}
inline void WebTLPhoneCheckCodeRsp::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void WebTLPhoneCheckCodeRsp::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void WebTLPhoneCheckCodeRsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WebTLPhoneCheckCodeRsp::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* WebTLPhoneCheckCodeRsp::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WebTLPhoneCheckCodeRsp::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// WebPhoneCodeRetMsg

// optional int32 code = 1;
inline bool WebPhoneCodeRetMsg::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebPhoneCodeRetMsg::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebPhoneCodeRetMsg::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebPhoneCodeRetMsg::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 WebPhoneCodeRetMsg::code() const {
  return code_;
}
inline void WebPhoneCodeRetMsg::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional string msg = 2;
inline bool WebPhoneCodeRetMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebPhoneCodeRetMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebPhoneCodeRetMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebPhoneCodeRetMsg::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& WebPhoneCodeRetMsg::msg() const {
  return *msg_;
}
inline void WebPhoneCodeRetMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void WebPhoneCodeRetMsg::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void WebPhoneCodeRetMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WebPhoneCodeRetMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* WebPhoneCodeRetMsg::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WebPhoneCodeRetMsg::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 time = 3;
inline bool WebPhoneCodeRetMsg::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebPhoneCodeRetMsg::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebPhoneCodeRetMsg::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebPhoneCodeRetMsg::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 WebPhoneCodeRetMsg::time() const {
  return time_;
}
inline void WebPhoneCodeRetMsg::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// LTSnsChangeFaceNotify

// optional uint64 user_id = 1;
inline bool LTSnsChangeFaceNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTSnsChangeFaceNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTSnsChangeFaceNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTSnsChangeFaceNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 LTSnsChangeFaceNotify::user_id() const {
  return user_id_;
}
inline void LTSnsChangeFaceNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 face_id = 2;
inline bool LTSnsChangeFaceNotify::has_face_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTSnsChangeFaceNotify::set_has_face_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTSnsChangeFaceNotify::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTSnsChangeFaceNotify::clear_face_id() {
  face_id_ = 0u;
  clear_has_face_id();
}
inline ::google::protobuf::uint32 LTSnsChangeFaceNotify::face_id() const {
  return face_id_;
}
inline void LTSnsChangeFaceNotify::set_face_id(::google::protobuf::uint32 value) {
  set_has_face_id();
  face_id_ = value;
}

// -------------------------------------------------------------------

// LTSnsChangeNickNameNotify

// optional uint64 user_id = 1;
inline bool LTSnsChangeNickNameNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTSnsChangeNickNameNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTSnsChangeNickNameNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTSnsChangeNickNameNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 LTSnsChangeNickNameNotify::user_id() const {
  return user_id_;
}
inline void LTSnsChangeNickNameNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional string nick_name = 2;
inline bool LTSnsChangeNickNameNotify::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTSnsChangeNickNameNotify::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTSnsChangeNickNameNotify::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTSnsChangeNickNameNotify::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& LTSnsChangeNickNameNotify::nick_name() const {
  return *nick_name_;
}
inline void LTSnsChangeNickNameNotify::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void LTSnsChangeNickNameNotify::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void LTSnsChangeNickNameNotify::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LTSnsChangeNickNameNotify::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* LTSnsChangeNickNameNotify::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LTSnsChangeNickNameNotify::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LTSnsChangeVipLevelNotify

// optional uint64 user_id = 1;
inline bool LTSnsChangeVipLevelNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTSnsChangeVipLevelNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTSnsChangeVipLevelNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTSnsChangeVipLevelNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 LTSnsChangeVipLevelNotify::user_id() const {
  return user_id_;
}
inline void LTSnsChangeVipLevelNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 vip_level = 3;
inline bool LTSnsChangeVipLevelNotify::has_vip_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTSnsChangeVipLevelNotify::set_has_vip_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTSnsChangeVipLevelNotify::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTSnsChangeVipLevelNotify::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 LTSnsChangeVipLevelNotify::vip_level() const {
  return vip_level_;
}
inline void LTSnsChangeVipLevelNotify::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// -------------------------------------------------------------------

// LTSnsChangeUserIdNotify

// optional uint64 user_id = 1;
inline bool LTSnsChangeUserIdNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTSnsChangeUserIdNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTSnsChangeUserIdNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTSnsChangeUserIdNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 LTSnsChangeUserIdNotify::user_id() const {
  return user_id_;
}
inline void LTSnsChangeUserIdNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint64 show_userid = 2;
inline bool LTSnsChangeUserIdNotify::has_show_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTSnsChangeUserIdNotify::set_has_show_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTSnsChangeUserIdNotify::clear_has_show_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTSnsChangeUserIdNotify::clear_show_userid() {
  show_userid_ = GOOGLE_ULONGLONG(0);
  clear_has_show_userid();
}
inline ::google::protobuf::uint64 LTSnsChangeUserIdNotify::show_userid() const {
  return show_userid_;
}
inline void LTSnsChangeUserIdNotify::set_show_userid(::google::protobuf::uint64 value) {
  set_has_show_userid();
  show_userid_ = value;
}

// -------------------------------------------------------------------

// LTLPlayerDeviceChangeNotify

// optional uint64 user_id = 1;
inline bool LTLPlayerDeviceChangeNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTLPlayerDeviceChangeNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTLPlayerDeviceChangeNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTLPlayerDeviceChangeNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 LTLPlayerDeviceChangeNotify::user_id() const {
  return user_id_;
}
inline void LTLPlayerDeviceChangeNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional string device_id = 2;
inline bool LTLPlayerDeviceChangeNotify::has_device_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTLPlayerDeviceChangeNotify::set_has_device_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTLPlayerDeviceChangeNotify::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTLPlayerDeviceChangeNotify::clear_device_id() {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    device_id_->clear();
  }
  clear_has_device_id();
}
inline const ::std::string& LTLPlayerDeviceChangeNotify::device_id() const {
  return *device_id_;
}
inline void LTLPlayerDeviceChangeNotify::set_device_id(const ::std::string& value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void LTLPlayerDeviceChangeNotify::set_device_id(const char* value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
}
inline void LTLPlayerDeviceChangeNotify::set_device_id(const char* value, size_t size) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LTLPlayerDeviceChangeNotify::mutable_device_id() {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    device_id_ = new ::std::string;
  }
  return device_id_;
}
inline ::std::string* LTLPlayerDeviceChangeNotify::release_device_id() {
  clear_has_device_id();
  if (device_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_id_;
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LTLPlayerDeviceChangeNotify::set_allocated_device_id(::std::string* device_id) {
  if (device_id_ != &::google::protobuf::internal::kEmptyString) {
    delete device_id_;
  }
  if (device_id) {
    set_has_device_id();
    device_id_ = device_id;
  } else {
    clear_has_device_id();
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::Proto_LoginSvrMsgID>() {
  return ::proto_ff::Proto_LoginSvrMsgID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::Proto_AccountState>() {
  return ::proto_ff::Proto_AccountState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::PhoneCodeType>() {
  return ::proto_ff::PhoneCodeType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fsvr_5flogin_2eproto__INCLUDED
