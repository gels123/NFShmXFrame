CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(NF3rdCommon)

AUX_SOURCE_DIRECTORY(./ SRC)
AUX_SOURCE_DIRECTORY(./concurrentqueue SRC)
AUX_SOURCE_DIRECTORY(./lzf SRC)
AUX_SOURCE_DIRECTORY(./rapidjson SRC)
AUX_SOURCE_DIRECTORY(./RapidXML SRC)

if(WIN32)
	AUX_SOURCE_DIRECTORY(./sigar/win32 SRC)
	AUX_SOURCE_DIRECTORY(./hiredis/hiredis_win/hiredis SRC)
	AUX_SOURCE_DIRECTORY(./hwinfo/source/win SRC)
else(UNIX)
	AUX_SOURCE_DIRECTORY(./sigar/linux SRC)
	AUX_SOURCE_DIRECTORY(./hiredis/hiredis_linux/hiredis SRC)
	AUX_SOURCE_DIRECTORY(./hwinfo/source/linux SRC)
endif()

if (CMAKE_BUILD_TYPE STREQUAL "Release")
	SET(LIBRARY_OUTPUT_PATH "${CMAKE_NFSHM_SOURCE_DIR}/Build/Lib/Release")
	ADD_LIBRARY( ${PROJECT_NAME} STATIC ${SRC} )
elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
	SET(LIBRARY_OUTPUT_PATH "${CMAKE_NFSHM_SOURCE_DIR}/Build/Lib/Debug")
	ADD_LIBRARY( ${PROJECT_NAME} STATIC ${SRC} )
elseif (CMAKE_BUILD_TYPE STREQUAL "DynamicRelease")
	SET(LIBRARY_OUTPUT_PATH "${CMAKE_NFSHM_SOURCE_DIR}/Build/Lib/Release")
	ADD_LIBRARY( ${PROJECT_NAME} STATIC ${SRC} )
elseif(CMAKE_BUILD_TYPE STREQUAL "DynamicDebug")
	SET(LIBRARY_OUTPUT_PATH "${CMAKE_NFSHM_SOURCE_DIR}/Build/Lib/Debug")
	ADD_LIBRARY( ${PROJECT_NAME} STATIC ${SRC} )
endif()




