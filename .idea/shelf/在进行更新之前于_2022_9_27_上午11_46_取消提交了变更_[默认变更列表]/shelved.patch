Index: game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicModule.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// -------------------------------------------------------------------------\n//    @FileName         :    NFCommLogicModule.cpp\n//    @Author           :    Gao.Yi\n//    @Date             :   2022-09-18\n//    @Email\t\t\t:    445267987@qq.com\n//    @Module           :    NFCommLogicPlugin\n//\n// -------------------------------------------------------------------------\n\n#include \"NFCommLogicModule.h\"\n#include \"NFComm/NFPluginModule/NFLogMgr.h\"\n#include \"NFComm/NFPluginModule/NFIConfigModule.h\"\n#include \"NFComm/NFCore/NFServerIDUtil.h\"\n#include \"NFComm/NFPluginModule/NFCheck.h\"\n#include \"NFConstDesc.h\"\n#include \"NFNameDesc.h\"\n\nint NFCommLogicModule::OnExecute(uint32_t nEventID, uint64_t nSrcID, uint32_t bySrcType, const google::protobuf::Message& message)\n{\n    if (bySrcType == proto_ff::NF_EVENT_SERVER_TYPE)\n    {\n        if (nEventID == proto_ff::NF_EVENT_SERVER_DEAD_EVENT)\n        {\n            SetTimer(10000, 10000, 0);\n        }\n    }\n    return 0;\n}\n\nvoid NFCommLogicModule::OnTimer(uint32_t nTimerID) {\n    if (nTimerID == 10000) {\n        NFLogError(NF_LOG_SYSTEMLOG, 0, \"kill the exe..................\");\n        NFSLEEP(1000);\n        exit(0);\n    }\n}\n\nbool NFCommLogicModule::Awake() {\n    Subscribe(proto_ff::NF_EVENT_SERVER_DEAD_EVENT, 0, proto_ff::NF_EVENT_SERVER_TYPE, __FUNCTION__);\n    return true;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicModule.cpp b/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicModule.cpp
--- a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicModule.cpp	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ b/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicModule.cpp	(date 1664248197522)
@@ -12,8 +12,6 @@
 #include "NFComm/NFPluginModule/NFIConfigModule.h"
 #include "NFComm/NFCore/NFServerIDUtil.h"
 #include "NFComm/NFPluginModule/NFCheck.h"
-#include "NFConstDesc.h"
-#include "NFNameDesc.h"
 
 int NFCommLogicModule::OnExecute(uint32_t nEventID, uint64_t nSrcID, uint32_t bySrcType, const google::protobuf::Message& message)
 {
Index: game/MMO/NFLogicComm/NFServerLogicMessage/activity_s.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"activity_s.h\"\n\nnamespace proto_ff_s {\n\nactivitydaily_s::activitydaily_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitydaily_s::CreateInit() {\n\tactiveId = (int64_t)0;\n\ttypeId = (int32_t)0;\n\tDescriptiontype = (int32_t)0;\n\ttypeArgs = (int64_t)0;\n\tminlevel = (int32_t)0;\n\topeningTime = (int32_t)0;\n\tadvanceTime = (int32_t)0;\n\tintervalTime = (int32_t)0;\n\tisCross = (int32_t)0;\n\tserverTime = (int32_t)0;\n\tserverdelayTime = (int32_t)0;\n\tforwordEnterTime = (int32_t)0;\n\treturn 0;\n}\n\nint activitydaily_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitydaily_s::write_to_pbmsg(::proto_ff::activitydaily & msg) const {\n\tmsg.set_activeid((int64_t)activeId);\n\tmsg.set_activename((const char*)activeName.Get());\n\tmsg.set_typeid((int32_t)typeId);\n\tmsg.set_descriptiontype((int32_t)Descriptiontype);\n\tmsg.set_typeargs((int64_t)typeArgs);\n\tmsg.set_involvemap((const char*)involveMap.Get());\n\tmsg.set_minlevel((int32_t)minlevel);\n\tmsg.set_opencycle((const char*)openCycle.Get());\n\tmsg.set_opentime((const char*)openTime.Get());\n\tmsg.set_pushtime((const char*)pushTime.Get());\n\tmsg.set_openingtime((int32_t)openingTime);\n\tmsg.set_advancetime((int32_t)advanceTime);\n\tmsg.set_intervaltime((int32_t)intervalTime);\n\tmsg.set_opeday((const char*)opeDay.Get());\n\tmsg.set_closeday((const char*)closeDay.Get());\n\tmsg.set_iscross((int32_t)isCross);\n\tmsg.set_servertime((int32_t)serverTime);\n\tmsg.set_serverdelaytime((int32_t)serverdelayTime);\n\tmsg.set_forwordentertime((int32_t)forwordEnterTime);\n}\n\nvoid activitydaily_s::read_from_pbmsg(const ::proto_ff::activitydaily & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitydaily_s));\n\tactiveId = msg.activeid();\n\tactiveName.Copy(msg.activename());\n\ttypeId = msg.typeid();\n\tDescriptiontype = msg.descriptiontype();\n\ttypeArgs = msg.typeargs();\n\tinvolveMap.Copy(msg.involvemap());\n\tminlevel = msg.minlevel();\n\topenCycle.Copy(msg.opencycle());\n\topenTime.Copy(msg.opentime());\n\tpushTime.Copy(msg.pushtime());\n\topeningTime = msg.openingtime();\n\tadvanceTime = msg.advancetime();\n\tintervalTime = msg.intervaltime();\n\topeDay.Copy(msg.opeday());\n\tcloseDay.Copy(msg.closeday());\n\tisCross = msg.iscross();\n\tserverTime = msg.servertime();\n\tserverdelayTime = msg.serverdelaytime();\n\tforwordEnterTime = msg.forwordentertime();\n}\n\nSheet_activitydaily_s::Sheet_activitydaily_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitydaily_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitydaily_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitydaily_s::write_to_pbmsg(::proto_ff::Sheet_activitydaily & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitydaily_List.GetSize() && i < activitydaily_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitydaily* temp_activitydaily_list = msg.add_activitydaily_list();\n\t\tactivitydaily_List[i].write_to_pbmsg(*temp_activitydaily_list);\n\t}\n}\n\nvoid Sheet_activitydaily_s::read_from_pbmsg(const ::proto_ff::Sheet_activitydaily & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitydaily_s));\n\tactivitydaily_List.SetSize(msg.activitydaily_list_size() > activitydaily_List.GetMaxSize() ? activitydaily_List.GetMaxSize() : msg.activitydaily_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitydaily_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitydaily & temp_activitydaily_list = msg.activitydaily_list(i);\n\t\tactivitydaily_List[i].read_from_pbmsg(temp_activitydaily_list);\n\t}\n}\n\nactivityactivitynotice_s::activityactivitynotice_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activityactivitynotice_s::CreateInit() {\n\tactiveId = (int64_t)0;\n\treturn 0;\n}\n\nint activityactivitynotice_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activityactivitynotice_s::write_to_pbmsg(::proto_ff::activityactivitynotice & msg) const {\n\tmsg.set_activeid((int64_t)activeId);\n}\n\nvoid activityactivitynotice_s::read_from_pbmsg(const ::proto_ff::activityactivitynotice & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activityactivitynotice_s));\n\tactiveId = msg.activeid();\n}\n\nSheet_activityactivitynotice_s::Sheet_activityactivitynotice_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activityactivitynotice_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activityactivitynotice_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activityactivitynotice_s::write_to_pbmsg(::proto_ff::Sheet_activityactivitynotice & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activityactivitynotice_List.GetSize() && i < activityactivitynotice_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activityactivitynotice* temp_activityactivitynotice_list = msg.add_activityactivitynotice_list();\n\t\tactivityactivitynotice_List[i].write_to_pbmsg(*temp_activityactivitynotice_list);\n\t}\n}\n\nvoid Sheet_activityactivitynotice_s::read_from_pbmsg(const ::proto_ff::Sheet_activityactivitynotice & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activityactivitynotice_s));\n\tactivityactivitynotice_List.SetSize(msg.activityactivitynotice_list_size() > activityactivitynotice_List.GetMaxSize() ? activityactivitynotice_List.GetMaxSize() : msg.activityactivitynotice_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activityactivitynotice_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activityactivitynotice & temp_activityactivitynotice_list = msg.activityactivitynotice_list(i);\n\t\tactivityactivitynotice_List[i].read_from_pbmsg(temp_activityactivitynotice_list);\n\t}\n}\n\nactivityscufflerewardDesc_s::activityscufflerewardDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activityscufflerewardDesc_s::CreateInit() {\n\tID = (int64_t)0;\n\treturn 0;\n}\n\nint activityscufflerewardDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activityscufflerewardDesc_s::write_to_pbmsg(::proto_ff::activityscufflerewardDesc & msg) const {\n\tmsg.set_id((int64_t)ID);\n}\n\nvoid activityscufflerewardDesc_s::read_from_pbmsg(const ::proto_ff::activityscufflerewardDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activityscufflerewardDesc_s));\n\tID = msg.id();\n}\n\nactivityscuffle_s::activityscuffle_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activityscuffle_s::CreateInit() {\n\tid = (int64_t)0;\n\ttypeArgs = (int32_t)0;\n\tlevel = (int32_t)0;\n\tstage = (int32_t)0;\n\tmapID = (int64_t)0;\n\tnextID = (int64_t)0;\n\tmaxPoints = (int32_t)0;\n\tpvePoints = (int32_t)0;\n\tpvpPoints = (int32_t)0;\n\tpvpHelpPoints = (int32_t)0;\n\treturn 0;\n}\n\nint activityscuffle_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activityscuffle_s::write_to_pbmsg(::proto_ff::activityscuffle & msg) const {\n\tmsg.set_id((int64_t)id);\n\tmsg.set_typeargs((int32_t)typeArgs);\n\tmsg.set_level((int32_t)level);\n\tmsg.set_stage((int32_t)stage);\n\tmsg.set_mapid((int64_t)mapID);\n\tmsg.set_nextid((int64_t)nextID);\n\tmsg.set_maxpoints((int32_t)maxPoints);\n\tmsg.set_pvepoints((int32_t)pvePoints);\n\tmsg.set_pvppoints((int32_t)pvpPoints);\n\tmsg.set_pvphelppoints((int32_t)pvpHelpPoints);\n\tfor(int32_t i = 0; i < (int32_t)reward.GetSize() && i < reward.GetMaxSize(); ++i) {\n\t\t::proto_ff::activityscufflerewardDesc* temp_reward = msg.add_reward();\n\t\treward[i].write_to_pbmsg(*temp_reward);\n\t}\n}\n\nvoid activityscuffle_s::read_from_pbmsg(const ::proto_ff::activityscuffle & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activityscuffle_s));\n\tid = msg.id();\n\ttypeArgs = msg.typeargs();\n\tlevel = msg.level();\n\tstage = msg.stage();\n\tmapID = msg.mapid();\n\tnextID = msg.nextid();\n\tmaxPoints = msg.maxpoints();\n\tpvePoints = msg.pvepoints();\n\tpvpPoints = msg.pvppoints();\n\tpvpHelpPoints = msg.pvphelppoints();\n\treward.SetSize(msg.reward_size() > reward.GetMaxSize() ? reward.GetMaxSize() : msg.reward_size());\n\tfor(int32_t i = 0; i < (int32_t)reward.GetSize(); ++i) {\n\t\tconst ::proto_ff::activityscufflerewardDesc & temp_reward = msg.reward(i);\n\t\treward[i].read_from_pbmsg(temp_reward);\n\t}\n}\n\nSheet_activityscuffle_s::Sheet_activityscuffle_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activityscuffle_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activityscuffle_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activityscuffle_s::write_to_pbmsg(::proto_ff::Sheet_activityscuffle & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activityscuffle_List.GetSize() && i < activityscuffle_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activityscuffle* temp_activityscuffle_list = msg.add_activityscuffle_list();\n\t\tactivityscuffle_List[i].write_to_pbmsg(*temp_activityscuffle_list);\n\t}\n}\n\nvoid Sheet_activityscuffle_s::read_from_pbmsg(const ::proto_ff::Sheet_activityscuffle & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activityscuffle_s));\n\tactivityscuffle_List.SetSize(msg.activityscuffle_list_size() > activityscuffle_List.GetMaxSize() ? activityscuffle_List.GetMaxSize() : msg.activityscuffle_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activityscuffle_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activityscuffle & temp_activityscuffle_list = msg.activityscuffle_list(i);\n\t\tactivityscuffle_List[i].read_from_pbmsg(temp_activityscuffle_list);\n\t}\n}\n\nactivitychaosDragonsrewardDesc_s::activitychaosDragonsrewardDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitychaosDragonsrewardDesc_s::CreateInit() {\n\tID = (int64_t)0;\n\treturn 0;\n}\n\nint activitychaosDragonsrewardDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitychaosDragonsrewardDesc_s::write_to_pbmsg(::proto_ff::activitychaosDragonsrewardDesc & msg) const {\n\tmsg.set_id((int64_t)ID);\n}\n\nvoid activitychaosDragonsrewardDesc_s::read_from_pbmsg(const ::proto_ff::activitychaosDragonsrewardDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitychaosDragonsrewardDesc_s));\n\tID = msg.id();\n}\n\nactivitychaosDragons_s::activitychaosDragons_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitychaosDragons_s::CreateInit() {\n\tid = (int32_t)0;\n\treward_type = (int32_t)0;\n\treward_param = (int32_t)0;\n\trankmin = (int32_t)0;\n\trankmax = (int32_t)0;\n\tgetPoint = (int64_t)0;\n\treturn 0;\n}\n\nint activitychaosDragons_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitychaosDragons_s::write_to_pbmsg(::proto_ff::activitychaosDragons & msg) const {\n\tmsg.set_id((int32_t)id);\n\tmsg.set_reward_type((int32_t)reward_type);\n\tmsg.set_reward_param((int32_t)reward_param);\n\tmsg.set_rankmin((int32_t)rankmin);\n\tmsg.set_rankmax((int32_t)rankmax);\n\tmsg.set_getpoint((int64_t)getPoint);\n\tfor(int32_t i = 0; i < (int32_t)reward.GetSize() && i < reward.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitychaosDragonsrewardDesc* temp_reward = msg.add_reward();\n\t\treward[i].write_to_pbmsg(*temp_reward);\n\t}\n}\n\nvoid activitychaosDragons_s::read_from_pbmsg(const ::proto_ff::activitychaosDragons & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitychaosDragons_s));\n\tid = msg.id();\n\treward_type = msg.reward_type();\n\treward_param = msg.reward_param();\n\trankmin = msg.rankmin();\n\trankmax = msg.rankmax();\n\tgetPoint = msg.getpoint();\n\treward.SetSize(msg.reward_size() > reward.GetMaxSize() ? reward.GetMaxSize() : msg.reward_size());\n\tfor(int32_t i = 0; i < (int32_t)reward.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitychaosDragonsrewardDesc & temp_reward = msg.reward(i);\n\t\treward[i].read_from_pbmsg(temp_reward);\n\t}\n}\n\nSheet_activitychaosDragons_s::Sheet_activitychaosDragons_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitychaosDragons_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitychaosDragons_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitychaosDragons_s::write_to_pbmsg(::proto_ff::Sheet_activitychaosDragons & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitychaosDragons_List.GetSize() && i < activitychaosDragons_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitychaosDragons* temp_activitychaosdragons_list = msg.add_activitychaosdragons_list();\n\t\tactivitychaosDragons_List[i].write_to_pbmsg(*temp_activitychaosdragons_list);\n\t}\n}\n\nvoid Sheet_activitychaosDragons_s::read_from_pbmsg(const ::proto_ff::Sheet_activitychaosDragons & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitychaosDragons_s));\n\tactivitychaosDragons_List.SetSize(msg.activitychaosdragons_list_size() > activitychaosDragons_List.GetMaxSize() ? activitychaosDragons_List.GetMaxSize() : msg.activitychaosdragons_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitychaosDragons_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitychaosDragons & temp_activitychaosdragons_list = msg.activitychaosdragons_list(i);\n\t\tactivitychaosDragons_List[i].read_from_pbmsg(temp_activitychaosdragons_list);\n\t}\n}\n\nactivitycircuscircusDesc_s::activitycircuscircusDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitycircuscircusDesc_s::CreateInit() {\n\ta = (int32_t)0;\n\treturn 0;\n}\n\nint activitycircuscircusDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitycircuscircusDesc_s::write_to_pbmsg(::proto_ff::activitycircuscircusDesc & msg) const {\n\tmsg.set_a((int32_t)a);\n}\n\nvoid activitycircuscircusDesc_s::read_from_pbmsg(const ::proto_ff::activitycircuscircusDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitycircuscircusDesc_s));\n\ta = msg.a();\n}\n\nactivitycircus_s::activitycircus_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitycircus_s::CreateInit() {\n\tcircusID = (int64_t)0;\n\tpowerLow = (int64_t)0;\n\tpowerUp = (int64_t)0;\n\treturn 0;\n}\n\nint activitycircus_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitycircus_s::write_to_pbmsg(::proto_ff::activitycircus & msg) const {\n\tmsg.set_circusid((int64_t)circusID);\n\tmsg.set_powerlow((int64_t)powerLow);\n\tmsg.set_powerup((int64_t)powerUp);\n\tfor(int32_t i = 0; i < (int32_t)circus.GetSize() && i < circus.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitycircuscircusDesc* temp_circus = msg.add_circus();\n\t\tcircus[i].write_to_pbmsg(*temp_circus);\n\t}\n}\n\nvoid activitycircus_s::read_from_pbmsg(const ::proto_ff::activitycircus & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitycircus_s));\n\tcircusID = msg.circusid();\n\tpowerLow = msg.powerlow();\n\tpowerUp = msg.powerup();\n\tcircus.SetSize(msg.circus_size() > circus.GetMaxSize() ? circus.GetMaxSize() : msg.circus_size());\n\tfor(int32_t i = 0; i < (int32_t)circus.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitycircuscircusDesc & temp_circus = msg.circus(i);\n\t\tcircus[i].read_from_pbmsg(temp_circus);\n\t}\n}\n\nSheet_activitycircus_s::Sheet_activitycircus_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitycircus_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitycircus_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitycircus_s::write_to_pbmsg(::proto_ff::Sheet_activitycircus & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitycircus_List.GetSize() && i < activitycircus_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitycircus* temp_activitycircus_list = msg.add_activitycircus_list();\n\t\tactivitycircus_List[i].write_to_pbmsg(*temp_activitycircus_list);\n\t}\n}\n\nvoid Sheet_activitycircus_s::read_from_pbmsg(const ::proto_ff::Sheet_activitycircus & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitycircus_s));\n\tactivitycircus_List.SetSize(msg.activitycircus_list_size() > activitycircus_List.GetMaxSize() ? activitycircus_List.GetMaxSize() : msg.activitycircus_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitycircus_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitycircus & temp_activitycircus_list = msg.activitycircus_list(i);\n\t\tactivitycircus_List[i].read_from_pbmsg(temp_activitycircus_list);\n\t}\n}\n\nactivitycircusNumitemDesc_s::activitycircusNumitemDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitycircusNumitemDesc_s::CreateInit() {\n\tNum = (int32_t)0;\n\tId = (int64_t)0;\n\treturn 0;\n}\n\nint activitycircusNumitemDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitycircusNumitemDesc_s::write_to_pbmsg(::proto_ff::activitycircusNumitemDesc & msg) const {\n\tmsg.set_num((int32_t)Num);\n\tmsg.set_id((int64_t)Id);\n}\n\nvoid activitycircusNumitemDesc_s::read_from_pbmsg(const ::proto_ff::activitycircusNumitemDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitycircusNumitemDesc_s));\n\tNum = msg.num();\n\tId = msg.id();\n}\n\nactivitycircusNum_s::activitycircusNum_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitycircusNum_s::CreateInit() {\n\tRankID = (int32_t)0;\n\treturn 0;\n}\n\nint activitycircusNum_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitycircusNum_s::write_to_pbmsg(::proto_ff::activitycircusNum & msg) const {\n\tmsg.set_rankid((int32_t)RankID);\n\tfor(int32_t i = 0; i < (int32_t)item.GetSize() && i < item.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitycircusNumitemDesc* temp_item = msg.add_item();\n\t\titem[i].write_to_pbmsg(*temp_item);\n\t}\n}\n\nvoid activitycircusNum_s::read_from_pbmsg(const ::proto_ff::activitycircusNum & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitycircusNum_s));\n\tRankID = msg.rankid();\n\titem.SetSize(msg.item_size() > item.GetMaxSize() ? item.GetMaxSize() : msg.item_size());\n\tfor(int32_t i = 0; i < (int32_t)item.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitycircusNumitemDesc & temp_item = msg.item(i);\n\t\titem[i].read_from_pbmsg(temp_item);\n\t}\n}\n\nSheet_activitycircusNum_s::Sheet_activitycircusNum_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitycircusNum_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitycircusNum_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitycircusNum_s::write_to_pbmsg(::proto_ff::Sheet_activitycircusNum & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitycircusNum_List.GetSize() && i < activitycircusNum_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitycircusNum* temp_activitycircusnum_list = msg.add_activitycircusnum_list();\n\t\tactivitycircusNum_List[i].write_to_pbmsg(*temp_activitycircusnum_list);\n\t}\n}\n\nvoid Sheet_activitycircusNum_s::read_from_pbmsg(const ::proto_ff::Sheet_activitycircusNum & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitycircusNum_s));\n\tactivitycircusNum_List.SetSize(msg.activitycircusnum_list_size() > activitycircusNum_List.GetMaxSize() ? activitycircusNum_List.GetMaxSize() : msg.activitycircusnum_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitycircusNum_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitycircusNum & temp_activitycircusnum_list = msg.activitycircusnum_list(i);\n\t\tactivitycircusNum_List[i].read_from_pbmsg(temp_activitycircusnum_list);\n\t}\n}\n\nactivitycircusDanitemDesc_s::activitycircusDanitemDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitycircusDanitemDesc_s::CreateInit() {\n\tNum = (int32_t)0;\n\tId = (int64_t)0;\n\treturn 0;\n}\n\nint activitycircusDanitemDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitycircusDanitemDesc_s::write_to_pbmsg(::proto_ff::activitycircusDanitemDesc & msg) const {\n\tmsg.set_num((int32_t)Num);\n\tmsg.set_id((int64_t)Id);\n}\n\nvoid activitycircusDanitemDesc_s::read_from_pbmsg(const ::proto_ff::activitycircusDanitemDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitycircusDanitemDesc_s));\n\tNum = msg.num();\n\tId = msg.id();\n}\n\nactivitycircusDancircusDesc_s::activitycircusDancircusDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitycircusDancircusDesc_s::CreateInit() {\n\tNum = (int32_t)0;\n\tId = (int64_t)0;\n\treturn 0;\n}\n\nint activitycircusDancircusDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitycircusDancircusDesc_s::write_to_pbmsg(::proto_ff::activitycircusDancircusDesc & msg) const {\n\tmsg.set_num((int32_t)Num);\n\tmsg.set_id((int64_t)Id);\n}\n\nvoid activitycircusDancircusDesc_s::read_from_pbmsg(const ::proto_ff::activitycircusDancircusDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitycircusDancircusDesc_s));\n\tNum = msg.num();\n\tId = msg.id();\n}\n\nactivitycircusDan_s::activitycircusDan_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitycircusDan_s::CreateInit() {\n\tchangCiID = (int32_t)0;\n\treturn 0;\n}\n\nint activitycircusDan_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitycircusDan_s::write_to_pbmsg(::proto_ff::activitycircusDan & msg) const {\n\tmsg.set_changciid((int32_t)changCiID);\n\tfor(int32_t i = 0; i < (int32_t)item.GetSize() && i < item.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitycircusDanitemDesc* temp_item = msg.add_item();\n\t\titem[i].write_to_pbmsg(*temp_item);\n\t}\n\tfor(int32_t i = 0; i < (int32_t)circus.GetSize() && i < circus.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitycircusDancircusDesc* temp_circus = msg.add_circus();\n\t\tcircus[i].write_to_pbmsg(*temp_circus);\n\t}\n}\n\nvoid activitycircusDan_s::read_from_pbmsg(const ::proto_ff::activitycircusDan & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitycircusDan_s));\n\tchangCiID = msg.changciid();\n\titem.SetSize(msg.item_size() > item.GetMaxSize() ? item.GetMaxSize() : msg.item_size());\n\tfor(int32_t i = 0; i < (int32_t)item.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitycircusDanitemDesc & temp_item = msg.item(i);\n\t\titem[i].read_from_pbmsg(temp_item);\n\t}\n\tcircus.SetSize(msg.circus_size() > circus.GetMaxSize() ? circus.GetMaxSize() : msg.circus_size());\n\tfor(int32_t i = 0; i < (int32_t)circus.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitycircusDancircusDesc & temp_circus = msg.circus(i);\n\t\tcircus[i].read_from_pbmsg(temp_circus);\n\t}\n}\n\nSheet_activitycircusDan_s::Sheet_activitycircusDan_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitycircusDan_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitycircusDan_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitycircusDan_s::write_to_pbmsg(::proto_ff::Sheet_activitycircusDan & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitycircusDan_List.GetSize() && i < activitycircusDan_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitycircusDan* temp_activitycircusdan_list = msg.add_activitycircusdan_list();\n\t\tactivitycircusDan_List[i].write_to_pbmsg(*temp_activitycircusdan_list);\n\t}\n}\n\nvoid Sheet_activitycircusDan_s::read_from_pbmsg(const ::proto_ff::Sheet_activitycircusDan & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitycircusDan_s));\n\tactivitycircusDan_List.SetSize(msg.activitycircusdan_list_size() > activitycircusDan_List.GetMaxSize() ? activitycircusDan_List.GetMaxSize() : msg.activitycircusdan_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitycircusDan_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitycircusDan & temp_activitycircusdan_list = msg.activitycircusdan_list(i);\n\t\tactivitycircusDan_List[i].read_from_pbmsg(temp_activitycircusdan_list);\n\t}\n}\n\nactivitymathrule_s::activitymathrule_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitymathrule_s::CreateInit() {\n\tactiveId = (int64_t)0;\n\ttype = (int32_t)0;\n\tmapId = (int64_t)0;\n\tduplicateId = (int64_t)0;\n\ttime = (int32_t)0;\n\twinnerPoints = (int32_t)0;\n\tloserPoints = (int32_t)0;\n\tdrawPoints = (int32_t)0;\n\trewardtype = (int32_t)0;\n\treturn 0;\n}\n\nint activitymathrule_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitymathrule_s::write_to_pbmsg(::proto_ff::activitymathrule & msg) const {\n\tmsg.set_activeid((int64_t)activeId);\n\tmsg.set_type((int32_t)type);\n\tmsg.set_mapid((int64_t)mapId);\n\tmsg.set_duplicateid((int64_t)duplicateId);\n\tmsg.set_time((int32_t)time);\n\tmsg.set_winnerpoints((int32_t)winnerPoints);\n\tmsg.set_loserpoints((int32_t)loserPoints);\n\tmsg.set_drawpoints((int32_t)drawPoints);\n\tmsg.set_rewardtype((int32_t)rewardtype);\n}\n\nvoid activitymathrule_s::read_from_pbmsg(const ::proto_ff::activitymathrule & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitymathrule_s));\n\tactiveId = msg.activeid();\n\ttype = msg.type();\n\tmapId = msg.mapid();\n\tduplicateId = msg.duplicateid();\n\ttime = msg.time();\n\twinnerPoints = msg.winnerpoints();\n\tloserPoints = msg.loserpoints();\n\tdrawPoints = msg.drawpoints();\n\trewardtype = msg.rewardtype();\n}\n\nSheet_activitymathrule_s::Sheet_activitymathrule_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitymathrule_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitymathrule_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitymathrule_s::write_to_pbmsg(::proto_ff::Sheet_activitymathrule & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitymathrule_List.GetSize() && i < activitymathrule_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitymathrule* temp_activitymathrule_list = msg.add_activitymathrule_list();\n\t\tactivitymathrule_List[i].write_to_pbmsg(*temp_activitymathrule_list);\n\t}\n}\n\nvoid Sheet_activitymathrule_s::read_from_pbmsg(const ::proto_ff::Sheet_activitymathrule & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitymathrule_s));\n\tactivitymathrule_List.SetSize(msg.activitymathrule_list_size() > activitymathrule_List.GetMaxSize() ? activitymathrule_List.GetMaxSize() : msg.activitymathrule_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitymathrule_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitymathrule & temp_activitymathrule_list = msg.activitymathrule_list(i);\n\t\tactivitymathrule_List[i].read_from_pbmsg(temp_activitymathrule_list);\n\t}\n}\n\nactivitymathrewardrewardDesc_s::activitymathrewardrewardDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitymathrewardrewardDesc_s::CreateInit() {\n\tNum = (int32_t)0;\n\tID = (int64_t)0;\n\treturn 0;\n}\n\nint activitymathrewardrewardDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitymathrewardrewardDesc_s::write_to_pbmsg(::proto_ff::activitymathrewardrewardDesc & msg) const {\n\tmsg.set_num((int32_t)Num);\n\tmsg.set_id((int64_t)ID);\n}\n\nvoid activitymathrewardrewardDesc_s::read_from_pbmsg(const ::proto_ff::activitymathrewardrewardDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitymathrewardrewardDesc_s));\n\tNum = msg.num();\n\tID = msg.id();\n}\n\nactivitymathreward_s::activitymathreward_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitymathreward_s::CreateInit() {\n\tID = (int32_t)0;\n\trewardtype = (int32_t)0;\n\trewardlevel = (int32_t)0;\n\treturn 0;\n}\n\nint activitymathreward_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitymathreward_s::write_to_pbmsg(::proto_ff::activitymathreward & msg) const {\n\tmsg.set_id((int32_t)ID);\n\tmsg.set_rewardtype((int32_t)rewardtype);\n\tmsg.set_rewardlevel((int32_t)rewardlevel);\n\tfor(int32_t i = 0; i < (int32_t)reward.GetSize() && i < reward.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitymathrewardrewardDesc* temp_reward = msg.add_reward();\n\t\treward[i].write_to_pbmsg(*temp_reward);\n\t}\n}\n\nvoid activitymathreward_s::read_from_pbmsg(const ::proto_ff::activitymathreward & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitymathreward_s));\n\tID = msg.id();\n\trewardtype = msg.rewardtype();\n\trewardlevel = msg.rewardlevel();\n\treward.SetSize(msg.reward_size() > reward.GetMaxSize() ? reward.GetMaxSize() : msg.reward_size());\n\tfor(int32_t i = 0; i < (int32_t)reward.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitymathrewardrewardDesc & temp_reward = msg.reward(i);\n\t\treward[i].read_from_pbmsg(temp_reward);\n\t}\n}\n\nSheet_activitymathreward_s::Sheet_activitymathreward_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitymathreward_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitymathreward_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitymathreward_s::write_to_pbmsg(::proto_ff::Sheet_activitymathreward & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitymathreward_List.GetSize() && i < activitymathreward_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitymathreward* temp_activitymathreward_list = msg.add_activitymathreward_list();\n\t\tactivitymathreward_List[i].write_to_pbmsg(*temp_activitymathreward_list);\n\t}\n}\n\nvoid Sheet_activitymathreward_s::read_from_pbmsg(const ::proto_ff::Sheet_activitymathreward & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitymathreward_s));\n\tactivitymathreward_List.SetSize(msg.activitymathreward_list_size() > activitymathreward_List.GetMaxSize() ? activitymathreward_List.GetMaxSize() : msg.activitymathreward_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitymathreward_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitymathreward & temp_activitymathreward_list = msg.activitymathreward_list(i);\n\t\tactivitymathreward_List[i].read_from_pbmsg(temp_activitymathreward_list);\n\t}\n}\n\nactivitygvgConst_s::activitygvgConst_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitygvgConst_s::CreateInit() {\n\tid = (int32_t)0;\n\tconstantdata = (int64_t)0;\n\treturn 0;\n}\n\nint activitygvgConst_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitygvgConst_s::write_to_pbmsg(::proto_ff::activitygvgConst & msg) const {\n\tmsg.set_id((int32_t)id);\n\tmsg.set_constantdata((int64_t)constantdata);\n\tmsg.set_stringdata((const char*)stringdata.Get());\n}\n\nvoid activitygvgConst_s::read_from_pbmsg(const ::proto_ff::activitygvgConst & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitygvgConst_s));\n\tid = msg.id();\n\tconstantdata = msg.constantdata();\n\tstringdata.Copy(msg.stringdata());\n}\n\nSheet_activitygvgConst_s::Sheet_activitygvgConst_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitygvgConst_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitygvgConst_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitygvgConst_s::write_to_pbmsg(::proto_ff::Sheet_activitygvgConst & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitygvgConst_List.GetSize() && i < activitygvgConst_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitygvgConst* temp_activitygvgconst_list = msg.add_activitygvgconst_list();\n\t\tactivitygvgConst_List[i].write_to_pbmsg(*temp_activitygvgconst_list);\n\t}\n}\n\nvoid Sheet_activitygvgConst_s::read_from_pbmsg(const ::proto_ff::Sheet_activitygvgConst & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitygvgConst_s));\n\tactivitygvgConst_List.SetSize(msg.activitygvgconst_list_size() > activitygvgConst_List.GetMaxSize() ? activitygvgConst_List.GetMaxSize() : msg.activitygvgconst_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitygvgConst_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitygvgConst & temp_activitygvgconst_list = msg.activitygvgconst_list(i);\n\t\tactivitygvgConst_List[i].read_from_pbmsg(temp_activitygvgconst_list);\n\t}\n}\n\nactivitygvgRankRewardgMemberrewardDesc_s::activitygvgRankRewardgMemberrewardDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitygvgRankRewardgMemberrewardDesc_s::CreateInit() {\n\tNum = (int32_t)0;\n\tid = (int64_t)0;\n\treturn 0;\n}\n\nint activitygvgRankRewardgMemberrewardDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitygvgRankRewardgMemberrewardDesc_s::write_to_pbmsg(::proto_ff::activitygvgRankRewardgMemberrewardDesc & msg) const {\n\tmsg.set_num((int32_t)Num);\n\tmsg.set_id((int64_t)id);\n}\n\nvoid activitygvgRankRewardgMemberrewardDesc_s::read_from_pbmsg(const ::proto_ff::activitygvgRankRewardgMemberrewardDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitygvgRankRewardgMemberrewardDesc_s));\n\tNum = msg.num();\n\tid = msg.id();\n}\n\nactivitygvgRankRewardgLeaderrewardDesc_s::activitygvgRankRewardgLeaderrewardDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitygvgRankRewardgLeaderrewardDesc_s::CreateInit() {\n\tNum = (int32_t)0;\n\tid = (int64_t)0;\n\treturn 0;\n}\n\nint activitygvgRankRewardgLeaderrewardDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitygvgRankRewardgLeaderrewardDesc_s::write_to_pbmsg(::proto_ff::activitygvgRankRewardgLeaderrewardDesc & msg) const {\n\tmsg.set_num((int32_t)Num);\n\tmsg.set_id((int64_t)id);\n}\n\nvoid activitygvgRankRewardgLeaderrewardDesc_s::read_from_pbmsg(const ::proto_ff::activitygvgRankRewardgLeaderrewardDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitygvgRankRewardgLeaderrewardDesc_s));\n\tNum = msg.num();\n\tid = msg.id();\n}\n\nactivitygvgRankReward_s::activitygvgRankReward_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitygvgRankReward_s::CreateInit() {\n\tid = (int32_t)0;\n\tgLeaderId = (int64_t)0;\n\treturn 0;\n}\n\nint activitygvgRankReward_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitygvgRankReward_s::write_to_pbmsg(::proto_ff::activitygvgRankReward & msg) const {\n\tmsg.set_id((int32_t)id);\n\tmsg.set_gleaderid((int64_t)gLeaderId);\n\tfor(int32_t i = 0; i < (int32_t)gMemberreward.GetSize() && i < gMemberreward.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitygvgRankRewardgMemberrewardDesc* temp_gmemberreward = msg.add_gmemberreward();\n\t\tgMemberreward[i].write_to_pbmsg(*temp_gmemberreward);\n\t}\n\tfor(int32_t i = 0; i < (int32_t)gLeaderreward.GetSize() && i < gLeaderreward.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitygvgRankRewardgLeaderrewardDesc* temp_gleaderreward = msg.add_gleaderreward();\n\t\tgLeaderreward[i].write_to_pbmsg(*temp_gleaderreward);\n\t}\n}\n\nvoid activitygvgRankReward_s::read_from_pbmsg(const ::proto_ff::activitygvgRankReward & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitygvgRankReward_s));\n\tid = msg.id();\n\tgLeaderId = msg.gleaderid();\n\tgMemberreward.SetSize(msg.gmemberreward_size() > gMemberreward.GetMaxSize() ? gMemberreward.GetMaxSize() : msg.gmemberreward_size());\n\tfor(int32_t i = 0; i < (int32_t)gMemberreward.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitygvgRankRewardgMemberrewardDesc & temp_gmemberreward = msg.gmemberreward(i);\n\t\tgMemberreward[i].read_from_pbmsg(temp_gmemberreward);\n\t}\n\tgLeaderreward.SetSize(msg.gleaderreward_size() > gLeaderreward.GetMaxSize() ? gLeaderreward.GetMaxSize() : msg.gleaderreward_size());\n\tfor(int32_t i = 0; i < (int32_t)gLeaderreward.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitygvgRankRewardgLeaderrewardDesc & temp_gleaderreward = msg.gleaderreward(i);\n\t\tgLeaderreward[i].read_from_pbmsg(temp_gleaderreward);\n\t}\n}\n\nSheet_activitygvgRankReward_s::Sheet_activitygvgRankReward_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitygvgRankReward_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitygvgRankReward_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitygvgRankReward_s::write_to_pbmsg(::proto_ff::Sheet_activitygvgRankReward & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitygvgRankReward_List.GetSize() && i < activitygvgRankReward_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitygvgRankReward* temp_activitygvgrankreward_list = msg.add_activitygvgrankreward_list();\n\t\tactivitygvgRankReward_List[i].write_to_pbmsg(*temp_activitygvgrankreward_list);\n\t}\n}\n\nvoid Sheet_activitygvgRankReward_s::read_from_pbmsg(const ::proto_ff::Sheet_activitygvgRankReward & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitygvgRankReward_s));\n\tactivitygvgRankReward_List.SetSize(msg.activitygvgrankreward_list_size() > activitygvgRankReward_List.GetMaxSize() ? activitygvgRankReward_List.GetMaxSize() : msg.activitygvgrankreward_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitygvgRankReward_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitygvgRankReward & temp_activitygvgrankreward_list = msg.activitygvgrankreward_list(i);\n\t\tactivitygvgRankReward_List[i].read_from_pbmsg(temp_activitygvgrankreward_list);\n\t}\n}\n\nactivitygvgRewardrewardDesc_s::activitygvgRewardrewardDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitygvgRewardrewardDesc_s::CreateInit() {\n\tNum = (int32_t)0;\n\tid = (int64_t)0;\n\treturn 0;\n}\n\nint activitygvgRewardrewardDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitygvgRewardrewardDesc_s::write_to_pbmsg(::proto_ff::activitygvgRewardrewardDesc & msg) const {\n\tmsg.set_num((int32_t)Num);\n\tmsg.set_id((int64_t)id);\n}\n\nvoid activitygvgRewardrewardDesc_s::read_from_pbmsg(const ::proto_ff::activitygvgRewardrewardDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitygvgRewardrewardDesc_s));\n\tNum = msg.num();\n\tid = msg.id();\n}\n\nactivitygvgRewardfinalityDesc_s::activitygvgRewardfinalityDesc_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitygvgRewardfinalityDesc_s::CreateInit() {\n\tNum = (int32_t)0;\n\tid = (int64_t)0;\n\treturn 0;\n}\n\nint activitygvgRewardfinalityDesc_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitygvgRewardfinalityDesc_s::write_to_pbmsg(::proto_ff::activitygvgRewardfinalityDesc & msg) const {\n\tmsg.set_num((int32_t)Num);\n\tmsg.set_id((int64_t)id);\n}\n\nvoid activitygvgRewardfinalityDesc_s::read_from_pbmsg(const ::proto_ff::activitygvgRewardfinalityDesc & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitygvgRewardfinalityDesc_s));\n\tNum = msg.num();\n\tid = msg.id();\n}\n\nactivitygvgReward_s::activitygvgReward_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitygvgReward_s::CreateInit() {\n\tid = (int32_t)0;\n\tfinalityskill = (int64_t)0;\n\treturn 0;\n}\n\nint activitygvgReward_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitygvgReward_s::write_to_pbmsg(::proto_ff::activitygvgReward & msg) const {\n\tmsg.set_id((int32_t)id);\n\tmsg.set_finalityskill((int64_t)finalityskill);\n\tfor(int32_t i = 0; i < (int32_t)reward.GetSize() && i < reward.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitygvgRewardrewardDesc* temp_reward = msg.add_reward();\n\t\treward[i].write_to_pbmsg(*temp_reward);\n\t}\n\tfor(int32_t i = 0; i < (int32_t)finality.GetSize() && i < finality.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitygvgRewardfinalityDesc* temp_finality = msg.add_finality();\n\t\tfinality[i].write_to_pbmsg(*temp_finality);\n\t}\n}\n\nvoid activitygvgReward_s::read_from_pbmsg(const ::proto_ff::activitygvgReward & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitygvgReward_s));\n\tid = msg.id();\n\tfinalityskill = msg.finalityskill();\n\treward.SetSize(msg.reward_size() > reward.GetMaxSize() ? reward.GetMaxSize() : msg.reward_size());\n\tfor(int32_t i = 0; i < (int32_t)reward.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitygvgRewardrewardDesc & temp_reward = msg.reward(i);\n\t\treward[i].read_from_pbmsg(temp_reward);\n\t}\n\tfinality.SetSize(msg.finality_size() > finality.GetMaxSize() ? finality.GetMaxSize() : msg.finality_size());\n\tfor(int32_t i = 0; i < (int32_t)finality.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitygvgRewardfinalityDesc & temp_finality = msg.finality(i);\n\t\tfinality[i].read_from_pbmsg(temp_finality);\n\t}\n}\n\nSheet_activitygvgReward_s::Sheet_activitygvgReward_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitygvgReward_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitygvgReward_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitygvgReward_s::write_to_pbmsg(::proto_ff::Sheet_activitygvgReward & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitygvgReward_List.GetSize() && i < activitygvgReward_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitygvgReward* temp_activitygvgreward_list = msg.add_activitygvgreward_list();\n\t\tactivitygvgReward_List[i].write_to_pbmsg(*temp_activitygvgreward_list);\n\t}\n}\n\nvoid Sheet_activitygvgReward_s::read_from_pbmsg(const ::proto_ff::Sheet_activitygvgReward & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitygvgReward_s));\n\tactivitygvgReward_List.SetSize(msg.activitygvgreward_list_size() > activitygvgReward_List.GetMaxSize() ? activitygvgReward_List.GetMaxSize() : msg.activitygvgreward_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitygvgReward_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitygvgReward & temp_activitygvgreward_list = msg.activitygvgreward_list(i);\n\t\tactivitygvgReward_List[i].read_from_pbmsg(temp_activitygvgreward_list);\n\t}\n}\n\nactivityworldTreasureConst_s::activityworldTreasureConst_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activityworldTreasureConst_s::CreateInit() {\n\tid = (int32_t)0;\n\tconstantdata = (int64_t)0;\n\treturn 0;\n}\n\nint activityworldTreasureConst_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activityworldTreasureConst_s::write_to_pbmsg(::proto_ff::activityworldTreasureConst & msg) const {\n\tmsg.set_id((int32_t)id);\n\tmsg.set_constantdata((int64_t)constantdata);\n}\n\nvoid activityworldTreasureConst_s::read_from_pbmsg(const ::proto_ff::activityworldTreasureConst & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activityworldTreasureConst_s));\n\tid = msg.id();\n\tconstantdata = msg.constantdata();\n}\n\nSheet_activityworldTreasureConst_s::Sheet_activityworldTreasureConst_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activityworldTreasureConst_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activityworldTreasureConst_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activityworldTreasureConst_s::write_to_pbmsg(::proto_ff::Sheet_activityworldTreasureConst & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activityworldTreasureConst_List.GetSize() && i < activityworldTreasureConst_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activityworldTreasureConst* temp_activityworldtreasureconst_list = msg.add_activityworldtreasureconst_list();\n\t\tactivityworldTreasureConst_List[i].write_to_pbmsg(*temp_activityworldtreasureconst_list);\n\t}\n}\n\nvoid Sheet_activityworldTreasureConst_s::read_from_pbmsg(const ::proto_ff::Sheet_activityworldTreasureConst & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activityworldTreasureConst_s));\n\tactivityworldTreasureConst_List.SetSize(msg.activityworldtreasureconst_list_size() > activityworldTreasureConst_List.GetMaxSize() ? activityworldTreasureConst_List.GetMaxSize() : msg.activityworldtreasureconst_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activityworldTreasureConst_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activityworldTreasureConst & temp_activityworldtreasureconst_list = msg.activityworldtreasureconst_list(i);\n\t\tactivityworldTreasureConst_List[i].read_from_pbmsg(temp_activityworldtreasureconst_list);\n\t}\n}\n\nactivityworldTreasureMap_s::activityworldTreasureMap_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activityworldTreasureMap_s::CreateInit() {\n\tmapID = (int64_t)0;\n\treturn 0;\n}\n\nint activityworldTreasureMap_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activityworldTreasureMap_s::write_to_pbmsg(::proto_ff::activityworldTreasureMap & msg) const {\n\tmsg.set_mapid((int64_t)mapID);\n\tmsg.set_pathid((const char*)pathID.Get());\n}\n\nvoid activityworldTreasureMap_s::read_from_pbmsg(const ::proto_ff::activityworldTreasureMap & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activityworldTreasureMap_s));\n\tmapID = msg.mapid();\n\tpathID.Copy(msg.pathid());\n}\n\nSheet_activityworldTreasureMap_s::Sheet_activityworldTreasureMap_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activityworldTreasureMap_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activityworldTreasureMap_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activityworldTreasureMap_s::write_to_pbmsg(::proto_ff::Sheet_activityworldTreasureMap & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activityworldTreasureMap_List.GetSize() && i < activityworldTreasureMap_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activityworldTreasureMap* temp_activityworldtreasuremap_list = msg.add_activityworldtreasuremap_list();\n\t\tactivityworldTreasureMap_List[i].write_to_pbmsg(*temp_activityworldtreasuremap_list);\n\t}\n}\n\nvoid Sheet_activityworldTreasureMap_s::read_from_pbmsg(const ::proto_ff::Sheet_activityworldTreasureMap & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activityworldTreasureMap_s));\n\tactivityworldTreasureMap_List.SetSize(msg.activityworldtreasuremap_list_size() > activityworldTreasureMap_List.GetMaxSize() ? activityworldTreasureMap_List.GetMaxSize() : msg.activityworldtreasuremap_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activityworldTreasureMap_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activityworldTreasureMap & temp_activityworldtreasuremap_list = msg.activityworldtreasuremap_list(i);\n\t\tactivityworldTreasureMap_List[i].read_from_pbmsg(temp_activityworldtreasuremap_list);\n\t}\n}\n\nactivityworldTreasureMonster_s::activityworldTreasureMonster_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activityworldTreasureMonster_s::CreateInit() {\n\tID = (int32_t)0;\n\tmonsterID = (int64_t)0;\n\tappearWeight = (int32_t)0;\n\tskillId = (int64_t)0;\n\treturn 0;\n}\n\nint activityworldTreasureMonster_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activityworldTreasureMonster_s::write_to_pbmsg(::proto_ff::activityworldTreasureMonster & msg) const {\n\tmsg.set_id((int32_t)ID);\n\tmsg.set_monsterid((int64_t)monsterID);\n\tmsg.set_appearweight((int32_t)appearWeight);\n\tmsg.set_skillid((int64_t)skillId);\n}\n\nvoid activityworldTreasureMonster_s::read_from_pbmsg(const ::proto_ff::activityworldTreasureMonster & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activityworldTreasureMonster_s));\n\tID = msg.id();\n\tmonsterID = msg.monsterid();\n\tappearWeight = msg.appearweight();\n\tskillId = msg.skillid();\n}\n\nSheet_activityworldTreasureMonster_s::Sheet_activityworldTreasureMonster_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activityworldTreasureMonster_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activityworldTreasureMonster_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activityworldTreasureMonster_s::write_to_pbmsg(::proto_ff::Sheet_activityworldTreasureMonster & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activityworldTreasureMonster_List.GetSize() && i < activityworldTreasureMonster_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activityworldTreasureMonster* temp_activityworldtreasuremonster_list = msg.add_activityworldtreasuremonster_list();\n\t\tactivityworldTreasureMonster_List[i].write_to_pbmsg(*temp_activityworldtreasuremonster_list);\n\t}\n}\n\nvoid Sheet_activityworldTreasureMonster_s::read_from_pbmsg(const ::proto_ff::Sheet_activityworldTreasureMonster & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activityworldTreasureMonster_s));\n\tactivityworldTreasureMonster_List.SetSize(msg.activityworldtreasuremonster_list_size() > activityworldTreasureMonster_List.GetMaxSize() ? activityworldTreasureMonster_List.GetMaxSize() : msg.activityworldtreasuremonster_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activityworldTreasureMonster_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activityworldTreasureMonster & temp_activityworldtreasuremonster_list = msg.activityworldtreasuremonster_list(i);\n\t\tactivityworldTreasureMonster_List[i].read_from_pbmsg(temp_activityworldtreasuremonster_list);\n\t}\n}\n\nactivitylosttempleConstant_s::activitylosttempleConstant_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint activitylosttempleConstant_s::CreateInit() {\n\tid = (int32_t)0;\n\tconstantdata = (int64_t)0;\n\treturn 0;\n}\n\nint activitylosttempleConstant_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid activitylosttempleConstant_s::write_to_pbmsg(::proto_ff::activitylosttempleConstant & msg) const {\n\tmsg.set_id((int32_t)id);\n\tmsg.set_constantdata((int64_t)constantdata);\n\tmsg.set_stringdata((const char*)stringdata.Get());\n}\n\nvoid activitylosttempleConstant_s::read_from_pbmsg(const ::proto_ff::activitylosttempleConstant & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitylosttempleConstant_s));\n\tid = msg.id();\n\tconstantdata = msg.constantdata();\n\tstringdata.Copy(msg.stringdata());\n}\n\nSheet_activitylosttempleConstant_s::Sheet_activitylosttempleConstant_s() {\n\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\n\t\tCreateInit();\n\t} else {\n\t\tResumeInit();\n\t}\n}\n\nint Sheet_activitylosttempleConstant_s::CreateInit() {\n\treturn 0;\n}\n\nint Sheet_activitylosttempleConstant_s::ResumeInit() {\n\treturn 0;\n}\n\nvoid Sheet_activitylosttempleConstant_s::write_to_pbmsg(::proto_ff::Sheet_activitylosttempleConstant & msg) const {\n\tfor(int32_t i = 0; i < (int32_t)activitylosttempleConstant_List.GetSize() && i < activitylosttempleConstant_List.GetMaxSize(); ++i) {\n\t\t::proto_ff::activitylosttempleConstant* temp_activitylosttempleconstant_list = msg.add_activitylosttempleconstant_list();\n\t\tactivitylosttempleConstant_List[i].write_to_pbmsg(*temp_activitylosttempleconstant_list);\n\t}\n}\n\nvoid Sheet_activitylosttempleConstant_s::read_from_pbmsg(const ::proto_ff::Sheet_activitylosttempleConstant & msg) {\n\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct Sheet_activitylosttempleConstant_s));\n\tactivitylosttempleConstant_List.SetSize(msg.activitylosttempleconstant_list_size() > activitylosttempleConstant_List.GetMaxSize() ? activitylosttempleConstant_List.GetMaxSize() : msg.activitylosttempleconstant_list_size());\n\tfor(int32_t i = 0; i < (int32_t)activitylosttempleConstant_List.GetSize(); ++i) {\n\t\tconst ::proto_ff::activitylosttempleConstant & temp_activitylosttempleconstant_list = msg.activitylosttempleconstant_list(i);\n\t\tactivitylosttempleConstant_List[i].read_from_pbmsg(temp_activitylosttempleconstant_list);\n\t}\n}\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/game/MMO/NFLogicComm/NFServerLogicMessage/activity_s.cpp b/game/MMO/NFLogicComm/NFServerLogicMessage/activity_s.cpp
--- a/game/MMO/NFLogicComm/NFServerLogicMessage/activity_s.cpp	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ b/game/MMO/NFLogicComm/NFServerLogicMessage/activity_s.cpp	(date 1664249982264)
@@ -33,7 +33,7 @@
 void activitydaily_s::write_to_pbmsg(::proto_ff::activitydaily & msg) const {
 	msg.set_activeid((int64_t)activeId);
 	msg.set_activename((const char*)activeName.Get());
-	msg.set_typeid((int32_t)typeId);
+	msg.set_typeid_((int32_t)typeId);
 	msg.set_descriptiontype((int32_t)Descriptiontype);
 	msg.set_typeargs((int64_t)typeArgs);
 	msg.set_involvemap((const char*)involveMap.Get());
@@ -56,7 +56,7 @@
 	//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct activitydaily_s));
 	activeId = msg.activeid();
 	activeName.Copy(msg.activename());
-	typeId = msg.typeid();
+	typeId = msg.typeid_();
 	Descriptiontype = msg.descriptiontype();
 	typeArgs = msg.typeargs();
 	involveMap.Copy(msg.involvemap());
Index: tools/proto_2_struct/proto2struct.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#! /usr/bin/python\n#coding=utf-8\n\n# Protobuf 2 C Struct\n# Copyright (c) 2015, calmwu\n# All rights reserved.\n# Email: wubo0067@hotmail.com\n\nimport sys\nimport os\nimport getopt\nimport pdb\nimport time\nimport shutil\n\nfrom google.protobuf import descriptor\nfrom google.protobuf import message\nfrom google.protobuf import reflection\nfrom google.protobuf import descriptor_pb2\n\nfrom google.protobuf import descriptor_database\nfrom google.protobuf import descriptor_pool\nfrom google.protobuf import message_factory\n\n#用统一的fieldoptions定义来取代各自的分开定义\nimport yd_fieldoptions_pb2\n#import proto2struct_def_pb2\n\nexclude_proto = (\"google/protobuf/descriptor.proto\", \"yd_fieldoptions.proto\")\n\nclass EnumDesc:\n\t\"\"\"\"\"\"\n\tname = \"\"\n\tfield_lst = []\n\nclass MessageFieldDesc:\n\t\"\"\"\"\"\"\n\t#成员名字\n\tname = \"\"\n\t#成员c类型\n\tc_type = \"\"\n\tpb_type = \"\"\n\tconvert_type = \"\"\n\t#是否是message\n\tis_message = False\n\t#是否是数组\n\tis_array = False\n\t#数组长度\n\tarray_size = 0\n\t#是否是buffer\n\tis_buffer = False\n\t#buffer长度\n\tbuffer_size = 0\n\t#是字符串\n\tis_string = False\n\t#是枚举\n\tis_enum = False\n\tno_field = False\n\nclass MessageDesc:\n\t\"\"\"\"\"\"\n\tname = \"\"\n\tpb_msgname = \"\"\n\tfield_lst = []\n\tfunc_write_to_pbmsg = \"\"\n\tfunc_read_from_pbmsg = \"\"\n\tfunc_new_proto = \"\"\n\tfunc_make_proto = \"\"\n\tuse_stl = False\n\nclass FileDesc:\n\t\"\"\"\"\"\"\n\tname = \"\"\n\tnamespace = \"\"\n\tenum_lst = [];\n\tmessage_lst = [];\n\tinclude_lst = [];\n\ng_filedesc = FileDesc()\n\ndef dump_object(obj):\n    for descriptor in obj.DESCRIPTOR.fields:\n        value = getattr(obj, descriptor.name)\n        if descriptor.type == descriptor.TYPE_MESSAGE:\n            if descriptor.label == descriptor.LABEL_REPEATED:\n                map(dump_object, value)\n            else:\n                dump_object(value)\n        elif descriptor.type == descriptor.TYPE_ENUM:\n            enum_name = descriptor.enum_type.values[value].name\n            print \"%s: %s\" % (descriptor.full_name, enum_name)\n        else:\n            print \"%s: %s\" % (descriptor.full_name, value)\n\ndef write_hfile():\n\t\"\"\"\"\"\"\n\tglobal g_filedesc\n\n\t#创建h文件\n\th_file = open(g_filedesc.name + \".h\", \"w\")\n\n\th_file.write(\"#pragma once\\n\\n\")\n\n\th_file.write(\"#include <stdint.h>\\n\")\n\th_file.write(\"#include <NFComm/NFShmCore/NFSizeString.h>\\n\")\n\th_file.write(\"#include <NFComm/NFShmCore/NFArray.h>\\n\")\n\th_file.write(\"#include <NFComm/NFShmCore/NFSeqOP.h>\\n\")\n\th_file.write(\"#include <NFComm/NFShmCore/NFShmMgr.h>\\n\")\n\tfor include_file in g_filedesc.include_lst:\n\t\th_file.write(\"#include \\\"%s\\\"\\n\" % include_file)\n\th_file.write(\"\\n\")\n\n\t#写入名字空间\n\th_file.write(\"namespace %s_s {\\n\\n\" % g_filedesc.namespace)\n\n\t#写入所有枚举对象\n\t#不用写入，protoc生成的h文件可以直接使用\n\t\"\"\"\n\tfor enum_desc in g_filedesc.enum_lst:\n\t\th_file.write(\"\\tenum %s {\\n\" % enum_desc.name)\n\t\tfor enum_field in enum_desc.field_lst:\n\t\t\th_file.write(\"\\t\\t%s = %d;\\n\" % (enum_field[0], enum_field[1]))\n\t\th_file.write(\"\\t};\\n\\n\")\n\t\"\"\"\n\n\t#写入所有struct\n\tfor message_desc in g_filedesc.message_lst:\n\t\tif message_desc.use_stl == True:\n\t\t\th_file.write(\"\\tstruct %s_s {\\n\" % message_desc.name)\n\t\telse:\n\t\t\th_file.write(\"\\tstruct %s_s : public NFDescStoreSeqOP {\\n\" % message_desc.name)\n\n\t\th_file.write(\"\\t\\t%s_s();\\n\" % message_desc.name)\n\t\th_file.write(\"\\t\\tint CreateInit();\\n\")\n\t\th_file.write(\"\\t\\tint ResumeInit();\\n\")\n\t\tfor msg_field in message_desc.field_lst:\n\t\t\tline = \"\"\n\n\t\t\tif msg_field.no_field == True:\n\t\t\t\tcontinue\n\n\t\t\tif \tmsg_field.is_array == True or msg_field.is_buffer == True:\n\t\t\t\tif msg_field.is_array == True and  msg_field.is_buffer == False:\n\t\t\t\t\tif int(msg_field.array_size) > 0:\n\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\tline += \"\\t\\tstd::vector<%s> %s\" % (msg_field.c_type,  msg_field.name)\n\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tline += \"\\t\\tNFArray<%s, %d> %s\" % (msg_field.c_type,  msg_field.array_size,  msg_field.name)\n\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\telse:\n\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\tline += \"\\t\\tstd::vector<%s> %s\" % (msg_field.c_type,  msg_field.name)\n\t\t\t\t\t\t\tline += \";\\n\"\n\n\t\t\t\telif msg_field.is_array == False and msg_field.is_buffer == True:\n\t\t\t\t\tif int(msg_field.buffer_size) > 0:\n\t\t\t\t\t\tif 'bytes' == msg_field.pb_type:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tline += \"\\t\\tstd::string %s\" % (msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tline += \"\\t\\tNFSizeBuffer<%d> %s\" % (msg_field.buffer_size, msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tline += \"\\t\\tstd::string %s\" % (msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tline += \"\\t\\tNFSizeString<%d> %s\" % (msg_field.buffer_size, msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\telse:\n\t\t\t\t\t\tif 'bytes' == msg_field.pb_type:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tline += \"\\t\\tstd::string %s\" % (msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tline += \"\\t\\tstd::string %s\" % (msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\n\t\t\t\telif msg_field.is_array == True and msg_field.is_buffer == True:\n\t\t\t\t\tif int(msg_field.array_size) > 0 and int(msg_field.buffer_size) > 0:\n\t\t\t\t\t\tif 'bytes' == msg_field.pb_type:\n\t\t\t\t\t\t\t#数组有效长度\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tline += \"\\t\\tstd::vector<std::string> %s\" % (msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tline += \"\\t\\tNFArray<NFSizeBuffer<%d>, %d> %s\" % (msg_field.buffer_size,  msg_field.array_size, msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t#数组有效长度\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tline += \"\\t\\tstd::vector<std::string> %s\" % (msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tline += \"\\t\\tNFArray<NFSizeString<%d>, %d> %s\" % (msg_field.buffer_size,  msg_field.array_size, msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\telse:\n\t\t\t\t\t\tif 'bytes' == msg_field.pb_type:\n\t\t\t\t\t\t\t#数组有效长度\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tline += \"\\t\\tstd::vector<std::string> %s\" % (msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t#数组有效长度\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tline += \"\\t\\tstd::vector<std::string> %s\" % (msg_field.name)\n\t\t\t\t\t\t\t\tline += \";\\n\"\n\n\t\t\telse:\n\t\t\t\tline += \"\\t\\t%s %s\" % (msg_field.c_type, msg_field.name)\n\t\t\t\tline += \";\\n\"\n\n\t\t\th_file.write(line)\n\n\t\t#写入转换函数\n\t\th_file.write(\"\\n\")\n\t\tmessage_desc.func_write_to_pbmsg = \"write_to_pbmsg(%s & msg) const\" % (message_desc.pb_msgname)\n\t\tmessage_desc.func_read_from_pbmsg = \"read_from_pbmsg(const %s & msg)\" % (message_desc.pb_msgname)\n\t\tmessage_desc.func_new_proto = \"new_pbmsg()\"\n\t\tmessage_desc.func_make_proto = \"make_pbmsg()\"\n\n\t\th_file.write(\"\\t\\tvirtual void %s;\\n\" % (message_desc.func_write_to_pbmsg))\n\t\th_file.write(\"\\t\\tvirtual void %s;\\n\" % (message_desc.func_read_from_pbmsg))\n\t\th_file.write(\"\\t\\tstatic %s* %s{ return new %s(); }\\n\" % (message_desc.pb_msgname, message_desc.func_new_proto, message_desc.pb_msgname))\n\t\th_file.write(\"\\t\\tstatic %s %s{ return %s(); }\\n\" % (message_desc.pb_msgname, message_desc.func_make_proto, message_desc.pb_msgname))\n\t\th_file.write(\"\\t};\\n\")\n\t\th_file.write(\"\\ttypedef struct %s_s %s_t;\\n\\n\" % (message_desc.name, message_desc.name))\n\n\th_file.write(\"}\\n\\n\")\n\th_file.close()\n\ndef write_cppfile():\n\t\"\"\"\"\"\"\n\tglobal g_filedesc\n\n\t#创建cpp文件\n\tcpp_file = open(g_filedesc.name + \".cpp\", \"w\")\n\n\tcpp_file.write(\"#include \\\"%s.h\\\"\\n\\n\" % g_filedesc.name)\n\tcpp_file.write(\"namespace %s_s {\\n\\n\" % g_filedesc.namespace)\n\n\tx_postfix = int(time.time())\n\n\t#打包解包文件\n\tfor message_desc in g_filedesc.message_lst:\n\t\t#contruct func\n\t\tcpp_file.write(\"%s_s::%s_s() {\\n\" % (message_desc.name, message_desc.name))\n\t\tif message_desc.use_stl == True:\n\t\t\tcpp_file.write(\"\\tCreateInit();\\n\")\n\t\telse:\n\t\t\tcpp_file.write(\"\\tif (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {\\n\")\n\t\t\tcpp_file.write(\"\\t\\tCreateInit();\\n\")\n\t\t\tcpp_file.write(\"\\t} else {\\n\")\n\t\t\tcpp_file.write(\"\\t\\tResumeInit();\\n\")\n\t\t\tcpp_file.write(\"\\t}\\n\")\n\t\tcpp_file.write(\"}\\n\\n\")\n\n\t\t#CreateInit\n\t\tcpp_file.write(\"int %s_s::CreateInit() {\\n\" % (message_desc.name))\n\t\tfor msg_field in message_desc.field_lst:\n\t\t\tif msg_field.no_field == True:\n\t\t\t\tcontinue\n\t\t\tif True != msg_field.is_array:\n\t\t\t\t#普通成员\n\t\t\t\tif 'bytes' != msg_field.pb_type and True != msg_field.is_string and True != msg_field.is_message:\n\t\t\t\t\tcpp_file.write(\"\\t%s = (%s)0;\\n\" % (msg_field.name, msg_field.convert_type))\n\n\t\tcpp_file.write(\"\\treturn 0;\\n\")\n\t\tcpp_file.write(\"}\\n\\n\")\n\n\t\t#ResumeInit\n\t\tcpp_file.write(\"int %s_s::ResumeInit() {\\n\" % (message_desc.name))\n\t\tcpp_file.write(\"\\treturn 0;\\n\")\n\t\tcpp_file.write(\"}\\n\\n\")\n\n\t\t#write_to_pbmsg\n\t\tcpp_file.write(\"void %s_s::%s {\\n\" % (message_desc.name, message_desc.func_write_to_pbmsg))\n\t\tfor msg_field in message_desc.field_lst:\n\t\t\tif msg_field.no_field == True:\n\t\t\t\tcontinue\n\t\t\tif True == msg_field.is_array:\n\t\t\t\tif  int(msg_field.array_size) > 0:\n\t\t\t\t\t\t#如果是数组成员\n\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\tcpp_file.write(\"\\tfor(int32_t i = 0; i < (int32_t)%s.size(); ++i) {\\n\" % (msg_field.name))\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcpp_file.write(\"\\tfor(int32_t i = 0; i < (int32_t)%s.GetSize() && i < %s.GetMaxSize(); ++i) {\\n\" % (msg_field.name,  msg_field.name))\n\n\t\t\t\t\t\tif True == msg_field.is_string:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t\\tmsg.add_%s(%s[i]);\\n\" % (msg_field.name.lower(), msg_field.name))\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t\\tmsg.add_%s((%s)%s[i].Get());\\n\" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))\n\t\t\t\t\t\telif 'bytes' == msg_field.pb_type and  int(msg_field.buffer_size) > 0:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t\\tmsg.add_%s(%s[i]);\\n\" % (msg_field.name.lower(), msg_field.name))\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t\\tmsg.add_%s((%s)%s[i].Get(), %s[i].Size());\\n\" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name, msg_field.name))\n\t\t\t\t\t\telif False == msg_field.is_message:\n\t\t\t\t\t\t\tcpp_file.write(\"\\t\\tmsg.add_%s((%s)%s[i]);\\n\" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s* temp_%s = msg.add_%s();\\n\" % (msg_field.pb_type, msg_field.name.lower(), msg_field.name.lower()))\n\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i].write_to_pbmsg(*temp_%s);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\tcpp_file.write(\"\\t}\\n\")\n\t\t\t\telse:\n\t\t\t\t\t#如果是数组成员\n\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\tcpp_file.write(\"\\tfor(int32_t i = 0; i < (int32_t)%s.size(); ++i) {\\n\" % (msg_field.name))\n\t\t\t\t\tif True == msg_field.is_string:\n\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\tcpp_file.write(\"\\t\\tmsg.add_%s(%s[i]);\\n\" % (msg_field.name.lower(), msg_field.name))\n\t\t\t\t\telif 'bytes' == msg_field.pb_type and  int(msg_field.buffer_size) > 0:\n\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\tcpp_file.write(\"\\t\\tmsg.add_%s(%s[i]);\\n\" % (msg_field.name.lower(), msg_field.name))\n\t\t\t\t\telif False == msg_field.is_message:\n\t\t\t\t\t\tcpp_file.write(\"\\t\\tmsg.add_%s((%s)%s[i]);\\n\" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))\n\t\t\t\t\telse:\n\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s* temp_%s = msg.add_%s();\\n\" % (msg_field.pb_type, msg_field.name.lower(), msg_field.name.lower()))\n\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i].write_to_pbmsg(*temp_%s);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\tcpp_file.write(\"\\t}\\n\")\n\t\t\telse:\n\t\t\t\t#普通成员\n\t\t\t\tif 'bytes' == msg_field.pb_type:\n\t\t\t\t\tif int(msg_field.buffer_size) > 0:\n\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\tcpp_file.write(\"\\tmsg.set_%s(%s);\\n\" % (msg_field.name.lower(), msg_field.name))\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcpp_file.write(\"\\tmsg.set_%s((%s)%s.Get(), %s.Size());\\n\" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name, msg_field.name))\n\t\t\t\t\telse:\n\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\tcpp_file.write(\"\\tmsg.set_%s(%s);\\n\" % (msg_field.name.lower(), msg_field.name))\n\t\t\t\telif True == msg_field.is_string:\n\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\tcpp_file.write(\"\\tmsg.set_%s(%s);\\n\" % (msg_field.name.lower(), msg_field.name))\n\t\t\t\t\telse:\n\t\t\t\t\t\tcpp_file.write(\"\\tmsg.set_%s((%s)%s.Get());\\n\" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))\n\t\t\t\telif False == msg_field.is_message:\n\t\t\t\t\tcpp_file.write(\"\\tmsg.set_%s((%s)%s);\\n\" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))\n\t\t\t\telse:\n\t\t\t\t\tcpp_file.write(\"\\t%s* temp_%s = msg.mutable_%s();\\n\" % (msg_field.pb_type, msg_field.name.lower(), msg_field.name.lower()))\n\t\t\t\t\tcpp_file.write(\"\\t%s.write_to_pbmsg(*temp_%s);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\tx_postfix = x_postfix - 1\n\n\t\tcpp_file.write(\"}\\n\\n\")\n\n\t\t\"\"\"--------------------------------------------------------------------\"\"\"\n\t\t#read_from_pbmsg\n\t\tcpp_file.write(\"void %s_s::%s {\\n\" % (message_desc.name, message_desc.func_read_from_pbmsg))\n\t\tif message_desc.use_stl == False:\n\t\t\t#cpp_file.write(\"\\tmemset(this, 0, sizeof(struct %s_s));\\n\" % message_desc.name)\n\t\t\tcpp_file.write(\"\\t//dont't use memset, the class maybe has virtual //memset(this, 0, sizeof(struct %s_s));\\n\" % message_desc.name)\n\t\tfor msg_field in message_desc.field_lst:\n\t\t\tif msg_field.no_field == True:\n\t\t\t\tcontinue\n\t\t\tif True == msg_field.is_array:\n\t\t\t\tif int(msg_field.array_size) > 0:\n\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\tcpp_file.write(\"\\t%s.resize(msg.%s_size());\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\tcpp_file.write(\"\\tfor(int32_t i = 0; i < (int32_t)%s.size(); ++i) {\\n\" % msg_field.name)\n\t\t\t\t\telse:\n\t\t\t\t\t\tcpp_file.write(\"\\t%s.SetSize(msg.%s_size() > %s.GetMaxSize() ? %s.GetMaxSize() : msg.%s_size());\\n\" % (msg_field.name, msg_field.name.lower(), msg_field.name,  msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\tcpp_file.write(\"\\tfor(int32_t i = 0; i < (int32_t)%s.GetSize(); ++i) {\\n\" % msg_field.name)\n\t\t\t\t\tif True == msg_field.is_string:\n\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i] = msg.%s(i);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i].Copy(msg.%s(i));\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\telif True == msg_field.is_buffer and int(msg_field.buffer_size) > 0:\n\t\t\t\t\t\tif 'bytes' != msg_field.pb_type:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i] = msg.%s(i);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i].Copy(msg.%s(i));\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i] = msg.%s(i);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i].Copy(msg.%s(i));\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\telif True == msg_field.is_message:\n\t\t\t\t\t\tcpp_file.write(\"\\t\\tconst %s & temp_%s = msg.%s(i);\\n\" % (msg_field.pb_type, msg_field.name.lower(), msg_field.name.lower()))\n\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i].read_from_pbmsg(temp_%s);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\telse:\n\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i] = msg.%s(i);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\tcpp_file.write(\"\\t}\\n\")\n\t\t\t\telse:\n\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\tcpp_file.write(\"\\t%s.resize(msg.%s_size());\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\tcpp_file.write(\"\\tfor(int32_t i = 0; i < (int32_t)%s.size(); ++i) {\\n\" % msg_field.name)\n\t\t\t\t\tif True == msg_field.is_string:\n\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i] = msg.%s(i);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\telif True == msg_field.is_buffer and int(msg_field.buffer_size) > 0:\n\t\t\t\t\t\tif 'bytes' != msg_field.pb_type:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i] = msg.%s(i);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i] = msg.%s(i);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\telif True == msg_field.is_message:\n\t\t\t\t\t\tcpp_file.write(\"\\t\\tconst %s & temp_%s = msg.%s(i);\\n\" % (msg_field.pb_type, msg_field.name.lower(), msg_field.name.lower()))\n\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i].read_from_pbmsg(temp_%s);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\telse:\n\t\t\t\t\t\tcpp_file.write(\"\\t\\t%s[i] = msg.%s(i);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\tcpp_file.write(\"\\t}\\n\")\n\t\t\telse:\n\t\t\t\tif True == msg_field.is_string:\n\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\tcpp_file.write(\"\\t%s = msg.%s();\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\telse:\n\t\t\t\t\t\tcpp_file.write(\"\\t%s.Copy(msg.%s());\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\telif True == msg_field.is_buffer:\n\t\t\t\t\tif int(msg_field.buffer_size) > 0:\n\t\t\t\t\t\tif 'bytes' != msg_field.pb_type:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t%s = msg.%s();\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t%s.Copy(msg.%s());\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t%s = msg.%s();\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t%s.Copy(msg.%s());\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\telse:\n\t\t\t\t\t\tif 'bytes' != msg_field.pb_type:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t%s = msg.%s();\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tif message_desc.use_stl == True:\n\t\t\t\t\t\t\t\tcpp_file.write(\"\\t%s = msg.%s();\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\telif True == msg_field.is_message:\n\t\t\t\t\tcpp_file.write(\"\\tconst %s & temp_%s = msg.%s();\\n\" % (msg_field.pb_type, msg_field.name.lower(), msg_field.name.lower()))\n\t\t\t\t\tcpp_file.write(\"\\t%s.read_from_pbmsg(temp_%s);\\n\" % (msg_field.name, msg_field.name.lower()))\n\t\t\t\telse:\n\t\t\t\t\tcpp_file.write(\"\\t%s = msg.%s();\\n\" % (msg_field.name, msg_field.name.lower()))\n\n\t\t\tx_postfix = x_postfix - 1\n\t\tcpp_file.write(\"}\\n\\n\")\n\n\tcpp_file.write(\"}\")\n\tcpp_file.close()\n\n\ndef read_proto_ds(proto_ds_file):\n\t\"\"\"\"\"\"\n\tproto_ds_fd = open(proto_ds_file, 'rb')\n\ttry:\n\t\tproto_ds_content = proto_ds_fd.read()\n\t\tprint \"file[%s] size[%d]\" % (proto_ds_file, len(proto_ds_content))\n\t\treturn proto_ds_content\n\tfinally:\n\t\tproto_ds_fd.close()\n\treturn \"\"\n\ndef show_usage():\n\tprint \"\"\"usage for proto2struct example:\n\t./proto2struct.py --proto_ds=xxx.proto.ds --proto_fname=test.proto --out_path=./\"\"\"\n\nif __name__ == \"__main__\":\n\t(opts, args) = getopt.getopt(sys.argv[1:], \"d:f:o:\", [\"proto_ds=\", \"proto_fname=\", \"out_path=\"])\n\n\tif len(opts) < 2:\n\t\tshow_usage()\n\t\tsys.exit(-1)\n\n\tproto_ds = \"\"\n\tproto_fname = \"\"\n\tout_path = \"\"\n\n\tfor (o, a) in opts:\n\t\tif o in (\"-d\", \"--proto_ds\"):\n\t\t\tproto_ds = a\n\t\telif o in (\"-f\", \"--proto_fname\"):\n\t\t\tproto_fname = a\n\t\t\tg_filedesc.name = proto_fname.split(\"/\")[-1].split(\".\")[0] + \"_s\"\n\t\telif o in (\"-o\", \"--out_path\"):\n\t\t\tout_path = a\n\t\telse:\n\t\t\tshow_usage()\n\t\t\tsys.exit(-1)\n\n\tproto_ds_content = read_proto_ds(proto_ds)\n\t#反序列化生成DescriptorSet对象\n\tpb_descriptor_set = descriptor_pb2.FileDescriptorSet()\n\tpb_descriptor_set.ParseFromString(proto_ds_content)\n\n\t#构建descriptor_database对象\n\ti = 0\n\tpb_descriptor_db = descriptor_database.DescriptorDatabase()\n\tfor proto_desc in pb_descriptor_set.file:\n\n\t\t\"\"\"if proto_desc.name not in exclude_proto:\n\t\t\tg_filedesc.include_lst.append(proto_desc.name.split(\".\")[0] + \".pb.h\")\n\t\t\tg_filedesc.include_lst.append(proto_desc.name.split(\".\")[0] + \"_s.h\")\n\t\t\tprint \"proto_desc class[%s]\" % proto_desc.__class__.__name__\"\"\"\n\t\t\"\"\"\nfile[full.proto.ds] size[4735]\n[0] proto file[google/protobuf/descriptor.proto] type[FileDescriptorProto] package[google.protobuf]\n[1] proto file[proto2struct_def.proto] type[FileDescriptorProto] package[proto2struct_def]\n[2] proto file[test.proto] type[FileDescriptorProto] package[test]\"\"\"\n\n\t\t#print \"[%d] proto file[%s] type[%s] package[%s]\" % (i, proto_desc.name, proto_desc.DESCRIPTOR.name, proto_desc.package)\n\t\ti = i + 1\n\n\t\tif proto_desc.name == proto_fname:\n\t\t\t\"\"\"得到文件的namespace\"\"\"\n\t\t\tg_filedesc.namespace = proto_desc.package\n\n\t\t\t#生成include列表\n\t\t\tg_filedesc.include_lst.append(proto_fname.split(\".\")[0] + \".pb.h\")\n\t\t\tg_filedesc.include_lst.append(proto_fname.split(\".\")[0] + \"_s.h\")\n\t\t\t\"\"\"这里得到该文件中的所有import项目\"\"\"\n\t\t\tfor import_proto in proto_desc.dependency:\n\t\t\t\t#print \"import_proto name[%s]\" % import_proto\n\t\t\t\tif import_proto not in exclude_proto:\n\t\t\t\t\tg_filedesc.include_lst.append(import_proto.split(\".\")[0] + \".pb.h\")\n\t\t\t\t\tg_filedesc.include_lst.append(import_proto.split(\".\")[0] + \"_s.h\")\n\n\t\t\t\"\"\"得到文件中所有的enum对象\"\"\"\n\t\t\tfor enum_desc_proto in proto_desc.enum_type:\n\n\t\t\t\tenum_info = EnumDesc()\n\t\t\t\tenum_info.name = enum_desc_proto.name\n\n\t\t\t\t#print \"enum[%s]\" % enum_desc_proto.name\n\t\t\t\tfor enum_value_desc_proto in enum_desc_proto.value:\n\t\t\t\t\t#print \"\\t[%s] [%d]\" % (enum_value_desc_proto.name, enum_value_desc_proto.number)\n\t\t\t\t\tenum_info.field_lst.append((enum_value_desc_proto.name, enum_value_desc_proto.number))\n\n\t\t\t\tg_filedesc.enum_lst.append(enum_info)\n\n\t\t\t\"\"\"得到文件中所有的message对象\"\"\"\n\t\t\tfor message_desc_proto in proto_desc.message_type:\n\n\t\t\t\tmessage_info = MessageDesc()\n\t\t\t\tmessage_info.name = message_desc_proto.name\n\t\t\t\tmessage_info.pb_msgname = \"::\" + g_filedesc.namespace + \"::\" + message_info.name\n\t\t\t\tmessage_info.field_lst = []\n\n\t\t\t\t\"\"\"print \"message[%s] [%s] type[%s]\" % (message_desc_proto.name, \\\n\t\t\t\tmessage_desc_proto.DESCRIPTOR.full_name, message_desc_proto.DESCRIPTOR.name)\"\"\"\n\t\t\t\t\"\"\"message[C2A_AuthSyn] type[DescriptorProto]\"\"\"\n\t\t\t\t\"\"\"得到所有的fielddescriptor\"\"\"\n\t\t\t\tfor field_desc_proto in message_desc_proto.field:\n\n\t\t\t\t\tmessage_field_info = MessageFieldDesc()\n\t\t\t\t\tmessage_field_info.name = field_desc_proto.name\n\n\t\t\t\t\t#根据label==repeated判断是否是数组\n\t\t\t\t\tif field_desc_proto.label == descriptor.FieldDescriptor.LABEL_REPEATED:\n\t\t\t\t\t\tmessage_field_info.is_array = True\n\n\t\t\t\t\t#判断类型\n\t\t\t\t\tif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_DOUBLE:\n\t\t\t\t\t\tmessage_field_info.c_type = message_field_info.pb_type = message_field_info.convert_type = \"double\"\n\t\t\t\t\telif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_FLOAT:\n\t\t\t\t\t\tmessage_field_info.c_type = message_field_info.pb_type = message_field_info.convert_type = \"float\"\n\t\t\t\t\telif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_INT64:\n\t\t\t\t\t\tmessage_field_info.c_type = message_field_info.pb_type = message_field_info.convert_type = \"int64_t\"\n\t\t\t\t\telif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_UINT64:\n\t\t\t\t\t\tmessage_field_info.c_type = message_field_info.pb_type = message_field_info.convert_type = \"uint64_t\"\n\t\t\t\t\telif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_BOOL:\n\t\t\t\t\t\tmessage_field_info.c_type = message_field_info.pb_type = message_field_info.convert_type = \"bool\"\n\t\t\t\t\telif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_STRING:\n\t\t\t\t\t\tmessage_field_info.c_type = \"char\"\n\t\t\t\t\t\tmessage_field_info.pb_type = \"string\"\n\t\t\t\t\t\tmessage_field_info.convert_type = \"const char*\"\n\t\t\t\t\t\tmessage_field_info.is_buffer = True\n\t\t\t\t\t\tmessage_field_info.is_string = True\n\t\t\t\t\telif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_MESSAGE:\n\t\t\t\t\t\tmessage_field_info.c_type = message_field_info.convert_type = \"struct \" + field_desc_proto.type_name.split(\".\")[-1] + \"_s\"\n\t\t\t\t\t\tmessage_field_info.pb_type = \"::\" + g_filedesc.namespace + \"::\" + field_desc_proto.type_name.split(\".\")[-1]\n\t\t\t\t\t\tmessage_field_info.is_message = True\n\t\t\t\t\telif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_BYTES:\n\t\t\t\t\t\tmessage_field_info.c_type = \"uint8_t\"\n\t\t\t\t\t\tmessage_field_info.convert_type = \"const void*\"\n\t\t\t\t\t\tmessage_field_info.pb_type = \"bytes\"\n\t\t\t\t\t\tmessage_field_info.is_buffer = True\n\t\t\t\t\telif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_INT32:\n\t\t\t\t\t\tmessage_field_info.c_type = message_field_info.pb_type = message_field_info.convert_type = \"int32_t\"\n\t\t\t\t\telif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_UINT32:\n\t\t\t\t\t\tmessage_field_info.c_type = message_field_info.pb_type = message_field_info.convert_type = \"uint32_t\"\n\t\t\t\t\telif field_desc_proto.type == descriptor.FieldDescriptor.TYPE_ENUM:\n\t\t\t\t\t\tmessage_field_info.c_type = message_field_info.pb_type = message_field_info.convert_type = \"::\" + g_filedesc.namespace + \"::\" + field_desc_proto.type_name.split(\".\")[-1]\n\t\t\t\t\t\tmessage_field_info.is_enum = True;\n\t\t\t\t\telse:\n\t\t\t\t\t\tprint \"\\t Error ----[%s] number[%d] type_name[%s] is not support!!!\" % \\\n\t\t\t\t\t\t(field_desc_proto.name, field_desc_proto.number, field_desc_proto.type_name)\n\n\t\t\t\t\t\"\"\"print \"\\t[%s] number[%d] label[%s] type[%s] type_name[%s] pb_type[%s]\" % \\\n\t\t\t\t\t(field_desc_proto.name, field_desc_proto.number, str(field_desc_proto.label), \\\n\t\t\t\t\tstr(field_desc_proto.type), field_desc_proto.type_name, field_desc_proto.DESCRIPTOR.full_name)\"\"\"\n\n\t\t\t\t\tmessage_info.field_lst.append(message_field_info)\n\t\t\t\tg_filedesc.message_lst.append(message_info)\n\t\tpb_descriptor_db.Add(proto_desc)\n\n\t#构建DescriptorPool\n\tpb_descriptor_pool = descriptor_pool.DescriptorPool(pb_descriptor_db)\n\n\t#处理每个Message field的自定义option，其实在这里做更方便些\n\tfor message in g_filedesc.message_lst:\n\t\tfull_name = \"%s.%s\" % (g_filedesc.namespace, message.name)\n\t\t\"\"\"print \"full_name\", full_name\"\"\"\n\t\tmessage_desc = pb_descriptor_pool.FindMessageTypeByName(full_name)\n\t\tif message_desc is not None:\n\t\t\t\"\"\"print \"message[%s] full_name[%s] fields[%d]\" % (message_desc.name, message_desc.full_name, len(message_desc.fields))\"\"\"\n\t\t\tfor msg_field_desc in message_desc.fields:\n\t\t\t\t#得到每个msg的field options\n\t\t\t\tmsg_field_options = msg_field_desc.GetOptions()\n\n\t\t\t\tfor msgfielddesc in message.field_lst:\n\t\t\t\t\tif msg_field_desc.name == msgfielddesc.name:\n\t\t\t\t\t\t\"\"\"print \"\\tfield: [%s]\" % (msgfielddesc.name)\"\"\"\n\t\t\t\t\t\tif msg_field_options.Extensions[yd_fieldoptions_pb2.no_field] == True:\n\t\t\t\t\t\t\tmsgfielddesc.no_field = True\n\n\t\t\t\t\t\tif msg_field_options.Extensions[yd_fieldoptions_pb2.field_use_stl] == True:\n\t\t\t\t\t\t\tprint \"\\tuse stl: [%s]\" % (full_name)\n\t\t\t\t\t\t\tmessage.use_stl = True\n\n\t\t\t\t\t\tif msgfielddesc.is_array == True:\n\t\t\t\t\t\t\tary_size = msg_field_options.Extensions[yd_fieldoptions_pb2.field_arysize]\n\t\t\t\t\t\t\t\"\"\"print \"\\t\\t is_array[True] ary_size[%d]\" % ary_size\"\"\"\n\t\t\t\t\t\t\tmsgfielddesc.array_size = ary_size\n\n\t\t\t\t\t\tif msgfielddesc.is_buffer == True:\n\t\t\t\t\t\t\tbuf_size = msg_field_options.Extensions[yd_fieldoptions_pb2.field_bufsize]\n\t\t\t\t\t\t\t\"\"\"print \"\\t\\t is_buffer[True] buf_size[%d]\" % buf_size\"\"\"\n\t\t\t\t\t\t\tmsgfielddesc.buffer_size = buf_size\n\n\t\t\t\t\t\t#数值类型做特殊处理\n\t\t\t\t\t\tspecial_type = msg_field_options.Extensions[yd_fieldoptions_pb2.field_typename]\n\t\t\t\t\t\tif len(special_type) != 0:\n\t\t\t\t\t\t\tmsgfielddesc.c_type = special_type\n\t\t\t\t\t\t\t\"\"\"print \"\\t\\t c_type[%s]\" % special_type\"\"\"\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\"\"\"print \"\\t\\t c_type[%s]\" % msgfielddesc.c_type\"\"\"\n\n\twrite_hfile()\n\twrite_cppfile()\n\n\t#移动到目标目录\n\tif os.path.exists(out_path) and out_path != \"./\":\n\t\th_file = g_filedesc.name + \".h\"\n\t\tcpp_file = g_filedesc.name + \".cpp\"\n\t\t#先删除\n\t\tshutil.copyfile(h_file, out_path+h_file)\n\t\tshutil.copyfile(cpp_file, out_path+cpp_file)\n\t\tos.remove(h_file)\n\t\tos.remove(cpp_file)\n\n\"\"\"\nenum[Proto_C2AEncryptType]\n\t[E_NO_ENCRYPT] [0]\n\t[E_AES] [1]\n\t[E_3DES] [2]\nmessage[ClientInfo] [google.protobuf.DescriptorProto] type[DescriptorProto]\n\t[mac_addr] number[1] label[2] type[9] type_name[] pb_type[google.protobuf.FieldDescriptorProto]\n\t[network_type] number[2] label[2] type[5] type_name[] pb_type[google.protobuf.FieldDescriptorProto]\nmessage[C2A_AuthSyn] [google.protobuf.DescriptorProto] type[DescriptorProto]\n\t[auth_data] number[1] label[2] type[9] type_name[] pb_type[google.protobuf.FieldDescriptorProto]\n\t[account_info] number[2] label[2] type[9] type_name[] pb_type[google.protobuf.FieldDescriptorProto]\n\t[encrypt_type] number[3] label[2] type[14] type_name[.test.Proto_C2AEncryptType] pb_type[google.protobuf.FieldDescriptorProto]\n\t[a] number[4] label[2] type[5] type_name[] pb_type[google.protobuf.FieldDescriptorProto]\n\t[b] number[5] label[3] type[5] type_name[] pb_type[google.protobuf.FieldDescriptorProto]\n\t[c] number[6] label[1] type[4] type_name[] pb_type[google.protobuf.FieldDescriptorProto]\n\t[d] number[7] label[2] type[5] type_name[] pb_type[google.protobuf.FieldDescriptorProto]\n\t[e] number[8] label[2] type[11] type_name[.test.ClientInfo] pb_type[google.protobuf.FieldDescriptorProto]\n\n\"\"\"\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tools/proto_2_struct/proto2struct.py b/tools/proto_2_struct/proto2struct.py
--- a/tools/proto_2_struct/proto2struct.py	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ b/tools/proto_2_struct/proto2struct.py	(date 1664249967221)
@@ -326,19 +326,37 @@
 				if 'bytes' == msg_field.pb_type:
 					if int(msg_field.buffer_size) > 0:
 						if message_desc.use_stl == True:
-							cpp_file.write("\tmsg.set_%s(%s);\n" % (msg_field.name.lower(), msg_field.name))
+							if msg_field.name.lower() == "typeid":
+								cpp_file.write("\tmsg.set_%s_(%s);\n" % (msg_field.name.lower(), msg_field.name))
+							else:
+								cpp_file.write("\tmsg.set_%s(%s);\n" % (msg_field.name.lower(), msg_field.name))
 						else:
-							cpp_file.write("\tmsg.set_%s((%s)%s.Get(), %s.Size());\n" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name, msg_field.name))
+							if msg_field.name.lower() == "typeid":
+								cpp_file.write("\tmsg.set_%s_((%s)%s.Get(), %s.Size());\n" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name, msg_field.name))
+							else:
+								cpp_file.write("\tmsg.set_%s((%s)%s.Get(), %s.Size());\n" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name, msg_field.name))
 					else:
 						if message_desc.use_stl == True:
-							cpp_file.write("\tmsg.set_%s(%s);\n" % (msg_field.name.lower(), msg_field.name))
+							if msg_field.name.lower() == "typeid":
+								cpp_file.write("\tmsg.set_%s_(%s);\n" % (msg_field.name.lower(), msg_field.name))
+							else:
+								cpp_file.write("\tmsg.set_%s(%s);\n" % (msg_field.name.lower(), msg_field.name))
 				elif True == msg_field.is_string:
 					if message_desc.use_stl == True:
-						cpp_file.write("\tmsg.set_%s(%s);\n" % (msg_field.name.lower(), msg_field.name))
+						if msg_field.name.lower() == "typeid":
+							cpp_file.write("\tmsg.set_%s_(%s);\n" % (msg_field.name.lower(), msg_field.name))
+						else:
+							cpp_file.write("\tmsg.set_%s(%s);\n" % (msg_field.name.lower(), msg_field.name))
 					else:
-						cpp_file.write("\tmsg.set_%s((%s)%s.Get());\n" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))
+						if msg_field.name.lower() == "typeid":
+							cpp_file.write("\tmsg.set_%s_((%s)%s.Get());\n" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))
+						else:
+							cpp_file.write("\tmsg.set_%s((%s)%s.Get());\n" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))
 				elif False == msg_field.is_message:
-					cpp_file.write("\tmsg.set_%s((%s)%s);\n" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))
+					if msg_field.name.lower() == "typeid":
+						cpp_file.write("\tmsg.set_%s_((%s)%s);\n" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))
+					else:
+						cpp_file.write("\tmsg.set_%s((%s)%s);\n" % (msg_field.name.lower(), msg_field.convert_type, msg_field.name))
 				else:
 					cpp_file.write("\t%s* temp_%s = msg.mutable_%s();\n" % (msg_field.pb_type, msg_field.name.lower(), msg_field.name.lower()))
 					cpp_file.write("\t%s.write_to_pbmsg(*temp_%s);\n" % (msg_field.name, msg_field.name.lower()))
@@ -408,33 +426,60 @@
 			else:
 				if True == msg_field.is_string:
 					if message_desc.use_stl == True:
-						cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
+						if msg_field.name.lower() == "typeid":
+							cpp_file.write("\t%s = msg.%s_();\n" % (msg_field.name, msg_field.name.lower()))
+						else:
+							cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
 					else:
-						cpp_file.write("\t%s.Copy(msg.%s());\n" % (msg_field.name, msg_field.name.lower()))
+						if msg_field.name.lower() == "typeid":
+							cpp_file.write("\t%s.Copy(msg.%s_());\n" % (msg_field.name, msg_field.name.lower()))
+						else:
+							cpp_file.write("\t%s.Copy(msg.%s());\n" % (msg_field.name, msg_field.name.lower()))
 				elif True == msg_field.is_buffer:
 					if int(msg_field.buffer_size) > 0:
 						if 'bytes' != msg_field.pb_type:
 							if message_desc.use_stl == True:
-								cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
+								if msg_field.name.lower() == "typeid":
+									cpp_file.write("\t%s = msg.%s_();\n" % (msg_field.name, msg_field.name.lower()))
+								else:
+									cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
 							else:
-								cpp_file.write("\t%s.Copy(msg.%s());\n" % (msg_field.name, msg_field.name.lower()))
+								if msg_field.name.lower() == "typeid":
+									cpp_file.write("\t%s.Copy(msg.%s_());\n" % (msg_field.name, msg_field.name.lower()))
+								else:
+									cpp_file.write("\t%s.Copy(msg.%s());\n" % (msg_field.name, msg_field.name.lower()))
 						else:
 							if message_desc.use_stl == True:
-								cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
+								if msg_field.name.lower() == "typeid":
+									cpp_file.write("\t%s = msg.%s_();\n" % (msg_field.name, msg_field.name.lower()))
+								else:
+									cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
 							else:
-								cpp_file.write("\t%s.Copy(msg.%s());\n" % (msg_field.name, msg_field.name.lower()))
+								if msg_field.name.lower() == "typeid":
+									cpp_file.write("\t%s.Copy(msg.%s_());\n" % (msg_field.name, msg_field.name.lower()))
+								else:
+									cpp_file.write("\t%s.Copy(msg.%s());\n" % (msg_field.name, msg_field.name.lower()))
 					else:
 						if 'bytes' != msg_field.pb_type:
 							if message_desc.use_stl == True:
-								cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
+								if msg_field.name.lower() == "typeid":
+									cpp_file.write("\t%s = msg.%s_();\n" % (msg_field.name, msg_field.name.lower()))
+								else:
+									cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
 						else:
 							if message_desc.use_stl == True:
-								cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
+								if msg_field.name.lower() == "typeid":
+									cpp_file.write("\t%s = msg.%s_();\n" % (msg_field.name, msg_field.name.lower()))
+								else:
+									cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
 				elif True == msg_field.is_message:
 					cpp_file.write("\tconst %s & temp_%s = msg.%s();\n" % (msg_field.pb_type, msg_field.name.lower(), msg_field.name.lower()))
 					cpp_file.write("\t%s.read_from_pbmsg(temp_%s);\n" % (msg_field.name, msg_field.name.lower()))
 				else:
-					cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
+					if msg_field.name.lower() == "typeid":
+						cpp_file.write("\t%s = msg.%s_();\n" % (msg_field.name, msg_field.name.lower()))
+					else:
+						cpp_file.write("\t%s = msg.%s();\n" % (msg_field.name, msg_field.name.lower()))
 
 			x_postfix = x_postfix - 1
 		cpp_file.write("}\n\n")
Index: game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicPlugin.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// -------------------------------------------------------------------------\n//    @FileName         :    NFCommLogicPlugin.cpp\n//    @Author           :    Gao.Yi\n//    @Date             :   2022-09-18\n//    @Email\t\t\t:    445267987@qq.com\n//    @Module           :    NFCommLogicPlugin\n//\n// -------------------------------------------------------------------------\n\n#include \"NFCommLogicPlugin.h\"\n#include \"NFCommLogicModule.h\"\n#include \"NFComm/NFPluginModule/NFIPluginManager.h\"\n#include \"NFComm/NFPluginModule/NFIConfigModule.h\"\n#include \"NFComm/NFPluginModule/NFCheck.h\"\n#include \"NFComm/NFShmCore/NFServerFrameTypeDefines.h\"\n#include \"NFConstDesc.h\"\n#include \"NFNameDesc.h\"\n\n#ifdef NF_DYNAMIC_PLUGIN\n\nNF_EXPORT void DllStartPlugin(NFIPluginManager* pm)\n{\n    CREATE_PLUGIN(pm, NFCommLogicPlugin)\n\n};\n\nNF_EXPORT void DllStopPlugin(NFIPluginManager* pm)\n{\n    DESTROY_PLUGIN(pm, NFCommLogicPlugin)\n};\n\n#endif\n\n\n//////////////////////////////////////////////////////////////////////////\n\nint NFCommLogicPlugin::GetPluginVersion()\n{\n\treturn 0;\n}\n\nstd::string NFCommLogicPlugin::GetPluginName()\n{\n\treturn GET_CLASS_NAME(NFCommLogicPlugin);\n}\n\nvoid NFCommLogicPlugin::Install()\n{\n\tREGISTER_MODULE(m_pObjPluginManager, NFICommLogicModule, NFCommLogicModule)\n}\n\nvoid NFCommLogicPlugin::Uninstall()\n{\n\tUNREGISTER_MODULE(m_pObjPluginManager, NFICommLogicModule, NFCommLogicModule)\n}\n\nbool NFCommLogicPlugin::InitShmObjectRegister()\n{\n    NFServerConfig* pConfig = FindModule<NFIConfigModule>()->GetAppConfig(NF_ST_NONE);\n    CHECK_EXPR(pConfig, false, \"pConfig == NULL\");\n    CHECK_EXPR(!pConfig->DefaultDBName.empty(), false, \"pConfig->DefaultDBName.empty()\");\n\n    REGISTER_DESCSTORE_WITH_DBNAME(NFConstDesc, EOT_CONST_CONFIG_DESC_ID, pConfig->DefaultDBName);\n    REGISTER_DESCSTORE(NFNameDesc, EOT_NAME_CONFIG_DESC_ID);\n\treturn true;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicPlugin.cpp b/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicPlugin.cpp
--- a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicPlugin.cpp	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ b/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicPlugin.cpp	(date 1664248295106)
@@ -12,9 +12,7 @@
 #include "NFComm/NFPluginModule/NFIPluginManager.h"
 #include "NFComm/NFPluginModule/NFIConfigModule.h"
 #include "NFComm/NFPluginModule/NFCheck.h"
-#include "NFComm/NFShmCore/NFServerFrameTypeDefines.h"
-#include "NFConstDesc.h"
-#include "NFNameDesc.h"
+#include "DescStore/achievementachievementDesc.h"
 
 #ifdef NF_DYNAMIC_PLUGIN
 
@@ -60,7 +58,6 @@
     CHECK_EXPR(pConfig, false, "pConfig == NULL");
     CHECK_EXPR(!pConfig->DefaultDBName.empty(), false, "pConfig->DefaultDBName.empty()");
 
-    REGISTER_DESCSTORE_WITH_DBNAME(NFConstDesc, EOT_CONST_CONFIG_DESC_ID, pConfig->DefaultDBName);
-    REGISTER_DESCSTORE(NFNameDesc, EOT_NAME_CONFIG_DESC_ID);
+    REGISTER_DESCSTORE(achievementachievementDesc, EOT_CONST_achievementachievement_DESC_ID);
 	return true;
 }
Index: game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFNameDesc.cpp
===================================================================
diff --git a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFNameDesc.cpp b/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFNameDesc.cpp
deleted file mode 100644
--- a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFNameDesc.cpp	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ /dev/null	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
@@ -1,100 +0,0 @@
-// -------------------------------------------------------------------------
-//    @FileName         :    NFNameDesc.cpp
-//    @Author           :    Gao.Yi
-//    @Date             :   2022-09-18
-//    @Email			:    445267987@qq.com
-//    @Module           :    NFNameDesc.cpp
-//
-// -------------------------------------------------------------------------
-
-#include "NFNameDesc.h"
-#include "NFComm/NFPluginModule/NFCheck.h"
-#include "NFComm/NFCore/NFSnprintf.h"
-#include "NFComm/NFShmCore/NFServerFrameTypeDefines.h"
-#include "NFComm/NFCore/NFRandom.hpp"
-
-IMPLEMENT_IDCREATE_WITHTYPE(NFNameDesc, EOT_NAME_CONFIG_DESC_ID, NFShmObj)
-
-NFNameDesc::NFNameDesc(NFIPluginManager* pPluginManager):NFIDescStore(pPluginManager)
-{
-    if (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {
-        CreateInit();
-    }
-    else {
-        ResumeInit();
-    }
-}
-
-NFNameDesc::~NFNameDesc()
-{
-
-}
-
-int NFNameDesc::CreateInit()
-{
-    Initialize();
-    return 0;
-}
-
-int NFNameDesc::ResumeInit()
-{
-    return 0;
-}
-
-int NFNameDesc::Load(NFResDB *pDB)
-{
-    NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "--begin--");
-    CHECK_EXPR(pDB != NULL, -1, "pDB == NULL");
-
-    NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "NFNameDesc::Load() strFileName = {}", GetFileName());
-
-    proto_ff::Sheet_NameDesc table;
-    NFResTable* pResTable = pDB->GetTable(GetFileName());
-    CHECK_EXPR(pResTable != NULL, -1, "pTable == NULL, GetTable:{} Error", GetFileName());
-
-    int iRet = 0;
-    iRet = pResTable->FindAllRecord(GetDBName(), &table);
-    CHECK_EXPR(iRet == 0, -1, "FindAllRecord Error:{}", GetFileName());
-
-    //NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "{}", table.Utf8DebugString());
-
-    CreateInit();
-
-    if ((table.namedesc_list_size() < 0) || (table.namedesc_list_size() > (int)(m_astDesc.GetMaxSize())))
-    {
-        NFLogError(NF_LOG_COMM_LOGIC_PLUGIN, 0, "Invalid TotalNum:{}", table.namedesc_list_size());
-        return -2;
-    }
-
-    m_astDesc.SetSize(m_astDesc.GetMaxSize());
-    for (int i = 0; i < (int)table.namedesc_list_size(); i++)
-    {
-        const proto_ff::NameDesc& desc = table.namedesc_list(i);
-        CHECK_EXPR((int64_t)desc.id() >= 0 && (int64_t)desc.id() < (int64_t)m_astDesc.GetSize(), -1, "dest id:{} than the array max index:{}", desc.id(), m_astDesc.GetSize());
-        m_astDesc[desc.id()].read_from_pbmsg(desc);
-    }
-
-    NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "load {}, num={}", iRet, table.namedesc_list_size());
-    NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "--end--");
-    return 0;
-}
-
-int NFNameDesc::CheckWhenAllDataLoaded()
-{
-    NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "--begin--");
-
-    NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "--end--");
-
-    return 0;
-}
-
-
-const proto_ff_s::NameDesc_s *NFNameDesc::GetDesc(int id) const {
-    CHECK_EXPR(id >= 0 && id < m_astDesc.GetSize(), NULL, "id:{} than the array max index", id, m_astDesc.GetSize());
-    return &m_astDesc[id];
-}
-
-proto_ff_s::NameDesc_s *NFNameDesc::GetDesc(int id) {
-    CHECK_EXPR(id >= 0 && id < m_astDesc.GetSize(), NULL, "id:{} than the array max index", id, m_astDesc.GetSize());
-    return &m_astDesc[id];
-}
Index: game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFNameDesc.h
===================================================================
diff --git a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFNameDesc.h b/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFNameDesc.h
deleted file mode 100644
--- a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFNameDesc.h	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ /dev/null	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
@@ -1,30 +0,0 @@
-// -------------------------------------------------------------------------
-//    @FileName         :    NFNameDesc.h
-//    @Author           :    Gao.Yi
-//    @Date             :   2022-09-18
-//    @Email			:    445267987@qq.com
-//    @Module           :    NFNameDesc.h
-//
-// -------------------------------------------------------------------------
-
-#pragma once
-
-#include "NFServerComm/NFDescStorePlugin/NFIDescStore.h"
-#include "NFComm/NFShmCore/NFShmMgr.h"
-#include "NFServerLogicMessage/NameDesc_s.h"
-
-#define MAX_NAME_DESC_NUM 5000
-
-class NFNameDesc : public NFIDescStore
-{
-public:
-    NFNameDesc(NFIPluginManager* pPluginManager);
-    virtual ~NFNameDesc();
-    int CreateInit();
-    int ResumeInit();
-    const proto_ff_s::NameDesc_s *GetDesc(int id) const;
-    proto_ff_s::NameDesc_s *GetDesc(int id);
-public:
-IMPL_RES_ARRAY_DESC(proto_ff_s::NameDesc_s, NameDesc, MAX_NAME_DESC_NUM);
-DECLARE_IDCREATE(NFNameDesc);
-};
Index: game/MMO/NFLogicComm/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>CMAKE_MINIMUM_REQUIRED(VERSION 2.8)\n\nADD_SUBDIRECTORY(\"NFServerLogicMessage\")\nADD_SUBDIRECTORY(\"NFLogicCommon\")\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/game/MMO/NFLogicComm/CMakeLists.txt b/game/MMO/NFLogicComm/CMakeLists.txt
--- a/game/MMO/NFLogicComm/CMakeLists.txt	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ b/game/MMO/NFLogicComm/CMakeLists.txt	(date 1664247992184)
@@ -2,6 +2,7 @@
 
 ADD_SUBDIRECTORY("NFServerLogicMessage")
 ADD_SUBDIRECTORY("NFLogicCommon")
+ADD_SUBDIRECTORY("DescStore")
 
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CMakeRunConfigurationManager\" shouldGenerate=\"true\" shouldDeleteObsolete=\"true\">\n    <generated>\n      <config projectName=\"ShmNFrame\" targetName=\"evpp\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFServerMessage\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFKernelPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFLogicServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFSnsServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFPluginLoader\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFRouteAgentServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFGameServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFLogicCommon\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFProxyServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFShmPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFWorldServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFNetPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFProxyClientPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFServerLogicMessage\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFRouteServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFServerCommon\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFProxyAgentServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFMasterServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFStoreServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFDescStorePlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFTestPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFServerCommonPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFLoginServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"mysqlpp\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFWebServerPlugin\" />\n      <config projectName=\"ShmNFrame\" targetName=\"NFCommLogicPlugin\" />\n    </generated>\n  </component>\n  <component name=\"CMakeSettings\" AUTO_RELOAD=\"true\">\n    <configurations>\n      <configuration PROFILE_NAME=\"Debug\" CONFIG_NAME=\"Debug\" GENERATION_OPTIONS=\"-DCMAKE_BUILD_TYPE=DynamicDebug\" GENERATION_DIR=\"Build/build64_debug\" ENABLED=\"true\" />\n      <configuration PROFILE_NAME=\"Release\" CONFIG_NAME=\"Release\" GENERATION_OPTIONS=\"-DCMAKE_BUILD_TYPE=DynamicRelease\" GENERATION_DIR=\"Build/build64_release\" ENABLED=\"false\" />\n    </configurations>\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"bfc154c0-ce35-4c6f-a6b9-b4a7f4d48cf5\" name=\"默认变更列表\" comment=\"excel proto\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/boxbox.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/boxbox.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/chooseGiftchooseGift.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/chooseGiftchooseGift.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/colPointscolPoints.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/colPointscolPoints.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/colPointstask.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/colPointstask.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/combinecitem.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/combinecitem.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/combinequalityUp.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/combinequalityUp.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/dropdrop.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/dropdrop.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/indultTaskindultTask.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/indultTaskindultTask.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/lightAndShadowreward.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/lightAndShadowreward.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/linklink.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/linklink.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/occupationaptitude.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/occupationaptitude.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/occupationoccupation.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/occupationoccupation.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/operatetutor.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/operatetutor.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/roleborn.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/roleborn.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/skillbuff.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/skillbuff.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/skillskill.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/skillskill.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/treasurechange.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/treasurechange.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/treasureequip.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/treasureequip.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/treasurefragment.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/treasurefragment.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/treasurestarUp.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/treasurestarUp.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/treasuretreasure.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/treasuretreasure.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/wingfragment.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/wingfragment.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/wingstarUp.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/wingstarUp.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Install/Config/MMO/Data/wingwing.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Install/Config/MMO/Data/wingwing.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/Message/ResMetaS/getTreasure.proto\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/Message/ResMetaS/getTreasure.proto\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/Message/ResMetaS/monster.proto\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/Message/ResMetaS/monster.proto\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure.pb.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure.pb.cc\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure.pb.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure.pb.h\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure_s.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure_s.cpp\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure_s.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure_s.h\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster.pb.cc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster.pb.cc\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster.pb.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster.pb.h\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster_s.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster_s.cpp\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster_s.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster_s.h\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ChangesViewManager\">\n    <option name=\"groupingKeys\">\n      <option value=\"directory\" />\n    </option>\n  </component>\n  <component name=\"ClangdSettings\">\n    <option name=\"clangTidyViaClangd\" value=\"false\" />\n    <option name=\"formatViaClangd\" value=\"false\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"selectedUrlAndAccountId\">\n      <UrlAndAccount>\n        <option name=\"accountId\" value=\"45894cda-87c5-4976-a6d3-49dad2b6a142\" />\n        <option name=\"url\" value=\"https://github.com/yigao/NFShmServer.git\" />\n      </UrlAndAccount>\n    </option>\n  </component>\n  <component name=\"OCResolveContextSettings\">\n    <option name=\"configuration\" value=\"0-DynamicDebug-NFCommLogicPlugin\" />\n  </component>\n  <component name=\"ProjectId\" id=\"1ujzzYRcDPHLLows0GpEXsI7QMX\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.cidr.known.project.marker\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"true\" />\n    <property name=\"WebServerToolWindowPanel.toolwindow.highlight.mappings\" value=\"true\" />\n    <property name=\"WebServerToolWindowPanel.toolwindow.highlight.symlinks\" value=\"true\" />\n    <property name=\"WebServerToolWindowPanel.toolwindow.show.date\" value=\"false\" />\n    <property name=\"WebServerToolWindowPanel.toolwindow.show.permissions\" value=\"false\" />\n    <property name=\"WebServerToolWindowPanel.toolwindow.show.size\" value=\"false\" />\n    <property name=\"cf.first.check.clang-format\" value=\"false\" />\n    <property name=\"cidr.known.project.marker\" value=\"true\" />\n    <property name=\"cmake.loaded.for.project\" value=\"true\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/tools/excel_2_bin\" />\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"com.maddyhome.idea.vim.ui.VimEmulationConfigurable\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/tools/excel_2_bin\" />\n      <recent name=\"$PROJECT_DIR$/game/MMO/NFLogicComm/makefiles\" />\n      <recent name=\"$PROJECT_DIR$/src/NFServerComm/NFDescStorePlugin\" />\n      <recent name=\"$PROJECT_DIR$/game/MMO/NFLogicComm/Message\" />\n      <recent name=\"$PROJECT_DIR$/game\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/game/MMO/NFLogicComm\" />\n      <recent name=\"$PROJECT_DIR$/src/NFServerComm/NFDescStorePlugin\" />\n      <recent name=\"$PROJECT_DIR$/src/NFServerComm/NFDescStorePlugjin\" />\n      <recent name=\"$PROJECT_DIR$/game/MMO/NFLogicComm/NFLogicCommon\" />\n      <recent name=\"$PROJECT_DIR$/Install/Config/MMO/Sql\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.excel2bin_mmo\">\n    <configuration name=\"NFCommLogicPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFCommLogicPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFDescStorePlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFDescStorePlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFGameServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFGameServerPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFGlobalServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--Server=MasterServer --ID=1.1.1.0 --Config=../../Config --Plugin=../../GlobalPlugin --restart\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFGlobalServerPlugin\" CONFIG_NAME=\"Debug\" RUN_PATH=\"$PROJECT_DIR$/Install/Bin/Dynamic_Debug/NFPluginLoader\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFKernelPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFKernelPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFLogicCommon\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFLogicCommon\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFLogicServerPlayerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--Server=LogicServer --ID=15.100.10.1 --Config=../../Config --Plugin=../../TcpPlugin_server2 --restart\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFLogicServerPlayerPlugin\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"ShmNFrame\" RUN_TARGET_NAME=\"NFPluginLoader\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFLogicServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFLogicServerPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFLoginServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFLoginServerPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFMasterServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--Server=MasterServer --ID=1.1.1.1 --Config=../../Config --Plugin=../../Plugin2 --restart\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFMasterServerPlugin\" CONFIG_NAME=\"Debug\" RUN_PATH=\"$PROJECT_DIR$/Install/Bin/Dynamic_Debug/NFPluginLoader\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFMessageDefine\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--Server=AllServer --ID=1.1.1.1 --Config=../../Config --Plugin=../../TcpPlugin --restart\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFMessageDefine\" CONFIG_NAME=\"Debug\" RUN_PATH=\"$PROJECT_DIR$/Install/Bin/Dynamic_Debug/NFPluginLoader\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFNetPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFNetPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFPluginLoader\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--Server=AllServer --ID=1.9.1.1 --Config=../../Config/MMO --Plugin=../../TcpPlugin --restart\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFPluginLoader\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"ShmNFrame\" RUN_TARGET_NAME=\"NFPluginLoader\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFProxyAgentServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFProxyAgentServerPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFProxyClientPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFProxyClientPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFProxyServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFProxyServerPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFRobotPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--Server=RobotServer --ID=1.1.1.1 --Config=../../Config --Plugin=../../TcpPlugin --Param=33,1,127.0.0.1,7051 --restart\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFRobotPlugin\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"ShmNFrame\" RUN_TARGET_NAME=\"NFPluginLoader\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFRouteAgentServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFRouteAgentServerPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFRouteServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFRouteServerPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFServerCommon\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFServerCommon\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFServerCommonPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFServerCommonPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFServerLogicMessage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFServerLogicMessage\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFServerMessage\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFServerMessage\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFShmPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFShmPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFSnsServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFSnsServerPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFStoreServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFStoreServerPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFTestPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFTestPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFWebServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFWebServerPlugin\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"NFWorldServerPlugin\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--Server=WorldServer --ID=15.100.3.1 --Config=../../Config --Plugin=../../Plugin2 --restart\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"NFWorldServerPlugin\" CONFIG_NAME=\"Debug\" RUN_PATH=\"$PROJECT_DIR$/Install/Bin/Dynamic_Debug/NFPluginLoader\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"evpp\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"evpp\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"mysqlpp\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"ShmNFrame\" TARGET_NAME=\"mysqlpp\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"GradleAppRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"excel2bin_mmo\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"mmo-nfshm-server\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"/usr/bin/python2.7\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tools/excel_2_bin\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/tools/excel_2_bin/excel2bin_mmo.py\" />\n      <option name=\"PARAMETERS\" value=\"--excel=$PROJECT_DIR$/game/MMO/ExcelMMO/wing.xlsx --proto_ds=$PROJECT_DIR$/Build/game/MMO/NFLogicComm/makefile/temp/ResMeta.proto.ds --proto_package=proto_ff --proto_sheet_msgname=Sheet_wingchange --excel_sheetname=change --proto_msgname=wingchange --start_row=4 --out_path=$PROJECT_DIR$/Install/Config/MMO/Data/\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"excel2bin_new\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"NFShmServer\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"/usr/bin/python2.7\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/tools/excel_2_bin/excel2bin_new.py\" />\n      <option name=\"PARAMETERS\" value=\"--excel=Excel/Constant.xls --proto_ds=makefiles/temp/ResMeta.proto.ds --proto_package=proto_ff --proto_sheet_msgname=Sheet_ConstDesc --excel_sheetname=Constant --proto_msgname=ConstDesc --start_row=3 --out_path=Install/Config/Data\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"excel2proto\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"mmo-nfshm-server\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"/usr/bin/python2.7\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tools/excel_2_bin\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/tools/excel_2_bin/excel2proto.py\" />\n      <option name=\"PARAMETERS\" value=\"--excel=$PROJECT_DIR$/game/MMO/Excel/treasure.xlsx --out_path=$PROJECT_DIR$/game/MMO/NFLogicComm/Message/ResMetaS/\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration default=\"true\" type=\"lua.app\" factoryName=\"Lua Application\">\n      <option name=\"program\" value=\"/usr/bin/lua\" />\n      <option name=\"file\" value=\"\" />\n      <option name=\"workingDir\" value=\"$PROJECT_DIR$/src/NFGameLogic/NFGameFishPlugin_2004/NFFishTypeLightningJellyFish.cpp\" />\n      <option name=\"debuggerType\" value=\"2\" />\n      <option name=\"params\" value=\"\" />\n      <option name=\"charset\" value=\"UTF-8\" />\n      <option name=\"showConsole\" value=\"true\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"CMake 应用程序.NFGlobalServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFLogicCommon\" />\n      <item itemvalue=\"CMake 应用程序.NFServerLogicMessage\" />\n      <item itemvalue=\"CMake 应用程序.NFCommLogicPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFProxyClientPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFKernelPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFLogicServerPlayerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFMasterServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFMessageDefine\" />\n      <item itemvalue=\"CMake 应用程序.NFNetPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFPluginLoader\" />\n      <item itemvalue=\"CMake 应用程序.NFProxyServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFRobotPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFTestPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFServerMessage\" />\n      <item itemvalue=\"CMake 应用程序.NFShmPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFWorldServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFDescStorePlugin\" />\n      <item itemvalue=\"CMake 应用程序.evpp\" />\n      <item itemvalue=\"CMake 应用程序.mysqlpp\" />\n      <item itemvalue=\"CMake 应用程序.NFProxyAgentServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFServerCommon\" />\n      <item itemvalue=\"CMake 应用程序.NFServerCommonPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFGameServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFLogicServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFLoginServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFRouteAgentServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFRouteServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFSnsServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFStoreServerPlugin\" />\n      <item itemvalue=\"CMake 应用程序.NFWebServerPlugin\" />\n      <item itemvalue=\"Python.excel2bin_new\" />\n      <item itemvalue=\"Python.excel2proto\" />\n      <item itemvalue=\"Python.excel2bin_mmo\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.excel2bin_mmo\" />\n        <item itemvalue=\"Python.excel2proto\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\n      <changelist id=\"bfc154c0-ce35-4c6f-a6b9-b4a7f4d48cf5\" name=\"默认变更列表\" comment=\"\" />\n      <created>1625194049912</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1625194049912</updated>\n      <workItem from=\"1625194052445\" duration=\"1765000\" />\n      <workItem from=\"1625196189084\" duration=\"14228000\" />\n      <workItem from=\"1625290408827\" duration=\"12307000\" />\n      <workItem from=\"1625623443677\" duration=\"8053000\" />\n      <workItem from=\"1625636571549\" duration=\"3290000\" />\n      <workItem from=\"1625727785574\" duration=\"13835000\" />\n      <workItem from=\"1625810208378\" duration=\"150000\" />\n      <workItem from=\"1625810455568\" duration=\"42000\" />\n      <workItem from=\"1625810589335\" duration=\"587000\" />\n      <workItem from=\"1625901193166\" duration=\"5088000\" />\n      <workItem from=\"1625968303694\" duration=\"23340000\" />\n      <workItem from=\"1626072312954\" duration=\"1910000\" />\n      <workItem from=\"1626083475958\" duration=\"1791000\" />\n      <workItem from=\"1626085412911\" duration=\"27501000\" />\n      <workItem from=\"1626168092522\" duration=\"3537000\" />\n      <workItem from=\"1626335577238\" duration=\"7613000\" />\n      <workItem from=\"1626401682089\" duration=\"1728000\" />\n      <workItem from=\"1626661631765\" duration=\"3963000\" />\n      <workItem from=\"1627285430993\" duration=\"2551000\" />\n      <workItem from=\"1627298045540\" duration=\"2167000\" />\n      <workItem from=\"1627302865799\" duration=\"1951000\" />\n      <workItem from=\"1630031388736\" duration=\"26000\" />\n      <workItem from=\"1630031434543\" duration=\"42000\" />\n      <workItem from=\"1630031477601\" duration=\"13000\" />\n      <workItem from=\"1632297359921\" duration=\"271000\" />\n      <workItem from=\"1632297666157\" duration=\"5544000\" />\n      <workItem from=\"1632461798544\" duration=\"55000\" />\n      <workItem from=\"1633026258306\" duration=\"3067000\" />\n      <workItem from=\"1634370756344\" duration=\"15000\" />\n      <workItem from=\"1635333767349\" duration=\"1364000\" />\n      <workItem from=\"1654652542312\" duration=\"5893000\" />\n      <workItem from=\"1654660697861\" duration=\"34802000\" />\n      <workItem from=\"1654736205434\" duration=\"2659000\" />\n      <workItem from=\"1654738989887\" duration=\"2658000\" />\n      <workItem from=\"1654741675973\" duration=\"1504000\" />\n      <workItem from=\"1654749881573\" duration=\"1982000\" />\n      <workItem from=\"1654752346426\" duration=\"50974000\" />\n      <workItem from=\"1654910432686\" duration=\"5182000\" />\n      <workItem from=\"1654940688676\" duration=\"8596000\" />\n      <workItem from=\"1655087437489\" duration=\"19827000\" />\n      <workItem from=\"1655131259867\" duration=\"2209000\" />\n      <workItem from=\"1655169199475\" duration=\"17370000\" />\n      <workItem from=\"1655216703923\" duration=\"4470000\" />\n      <workItem from=\"1655221217362\" duration=\"1668000\" />\n      <workItem from=\"1655380540421\" duration=\"187000\" />\n      <workItem from=\"1655380822806\" duration=\"174000\" />\n      <workItem from=\"1655729978316\" duration=\"5715000\" />\n      <workItem from=\"1655782948316\" duration=\"5759000\" />\n      <workItem from=\"1655863482468\" duration=\"3691000\" />\n      <workItem from=\"1655885625821\" duration=\"10216000\" />\n      <workItem from=\"1655907203407\" duration=\"10518000\" />\n      <workItem from=\"1655949562544\" duration=\"7916000\" />\n      <workItem from=\"1655971298218\" duration=\"5701000\" />\n      <workItem from=\"1655978242966\" duration=\"2796000\" />\n      <workItem from=\"1656113819505\" duration=\"5521000\" />\n      <workItem from=\"1658384883124\" duration=\"731000\" />\n      <workItem from=\"1663051250691\" duration=\"7194000\" />\n      <workItem from=\"1663115791352\" duration=\"37094000\" />\n      <workItem from=\"1663202783660\" duration=\"30103000\" />\n      <workItem from=\"1663235833757\" duration=\"8850000\" />\n      <workItem from=\"1663289012502\" duration=\"17739000\" />\n      <workItem from=\"1663320007549\" duration=\"6112000\" />\n      <workItem from=\"1663634390040\" duration=\"11554000\" />\n      <workItem from=\"1663808742487\" duration=\"10264000\" />\n      <workItem from=\"1663896936625\" duration=\"22582000\" />\n      <workItem from=\"1664153338418\" duration=\"33912000\" />\n    </task>\n    <task id=\"LOCAL-00112\" summary=\"chong gou\">\n      <created>1663302579653</created>\n      <option name=\"number\" value=\"00112\" />\n      <option name=\"presentableId\" value=\"LOCAL-00112\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663302579653</updated>\n    </task>\n    <task id=\"LOCAL-00113\" summary=\"chong gou\">\n      <created>1663306201350</created>\n      <option name=\"number\" value=\"00113\" />\n      <option name=\"presentableId\" value=\"LOCAL-00113\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663306201350</updated>\n    </task>\n    <task id=\"LOCAL-00114\" summary=\"chong gou\">\n      <created>1663324997873</created>\n      <option name=\"number\" value=\"00114\" />\n      <option name=\"presentableId\" value=\"LOCAL-00114\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663324997873</updated>\n    </task>\n    <task id=\"LOCAL-00115\" summary=\"chong gou\">\n      <created>1663325732493</created>\n      <option name=\"number\" value=\"00115\" />\n      <option name=\"presentableId\" value=\"LOCAL-00115\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663325732493</updated>\n    </task>\n    <task id=\"LOCAL-00116\" summary=\"chong gou\">\n      <created>1663378374143</created>\n      <option name=\"number\" value=\"00116\" />\n      <option name=\"presentableId\" value=\"LOCAL-00116\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663378374144</updated>\n    </task>\n    <task id=\"LOCAL-00117\" summary=\"chong gou game server\">\n      <created>1663551474399</created>\n      <option name=\"number\" value=\"00117\" />\n      <option name=\"presentableId\" value=\"LOCAL-00117\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663551474400</updated>\n    </task>\n    <task id=\"LOCAL-00118\" summary=\"chong gou game server\">\n      <created>1663555319956</created>\n      <option name=\"number\" value=\"00118\" />\n      <option name=\"presentableId\" value=\"LOCAL-00118\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663555319956</updated>\n    </task>\n    <task id=\"LOCAL-00119\" summary=\"chong gou game server\">\n      <created>1663559759943</created>\n      <option name=\"number\" value=\"00119\" />\n      <option name=\"presentableId\" value=\"LOCAL-00119\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663559759943</updated>\n    </task>\n    <task id=\"LOCAL-00120\" summary=\"chong gou conect\">\n      <created>1663568420799</created>\n      <option name=\"number\" value=\"00120\" />\n      <option name=\"presentableId\" value=\"LOCAL-00120\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663568420799</updated>\n    </task>\n    <task id=\"LOCAL-00121\" summary=\"chong gou conect\">\n      <created>1663570284118</created>\n      <option name=\"number\" value=\"00121\" />\n      <option name=\"presentableId\" value=\"LOCAL-00121\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663570284118</updated>\n    </task>\n    <task id=\"LOCAL-00122\" summary=\"chong gou conect\">\n      <created>1663573607595</created>\n      <option name=\"number\" value=\"00122\" />\n      <option name=\"presentableId\" value=\"LOCAL-00122\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663573607595</updated>\n    </task>\n    <task id=\"LOCAL-00123\" summary=\"chong gou conect\">\n      <created>1663581459662</created>\n      <option name=\"number\" value=\"00123\" />\n      <option name=\"presentableId\" value=\"LOCAL-00123\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663581459662</updated>\n    </task>\n    <task id=\"LOCAL-00124\" summary=\"chong gou conect\">\n      <created>1663581808734</created>\n      <option name=\"number\" value=\"00124\" />\n      <option name=\"presentableId\" value=\"LOCAL-00124\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663581808734</updated>\n    </task>\n    <task id=\"LOCAL-00125\" summary=\"chong gou conect\">\n      <created>1663585233209</created>\n      <option name=\"number\" value=\"00125\" />\n      <option name=\"presentableId\" value=\"LOCAL-00125\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663585233209</updated>\n    </task>\n    <task id=\"LOCAL-00126\" summary=\"chong gou conect\">\n      <created>1663635295756</created>\n      <option name=\"number\" value=\"00126\" />\n      <option name=\"presentableId\" value=\"LOCAL-00126\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663635295756</updated>\n    </task>\n    <task id=\"LOCAL-00127\" summary=\"chong gou conect\">\n      <created>1663636405709</created>\n      <option name=\"number\" value=\"00127\" />\n      <option name=\"presentableId\" value=\"LOCAL-00127\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663636405709</updated>\n    </task>\n    <task id=\"LOCAL-00128\" summary=\"chong gou conect\">\n      <created>1663637710522</created>\n      <option name=\"number\" value=\"00128\" />\n      <option name=\"presentableId\" value=\"LOCAL-00128\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663637710522</updated>\n    </task>\n    <task id=\"LOCAL-00129\" summary=\"chong gou server\">\n      <created>1663645060714</created>\n      <option name=\"number\" value=\"00129\" />\n      <option name=\"presentableId\" value=\"LOCAL-00129\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663645060714</updated>\n    </task>\n    <task id=\"LOCAL-00130\" summary=\"chong gou server\">\n      <created>1663721187822</created>\n      <option name=\"number\" value=\"00130\" />\n      <option name=\"presentableId\" value=\"LOCAL-00130\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663721187822</updated>\n    </task>\n    <task id=\"LOCAL-00131\" summary=\"chong gou server\">\n      <created>1663721573963</created>\n      <option name=\"number\" value=\"00131\" />\n      <option name=\"presentableId\" value=\"LOCAL-00131\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663721573963</updated>\n    </task>\n    <task id=\"LOCAL-00132\" summary=\"chong gou server\">\n      <created>1663721877722</created>\n      <option name=\"number\" value=\"00132\" />\n      <option name=\"presentableId\" value=\"LOCAL-00132\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663721877722</updated>\n    </task>\n    <task id=\"LOCAL-00133\" summary=\"chong gou server\">\n      <created>1663731260234</created>\n      <option name=\"number\" value=\"00133\" />\n      <option name=\"presentableId\" value=\"LOCAL-00133\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663731260234</updated>\n    </task>\n    <task id=\"LOCAL-00134\" summary=\"chong gou server\">\n      <created>1663731874691</created>\n      <option name=\"number\" value=\"00134\" />\n      <option name=\"presentableId\" value=\"LOCAL-00134\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663731874691</updated>\n    </task>\n    <task id=\"LOCAL-00135\" summary=\"chong gou server\">\n      <created>1663739368674</created>\n      <option name=\"number\" value=\"00135\" />\n      <option name=\"presentableId\" value=\"LOCAL-00135\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663739368674</updated>\n    </task>\n    <task id=\"LOCAL-00136\" summary=\"chong gou server\">\n      <created>1663739394007</created>\n      <option name=\"number\" value=\"00136\" />\n      <option name=\"presentableId\" value=\"LOCAL-00136\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663739394007</updated>\n    </task>\n    <task id=\"LOCAL-00137\" summary=\"chong gou server\">\n      <created>1663746095560</created>\n      <option name=\"number\" value=\"00137\" />\n      <option name=\"presentableId\" value=\"LOCAL-00137\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663746095560</updated>\n    </task>\n    <task id=\"LOCAL-00138\" summary=\"chong gou server\">\n      <created>1663746269341</created>\n      <option name=\"number\" value=\"00138\" />\n      <option name=\"presentableId\" value=\"LOCAL-00138\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663746269341</updated>\n    </task>\n    <task id=\"LOCAL-00139\" summary=\"chong gou server\">\n      <created>1663757125628</created>\n      <option name=\"number\" value=\"00139\" />\n      <option name=\"presentableId\" value=\"LOCAL-00139\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663757125628</updated>\n    </task>\n    <task id=\"LOCAL-00140\" summary=\"chong gou server\">\n      <created>1663826222063</created>\n      <option name=\"number\" value=\"00140\" />\n      <option name=\"presentableId\" value=\"LOCAL-00140\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663826222064</updated>\n    </task>\n    <task id=\"LOCAL-00141\" summary=\"mmo packet\">\n      <created>1663911142386</created>\n      <option name=\"number\" value=\"00141\" />\n      <option name=\"presentableId\" value=\"LOCAL-00141\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663911142404</updated>\n    </task>\n    <task id=\"LOCAL-00142\" summary=\"mmo packet\">\n      <created>1663915146543</created>\n      <option name=\"number\" value=\"00142\" />\n      <option name=\"presentableId\" value=\"LOCAL-00142\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663915146543</updated>\n    </task>\n    <task id=\"LOCAL-00143\" summary=\"mmo packet\">\n      <created>1663926997710</created>\n      <option name=\"number\" value=\"00143\" />\n      <option name=\"presentableId\" value=\"LOCAL-00143\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663926997710</updated>\n    </task>\n    <task id=\"LOCAL-00144\" summary=\"mmo packet\">\n      <created>1663984979560</created>\n      <option name=\"number\" value=\"00144\" />\n      <option name=\"presentableId\" value=\"LOCAL-00144\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663984979561</updated>\n    </task>\n    <task id=\"LOCAL-00145\" summary=\"mmo packet\">\n      <created>1663985609249</created>\n      <option name=\"number\" value=\"00145\" />\n      <option name=\"presentableId\" value=\"LOCAL-00145\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663985609249</updated>\n    </task>\n    <task id=\"LOCAL-00146\" summary=\"desc store\">\n      <created>1663988624991</created>\n      <option name=\"number\" value=\"00146\" />\n      <option name=\"presentableId\" value=\"LOCAL-00146\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663988624991</updated>\n    </task>\n    <task id=\"LOCAL-00147\" summary=\"desc store\">\n      <created>1663997411912</created>\n      <option name=\"number\" value=\"00147\" />\n      <option name=\"presentableId\" value=\"LOCAL-00147\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663997411912</updated>\n    </task>\n    <task id=\"LOCAL-00148\" summary=\"timer\">\n      <created>1664000354802</created>\n      <option name=\"number\" value=\"00148\" />\n      <option name=\"presentableId\" value=\"LOCAL-00148\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664000354802</updated>\n    </task>\n    <task id=\"LOCAL-00149\" summary=\"timer\">\n      <created>1664001227589</created>\n      <option name=\"number\" value=\"00149\" />\n      <option name=\"presentableId\" value=\"LOCAL-00149\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664001227589</updated>\n    </task>\n    <task id=\"LOCAL-00150\" summary=\"IMPL_RES_HASH_DESC\">\n      <created>1664002817690</created>\n      <option name=\"number\" value=\"00150\" />\n      <option name=\"presentableId\" value=\"LOCAL-00150\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664002817690</updated>\n    </task>\n    <task id=\"LOCAL-00151\" summary=\"IMPL_RES_HASH_DESC\">\n      <created>1664003779975</created>\n      <option name=\"number\" value=\"00151\" />\n      <option name=\"presentableId\" value=\"LOCAL-00151\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664003779975</updated>\n    </task>\n    <task id=\"LOCAL-00152\" summary=\"IMPL_RES_HASH_DESC\">\n      <created>1664012925096</created>\n      <option name=\"number\" value=\"00152\" />\n      <option name=\"presentableId\" value=\"LOCAL-00152\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664012925096</updated>\n    </task>\n    <task id=\"LOCAL-00153\" summary=\"excel proto\">\n      <created>1664013266274</created>\n      <option name=\"number\" value=\"00153\" />\n      <option name=\"presentableId\" value=\"LOCAL-00153\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664013266274</updated>\n    </task>\n    <task id=\"LOCAL-00154\" summary=\"excel proto\">\n      <created>1664014472635</created>\n      <option name=\"number\" value=\"00154\" />\n      <option name=\"presentableId\" value=\"LOCAL-00154\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664014472635</updated>\n    </task>\n    <task id=\"LOCAL-00155\" summary=\"excel proto\">\n      <created>1664160715993</created>\n      <option name=\"number\" value=\"00155\" />\n      <option name=\"presentableId\" value=\"LOCAL-00155\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664160715993</updated>\n    </task>\n    <task id=\"LOCAL-00156\" summary=\"excel proto\">\n      <created>1664179605144</created>\n      <option name=\"number\" value=\"00156\" />\n      <option name=\"presentableId\" value=\"LOCAL-00156\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664179605144</updated>\n    </task>\n    <task id=\"LOCAL-00157\" summary=\"excel proto\">\n      <created>1664183181286</created>\n      <option name=\"number\" value=\"00157\" />\n      <option name=\"presentableId\" value=\"LOCAL-00157\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664183181286</updated>\n    </task>\n    <task id=\"LOCAL-00158\" summary=\"excel proto\">\n      <created>1664242733472</created>\n      <option name=\"number\" value=\"00158\" />\n      <option name=\"presentableId\" value=\"LOCAL-00158\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664242733472</updated>\n    </task>\n    <task id=\"LOCAL-00159\" summary=\"excel proto\">\n      <created>1664243328331</created>\n      <option name=\"number\" value=\"00159\" />\n      <option name=\"presentableId\" value=\"LOCAL-00159\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664243328331</updated>\n    </task>\n    <task id=\"LOCAL-00160\" summary=\"excel proto\">\n      <created>1664244303273</created>\n      <option name=\"number\" value=\"00160\" />\n      <option name=\"presentableId\" value=\"LOCAL-00160\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664244303274</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"161\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ID_ORDER\">\n      <list>\n        <option value=\"Default.Root\" />\n        <option value=\"Default.Author\" />\n        <option value=\"Default.Date\" />\n        <option value=\"Default.Subject\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"664485c8-9d61-41f8-871a-48ec9b68fc40\">\n          <value>\n            <State />\n          </value>\n        </entry>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n        <entry key=\"e38a72a8-7f88-45be-87df-cb9171a4ca4a\">\n          <value>\n            <State>\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"HEAD\" />\n                      </list>\n                    </value>\n                  </entry>\n                  <entry key=\"structure\">\n                    <value>\n                      <list>\n                        <option value=\"dir:/home/gaoyi/mmo-nfshm-server/src/NFServer\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n        <entry key=\"e6bed79f-9738-4e61-a63a-01d4c945a57e\">\n          <value>\n            <State>\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"HEAD\" />\n                      </list>\n                    </value>\n                  </entry>\n                  <entry key=\"roots\">\n                    <value>\n                      <list>\n                        <option value=\"$PROJECT_DIR$\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n        <entry key=\"ece55e9d-b1cf-4934-a051-26bba0db119b\">\n          <value>\n            <State>\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"HEAD\" />\n                      </list>\n                    </value>\n                  </entry>\n                  <entry key=\"structure\">\n                    <value>\n                      <list>\n                        <option value=\"dir:/home/gaoyi/mmo-nfshm-server/src/NFServerComm\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n        <entry key=\"f2a4c08a-33de-4c18-b80e-5b6ea7c9ed02\">\n          <value>\n            <State>\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"HEAD\" />\n                      </list>\n                    </value>\n                  </entry>\n                  <entry key=\"structure\">\n                    <value>\n                      <list>\n                        <option value=\"dir:/home/gaoyi/mmo-nfshm-server/src\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n        <entry key=\"fb97123e-b27b-4220-ac68-9a08b9a2dfb7\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"OPEN_GENERIC_TABS\">\n      <map>\n        <entry key=\"ece55e9d-b1cf-4934-a051-26bba0db119b\" value=\"TOOL_WINDOW\" />\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"bug\" />\n    <MESSAGE value=\"plugin\" />\n    <MESSAGE value=\"show user id\" />\n    <MESSAGE value=\"vip level\" />\n    <MESSAGE value=\"vip recharge\" />\n    <MESSAGE value=\"tb server mgr\" />\n    <MESSAGE value=\"check\" />\n    <MESSAGE value=\"serial nmber\" />\n    <MESSAGE value=\"frame\" />\n    <MESSAGE value=\"delete\" />\n    <MESSAGE value=\"shell\" />\n    <MESSAGE value=\"makefile\" />\n    <MESSAGE value=\"chong gou\" />\n    <MESSAGE value=\"chong gou game server\" />\n    <MESSAGE value=\"chong gou conect\" />\n    <MESSAGE value=\"chong gou server\" />\n    <MESSAGE value=\"mmo packet\" />\n    <MESSAGE value=\"desc store\" />\n    <MESSAGE value=\"timer\" />\n    <MESSAGE value=\"IMPL_RES_HASH_DESC\" />\n    <MESSAGE value=\"excel proto\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"excel proto\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/tools/excel_2_bin/excel2proto.py</url>\n          <line>149</line>\n          <option name=\"timeStamp\" value=\"88\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/tools/excel_2_bin/excel2proto.py</url>\n          <line>135</line>\n          <option name=\"timeStamp\" value=\"98\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/tools/excel_2_bin/excel2bin_mmo.py</url>\n          <line>203</line>\n          <option name=\"timeStamp\" value=\"100\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/tools/excel_2_bin/excel2bin_mmo.py</url>\n          <line>385</line>\n          <option name=\"timeStamp\" value=\"101\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/tools/excel_2_bin/excel2bin_mmo.py</url>\n          <line>257</line>\n          <option name=\"timeStamp\" value=\"110\" />\n        </line-breakpoint>\n      </breakpoints>\n      <default-breakpoints>\n        <breakpoint type=\"python-exception\">\n          <properties notifyOnTerminate=\"true\" exception=\"BaseException\">\n            <option name=\"notifyOnTerminate\" value=\"true\" />\n          </properties>\n        </breakpoint>\n      </default-breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ b/.idea/workspace.xml	(date 1664250362508)
@@ -24,6 +24,7 @@
       <config projectName="ShmNFrame" targetName="NFStoreServerPlugin" />
       <config projectName="ShmNFrame" targetName="NFDescStorePlugin" />
       <config projectName="ShmNFrame" targetName="NFTestPlugin" />
+      <config projectName="ShmNFrame" targetName="NFDescStore" />
       <config projectName="ShmNFrame" targetName="NFServerCommonPlugin" />
       <config projectName="ShmNFrame" targetName="NFLoginServerPlugin" />
       <config projectName="ShmNFrame" targetName="mysqlpp" />
@@ -39,41 +40,16 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="bfc154c0-ce35-4c6f-a6b9-b4a7f4d48cf5" name="默认变更列表" comment="excel proto">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/boxbox.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/boxbox.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/chooseGiftchooseGift.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/chooseGiftchooseGift.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/colPointscolPoints.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/colPointscolPoints.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/colPointstask.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/colPointstask.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/combinecitem.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/combinecitem.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/combinequalityUp.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/combinequalityUp.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/dropdrop.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/dropdrop.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/indultTaskindultTask.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/indultTaskindultTask.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/lightAndShadowreward.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/lightAndShadowreward.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/linklink.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/linklink.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/occupationaptitude.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/occupationaptitude.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/occupationoccupation.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/occupationoccupation.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/operatetutor.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/operatetutor.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/roleborn.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/roleborn.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/skillbuff.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/skillbuff.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/skillskill.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/skillskill.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/treasurechange.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/treasurechange.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/treasureequip.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/treasureequip.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/treasurefragment.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/treasurefragment.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/treasurestarUp.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/treasurestarUp.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/treasuretreasure.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/treasuretreasure.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/wingfragment.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/wingfragment.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/wingstarUp.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/wingstarUp.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Install/Config/MMO/Data/wingwing.bin" beforeDir="false" afterPath="$PROJECT_DIR$/Install/Config/MMO/Data/wingwing.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/Message/ResMetaS/getTreasure.proto" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/Message/ResMetaS/getTreasure.proto" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/Message/ResMetaS/monster.proto" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/Message/ResMetaS/monster.proto" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure.pb.cc" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure.pb.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure.pb.h" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure.pb.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure_s.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure_s.cpp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure_s.h" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/getTreasure_s.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster.pb.cc" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster.pb.cc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster.pb.h" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster.pb.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster_s.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster_s.cpp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster_s.h" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/monster_s.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/CMakeLists.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/activity_s.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/NFServerLogicMessage/activity_s.cpp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicModule.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicModule.cpp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicPlugin.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFCommLogicPlugin.cpp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFConstDesc.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/DescStore/achievementachievementDesc.cpp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFConstDesc.h" beforeDir="false" afterPath="$PROJECT_DIR$/game/MMO/NFLogicComm/DescStore/achievementachievementDesc.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFNameDesc.cpp" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFNameDesc.h" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/NFComm/NFShmCore/NFTypeDefines.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/NFComm/NFShmCore/NFTypeDefines.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/tools/proto_2_struct/proto2struct.py" beforeDir="false" afterPath="$PROJECT_DIR$/tools/proto_2_struct/proto2struct.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -132,32 +108,42 @@
     <property name="cf.first.check.clang-format" value="false" />
     <property name="cidr.known.project.marker" value="true" />
     <property name="cmake.loaded.for.project" value="true" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$/tools/excel_2_bin" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/game/MMO/NFLogicComm/DescStore" />
     <property name="nodejs_package_manager_path" value="npm" />
     <property name="settings.editor.selected.configurable" value="com.maddyhome.idea.vim.ui.VimEmulationConfigurable" />
   </component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/game/MMO/NFLogicComm/DescStore" />
       <recent name="$PROJECT_DIR$/tools/excel_2_bin" />
       <recent name="$PROJECT_DIR$/game/MMO/NFLogicComm/makefiles" />
       <recent name="$PROJECT_DIR$/src/NFServerComm/NFDescStorePlugin" />
       <recent name="$PROJECT_DIR$/game/MMO/NFLogicComm/Message" />
-      <recent name="$PROJECT_DIR$/game" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/game/MMO/NFLogicComm/DescStore" />
       <recent name="$PROJECT_DIR$/game/MMO/NFLogicComm" />
       <recent name="$PROJECT_DIR$/src/NFServerComm/NFDescStorePlugin" />
       <recent name="$PROJECT_DIR$/src/NFServerComm/NFDescStorePlugjin" />
       <recent name="$PROJECT_DIR$/game/MMO/NFLogicComm/NFLogicCommon" />
-      <recent name="$PROJECT_DIR$/Install/Config/MMO/Sql" />
     </key>
   </component>
   <component name="RunManager" selected="Python.excel2bin_mmo">
+    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
+      <method v="2">
+        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="NFCommLogicPlugin" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ShmNFrame" TARGET_NAME="NFCommLogicPlugin" CONFIG_NAME="Debug">
       <method v="2">
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
     </configuration>
+    <configuration name="NFDescStore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ShmNFrame" TARGET_NAME="NFDescStore" CONFIG_NAME="Debug">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="NFDescStorePlugin" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ShmNFrame" TARGET_NAME="NFDescStorePlugin" CONFIG_NAME="Debug">
       <method v="2">
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
@@ -388,6 +374,7 @@
     </configuration>
     <list>
       <item itemvalue="CMake 应用程序.NFGlobalServerPlugin" />
+      <item itemvalue="CMake 应用程序.NFDescStore" />
       <item itemvalue="CMake 应用程序.NFLogicCommon" />
       <item itemvalue="CMake 应用程序.NFServerLogicMessage" />
       <item itemvalue="CMake 应用程序.NFCommLogicPlugin" />
@@ -504,13 +491,6 @@
       <workItem from="1663896936625" duration="22582000" />
       <workItem from="1664153338418" duration="33912000" />
     </task>
-    <task id="LOCAL-00112" summary="chong gou">
-      <created>1663302579653</created>
-      <option name="number" value="00112" />
-      <option name="presentableId" value="LOCAL-00112" />
-      <option name="project" value="LOCAL" />
-      <updated>1663302579653</updated>
-    </task>
     <task id="LOCAL-00113" summary="chong gou">
       <created>1663306201350</created>
       <option name="number" value="00113" />
@@ -847,7 +827,14 @@
       <option name="project" value="LOCAL" />
       <updated>1664244303274</updated>
     </task>
-    <option name="localTasksCounter" value="161" />
+    <task id="LOCAL-00161" summary="excel proto">
+      <created>1664246841865</created>
+      <option name="number" value="00161" />
+      <option name="presentableId" value="LOCAL-00161" />
+      <option name="project" value="LOCAL" />
+      <updated>1664246841865</updated>
+    </task>
+    <option name="localTasksCounter" value="162" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFConstDesc.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFConstDesc.h b/game/MMO/NFLogicComm/DescStore/achievementachievementDesc.h
rename from game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFConstDesc.h
rename to game/MMO/NFLogicComm/DescStore/achievementachievementDesc.h
--- a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFConstDesc.h	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ b/game/MMO/NFLogicComm/DescStore/achievementachievementDesc.h	(date 1664247955161)
@@ -11,24 +11,25 @@
 
 #include "NFServerComm/NFDescStorePlugin/NFIDescStore.h"
 #include "NFComm/NFShmCore/NFShmMgr.h"
-#include "NFServerLogicMessage/ConstDesc_s.h"
+#include "NFLogicCommon/NFDescStoreTypeDefines.h"
+#include "NFServerLogicMessage/achievement_s.h"
 
-#define MAX_CONST_DESC_NUM 1000
+#define MAX_achievementachievement_NUM 1000
 
-class NFConstDesc : public NFIDescStore
+class achievementachievementDesc : public NFIDescStore
 {
 public:
-	NFConstDesc(NFIPluginManager* pPluginManager);
-    virtual ~NFConstDesc();
+	achievementachievementDesc(NFIPluginManager* pPluginManager);
+    virtual ~achievementachievementDesc();
     int CreateInit();
     int ResumeInit();
-    const proto_ff_s::ConstDesc_s* GetDesc(int id) const;
-    proto_ff_s::ConstDesc_s* GetDesc(int id);
+    const proto_ff_s::achievementachievement_s* GetDesc(int id) const;
+    proto_ff_s::achievementachievement_s* GetDesc(int id);
     virtual bool IsFileLoad() override
     {
         return false;
     }
 public:
-    IMPL_RES_HASH_DESC(proto_ff_s::ConstDesc_s, ConstDesc, MAX_CONST_DESC_NUM);
-	DECLARE_IDCREATE(NFConstDesc);
+    IMPL_RES_HASH_DESC(proto_ff_s::achievementachievement_s, achievementachievement, MAX_achievementachievement_NUM);
+	DECLARE_IDCREATE(achievementachievementDesc);
 };
Index: src/NFComm/NFShmCore/NFTypeDefines.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// -------------------------------------------------------------------------\n//    @FileName         :    NFTypeDefines.h\n//    @Author           :    Gao.Yi\n//    @Date             :   2022-09-18\n//    @Email\t\t\t:    445267987@qq.com\n//    @Module           :    NFPluginModule\n//\n// -------------------------------------------------------------------------\n\n#pragma once\n#include \"NFComm/NFCore/NFPlatform.h\"\n\ntypedef enum\n{\n\tEOT_OBJECT = 0,//0-100的是基础引擎共享内存ID\n\tEOT_GLOBAL_ID = 1, //位置不可修改\n    EOT_TYPE_TIMER_OBJ = 2, //位置不可修改\n    EOT_TYPE_TIMER_MNG = 3, //位置不可修改\n    EOT_TRANS_BASE = 4,\n    EOT_TRANS_MNG = 5,\n    EOT_BASE_DB_OBJ = 6,\n    EOT_TRANS_DB_OBJ = 7,\n    EOT_TRANS_DB_OBJ_MGR = 8,\n    EOT_RPC_TRANS_ID = 9,\n\n\tEOT_SERVER_FRAME_BEGIN_ID = 100,//100-199的是服务器架构共享内存ID\n\tEOT_SERVER_FRAME_END_ID = 299,\n\n\tEOT_MAX_TYPE = 500,\n} EN_FRAME_SHMOBJ_TYPE;\n\n#define REGISTER_SHM_OBJ(ClassName, ClassType, ObjNum ) do{\\\n        ClassName::SetObjSeg(m_pObjPluginManager, ClassType, sizeof(ClassName), (ObjNum), std::string(#ClassName), false, 0, 0);\\\n    }while(0)\n\n#define REGISTER_SINGLETON_SHM_OBJ(ClassName, ClassType, ObjNum ) do{\\\n        ClassName::SetObjSeg(m_pObjPluginManager, ClassType, sizeof(ClassName), (ObjNum), std::string(#ClassName), false, 0, 0, true);\\\n    }while(0)\n\n#define REGISTER_SHM_OBJ_WITH_HASH( ClassName, ClassType, ObjNum ) do{\\\n        ClassName::SetObjSeg(m_pObjPluginManager, ClassType, sizeof(ClassName), (ObjNum), std::string(#ClassName), true, 0, 0);\\\n    }while(0)\n\n#define REGISTER_SHM_OBJ_WITH_EXTERNAL_DATA( ClassName, ClassType, ObjNum, externalObjNum ) do{\\\n        ClassName::SetObjSeg(m_pObjPluginManager, ClassType, sizeof(ClassName), (ObjNum), std::string(#ClassName), false, ClassName::GetExternalDataSize(externalObjNum), externalObjNum, true);\\\n    }while(0)\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/NFComm/NFShmCore/NFTypeDefines.h b/src/NFComm/NFShmCore/NFTypeDefines.h
--- a/src/NFComm/NFShmCore/NFTypeDefines.h	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ b/src/NFComm/NFShmCore/NFTypeDefines.h	(date 1664247818117)
@@ -26,6 +26,9 @@
 	EOT_SERVER_FRAME_BEGIN_ID = 100,//100-199的是服务器架构共享内存ID
 	EOT_SERVER_FRAME_END_ID = 299,
 
+	EOT_DESC_STORE_BEGIN_ID = 300,
+    EOT_DESC_STORE_END_ID = 500,
+
 	EOT_MAX_TYPE = 500,
 } EN_FRAME_SHMOBJ_TYPE;
 
Index: game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFConstDesc.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFConstDesc.cpp b/game/MMO/NFLogicComm/DescStore/achievementachievementDesc.cpp
rename from game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFConstDesc.cpp
rename to game/MMO/NFLogicComm/DescStore/achievementachievementDesc.cpp
--- a/game/MMO/NFServerLogic/NFCommLogic/NFCommLogicPlugin/NFConstDesc.cpp	(revision 8ae220986d9271c103368faffd39ca5408655fbe)
+++ b/game/MMO/NFLogicComm/DescStore/achievementachievementDesc.cpp	(date 1664248170872)
@@ -7,15 +7,15 @@
 //
 // -------------------------------------------------------------------------
 
-#include "NFConstDesc.h"
+#include "achievementachievementDesc.h"
 #include "NFComm/NFPluginModule/NFCheck.h"
 #include "NFComm/NFCore/NFSnprintf.h"
 #include "NFComm/NFShmCore/NFServerFrameTypeDefines.h"
 #include "NFComm/NFPluginModule/NFIConfigModule.h"
 
-IMPLEMENT_IDCREATE_WITHTYPE(NFConstDesc, EOT_CONST_CONFIG_DESC_ID, NFShmObj)
+IMPLEMENT_IDCREATE_WITHTYPE(achievementachievementDesc, EOT_CONST_achievementachievement_DESC_ID, NFShmObj)
 
-NFConstDesc::NFConstDesc(NFIPluginManager* pPluginManager):NFIDescStore(pPluginManager)
+achievementachievementDesc::achievementachievementDesc(NFIPluginManager* pPluginManager):NFIDescStore(pPluginManager)
 {
     if (EN_OBJ_MODE_INIT == NFShmMgr::Instance()->GetCreateMode()) {
         CreateInit();
@@ -25,30 +25,30 @@
     }
 }
 
-NFConstDesc::~NFConstDesc()
+achievementachievementDesc::~achievementachievementDesc()
 {
 
 }
 
-int NFConstDesc::CreateInit()
+int achievementachievementDesc::CreateInit()
 {
     Initialize();
     return 0;
 }
 
-int NFConstDesc::ResumeInit()
+int achievementachievementDesc::ResumeInit()
 {
     return 0;
 }
 
-int NFConstDesc::Load(NFResDB *pDB)
+int achievementachievementDesc::Load(NFResDB *pDB)
 {
     NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "--begin--");
     CHECK_EXPR(pDB != NULL, -1, "pDB == NULL");
 
 	NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "NFConstDesc::Load() strFileName = {}", GetFileName());
 
-	proto_ff::Sheet_ConstDesc table;
+	proto_ff::Sheet_achievementachievement table;
     NFResTable* pResTable = pDB->GetTable(GetFileName());
     CHECK_EXPR(pResTable != NULL, -1, "pTable == NULL, GetTable:{} Error", GetFileName());
 
@@ -60,26 +60,26 @@
 
     CreateInit();
 
-    if ((table.constdesc_list_size() < 0) || (table.constdesc_list_size() > (int)(m_astDesc.GetSize())))
+    if ((table.achievementachievement_list_size() < 0) || (table.achievementachievement_list_size() > (int)(m_astDesc.GetSize())))
     {
-        NFLogError(NF_LOG_COMM_LOGIC_PLUGIN, 0, "Invalid TotalNum:{}", table.constdesc_list_size());
+        NFLogError(NF_LOG_COMM_LOGIC_PLUGIN, 0, "Invalid TotalNum:{}", table.achievementachievement_list_size());
         return -2;
     }
 
-    for (int i = 0; i < table.constdesc_list_size(); i++)
+    for (int i = 0; i < table.achievementachievement_list_size(); i++)
     {
-        const proto_ff::ConstDesc& desc = table.constdesc_list(i);
-        auto pDesc = m_astDesc.Insert(desc.id());
-        CHECK_EXPR(pDesc, -1, "m_astDesc.Insert Failed desc.id:{}", desc.id());
+        const proto_ff::achievementachievement& desc = table.achievementachievement_list(i);
+        auto pDesc = m_astDesc.Insert(desc.achievementid());
+        CHECK_EXPR(pDesc, -1, "m_astDesc.Insert Failed desc.id:{}", desc.achievementid());
         pDesc->read_from_pbmsg(desc);
     }
 
-    NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "load {}, num={}", iRet, table.constdesc_list_size());
+    NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "load {}, num={}", iRet, table.achievementachievement_list_size());
     NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "--end--");
     return 0;
 }
 
-int NFConstDesc::CheckWhenAllDataLoaded()
+int achievementachievementDesc::CheckWhenAllDataLoaded()
 {
     NFLogTrace(NF_LOG_COMM_LOGIC_PLUGIN, 0, "--begin--");
 
@@ -88,11 +88,11 @@
     return 0;
 }
 
-const proto_ff_s::ConstDesc_s *NFConstDesc::GetDesc(int id) const {
+const proto_ff_s::achievementachievement_s *achievementachievementDesc::GetDesc(int id) const {
     return m_astDesc.Find(id);
 }
 
-proto_ff_s::ConstDesc_s *NFConstDesc::GetDesc(int id) {
+proto_ff_s::achievementachievement_s *achievementachievementDesc::GetDesc(int id) {
     return m_astDesc.Find(id);
 }
 
