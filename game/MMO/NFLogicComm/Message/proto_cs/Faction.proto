package proto_ff;

// calm 自定义的fieldoption都在该文件中
import "yd_fieldoptions.proto";
import "common_logic.proto";

import "Com.proto";



//帮派列表信息
message FactionListProto
{
	optional uint32 faction_id = 1;		//帮派ID
	optional bytes name = 2;			//帮派名字
	optional int32 rank = 3;			//排名
	optional uint64 leader_cid = 4;		//帮主cid
	optional bytes leader_name = 5;	//帮主名字
	optional int32 level = 6;			//帮派等级
	optional int32 mem_count = 7;		//成员数量
	optional uint64 fight = 8;			//战力
	optional int32 already_apply = 9;	//是否已申请 1-已申请，0-没有申请
}


//帮派信息
message FactionProto
{
	optional uint32 faction_id = 1;			//帮派ID
	optional bytes name = 2;				//帮派名字
	optional int32 level = 3;				//帮派等级
	optional int32 rank = 4;				//排名
	optional int32 mem_count = 5;			//成员数量
	optional uint64 fight = 6;				//战力
	optional int32 grade = 7;				//排名
	optional uint64 exp = 8;				//经验
	optional string notice = 9;				//公告
	optional uint64 leader_cid = 10;		//帮主cid
	optional bytes leader_name = 11;		//帮主名字
	optional RoleFacadeProto facade = 12;	//帮主外观
	optional int32 apply_type = 13;			//申请类型 1-需要审核，2-禁止申请，3-满足条件自动加入
	optional int32 apply_minlev = 14;		//申请的最小等级
	optional uint64 apply_fight = 15;		//申请的最小战力
}


//帮派成员信息
message FactionMemProto
{
	optional uint64 cid = 1;				//玩家id
	optional bytes name = 2;				//名字
	optional int32 prof = 3;				//玩家职业
	optional int32 vip_level = 4;			//VIP等级
	optional int32 level = 5;				//玩家等级
	optional int32 duty = 6;				//职务 
	optional uint64 fight = 7;				//战力
	optional uint64 total_contri = 8;		//总贡献
	optional int32 is_online = 9;			//是否在线
	optional uint64 logout_time = 10;		//上次下线的 unix 时间（单位：秒）
}
//帮派成员信息列表
message FactionMemListProto
{
	repeated FactionMemProto mem_lst = 1; //成员信息列表
}

//帮派申请
message FactionApplyProto
{
	optional uint64 cid = 1;			//玩家id
	optional bytes name = 2;			//名字
	optional int32 level = 3;			//玩家等级
	optional uint64 fight = 4;			//战力
}
//帮派申请列表
message FactionApplyListProto
{
	repeated FactionApplyProto apply_lst = 1;
}
//帮派成员简要信息
message FactionMemSimpleProto
{
	optional uint64 cid = 1;				//玩家id
	optional bytes name = 2;				//名字
	optional int32 level = 3;				//玩家等级
	optional int32 duty = 4;				//职务 
	optional uint64 fight = 5;				//战力
}
//帮派成员简要信息列表
message FactionMemSimpleListProto
{
	repeated FactionMemSimpleProto simple_lst = 1; //成员简要信息列表
}

//帮派简要信息
message FactionSimpleProto
{
	optional uint32 faction_id = 1;				//帮派ID
	optional bytes name = 2;					//帮派名字
	optional int32 rank = 3;					//排名
	optional uint64 leader_cid = 4;				//帮主cid
	optional bytes leader_name = 5;				//帮主名字
	optional int32 level = 6;					//帮派等级
	optional int32 mem_count = 7;				//成员数量
	optional uint64 fight = 8;					//战力
	optional int32 apply_type = 9;				//申请类型 1-需要审核，2-禁止申请，3-满足条件自动加入
	optional int32 apply_minlev = 10;			//申请的最小等级
	optional uint64 apply_fight = 11;			//申请的最小战力
	optional FactionMemSimpleListProto mem = 12;//简要信息列表
}

//帮派记录
message FactionRecordProto
{
	optional bytes name = 1;		//角色名字
	optional uint64 time = 2;		//时间
	optional int32 op = 3;			//操作类型，1-创建帮派，2-捐献金币
	optional int64 param1 = 4;		//操作类型参数
}
//帮派记录列表
message FactionRecordListProto
{
	repeated FactionRecordProto record_lst = 1;
}


//-------------------------------------------------------------------------------


//登录同步帮派信息给玩家 FACTION_SYNC_LOGIN
message Faction_SyncLoginRsp
{
	optional FactionProto info = 1;				//帮派信息
	optional int32 duty = 2;					//成员职务
}

//同步帮派信息给玩家 FACTION_SYNC_INFO
message Faction_SyncInfoRsp
{
	optional uint32 faction_id = 1;		//帮派ID
	optional bytes name = 2;			//帮派名字
	optional int32 duty = 3;			//职务
}

//玩家 帮派详细信息 FACTION_INFO_REQ
message Faction_InfoReq
{
	//空
}
//玩家 帮派详细信息 FACTION_INFO_RSP
message Faction_InfoRsp
{
	required int32 ret = 1;
	optional FactionProto info = 2;				//帮派信息
}

//请求 帮派列表 FACTION_LIST_REQ
message Faction_InfoListReq
{
	//空
}
//返回 帮派列表 FACTION_LIST_RSP
message Faction_InfoListRsp
{
	repeated FactionListProto info_lst = 1;
}

//请求 帮派简要信息 FACTION_SIMPLE_REQ
message Faction_SimpleReq
{
	optional uint32 faction_id = 1; //帮派ID
}
//返回 帮派简要信息 FACTION_SIMPLE_RSP
message Faction_SimpleRsp
{
	required int32 ret = 1;
	optional FactionSimpleProto simple = 2;
}
//请求 帮派成员列表 FACTION_MEM_LIST_REQ
message Faction_MemListReq
{
	//空
}
//返回 帮派成员列表 FACTION_MEM_LIST_RSP
message Faction_MemListRsp
{
	required int32 ret = 1;
	optional FactionMemListProto mem_lst = 2;
}

//请求 创建帮派  FACTION_CREATE_REQ
message Faction_CreateReq
{
	optional bytes name = 1;	//帮派名字
	optional bytes notice = 2;	//公告
}
//返回 创建帮派  FACTION_CREATE_RSP
message Faction_CreateRsp
{
	required int32  ret = 1;
	optional FactionProto info = 2;		//帮派信息
}
//请求帮派申请列表  FACTION_APPLY_LIST_REQ
message Faction_ApplyListReq
{
	//空
}
//返回帮派申请列表  FACTION_APPLY_LIST_RSP
message Faction_ApplyListRsp
{
	required int32 ret = 1;
	optional FactionApplyListProto info = 2;
}
//申请加入帮派  FACTION_APPLY_JOIN_REQ
message Faction_ApplyJoinReq
{
	optional uint32 faction_id = 1;
}
//返回 申请加入帮派结果  FACTION_APPLY_JOIN_RSP
message Faction_ApplyJoinRsp
{
	required int32 ret = 1;
	optional uint32 faction_id = 2;
}

//请求 操作帮派申请 FACTION_APPLY_OP_REQ
message Faction_ApplyOperateReq
{
	optional int32 op = 1;		//操作类型，1-同意，2-拒绝
	optional uint64 cid = 2;	//申请角色的cid
}
//返回 操作帮派申请结果 FACTION_APPLY_OP_RSP
message Faction_ApplyOperateRsp
{
	required int32 ret = 1;
	optional int32 op = 2;						//操作类型，1-同意，2-拒绝
	optional uint64 cid = 3;					//申请角色的cid
	optional FactionMemListProto mem_lst = 4;	//新进入帮派的成员列表
}
//请求踢出帮派成员 FACTION_KICK_REQ
message Faction_KickReq
{
	repeated uint64 cid_lst = 1; //被踢出的成员cid
}
//返回  踢出帮派成员结果 FACTION_KICK_RSP
message Faction_KickRsp
{
	required int32 ret = 1;
	repeated uint64 cid_lst = 2; //被踢出的成员cid
}
//请求 退出帮派 FACTION_QUIT_REQ
message Faction_QuitReq
{
	//空
}
//返回 退出帮派结果 FACTION_QUIT_RSP
message Faction_QuitRsp
{
	required int32 ret = 1;
}
//请求 任命职位 FACTION_APPOINT_REQ
message Faction_AppointReq
{
	optional uint64 cid = 1;	//任命的成员cid
	optional int32 duty = 2;	//任命的职位
}
//返回 任命职位 结果  FACTION_APPOINT_RSP
message Faction_AppointRsp
{
	required int32 ret = 1;
	optional uint64 cid = 2;		//任命的成员cid
	optional int32 duty = 3;		//任命的职位
	optional int32 self_duty = 4;	//主动任命者的职位，主要针对转让帮主后，帮主变成普通成员
}

//请求 修改公告 FACTION_CHG_NOTICE_REQ
message Faction_ChgNoticeReq
{
	optional bytes notice = 1;
}
//返回 修改公告 FACTION_CHG_NOTICE_RSP
message Faction_ChgNoticeRsp
{
	required int32 ret = 1;
	optional bytes notice = 2;
}

//请求 设置申请加入类型	FACTION_SET_APPLY_REQ
message Faction_SetApplyReq
{
	optional int32 type = 1;	//条件类型， 1 需要会长审核, 2 禁止加入, 3 满足条件自动加入
	optional int32 level = 2;	//等级限制
	optional uint64 fight = 3;  //战力限制
}
//返回 设置申请加入类型 FACTION_SET_APPLY_RSP
message Faction_SetApplyRsp
{
	required int32 ret = 1;
	optional int32 type = 2;	//条件类型， 1 需要会长审核, 2 禁止加入, 3 满足条件自动加入
	optional int32 level = 3;	//等级限制
	optional uint64 fight = 4;  //战力限制
}

//请求 一键申请帮派 FACTION_ONE_KEY_APPLY_JOIN_REQ
message Faction_OneKeyApplyReq
{
	//空
}
//返回 一键申请帮派 FACTION_ONE_KEY_APPLY_JOIN_RSP
message Faction_OneKeyApplyRsp
{
	required int32 ret = 1;
	repeated uint32 id_lst = 2; //一键申请的帮派id列表
}

//请求 修改帮派名字 FACTION_CHG_NAME_REQ
message Faction_ChgNameReq
{
	optional bytes name = 1;
}
//返回 修改帮派名字 FACTION_CHG_NAME_RSP
message Faction_ChgNameRsp
{
	required int32 ret = 1;
	optional bytes name = 2;
}

//新的帮派申请通知 FACTION_NEW_APPLY_NOTIFY
message Faction_NewApplyNotify
{
	//空
}

//邀请玩家加入帮派 FACTION_INVITE_JOIN_REQ
message Faction_InviteJoinReq
{
	optional uint64 cid = 2;		//邀请加入帮派的玩家cid
}
//返回 邀请玩家加入帮派结果 FACTION_INVITE_JOIN_RSP
message Faction_InviteJoinRsp
{
	required int32 ret = 1;
}
//邀请加入帮派的通知 FACTION_INVITE_JOIN_NOTIFY
message Faction_IviteJoinNotify
{
	required uint64 cid = 1;		//发出邀请的玩家cid
	required bytes name = 2;		//发出邀请的玩家名字
	required uint32 faction_id = 3; //帮派ID
	required bytes faction_name = 4;//帮派名字
}

//请求帮派记录 FACTION_RECORD_LIST_REQ
message Faction_RecordListReq
{
	//空
}
//返回帮派记录 FACTION_RECORD_LIST_RSP
message Faction_RecordListRsp
{
	required int32 ret = 1;
	optional FactionRecordListProto lst = 2;
}

//----------------------------------------------------------


//中心服返回逻辑服更新信息  FACTION_CL_ROLE_UPDATE
message CL_FactionRoleUpdateRsp
{
	required uint64 cid = 1;		//玩家ID
	required uint32 faction_id = 2;	//帮派ID
	required bytes name = 3;		//帮派名字
	required int32 duty = 4;		//帮派职位
	required int32 level = 5;		//帮派等级
	required uint64 leader = 6;		//帮派会长
}
//逻辑服请求中心服创建帮派 FACTION_LC_CREATE
message LC_FactionCreate
{
	required uint64 cid = 1;
	required bytes name = 2;	//帮派名字
	required bytes notice = 3;	//公告
}
//中心服返回逻辑服创建帮派成功 FACTION_LC_CREATE_RESULT
message CL_FactionCreateResult
{
	required uint64 cid = 1;
}
//逻辑服请求中心服帮派改名 FACTION_LC_CHG_NAME
message LC_FactionChgName
{
	required uint64 cid = 1;
	required bytes name = 2;
}
//中心服返回逻辑服帮派改名结果 FACTION_CL_CHG_NAME_RESULT
message CL_FactionChgNameResult
{
	required int32 ret = 1;
	required uint64 cid = 2;
}