// 定义公用message，注意与ComDefine.proto区别

import "ProtoBuffer/Com.proto";
package ProtoBuf;

//邮件物品
message MailItemProto
{
  optional uint64 itemid = 1;
  optional int64 num = 2;
  optional int32 bind = 3;
}

//邮件头结构
message MailSimpleProto
{
  optional uint64 mailId							= 1;			//邮件ID
  optional uint32 type							= 2;			//邮件类型
  optional uint64 sendPlayerId					= 3;			//发件人ID
  optional bytes sendPlayerName					= 4;			//发送人的名称
  optional int32 source							= 5;			//邮件来源 3-拾取掉落,其他的后面有需要在增加定义
  optional MailStrProto topic						= 6;			//邮件主题
  optional uint64 createTime						= 7;			//邮件创建时间
  optional uint32 status							= 8;			//邮件已读状态
  optional int32  fetch							= 9;			//是否已领取
  optional int32 has_attach						= 10;			//是否有附件（金币，钻石，绑钻，竞技场积分，神钻，物品等）
  optional uint64 begin_time						= 11;			//开始有效期(为0表示没有开始有效期，默认为0)
  optional uint64	end_time						= 12;			//结束有效期(为0表示没有结束有效期，默认为0)
}


//获取邮件列表
message CWGetMailItemListReq
{

}

//返回邮件列表
message WCGetMailItemListRsp
{
  repeated MailSimpleProto mailHead = 1;
}

//获取邮件详细信息
message CWAskMailReq
{
  optional uint32 mailId = 1;
}

//邮件详细信息返回  SERVER_TO_CLIENT_ASKMAIL
message WCAskMailRsp
{
  optional uint32 mailId 							= 1;
  optional MailStrProto content       = 2;			//邮件正文内容
  optional int32 gold                 = 3;			//金币
  optional int32 diamond							= 4;			//钻石
  optional int32 bindDiamond          = 5;			//绑定钻石
  optional int32 magiccrystal         = 6;    //魔晶
  optional int32 prestige             = 7;    //声望
  optional MailAttachmentList attachmentList		= 10;			//附件具体内容
}

//是否有未读的邮件
message WCUnReadMailNotify
{
  optional bool hasNew = 1;
}

message MailAttachment
{
  optional uint32 type = 1; //类型 1为装备 2为宠物
  optional uint32 gridIndex = 2; //背包索引
  optional uint32 num = 3; //数量
}

//发送邮件
message CWSendMailReq
{
  optional uint32 mailType = 1; //1是普通邮件 2是交易邮件 3是已经查看或回退的交易邮件 4是系统邮件
  optional bytes targetName = 2;
  optional uint64 targetId = 3;
  optional bytes title = 4;
  optional bytes content = 5;
  optional uint32 sellType = 6;  //交易出售的货币类型
  optional uint32 sellNum = 7; //好意出售的价格
  repeated MailAttachment mailAttachment = 8; //附件
}
//废弃
message WCSendMailRsp
{
  optional uint32 ret = 1;
}
//请求删除邮件
message CWDeleteMailReq
{
  repeated uint32 idList = 1;
}
//返回删除邮件
message WCDeleteMailRsp
{
  repeated uint32 idList = 1;
}
//新邮件通知
message WCNewMailNotify
{
  optional MailSimpleProto mailHead = 1;
}

//请求提取单个附件邮件
message CWGetMailAttachmentReq
{
  optional uint32 mailId = 1;
}
//返回提取单个附件邮件
message GCGetMailAttachmentRsp
{
  optional uint32 ret = 1;
  optional uint32 mailId = 2;
}

//一键提取
message CWGetAllMailAttachmentReq
{

}

//一键提取返回
message GCGetAllMailAttachmentRsp
{
  optional uint32 ret = 1;
  repeated uint32 idList = 2;
}

//交易邮件退信 （废弃）
message CWNdrMailReq
{
  optional uint32 mailId = 1;
}
//（废弃）
message CWNdrMailRsp
{
  optional uint32 ret = 1;
}

//-------------------- server protocol ------------------
//发送邮件 （废弃）
message WGSendMailReq
{
  optional uint64 charId = 1;
  optional CWSendMailReq req = 2;
}
//（废弃）
message GWSendMailReq
{
  optional uint32 mailType = 1;
  optional uint64 sendId = 2;
  optional bytes targetName = 3;
  optional uint64 targetId = 4;
  optional bytes title = 5;
  optional bytes content = 6;
  optional uint32 sellType = 7;
  optional int32 sellNum = 8;
  optional MailAttachmentList attachment = 9;
}
//中心服请求逻辑服 领取邮件附件
message WGGetMailAttachmentReq
{
  optional uint64 charId = 1;
  optional uint32 mailId = 2;
  optional uint32 mailType = 3;
  optional int32 gold = 4;
  optional int32 diamond = 5;
  optional int32 bindDiamond = 6;
  optional int32 magiccrystal = 7;			//魔晶
  optional int32 prestige = 8;//声望
  optional MailAttachmentList attachment = 9;
  optional int32 source = 10;
  optional int64 sourceVal = 11;
  optional MailStrProto topic	= 12;
  optional MailStrProto content = 13;
}

//用于提取附件成功后通知世界服修改邮件数据
message GWUpdateMailNotify
{
  optional uint64 charId = 1;
  repeated uint32 idList = 2;
  optional uint32 ret = 3;
}

//一封邮件的附件数据
message OneMailAttachmentData
{
  optional uint32 mailId = 1;
  optional int32 gold = 2;
  optional int32 diamond = 3;
  optional int32 bindDiamond = 4;
  optional int32 magiccrystal = 5;			///魔晶
  optional int32 prestige = 6; //声望
  optional MailAttachmentList attachment = 7;
  optional uint32 source = 8;
  optional int64 sourceVal = 9;
  optional MailStrProto topic	= 10;
  optional MailStrProto content = 11;
}

//通知逻辑服一键领取
message WGGetAllMailAttachmentReq
{
  optional uint64 charId = 1;
  repeated OneMailAttachmentData attachmentDataList = 2;
}

//发送系统邮件
message GWSendSystemMailReq
{
  optional uint64 destId = 1;				//接收方ID
  optional uint64 srcId = 2;				//发送方ID
  optional MailStrProto topic = 3;		//主题
  optional MailStrProto content = 4;		//内容
  optional int32 gold = 5;
  optional int32 diamond = 6;
  optional int32 bindDiamond = 7;
  optional int32 magiccrystal = 8;				//魔晶
  optional int32 prestige = 9;      //声望
  optional MailAttachmentList attachment = 10;	//附件（有附件时就没有物品数据，有物品数据的时候就没有附件）
  repeated MailItemProto itemlst = 11;		//物品数据
  optional int32 source = 12;
  optional uint64 begin = 13;				//起始时间
  optional uint64 end = 14;				//结束时间
  optional int64 sourceVal = 15;
}

//运营系统邮件信息
message SysMailInfo
{
  optional string mailId = 1;
  optional MailAttachmentList attachment = 2;
  optional string topic = 3;
  optional string content = 4;
  optional uint32 gold = 5;
  optional uint32 diamond = 6;
  optional uint32 bindGold = 7;
  optional uint32 bindDiamond = 8;
  optional uint32 arenaScore = 9;
  optional uint32 endTime = 10;
  optional uint32 holydia = 11;
}