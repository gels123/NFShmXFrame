package proto_ff;

// calm 自定义的fieldoption都在该文件中
import "yd_fieldoptions.proto";
import "common_logic.proto";

import "Com.proto";


//增加关系同步消息 (添加好友，黑名单 成功后发送的玩家信息)
message WCRelationSyncNotifyRsp
{
	required uint32 groupIndex = 1;						//分组索引     0:好友 1:黑名单 2:仇人 3:最近联系人 4:好友申请列表
	required RolePlayerMiniInfo friendInfo = 2;	//好友信息
}

//删除关系同步消息 (删除好友，黑名单 成功后发送的消息)
message WCRelationSyncDelNotifyRsp
{
	required uint32 groupIndex = 1;		//分组索引     0:好友 1:黑名单 2:仇人 3:最近联系人 4:好友申请列表
	repeated uint64 playerIdList = 2;   //删除的玩家ID
}

//--------------------------------------------------------------------------------------

//请求好友分组信息
message CWRelationDataReq
{
	required uint32 groupIndex = 1; //分组
}

//好友分组信息返回
message WCRelationDataRsp
{
	required uint32 groupIndex = 1;					//分组
	repeated RolePlayerMiniInfo friendInfo = 2;	//好友信息
}

//上下线通知
message WCRealtionOnlineNotify
{
	required uint64 playerId = 1;		//角色ID
	required bool isOnline = 2;         //是否在线 true:在线 false:下线
	optional uint64 offlineTime = 3;	//下线时间(下线有效)（UTC时间戳）
}

//申请添加好友  
message CWAddFriendApplyReq
{
	optional uint64 playerId = 1;		//要添加的玩家ID
	optional string name = 2;			//要添加的玩家名字(ID为0时)
	optional string content = 3;		//内容
}

//申请添加好友返回
message WCAddFriendApplyRsp
{
	required uint32 ret = 1;		//状态码
}

//同意好友申请     同意、一键同意
message CWAgreeFriendApplyReq
{
	repeated uint64 playerIdList = 1;   //同意的玩家ID
}

//同意好友申请     返回消息
message WCAgreeFriendApplyRsp
{
	required uint32 ret = 1;		//状态码
}

//添加黑名单请求
message CWAddBlackReq
{
	required uint64 playerId = 1;		//要添加的玩家ID
}

//添加黑名单返回消息
message CWAddBlackRsp
{
	required uint32 ret = 1;		//状态码
}

//添加屏蔽发言请求
message CWAddShieldReq
{
	required uint64 playerId = 1;		//要添加的玩家ID
}

//添加屏蔽发言返回消息
message CWAddShieldRsp
{
	required uint32 ret = 1;		//状态码
}

//删除关系
message CWDeleteRelationReq
{
	required uint32 groupIndex = 1;   //分组索引   0:好友 1:黑名单 2:仇人 3:最近联系人 4:好友申请列表  （仇人不可主动删除）
	repeated uint64 playerIdList = 2; //删除的玩家ID
}

//删除关系返回
message WCDeleteRelationRsp
{
	required uint32 ret = 1;		    //状态码
}

//好友推荐
message CWRecommendFriendReq
{
	required bool again = 1;			//True表示换一批
}

//好友推荐返回
message WCRecommendFriendRsp
{
	required uint32 ret = 1;
	repeated RolePlayerMiniInfo recommend = 2;
}


//通知逻辑服 好友事件
message WGNotifyAddFriend
{
	required uint64 charId = 1;
	required uint32 operate_type = 2;	//1:增加好友 2:击杀仇人
	optional uint32 addNum = 3;			//增加好友数量
	optional uint32 curNum = 4;			//当前好友数量
}

//逻辑服通知中心服 增加仇恨列表
message GWAddHateReq
{
	required uint64 srcID = 1;
	required uint64 dstID = 2;
}

//逻辑服通知中心服 添加最近联系人
message GWAddRecentReq
{
	required uint64 srcID = 1;
	required uint64 dstID = 2;
	optional uint32 nType = 3;  //联系类型	
}



////////////////////////////////////////////  送礼   //////////////////////////////////////////////

//送礼记录，单个记录数据
message GiftGivingRecord
{
	optional uint32 nRecordId = 1;		//记录id	
	optional string sName = 2;			//玩家名字
	optional uint64 playerId = 3;		//玩家id
	optional uint64 itemId = 4;			//礼物id
	optional bool   bThank = 5;         //是否已感谢
	optional uint32 sendType = 6;       //0：别人送我    1：我送别人
}

//获取送礼记录请求 CLIENT_TO_CENTER_GIFT_GIVING_RECORD
message CWGetGiftGivingRecordReq
{

}

//获取送礼记录返回 CENTER_TO_CLIENT_GIFT_GIVING_RECORD
message WCGetGiftGivingRecordRsp
{
	optional uint32 ret = 1;
	repeated GiftGivingRecord records = 2;
}

//送礼请求 CLIENT_TO_CENTER_GIVING_GIFT
message CWGivingGiftReq
{
	optional uint64 itemId = 1;		//礼物id
	optional uint64 playerId = 2;	//玩家id
}

//送礼返回 CENTER_TO_CLIENT_GIVING_GIFT
message WCGivingGiftRsp
{
	optional uint32 ret = 1;		//错误码
	optional uint64 playerId = 2;	//玩家id
	optional uint64 closeness = 3;  //送礼后的亲密度
	optional uint64 itemId = 4;
}

//收到送礼 CENTER_TO_CLIENT_GIVING_GIFT_NOTICE
message WCGivingGiftNotice
{
	optional string userName = 1;
	optional uint64 itemId = 2;		//礼物id
}


//感谢 CLIENT_TO_CENTER_THANKS_GIVING_GIFT
message WCThankGiving
{
	optional uint32 nRecordId = 1;			//记录id	
}



/////////////////////////// 服务器内部使用的协议 ////////////////////////////////////////////////////////////

//逻辑服通知中心服请求送礼 LOGIC_TO_CENTER_GIVING_GIFT
message GWGivingGiftReq
{
	optional uint64 selfId = 1;			//玩家id
	optional uint64 targetId = 2;		//目标玩家id
	optional uint64 itemId = 3;			//礼物id
	optional uint32 useItemNum = 4;		//消耗物品数量
	optional uint64 useDiamond = 5;		//消耗钻石数量
	optional uint64 useBindDiamond = 6;	//消耗绑钻数量
}

//中心服通知逻辑服送礼错误 CENTER_TO_LOGIC_GIVING_GIFT_ERROR
message WGGivingGiftErrorNotice
{
	optional uint64 selfId = 1;			//玩家id
	optional uint64 itemId = 2;			//礼物id
	optional uint32 useItemNum = 3;		//消耗物品数量
	optional uint64 useDiamond = 4;		//消耗钻石数量
	optional uint64 useBindDiamond = 5;	//消耗绑钻数量
}

///////////////////////////服务器内部使用的协议////////////////////////////////////////////////////////////