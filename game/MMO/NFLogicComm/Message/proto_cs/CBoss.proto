package proto_ff;

// calm 自定义的fieldoption都在该文件中
import "yd_fieldoptions.proto";
import "common_logic.proto";

import "Com.proto";


//----------------------------------数据结构----------------------------------------

//上次击杀记录
message BossLastKillInfo
{
	optional uint64 	teamId 	=1;
	optional string 	name = 2;
	optional uint64		id = 3;
}

// 1：boss基本信息
message BossInfo {
	
	optional uint64 id 				= 1;		// 配置ID
	optional uint64 refresh_time 	= 2;		// 刷新时间(未来时间戳)
	optional int32 	attention 		= 3;		// 关注(0,1) 0:未关注 1：关注
	optional int32 	boss_state		= 4;		// boss状态(活的,死亡)
	optional BossLastKillInfo last  = 5;		// 击杀信息
}



//2：组简单信息(包括各种类型的次数等,包括BOSS组类型)
message BossSimpleInfo
{
	optional int32  boss_type 		= 1;		// 组类型
	optional int32	cur_num			= 2;		// 当前使用的次数
	optional int32 	max_num			= 3;		// 最大次数
	optional int32  back_num		= 4;		// 找回次数
	optional int32 	back_max_num	= 5;		// 找回最大次数
	optional int32 	enter_num		= 6;		// 进场景次数
	optional int32 	enter_max_num	= 7;		// 进场景最大次数
	
}


// boss掉落信息
message BossDropInfo {
	optional int32  drop_time 		= 1;		// 掉落时间
	optional uint64 id 				= 2;		// 玩家ID
	optional string name 			= 3;		// 玩家名称
	optional uint64 boss_id 		= 4;		// BOSS ID
	optional ItemProtoInfo iteminfo = 5;		// 装备信息
}

//--------------------------------获取BOSS页数据--------------------------------


//1-1:BOSS简单数据 NOTIFY_BOSS_SIMPLE_RSP
message NotifyBossSimpleRsp
{
	optional int32 flag = 1;				//0 全发，1 单更新
	repeated BossSimpleInfo simples			= 2;
}


//2-1：boss 信息请求 BOSS_DATA_REQ
message BossDataReq
{
	optional int32 type =1;
}

//2-2: boss 信息返回 BOSS_DATA_RSP
message BossDataRsp
{
	optional int32 type =1;
	repeated BossInfo infos = 2;
}

//3-1：场景BOSS数据 NOTIFY_SCENE_BOSS_DATA_RSP
message NotifySceneBossDataRsp
{
	repeated BossInfo infos = 1;
}
//3-2 ：BOSS 场景更新 NOTIFY_SCENE_BOSS_UPDATE_RSP
message NotifySceneBossUpdateRsp
{
	optional BossInfo info = 1;
}


//4-1：关注BOSS信息变更通知 NOTIFY_BOSS_INFO_RSP
message NotifyBossInfoRsp
{
	repeated BossInfo infos = 1;
}


// 5-1进入BOSS地图	 ENTER_BOSS_MAP_REQ			
message EnterBossMapReq 
{
	optional int64		id				= 1;		// 配置唯一ID
}

// 5-2进入BOSS地图返回	ENTER_BOSS_MAP_RSP
message EnterBossMapRsp
{
	optional int32 ret					= 1;		// 返回成功0 
	optional int64 id					= 2;		// 配置唯一ID
}


// 6-1关注Boss请求	ATTENT_BOSS_REQ
message AttentBossReq {
	optional int64		id				= 1;		// 配置唯一ID
	optional int32		opt 			= 2;		// 取消关注(0) 关注1
}

// 6-2关注BOSS返回 ATTENT_BOSS_RSP
message AttentBossRsp
{
	optional int64		id				= 1;		// 配置唯一ID
	optional int32		opt 			= 2;		// 取消关注(0) 关注1
	optional int32 		ret				= 3;		// 返回码
}


//8-1: boss掉落 BOSS_DROP_REQ
message BossDropReq 
{
	optional int32 	enterType = 1;
}
//8-2: boss掉落 BOSS_DROP_RSP
message BossDropRsp
{
	optional int32 	enterType = 1;
	repeated BossDropInfo bossDrop = 2;
}

//9-1 boss结算 NOTIFY_BOSS_RESULT_RSP
message NotifyBossResultRsp
{
	optional int32 	flag = 1;		//0:客户端判断能否快速击杀 1：已经快速击杀过
	optional int64  id = 2;
	repeated ItemProtoInfo com = 3;
	repeated ItemProtoInfo first = 4;

}

//10-1: 快速击杀boss 	BOSS_KILL_REQ 
message BossKillReq
{
	optional uint64 id = 1;
}
//10-1: 快速击杀boss BOSS_KILL_RSP
message BossKillRsp
{
	optional uint64 id = 1;
	optional int32 ret = 2;
}


//===============================================服务器内部消息=========================================

message BossGlobalData
{
	repeated BossLastKillInfo infos = 1; //boss击杀信息
	repeated BossDropInfo 	log = 2;	//魔王日志
	repeated BossDropInfo	log2 = 3;	//世界日志
}

message RunBossInfo
{
	optional uint64 	id = 1;
	optional int32  	state = 2;
	optional int32  	refresh_time = 3;
}

//更新BOSS数据 L2C_UPDATE_BOSS_REQ
message L2CUpdateBossReq
{
	repeated RunBossInfo infos = 1;
}

//同步关注信息 L2C_SYN_ATTENT_REQ
message L2CSynAttentReq
{
	optional int64 cid = 1;
	repeated int64 ids = 2;
	optional int32 opt = 3;		//0:取消关注，1关注
}

//推送boss数据给玩家  L2C_KILL_BOSS_REQ
message L2CKillBossInfoReq
{
	optional uint64 	teamId 	=1;
	optional string 	name = 2;
	optional uint64		id = 3;
}

//boss 掉落数据 L2C_BOSS_DROP_REQ
message L2CDropRecordReq
{
	repeated BossDropInfo drop_info = 1;
}