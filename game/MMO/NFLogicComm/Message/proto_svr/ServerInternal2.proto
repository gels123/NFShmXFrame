package proto_ff;

import "DBProxy.proto";
import "DBProxy2.proto";

import "Com.proto";
import "ComDefine.proto";

//中心服通知网关退出游戏  NOTIFY_GATE_LEAVE_GAME
message NotifyGateLeaveGame2
{
  optional uint64 clientid = 1;
  optional LOGOUT_TYPE leave_flag = 3;
}

//网关通知中心服客户端掉线 NOTIFY_CENTER_DISCONNECT
message NotifyCenterDisConnect2
{
  optional uint64 clientId = 1;
  optional uint64 cid =2;
  optional int32	errflag=3;
}

message ProxyServerBusInfo
{
  optional uint32 server_type = 1;
  optional uint32 bus_id = 2;
}

message WroldToProxyChangeServerBusId
{
  repeated ProxyServerBusInfo server_info = 1;
}

message WorldToOtherServerDisconnectNotify
{
  optional uint64 roleId = 1;
  optional uint32 reason = 2;
}

//中心服通知逻辑服退出游戏      NOTIFY_LOGIC_LEAVE_GAME_REQ
message NotifyLogicLeaveGameReq2
{
  required uint64 cid = 1;
  required uint64 uid = 2;
  optional LOGOUT_TYPE  type = 3;
}

//逻辑服返回中心服退出游戏结果   NOTIFY_LOGIC_LEAVE_GAME_RSP
message NotifyLogicLeaveGameRsp2
{
  required uint64 cid = 1;
  required uint64 uid = 2;
  optional int32 logout_type = 3;	//登出类型
}

//LTS_LOGIN_RPC = 5001; //逻辑服登录RPC
message LTSLoginReq
{
  optional uint64                 cid					= 1;	// role cid
  optional uint32                 zid					= 2;    // 区服ID
  optional uint32					        uid					= 3;    // UID
  optional RoleDBBaseData         base				= 4;    // 基础数据
  optional uint32                 proxy_id    = 5;
  optional uint32                 logic_id    = 6;
  optional uint32                 game_id     = 7;
}

message STLLoginRsp
{
  optional int32 ret = 1;
}

message RegisterMapInfoReq
{
  optional uint32 bus_id = 1;
  repeated uint32 map_id = 2;
}

message ReigsterMapInfoRsp
{
  optional int32 ret_code = 1;
}

message ClientEnterGameInternalRsp
{
  optional int32 ret_code = 1;
  optional uint32 logic_id = 2;
  optional uint32 game_id = 3;
  optional uint32 sns_id = 4;
}

message EnterSceneReq
{
  optional uint64 cid = 1;
  optional uint64 dst_map_id = 2;
  optional uint64 dst_scene_id = 3;
  optional Vector3PB dst_pos = 4;
  optional uint64 src_map_id = 5;
  optional uint64 src_scene_id = 6;
  optional Vector3PB src_pos = 7;
  optional uint32 trans_type = 8;
  optional RoleEnterSceneData data = 9;
  optional uint32 proxy_id = 10;
  optional uint32 logic_id = 11;
  optional uint32 sns_id = 12;
  optional uint32 world_id = 13;
  optional SceneTransParam trans_param = 14;
}

message EnterSceneRsp
{
  optional uint64 ret_code = 1;
  optional uint32 game_id = 2;
  optional uint64 map_id = 3;
  optional uint64 scene_id = 4;
  optional Vector3PB pos = 5;
}

//STS_NOTIFY_ROLE_ENTER_SERVER = 5005; //通知玩家服务器消息改变
message NotifyPlayerEnterServer
{
  optional uint32 uid = 1;
  optional uint64 cid = 2;
  optional uint32 logic_id = 3;
  optional uint32 sns_id = 4;
}