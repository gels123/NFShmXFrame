package proto_ff;

import "yd_fieldoptions.proto";


message E_AvatarFragmentAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_AvatarFragment
{
	optional int64 m_fragmentID = 1[(yd_fieldoptions.field_cname) = "碎片ID"];
	optional int64 m_item = 2[(yd_fieldoptions.field_cname) = "物品ID"];
	optional int32 m_itemNum = 3[(yd_fieldoptions.field_cname) = "碎片使用上限"];
	repeated E_AvatarFragmentAttributeDesc m_attribute = 4[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 5];
}


message Sheet_AvatarFragment
{
	repeated E_AvatarFragment E_AvatarFragment_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_AvatarValueAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_AvatarValue
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "类型"];
	optional int32 m_lv = 3[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_cost = 4[(yd_fieldoptions.field_cname) = "升星消耗数量"];
	optional int32 m_Exp = 5[(yd_fieldoptions.field_cname) = "升级需要经验"];
	repeated E_AvatarValueAttributeDesc m_Attribute = 6[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 13];
}


message Sheet_AvatarValue
{
	repeated E_AvatarValue E_AvatarValue_List = 1[(yd_fieldoptions.field_arysize)=4096];
}

message E_AvatarDisplayMaterialDesc
{
	optional int32 m_exp = 1[(yd_fieldoptions.field_cname) = "经验值"];
	optional int32 m_id = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_AvatarDisplay
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_UpLvType = 2[(yd_fieldoptions.field_cname) = "升级参考类型"];
	optional string m_skillID = 3[(yd_fieldoptions.field_cname) = "解锁技能组", (yd_fieldoptions.field_bufsize) = 64];
	repeated E_AvatarDisplayMaterialDesc m_material = 4[(yd_fieldoptions.field_cname) = "升级材料", (yd_fieldoptions.field_arysize) = 3];
	repeated int64 m_fragmentID = 5[(yd_fieldoptions.field_cname) = "关联碎片ID", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_AvatarDisplay
{
	repeated E_AvatarDisplay E_AvatarDisplay_List = 1[(yd_fieldoptions.field_arysize)=2];
}

message E_AvatarChangeMaterialDesc
{
	optional int32 m_exp = 1[(yd_fieldoptions.field_cname) = "经验值"];
	optional int32 m_id = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_AvatarChangeAttributeDesc
{
	optional int32 m_UpValue = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_UpBer = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_AvatarChange
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_quality = 2[(yd_fieldoptions.field_cname) = "品质"];
	optional int32 m_UpLvType = 3[(yd_fieldoptions.field_cname) = "升级参考类型"];
	optional int64 m_avatarSkill = 4[(yd_fieldoptions.field_cname) = "变身技能"];
	optional int32 m_avatarCD = 5[(yd_fieldoptions.field_cname) = "变身cd"];
	optional int32 m_avatarTime = 6[(yd_fieldoptions.field_cname) = "变身时长"];
	optional int32 m_avatarShield = 7[(yd_fieldoptions.field_cname) = "变身护盾效率"];
	optional string m_skillID = 8[(yd_fieldoptions.field_cname) = "解锁技能组", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_starMax = 9[(yd_fieldoptions.field_cname) = "星星上限"];
	optional int32 m_LvMax = 10[(yd_fieldoptions.field_cname) = "等级上限"];
	optional int32 m_ModelID = 11[(yd_fieldoptions.field_cname) = "模型id"];
	optional int32 m_advance = 12[(yd_fieldoptions.field_cname) = "进阶类型"];
	optional int32 m_activationItem = 13[(yd_fieldoptions.field_cname) = "激活需要的道具"];
	optional int32 m_activationNum = 14[(yd_fieldoptions.field_cname) = "激活需要的道具数量"];
	optional int32 m_starId = 15[(yd_fieldoptions.field_cname) = "升星需要道具ID"];
	optional string m_starNum = 16[(yd_fieldoptions.field_cname) = "升星需要数量", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_starUpAttributeId = 17[(yd_fieldoptions.field_cname) = "星级属性类型"];
	optional int32 m_funUnlock = 18[(yd_fieldoptions.field_cname) = "天神解锁条件"];
	optional int32 m_maxEquip = 19[(yd_fieldoptions.field_cname) = "最高装备品质"];
	optional int32 m_equipSuit = 20[(yd_fieldoptions.field_cname) = "套装id"];
	optional int32 m_starBer = 21[(yd_fieldoptions.field_cname) = "每星级提升百分比"];
	optional string m_mythSkill = 22[(yd_fieldoptions.field_cname) = "化神被动技能", (yd_fieldoptions.field_bufsize) = 64];
	optional string m_mythSPSkill = 23[(yd_fieldoptions.field_cname) = "化神专属技能", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_mythID = 24[(yd_fieldoptions.field_cname) = "化神组ID"];
	optional int32 m_mythWayID = 25[(yd_fieldoptions.field_cname) = "神格组id"];
	optional int32 m_mythCoreID = 26[(yd_fieldoptions.field_cname) = "神核组ID"];
	repeated E_AvatarChangeMaterialDesc m_material = 27[(yd_fieldoptions.field_cname) = "升级材料", (yd_fieldoptions.field_arysize) = 3];
	repeated int64 m_InitiativeSkill = 28[(yd_fieldoptions.field_cname) = "主动技能", (yd_fieldoptions.field_arysize) = 7];
	repeated E_AvatarChangeAttributeDesc m_Attribute = 29[(yd_fieldoptions.field_cname) = "百分比属性", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_AvatarChange
{
	repeated E_AvatarChange E_AvatarChange_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_AvatarChangetab
{
	optional int32 m_tabID = 1[(yd_fieldoptions.field_cname) = "id"];
}


message Sheet_AvatarChangetab
{
	repeated E_AvatarChangetab E_AvatarChangetab_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_AvatarBattleslot
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "解锁类型"];
	optional string m_arg = 3[(yd_fieldoptions.field_cname) = "解锁参数", (yd_fieldoptions.field_bufsize) = 64];
}


message Sheet_AvatarBattleslot
{
	repeated E_AvatarBattleslot E_AvatarBattleslot_List = 1[(yd_fieldoptions.field_arysize)=8];
}

message E_AvatarAdvanceUpattributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_AvatarAdvance
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_upAttributeId = 2[(yd_fieldoptions.field_cname) = "进阶类型"];
	optional int32 m_starID = 3[(yd_fieldoptions.field_cname) = "进阶专属需求星星数量"];
	optional int32 m_skillID = 4[(yd_fieldoptions.field_cname) = "进阶专属技能"];
	repeated E_AvatarAdvanceUpattributeDesc m_upAttribute = 5[(yd_fieldoptions.field_cname) = "激活属性", (yd_fieldoptions.field_arysize) = 5];
}


message Sheet_AvatarAdvance
{
	repeated E_AvatarAdvance E_AvatarAdvance_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_AvatarSkill
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_belong = 2[(yd_fieldoptions.field_cname) = "归属页签"];
	optional int32 m_order = 3[(yd_fieldoptions.field_cname) = "排序"];
	optional int32 m_skillid = 4[(yd_fieldoptions.field_cname) = "技能id"];
}


message Sheet_AvatarSkill
{
	repeated E_AvatarSkill E_AvatarSkill_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_AvatarEquipsuitAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_AvatarEquipsuit
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_groupID = 2[(yd_fieldoptions.field_cname) = "组id"];
	optional int32 m_quality = 3[(yd_fieldoptions.field_cname) = "要求品质"];
	optional int32 m_star = 4[(yd_fieldoptions.field_cname) = "要求星级"];
	repeated E_AvatarEquipsuitAttributeDesc m_Attribute = 5[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_AvatarEquipsuit
{
	repeated E_AvatarEquipsuit E_AvatarEquipsuit_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_AvatarMythAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_AvatarMyth
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_groupID = 2[(yd_fieldoptions.field_cname) = "组ID"];
	optional int32 m_stage = 3[(yd_fieldoptions.field_cname) = "阶级"];
	repeated E_AvatarMythAttributeDesc m_Attribute = 4[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_AvatarMyth
{
	repeated E_AvatarMyth E_AvatarMyth_List = 1[(yd_fieldoptions.field_arysize)=4];
}

message E_AvatarMythwayAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_AvatarMythway
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_groupID = 2[(yd_fieldoptions.field_cname) = "组id"];
	optional int32 m_stage = 3[(yd_fieldoptions.field_cname) = "阶数"];
	optional int32 m_star = 4[(yd_fieldoptions.field_cname) = "星数"];
	optional int32 m_showStar = 5[(yd_fieldoptions.field_cname) = "显示星数"];
	optional int32 m_mythCoreCondition = 6[(yd_fieldoptions.field_cname) = "要求神核等级"];
	optional int32 m_posX = 7[(yd_fieldoptions.field_cname) = "坐标x"];
	optional int32 m_posY = 8[(yd_fieldoptions.field_cname) = "坐标y"];
	repeated int32 m_equipID = 9[(yd_fieldoptions.field_cname) = "装备id", (yd_fieldoptions.field_arysize) = 5];
	repeated int32 m_specialID = 10[(yd_fieldoptions.field_cname) = "稀有装备id", (yd_fieldoptions.field_arysize) = 3];
	repeated E_AvatarMythwayAttributeDesc m_Attribute = 11[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 8];
}


message Sheet_AvatarMythway
{
	repeated E_AvatarMythway E_AvatarMythway_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_AvatarMythcoreAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_AvatarMythcore
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_groupID = 2[(yd_fieldoptions.field_cname) = "组ID"];
	optional int32 m_LV = 3[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_costID = 4[(yd_fieldoptions.field_cname) = "消耗道具"];
	optional int32 m_costNum = 5[(yd_fieldoptions.field_cname) = "消耗数量"];
	optional int32 m_success = 6[(yd_fieldoptions.field_cname) = "成功率"];
	repeated E_AvatarMythcoreAttributeDesc m_Attribute = 7[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_AvatarMythcore
{
	repeated E_AvatarMythcore E_AvatarMythcore_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_AvatarMythequipAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_AvatarMythequip
{
	optional int32 m_itemID = 1[(yd_fieldoptions.field_cname) = "物品ID"];
	optional int32 m_star = 2[(yd_fieldoptions.field_cname) = "星级"];
	repeated E_AvatarMythequipAttributeDesc m_Attribute = 3[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 8];
}


message Sheet_AvatarMythequip
{
	repeated E_AvatarMythequip E_AvatarMythequip_List = 1[(yd_fieldoptions.field_arysize)=64];
}
