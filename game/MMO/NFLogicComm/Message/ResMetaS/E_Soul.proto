package proto_ff;

import "yd_fieldoptions.proto";


message E_SoulOpen
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_lv = 2[(yd_fieldoptions.field_cname) = "解锁等级"];
	optional int32 m_box = 3[(yd_fieldoptions.field_cname) = "奖励"];
}


message Sheet_SoulOpen
{
	repeated E_SoulOpen E_SoulOpen_List = 1[(yd_fieldoptions.field_arysize)=8];
}

message E_SoulSoul
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional string m_name = 2[(yd_fieldoptions.field_cname) = "名字", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_lvItem = 3[(yd_fieldoptions.field_cname) = "升级所需道具"];
	optional int32 m_advanceItem = 4[(yd_fieldoptions.field_cname) = "进阶所需道具"];
	optional int32 m_sacrificeSkill = 5[(yd_fieldoptions.field_cname) = "牺牲技"];
	optional string m_SkillLv = 6[(yd_fieldoptions.field_cname) = "牺牲技等级[等级;升级需要的阶级]", (yd_fieldoptions.field_bufsize) = 128];
	optional int32 m_monsterId = 7[(yd_fieldoptions.field_cname) = "模型"];
}


message Sheet_SoulSoul
{
	repeated E_SoulSoul E_SoulSoul_List = 1[(yd_fieldoptions.field_arysize)=2];
}

message E_Soul3dmodel
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_position = 2[(yd_fieldoptions.field_cname) = "装备位置"];
}


message Sheet_Soul3dmodel
{
	repeated E_Soul3dmodel E_Soul3dmodel_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_SoulSoulbasicAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_SoulSoulbasic
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_soulId = 2[(yd_fieldoptions.field_cname) = "战魂ID"];
	optional int32 m_soulLv = 3[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_soulExp = 4[(yd_fieldoptions.field_cname) = "升级所需魂灵"];
	repeated E_SoulSoulbasicAttributeDesc m_attribute = 5[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_SoulSoulbasic
{
	repeated E_SoulSoulbasic E_SoulSoulbasic_List = 1[(yd_fieldoptions.field_arysize)=1024];
}

message E_SoulSouladvanceAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_SoulSouladvance
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_soulId = 2[(yd_fieldoptions.field_cname) = "战魂ID"];
	optional int32 m_advanceLv = 3[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_advanceNum = 4[(yd_fieldoptions.field_cname) = "升阶所需道具数量"];
	repeated E_SoulSouladvanceAttributeDesc m_attribute = 5[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_SoulSouladvance
{
	repeated E_SoulSouladvance E_SoulSouladvance_List = 1[(yd_fieldoptions.field_arysize)=512];
}

message E_SoulBless
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_basic_exp = 2[(yd_fieldoptions.field_cname) = "聚灵池基础值"];
	optional int32 m_need_gold = 3[(yd_fieldoptions.field_cname) = "元宝"];
	optional int32 m_open_lv = 4[(yd_fieldoptions.field_cname) = "战魂等级开放升级"];
}


message Sheet_SoulBless
{
	repeated E_SoulBless E_SoulBless_List = 1[(yd_fieldoptions.field_arysize)=4];
}

message E_SoulPrivilegeAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_SoulPrivilege
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional string m_activate = 2[(yd_fieldoptions.field_cname) = "激活条件", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_poolUp = 3[(yd_fieldoptions.field_cname) = "激活提高上限"];
	optional int32 m_huoyuedu_to_exp = 4[(yd_fieldoptions.field_cname) = "活跃度兑换"];
	optional int32 m_meditation_to_exp = 5[(yd_fieldoptions.field_cname) = "打坐兑换"];
	repeated E_SoulPrivilegeAttributeDesc m_attribute = 6[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_SoulPrivilege
{
	repeated E_SoulPrivilege E_SoulPrivilege_List = 1[(yd_fieldoptions.field_arysize)=4];
}

message E_SoulCrystal
{
	optional int32 m_equipId = 1[(yd_fieldoptions.field_cname) = "装备id"];
	optional string m_name = 2[(yd_fieldoptions.field_cname) = "魂晶命名", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_skillType = 3[(yd_fieldoptions.field_cname) = "技能类型"];
	optional int32 m_type = 4[(yd_fieldoptions.field_cname) = "魂晶类型"];
	optional int32 m_quality = 5[(yd_fieldoptions.field_cname) = "品质"];
	optional int32 m_star = 6[(yd_fieldoptions.field_cname) = "星级"];
	optional int32 m_makeid = 7[(yd_fieldoptions.field_cname) = "打造id"];
	optional int32 m_first_skill = 8[(yd_fieldoptions.field_cname) = "主动"];
	optional int32 m_attrid = 9[(yd_fieldoptions.field_cname) = "魂晶属性组id"];
	optional int32 m_intensify = 10[(yd_fieldoptions.field_cname) = "强化类型"];
	optional int32 m_dismantleTime = 11[(yd_fieldoptions.field_cname) = "分解获得"];
	optional int32 m_dismantleNum = 12[(yd_fieldoptions.field_cname) = "分解数量"];
	repeated int32 m_other_skillId = 13[(yd_fieldoptions.field_cname) = "技能信息", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_SoulCrystal
{
	repeated E_SoulCrystal E_SoulCrystal_List = 1[(yd_fieldoptions.field_arysize)=128];
}

message E_SoulCrystallv
{
	optional int32 m_lv = 1[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_wraithsItem = 2[(yd_fieldoptions.field_cname) = "道具消耗"];
	optional int32 m_wraithsMun = 3[(yd_fieldoptions.field_cname) = "消耗数量"];
}


message Sheet_SoulCrystallv
{
	repeated E_SoulCrystallv E_SoulCrystallv_List = 1[(yd_fieldoptions.field_arysize)=1024];
}

message E_SoulCrystaltopAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_SoulCrystaltop
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_intensify = 2[(yd_fieldoptions.field_cname) = "强化类型"];
	optional int32 m_lv = 3[(yd_fieldoptions.field_cname) = "强化等级"];
	optional int32 m_topLv = 4[(yd_fieldoptions.field_cname) = "突破等级"];
	optional int32 m_wraithsItem = 5[(yd_fieldoptions.field_cname) = "道具消耗"];
	optional int32 m_wraithsMun = 6[(yd_fieldoptions.field_cname) = "消耗数量"];
	repeated E_SoulCrystaltopAttributeDesc m_attribute = 7[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_SoulCrystaltop
{
	repeated E_SoulCrystaltop E_SoulCrystaltop_List = 1[(yd_fieldoptions.field_arysize)=1024];
}

message E_SoulCrystalhole
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "魂晶孔位"];
	optional int32 m_unlock_type = 2[(yd_fieldoptions.field_cname) = "解锁条件"];
	optional int32 m_unlock_param = 3[(yd_fieldoptions.field_cname) = "解锁参数"];
}


message Sheet_SoulCrystalhole
{
	repeated E_SoulCrystalhole E_SoulCrystalhole_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_SoulFusionFusionDesc
{
	optional int32 m_num = 1[(yd_fieldoptions.field_cname) = "数量"];
	optional int32 m_condition = 2[(yd_fieldoptions.field_cname) = "条件"];
	optional int32 m_star = 3[(yd_fieldoptions.field_cname) = "星级"];
	optional int32 m_quality = 4[(yd_fieldoptions.field_cname) = "品质"];
}

message E_SoulFusion
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_fusionType = 2[(yd_fieldoptions.field_cname) = "融合类型"];
	optional int32 m_makeid = 3[(yd_fieldoptions.field_cname) = "打造id"];
	optional int32 m_step = 4[(yd_fieldoptions.field_cname) = "打造阶段"];
	optional int32 m_quality = 5[(yd_fieldoptions.field_cname) = "品质"];
	optional int32 m_star = 6[(yd_fieldoptions.field_cname) = "星数"];
	optional int32 m_qualityGet = 7[(yd_fieldoptions.field_cname) = "融合后品质"];
	optional int32 m_starGet = 8[(yd_fieldoptions.field_cname) = "融合后星级"];
	repeated E_SoulFusionFusionDesc m_fusion = 9[(yd_fieldoptions.field_cname) = "融合材料", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_SoulFusion
{
	repeated E_SoulFusion E_SoulFusion_List = 1[(yd_fieldoptions.field_arysize)=128];
}

message E_SoulAttrAttDesc
{
	optional int32 m_num = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_SoulAttrStarattDesc
{
	optional int32 m_num = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_SoulAttr
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_attr = 2[(yd_fieldoptions.field_cname) = "属性组"];
	optional int32 m_lv = 3[(yd_fieldoptions.field_cname) = "属性组等级"];
	repeated E_SoulAttrAttDesc m_att = 4[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 6];
	repeated E_SoulAttrStarattDesc m_starAtt = 5[(yd_fieldoptions.field_cname) = "星级属性", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_SoulAttr
{
	repeated E_SoulAttr E_SoulAttr_List = 1[(yd_fieldoptions.field_arysize)=512];
}

message E_SoulSkill
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "技能信息"];
	optional int32 m_skillId = 2[(yd_fieldoptions.field_cname) = "技能"];
	optional int32 m_fackSkill = 3[(yd_fieldoptions.field_cname) = "是否假技能"];
	optional int32 m_skill_lv = 4[(yd_fieldoptions.field_cname) = "解锁的技能等级"];
	optional int32 m_need_quailty = 5[(yd_fieldoptions.field_cname) = "品质"];
	optional int32 m_need_star = 6[(yd_fieldoptions.field_cname) = "需要的星级"];
	optional int32 m_attr = 7[(yd_fieldoptions.field_cname) = "属性id"];
	optional int32 m_num = 8[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_skill_type = 9[(yd_fieldoptions.field_cname) = "技能类型"];
}


message Sheet_SoulSkill
{
	repeated E_SoulSkill E_SoulSkill_List = 1[(yd_fieldoptions.field_arysize)=256];
}

message E_SoulBone
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_position = 2[(yd_fieldoptions.field_cname) = "装备位置"];
	optional int32 m_type = 3[(yd_fieldoptions.field_cname) = "魂骨类型"];
	optional int32 m_quality = 4[(yd_fieldoptions.field_cname) = "品质"];
	optional int32 m_star = 5[(yd_fieldoptions.field_cname) = "星级"];
	optional int32 m_awakeningTime = 6[(yd_fieldoptions.field_cname) = "觉醒消耗"];
	optional int32 m_awakeningNum = 7[(yd_fieldoptions.field_cname) = "消耗数量"];
	optional string m_modelId = 8[(yd_fieldoptions.field_cname) = "模型id", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_makeid = 9[(yd_fieldoptions.field_cname) = "打造id"];
	optional int32 m_first_skill = 10[(yd_fieldoptions.field_cname) = "主动"];
	optional int32 m_attrid = 11[(yd_fieldoptions.field_cname) = "属性组id"];
	repeated int32 m_other_skillId = 12[(yd_fieldoptions.field_cname) = "技能信息", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_SoulBone
{
	repeated E_SoulBone E_SoulBone_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_SoulBonekill
{
	optional int32 m_lv = 1[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_killBoss = 2[(yd_fieldoptions.field_cname) = "击杀魔王数"];
}


message Sheet_SoulBonekill
{
	repeated E_SoulBonekill E_SoulBonekill_List = 1[(yd_fieldoptions.field_arysize)=1024];
}

message E_SoulBonestrongTypeDesc
{
	optional string m_num = 1[(yd_fieldoptions.field_cname) = "值", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_id = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_SoulBonestrong
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "魂骨位置id"];
	repeated E_SoulBonestrongTypeDesc m_type = 2[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_SoulBonestrong
{
	repeated E_SoulBonestrong E_SoulBonestrong_List = 1[(yd_fieldoptions.field_arysize)=1024];
}

message E_SoulGuwen
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "装备id"];
	optional string m_name = 2[(yd_fieldoptions.field_cname) = "骨纹命名", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_position = 3[(yd_fieldoptions.field_cname) = "装备位置"];
	optional int32 m_type = 4[(yd_fieldoptions.field_cname) = "骨纹类型"];
	optional int32 m_quality = 5[(yd_fieldoptions.field_cname) = "品质"];
	optional int32 m_star = 6[(yd_fieldoptions.field_cname) = "星级"];
	optional int32 m_makeid = 7[(yd_fieldoptions.field_cname) = "打造id"];
	optional int32 m_attrid = 8[(yd_fieldoptions.field_cname) = "属性组id"];
}


message Sheet_SoulGuwen
{
	repeated E_SoulGuwen E_SoulGuwen_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_SoulGuwentype
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "类型id"];
	optional string m_name = 2[(yd_fieldoptions.field_cname) = "名字", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_quality = 3[(yd_fieldoptions.field_cname) = "镶嵌骨纹品质"];
}


message Sheet_SoulGuwentype
{
	repeated E_SoulGuwentype E_SoulGuwentype_List = 1[(yd_fieldoptions.field_arysize)=4];
}

message E_SoulGuwentypesuitAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_SoulGuwentypesuit
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_typeId = 2[(yd_fieldoptions.field_cname) = "类型id"];
	optional int32 m_num = 3[(yd_fieldoptions.field_cname) = "件数"];
	repeated E_SoulGuwentypesuitAttributeDesc m_attribute = 4[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 9];
}


message Sheet_SoulGuwentypesuit
{
	repeated E_SoulGuwentypesuit E_SoulGuwentypesuit_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_SoulGuwenskillSkillDesc
{
	optional int32 m_num = 1[(yd_fieldoptions.field_cname) = "条件"];
	optional int32 m_level = 2[(yd_fieldoptions.field_cname) = "等级"];
}

message E_SoulGuwenskill
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "技能类型"];
	optional int32 m_skillId = 3[(yd_fieldoptions.field_cname) = "技能Id"];
	optional int32 m_quality = 4[(yd_fieldoptions.field_cname) = "解锁需要骨纹的品质"];
	repeated E_SoulGuwenskillSkillDesc m_skill = 5[(yd_fieldoptions.field_cname) = "技能", (yd_fieldoptions.field_arysize) = 7];
}


message Sheet_SoulGuwenskill
{
	repeated E_SoulGuwenskill E_SoulGuwenskill_List = 1[(yd_fieldoptions.field_arysize)=8];
}

message E_SoulGuwensuitAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_SoulGuwensuit
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_position = 2[(yd_fieldoptions.field_cname) = "魂骨部位"];
	optional int32 m_typeId = 3[(yd_fieldoptions.field_cname) = "类型id"];
	optional int32 m_num = 4[(yd_fieldoptions.field_cname) = "件数"];
	repeated E_SoulGuwensuitAttributeDesc m_attribute = 5[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 8];
}


message Sheet_SoulGuwensuit
{
	repeated E_SoulGuwensuit E_SoulGuwensuit_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_SoulAffixesAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_SoulAffixes
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional string m_name = 2[(yd_fieldoptions.field_cname) = "名字", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_type = 3[(yd_fieldoptions.field_cname) = "类型(1攻2防3全)"];
	optional int32 m_quality = 4[(yd_fieldoptions.field_cname) = "品质"];
	optional int32 m_probability = 5[(yd_fieldoptions.field_cname) = "附魔概率"];
	repeated E_SoulAffixesAttributeDesc m_attribute = 6[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_SoulAffixes
{
	repeated E_SoulAffixes E_SoulAffixes_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_SoulAffixesfumo
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "词缀品质id"];
	optional int32 m_item = 2[(yd_fieldoptions.field_cname) = "道具消耗"];
	optional int32 m_num = 3[(yd_fieldoptions.field_cname) = "消耗道具数量"];
	optional int32 m_lock = 4[(yd_fieldoptions.field_cname) = "品质保护"];
	optional int32 m_lockNum = 5[(yd_fieldoptions.field_cname) = "保护消耗数量"];
}


message Sheet_SoulAffixesfumo
{
	repeated E_SoulAffixesfumo E_SoulAffixesfumo_List = 1[(yd_fieldoptions.field_arysize)=8];
}

message E_SoulAffixessuitSkillDesc
{
	optional int32 m_level = 1[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_id = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_SoulAffixessuitAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_SoulAffixessuit
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_affixesId = 2[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_num = 3[(yd_fieldoptions.field_cname) = "件数"];
	repeated E_SoulAffixessuitSkillDesc m_skill = 4[(yd_fieldoptions.field_cname) = "属性组", (yd_fieldoptions.field_arysize) = 2];
	repeated E_SoulAffixessuitAttributeDesc m_attribute = 5[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_SoulAffixessuit
{
	repeated E_SoulAffixessuit E_SoulAffixessuit_List = 1[(yd_fieldoptions.field_arysize)=128];
}

message E_SoulGuwenattr
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_skill = 2[(yd_fieldoptions.field_cname) = "技能类型"];
	optional int32 m_lv = 3[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_att = 4[(yd_fieldoptions.field_cname) = "属性id"];
	optional int32 m_num = 5[(yd_fieldoptions.field_cname) = "值"];
}


message Sheet_SoulGuwenattr
{
	repeated E_SoulGuwenattr E_SoulGuwenattr_List = 1[(yd_fieldoptions.field_arysize)=128];
}
