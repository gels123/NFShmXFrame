package proto_ff;

import "yd_fieldoptions.proto";


message E_FacadeDisplayMaterialDesc
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_exp = 2[(yd_fieldoptions.field_cname) = "经验值"];
}

message E_FacadeDisplay
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "外观ID"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "大类"];
	optional string m_resource = 3[(yd_fieldoptions.field_cname) = "资源形象", (yd_fieldoptions.field_bufsize) = 60];
	optional string m_name = 4[(yd_fieldoptions.field_cname) = "名字", (yd_fieldoptions.field_bufsize) = 60];
	optional string m_activedesc = 5[(yd_fieldoptions.field_cname) = "激活描述", (yd_fieldoptions.field_bufsize) = 100];
	optional string m_professionid = 6[(yd_fieldoptions.field_cname) = "职业ID", (yd_fieldoptions.field_bufsize) = 60];
	optional string m_skillid = 7[(yd_fieldoptions.field_cname) = "解锁技能ID", (yd_fieldoptions.field_bufsize) = 80];
	optional int32 m_soulitemid = 8[(yd_fieldoptions.field_cname) = "器魂道具ID"];
	repeated E_FacadeDisplayMaterialDesc m_material = 9[(yd_fieldoptions.field_cname) = "进阶材料", (yd_fieldoptions.field_arysize) = 3];
	repeated int64 m_fragmentid = 10[(yd_fieldoptions.field_cname) = "关联碎片ID", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_FacadeDisplay
{
	repeated E_FacadeDisplay E_FacadeDisplay_List = 1[(yd_fieldoptions.field_arysize)=20];
}

message E_FacadeValueTreasureattributeDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message E_FacadeValueArtifactattributeDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message E_FacadeValueBladeattributeDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message E_FacadeValueWingattributeDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message E_FacadeValue
{
	optional int32 m_lv = 1[(yd_fieldoptions.field_cname) = "等级"];
	optional int64 m_wingexp = 2[(yd_fieldoptions.field_cname) = "翅膀升级经验"];
	optional int64 m_treasureexp = 3[(yd_fieldoptions.field_cname) = "宝物升级经验"];
	optional int64 m_artifactexp = 4[(yd_fieldoptions.field_cname) = "神器升级经验"];
	optional int64 m_bladeexp = 5[(yd_fieldoptions.field_cname) = "剑灵升级经验"];
	repeated E_FacadeValueTreasureattributeDesc m_treasureattribute = 6[(yd_fieldoptions.field_cname) = "宝具基础属性", (yd_fieldoptions.field_arysize) = 5];
	repeated E_FacadeValueArtifactattributeDesc m_artifactattribute = 7[(yd_fieldoptions.field_cname) = "神器基础属性", (yd_fieldoptions.field_arysize) = 6];
	repeated E_FacadeValueBladeattributeDesc m_bladeattribute = 8[(yd_fieldoptions.field_cname) = "神器基础属性", (yd_fieldoptions.field_arysize) = 6];
	repeated E_FacadeValueWingattributeDesc m_wingattribute = 9[(yd_fieldoptions.field_cname) = "翅膀基础属性", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_FacadeValue
{
	repeated E_FacadeValue E_FacadeValue_List = 1[(yd_fieldoptions.field_arysize)=500];
}

message E_FacadeType
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "类型id"];
	optional string m_soucename = 2[(yd_fieldoptions.field_cname) = "资源名称", (yd_fieldoptions.field_bufsize) = 60];
}


message Sheet_FacadeType
{
	repeated E_FacadeType E_FacadeType_List = 1[(yd_fieldoptions.field_arysize)=20];
}

message E_FacadeFragmentAttributeDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message E_FacadeFragment
{
	optional int64 m_fragmentid = 1[(yd_fieldoptions.field_cname) = "碎片ID"];
	optional int64 m_item = 2[(yd_fieldoptions.field_cname) = "物品ID"];
	optional int32 m_itemnum = 3[(yd_fieldoptions.field_cname) = "碎片使用上限"];
	repeated E_FacadeFragmentAttributeDesc m_attribute = 4[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_FacadeFragment
{
	repeated E_FacadeFragment E_FacadeFragment_List = 1[(yd_fieldoptions.field_arysize)=20];
}

message E_FacadeChangeAttributeDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message E_FacadeChangeActiveattributeDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "类型"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message E_FacadeChange
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "外观ID"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "大类"];
	optional string m_resource = 3[(yd_fieldoptions.field_cname) = "资源形象", (yd_fieldoptions.field_bufsize) = 60];
	optional string m_professionid = 4[(yd_fieldoptions.field_cname) = "职业ID", (yd_fieldoptions.field_bufsize) = 60];
	optional string m_name = 5[(yd_fieldoptions.field_cname) = "名字", (yd_fieldoptions.field_bufsize) = 60];
	optional string m_activedesc = 6[(yd_fieldoptions.field_cname) = "激活描述", (yd_fieldoptions.field_bufsize) = 160];
	optional int32 m_quality = 7[(yd_fieldoptions.field_cname) = "品质"];
	optional int64 m_activationitem = 8[(yd_fieldoptions.field_cname) = "激活道具ID"];
	optional int32 m_activationnum = 9[(yd_fieldoptions.field_cname) = "激活道具数量"];
	optional int64 m_starid = 10[(yd_fieldoptions.field_cname) = "升星道具id"];
	optional string m_starnum = 11[(yd_fieldoptions.field_cname) = "升星道具数量", (yd_fieldoptions.field_bufsize) = 300];
	optional int32 m_starup = 12[(yd_fieldoptions.field_cname) = "升星等级上限"];
	optional int32 m_starber = 13[(yd_fieldoptions.field_cname) = "每次升星属性增加的万分比值"];
	optional int64 m_upattributeid = 14[(yd_fieldoptions.field_cname) = "升星属性组ID"];
	optional int32 m_activeskill = 15[(yd_fieldoptions.field_cname) = "激活获得技能"];
	repeated E_FacadeChangeAttributeDesc m_attribute = 16[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 5];
	repeated E_FacadeChangeActiveattributeDesc m_activeattribute = 17[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_FacadeChange
{
	repeated E_FacadeChange E_FacadeChange_List = 1[(yd_fieldoptions.field_arysize)=60];
}

message E_FacadeStarupUpattributeDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message E_FacadeStarup
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "唯一ID"];
	optional int64 m_upattributeid = 2[(yd_fieldoptions.field_cname) = "升星属性组ID"];
	optional int32 m_starid = 3[(yd_fieldoptions.field_cname) = "星级"];
	optional int32 m_skillid = 4[(yd_fieldoptions.field_cname) = "技能id"];
	repeated E_FacadeStarupUpattributeDesc m_upattribute = 5[(yd_fieldoptions.field_cname) = "激活属性", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_FacadeStarup
{
	repeated E_FacadeStarup E_FacadeStarup_List = 1[(yd_fieldoptions.field_arysize)=40];
}

message E_FacadeSoulAttributeDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message E_FacadeSoul
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "器魂ID"];
	optional int32 m_rechargeid = 2[(yd_fieldoptions.field_cname) = "价格计费点"];
	optional int32 m_mainskill = 3[(yd_fieldoptions.field_cname) = "主技能ID"];
	repeated E_FacadeSoulAttributeDesc m_attribute = 4[(yd_fieldoptions.field_cname) = "激活基础属性", (yd_fieldoptions.field_arysize) = 4];
	repeated int32 m_minorskill = 5[(yd_fieldoptions.field_cname) = "副技能ID", (yd_fieldoptions.field_arysize) = 8];
}


message Sheet_FacadeSoul
{
	repeated E_FacadeSoul E_FacadeSoul_List = 1[(yd_fieldoptions.field_arysize)=20];
}

message E_FacadeSoulactive
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "技能ID"];
	repeated string m_parama = 2[(yd_fieldoptions.field_cname) = "参数", (yd_fieldoptions.field_arysize) = 2, (yd_fieldoptions.field_bufsize) = 60];
	repeated int32 m_condition = 3[(yd_fieldoptions.field_cname) = "解锁条件", (yd_fieldoptions.field_arysize) = 2];
}


message Sheet_FacadeSoulactive
{
	repeated E_FacadeSoulactive E_FacadeSoulactive_List = 1[(yd_fieldoptions.field_arysize)=40];
}

message E_FacadeSoullvAttributeDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message E_FacadeSoullv
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_soulid = 2[(yd_fieldoptions.field_cname) = "器魂ID"];
	optional int32 m_itemid = 3[(yd_fieldoptions.field_cname) = "消耗道具"];
	optional int32 m_num = 4[(yd_fieldoptions.field_cname) = "消耗数量"];
	optional int32 m_successrate = 5[(yd_fieldoptions.field_cname) = "升级成功率"];
	optional int32 m_downlv = 6[(yd_fieldoptions.field_cname) = "是否掉级"];
	repeated E_FacadeSoullvAttributeDesc m_attribute = 7[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 7];
}


message Sheet_FacadeSoullv
{
	repeated E_FacadeSoullv E_FacadeSoullv_List = 1[(yd_fieldoptions.field_arysize)=140];
}

message E_FacadeSoulachievement
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "成就id"];
	optional int32 m_soulid = 2[(yd_fieldoptions.field_cname) = "器魂ID"];
	optional int32 m_type = 3[(yd_fieldoptions.field_cname) = "类型"];
	optional int32 m_parama = 4[(yd_fieldoptions.field_cname) = "影响值"];
	optional int32 m_itemid = 5[(yd_fieldoptions.field_cname) = "奖励道具"];
	optional int32 m_num = 6[(yd_fieldoptions.field_cname) = "奖励数量"];
}


message Sheet_FacadeSoulachievement
{
	repeated E_FacadeSoulachievement E_FacadeSoulachievement_List = 1[(yd_fieldoptions.field_arysize)=160];
}
