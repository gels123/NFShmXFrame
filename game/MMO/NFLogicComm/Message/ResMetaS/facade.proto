package proto_ff;

import "yd_fieldoptions.proto";


message facadedisplaymaterialDesc
{
	optional int64 id = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 exp = 2[(yd_fieldoptions.field_cname) = "经验值"];
}

message facadedisplay
{
	optional int64 id = 1[(yd_fieldoptions.field_cname) = "外观ID"];
	optional int32 type = 2[(yd_fieldoptions.field_cname) = "大类"];
	optional string resource = 3[(yd_fieldoptions.field_cname) = "资源形象", (yd_fieldoptions.field_bufsize) = 60];
	optional string name = 4[(yd_fieldoptions.field_cname) = "名字", (yd_fieldoptions.field_bufsize) = 60];
	optional string activeDesc = 5[(yd_fieldoptions.field_cname) = "激活描述", (yd_fieldoptions.field_bufsize) = 100];
	optional string professionID = 6[(yd_fieldoptions.field_cname) = "职业ID", (yd_fieldoptions.field_bufsize) = 60];
	optional string skillID = 7[(yd_fieldoptions.field_cname) = "解锁技能ID", (yd_fieldoptions.field_bufsize) = 80];
	optional int32 soulItemID = 8[(yd_fieldoptions.field_cname) = "器魂道具ID"];
	repeated facadedisplaymaterialDesc material = 9[(yd_fieldoptions.field_cname) = "进阶材料", (yd_fieldoptions.field_arysize) = 3];
	repeated int64 fragmentID = 10[(yd_fieldoptions.field_cname) = "关联碎片ID", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_facadedisplay
{
	repeated facadedisplay facadedisplay_List = 1[(yd_fieldoptions.field_arysize)=20];
}

message facadevaluetreasureAttributeDesc
{
	optional int32 type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message facadevalueArtifactAttributeDesc
{
	optional int32 type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message facadevalueBladeAttributeDesc
{
	optional int32 type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message facadevaluewingAttributeDesc
{
	optional int32 type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message facadevalue
{
	optional int32 lv = 1[(yd_fieldoptions.field_cname) = "等级"];
	optional int64 wingExp = 2[(yd_fieldoptions.field_cname) = "翅膀升级经验"];
	optional int64 treasureExp = 3[(yd_fieldoptions.field_cname) = "宝物升级经验"];
	optional int64 ArtifactExp = 4[(yd_fieldoptions.field_cname) = "神器升级经验"];
	optional int64 BladeExp = 5[(yd_fieldoptions.field_cname) = "剑灵升级经验"];
	repeated facadevaluetreasureAttributeDesc treasureAttribute = 6[(yd_fieldoptions.field_cname) = "宝具基础属性", (yd_fieldoptions.field_arysize) = 5];
	repeated facadevalueArtifactAttributeDesc ArtifactAttribute = 7[(yd_fieldoptions.field_cname) = "神器基础属性", (yd_fieldoptions.field_arysize) = 6];
	repeated facadevalueBladeAttributeDesc BladeAttribute = 8[(yd_fieldoptions.field_cname) = "神器基础属性", (yd_fieldoptions.field_arysize) = 6];
	repeated facadevaluewingAttributeDesc wingAttribute = 9[(yd_fieldoptions.field_cname) = "翅膀基础属性", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_facadevalue
{
	repeated facadevalue facadevalue_List = 1[(yd_fieldoptions.field_arysize)=500];
}

message facadetype
{
	optional int32 id = 1[(yd_fieldoptions.field_cname) = "类型id"];
	optional string souceName = 2[(yd_fieldoptions.field_cname) = "资源名称", (yd_fieldoptions.field_bufsize) = 60];
}


message Sheet_facadetype
{
	repeated facadetype facadetype_List = 1[(yd_fieldoptions.field_arysize)=20];
}

message facadefragmentattributeDesc
{
	optional int32 type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message facadefragment
{
	optional int64 fragmentID = 1[(yd_fieldoptions.field_cname) = "碎片ID"];
	optional int64 item = 2[(yd_fieldoptions.field_cname) = "物品ID"];
	optional int32 itemNum = 3[(yd_fieldoptions.field_cname) = "碎片使用上限"];
	repeated facadefragmentattributeDesc attribute = 4[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_facadefragment
{
	repeated facadefragment facadefragment_List = 1[(yd_fieldoptions.field_arysize)=20];
}

message facadechangeattributeDesc
{
	optional int32 type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message facadechangeActiveAttributeDesc
{
	optional int32 type = 1[(yd_fieldoptions.field_cname) = "类型"];
	optional int32 value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message facadechange
{
	optional int64 id = 1[(yd_fieldoptions.field_cname) = "外观ID"];
	optional int32 type = 2[(yd_fieldoptions.field_cname) = "大类"];
	optional string resource = 3[(yd_fieldoptions.field_cname) = "资源形象", (yd_fieldoptions.field_bufsize) = 60];
	optional string professionID = 4[(yd_fieldoptions.field_cname) = "职业ID", (yd_fieldoptions.field_bufsize) = 60];
	optional string name = 5[(yd_fieldoptions.field_cname) = "名字", (yd_fieldoptions.field_bufsize) = 60];
	optional string activeDesc = 6[(yd_fieldoptions.field_cname) = "激活描述", (yd_fieldoptions.field_bufsize) = 160];
	optional int32 quality = 7[(yd_fieldoptions.field_cname) = "品质"];
	optional int64 activationItem = 8[(yd_fieldoptions.field_cname) = "激活道具ID"];
	optional int32 activationNum = 9[(yd_fieldoptions.field_cname) = "激活道具数量"];
	optional int64 starId = 10[(yd_fieldoptions.field_cname) = "升星道具id"];
	optional string starNum = 11[(yd_fieldoptions.field_cname) = "升星道具数量", (yd_fieldoptions.field_bufsize) = 300];
	optional int32 starUp = 12[(yd_fieldoptions.field_cname) = "升星等级上限"];
	optional int32 starBer = 13[(yd_fieldoptions.field_cname) = "每次升星属性增加的万分比值"];
	optional int64 upAttributeId = 14[(yd_fieldoptions.field_cname) = "升星属性组ID"];
	optional int32 activeSkill = 15[(yd_fieldoptions.field_cname) = "激活获得技能"];
	repeated facadechangeattributeDesc attribute = 16[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 5];
	repeated facadechangeActiveAttributeDesc ActiveAttribute = 17[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_facadechange
{
	repeated facadechange facadechange_List = 1[(yd_fieldoptions.field_arysize)=60];
}

message facadestarUpupAttributeDesc
{
	optional int32 type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message facadestarUp
{
	optional int32 ID = 1[(yd_fieldoptions.field_cname) = "唯一ID"];
	optional int64 upAttributeId = 2[(yd_fieldoptions.field_cname) = "升星属性组ID"];
	optional int32 starID = 3[(yd_fieldoptions.field_cname) = "星级"];
	optional int32 skillID = 4[(yd_fieldoptions.field_cname) = "技能id"];
	repeated facadestarUpupAttributeDesc upAttribute = 5[(yd_fieldoptions.field_cname) = "激活属性", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_facadestarUp
{
	repeated facadestarUp facadestarUp_List = 1[(yd_fieldoptions.field_arysize)=40];
}

message facadesoulattributeDesc
{
	optional int32 type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message facadesoul
{
	optional int64 id = 1[(yd_fieldoptions.field_cname) = "器魂ID"];
	optional int32 rechargeID = 2[(yd_fieldoptions.field_cname) = "价格计费点"];
	optional int32 mainSkill = 3[(yd_fieldoptions.field_cname) = "主技能ID"];
	repeated facadesoulattributeDesc attribute = 4[(yd_fieldoptions.field_cname) = "激活基础属性", (yd_fieldoptions.field_arysize) = 4];
	repeated int32 minorSkill = 5[(yd_fieldoptions.field_cname) = "副技能ID", (yd_fieldoptions.field_arysize) = 8];
}


message Sheet_facadesoul
{
	repeated facadesoul facadesoul_List = 1[(yd_fieldoptions.field_arysize)=20];
}

message facadesoulActive
{
	optional int64 id = 1[(yd_fieldoptions.field_cname) = "技能ID"];
	repeated string parama = 2[(yd_fieldoptions.field_cname) = "参数", (yd_fieldoptions.field_arysize) = 2, (yd_fieldoptions.field_bufsize) = 60];
	repeated int32 condition = 3[(yd_fieldoptions.field_cname) = "解锁条件", (yd_fieldoptions.field_arysize) = 2];
}


message Sheet_facadesoulActive
{
	repeated facadesoulActive facadesoulActive_List = 1[(yd_fieldoptions.field_arysize)=40];
}

message facadesoulLvattributeDesc
{
	optional int32 type = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 value = 2[(yd_fieldoptions.field_cname) = "值"];
}

message facadesoulLv
{
	optional int64 id = 1[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 soulID = 2[(yd_fieldoptions.field_cname) = "器魂ID"];
	optional int32 itemID = 3[(yd_fieldoptions.field_cname) = "消耗道具"];
	optional int32 num = 4[(yd_fieldoptions.field_cname) = "消耗数量"];
	optional int32 successRate = 5[(yd_fieldoptions.field_cname) = "升级成功率"];
	optional int32 downLv = 6[(yd_fieldoptions.field_cname) = "是否掉级"];
	repeated facadesoulLvattributeDesc attribute = 7[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 7];
}


message Sheet_facadesoulLv
{
	repeated facadesoulLv facadesoulLv_List = 1[(yd_fieldoptions.field_arysize)=140];
}

message facadesoulAchievement
{
	optional int64 id = 1[(yd_fieldoptions.field_cname) = "成就id"];
	optional int32 soulID = 2[(yd_fieldoptions.field_cname) = "器魂ID"];
	optional int32 type = 3[(yd_fieldoptions.field_cname) = "类型"];
	optional int32 parama = 4[(yd_fieldoptions.field_cname) = "影响值"];
	optional int32 itemID = 5[(yd_fieldoptions.field_cname) = "奖励道具"];
	optional int32 num = 6[(yd_fieldoptions.field_cname) = "奖励数量"];
}


message Sheet_facadesoulAchievement
{
	repeated facadesoulAchievement facadesoulAchievement_List = 1[(yd_fieldoptions.field_arysize)=160];
}
