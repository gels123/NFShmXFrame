package proto_ff;

import "yd_fieldoptions.proto";


message E_PetDisplayMaterialDesc
{
	optional int32 m_exp = 1[(yd_fieldoptions.field_cname) = "经验值"];
	optional int64 m_id = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_PetDisplay
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "外观ID"];
	optional string m_name = 2[(yd_fieldoptions.field_cname) = "名字", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_quality = 3[(yd_fieldoptions.field_cname) = "宠物品质"];
	optional int32 m_isStar = 4[(yd_fieldoptions.field_cname) = "是否可升星"];
	optional string m_grade = 5[(yd_fieldoptions.field_cname) = "评级", (yd_fieldoptions.field_bufsize) = 64];
	optional int64 m_monsterId = 6[(yd_fieldoptions.field_cname) = "怪物表ID"];
	optional int32 m_activeSkillID = 7[(yd_fieldoptions.field_cname) = "主动技能"];
	optional string m_exclusiveSkillID = 8[(yd_fieldoptions.field_cname) = "专属技能", (yd_fieldoptions.field_bufsize) = 64];
	optional string m_passiveSkillID = 9[(yd_fieldoptions.field_cname) = "被动技能", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_activeAttribute = 10[(yd_fieldoptions.field_cname) = "初始获得属性模板"];
	optional int32 m_growAtt = 11[(yd_fieldoptions.field_cname) = "升级属性模板"];
	optional float m_activeParama = 12[(yd_fieldoptions.field_cname) = "初值值系数"];
	optional float m_growAttParama = 13[(yd_fieldoptions.field_cname) = "升级属性系数"];
	optional float m_growStandardA = 14[(yd_fieldoptions.field_cname) = "标准值系数A"];
	optional float m_growStandardB = 15[(yd_fieldoptions.field_cname) = "标准值系数B"];
	optional float m_growStandard = 16[(yd_fieldoptions.field_cname) = "资质标准值"];
	optional float m_growMin = 17[(yd_fieldoptions.field_cname) = "初始资质下限"];
	optional float m_growMax = 18[(yd_fieldoptions.field_cname) = "初始资质上限"];
	optional float m_growStar = 19[(yd_fieldoptions.field_cname) = "升星资质提升系数"];
	optional int32 m_advanceAttribute = 20[(yd_fieldoptions.field_cname) = "进阶值模板"];
	optional int32 m_advanceType = 21[(yd_fieldoptions.field_cname) = "进阶类型"];
	optional int32 m_petTag = 22[(yd_fieldoptions.field_cname) = "是否神宠"];
	optional string m_petTagSkill = 23[(yd_fieldoptions.field_cname) = "神宠技能", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_starAttribute = 24[(yd_fieldoptions.field_cname) = "升星属性模板"];
	optional int32 m_starPercent = 25[(yd_fieldoptions.field_cname) = "升星属性加成"];
	optional int32 m_starLlimit = 26[(yd_fieldoptions.field_cname) = "升星上限"];
	optional int64 m_starItem = 27[(yd_fieldoptions.field_cname) = "升星道具"];
	optional string m_starNum = 28[(yd_fieldoptions.field_cname) = "升星道具数量", (yd_fieldoptions.field_bufsize) = 64];
	optional int64 m_starPetID = 29[(yd_fieldoptions.field_cname) = "升星宠物ID"];
	optional string m_starPetNum = 30[(yd_fieldoptions.field_cname) = "升星宠物数量", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_weapon = 31[(yd_fieldoptions.field_cname) = "专属武器"];
	optional int64 m_upAttributeId = 32[(yd_fieldoptions.field_cname) = "升星属性组ID"];
	optional int32 m_fettersID = 33[(yd_fieldoptions.field_cname) = "羁绊ID"];
	optional string m_suit = 34[(yd_fieldoptions.field_cname) = "套装", (yd_fieldoptions.field_bufsize) = 64];
	repeated E_PetDisplayMaterialDesc m_material = 35[(yd_fieldoptions.field_cname) = "升级材料", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_PetDisplay
{
	repeated E_PetDisplay E_PetDisplay_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_PetAttributetpyeAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_PetAttributetpye
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_tpye = 2[(yd_fieldoptions.field_cname) = "属性类型"];
	repeated E_PetAttributetpyeAttributeDesc m_attribute = 3[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_PetAttributetpye
{
	repeated E_PetAttributetpye E_PetAttributetpye_List = 1[(yd_fieldoptions.field_arysize)=128];
}

message E_PetLvexp
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "等级"];
	optional int64 m_exp = 2[(yd_fieldoptions.field_cname) = "升级经验"];
}


message Sheet_PetLvexp
{
	repeated E_PetLvexp E_PetLvexp_List = 1[(yd_fieldoptions.field_arysize)=512];
}

message E_PetAdvancelvAdvanceDesc
{
	optional float m_param = 1[(yd_fieldoptions.field_cname) = "系数"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "类型"];
}

message E_PetAdvancelv
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_advanceItem = 2[(yd_fieldoptions.field_cname) = "进阶消耗道具"];
	optional int32 m_advanceNum = 3[(yd_fieldoptions.field_cname) = "消耗数量"];
	repeated E_PetAdvancelvAdvanceDesc m_advance = 4[(yd_fieldoptions.field_cname) = "进阶", (yd_fieldoptions.field_arysize) = 2];
}


message Sheet_PetAdvancelv
{
	repeated E_PetAdvancelv E_PetAdvancelv_List = 1[(yd_fieldoptions.field_arysize)=128];
}

message E_PetStarupUpattributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_PetStarup
{
	optional int32 m_ID = 1[(yd_fieldoptions.field_cname) = "唯一ID"];
	optional int64 m_upAttributeId = 2[(yd_fieldoptions.field_cname) = "升星属性组ID"];
	optional int32 m_starID = 3[(yd_fieldoptions.field_cname) = "星级"];
	optional int32 m_skillID = 4[(yd_fieldoptions.field_cname) = "技能id"];
	optional int32 m_activeSkillIDLv = 5[(yd_fieldoptions.field_cname) = "主动技能等级"];
	repeated E_PetStarupUpattributeDesc m_upAttribute = 6[(yd_fieldoptions.field_cname) = "激活属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_PetStarup
{
	repeated E_PetStarup E_PetStarup_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_PetEggPetDesc
{
	optional int32 m_rand = 1[(yd_fieldoptions.field_cname) = "概率"];
	optional int32 m_id = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_PetEgg
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "宠物蛋道具ID"];
	optional int32 m_time = 2[(yd_fieldoptions.field_cname) = "孵化时间"];
	repeated E_PetEggPetDesc m_pet = 3[(yd_fieldoptions.field_cname) = "宠物", (yd_fieldoptions.field_arysize) = 13];
}


message Sheet_PetEgg
{
	repeated E_PetEgg E_PetEgg_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_PetDecomposeDecomposeDesc
{
	optional int32 m_boxID = 1[(yd_fieldoptions.field_cname) = "boxID"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "type"];
}

message E_PetDecompose
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_quality = 2[(yd_fieldoptions.field_cname) = "宠物品质"];
	repeated E_PetDecomposeDecomposeDesc m_decompose = 3[(yd_fieldoptions.field_cname) = "分解类型", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_PetDecompose
{
	repeated E_PetDecompose E_PetDecompose_List = 1[(yd_fieldoptions.field_arysize)=8];
}

message E_PetFettersAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_PetFetters
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_quality = 2[(yd_fieldoptions.field_cname) = "羁绊品质"];
	repeated int32 m_petID = 3[(yd_fieldoptions.field_cname) = "羁绊宠物ID", (yd_fieldoptions.field_arysize) = 3];
	repeated E_PetFettersAttributeDesc m_attribute = 4[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 7];
	repeated int32 m_atctive_skillID = 5[(yd_fieldoptions.field_cname) = "激活技能", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_PetFetters
{
	repeated E_PetFetters E_PetFetters_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_PetPetequipActDesc
{
	optional int32 m_Mun = 1[(yd_fieldoptions.field_cname) = "数量"];
	optional int32 m_Time = 2[(yd_fieldoptions.field_cname) = "材料"];
}

message E_PetPetequip
{
	optional int32 m_pet = 1[(yd_fieldoptions.field_cname) = "对应宠物"];
	optional int32 m_orderId = 2[(yd_fieldoptions.field_cname) = "排序Id"];
	optional string m_name = 3[(yd_fieldoptions.field_cname) = "备注", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_qeuidItem = 4[(yd_fieldoptions.field_cname) = "专属物品"];
	optional int32 m_equipQualityMin = 5[(yd_fieldoptions.field_cname) = "初始品质"];
	optional int32 m_equipModelId = 6[(yd_fieldoptions.field_cname) = "模型资源Id"];
	optional int32 m_forging = 7[(yd_fieldoptions.field_cname) = "锻造类型"];
	optional int32 m_star = 8[(yd_fieldoptions.field_cname) = "升星类型"];
	optional string m_skill = 9[(yd_fieldoptions.field_cname) = "天赋技能", (yd_fieldoptions.field_bufsize) = 64];
	repeated E_PetPetequipActDesc m_act = 10[(yd_fieldoptions.field_cname) = "激活", (yd_fieldoptions.field_arysize) = 2];
}


message Sheet_PetPetequip
{
	repeated E_PetPetequip E_PetPetequip_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_PetEquipvalueAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_PetEquipvalueExtraDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_PetEquipvalue
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_equipValue = 2[(yd_fieldoptions.field_cname) = "属性类型"];
	optional int32 m_equipLv = 3[(yd_fieldoptions.field_cname) = "阶数"];
	optional int32 m_item = 4[(yd_fieldoptions.field_cname) = "阶数物品"];
	optional int32 m_winProb = 5[(yd_fieldoptions.field_cname) = "锻造成功概率"];
	optional int32 m_equipItem = 6[(yd_fieldoptions.field_cname) = "道具消耗"];
	optional int32 m_equipMun = 7[(yd_fieldoptions.field_cname) = "消耗数量"];
	optional int32 m_failMax = 8[(yd_fieldoptions.field_cname) = "锻造保底次数"];
	repeated E_PetEquipvalueAttributeDesc m_Attribute = 9[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 5];
	repeated E_PetEquipvalueExtraDesc m_extra = 10[(yd_fieldoptions.field_cname) = "额外属性", (yd_fieldoptions.field_arysize) = 5];
}


message Sheet_PetEquipvalue
{
	repeated E_PetEquipvalue E_PetEquipvalue_List = 1[(yd_fieldoptions.field_arysize)=1024];
}

message E_PetStarvalueAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_PetStarvalueEquipDesc
{
	optional int32 m_Mun = 1[(yd_fieldoptions.field_cname) = "数量"];
	optional int32 m_Item = 2[(yd_fieldoptions.field_cname) = "消耗"];
}

message E_PetStarvalue
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_starValue = 2[(yd_fieldoptions.field_cname) = "属性类型"];
	optional int32 m_starLv = 3[(yd_fieldoptions.field_cname) = "星级"];
	repeated E_PetStarvalueAttributeDesc m_Attribute = 4[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 4];
	repeated string m_advance_Type = 5[(yd_fieldoptions.field_cname) = "额外属性", (yd_fieldoptions.field_arysize) = 3, (yd_fieldoptions.field_bufsize) = 64];
	repeated E_PetStarvalueEquipDesc m_equip = 6[(yd_fieldoptions.field_cname) = "道具", (yd_fieldoptions.field_arysize) = 2];
}


message Sheet_PetStarvalue
{
	repeated E_PetStarvalue E_PetStarvalue_List = 1[(yd_fieldoptions.field_arysize)=256];
}

message E_PetWraithsAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_PetWraithsAttributebctDesc
{
	optional int32 m_type = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_PetWraiths
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "装备id"];
	optional string m_name = 2[(yd_fieldoptions.field_cname) = "妖魂名称", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_affix = 3[(yd_fieldoptions.field_cname) = "词缀类型"];
	optional int32 m_position = 4[(yd_fieldoptions.field_cname) = "妖魂部位"];
	optional int32 m_quality = 5[(yd_fieldoptions.field_cname) = "妖魂品质"];
	optional int32 m_star = 6[(yd_fieldoptions.field_cname) = "妖魂星级"];
	optional int32 m_propertyLv = 7[(yd_fieldoptions.field_cname) = "升级类型"];
	optional int32 m_propertyTop = 8[(yd_fieldoptions.field_cname) = "突破类型"];
	repeated E_PetWraithsAttributeDesc m_attribute = 9[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 3];
	repeated E_PetWraithsAttributebctDesc m_attributeBct = 10[(yd_fieldoptions.field_cname) = "额外属性", (yd_fieldoptions.field_arysize) = 2];
}


message Sheet_PetWraiths
{
	repeated E_PetWraiths E_PetWraiths_List = 1[(yd_fieldoptions.field_arysize)=256];
}

message E_PetWraithslvAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_PetWraithslv
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "属性类型"];
	optional int32 m_advanceLv = 3[(yd_fieldoptions.field_cname) = "进阶等级"];
	optional int32 m_lv = 4[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_wraithsItem = 5[(yd_fieldoptions.field_cname) = "道具消耗"];
	optional int32 m_wraithsMun = 6[(yd_fieldoptions.field_cname) = "消耗数量"];
	optional int32 m_lvExp = 7[(yd_fieldoptions.field_cname) = "升级所需经验"];
	repeated E_PetWraithslvAttributeDesc m_attribute = 8[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_PetWraithslv
{
	repeated E_PetWraithslv E_PetWraithslv_List = 1[(yd_fieldoptions.field_arysize)=256];
}

message E_PetSmeltItemDesc
{
	optional int32 m_maxNum = 1[(yd_fieldoptions.field_cname) = "最大数量"];
	optional int32 m_minNum = 2[(yd_fieldoptions.field_cname) = "最小数量"];
	optional int32 m_rarerand = 3[(yd_fieldoptions.field_cname) = "概率"];
	optional int32 m_id = 4[(yd_fieldoptions.field_cname) = "道具"];
}

message E_PetSmelt
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_quality = 2[(yd_fieldoptions.field_cname) = "品质"];
	optional int32 m_star = 3[(yd_fieldoptions.field_cname) = "星级"];
	optional int32 m_putMun = 4[(yd_fieldoptions.field_cname) = "放入妖魂数"];
	optional int32 m_smeltExp = 5[(yd_fieldoptions.field_cname) = "获得经验"];
	optional int32 m_monsterNum = 6[(yd_fieldoptions.field_cname) = "妖气获得数量"];
	repeated E_PetSmeltItemDesc m_item = 7[(yd_fieldoptions.field_cname) = "获得", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_PetSmelt
{
	repeated E_PetSmelt E_PetSmelt_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_PetRefineconversion
{
	optional int32 m_itemid = 1[(yd_fieldoptions.field_cname) = "兑换道具"];
	optional int32 m_group = 2[(yd_fieldoptions.field_cname) = "组"];
	optional int32 m_num = 3[(yd_fieldoptions.field_cname) = "兑换数量"];
	optional int32 m_condition = 4[(yd_fieldoptions.field_cname) = "兑换条件"];
	optional int32 m_conversion = 5[(yd_fieldoptions.field_cname) = "展示条件"];
}


message Sheet_PetRefineconversion
{
	repeated E_PetRefineconversion E_PetRefineconversion_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_PetStoveStoveDesc
{
	optional int32 m_num = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_value = 2[(yd_fieldoptions.field_cname) = "属性"];
}

message E_PetStove
{
	optional int32 m_lv = 1[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_exp = 2[(yd_fieldoptions.field_cname) = "升级所需经验"];
	optional int32 m_quality = 3[(yd_fieldoptions.field_cname) = "炼妖开放上限品质"];
	optional int32 m_star = 4[(yd_fieldoptions.field_cname) = "炼妖开放上限星数"];
	repeated E_PetStoveStoveDesc m_stove = 5[(yd_fieldoptions.field_cname) = "妖炉", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_PetStove
{
	repeated E_PetStove E_PetStove_List = 1[(yd_fieldoptions.field_arysize)=512];
}

message E_PetSuitAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_PetSuit
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_quality = 2[(yd_fieldoptions.field_cname) = "妖魂品质"];
	optional int32 m_star = 3[(yd_fieldoptions.field_cname) = "妖魂星级"];
	optional int32 m_wraithsQuality = 4[(yd_fieldoptions.field_cname) = "妖魂需求"];
	optional int32 m_piece = 5[(yd_fieldoptions.field_cname) = "套装件数"];
	optional int32 m_resonanceType = 6[(yd_fieldoptions.field_cname) = "共鸣属性"];
	optional int32 m_resonanceValue = 7[(yd_fieldoptions.field_cname) = "共鸣属性值"];
	repeated E_PetSuitAttributeDesc m_Attribute = 8[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 5];
}


message Sheet_PetSuit
{
	repeated E_PetSuit E_PetSuit_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_PetConstMaterialDesc
{
	optional int32 m_exp = 1[(yd_fieldoptions.field_cname) = "经验值"];
	optional int32 m_item = 2[(yd_fieldoptions.field_cname) = "道具"];
}

message E_PetConst
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_open = 2[(yd_fieldoptions.field_cname) = "开启条件"];
	optional int32 m_solt = 3[(yd_fieldoptions.field_cname) = "槽位解锁"];
	optional int32 m_item = 4[(yd_fieldoptions.field_cname) = "消耗"];
	optional int32 m_num = 5[(yd_fieldoptions.field_cname) = "数量"];
	optional int32 m_items = 6[(yd_fieldoptions.field_cname) = "第五消耗"];
	optional int32 m_nums = 7[(yd_fieldoptions.field_cname) = "第五数量"];
	repeated E_PetConstMaterialDesc m_material = 8[(yd_fieldoptions.field_cname) = "升级", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_PetConst
{
	repeated E_PetConst E_PetConst_List = 1[(yd_fieldoptions.field_arysize)=2];
}

message E_PetTopAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_PetTop
{
	optional int32 m_topType = 1[(yd_fieldoptions.field_cname) = "突破类型"];
	repeated E_PetTopAttributeDesc m_attribute = 2[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 16];
}


message Sheet_PetTop
{
	repeated E_PetTop E_PetTop_List = 1[(yd_fieldoptions.field_arysize)=256];
}

message E_PetTopitem
{
	optional int32 m_lv = 1[(yd_fieldoptions.field_cname) = "突破等级"];
	optional int32 m_item = 2[(yd_fieldoptions.field_cname) = "突破消耗"];
	optional int32 m_num = 3[(yd_fieldoptions.field_cname) = "消耗数量"];
}


message Sheet_PetTopitem
{
	repeated E_PetTopitem E_PetTopitem_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_PetPrivilegePrivilegeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_att = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_PetPrivilege
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional string m_activate = 2[(yd_fieldoptions.field_cname) = "激活条件", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_doubleItem = 3[(yd_fieldoptions.field_cname) = "道具翻倍"];
	optional int32 m_experienceExp = 4[(yd_fieldoptions.field_cname) = "经验加成"];
	repeated E_PetPrivilegePrivilegeDesc m_privilege = 5[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_PetPrivilege
{
	repeated E_PetPrivilege E_PetPrivilege_List = 1[(yd_fieldoptions.field_arysize)=2];
}
