package proto_ff;

import "yd_fieldoptions.proto";


message E_DupDup
{
	optional int32 m_ID = 1[(yd_fieldoptions.field_cname) = "副本ID"];
	optional int32 m_scripID = 2[(yd_fieldoptions.field_cname) = "刷怪脚本ID"];
	optional int32 m_scripType = 3[(yd_fieldoptions.field_cname) = "刷怪脚本类型"];
	optional int32 m_dupLevel = 4[(yd_fieldoptions.field_cname) = "副本等级"];
	optional int32 m_scripMonType = 5[(yd_fieldoptions.field_cname) = "脚本怪物类型"];
	optional string m_scripMonID = 6[(yd_fieldoptions.field_cname) = "脚本怪物id", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_groupID = 7[(yd_fieldoptions.field_cname) = "所属副本组ID"];
	optional int32 m_subType = 8[(yd_fieldoptions.field_cname) = "子类型"];
	optional int32 m_layer = 9[(yd_fieldoptions.field_cname) = "层级"];
	optional int32 m_recommendPower = 10[(yd_fieldoptions.field_cname) = "推荐战力"];
	optional int32 m_duplicateType = 11[(yd_fieldoptions.field_cname) = "副本内容类型"];
	optional int64 m_mapID = 12[(yd_fieldoptions.field_cname) = "场景ID"];
	optional int32 m_levelLimit = 13[(yd_fieldoptions.field_cname) = "等级要求下限"];
	optional int32 m_functionID = 14[(yd_fieldoptions.field_cname) = "额外功能开放要求"];
	optional int32 m_pre = 15[(yd_fieldoptions.field_cname) = "前置副本要求"];
	optional int32 m_isAutoFight = 16[(yd_fieldoptions.field_cname) = "是否允许自动战斗"];
	optional string m_condition = 17[(yd_fieldoptions.field_cname) = "副本胜利条件类型", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_reviveMaxTimes = 18[(yd_fieldoptions.field_cname) = "复活次数上限"];
	optional int32 m_TeamObjectID = 19[(yd_fieldoptions.field_cname) = "组队目标ID"];
	optional string m_gradeCondition = 20[(yd_fieldoptions.field_cname) = "星级时间", (yd_fieldoptions.field_bufsize) = 64];
	optional int64 m_sweepRewardBoxID = 21[(yd_fieldoptions.field_cname) = "扫荡奖励BOXID"];
	optional int32 m_sweepRewardExp = 22[(yd_fieldoptions.field_cname) = "扫荡经验奖励"];
	optional int32 m_sweepExpType = 23[(yd_fieldoptions.field_cname) = "扫荡经验类型"];
	optional string m_trackpoint = 24[(yd_fieldoptions.field_cname) = "副本寻路点", (yd_fieldoptions.field_bufsize) = 64];
	optional string m_pathOfmonster = 25[(yd_fieldoptions.field_cname) = "副本寻路点对应怪物", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_isPatrol = 26[(yd_fieldoptions.field_cname) = "寻路前是否巡敌"];
	optional int32 m_failureBox = 27[(yd_fieldoptions.field_cname) = "失败奖励"];
	optional int32 m_planes = 28[(yd_fieldoptions.field_cname) = "位面"];
	repeated int32 m_box = 29[(yd_fieldoptions.field_cname) = "奖励组", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_DupDup
{
	repeated E_DupDup E_DupDup_List = 1[(yd_fieldoptions.field_arysize)=2048];
}

message E_DupBplevel
{
	optional int32 m_lv = 1[(yd_fieldoptions.field_cname) = "等级"];
	repeated int64 m_Bgdup = 2[(yd_fieldoptions.field_cname) = "八卦本", (yd_fieldoptions.field_arysize) = 5];
	repeated int64 m_BgdupSweep = 3[(yd_fieldoptions.field_cname) = "八卦本", (yd_fieldoptions.field_arysize) = 5];
}


message Sheet_DupBplevel
{
	repeated E_DupBplevel E_DupBplevel_List = 1[(yd_fieldoptions.field_arysize)=2048];
}

message E_DupTtowerwaveClearDesc
{
	optional int32 m_add = 1[(yd_fieldoptions.field_cname) = "增加关数"];
	optional int32 m_time = 2[(yd_fieldoptions.field_cname) = "时间"];
}

message E_DupTtowerwave
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "波id"];
	optional int32 m_scripID = 2[(yd_fieldoptions.field_cname) = "刷怪脚本ID"];
	optional string m_scripGid = 3[(yd_fieldoptions.field_cname) = "刷怪脚本类型", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_scripType = 4[(yd_fieldoptions.field_cname) = "刷怪脚本类型"];
	optional int32 m_dupLevel = 5[(yd_fieldoptions.field_cname) = "副本等级"];
	optional int32 m_scripMonType = 6[(yd_fieldoptions.field_cname) = "脚本怪物类型"];
	optional string m_scripMonID = 7[(yd_fieldoptions.field_cname) = "脚本怪物id", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_recommendPower = 8[(yd_fieldoptions.field_cname) = "推荐战力"];
	optional int32 m_reward = 9[(yd_fieldoptions.field_cname) = "结算奖励"];
	optional int32 m_firstPass = 10[(yd_fieldoptions.field_cname) = "首通奖励"];
	optional int32 m_BP = 11[(yd_fieldoptions.field_cname) = "平均战力"];
	repeated E_DupTtowerwaveClearDesc m_clear = 12[(yd_fieldoptions.field_cname) = "通关", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_DupTtowerwave
{
	repeated E_DupTtowerwave E_DupTtowerwave_List = 1[(yd_fieldoptions.field_arysize)=1024];
}

message E_DupTowerreward
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "类型"];
	optional int32 m_cond = 3[(yd_fieldoptions.field_cname) = "领取条件"];
	optional int32 m_boxID = 4[(yd_fieldoptions.field_cname) = "box"];
}


message Sheet_DupTowerreward
{
	repeated E_DupTowerreward E_DupTowerreward_List = 1[(yd_fieldoptions.field_arysize)=256];
}

message E_DupGroup
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "副本组ID"];
	optional string m_name = 2[(yd_fieldoptions.field_cname) = "副本组名", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_privilegeType = 3[(yd_fieldoptions.field_cname) = "特权类型"];
	optional int32 m_dynamiclevel = 4[(yd_fieldoptions.field_cname) = "是否动态等级"];
	optional int32 m_groupTimesType = 5[(yd_fieldoptions.field_cname) = "组次数类型"];
	optional int32 m_resetCycle = 6[(yd_fieldoptions.field_cname) = "重置周期"];
	optional int32 m_groupTimes = 7[(yd_fieldoptions.field_cname) = "次数上限值"];
	optional int32 m_enterItemID = 8[(yd_fieldoptions.field_cname) = "副本进入道具"];
	optional int32 m_sweepType = 9[(yd_fieldoptions.field_cname) = "扫荡类型"];
	optional int32 m_sweepCondition = 10[(yd_fieldoptions.field_cname) = "扫荡条件"];
	optional int32 m_mergeCondition = 11[(yd_fieldoptions.field_cname) = "合并条件"];
	optional int32 m_addItemID = 12[(yd_fieldoptions.field_cname) = "增加次数物品ID"];
	optional int32 m_buyType = 13[(yd_fieldoptions.field_cname) = "购买次数消耗货币"];
	optional int32 m_buyItemId = 14[(yd_fieldoptions.field_cname) = "购买次数消耗物品"];
	optional string m_buyCost = 15[(yd_fieldoptions.field_cname) = "购买进入次数消耗", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_countDown = 16[(yd_fieldoptions.field_cname) = "倒计时时间"];
	optional int32 m_endDown = 17[(yd_fieldoptions.field_cname) = "结束倒计时"];
	optional int32 m_accountDown = 18[(yd_fieldoptions.field_cname) = "结算倒计时"];
	optional int32 m_funcionID = 19[(yd_fieldoptions.field_cname) = "功能ID"];
	optional int32 m_closeFuncionID = 20[(yd_fieldoptions.field_cname) = "关闭功能ID"];
	optional int64 m_link = 21[(yd_fieldoptions.field_cname) = "副本结束打开界面"];
	optional int32 m_festvialType = 22[(yd_fieldoptions.field_cname) = "活动id"];
}


message Sheet_DupGroup
{
	repeated E_DupGroup E_DupGroup_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_DupSweepmonsternum
{
	optional int32 m_ID = 1[(yd_fieldoptions.field_cname) = "ID"];
	optional int32 m_sweepExpType = 2[(yd_fieldoptions.field_cname) = "扫荡类型"];
	optional int32 m_minLevel = 3[(yd_fieldoptions.field_cname) = "玩家等极下限"];
	optional int32 m_maxLevel = 4[(yd_fieldoptions.field_cname) = "玩家等极上限"];
	optional int32 m_killNumber = 5[(yd_fieldoptions.field_cname) = "杀怪标准数量"];
	optional int32 m_monstervaluetype = 6[(yd_fieldoptions.field_cname) = "怪物数值类型"];
	optional int32 m_monstervalueParam = 7[(yd_fieldoptions.field_cname) = "怪物数值类型"];
}


message Sheet_DupSweepmonsternum
{
	repeated E_DupSweepmonsternum E_DupSweepmonsternum_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_DupWorldlvreward
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_groupID = 2[(yd_fieldoptions.field_cname) = "副本组id"];
	optional int32 m_lvtype = 3[(yd_fieldoptions.field_cname) = "世界等级类型"];
	optional int32 m_lvMin = 4[(yd_fieldoptions.field_cname) = "世界等级下限"];
	optional int32 m_failureBox = 5[(yd_fieldoptions.field_cname) = "失败奖励"];
	repeated int32 m_box = 6[(yd_fieldoptions.field_cname) = "星奖励", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_DupWorldlvreward
{
	repeated E_DupWorldlvreward E_DupWorldlvreward_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_DupPlanes
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "位面id"];
	optional int32 m_planesType = 2[(yd_fieldoptions.field_cname) = "位面类型"];
	optional string m_typeArgs = 3[(yd_fieldoptions.field_cname) = "类型参数", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_areaId = 4[(yd_fieldoptions.field_cname) = "区域id"];
}


message Sheet_DupPlanes
{
	repeated E_DupPlanes E_DupPlanes_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_DupYt_dupClearDesc
{
	optional int32 m_add = 1[(yd_fieldoptions.field_cname) = "增加关数"];
	optional int32 m_time = 2[(yd_fieldoptions.field_cname) = "时间"];
}

message E_DupYt_dup
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "副本id"];
	optional int32 m_layer = 2[(yd_fieldoptions.field_cname) = "所属层级"];
	optional int32 m_stage = 3[(yd_fieldoptions.field_cname) = "关卡等级"];
	optional int32 m_recommendLv = 4[(yd_fieldoptions.field_cname) = "推荐等级"];
	optional int32 m_recommendYK = 5[(yd_fieldoptions.field_cname) = "推荐妖抗"];
	optional int32 m_reward = 6[(yd_fieldoptions.field_cname) = "结算奖励"];
	optional int32 m_firstPass = 7[(yd_fieldoptions.field_cname) = "首通奖励"];
	optional int32 m_overlordBox = 8[(yd_fieldoptions.field_cname) = "霸主奖励"];
	optional int32 m_overlordTime = 9[(yd_fieldoptions.field_cname) = "霸主时间"];
	repeated E_DupYt_dupClearDesc m_clear = 10[(yd_fieldoptions.field_cname) = "通关", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_DupYt_dup
{
	repeated E_DupYt_dup E_DupYt_dup_List = 1[(yd_fieldoptions.field_arysize)=1024];
}
