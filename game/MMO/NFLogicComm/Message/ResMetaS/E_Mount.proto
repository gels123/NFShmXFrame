package proto_ff;

import "yd_fieldoptions.proto";


message E_MountFragmentAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_MountFragment
{
	optional int64 m_fragmentID = 1[(yd_fieldoptions.field_cname) = "碎片ID"];
	optional int64 m_item = 2[(yd_fieldoptions.field_cname) = "物品ID"];
	optional int32 m_itemNum = 3[(yd_fieldoptions.field_cname) = "碎片使用上限"];
	repeated E_MountFragmentAttributeDesc m_attribute = 4[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 5];
}


message Sheet_MountFragment
{
	repeated E_MountFragment E_MountFragment_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_MountValueAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_MountValue
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "类型"];
	optional int32 m_lv = 3[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_Exp = 4[(yd_fieldoptions.field_cname) = "升级需要经验"];
	optional int32 m_speed = 5[(yd_fieldoptions.field_cname) = "默认乘骑速度值"];
	repeated E_MountValueAttributeDesc m_Attribute = 6[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 9];
}


message Sheet_MountValue
{
	repeated E_MountValue E_MountValue_List = 1[(yd_fieldoptions.field_arysize)=2048];
}

message E_MountDisplayMaterialDesc
{
	optional int32 m_exp = 1[(yd_fieldoptions.field_cname) = "经验值"];
	optional int32 m_id = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_MountDisplay
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_speed = 2[(yd_fieldoptions.field_cname) = "默认乘骑速度值"];
	optional int32 m_UpLvType = 3[(yd_fieldoptions.field_cname) = "升级参考类型"];
	optional string m_skillID = 4[(yd_fieldoptions.field_cname) = "解锁技能组", (yd_fieldoptions.field_bufsize) = 64];
	optional string m_fxID = 5[(yd_fieldoptions.field_cname) = "幻化特效", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_starUp = 6[(yd_fieldoptions.field_cname) = "星星上限"];
	optional int32 m_LvMax = 7[(yd_fieldoptions.field_cname) = "等级上限"];
	repeated E_MountDisplayMaterialDesc m_material = 8[(yd_fieldoptions.field_cname) = "升级材料", (yd_fieldoptions.field_arysize) = 2];
	repeated int64 m_fragmentID = 9[(yd_fieldoptions.field_cname) = "关联碎片ID", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_MountDisplay
{
	repeated E_MountDisplay E_MountDisplay_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_MountUnlock
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_Lv = 2[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_ModelID = 3[(yd_fieldoptions.field_cname) = "模型id"];
	optional string m_Name = 4[(yd_fieldoptions.field_cname) = "名称", (yd_fieldoptions.field_bufsize) = 64];
}


message Sheet_MountUnlock
{
	repeated E_MountUnlock E_MountUnlock_List = 1[(yd_fieldoptions.field_arysize)=8];
}

message E_MountChangeMaterialDesc
{
	optional int32 m_exp = 1[(yd_fieldoptions.field_cname) = "经验值"];
	optional int32 m_id = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_MountChangeAttributeDesc
{
	optional int32 m_UpValue = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_UpBer = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_MountChange
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional string m_name = 2[(yd_fieldoptions.field_cname) = "名称", (yd_fieldoptions.field_bufsize) = 64];
	optional string m_advanceName = 3[(yd_fieldoptions.field_cname) = "进阶后名字", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_speed = 4[(yd_fieldoptions.field_cname) = "默认乘骑速度值"];
	optional int32 m_UpLvType = 5[(yd_fieldoptions.field_cname) = "升级参考类型"];
	optional int32 m_activeSkill = 6[(yd_fieldoptions.field_cname) = "激活获得技能"];
	optional string m_skillID = 7[(yd_fieldoptions.field_cname) = "解锁技能组", (yd_fieldoptions.field_bufsize) = 64];
	optional string m_fxID = 8[(yd_fieldoptions.field_cname) = "幻化特效", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_starMax = 9[(yd_fieldoptions.field_cname) = "星星上限"];
	optional int32 m_LvMax = 10[(yd_fieldoptions.field_cname) = "等级上限"];
	optional int32 m_ModelID = 11[(yd_fieldoptions.field_cname) = "模型id"];
	optional int32 m_activationItem = 12[(yd_fieldoptions.field_cname) = "激活需要的道具"];
	optional int32 m_activationNum = 13[(yd_fieldoptions.field_cname) = "激活需要的道具数量"];
	optional int32 m_starId = 14[(yd_fieldoptions.field_cname) = "升星需要道具ID"];
	optional string m_starNum = 15[(yd_fieldoptions.field_cname) = "升星需要数量", (yd_fieldoptions.field_bufsize) = 256];
	optional int32 m_starBer = 16[(yd_fieldoptions.field_cname) = "每星级提升百分比"];
	optional int32 m_upAttributeId = 17[(yd_fieldoptions.field_cname) = "进阶类型"];
	repeated E_MountChangeMaterialDesc m_material = 18[(yd_fieldoptions.field_cname) = "升级材料", (yd_fieldoptions.field_arysize) = 2];
	repeated E_MountChangeAttributeDesc m_Attribute = 19[(yd_fieldoptions.field_cname) = "百分比属性", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_MountChange
{
	repeated E_MountChange E_MountChange_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_MountAdvanceUpattributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_MountAdvance
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_upAttributeId = 2[(yd_fieldoptions.field_cname) = "进阶类型"];
	optional int32 m_starID = 3[(yd_fieldoptions.field_cname) = "进阶专属需求星星数量"];
	optional int32 m_skillID = 4[(yd_fieldoptions.field_cname) = "进阶专属技能"];
	repeated E_MountAdvanceUpattributeDesc m_upAttribute = 5[(yd_fieldoptions.field_cname) = "激活属性", (yd_fieldoptions.field_arysize) = 5];
}


message Sheet_MountAdvance
{
	repeated E_MountAdvance E_MountAdvance_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_MountBaby_egg
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "蛋道具id"];
	optional int32 m_item = 2[(yd_fieldoptions.field_cname) = "道具id"];
	optional int32 m_time = 3[(yd_fieldoptions.field_cname) = "蛋生成时间"];
	optional int32 m_itemBox = 4[(yd_fieldoptions.field_cname) = "奖励盒id"];
}


message Sheet_MountBaby_egg
{
	repeated E_MountBaby_egg E_MountBaby_egg_List = 1[(yd_fieldoptions.field_arysize)=8];
}

message E_MountHuakunUplvDesc
{
	optional int32 m_UpValue = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_UpBer = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_MountHuakunMaterialDesc
{
	optional int32 m_exp = 1[(yd_fieldoptions.field_cname) = "经验值"];
	optional int32 m_id = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_MountHuakunAdvanceDesc
{
	optional int32 m_UpValue = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_UpBer = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_MountHuakunAttributeDesc
{
	optional int32 m_UpValue = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_UpBer = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_MountHuakun
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_ModelID = 2[(yd_fieldoptions.field_cname) = "模型"];
	optional int32 m_quality = 3[(yd_fieldoptions.field_cname) = "坐骑品质"];
	optional int32 m_speed = 4[(yd_fieldoptions.field_cname) = "默认乘骑速度值"];
	optional int32 m_UpLvType = 5[(yd_fieldoptions.field_cname) = "升级参考类型"];
	optional int32 m_activateItem = 6[(yd_fieldoptions.field_cname) = "激活材料"];
	optional int32 m_activateItemNum = 7[(yd_fieldoptions.field_cname) = "激活材料需要数量"];
	optional int32 m_advanceType = 8[(yd_fieldoptions.field_cname) = "进阶类型"];
	optional int32 m_starvanceType = 9[(yd_fieldoptions.field_cname) = "星级类型"];
	optional int32 m_starLimit = 10[(yd_fieldoptions.field_cname) = "星级上限"];
	optional int32 m_starBer = 11[(yd_fieldoptions.field_cname) = "每星级提升百分比"];
	optional string m_skill_LG = 12[(yd_fieldoptions.field_cname) = "灵根技能", (yd_fieldoptions.field_bufsize) = 64];
	optional string m_skill_BD = 13[(yd_fieldoptions.field_cname) = "被动", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_soaringAttributeId = 14[(yd_fieldoptions.field_cname) = "飞升类型"];
	optional int32 m_comprehend = 15[(yd_fieldoptions.field_cname) = "提悟类型"];
	optional string m_exclusive = 16[(yd_fieldoptions.field_cname) = "提悟专属", (yd_fieldoptions.field_bufsize) = 64];
	optional string m_comprehendSkill = 17[(yd_fieldoptions.field_cname) = "提悟技能", (yd_fieldoptions.field_bufsize) = 64];
	optional string m_potential = 18[(yd_fieldoptions.field_cname) = "潜能", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_comprehendUpItem = 19[(yd_fieldoptions.field_cname) = "提悟升品显示"];
	optional int32 m_comprehendType = 20[(yd_fieldoptions.field_cname) = "提悟属性类型"];
	optional int32 m_ratio = 21[(yd_fieldoptions.field_cname) = "提悟非百分比属性比例"];
	optional int32 m_ratioPercentage = 22[(yd_fieldoptions.field_cname) = "提悟百分比属性比例"];
	optional string m_equipSuit = 23[(yd_fieldoptions.field_cname) = "鲲灵套装", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_qualityMax = 24[(yd_fieldoptions.field_cname) = "鲲灵穿戴最大品质"];
	optional string m_liLianChangeItem = 25[(yd_fieldoptions.field_cname) = "历练异化鲲掉落", (yd_fieldoptions.field_bufsize) = 64];
	repeated E_MountHuakunUplvDesc m_UpLv = 26[(yd_fieldoptions.field_cname) = "百分比属性", (yd_fieldoptions.field_arysize) = 4];
	repeated E_MountHuakunMaterialDesc m_material = 27[(yd_fieldoptions.field_cname) = "升级材料", (yd_fieldoptions.field_arysize) = 3];
	repeated E_MountHuakunAdvanceDesc m_advance = 28[(yd_fieldoptions.field_cname) = "百分比属性", (yd_fieldoptions.field_arysize) = 4];
	repeated int32 m_UpStarItem = 29[(yd_fieldoptions.field_cname) = "升星需要道具ID", (yd_fieldoptions.field_arysize) = 2];
	repeated string m_UpStarNum = 30[(yd_fieldoptions.field_cname) = "升星总共需要数量", (yd_fieldoptions.field_arysize) = 2, (yd_fieldoptions.field_bufsize) = 64];
	repeated E_MountHuakunAttributeDesc m_Attribute = 31[(yd_fieldoptions.field_cname) = "百分比属性", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_MountHuakun
{
	repeated E_MountHuakun E_MountHuakun_List = 1[(yd_fieldoptions.field_arysize)=8];
}

message E_MountHuakun_valueAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_MountHuakun_value
{
	optional int64 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_huaKunType = 2[(yd_fieldoptions.field_cname) = "属性类型"];
	optional int32 m_huaKunLv = 3[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_huaKunExp = 4[(yd_fieldoptions.field_cname) = "升级所需经验"];
	repeated E_MountHuakun_valueAttributeDesc m_attribute = 5[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 6];
}


message Sheet_MountHuakun_value
{
	repeated E_MountHuakun_value E_MountHuakun_value_List = 1[(yd_fieldoptions.field_arysize)=512];
}

message E_MountHuakun_advancevalueItemDesc
{
	optional int32 m_Num = 1[(yd_fieldoptions.field_cname) = "数量"];
	optional int32 m_id = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_MountHuakun_advancevalue
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_Lv = 2[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_advanceType = 3[(yd_fieldoptions.field_cname) = "进阶类型"];
	optional int32 m_winProb = 4[(yd_fieldoptions.field_cname) = "进阶成功概率"];
	optional int32 m_failLv = 5[(yd_fieldoptions.field_cname) = "进阶失败掉级"];
	repeated E_MountHuakun_advancevalueItemDesc m_item = 6[(yd_fieldoptions.field_cname) = "需求道具", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_MountHuakun_advancevalue
{
	repeated E_MountHuakun_advancevalue E_MountHuakun_advancevalue_List = 1[(yd_fieldoptions.field_arysize)=128];
}

message E_MountHuakun_changeAttributeDesc
{
	optional int32 m_UpValue = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_UpBer = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_MountHuakun_change
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_huaKunId = 2[(yd_fieldoptions.field_cname) = "名称"];
	optional int32 m_speed = 3[(yd_fieldoptions.field_cname) = "默认乘骑速度值"];
	optional string m_fxID = 4[(yd_fieldoptions.field_cname) = "幻化特效", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_ModelID = 5[(yd_fieldoptions.field_cname) = "模型id"];
	optional int32 m_activationItem = 6[(yd_fieldoptions.field_cname) = "激活需要的道具"];
	optional int32 m_activationNum = 7[(yd_fieldoptions.field_cname) = "激活需要的道具数量"];
	optional int32 m_starAttributeId = 8[(yd_fieldoptions.field_cname) = "升星类型"];
	optional int32 m_starMax = 9[(yd_fieldoptions.field_cname) = "星星上限"];
	optional int32 m_starId = 10[(yd_fieldoptions.field_cname) = "升星需要道具ID"];
	optional string m_starNum = 11[(yd_fieldoptions.field_cname) = "升星需要数量", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_starBer = 12[(yd_fieldoptions.field_cname) = "每星级提升百分比"];
	optional int32 m_changeAttributeId = 13[(yd_fieldoptions.field_cname) = "异化飞升类型"];
	repeated E_MountHuakun_changeAttributeDesc m_Attribute = 14[(yd_fieldoptions.field_cname) = "百分比属性", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_MountHuakun_change
{
	repeated E_MountHuakun_change E_MountHuakun_change_List = 1[(yd_fieldoptions.field_arysize)=8];
}

message E_MountHuakun_advanceUpattributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "ID"];
}

message E_MountHuakun_advance
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_upAttributeId = 2[(yd_fieldoptions.field_cname) = "进阶类型"];
	optional int32 m_starID = 3[(yd_fieldoptions.field_cname) = "进阶专属需求星星数量"];
	optional int32 m_skillID = 4[(yd_fieldoptions.field_cname) = "进阶专属技能"];
	repeated E_MountHuakun_advanceUpattributeDesc m_upAttribute = 5[(yd_fieldoptions.field_cname) = "激活属性", (yd_fieldoptions.field_arysize) = 5];
}


message Sheet_MountHuakun_advance
{
	repeated E_MountHuakun_advance E_MountHuakun_advance_List = 1[(yd_fieldoptions.field_arysize)=128];
}

message E_MountBloodAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "数值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_MountBlood
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "星数"];
	repeated E_MountBloodAttributeDesc m_attribute = 2[(yd_fieldoptions.field_cname) = "基础属性", (yd_fieldoptions.field_arysize) = 2];
}


message Sheet_MountBlood
{
	repeated E_MountBlood E_MountBlood_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_MountHuakun_equip
{
	optional int32 m_equipId = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_part = 2[(yd_fieldoptions.field_cname) = "部位"];
	optional int32 m_quality = 3[(yd_fieldoptions.field_cname) = "品质"];
	optional int32 m_equipIntensify = 4[(yd_fieldoptions.field_cname) = "强化类型"];
	optional int32 m_srtongUp = 5[(yd_fieldoptions.field_cname) = "强化上限"];
	optional int32 m_advanceIntensify = 6[(yd_fieldoptions.field_cname) = "进阶类型"];
	optional int32 m_equipTtop = 7[(yd_fieldoptions.field_cname) = "突破类型"];
	optional int32 m_resolve = 8[(yd_fieldoptions.field_cname) = "鲲灵分解材料"];
	optional int32 m_resolveMun = 9[(yd_fieldoptions.field_cname) = "分解数量"];
}


message Sheet_MountHuakun_equip
{
	repeated E_MountHuakun_equip E_MountHuakun_equip_List = 1[(yd_fieldoptions.field_arysize)=64];
}

message E_MountEquip_valueAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_MountEquip_value
{
	optional int32 m_equipIntensify = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_equipValue = 2[(yd_fieldoptions.field_cname) = "属性类型"];
	optional int32 m_equipLv = 3[(yd_fieldoptions.field_cname) = "等级"];
	optional int32 m_equipItem = 4[(yd_fieldoptions.field_cname) = "道具消耗"];
	optional int32 m_equipMun = 5[(yd_fieldoptions.field_cname) = "消耗数量"];
	repeated E_MountEquip_valueAttributeDesc m_Attribute = 6[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 4];
}


message Sheet_MountEquip_value
{
	repeated E_MountEquip_value E_MountEquip_value_List = 1[(yd_fieldoptions.field_arysize)=4096];
}

message E_MountEquipsuitAttributeDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = ""];
}

message E_MountEquipsuit
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_quality = 2[(yd_fieldoptions.field_cname) = "要求品质"];
	optional int32 m_piece = 3[(yd_fieldoptions.field_cname) = "套装件数"];
	repeated E_MountEquipsuitAttributeDesc m_Attribute = 4[(yd_fieldoptions.field_cname) = "属性", (yd_fieldoptions.field_arysize) = 3];
}


message Sheet_MountEquipsuit
{
	repeated E_MountEquipsuit E_MountEquipsuit_List = 1[(yd_fieldoptions.field_arysize)=32];
}

message E_MountEquiptopTopDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "属性"];
}

message E_MountEquiptopPercentDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "属性"];
}

message E_MountEquiptop
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_positionId = 2[(yd_fieldoptions.field_cname) = "装备部位id"];
	optional int32 m_equipTtop = 3[(yd_fieldoptions.field_cname) = "突破类型"];
	optional int32 m_quality = 4[(yd_fieldoptions.field_cname) = "品质"];
	repeated E_MountEquiptopTopDesc m_top = 5[(yd_fieldoptions.field_cname) = "非百分比", (yd_fieldoptions.field_arysize) = 8];
	repeated E_MountEquiptopPercentDesc m_percent = 6[(yd_fieldoptions.field_cname) = "百分比", (yd_fieldoptions.field_arysize) = 8];
}


message Sheet_MountEquiptop
{
	repeated E_MountEquiptop E_MountEquiptop_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_MountEquiptopvalue
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_quality = 2[(yd_fieldoptions.field_cname) = "鲲灵品质"];
	optional int32 m_top = 3[(yd_fieldoptions.field_cname) = "鲲灵突破"];
	optional int32 m_value = 4[(yd_fieldoptions.field_cname) = "初始进度值"];
}


message Sheet_MountEquiptopvalue
{
	repeated E_MountEquiptopvalue E_MountEquiptopvalue_List = 1[(yd_fieldoptions.field_arysize)=128];
}

message E_MountEquippart
{
	optional int32 m_part = 1[(yd_fieldoptions.field_cname) = "部位"];
	optional int32 m_quality = 2[(yd_fieldoptions.field_cname) = "化鲲品质"];
	optional int32 m_honeOpen = 3[(yd_fieldoptions.field_cname) = "部位解锁类型"];
	optional int32 m_item = 4[(yd_fieldoptions.field_cname) = "所需物品"];
	optional int32 m_num = 5[(yd_fieldoptions.field_cname) = "数量"];
	optional int32 m_itemTips = 6[(yd_fieldoptions.field_cname) = "展示tips"];
}


message Sheet_MountEquippart
{
	repeated E_MountEquippart E_MountEquippart_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_MountEmpowermenttour_debris
{
	optional int32 m_fairylandId = 1[(yd_fieldoptions.field_cname) = "仙境id"];
	optional int32 m_fairylandNextId = 2[(yd_fieldoptions.field_cname) = "下一个仙境id"];
	optional string m_fairylandSkin = 3[(yd_fieldoptions.field_cname) = "仙境获取皮肤预览", (yd_fieldoptions.field_bufsize) = 64];
}


message Sheet_MountEmpowermenttour_debris
{
	repeated E_MountEmpowermenttour_debris E_MountEmpowermenttour_debris_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_MountEmpowermentTourDesc
{
	optional int32 m_value = 1[(yd_fieldoptions.field_cname) = "数值"];
	optional int32 m_type = 2[(yd_fieldoptions.field_cname) = "类型"];
}

message E_MountEmpowerment
{
	optional int32 m_tourId = 1[(yd_fieldoptions.field_cname) = "游记id"];
	optional int32 m_fairylandId = 2[(yd_fieldoptions.field_cname) = "仙境id"];
	optional int32 m_tourItem = 3[(yd_fieldoptions.field_cname) = "碎片id"];
	optional int32 m_tourDebris = 4[(yd_fieldoptions.field_cname) = "游记总碎片"];
	repeated E_MountEmpowermentTourDesc m_tour = 5[(yd_fieldoptions.field_cname) = "游记属性", (yd_fieldoptions.field_arysize) = 2];
}


message Sheet_MountEmpowerment
{
	repeated E_MountEmpowerment E_MountEmpowerment_List = 1[(yd_fieldoptions.field_arysize)=128];
}

message E_MountEmpowerment_position
{
	optional int32 m_empowermentSlot = 1[(yd_fieldoptions.field_cname) = "历练槽位"];
	optional int32 m_unlockTime = 2[(yd_fieldoptions.field_cname) = "解锁条件"];
	optional int32 m_unlockNum = 3[(yd_fieldoptions.field_cname) = "解锁数量"];
}


message Sheet_MountEmpowerment_position
{
	repeated E_MountEmpowerment_position E_MountEmpowerment_position_List = 1[(yd_fieldoptions.field_arysize)=8];
}

message E_MountEmpowerment_slot
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_dissociateLevel = 2[(yd_fieldoptions.field_cname) = "游历级别"];
	optional int32 m_dissociateTime = 3[(yd_fieldoptions.field_cname) = "时间档位"];
	optional int32 m_dissociateHour = 4[(yd_fieldoptions.field_cname) = "时长"];
	optional int32 m_dissociateItem = 5[(yd_fieldoptions.field_cname) = "游离级别消耗"];
	optional int32 m_dissociateNum = 6[(yd_fieldoptions.field_cname) = "消耗数量"];
	optional string m_eventTime = 7[(yd_fieldoptions.field_cname) = "播放事件时间间隔范围", (yd_fieldoptions.field_bufsize) = 64];
	optional int32 m_dissociateBox = 8[(yd_fieldoptions.field_cname) = "服务器奖励"];
}


message Sheet_MountEmpowerment_slot
{
	repeated E_MountEmpowerment_slot E_MountEmpowerment_slot_List = 1[(yd_fieldoptions.field_arysize)=16];
}

message E_MountEmpowerment_event
{
	optional int32 m_id = 1[(yd_fieldoptions.field_cname) = "id"];
	optional int32 m_eventType = 2[(yd_fieldoptions.field_cname) = "类型"];
	optional int32 m_weight = 3[(yd_fieldoptions.field_cname) = "权重"];
}


message Sheet_MountEmpowerment_event
{
	repeated E_MountEmpowerment_event E_MountEmpowerment_event_List = 1[(yd_fieldoptions.field_arysize)=16];
}
