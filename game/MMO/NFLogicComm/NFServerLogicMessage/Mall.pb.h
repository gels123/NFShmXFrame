// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mall.proto

#ifndef PROTOBUF_Mall_2eproto__INCLUDED
#define PROTOBUF_Mall_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "Com.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Mall_2eproto();
void protobuf_AssignDesc_Mall_2eproto();
void protobuf_ShutdownFile_Mall_2eproto();

class MallProto;
class MallMutProto;
class MallInfoReq;
class MallInfoRsp;
class MallBuyReq;
class MallBuyRsp;
class MallUpdateRsp;

// ===================================================================

class MallProto : public ::google::protobuf::Message {
 public:
  MallProto();
  virtual ~MallProto();

  MallProto(const MallProto& from);

  inline MallProto& operator=(const MallProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallProto& default_instance();

  void Swap(MallProto* other);

  // implements Message ----------------------------------------------

  MallProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallProto& from);
  void MergeFrom(const MallProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MallProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Mall_2eproto();
  friend void protobuf_AssignDesc_Mall_2eproto();
  friend void protobuf_ShutdownFile_Mall_2eproto();

  void InitAsDefaultInstance();
  static MallProto* default_instance_;
};
// -------------------------------------------------------------------

class MallMutProto : public ::google::protobuf::Message {
 public:
  MallMutProto();
  virtual ~MallMutProto();

  MallMutProto(const MallMutProto& from);

  inline MallMutProto& operator=(const MallMutProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallMutProto& default_instance();

  void Swap(MallMutProto* other);

  // implements Message ----------------------------------------------

  MallMutProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallMutProto& from);
  void MergeFrom(const MallMutProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.MallProto lst = 1;
  inline int lst_size() const;
  inline void clear_lst();
  static const int kLstFieldNumber = 1;
  inline const ::proto_ff::MallProto& lst(int index) const;
  inline ::proto_ff::MallProto* mutable_lst(int index);
  inline ::proto_ff::MallProto* add_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MallProto >&
      lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MallProto >*
      mutable_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.MallMutProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::MallProto > lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Mall_2eproto();
  friend void protobuf_AssignDesc_Mall_2eproto();
  friend void protobuf_ShutdownFile_Mall_2eproto();

  void InitAsDefaultInstance();
  static MallMutProto* default_instance_;
};
// -------------------------------------------------------------------

class MallInfoReq : public ::google::protobuf::Message {
 public:
  MallInfoReq();
  virtual ~MallInfoReq();

  MallInfoReq(const MallInfoReq& from);

  inline MallInfoReq& operator=(const MallInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallInfoReq& default_instance();

  void Swap(MallInfoReq* other);

  // implements Message ----------------------------------------------

  MallInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallInfoReq& from);
  void MergeFrom(const MallInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.MallInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Mall_2eproto();
  friend void protobuf_AssignDesc_Mall_2eproto();
  friend void protobuf_ShutdownFile_Mall_2eproto();

  void InitAsDefaultInstance();
  static MallInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class MallInfoRsp : public ::google::protobuf::Message {
 public:
  MallInfoRsp();
  virtual ~MallInfoRsp();

  MallInfoRsp(const MallInfoRsp& from);

  inline MallInfoRsp& operator=(const MallInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallInfoRsp& default_instance();

  void Swap(MallInfoRsp* other);

  // implements Message ----------------------------------------------

  MallInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallInfoRsp& from);
  void MergeFrom(const MallInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.MallMutProto day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline const ::proto_ff::MallMutProto& day() const;
  inline ::proto_ff::MallMutProto* mutable_day();
  inline ::proto_ff::MallMutProto* release_day();
  inline void set_allocated_day(::proto_ff::MallMutProto* day);

  // optional .proto_ff.MallMutProto week = 2;
  inline bool has_week() const;
  inline void clear_week();
  static const int kWeekFieldNumber = 2;
  inline const ::proto_ff::MallMutProto& week() const;
  inline ::proto_ff::MallMutProto* mutable_week();
  inline ::proto_ff::MallMutProto* release_week();
  inline void set_allocated_week(::proto_ff::MallMutProto* week);

  // optional .proto_ff.MallMutProto forever = 3;
  inline bool has_forever() const;
  inline void clear_forever();
  static const int kForeverFieldNumber = 3;
  inline const ::proto_ff::MallMutProto& forever() const;
  inline ::proto_ff::MallMutProto* mutable_forever();
  inline ::proto_ff::MallMutProto* release_forever();
  inline void set_allocated_forever(::proto_ff::MallMutProto* forever);

  // @@protoc_insertion_point(class_scope:proto_ff.MallInfoRsp)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_week();
  inline void clear_has_week();
  inline void set_has_forever();
  inline void clear_has_forever();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::MallMutProto* day_;
  ::proto_ff::MallMutProto* week_;
  ::proto_ff::MallMutProto* forever_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Mall_2eproto();
  friend void protobuf_AssignDesc_Mall_2eproto();
  friend void protobuf_ShutdownFile_Mall_2eproto();

  void InitAsDefaultInstance();
  static MallInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class MallBuyReq : public ::google::protobuf::Message {
 public:
  MallBuyReq();
  virtual ~MallBuyReq();

  MallBuyReq(const MallBuyReq& from);

  inline MallBuyReq& operator=(const MallBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallBuyReq& default_instance();

  void Swap(MallBuyReq* other);

  // implements Message ----------------------------------------------

  MallBuyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallBuyReq& from);
  void MergeFrom(const MallBuyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MallBuyReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Mall_2eproto();
  friend void protobuf_AssignDesc_Mall_2eproto();
  friend void protobuf_ShutdownFile_Mall_2eproto();

  void InitAsDefaultInstance();
  static MallBuyReq* default_instance_;
};
// -------------------------------------------------------------------

class MallBuyRsp : public ::google::protobuf::Message {
 public:
  MallBuyRsp();
  virtual ~MallBuyRsp();

  MallBuyRsp(const MallBuyRsp& from);

  inline MallBuyRsp& operator=(const MallBuyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallBuyRsp& default_instance();

  void Swap(MallBuyRsp* other);

  // implements Message ----------------------------------------------

  MallBuyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallBuyRsp& from);
  void MergeFrom(const MallBuyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MallBuyRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Mall_2eproto();
  friend void protobuf_AssignDesc_Mall_2eproto();
  friend void protobuf_ShutdownFile_Mall_2eproto();

  void InitAsDefaultInstance();
  static MallBuyRsp* default_instance_;
};
// -------------------------------------------------------------------

class MallUpdateRsp : public ::google::protobuf::Message {
 public:
  MallUpdateRsp();
  virtual ~MallUpdateRsp();

  MallUpdateRsp(const MallUpdateRsp& from);

  inline MallUpdateRsp& operator=(const MallUpdateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallUpdateRsp& default_instance();

  void Swap(MallUpdateRsp* other);

  // implements Message ----------------------------------------------

  MallUpdateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallUpdateRsp& from);
  void MergeFrom(const MallUpdateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.MallMutProto day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline const ::proto_ff::MallMutProto& day() const;
  inline ::proto_ff::MallMutProto* mutable_day();
  inline ::proto_ff::MallMutProto* release_day();
  inline void set_allocated_day(::proto_ff::MallMutProto* day);

  // optional .proto_ff.MallMutProto week = 2;
  inline bool has_week() const;
  inline void clear_week();
  static const int kWeekFieldNumber = 2;
  inline const ::proto_ff::MallMutProto& week() const;
  inline ::proto_ff::MallMutProto* mutable_week();
  inline ::proto_ff::MallMutProto* release_week();
  inline void set_allocated_week(::proto_ff::MallMutProto* week);

  // optional .proto_ff.MallMutProto forever = 3;
  inline bool has_forever() const;
  inline void clear_forever();
  static const int kForeverFieldNumber = 3;
  inline const ::proto_ff::MallMutProto& forever() const;
  inline ::proto_ff::MallMutProto* mutable_forever();
  inline ::proto_ff::MallMutProto* release_forever();
  inline void set_allocated_forever(::proto_ff::MallMutProto* forever);

  // @@protoc_insertion_point(class_scope:proto_ff.MallUpdateRsp)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_week();
  inline void clear_has_week();
  inline void set_has_forever();
  inline void clear_has_forever();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::MallMutProto* day_;
  ::proto_ff::MallMutProto* week_;
  ::proto_ff::MallMutProto* forever_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Mall_2eproto();
  friend void protobuf_AssignDesc_Mall_2eproto();
  friend void protobuf_ShutdownFile_Mall_2eproto();

  void InitAsDefaultInstance();
  static MallUpdateRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// MallProto

// optional int64 id = 1;
inline bool MallProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MallProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MallProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MallProto::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 MallProto::id() const {
  return id_;
}
inline void MallProto::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 num = 2;
inline bool MallProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MallProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MallProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MallProto::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 MallProto::num() const {
  return num_;
}
inline void MallProto::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// MallMutProto

// repeated .proto_ff.MallProto lst = 1;
inline int MallMutProto::lst_size() const {
  return lst_.size();
}
inline void MallMutProto::clear_lst() {
  lst_.Clear();
}
inline const ::proto_ff::MallProto& MallMutProto::lst(int index) const {
  return lst_.Get(index);
}
inline ::proto_ff::MallProto* MallMutProto::mutable_lst(int index) {
  return lst_.Mutable(index);
}
inline ::proto_ff::MallProto* MallMutProto::add_lst() {
  return lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MallProto >&
MallMutProto::lst() const {
  return lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MallProto >*
MallMutProto::mutable_lst() {
  return &lst_;
}

// -------------------------------------------------------------------

// MallInfoReq

// -------------------------------------------------------------------

// MallInfoRsp

// optional .proto_ff.MallMutProto day = 1;
inline bool MallInfoRsp::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MallInfoRsp::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MallInfoRsp::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MallInfoRsp::clear_day() {
  if (day_ != NULL) day_->::proto_ff::MallMutProto::Clear();
  clear_has_day();
}
inline const ::proto_ff::MallMutProto& MallInfoRsp::day() const {
  return day_ != NULL ? *day_ : *default_instance_->day_;
}
inline ::proto_ff::MallMutProto* MallInfoRsp::mutable_day() {
  set_has_day();
  if (day_ == NULL) day_ = new ::proto_ff::MallMutProto;
  return day_;
}
inline ::proto_ff::MallMutProto* MallInfoRsp::release_day() {
  clear_has_day();
  ::proto_ff::MallMutProto* temp = day_;
  day_ = NULL;
  return temp;
}
inline void MallInfoRsp::set_allocated_day(::proto_ff::MallMutProto* day) {
  delete day_;
  day_ = day;
  if (day) {
    set_has_day();
  } else {
    clear_has_day();
  }
}

// optional .proto_ff.MallMutProto week = 2;
inline bool MallInfoRsp::has_week() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MallInfoRsp::set_has_week() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MallInfoRsp::clear_has_week() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MallInfoRsp::clear_week() {
  if (week_ != NULL) week_->::proto_ff::MallMutProto::Clear();
  clear_has_week();
}
inline const ::proto_ff::MallMutProto& MallInfoRsp::week() const {
  return week_ != NULL ? *week_ : *default_instance_->week_;
}
inline ::proto_ff::MallMutProto* MallInfoRsp::mutable_week() {
  set_has_week();
  if (week_ == NULL) week_ = new ::proto_ff::MallMutProto;
  return week_;
}
inline ::proto_ff::MallMutProto* MallInfoRsp::release_week() {
  clear_has_week();
  ::proto_ff::MallMutProto* temp = week_;
  week_ = NULL;
  return temp;
}
inline void MallInfoRsp::set_allocated_week(::proto_ff::MallMutProto* week) {
  delete week_;
  week_ = week;
  if (week) {
    set_has_week();
  } else {
    clear_has_week();
  }
}

// optional .proto_ff.MallMutProto forever = 3;
inline bool MallInfoRsp::has_forever() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MallInfoRsp::set_has_forever() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MallInfoRsp::clear_has_forever() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MallInfoRsp::clear_forever() {
  if (forever_ != NULL) forever_->::proto_ff::MallMutProto::Clear();
  clear_has_forever();
}
inline const ::proto_ff::MallMutProto& MallInfoRsp::forever() const {
  return forever_ != NULL ? *forever_ : *default_instance_->forever_;
}
inline ::proto_ff::MallMutProto* MallInfoRsp::mutable_forever() {
  set_has_forever();
  if (forever_ == NULL) forever_ = new ::proto_ff::MallMutProto;
  return forever_;
}
inline ::proto_ff::MallMutProto* MallInfoRsp::release_forever() {
  clear_has_forever();
  ::proto_ff::MallMutProto* temp = forever_;
  forever_ = NULL;
  return temp;
}
inline void MallInfoRsp::set_allocated_forever(::proto_ff::MallMutProto* forever) {
  delete forever_;
  forever_ = forever;
  if (forever) {
    set_has_forever();
  } else {
    clear_has_forever();
  }
}

// -------------------------------------------------------------------

// MallBuyReq

// required int64 id = 1;
inline bool MallBuyReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MallBuyReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MallBuyReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MallBuyReq::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 MallBuyReq::id() const {
  return id_;
}
inline void MallBuyReq::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool MallBuyReq::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MallBuyReq::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MallBuyReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MallBuyReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 MallBuyReq::num() const {
  return num_;
}
inline void MallBuyReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// MallBuyRsp

// required int32 ret = 1;
inline bool MallBuyRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MallBuyRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MallBuyRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MallBuyRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MallBuyRsp::ret() const {
  return ret_;
}
inline void MallBuyRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// MallUpdateRsp

// optional .proto_ff.MallMutProto day = 1;
inline bool MallUpdateRsp::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MallUpdateRsp::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MallUpdateRsp::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MallUpdateRsp::clear_day() {
  if (day_ != NULL) day_->::proto_ff::MallMutProto::Clear();
  clear_has_day();
}
inline const ::proto_ff::MallMutProto& MallUpdateRsp::day() const {
  return day_ != NULL ? *day_ : *default_instance_->day_;
}
inline ::proto_ff::MallMutProto* MallUpdateRsp::mutable_day() {
  set_has_day();
  if (day_ == NULL) day_ = new ::proto_ff::MallMutProto;
  return day_;
}
inline ::proto_ff::MallMutProto* MallUpdateRsp::release_day() {
  clear_has_day();
  ::proto_ff::MallMutProto* temp = day_;
  day_ = NULL;
  return temp;
}
inline void MallUpdateRsp::set_allocated_day(::proto_ff::MallMutProto* day) {
  delete day_;
  day_ = day;
  if (day) {
    set_has_day();
  } else {
    clear_has_day();
  }
}

// optional .proto_ff.MallMutProto week = 2;
inline bool MallUpdateRsp::has_week() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MallUpdateRsp::set_has_week() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MallUpdateRsp::clear_has_week() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MallUpdateRsp::clear_week() {
  if (week_ != NULL) week_->::proto_ff::MallMutProto::Clear();
  clear_has_week();
}
inline const ::proto_ff::MallMutProto& MallUpdateRsp::week() const {
  return week_ != NULL ? *week_ : *default_instance_->week_;
}
inline ::proto_ff::MallMutProto* MallUpdateRsp::mutable_week() {
  set_has_week();
  if (week_ == NULL) week_ = new ::proto_ff::MallMutProto;
  return week_;
}
inline ::proto_ff::MallMutProto* MallUpdateRsp::release_week() {
  clear_has_week();
  ::proto_ff::MallMutProto* temp = week_;
  week_ = NULL;
  return temp;
}
inline void MallUpdateRsp::set_allocated_week(::proto_ff::MallMutProto* week) {
  delete week_;
  week_ = week;
  if (week) {
    set_has_week();
  } else {
    clear_has_week();
  }
}

// optional .proto_ff.MallMutProto forever = 3;
inline bool MallUpdateRsp::has_forever() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MallUpdateRsp::set_has_forever() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MallUpdateRsp::clear_has_forever() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MallUpdateRsp::clear_forever() {
  if (forever_ != NULL) forever_->::proto_ff::MallMutProto::Clear();
  clear_has_forever();
}
inline const ::proto_ff::MallMutProto& MallUpdateRsp::forever() const {
  return forever_ != NULL ? *forever_ : *default_instance_->forever_;
}
inline ::proto_ff::MallMutProto* MallUpdateRsp::mutable_forever() {
  set_has_forever();
  if (forever_ == NULL) forever_ = new ::proto_ff::MallMutProto;
  return forever_;
}
inline ::proto_ff::MallMutProto* MallUpdateRsp::release_forever() {
  clear_has_forever();
  ::proto_ff::MallMutProto* temp = forever_;
  forever_ = NULL;
  return temp;
}
inline void MallUpdateRsp::set_allocated_forever(::proto_ff::MallMutProto* forever) {
  delete forever_;
  forever_ = forever;
  if (forever) {
    set_has_forever();
  } else {
    clear_has_forever();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Mall_2eproto__INCLUDED
