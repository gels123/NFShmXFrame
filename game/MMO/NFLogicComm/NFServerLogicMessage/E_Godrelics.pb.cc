// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Godrelics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Godrelics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_GodrelicsGodrelics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_GodrelicsGodrelics_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_GodrelicsGodrelics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_GodrelicsGodrelics_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_GodrelicsCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_GodrelicsCondition_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_GodrelicsCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_GodrelicsCondition_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fGodrelics_2eproto() {
  protobuf_AddDesc_E_5fGodrelics_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Godrelics.proto");
  GOOGLE_CHECK(file != NULL);
  E_GodrelicsGodrelics_descriptor_ = file->message_type(0);
  static const int E_GodrelicsGodrelics_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsGodrelics, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsGodrelics, m_functionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsGodrelics, m_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsGodrelics, m_skillid_),
  };
  E_GodrelicsGodrelics_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_GodrelicsGodrelics_descriptor_,
      E_GodrelicsGodrelics::default_instance_,
      E_GodrelicsGodrelics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsGodrelics, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsGodrelics, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_GodrelicsGodrelics));
  Sheet_GodrelicsGodrelics_descriptor_ = file->message_type(1);
  static const int Sheet_GodrelicsGodrelics_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GodrelicsGodrelics, e_godrelicsgodrelics_list_),
  };
  Sheet_GodrelicsGodrelics_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_GodrelicsGodrelics_descriptor_,
      Sheet_GodrelicsGodrelics::default_instance_,
      Sheet_GodrelicsGodrelics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GodrelicsGodrelics, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GodrelicsGodrelics, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_GodrelicsGodrelics));
  E_GodrelicsCondition_descriptor_ = file->message_type(2);
  static const int E_GodrelicsCondition_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsCondition, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsCondition, m_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsCondition, m_conditon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsCondition, m_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsCondition, m_rewarditem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsCondition, m_rewardnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsCondition, m_param_),
  };
  E_GodrelicsCondition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_GodrelicsCondition_descriptor_,
      E_GodrelicsCondition::default_instance_,
      E_GodrelicsCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsCondition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GodrelicsCondition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_GodrelicsCondition));
  Sheet_GodrelicsCondition_descriptor_ = file->message_type(3);
  static const int Sheet_GodrelicsCondition_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GodrelicsCondition, e_godrelicscondition_list_),
  };
  Sheet_GodrelicsCondition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_GodrelicsCondition_descriptor_,
      Sheet_GodrelicsCondition::default_instance_,
      Sheet_GodrelicsCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GodrelicsCondition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GodrelicsCondition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_GodrelicsCondition));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fGodrelics_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_GodrelicsGodrelics_descriptor_, &E_GodrelicsGodrelics::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_GodrelicsGodrelics_descriptor_, &Sheet_GodrelicsGodrelics::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_GodrelicsCondition_descriptor_, &E_GodrelicsCondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_GodrelicsCondition_descriptor_, &Sheet_GodrelicsCondition::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fGodrelics_2eproto() {
  delete E_GodrelicsGodrelics::default_instance_;
  delete E_GodrelicsGodrelics_reflection_;
  delete Sheet_GodrelicsGodrelics::default_instance_;
  delete Sheet_GodrelicsGodrelics_reflection_;
  delete E_GodrelicsCondition::default_instance_;
  delete E_GodrelicsCondition_reflection_;
  delete Sheet_GodrelicsCondition::default_instance_;
  delete Sheet_GodrelicsCondition_reflection_;
}

void protobuf_AddDesc_E_5fGodrelics_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021E_Godrelics.proto\022\010proto_ff\032\025yd_fieldo"
    "ptions.proto\"\235\001\n\024E_GodrelicsGodrelics\022\024\n"
    "\004m_id\030\001 \001(\005B\006\302\377\024\002id\022(\n\014m_functionid\030\002 \001("
    "\005B\022\302\377\024\016\345\212\237\350\203\275\345\274\200\346\224\276id\022 \n\007m_group\030\003 \001(\005B\017"
    "\302\377\024\013\346\235\241\344\273\266\347\273\204ID\022#\n\tm_skillid\030\004 \001(\005B\020\302\377\024\014"
    "\346\277\200\346\264\273\346\212\200\350\203\275\"c\n\030Sheet_GodrelicsGodrelics"
    "\022G\n\031E_GodrelicsGodrelics_List\030\001 \003(\0132\036.pr"
    "oto_ff.E_GodrelicsGodrelicsB\004\210\301\024\020\"\234\002\n\024E_"
    "GodrelicsCondition\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id"
    "\022 \n\007m_group\030\002 \001(\005B\017\302\377\024\013\346\235\241\344\273\266\347\273\204id\022$\n\nm_"
    "conditon\030\003 \001(\005B\020\302\377\024\014\346\235\241\344\273\266\347\261\273\345\236\213\022!\n\007m_co"
    "unt\030\004 \001(\005B\020\302\377\024\014\345\256\214\346\210\220\346\254\241\346\225\260\022&\n\014m_rewardi"
    "tem\030\005 \001(\005B\020\302\377\024\014\345\245\226\345\212\261\351\201\223\345\205\267\022.\n\016m_rewardn"
    "umber\030\006 \001(\005B\026\302\377\024\022\345\245\226\345\212\261\351\201\223\345\205\267\346\225\260\351\207\217\022+\n\007m"
    "_param\030\007 \003(\005B\032\302\377\024\022\344\272\213\344\273\266\345\256\214\346\210\220\345\217\202\346\225\260\210\301\024\003"
    "\"d\n\030Sheet_GodrelicsCondition\022H\n\031E_Godrel"
    "icsCondition_List\030\001 \003(\0132\036.proto_ff.E_God"
    "relicsConditionB\005\210\301\024\200\001", 702);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Godrelics.proto", &protobuf_RegisterTypes);
  E_GodrelicsGodrelics::default_instance_ = new E_GodrelicsGodrelics();
  Sheet_GodrelicsGodrelics::default_instance_ = new Sheet_GodrelicsGodrelics();
  E_GodrelicsCondition::default_instance_ = new E_GodrelicsCondition();
  Sheet_GodrelicsCondition::default_instance_ = new Sheet_GodrelicsCondition();
  E_GodrelicsGodrelics::default_instance_->InitAsDefaultInstance();
  Sheet_GodrelicsGodrelics::default_instance_->InitAsDefaultInstance();
  E_GodrelicsCondition::default_instance_->InitAsDefaultInstance();
  Sheet_GodrelicsCondition::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fGodrelics_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fGodrelics_2eproto {
  StaticDescriptorInitializer_E_5fGodrelics_2eproto() {
    protobuf_AddDesc_E_5fGodrelics_2eproto();
  }
} static_descriptor_initializer_E_5fGodrelics_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_GodrelicsGodrelics::kMIdFieldNumber;
const int E_GodrelicsGodrelics::kMFunctionidFieldNumber;
const int E_GodrelicsGodrelics::kMGroupFieldNumber;
const int E_GodrelicsGodrelics::kMSkillidFieldNumber;
#endif  // !_MSC_VER

E_GodrelicsGodrelics::E_GodrelicsGodrelics()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_GodrelicsGodrelics::InitAsDefaultInstance() {
}

E_GodrelicsGodrelics::E_GodrelicsGodrelics(const E_GodrelicsGodrelics& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_GodrelicsGodrelics::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_functionid_ = 0;
  m_group_ = 0;
  m_skillid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_GodrelicsGodrelics::~E_GodrelicsGodrelics() {
  SharedDtor();
}

void E_GodrelicsGodrelics::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_GodrelicsGodrelics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_GodrelicsGodrelics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_GodrelicsGodrelics_descriptor_;
}

const E_GodrelicsGodrelics& E_GodrelicsGodrelics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fGodrelics_2eproto();
  return *default_instance_;
}

E_GodrelicsGodrelics* E_GodrelicsGodrelics::default_instance_ = NULL;

E_GodrelicsGodrelics* E_GodrelicsGodrelics::New() const {
  return new E_GodrelicsGodrelics;
}

void E_GodrelicsGodrelics::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_functionid_ = 0;
    m_group_ = 0;
    m_skillid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_GodrelicsGodrelics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_functionid;
        break;
      }

      // optional int32 m_functionid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_functionid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_functionid_)));
          set_has_m_functionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_group;
        break;
      }

      // optional int32 m_group = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_group_)));
          set_has_m_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_skillid;
        break;
      }

      // optional int32 m_skillid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_GodrelicsGodrelics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_functionid = 2;
  if (has_m_functionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_functionid(), output);
  }

  // optional int32 m_group = 3;
  if (has_m_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_group(), output);
  }

  // optional int32 m_skillid = 4;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_GodrelicsGodrelics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_functionid = 2;
  if (has_m_functionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_functionid(), target);
  }

  // optional int32 m_group = 3;
  if (has_m_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_group(), target);
  }

  // optional int32 m_skillid = 4;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_GodrelicsGodrelics::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_functionid = 2;
    if (has_m_functionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_functionid());
    }

    // optional int32 m_group = 3;
    if (has_m_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_group());
    }

    // optional int32 m_skillid = 4;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_GodrelicsGodrelics::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_GodrelicsGodrelics* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_GodrelicsGodrelics*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_GodrelicsGodrelics::MergeFrom(const E_GodrelicsGodrelics& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_functionid()) {
      set_m_functionid(from.m_functionid());
    }
    if (from.has_m_group()) {
      set_m_group(from.m_group());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_GodrelicsGodrelics::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_GodrelicsGodrelics::CopyFrom(const E_GodrelicsGodrelics& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_GodrelicsGodrelics::IsInitialized() const {

  return true;
}

void E_GodrelicsGodrelics::Swap(E_GodrelicsGodrelics* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_functionid_, other->m_functionid_);
    std::swap(m_group_, other->m_group_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_GodrelicsGodrelics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_GodrelicsGodrelics_descriptor_;
  metadata.reflection = E_GodrelicsGodrelics_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_GodrelicsGodrelics::kEGodrelicsGodrelicsListFieldNumber;
#endif  // !_MSC_VER

Sheet_GodrelicsGodrelics::Sheet_GodrelicsGodrelics()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_GodrelicsGodrelics::InitAsDefaultInstance() {
}

Sheet_GodrelicsGodrelics::Sheet_GodrelicsGodrelics(const Sheet_GodrelicsGodrelics& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_GodrelicsGodrelics::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_GodrelicsGodrelics::~Sheet_GodrelicsGodrelics() {
  SharedDtor();
}

void Sheet_GodrelicsGodrelics::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_GodrelicsGodrelics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_GodrelicsGodrelics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_GodrelicsGodrelics_descriptor_;
}

const Sheet_GodrelicsGodrelics& Sheet_GodrelicsGodrelics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fGodrelics_2eproto();
  return *default_instance_;
}

Sheet_GodrelicsGodrelics* Sheet_GodrelicsGodrelics::default_instance_ = NULL;

Sheet_GodrelicsGodrelics* Sheet_GodrelicsGodrelics::New() const {
  return new Sheet_GodrelicsGodrelics;
}

void Sheet_GodrelicsGodrelics::Clear() {
  e_godrelicsgodrelics_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_GodrelicsGodrelics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_GodrelicsGodrelics E_GodrelicsGodrelics_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_GodrelicsGodrelics_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_godrelicsgodrelics_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_GodrelicsGodrelics_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_GodrelicsGodrelics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_GodrelicsGodrelics E_GodrelicsGodrelics_List = 1;
  for (int i = 0; i < this->e_godrelicsgodrelics_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_godrelicsgodrelics_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_GodrelicsGodrelics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_GodrelicsGodrelics E_GodrelicsGodrelics_List = 1;
  for (int i = 0; i < this->e_godrelicsgodrelics_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_godrelicsgodrelics_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_GodrelicsGodrelics::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_GodrelicsGodrelics E_GodrelicsGodrelics_List = 1;
  total_size += 1 * this->e_godrelicsgodrelics_list_size();
  for (int i = 0; i < this->e_godrelicsgodrelics_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_godrelicsgodrelics_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_GodrelicsGodrelics::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_GodrelicsGodrelics* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_GodrelicsGodrelics*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_GodrelicsGodrelics::MergeFrom(const Sheet_GodrelicsGodrelics& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_godrelicsgodrelics_list_.MergeFrom(from.e_godrelicsgodrelics_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_GodrelicsGodrelics::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_GodrelicsGodrelics::CopyFrom(const Sheet_GodrelicsGodrelics& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_GodrelicsGodrelics::IsInitialized() const {

  return true;
}

void Sheet_GodrelicsGodrelics::Swap(Sheet_GodrelicsGodrelics* other) {
  if (other != this) {
    e_godrelicsgodrelics_list_.Swap(&other->e_godrelicsgodrelics_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_GodrelicsGodrelics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_GodrelicsGodrelics_descriptor_;
  metadata.reflection = Sheet_GodrelicsGodrelics_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_GodrelicsCondition::kMIdFieldNumber;
const int E_GodrelicsCondition::kMGroupFieldNumber;
const int E_GodrelicsCondition::kMConditonFieldNumber;
const int E_GodrelicsCondition::kMCountFieldNumber;
const int E_GodrelicsCondition::kMRewarditemFieldNumber;
const int E_GodrelicsCondition::kMRewardnumberFieldNumber;
const int E_GodrelicsCondition::kMParamFieldNumber;
#endif  // !_MSC_VER

E_GodrelicsCondition::E_GodrelicsCondition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_GodrelicsCondition::InitAsDefaultInstance() {
}

E_GodrelicsCondition::E_GodrelicsCondition(const E_GodrelicsCondition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_GodrelicsCondition::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_group_ = 0;
  m_conditon_ = 0;
  m_count_ = 0;
  m_rewarditem_ = 0;
  m_rewardnumber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_GodrelicsCondition::~E_GodrelicsCondition() {
  SharedDtor();
}

void E_GodrelicsCondition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_GodrelicsCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_GodrelicsCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_GodrelicsCondition_descriptor_;
}

const E_GodrelicsCondition& E_GodrelicsCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fGodrelics_2eproto();
  return *default_instance_;
}

E_GodrelicsCondition* E_GodrelicsCondition::default_instance_ = NULL;

E_GodrelicsCondition* E_GodrelicsCondition::New() const {
  return new E_GodrelicsCondition;
}

void E_GodrelicsCondition::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_group_ = 0;
    m_conditon_ = 0;
    m_count_ = 0;
    m_rewarditem_ = 0;
    m_rewardnumber_ = 0;
  }
  m_param_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_GodrelicsCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_group;
        break;
      }

      // optional int32 m_group = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_group_)));
          set_has_m_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_conditon;
        break;
      }

      // optional int32 m_conditon = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_conditon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_conditon_)));
          set_has_m_conditon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_count;
        break;
      }

      // optional int32 m_count = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_count_)));
          set_has_m_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_rewarditem;
        break;
      }

      // optional int32 m_rewarditem = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rewarditem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rewarditem_)));
          set_has_m_rewarditem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_rewardnumber;
        break;
      }

      // optional int32 m_rewardnumber = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rewardnumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rewardnumber_)));
          set_has_m_rewardnumber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_param;
        break;
      }

      // repeated int32 m_param = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_m_param())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_param())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_param;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_GodrelicsCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_group = 2;
  if (has_m_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_group(), output);
  }

  // optional int32 m_conditon = 3;
  if (has_m_conditon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_conditon(), output);
  }

  // optional int32 m_count = 4;
  if (has_m_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_count(), output);
  }

  // optional int32 m_rewarditem = 5;
  if (has_m_rewarditem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_rewarditem(), output);
  }

  // optional int32 m_rewardnumber = 6;
  if (has_m_rewardnumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_rewardnumber(), output);
  }

  // repeated int32 m_param = 7;
  for (int i = 0; i < this->m_param_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->m_param(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_GodrelicsCondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_group = 2;
  if (has_m_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_group(), target);
  }

  // optional int32 m_conditon = 3;
  if (has_m_conditon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_conditon(), target);
  }

  // optional int32 m_count = 4;
  if (has_m_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_count(), target);
  }

  // optional int32 m_rewarditem = 5;
  if (has_m_rewarditem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_rewarditem(), target);
  }

  // optional int32 m_rewardnumber = 6;
  if (has_m_rewardnumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_rewardnumber(), target);
  }

  // repeated int32 m_param = 7;
  for (int i = 0; i < this->m_param_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->m_param(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_GodrelicsCondition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_group = 2;
    if (has_m_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_group());
    }

    // optional int32 m_conditon = 3;
    if (has_m_conditon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_conditon());
    }

    // optional int32 m_count = 4;
    if (has_m_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_count());
    }

    // optional int32 m_rewarditem = 5;
    if (has_m_rewarditem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rewarditem());
    }

    // optional int32 m_rewardnumber = 6;
    if (has_m_rewardnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rewardnumber());
    }

  }
  // repeated int32 m_param = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_param_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_param(i));
    }
    total_size += 1 * this->m_param_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_GodrelicsCondition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_GodrelicsCondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_GodrelicsCondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_GodrelicsCondition::MergeFrom(const E_GodrelicsCondition& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_param_.MergeFrom(from.m_param_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_group()) {
      set_m_group(from.m_group());
    }
    if (from.has_m_conditon()) {
      set_m_conditon(from.m_conditon());
    }
    if (from.has_m_count()) {
      set_m_count(from.m_count());
    }
    if (from.has_m_rewarditem()) {
      set_m_rewarditem(from.m_rewarditem());
    }
    if (from.has_m_rewardnumber()) {
      set_m_rewardnumber(from.m_rewardnumber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_GodrelicsCondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_GodrelicsCondition::CopyFrom(const E_GodrelicsCondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_GodrelicsCondition::IsInitialized() const {

  return true;
}

void E_GodrelicsCondition::Swap(E_GodrelicsCondition* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_group_, other->m_group_);
    std::swap(m_conditon_, other->m_conditon_);
    std::swap(m_count_, other->m_count_);
    std::swap(m_rewarditem_, other->m_rewarditem_);
    std::swap(m_rewardnumber_, other->m_rewardnumber_);
    m_param_.Swap(&other->m_param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_GodrelicsCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_GodrelicsCondition_descriptor_;
  metadata.reflection = E_GodrelicsCondition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_GodrelicsCondition::kEGodrelicsConditionListFieldNumber;
#endif  // !_MSC_VER

Sheet_GodrelicsCondition::Sheet_GodrelicsCondition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_GodrelicsCondition::InitAsDefaultInstance() {
}

Sheet_GodrelicsCondition::Sheet_GodrelicsCondition(const Sheet_GodrelicsCondition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_GodrelicsCondition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_GodrelicsCondition::~Sheet_GodrelicsCondition() {
  SharedDtor();
}

void Sheet_GodrelicsCondition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_GodrelicsCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_GodrelicsCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_GodrelicsCondition_descriptor_;
}

const Sheet_GodrelicsCondition& Sheet_GodrelicsCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fGodrelics_2eproto();
  return *default_instance_;
}

Sheet_GodrelicsCondition* Sheet_GodrelicsCondition::default_instance_ = NULL;

Sheet_GodrelicsCondition* Sheet_GodrelicsCondition::New() const {
  return new Sheet_GodrelicsCondition;
}

void Sheet_GodrelicsCondition::Clear() {
  e_godrelicscondition_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_GodrelicsCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_GodrelicsCondition E_GodrelicsCondition_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_GodrelicsCondition_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_godrelicscondition_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_GodrelicsCondition_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_GodrelicsCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_GodrelicsCondition E_GodrelicsCondition_List = 1;
  for (int i = 0; i < this->e_godrelicscondition_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_godrelicscondition_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_GodrelicsCondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_GodrelicsCondition E_GodrelicsCondition_List = 1;
  for (int i = 0; i < this->e_godrelicscondition_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_godrelicscondition_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_GodrelicsCondition::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_GodrelicsCondition E_GodrelicsCondition_List = 1;
  total_size += 1 * this->e_godrelicscondition_list_size();
  for (int i = 0; i < this->e_godrelicscondition_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_godrelicscondition_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_GodrelicsCondition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_GodrelicsCondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_GodrelicsCondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_GodrelicsCondition::MergeFrom(const Sheet_GodrelicsCondition& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_godrelicscondition_list_.MergeFrom(from.e_godrelicscondition_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_GodrelicsCondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_GodrelicsCondition::CopyFrom(const Sheet_GodrelicsCondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_GodrelicsCondition::IsInitialized() const {

  return true;
}

void Sheet_GodrelicsCondition::Swap(Sheet_GodrelicsCondition* other) {
  if (other != this) {
    e_godrelicscondition_list_.Swap(&other->e_godrelicscondition_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_GodrelicsCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_GodrelicsCondition_descriptor_;
  metadata.reflection = Sheet_GodrelicsCondition_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
