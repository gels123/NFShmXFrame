// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Sensitiveword.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Sensitiveword.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_SensitivewordWord1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SensitivewordWord1_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_SensitivewordWord1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_SensitivewordWord1_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SensitivewordWord2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SensitivewordWord2_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_SensitivewordWord2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_SensitivewordWord2_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SensitivewordWord3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SensitivewordWord3_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_SensitivewordWord3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_SensitivewordWord3_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fSensitiveword_2eproto() {
  protobuf_AddDesc_E_5fSensitiveword_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Sensitiveword.proto");
  GOOGLE_CHECK(file != NULL);
  E_SensitivewordWord1_descriptor_ = file->message_type(0);
  static const int E_SensitivewordWord1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord1, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord1, m_sensitiveword_),
  };
  E_SensitivewordWord1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SensitivewordWord1_descriptor_,
      E_SensitivewordWord1::default_instance_,
      E_SensitivewordWord1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SensitivewordWord1));
  Sheet_SensitivewordWord1_descriptor_ = file->message_type(1);
  static const int Sheet_SensitivewordWord1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SensitivewordWord1, e_sensitivewordword1_list_),
  };
  Sheet_SensitivewordWord1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_SensitivewordWord1_descriptor_,
      Sheet_SensitivewordWord1::default_instance_,
      Sheet_SensitivewordWord1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SensitivewordWord1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SensitivewordWord1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_SensitivewordWord1));
  E_SensitivewordWord2_descriptor_ = file->message_type(2);
  static const int E_SensitivewordWord2_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord2, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord2, m_sensitiveword_),
  };
  E_SensitivewordWord2_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SensitivewordWord2_descriptor_,
      E_SensitivewordWord2::default_instance_,
      E_SensitivewordWord2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord2, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord2, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SensitivewordWord2));
  Sheet_SensitivewordWord2_descriptor_ = file->message_type(3);
  static const int Sheet_SensitivewordWord2_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SensitivewordWord2, e_sensitivewordword2_list_),
  };
  Sheet_SensitivewordWord2_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_SensitivewordWord2_descriptor_,
      Sheet_SensitivewordWord2::default_instance_,
      Sheet_SensitivewordWord2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SensitivewordWord2, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SensitivewordWord2, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_SensitivewordWord2));
  E_SensitivewordWord3_descriptor_ = file->message_type(4);
  static const int E_SensitivewordWord3_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord3, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord3, m_sensitiveword_),
  };
  E_SensitivewordWord3_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SensitivewordWord3_descriptor_,
      E_SensitivewordWord3::default_instance_,
      E_SensitivewordWord3_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord3, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SensitivewordWord3, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SensitivewordWord3));
  Sheet_SensitivewordWord3_descriptor_ = file->message_type(5);
  static const int Sheet_SensitivewordWord3_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SensitivewordWord3, e_sensitivewordword3_list_),
  };
  Sheet_SensitivewordWord3_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_SensitivewordWord3_descriptor_,
      Sheet_SensitivewordWord3::default_instance_,
      Sheet_SensitivewordWord3_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SensitivewordWord3, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SensitivewordWord3, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_SensitivewordWord3));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fSensitiveword_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SensitivewordWord1_descriptor_, &E_SensitivewordWord1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_SensitivewordWord1_descriptor_, &Sheet_SensitivewordWord1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SensitivewordWord2_descriptor_, &E_SensitivewordWord2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_SensitivewordWord2_descriptor_, &Sheet_SensitivewordWord2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SensitivewordWord3_descriptor_, &E_SensitivewordWord3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_SensitivewordWord3_descriptor_, &Sheet_SensitivewordWord3::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fSensitiveword_2eproto() {
  delete E_SensitivewordWord1::default_instance_;
  delete E_SensitivewordWord1_reflection_;
  delete Sheet_SensitivewordWord1::default_instance_;
  delete Sheet_SensitivewordWord1_reflection_;
  delete E_SensitivewordWord2::default_instance_;
  delete E_SensitivewordWord2_reflection_;
  delete Sheet_SensitivewordWord2::default_instance_;
  delete Sheet_SensitivewordWord2_reflection_;
  delete E_SensitivewordWord3::default_instance_;
  delete E_SensitivewordWord3_reflection_;
  delete Sheet_SensitivewordWord3::default_instance_;
  delete Sheet_SensitivewordWord3_reflection_;
}

void protobuf_AddDesc_E_5fSensitiveword_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025E_Sensitiveword.proto\022\010proto_ff\032\025yd_fi"
    "eldoptions.proto\"\\\n\024E_SensitivewordWord1"
    "\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022*\n\017m_sensitiv"
    "eword\030\002 \001(\tB\021\302\377\024\t\346\225\217\346\204\237\345\255\227\220\301\024@\"e\n\030Sheet_"
    "SensitivewordWord1\022I\n\031E_SensitivewordWor"
    "d1_List\030\001 \003(\0132\036.proto_ff.E_Sensitiveword"
    "Word1B\006\210\301\024\200\200\002\"\\\n\024E_SensitivewordWord2\022\030\n"
    "\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022*\n\017m_sensitivewo"
    "rd\030\002 \001(\tB\021\302\377\024\t\346\225\217\346\204\237\345\255\227\220\301\024@\"e\n\030Sheet_Sen"
    "sitivewordWord2\022I\n\031E_SensitivewordWord2_"
    "List\030\001 \003(\0132\036.proto_ff.E_SensitivewordWor"
    "d2B\006\210\301\024\200\200\002\"\\\n\024E_SensitivewordWord3\022\030\n\004m_"
    "id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022*\n\017m_sensitiveword\030"
    "\002 \001(\tB\021\302\377\024\t\346\225\217\346\204\237\345\255\227\220\301\024@\"e\n\030Sheet_Sensit"
    "ivewordWord3\022I\n\031E_SensitivewordWord3_Lis"
    "t\030\001 \003(\0132\036.proto_ff.E_SensitivewordWord3B"
    "\006\210\301\024\200\200\002", 647);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Sensitiveword.proto", &protobuf_RegisterTypes);
  E_SensitivewordWord1::default_instance_ = new E_SensitivewordWord1();
  Sheet_SensitivewordWord1::default_instance_ = new Sheet_SensitivewordWord1();
  E_SensitivewordWord2::default_instance_ = new E_SensitivewordWord2();
  Sheet_SensitivewordWord2::default_instance_ = new Sheet_SensitivewordWord2();
  E_SensitivewordWord3::default_instance_ = new E_SensitivewordWord3();
  Sheet_SensitivewordWord3::default_instance_ = new Sheet_SensitivewordWord3();
  E_SensitivewordWord1::default_instance_->InitAsDefaultInstance();
  Sheet_SensitivewordWord1::default_instance_->InitAsDefaultInstance();
  E_SensitivewordWord2::default_instance_->InitAsDefaultInstance();
  Sheet_SensitivewordWord2::default_instance_->InitAsDefaultInstance();
  E_SensitivewordWord3::default_instance_->InitAsDefaultInstance();
  Sheet_SensitivewordWord3::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fSensitiveword_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fSensitiveword_2eproto {
  StaticDescriptorInitializer_E_5fSensitiveword_2eproto() {
    protobuf_AddDesc_E_5fSensitiveword_2eproto();
  }
} static_descriptor_initializer_E_5fSensitiveword_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_SensitivewordWord1::kMIdFieldNumber;
const int E_SensitivewordWord1::kMSensitivewordFieldNumber;
#endif  // !_MSC_VER

E_SensitivewordWord1::E_SensitivewordWord1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SensitivewordWord1::InitAsDefaultInstance() {
}

E_SensitivewordWord1::E_SensitivewordWord1(const E_SensitivewordWord1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SensitivewordWord1::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SensitivewordWord1::~E_SensitivewordWord1() {
  SharedDtor();
}

void E_SensitivewordWord1::SharedDtor() {
  if (m_sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    delete m_sensitiveword_;
  }
  if (this != default_instance_) {
  }
}

void E_SensitivewordWord1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SensitivewordWord1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SensitivewordWord1_descriptor_;
}

const E_SensitivewordWord1& E_SensitivewordWord1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fSensitiveword_2eproto();
  return *default_instance_;
}

E_SensitivewordWord1* E_SensitivewordWord1::default_instance_ = NULL;

E_SensitivewordWord1* E_SensitivewordWord1::New() const {
  return new E_SensitivewordWord1;
}

void E_SensitivewordWord1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_sensitiveword()) {
      if (m_sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
        m_sensitiveword_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SensitivewordWord1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_sensitiveword;
        break;
      }

      // optional string m_sensitiveword = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_sensitiveword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_sensitiveword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_sensitiveword().data(), this->m_sensitiveword().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SensitivewordWord1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_sensitiveword = 2;
  if (has_m_sensitiveword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_sensitiveword().data(), this->m_sensitiveword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_sensitiveword(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SensitivewordWord1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_sensitiveword = 2;
  if (has_m_sensitiveword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_sensitiveword().data(), this->m_sensitiveword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_sensitiveword(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SensitivewordWord1::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_sensitiveword = 2;
    if (has_m_sensitiveword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_sensitiveword());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SensitivewordWord1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SensitivewordWord1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SensitivewordWord1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SensitivewordWord1::MergeFrom(const E_SensitivewordWord1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_sensitiveword()) {
      set_m_sensitiveword(from.m_sensitiveword());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SensitivewordWord1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SensitivewordWord1::CopyFrom(const E_SensitivewordWord1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SensitivewordWord1::IsInitialized() const {

  return true;
}

void E_SensitivewordWord1::Swap(E_SensitivewordWord1* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_sensitiveword_, other->m_sensitiveword_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SensitivewordWord1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SensitivewordWord1_descriptor_;
  metadata.reflection = E_SensitivewordWord1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_SensitivewordWord1::kESensitivewordWord1ListFieldNumber;
#endif  // !_MSC_VER

Sheet_SensitivewordWord1::Sheet_SensitivewordWord1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_SensitivewordWord1::InitAsDefaultInstance() {
}

Sheet_SensitivewordWord1::Sheet_SensitivewordWord1(const Sheet_SensitivewordWord1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_SensitivewordWord1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_SensitivewordWord1::~Sheet_SensitivewordWord1() {
  SharedDtor();
}

void Sheet_SensitivewordWord1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_SensitivewordWord1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_SensitivewordWord1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_SensitivewordWord1_descriptor_;
}

const Sheet_SensitivewordWord1& Sheet_SensitivewordWord1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fSensitiveword_2eproto();
  return *default_instance_;
}

Sheet_SensitivewordWord1* Sheet_SensitivewordWord1::default_instance_ = NULL;

Sheet_SensitivewordWord1* Sheet_SensitivewordWord1::New() const {
  return new Sheet_SensitivewordWord1;
}

void Sheet_SensitivewordWord1::Clear() {
  e_sensitivewordword1_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_SensitivewordWord1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_SensitivewordWord1 E_SensitivewordWord1_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_SensitivewordWord1_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_sensitivewordword1_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_SensitivewordWord1_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_SensitivewordWord1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_SensitivewordWord1 E_SensitivewordWord1_List = 1;
  for (int i = 0; i < this->e_sensitivewordword1_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_sensitivewordword1_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_SensitivewordWord1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_SensitivewordWord1 E_SensitivewordWord1_List = 1;
  for (int i = 0; i < this->e_sensitivewordword1_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_sensitivewordword1_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_SensitivewordWord1::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_SensitivewordWord1 E_SensitivewordWord1_List = 1;
  total_size += 1 * this->e_sensitivewordword1_list_size();
  for (int i = 0; i < this->e_sensitivewordword1_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_sensitivewordword1_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_SensitivewordWord1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_SensitivewordWord1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_SensitivewordWord1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_SensitivewordWord1::MergeFrom(const Sheet_SensitivewordWord1& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_sensitivewordword1_list_.MergeFrom(from.e_sensitivewordword1_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_SensitivewordWord1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_SensitivewordWord1::CopyFrom(const Sheet_SensitivewordWord1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_SensitivewordWord1::IsInitialized() const {

  return true;
}

void Sheet_SensitivewordWord1::Swap(Sheet_SensitivewordWord1* other) {
  if (other != this) {
    e_sensitivewordword1_list_.Swap(&other->e_sensitivewordword1_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_SensitivewordWord1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_SensitivewordWord1_descriptor_;
  metadata.reflection = Sheet_SensitivewordWord1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SensitivewordWord2::kMIdFieldNumber;
const int E_SensitivewordWord2::kMSensitivewordFieldNumber;
#endif  // !_MSC_VER

E_SensitivewordWord2::E_SensitivewordWord2()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SensitivewordWord2::InitAsDefaultInstance() {
}

E_SensitivewordWord2::E_SensitivewordWord2(const E_SensitivewordWord2& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SensitivewordWord2::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SensitivewordWord2::~E_SensitivewordWord2() {
  SharedDtor();
}

void E_SensitivewordWord2::SharedDtor() {
  if (m_sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    delete m_sensitiveword_;
  }
  if (this != default_instance_) {
  }
}

void E_SensitivewordWord2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SensitivewordWord2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SensitivewordWord2_descriptor_;
}

const E_SensitivewordWord2& E_SensitivewordWord2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fSensitiveword_2eproto();
  return *default_instance_;
}

E_SensitivewordWord2* E_SensitivewordWord2::default_instance_ = NULL;

E_SensitivewordWord2* E_SensitivewordWord2::New() const {
  return new E_SensitivewordWord2;
}

void E_SensitivewordWord2::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_sensitiveword()) {
      if (m_sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
        m_sensitiveword_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SensitivewordWord2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_sensitiveword;
        break;
      }

      // optional string m_sensitiveword = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_sensitiveword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_sensitiveword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_sensitiveword().data(), this->m_sensitiveword().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SensitivewordWord2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_sensitiveword = 2;
  if (has_m_sensitiveword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_sensitiveword().data(), this->m_sensitiveword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_sensitiveword(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SensitivewordWord2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_sensitiveword = 2;
  if (has_m_sensitiveword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_sensitiveword().data(), this->m_sensitiveword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_sensitiveword(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SensitivewordWord2::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_sensitiveword = 2;
    if (has_m_sensitiveword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_sensitiveword());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SensitivewordWord2::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SensitivewordWord2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SensitivewordWord2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SensitivewordWord2::MergeFrom(const E_SensitivewordWord2& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_sensitiveword()) {
      set_m_sensitiveword(from.m_sensitiveword());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SensitivewordWord2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SensitivewordWord2::CopyFrom(const E_SensitivewordWord2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SensitivewordWord2::IsInitialized() const {

  return true;
}

void E_SensitivewordWord2::Swap(E_SensitivewordWord2* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_sensitiveword_, other->m_sensitiveword_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SensitivewordWord2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SensitivewordWord2_descriptor_;
  metadata.reflection = E_SensitivewordWord2_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_SensitivewordWord2::kESensitivewordWord2ListFieldNumber;
#endif  // !_MSC_VER

Sheet_SensitivewordWord2::Sheet_SensitivewordWord2()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_SensitivewordWord2::InitAsDefaultInstance() {
}

Sheet_SensitivewordWord2::Sheet_SensitivewordWord2(const Sheet_SensitivewordWord2& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_SensitivewordWord2::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_SensitivewordWord2::~Sheet_SensitivewordWord2() {
  SharedDtor();
}

void Sheet_SensitivewordWord2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_SensitivewordWord2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_SensitivewordWord2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_SensitivewordWord2_descriptor_;
}

const Sheet_SensitivewordWord2& Sheet_SensitivewordWord2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fSensitiveword_2eproto();
  return *default_instance_;
}

Sheet_SensitivewordWord2* Sheet_SensitivewordWord2::default_instance_ = NULL;

Sheet_SensitivewordWord2* Sheet_SensitivewordWord2::New() const {
  return new Sheet_SensitivewordWord2;
}

void Sheet_SensitivewordWord2::Clear() {
  e_sensitivewordword2_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_SensitivewordWord2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_SensitivewordWord2 E_SensitivewordWord2_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_SensitivewordWord2_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_sensitivewordword2_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_SensitivewordWord2_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_SensitivewordWord2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_SensitivewordWord2 E_SensitivewordWord2_List = 1;
  for (int i = 0; i < this->e_sensitivewordword2_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_sensitivewordword2_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_SensitivewordWord2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_SensitivewordWord2 E_SensitivewordWord2_List = 1;
  for (int i = 0; i < this->e_sensitivewordword2_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_sensitivewordword2_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_SensitivewordWord2::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_SensitivewordWord2 E_SensitivewordWord2_List = 1;
  total_size += 1 * this->e_sensitivewordword2_list_size();
  for (int i = 0; i < this->e_sensitivewordword2_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_sensitivewordword2_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_SensitivewordWord2::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_SensitivewordWord2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_SensitivewordWord2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_SensitivewordWord2::MergeFrom(const Sheet_SensitivewordWord2& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_sensitivewordword2_list_.MergeFrom(from.e_sensitivewordword2_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_SensitivewordWord2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_SensitivewordWord2::CopyFrom(const Sheet_SensitivewordWord2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_SensitivewordWord2::IsInitialized() const {

  return true;
}

void Sheet_SensitivewordWord2::Swap(Sheet_SensitivewordWord2* other) {
  if (other != this) {
    e_sensitivewordword2_list_.Swap(&other->e_sensitivewordword2_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_SensitivewordWord2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_SensitivewordWord2_descriptor_;
  metadata.reflection = Sheet_SensitivewordWord2_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SensitivewordWord3::kMIdFieldNumber;
const int E_SensitivewordWord3::kMSensitivewordFieldNumber;
#endif  // !_MSC_VER

E_SensitivewordWord3::E_SensitivewordWord3()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SensitivewordWord3::InitAsDefaultInstance() {
}

E_SensitivewordWord3::E_SensitivewordWord3(const E_SensitivewordWord3& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SensitivewordWord3::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SensitivewordWord3::~E_SensitivewordWord3() {
  SharedDtor();
}

void E_SensitivewordWord3::SharedDtor() {
  if (m_sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    delete m_sensitiveword_;
  }
  if (this != default_instance_) {
  }
}

void E_SensitivewordWord3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SensitivewordWord3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SensitivewordWord3_descriptor_;
}

const E_SensitivewordWord3& E_SensitivewordWord3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fSensitiveword_2eproto();
  return *default_instance_;
}

E_SensitivewordWord3* E_SensitivewordWord3::default_instance_ = NULL;

E_SensitivewordWord3* E_SensitivewordWord3::New() const {
  return new E_SensitivewordWord3;
}

void E_SensitivewordWord3::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_sensitiveword()) {
      if (m_sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
        m_sensitiveword_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SensitivewordWord3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_sensitiveword;
        break;
      }

      // optional string m_sensitiveword = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_sensitiveword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_sensitiveword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_sensitiveword().data(), this->m_sensitiveword().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SensitivewordWord3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_sensitiveword = 2;
  if (has_m_sensitiveword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_sensitiveword().data(), this->m_sensitiveword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_sensitiveword(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SensitivewordWord3::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_sensitiveword = 2;
  if (has_m_sensitiveword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_sensitiveword().data(), this->m_sensitiveword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_sensitiveword(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SensitivewordWord3::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_sensitiveword = 2;
    if (has_m_sensitiveword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_sensitiveword());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SensitivewordWord3::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SensitivewordWord3* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SensitivewordWord3*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SensitivewordWord3::MergeFrom(const E_SensitivewordWord3& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_sensitiveword()) {
      set_m_sensitiveword(from.m_sensitiveword());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SensitivewordWord3::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SensitivewordWord3::CopyFrom(const E_SensitivewordWord3& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SensitivewordWord3::IsInitialized() const {

  return true;
}

void E_SensitivewordWord3::Swap(E_SensitivewordWord3* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_sensitiveword_, other->m_sensitiveword_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SensitivewordWord3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SensitivewordWord3_descriptor_;
  metadata.reflection = E_SensitivewordWord3_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_SensitivewordWord3::kESensitivewordWord3ListFieldNumber;
#endif  // !_MSC_VER

Sheet_SensitivewordWord3::Sheet_SensitivewordWord3()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_SensitivewordWord3::InitAsDefaultInstance() {
}

Sheet_SensitivewordWord3::Sheet_SensitivewordWord3(const Sheet_SensitivewordWord3& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_SensitivewordWord3::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_SensitivewordWord3::~Sheet_SensitivewordWord3() {
  SharedDtor();
}

void Sheet_SensitivewordWord3::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_SensitivewordWord3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_SensitivewordWord3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_SensitivewordWord3_descriptor_;
}

const Sheet_SensitivewordWord3& Sheet_SensitivewordWord3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fSensitiveword_2eproto();
  return *default_instance_;
}

Sheet_SensitivewordWord3* Sheet_SensitivewordWord3::default_instance_ = NULL;

Sheet_SensitivewordWord3* Sheet_SensitivewordWord3::New() const {
  return new Sheet_SensitivewordWord3;
}

void Sheet_SensitivewordWord3::Clear() {
  e_sensitivewordword3_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_SensitivewordWord3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_SensitivewordWord3 E_SensitivewordWord3_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_SensitivewordWord3_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_sensitivewordword3_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_SensitivewordWord3_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_SensitivewordWord3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_SensitivewordWord3 E_SensitivewordWord3_List = 1;
  for (int i = 0; i < this->e_sensitivewordword3_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_sensitivewordword3_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_SensitivewordWord3::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_SensitivewordWord3 E_SensitivewordWord3_List = 1;
  for (int i = 0; i < this->e_sensitivewordword3_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_sensitivewordword3_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_SensitivewordWord3::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_SensitivewordWord3 E_SensitivewordWord3_List = 1;
  total_size += 1 * this->e_sensitivewordword3_list_size();
  for (int i = 0; i < this->e_sensitivewordword3_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_sensitivewordword3_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_SensitivewordWord3::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_SensitivewordWord3* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_SensitivewordWord3*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_SensitivewordWord3::MergeFrom(const Sheet_SensitivewordWord3& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_sensitivewordword3_list_.MergeFrom(from.e_sensitivewordword3_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_SensitivewordWord3::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_SensitivewordWord3::CopyFrom(const Sheet_SensitivewordWord3& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_SensitivewordWord3::IsInitialized() const {

  return true;
}

void Sheet_SensitivewordWord3::Swap(Sheet_SensitivewordWord3* other) {
  if (other != this) {
    e_sensitivewordword3_list_.Swap(&other->e_sensitivewordword3_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_SensitivewordWord3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_SensitivewordWord3_descriptor_;
  metadata.reflection = Sheet_SensitivewordWord3_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
