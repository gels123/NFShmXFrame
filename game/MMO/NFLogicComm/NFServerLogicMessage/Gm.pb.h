// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Gm.proto

#ifndef PROTOBUF_Gm_2eproto__INCLUDED
#define PROTOBUF_Gm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "Com.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Gm_2eproto();
void protobuf_AssignDesc_Gm_2eproto();
void protobuf_ShutdownFile_Gm_2eproto();

class GmReq;
class GmRsp;
class NotifyGmRsp;

// ===================================================================

class GmReq : public ::google::protobuf::Message {
 public:
  GmReq();
  virtual ~GmReq();

  GmReq(const GmReq& from);

  inline GmReq& operator=(const GmReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GmReq& default_instance();

  void Swap(GmReq* other);

  // implements Message ----------------------------------------------

  GmReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GmReq& from);
  void MergeFrom(const GmReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline const ::std::string& cmd() const;
  inline void set_cmd(const ::std::string& value);
  inline void set_cmd(const char* value);
  inline void set_cmd(const char* value, size_t size);
  inline ::std::string* mutable_cmd();
  inline ::std::string* release_cmd();
  inline void set_allocated_cmd(::std::string* cmd);

  // repeated string arg = 2;
  inline int arg_size() const;
  inline void clear_arg();
  static const int kArgFieldNumber = 2;
  inline const ::std::string& arg(int index) const;
  inline ::std::string* mutable_arg(int index);
  inline void set_arg(int index, const ::std::string& value);
  inline void set_arg(int index, const char* value);
  inline void set_arg(int index, const char* value, size_t size);
  inline ::std::string* add_arg();
  inline void add_arg(const ::std::string& value);
  inline void add_arg(const char* value);
  inline void add_arg(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& arg() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_arg();

  // @@protoc_insertion_point(class_scope:proto_ff.GmReq)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* cmd_;
  ::google::protobuf::RepeatedPtrField< ::std::string> arg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Gm_2eproto();
  friend void protobuf_AssignDesc_Gm_2eproto();
  friend void protobuf_ShutdownFile_Gm_2eproto();

  void InitAsDefaultInstance();
  static GmReq* default_instance_;
};
// -------------------------------------------------------------------

class GmRsp : public ::google::protobuf::Message {
 public:
  GmRsp();
  virtual ~GmRsp();

  GmRsp(const GmRsp& from);

  inline GmRsp& operator=(const GmRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GmRsp& default_instance();

  void Swap(GmRsp* other);

  // implements Message ----------------------------------------------

  GmRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GmRsp& from);
  void MergeFrom(const GmRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GmRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Gm_2eproto();
  friend void protobuf_AssignDesc_Gm_2eproto();
  friend void protobuf_ShutdownFile_Gm_2eproto();

  void InitAsDefaultInstance();
  static GmRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGmRsp : public ::google::protobuf::Message {
 public:
  NotifyGmRsp();
  virtual ~NotifyGmRsp();

  NotifyGmRsp(const NotifyGmRsp& from);

  inline NotifyGmRsp& operator=(const NotifyGmRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyGmRsp& default_instance();

  void Swap(NotifyGmRsp* other);

  // implements Message ----------------------------------------------

  NotifyGmRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyGmRsp& from);
  void MergeFrom(const NotifyGmRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required string cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline const ::std::string& cmd() const;
  inline void set_cmd(const ::std::string& value);
  inline void set_cmd(const char* value);
  inline void set_cmd(const char* value, size_t size);
  inline ::std::string* mutable_cmd();
  inline ::std::string* release_cmd();
  inline void set_allocated_cmd(::std::string* cmd);

  // repeated string arg = 3;
  inline int arg_size() const;
  inline void clear_arg();
  static const int kArgFieldNumber = 3;
  inline const ::std::string& arg(int index) const;
  inline ::std::string* mutable_arg(int index);
  inline void set_arg(int index, const ::std::string& value);
  inline void set_arg(int index, const char* value);
  inline void set_arg(int index, const char* value, size_t size);
  inline ::std::string* add_arg();
  inline void add_arg(const ::std::string& value);
  inline void add_arg(const char* value);
  inline void add_arg(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& arg() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_arg();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyGmRsp)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_cmd();
  inline void clear_has_cmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* cmd_;
  ::google::protobuf::RepeatedPtrField< ::std::string> arg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Gm_2eproto();
  friend void protobuf_AssignDesc_Gm_2eproto();
  friend void protobuf_ShutdownFile_Gm_2eproto();

  void InitAsDefaultInstance();
  static NotifyGmRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// GmReq

// required string cmd = 1;
inline bool GmReq::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GmReq::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GmReq::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GmReq::clear_cmd() {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    cmd_->clear();
  }
  clear_has_cmd();
}
inline const ::std::string& GmReq::cmd() const {
  return *cmd_;
}
inline void GmReq::set_cmd(const ::std::string& value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void GmReq::set_cmd(const char* value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void GmReq::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GmReq::mutable_cmd() {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  return cmd_;
}
inline ::std::string* GmReq::release_cmd() {
  clear_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cmd_;
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GmReq::set_allocated_cmd(::std::string* cmd) {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    delete cmd_;
  }
  if (cmd) {
    set_has_cmd();
    cmd_ = cmd;
  } else {
    clear_has_cmd();
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string arg = 2;
inline int GmReq::arg_size() const {
  return arg_.size();
}
inline void GmReq::clear_arg() {
  arg_.Clear();
}
inline const ::std::string& GmReq::arg(int index) const {
  return arg_.Get(index);
}
inline ::std::string* GmReq::mutable_arg(int index) {
  return arg_.Mutable(index);
}
inline void GmReq::set_arg(int index, const ::std::string& value) {
  arg_.Mutable(index)->assign(value);
}
inline void GmReq::set_arg(int index, const char* value) {
  arg_.Mutable(index)->assign(value);
}
inline void GmReq::set_arg(int index, const char* value, size_t size) {
  arg_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GmReq::add_arg() {
  return arg_.Add();
}
inline void GmReq::add_arg(const ::std::string& value) {
  arg_.Add()->assign(value);
}
inline void GmReq::add_arg(const char* value) {
  arg_.Add()->assign(value);
}
inline void GmReq::add_arg(const char* value, size_t size) {
  arg_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GmReq::arg() const {
  return arg_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GmReq::mutable_arg() {
  return &arg_;
}

// -------------------------------------------------------------------

// GmRsp

// required int32 retcode = 1;
inline bool GmRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GmRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GmRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GmRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 GmRsp::retcode() const {
  return retcode_;
}
inline void GmRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// NotifyGmRsp

// required uint64 cid = 1;
inline bool NotifyGmRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGmRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGmRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGmRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 NotifyGmRsp::cid() const {
  return cid_;
}
inline void NotifyGmRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required string cmd = 2;
inline bool NotifyGmRsp::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGmRsp::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGmRsp::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGmRsp::clear_cmd() {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    cmd_->clear();
  }
  clear_has_cmd();
}
inline const ::std::string& NotifyGmRsp::cmd() const {
  return *cmd_;
}
inline void NotifyGmRsp::set_cmd(const ::std::string& value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void NotifyGmRsp::set_cmd(const char* value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void NotifyGmRsp::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyGmRsp::mutable_cmd() {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  return cmd_;
}
inline ::std::string* NotifyGmRsp::release_cmd() {
  clear_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cmd_;
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyGmRsp::set_allocated_cmd(::std::string* cmd) {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    delete cmd_;
  }
  if (cmd) {
    set_has_cmd();
    cmd_ = cmd;
  } else {
    clear_has_cmd();
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string arg = 3;
inline int NotifyGmRsp::arg_size() const {
  return arg_.size();
}
inline void NotifyGmRsp::clear_arg() {
  arg_.Clear();
}
inline const ::std::string& NotifyGmRsp::arg(int index) const {
  return arg_.Get(index);
}
inline ::std::string* NotifyGmRsp::mutable_arg(int index) {
  return arg_.Mutable(index);
}
inline void NotifyGmRsp::set_arg(int index, const ::std::string& value) {
  arg_.Mutable(index)->assign(value);
}
inline void NotifyGmRsp::set_arg(int index, const char* value) {
  arg_.Mutable(index)->assign(value);
}
inline void NotifyGmRsp::set_arg(int index, const char* value, size_t size) {
  arg_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyGmRsp::add_arg() {
  return arg_.Add();
}
inline void NotifyGmRsp::add_arg(const ::std::string& value) {
  arg_.Add()->assign(value);
}
inline void NotifyGmRsp::add_arg(const char* value) {
  arg_.Add()->assign(value);
}
inline void NotifyGmRsp::add_arg(const char* value, size_t size) {
  arg_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NotifyGmRsp::arg() const {
  return arg_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NotifyGmRsp::mutable_arg() {
  return &arg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Gm_2eproto__INCLUDED
