// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Dragon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Dragon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_DragonFragmentAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonFragmentAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonFragment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonFragment_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonFragment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonFragment_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonDisplayMaterialDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonDisplayMaterialDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonDisplay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonDisplay_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonDisplay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonDisplay_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonLvvalueAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonLvvalueAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonLvvalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonLvvalue_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonLvvalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonLvvalue_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonStarvalueAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonStarvalueAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonStarvalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonStarvalue_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonStarvalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonStarvalue_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fDragon_2eproto() {
  protobuf_AddDesc_E_5fDragon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Dragon.proto");
  GOOGLE_CHECK(file != NULL);
  E_DragonFragmentAttributeDesc_descriptor_ = file->message_type(0);
  static const int E_DragonFragmentAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonFragmentAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonFragmentAttributeDesc, m_type_),
  };
  E_DragonFragmentAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonFragmentAttributeDesc_descriptor_,
      E_DragonFragmentAttributeDesc::default_instance_,
      E_DragonFragmentAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonFragmentAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonFragmentAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonFragmentAttributeDesc));
  E_DragonFragment_descriptor_ = file->message_type(1);
  static const int E_DragonFragment_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonFragment, m_fragmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonFragment, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonFragment, m_itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonFragment, m_attribute_),
  };
  E_DragonFragment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonFragment_descriptor_,
      E_DragonFragment::default_instance_,
      E_DragonFragment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonFragment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonFragment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonFragment));
  Sheet_DragonFragment_descriptor_ = file->message_type(2);
  static const int Sheet_DragonFragment_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonFragment, e_dragonfragment_list_),
  };
  Sheet_DragonFragment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonFragment_descriptor_,
      Sheet_DragonFragment::default_instance_,
      Sheet_DragonFragment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonFragment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonFragment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonFragment));
  E_DragonDisplayMaterialDesc_descriptor_ = file->message_type(3);
  static const int E_DragonDisplayMaterialDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplayMaterialDesc, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplayMaterialDesc, m_id_),
  };
  E_DragonDisplayMaterialDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonDisplayMaterialDesc_descriptor_,
      E_DragonDisplayMaterialDesc::default_instance_,
      E_DragonDisplayMaterialDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplayMaterialDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplayMaterialDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonDisplayMaterialDesc));
  E_DragonDisplay_descriptor_ = file->message_type(4);
  static const int E_DragonDisplay_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_funid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_uplvtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_lvmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_exskillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_staritem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_upstartype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_starup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_luck_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, m_fragmentid_),
  };
  E_DragonDisplay_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonDisplay_descriptor_,
      E_DragonDisplay::default_instance_,
      E_DragonDisplay_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonDisplay, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonDisplay));
  Sheet_DragonDisplay_descriptor_ = file->message_type(5);
  static const int Sheet_DragonDisplay_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonDisplay, e_dragondisplay_list_),
  };
  Sheet_DragonDisplay_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonDisplay_descriptor_,
      Sheet_DragonDisplay::default_instance_,
      Sheet_DragonDisplay_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonDisplay, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonDisplay, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonDisplay));
  E_DragonChange_descriptor_ = file->message_type(6);
  static const int E_DragonChange_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, m_funid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, m_exskillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, m_fxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, m_starmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, m_startype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, m_activationitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, m_activationnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, m_starid_),
  };
  E_DragonChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonChange_descriptor_,
      E_DragonChange::default_instance_,
      E_DragonChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonChange));
  Sheet_DragonChange_descriptor_ = file->message_type(7);
  static const int Sheet_DragonChange_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonChange, e_dragonchange_list_),
  };
  Sheet_DragonChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonChange_descriptor_,
      Sheet_DragonChange::default_instance_,
      Sheet_DragonChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonChange));
  E_DragonLvvalueAttributeDesc_descriptor_ = file->message_type(8);
  static const int E_DragonLvvalueAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalueAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalueAttributeDesc, m_type_),
  };
  E_DragonLvvalueAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonLvvalueAttributeDesc_descriptor_,
      E_DragonLvvalueAttributeDesc::default_instance_,
      E_DragonLvvalueAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalueAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalueAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonLvvalueAttributeDesc));
  E_DragonLvvalue_descriptor_ = file->message_type(9);
  static const int E_DragonLvvalue_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalue, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalue, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalue, m_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalue, m_starlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalue, m_attribute_),
  };
  E_DragonLvvalue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonLvvalue_descriptor_,
      E_DragonLvvalue::default_instance_,
      E_DragonLvvalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonLvvalue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonLvvalue));
  Sheet_DragonLvvalue_descriptor_ = file->message_type(10);
  static const int Sheet_DragonLvvalue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonLvvalue, e_dragonlvvalue_list_),
  };
  Sheet_DragonLvvalue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonLvvalue_descriptor_,
      Sheet_DragonLvvalue::default_instance_,
      Sheet_DragonLvvalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonLvvalue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonLvvalue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonLvvalue));
  E_DragonStarvalueAttributeDesc_descriptor_ = file->message_type(11);
  static const int E_DragonStarvalueAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalueAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalueAttributeDesc, m_type_),
  };
  E_DragonStarvalueAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonStarvalueAttributeDesc_descriptor_,
      E_DragonStarvalueAttributeDesc::default_instance_,
      E_DragonStarvalueAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalueAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalueAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonStarvalueAttributeDesc));
  E_DragonStarvalue_descriptor_ = file->message_type(12);
  static const int E_DragonStarvalue_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, m_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, m_starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, m_sucess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, m_luckmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, m_failluck_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, m_model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, m_attribute_),
  };
  E_DragonStarvalue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonStarvalue_descriptor_,
      E_DragonStarvalue::default_instance_,
      E_DragonStarvalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonStarvalue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonStarvalue));
  Sheet_DragonStarvalue_descriptor_ = file->message_type(13);
  static const int Sheet_DragonStarvalue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonStarvalue, e_dragonstarvalue_list_),
  };
  Sheet_DragonStarvalue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonStarvalue_descriptor_,
      Sheet_DragonStarvalue::default_instance_,
      Sheet_DragonStarvalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonStarvalue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonStarvalue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonStarvalue));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fDragon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonFragmentAttributeDesc_descriptor_, &E_DragonFragmentAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonFragment_descriptor_, &E_DragonFragment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonFragment_descriptor_, &Sheet_DragonFragment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonDisplayMaterialDesc_descriptor_, &E_DragonDisplayMaterialDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonDisplay_descriptor_, &E_DragonDisplay::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonDisplay_descriptor_, &Sheet_DragonDisplay::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonChange_descriptor_, &E_DragonChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonChange_descriptor_, &Sheet_DragonChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonLvvalueAttributeDesc_descriptor_, &E_DragonLvvalueAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonLvvalue_descriptor_, &E_DragonLvvalue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonLvvalue_descriptor_, &Sheet_DragonLvvalue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonStarvalueAttributeDesc_descriptor_, &E_DragonStarvalueAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonStarvalue_descriptor_, &E_DragonStarvalue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonStarvalue_descriptor_, &Sheet_DragonStarvalue::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fDragon_2eproto() {
  delete E_DragonFragmentAttributeDesc::default_instance_;
  delete E_DragonFragmentAttributeDesc_reflection_;
  delete E_DragonFragment::default_instance_;
  delete E_DragonFragment_reflection_;
  delete Sheet_DragonFragment::default_instance_;
  delete Sheet_DragonFragment_reflection_;
  delete E_DragonDisplayMaterialDesc::default_instance_;
  delete E_DragonDisplayMaterialDesc_reflection_;
  delete E_DragonDisplay::default_instance_;
  delete E_DragonDisplay_reflection_;
  delete Sheet_DragonDisplay::default_instance_;
  delete Sheet_DragonDisplay_reflection_;
  delete E_DragonChange::default_instance_;
  delete E_DragonChange_reflection_;
  delete Sheet_DragonChange::default_instance_;
  delete Sheet_DragonChange_reflection_;
  delete E_DragonLvvalueAttributeDesc::default_instance_;
  delete E_DragonLvvalueAttributeDesc_reflection_;
  delete E_DragonLvvalue::default_instance_;
  delete E_DragonLvvalue_reflection_;
  delete Sheet_DragonLvvalue::default_instance_;
  delete Sheet_DragonLvvalue_reflection_;
  delete E_DragonStarvalueAttributeDesc::default_instance_;
  delete E_DragonStarvalueAttributeDesc_reflection_;
  delete E_DragonStarvalue::default_instance_;
  delete E_DragonStarvalue_reflection_;
  delete Sheet_DragonStarvalue::default_instance_;
  delete Sheet_DragonStarvalue_reflection_;
}

void protobuf_AddDesc_E_5fDragon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016E_Dragon.proto\022\010proto_ff\032\025yd_fieldopti"
    "ons.proto\"Q\n\035E_DragonFragmentAttributeDe"
    "sc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\026\n\006m_type\030\002"
    " \001(\005B\006\302\377\024\002ID\"\323\001\n\020E_DragonFragment\022\"\n\014m_f"
    "ragmentid\030\001 \001(\003B\014\302\377\024\010\347\242\216\347\211\207ID\022\034\n\006m_item\030"
    "\002 \001(\003B\014\302\377\024\010\347\211\251\345\223\201ID\022)\n\tm_itemnum\030\003 \001(\005B\026"
    "\302\377\024\022\347\242\216\347\211\207\344\275\277\347\224\250\344\270\212\351\231\220\022R\n\013m_attribute\030\004 "
    "\003(\0132\'.proto_ff.E_DragonFragmentAttribute"
    "DescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\005\"W\n\024Sheet_Drag"
    "onFragment\022\?\n\025E_DragonFragment_List\030\001 \003("
    "\0132\032.proto_ff.E_DragonFragmentB\004\210\301\024\020\"Q\n\033E"
    "_DragonDisplayMaterialDesc\022\034\n\005m_exp\030\001 \001("
    "\005B\r\302\377\024\t\347\273\217\351\252\214\345\200\274\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"\244"
    "\004\n\017E_DragonDisplay\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id"
    "\022!\n\007m_funid\030\002 \001(\005B\020\302\377\024\014\345\212\237\350\203\275\345\274\200\346\224\276\022*\n\nm"
    "_uplvtype\030\003 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\345\217\202\350\200\203\347\261\273\345\236\213\022"
    "!\n\007m_lvmax\030\004 \001(\005B\020\302\377\024\014\347\255\211\347\272\247\344\270\212\351\231\220\022*\n\tm_"
    "skillid\030\005 \001(\tB\027\302\377\024\017\350\247\243\351\224\201\346\212\200\350\203\275\347\273\204\220\301\024@\0222"
    "\n\013m_exskillid\030\006 \001(\tB\035\302\377\024\025\350\247\243\351\224\201\344\270\223\345\261\236\346\212\200"
    "\350\203\275\347\273\204\220\301\024@\022$\n\nm_staritem\030\007 \001(\005B\020\302\377\024\014\345\215\207\346"
    "\230\237\351\201\223\345\205\267\022,\n\014m_upstartype\030\010 \001(\005B\026\302\377\024\022\345\215\207\346"
    "\230\237\345\217\202\350\200\203\347\261\273\345\236\213\022\"\n\010m_starup\030\t \001(\005B\020\302\377\024\014\346\230"
    "\237\346\230\237\344\270\212\351\231\220\0222\n\006m_luck\030\n \001(\005B\"\302\377\024\036\346\257\217\345\271\270\350\277"
    "\220\345\200\274\345\242\236\345\212\240\347\232\204\346\210\220\345\212\237\347\216\207\022O\n\nm_material\030\013 \003"
    "(\0132%.proto_ff.E_DragonDisplayMaterialDes"
    "cB\024\302\377\024\014\345\215\207\347\272\247\346\235\220\346\226\231\210\301\024\003\022,\n\014m_fragmentid\030"
    "\014 \003(\003B\026\302\377\024\016\345\205\263\350\201\224\347\242\216\347\211\207ID\210\301\024\003\"T\n\023Sheet_D"
    "ragonDisplay\022=\n\024E_DragonDisplay_List\030\001 \003"
    "(\0132\031.proto_ff.E_DragonDisplayB\004\210\301\024 \"\273\003\n\016"
    "E_DragonChange\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022!\n\007"
    "m_funid\030\002 \001(\005B\020\302\377\024\014\345\212\237\350\203\275\345\274\200\346\224\276\022*\n\tm_ski"
    "llid\030\003 \001(\tB\027\302\377\024\017\350\247\243\351\224\201\346\212\200\350\203\275\347\273\204\220\301\024@\0222\n\013m"
    "_exskillid\030\004 \001(\tB\035\302\377\024\025\350\247\243\351\224\201\344\270\223\345\261\236\346\212\200\350\203\275"
    "\347\273\204\220\301\024@\022$\n\006m_fxid\030\005 \001(\tB\024\302\377\024\014\345\271\273\345\214\226\347\211\271\346\225"
    "\210\220\301\024@\022#\n\tm_starmax\030\006 \001(\005B\020\302\377\024\014\346\230\237\346\230\237\344\270\212\351"
    "\231\220\022*\n\nm_startype\030\007 \001(\005B\026\302\377\024\022\346\230\237\347\272\247\346\225\260\345\200\274"
    "\347\261\273\345\236\213\0223\n\020m_activationitem\030\010 \001(\005B\031\302\377\024\025\346\277"
    "\200\346\264\273\351\234\200\350\246\201\347\232\204\351\201\223\345\205\267\0228\n\017m_activationnum\030\t"
    " \001(\005B\037\302\377\024\033\346\277\200\346\264\273\351\234\200\350\246\201\347\232\204\351\201\223\345\205\267\346\225\260\351\207\217\022*\n"
    "\010m_starid\030\n \001(\005B\030\302\377\024\024\345\215\207\346\230\237\351\234\200\350\246\201\351\201\223\345\205\267I"
    "D\"Q\n\022Sheet_DragonChange\022;\n\023E_DragonChang"
    "e_List\030\001 \003(\0132\030.proto_ff.E_DragonChangeB\004"
    "\210\301\024\010\"N\n\034E_DragonLvvalueAttributeDesc\022\030\n\007"
    "m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004"
    "\302\377\024\000\"\350\001\n\017E_DragonLvvalue\022\030\n\004m_lv\030\001 \001(\005B\n"
    "\302\377\024\006\347\255\211\347\272\247\022%\n\005m_exp\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\351\234\200"
    "\350\246\201\347\273\217\351\252\214\022 \n\006m_gold\030\003 \001(\005B\020\302\377\024\014\350\212\261\350\264\271\351\207\221"
    "\345\270\201\022%\n\013m_starlimit\030\004 \001(\005B\020\302\377\024\014\346\230\237\347\272\247\350\246\201\346"
    "\261\202\022K\n\013m_attribute\030\005 \003(\0132&.proto_ff.E_Dra"
    "gonLvvalueAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\t\""
    "U\n\023Sheet_DragonLvvalue\022>\n\024E_DragonLvvalu"
    "e_List\030\001 \003(\0132\031.proto_ff.E_DragonLvvalueB"
    "\005\210\301\024\200\010\"P\n\036E_DragonStarvalueAttributeDesc"
    "\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\006m_type\030\002 \001"
    "(\005B\004\302\377\024\000\"\214\003\n\021E_DragonStarvalue\022\024\n\004m_id\030\001"
    " \001(\005B\006\302\377\024\002id\022\032\n\006m_type\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213"
    "\022\032\n\006m_star\030\003 \001(\005B\n\302\377\024\006\346\230\237\347\272\247\022\032\n\006m_gold\030\004"
    " \001(\005B\n\302\377\024\006\351\207\221\345\270\201\022#\n\tm_starnum\030\005 \001(\005B\020\302\377\024"
    "\014\345\215\207\346\230\237\346\266\210\350\200\227\022+\n\010m_sucess\030\006 \001(\005B\031\302\377\024\025\345\215\207"
    "\347\272\247\345\237\272\347\241\200\346\210\220\345\212\237\347\216\207\022&\n\tm_luckmax\030\007 \001(\005B\023\302"
    "\377\024\017\345\271\270\350\277\220\345\200\274\344\270\212\351\231\220\022\'\n\nm_failluck\030\010 \001(\005B\023"
    "\302\377\024\017\345\244\261\350\264\245\345\271\270\350\277\220\345\200\274\022\033\n\007m_model\030\t \001(\005B\n\302\377"
    "\024\006\346\250\241\345\236\213\022M\n\013m_attribute\030\n \003(\0132(.proto_ff"
    ".E_DragonStarvalueAttributeDescB\016\302\377\024\006\345\261\236"
    "\346\200\247\210\301\024\t\"[\n\025Sheet_DragonStarvalue\022B\n\026E_Dr"
    "agonStarvalue_List\030\001 \003(\0132\033.proto_ff.E_Dr"
    "agonStarvalueB\005\210\301\024\200\020", 2660);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Dragon.proto", &protobuf_RegisterTypes);
  E_DragonFragmentAttributeDesc::default_instance_ = new E_DragonFragmentAttributeDesc();
  E_DragonFragment::default_instance_ = new E_DragonFragment();
  Sheet_DragonFragment::default_instance_ = new Sheet_DragonFragment();
  E_DragonDisplayMaterialDesc::default_instance_ = new E_DragonDisplayMaterialDesc();
  E_DragonDisplay::default_instance_ = new E_DragonDisplay();
  Sheet_DragonDisplay::default_instance_ = new Sheet_DragonDisplay();
  E_DragonChange::default_instance_ = new E_DragonChange();
  Sheet_DragonChange::default_instance_ = new Sheet_DragonChange();
  E_DragonLvvalueAttributeDesc::default_instance_ = new E_DragonLvvalueAttributeDesc();
  E_DragonLvvalue::default_instance_ = new E_DragonLvvalue();
  Sheet_DragonLvvalue::default_instance_ = new Sheet_DragonLvvalue();
  E_DragonStarvalueAttributeDesc::default_instance_ = new E_DragonStarvalueAttributeDesc();
  E_DragonStarvalue::default_instance_ = new E_DragonStarvalue();
  Sheet_DragonStarvalue::default_instance_ = new Sheet_DragonStarvalue();
  E_DragonFragmentAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_DragonFragment::default_instance_->InitAsDefaultInstance();
  Sheet_DragonFragment::default_instance_->InitAsDefaultInstance();
  E_DragonDisplayMaterialDesc::default_instance_->InitAsDefaultInstance();
  E_DragonDisplay::default_instance_->InitAsDefaultInstance();
  Sheet_DragonDisplay::default_instance_->InitAsDefaultInstance();
  E_DragonChange::default_instance_->InitAsDefaultInstance();
  Sheet_DragonChange::default_instance_->InitAsDefaultInstance();
  E_DragonLvvalueAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_DragonLvvalue::default_instance_->InitAsDefaultInstance();
  Sheet_DragonLvvalue::default_instance_->InitAsDefaultInstance();
  E_DragonStarvalueAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_DragonStarvalue::default_instance_->InitAsDefaultInstance();
  Sheet_DragonStarvalue::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fDragon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fDragon_2eproto {
  StaticDescriptorInitializer_E_5fDragon_2eproto() {
    protobuf_AddDesc_E_5fDragon_2eproto();
  }
} static_descriptor_initializer_E_5fDragon_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_DragonFragmentAttributeDesc::kMValueFieldNumber;
const int E_DragonFragmentAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_DragonFragmentAttributeDesc::E_DragonFragmentAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonFragmentAttributeDesc::InitAsDefaultInstance() {
}

E_DragonFragmentAttributeDesc::E_DragonFragmentAttributeDesc(const E_DragonFragmentAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonFragmentAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonFragmentAttributeDesc::~E_DragonFragmentAttributeDesc() {
  SharedDtor();
}

void E_DragonFragmentAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonFragmentAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonFragmentAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonFragmentAttributeDesc_descriptor_;
}

const E_DragonFragmentAttributeDesc& E_DragonFragmentAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

E_DragonFragmentAttributeDesc* E_DragonFragmentAttributeDesc::default_instance_ = NULL;

E_DragonFragmentAttributeDesc* E_DragonFragmentAttributeDesc::New() const {
  return new E_DragonFragmentAttributeDesc;
}

void E_DragonFragmentAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonFragmentAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonFragmentAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonFragmentAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonFragmentAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonFragmentAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonFragmentAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonFragmentAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonFragmentAttributeDesc::MergeFrom(const E_DragonFragmentAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonFragmentAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonFragmentAttributeDesc::CopyFrom(const E_DragonFragmentAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonFragmentAttributeDesc::IsInitialized() const {

  return true;
}

void E_DragonFragmentAttributeDesc::Swap(E_DragonFragmentAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonFragmentAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonFragmentAttributeDesc_descriptor_;
  metadata.reflection = E_DragonFragmentAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonFragment::kMFragmentidFieldNumber;
const int E_DragonFragment::kMItemFieldNumber;
const int E_DragonFragment::kMItemnumFieldNumber;
const int E_DragonFragment::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_DragonFragment::E_DragonFragment()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonFragment::InitAsDefaultInstance() {
}

E_DragonFragment::E_DragonFragment(const E_DragonFragment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonFragment::SharedCtor() {
  _cached_size_ = 0;
  m_fragmentid_ = GOOGLE_LONGLONG(0);
  m_item_ = GOOGLE_LONGLONG(0);
  m_itemnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonFragment::~E_DragonFragment() {
  SharedDtor();
}

void E_DragonFragment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonFragment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonFragment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonFragment_descriptor_;
}

const E_DragonFragment& E_DragonFragment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

E_DragonFragment* E_DragonFragment::default_instance_ = NULL;

E_DragonFragment* E_DragonFragment::New() const {
  return new E_DragonFragment;
}

void E_DragonFragment::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_fragmentid_ = GOOGLE_LONGLONG(0);
    m_item_ = GOOGLE_LONGLONG(0);
    m_itemnum_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonFragment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_fragmentid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_fragmentid_)));
          set_has_m_fragmentid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_item;
        break;
      }

      // optional int64 m_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_itemnum;
        break;
      }

      // optional int32 m_itemnum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemnum_)));
          set_has_m_itemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_DragonFragmentAttributeDesc m_attribute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonFragment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_fragmentid = 1;
  if (has_m_fragmentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_fragmentid(), output);
  }

  // optional int64 m_item = 2;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_item(), output);
  }

  // optional int32 m_itemnum = 3;
  if (has_m_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_itemnum(), output);
  }

  // repeated .proto_ff.E_DragonFragmentAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonFragment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_fragmentid = 1;
  if (has_m_fragmentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_fragmentid(), target);
  }

  // optional int64 m_item = 2;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_item(), target);
  }

  // optional int32 m_itemnum = 3;
  if (has_m_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_itemnum(), target);
  }

  // repeated .proto_ff.E_DragonFragmentAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonFragment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_fragmentid = 1;
    if (has_m_fragmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_fragmentid());
    }

    // optional int64 m_item = 2;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_item());
    }

    // optional int32 m_itemnum = 3;
    if (has_m_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemnum());
    }

  }
  // repeated .proto_ff.E_DragonFragmentAttributeDesc m_attribute = 4;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonFragment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonFragment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonFragment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonFragment::MergeFrom(const E_DragonFragment& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_fragmentid()) {
      set_m_fragmentid(from.m_fragmentid());
    }
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
    if (from.has_m_itemnum()) {
      set_m_itemnum(from.m_itemnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonFragment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonFragment::CopyFrom(const E_DragonFragment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonFragment::IsInitialized() const {

  return true;
}

void E_DragonFragment::Swap(E_DragonFragment* other) {
  if (other != this) {
    std::swap(m_fragmentid_, other->m_fragmentid_);
    std::swap(m_item_, other->m_item_);
    std::swap(m_itemnum_, other->m_itemnum_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonFragment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonFragment_descriptor_;
  metadata.reflection = E_DragonFragment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonFragment::kEDragonFragmentListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonFragment::Sheet_DragonFragment()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonFragment::InitAsDefaultInstance() {
}

Sheet_DragonFragment::Sheet_DragonFragment(const Sheet_DragonFragment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonFragment::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonFragment::~Sheet_DragonFragment() {
  SharedDtor();
}

void Sheet_DragonFragment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonFragment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonFragment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonFragment_descriptor_;
}

const Sheet_DragonFragment& Sheet_DragonFragment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

Sheet_DragonFragment* Sheet_DragonFragment::default_instance_ = NULL;

Sheet_DragonFragment* Sheet_DragonFragment::New() const {
  return new Sheet_DragonFragment;
}

void Sheet_DragonFragment::Clear() {
  e_dragonfragment_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonFragment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonFragment E_DragonFragment_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonFragment_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonfragment_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonFragment_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonFragment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonFragment E_DragonFragment_List = 1;
  for (int i = 0; i < this->e_dragonfragment_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonfragment_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonFragment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonFragment E_DragonFragment_List = 1;
  for (int i = 0; i < this->e_dragonfragment_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonfragment_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonFragment::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonFragment E_DragonFragment_List = 1;
  total_size += 1 * this->e_dragonfragment_list_size();
  for (int i = 0; i < this->e_dragonfragment_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonfragment_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonFragment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonFragment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonFragment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonFragment::MergeFrom(const Sheet_DragonFragment& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonfragment_list_.MergeFrom(from.e_dragonfragment_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonFragment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonFragment::CopyFrom(const Sheet_DragonFragment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonFragment::IsInitialized() const {

  return true;
}

void Sheet_DragonFragment::Swap(Sheet_DragonFragment* other) {
  if (other != this) {
    e_dragonfragment_list_.Swap(&other->e_dragonfragment_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonFragment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonFragment_descriptor_;
  metadata.reflection = Sheet_DragonFragment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonDisplayMaterialDesc::kMExpFieldNumber;
const int E_DragonDisplayMaterialDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_DragonDisplayMaterialDesc::E_DragonDisplayMaterialDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonDisplayMaterialDesc::InitAsDefaultInstance() {
}

E_DragonDisplayMaterialDesc::E_DragonDisplayMaterialDesc(const E_DragonDisplayMaterialDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonDisplayMaterialDesc::SharedCtor() {
  _cached_size_ = 0;
  m_exp_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonDisplayMaterialDesc::~E_DragonDisplayMaterialDesc() {
  SharedDtor();
}

void E_DragonDisplayMaterialDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonDisplayMaterialDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonDisplayMaterialDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonDisplayMaterialDesc_descriptor_;
}

const E_DragonDisplayMaterialDesc& E_DragonDisplayMaterialDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

E_DragonDisplayMaterialDesc* E_DragonDisplayMaterialDesc::default_instance_ = NULL;

E_DragonDisplayMaterialDesc* E_DragonDisplayMaterialDesc::New() const {
  return new E_DragonDisplayMaterialDesc;
}

void E_DragonDisplayMaterialDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_exp_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonDisplayMaterialDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonDisplayMaterialDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_exp = 1;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_exp(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonDisplayMaterialDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_exp = 1;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_exp(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonDisplayMaterialDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_exp = 1;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonDisplayMaterialDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonDisplayMaterialDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonDisplayMaterialDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonDisplayMaterialDesc::MergeFrom(const E_DragonDisplayMaterialDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonDisplayMaterialDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonDisplayMaterialDesc::CopyFrom(const E_DragonDisplayMaterialDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonDisplayMaterialDesc::IsInitialized() const {

  return true;
}

void E_DragonDisplayMaterialDesc::Swap(E_DragonDisplayMaterialDesc* other) {
  if (other != this) {
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonDisplayMaterialDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonDisplayMaterialDesc_descriptor_;
  metadata.reflection = E_DragonDisplayMaterialDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonDisplay::kMIdFieldNumber;
const int E_DragonDisplay::kMFunidFieldNumber;
const int E_DragonDisplay::kMUplvtypeFieldNumber;
const int E_DragonDisplay::kMLvmaxFieldNumber;
const int E_DragonDisplay::kMSkillidFieldNumber;
const int E_DragonDisplay::kMExskillidFieldNumber;
const int E_DragonDisplay::kMStaritemFieldNumber;
const int E_DragonDisplay::kMUpstartypeFieldNumber;
const int E_DragonDisplay::kMStarupFieldNumber;
const int E_DragonDisplay::kMLuckFieldNumber;
const int E_DragonDisplay::kMMaterialFieldNumber;
const int E_DragonDisplay::kMFragmentidFieldNumber;
#endif  // !_MSC_VER

E_DragonDisplay::E_DragonDisplay()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonDisplay::InitAsDefaultInstance() {
}

E_DragonDisplay::E_DragonDisplay(const E_DragonDisplay& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonDisplay::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_funid_ = 0;
  m_uplvtype_ = 0;
  m_lvmax_ = 0;
  m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_exskillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_staritem_ = 0;
  m_upstartype_ = 0;
  m_starup_ = 0;
  m_luck_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonDisplay::~E_DragonDisplay() {
  SharedDtor();
}

void E_DragonDisplay::SharedDtor() {
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillid_;
  }
  if (m_exskillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_exskillid_;
  }
  if (this != default_instance_) {
  }
}

void E_DragonDisplay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonDisplay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonDisplay_descriptor_;
}

const E_DragonDisplay& E_DragonDisplay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

E_DragonDisplay* E_DragonDisplay::default_instance_ = NULL;

E_DragonDisplay* E_DragonDisplay::New() const {
  return new E_DragonDisplay;
}

void E_DragonDisplay::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_funid_ = 0;
    m_uplvtype_ = 0;
    m_lvmax_ = 0;
    if (has_m_skillid()) {
      if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
        m_skillid_->clear();
      }
    }
    if (has_m_exskillid()) {
      if (m_exskillid_ != &::google::protobuf::internal::kEmptyString) {
        m_exskillid_->clear();
      }
    }
    m_staritem_ = 0;
    m_upstartype_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_starup_ = 0;
    m_luck_ = 0;
  }
  m_material_.Clear();
  m_fragmentid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonDisplay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_funid;
        break;
      }

      // optional int32 m_funid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_funid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_funid_)));
          set_has_m_funid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_uplvtype;
        break;
      }

      // optional int32 m_uplvtype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_uplvtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_uplvtype_)));
          set_has_m_uplvtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_lvmax;
        break;
      }

      // optional int32 m_lvmax = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvmax_)));
          set_has_m_lvmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_skillid;
        break;
      }

      // optional string m_skillid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skillid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_skillid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_skillid().data(), this->m_skillid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_exskillid;
        break;
      }

      // optional string m_exskillid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_exskillid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_exskillid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_exskillid().data(), this->m_exskillid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_staritem;
        break;
      }

      // optional int32 m_staritem = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_staritem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_staritem_)));
          set_has_m_staritem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_upstartype;
        break;
      }

      // optional int32 m_upstartype = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upstartype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upstartype_)));
          set_has_m_upstartype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_starup;
        break;
      }

      // optional int32 m_starup = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starup_)));
          set_has_m_starup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_luck;
        break;
      }

      // optional int32 m_luck = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_luck:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_luck_)));
          set_has_m_luck();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_material;
        break;
      }

      // repeated .proto_ff.E_DragonDisplayMaterialDesc m_material = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_material()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_material;
        if (input->ExpectTag(96)) goto parse_m_fragmentid;
        break;
      }

      // repeated int64 m_fragmentid = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_fragmentid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 96, input, this->mutable_m_fragmentid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_m_fragmentid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_fragmentid;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonDisplay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_funid = 2;
  if (has_m_funid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_funid(), output);
  }

  // optional int32 m_uplvtype = 3;
  if (has_m_uplvtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_uplvtype(), output);
  }

  // optional int32 m_lvmax = 4;
  if (has_m_lvmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_lvmax(), output);
  }

  // optional string m_skillid = 5;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_skillid(), output);
  }

  // optional string m_exskillid = 6;
  if (has_m_exskillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exskillid().data(), this->m_exskillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_exskillid(), output);
  }

  // optional int32 m_staritem = 7;
  if (has_m_staritem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_staritem(), output);
  }

  // optional int32 m_upstartype = 8;
  if (has_m_upstartype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_upstartype(), output);
  }

  // optional int32 m_starup = 9;
  if (has_m_starup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_starup(), output);
  }

  // optional int32 m_luck = 10;
  if (has_m_luck()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_luck(), output);
  }

  // repeated .proto_ff.E_DragonDisplayMaterialDesc m_material = 11;
  for (int i = 0; i < this->m_material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->m_material(i), output);
  }

  // repeated int64 m_fragmentid = 12;
  for (int i = 0; i < this->m_fragmentid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      12, this->m_fragmentid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonDisplay::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_funid = 2;
  if (has_m_funid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_funid(), target);
  }

  // optional int32 m_uplvtype = 3;
  if (has_m_uplvtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_uplvtype(), target);
  }

  // optional int32 m_lvmax = 4;
  if (has_m_lvmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_lvmax(), target);
  }

  // optional string m_skillid = 5;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_skillid(), target);
  }

  // optional string m_exskillid = 6;
  if (has_m_exskillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exskillid().data(), this->m_exskillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_exskillid(), target);
  }

  // optional int32 m_staritem = 7;
  if (has_m_staritem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_staritem(), target);
  }

  // optional int32 m_upstartype = 8;
  if (has_m_upstartype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_upstartype(), target);
  }

  // optional int32 m_starup = 9;
  if (has_m_starup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_starup(), target);
  }

  // optional int32 m_luck = 10;
  if (has_m_luck()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_luck(), target);
  }

  // repeated .proto_ff.E_DragonDisplayMaterialDesc m_material = 11;
  for (int i = 0; i < this->m_material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->m_material(i), target);
  }

  // repeated int64 m_fragmentid = 12;
  for (int i = 0; i < this->m_fragmentid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(12, this->m_fragmentid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonDisplay::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_funid = 2;
    if (has_m_funid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_funid());
    }

    // optional int32 m_uplvtype = 3;
    if (has_m_uplvtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_uplvtype());
    }

    // optional int32 m_lvmax = 4;
    if (has_m_lvmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvmax());
    }

    // optional string m_skillid = 5;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_skillid());
    }

    // optional string m_exskillid = 6;
    if (has_m_exskillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_exskillid());
    }

    // optional int32 m_staritem = 7;
    if (has_m_staritem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_staritem());
    }

    // optional int32 m_upstartype = 8;
    if (has_m_upstartype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upstartype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_starup = 9;
    if (has_m_starup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starup());
    }

    // optional int32 m_luck = 10;
    if (has_m_luck()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_luck());
    }

  }
  // repeated .proto_ff.E_DragonDisplayMaterialDesc m_material = 11;
  total_size += 1 * this->m_material_size();
  for (int i = 0; i < this->m_material_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_material(i));
  }

  // repeated int64 m_fragmentid = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_fragmentid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->m_fragmentid(i));
    }
    total_size += 1 * this->m_fragmentid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonDisplay::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonDisplay* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonDisplay*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonDisplay::MergeFrom(const E_DragonDisplay& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_material_.MergeFrom(from.m_material_);
  m_fragmentid_.MergeFrom(from.m_fragmentid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_funid()) {
      set_m_funid(from.m_funid());
    }
    if (from.has_m_uplvtype()) {
      set_m_uplvtype(from.m_uplvtype());
    }
    if (from.has_m_lvmax()) {
      set_m_lvmax(from.m_lvmax());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_exskillid()) {
      set_m_exskillid(from.m_exskillid());
    }
    if (from.has_m_staritem()) {
      set_m_staritem(from.m_staritem());
    }
    if (from.has_m_upstartype()) {
      set_m_upstartype(from.m_upstartype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_starup()) {
      set_m_starup(from.m_starup());
    }
    if (from.has_m_luck()) {
      set_m_luck(from.m_luck());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonDisplay::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonDisplay::CopyFrom(const E_DragonDisplay& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonDisplay::IsInitialized() const {

  return true;
}

void E_DragonDisplay::Swap(E_DragonDisplay* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_funid_, other->m_funid_);
    std::swap(m_uplvtype_, other->m_uplvtype_);
    std::swap(m_lvmax_, other->m_lvmax_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_exskillid_, other->m_exskillid_);
    std::swap(m_staritem_, other->m_staritem_);
    std::swap(m_upstartype_, other->m_upstartype_);
    std::swap(m_starup_, other->m_starup_);
    std::swap(m_luck_, other->m_luck_);
    m_material_.Swap(&other->m_material_);
    m_fragmentid_.Swap(&other->m_fragmentid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonDisplay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonDisplay_descriptor_;
  metadata.reflection = E_DragonDisplay_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonDisplay::kEDragonDisplayListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonDisplay::Sheet_DragonDisplay()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonDisplay::InitAsDefaultInstance() {
}

Sheet_DragonDisplay::Sheet_DragonDisplay(const Sheet_DragonDisplay& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonDisplay::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonDisplay::~Sheet_DragonDisplay() {
  SharedDtor();
}

void Sheet_DragonDisplay::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonDisplay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonDisplay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonDisplay_descriptor_;
}

const Sheet_DragonDisplay& Sheet_DragonDisplay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

Sheet_DragonDisplay* Sheet_DragonDisplay::default_instance_ = NULL;

Sheet_DragonDisplay* Sheet_DragonDisplay::New() const {
  return new Sheet_DragonDisplay;
}

void Sheet_DragonDisplay::Clear() {
  e_dragondisplay_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonDisplay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonDisplay E_DragonDisplay_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonDisplay_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragondisplay_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonDisplay_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonDisplay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonDisplay E_DragonDisplay_List = 1;
  for (int i = 0; i < this->e_dragondisplay_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragondisplay_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonDisplay::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonDisplay E_DragonDisplay_List = 1;
  for (int i = 0; i < this->e_dragondisplay_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragondisplay_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonDisplay::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonDisplay E_DragonDisplay_List = 1;
  total_size += 1 * this->e_dragondisplay_list_size();
  for (int i = 0; i < this->e_dragondisplay_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragondisplay_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonDisplay::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonDisplay* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonDisplay*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonDisplay::MergeFrom(const Sheet_DragonDisplay& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragondisplay_list_.MergeFrom(from.e_dragondisplay_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonDisplay::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonDisplay::CopyFrom(const Sheet_DragonDisplay& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonDisplay::IsInitialized() const {

  return true;
}

void Sheet_DragonDisplay::Swap(Sheet_DragonDisplay* other) {
  if (other != this) {
    e_dragondisplay_list_.Swap(&other->e_dragondisplay_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonDisplay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonDisplay_descriptor_;
  metadata.reflection = Sheet_DragonDisplay_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonChange::kMIdFieldNumber;
const int E_DragonChange::kMFunidFieldNumber;
const int E_DragonChange::kMSkillidFieldNumber;
const int E_DragonChange::kMExskillidFieldNumber;
const int E_DragonChange::kMFxidFieldNumber;
const int E_DragonChange::kMStarmaxFieldNumber;
const int E_DragonChange::kMStartypeFieldNumber;
const int E_DragonChange::kMActivationitemFieldNumber;
const int E_DragonChange::kMActivationnumFieldNumber;
const int E_DragonChange::kMStaridFieldNumber;
#endif  // !_MSC_VER

E_DragonChange::E_DragonChange()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonChange::InitAsDefaultInstance() {
}

E_DragonChange::E_DragonChange(const E_DragonChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonChange::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_funid_ = 0;
  m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_exskillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_fxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_starmax_ = 0;
  m_startype_ = 0;
  m_activationitem_ = 0;
  m_activationnum_ = 0;
  m_starid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonChange::~E_DragonChange() {
  SharedDtor();
}

void E_DragonChange::SharedDtor() {
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillid_;
  }
  if (m_exskillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_exskillid_;
  }
  if (m_fxid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_fxid_;
  }
  if (this != default_instance_) {
  }
}

void E_DragonChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonChange_descriptor_;
}

const E_DragonChange& E_DragonChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

E_DragonChange* E_DragonChange::default_instance_ = NULL;

E_DragonChange* E_DragonChange::New() const {
  return new E_DragonChange;
}

void E_DragonChange::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_funid_ = 0;
    if (has_m_skillid()) {
      if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
        m_skillid_->clear();
      }
    }
    if (has_m_exskillid()) {
      if (m_exskillid_ != &::google::protobuf::internal::kEmptyString) {
        m_exskillid_->clear();
      }
    }
    if (has_m_fxid()) {
      if (m_fxid_ != &::google::protobuf::internal::kEmptyString) {
        m_fxid_->clear();
      }
    }
    m_starmax_ = 0;
    m_startype_ = 0;
    m_activationitem_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_activationnum_ = 0;
    m_starid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_funid;
        break;
      }

      // optional int32 m_funid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_funid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_funid_)));
          set_has_m_funid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_skillid;
        break;
      }

      // optional string m_skillid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skillid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_skillid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_skillid().data(), this->m_skillid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_exskillid;
        break;
      }

      // optional string m_exskillid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_exskillid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_exskillid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_exskillid().data(), this->m_exskillid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_fxid;
        break;
      }

      // optional string m_fxid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_fxid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_fxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_fxid().data(), this->m_fxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_starmax;
        break;
      }

      // optional int32 m_starmax = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starmax_)));
          set_has_m_starmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_startype;
        break;
      }

      // optional int32 m_startype = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_startype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_startype_)));
          set_has_m_startype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_activationitem;
        break;
      }

      // optional int32 m_activationitem = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activationitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activationitem_)));
          set_has_m_activationitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_activationnum;
        break;
      }

      // optional int32 m_activationnum = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activationnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activationnum_)));
          set_has_m_activationnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_starid;
        break;
      }

      // optional int32 m_starid = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starid_)));
          set_has_m_starid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_funid = 2;
  if (has_m_funid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_funid(), output);
  }

  // optional string m_skillid = 3;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_skillid(), output);
  }

  // optional string m_exskillid = 4;
  if (has_m_exskillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exskillid().data(), this->m_exskillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_exskillid(), output);
  }

  // optional string m_fxid = 5;
  if (has_m_fxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_fxid().data(), this->m_fxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_fxid(), output);
  }

  // optional int32 m_starmax = 6;
  if (has_m_starmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_starmax(), output);
  }

  // optional int32 m_startype = 7;
  if (has_m_startype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_startype(), output);
  }

  // optional int32 m_activationitem = 8;
  if (has_m_activationitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_activationitem(), output);
  }

  // optional int32 m_activationnum = 9;
  if (has_m_activationnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_activationnum(), output);
  }

  // optional int32 m_starid = 10;
  if (has_m_starid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_starid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_funid = 2;
  if (has_m_funid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_funid(), target);
  }

  // optional string m_skillid = 3;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_skillid(), target);
  }

  // optional string m_exskillid = 4;
  if (has_m_exskillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exskillid().data(), this->m_exskillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_exskillid(), target);
  }

  // optional string m_fxid = 5;
  if (has_m_fxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_fxid().data(), this->m_fxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_fxid(), target);
  }

  // optional int32 m_starmax = 6;
  if (has_m_starmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_starmax(), target);
  }

  // optional int32 m_startype = 7;
  if (has_m_startype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_startype(), target);
  }

  // optional int32 m_activationitem = 8;
  if (has_m_activationitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_activationitem(), target);
  }

  // optional int32 m_activationnum = 9;
  if (has_m_activationnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_activationnum(), target);
  }

  // optional int32 m_starid = 10;
  if (has_m_starid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_starid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_funid = 2;
    if (has_m_funid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_funid());
    }

    // optional string m_skillid = 3;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_skillid());
    }

    // optional string m_exskillid = 4;
    if (has_m_exskillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_exskillid());
    }

    // optional string m_fxid = 5;
    if (has_m_fxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_fxid());
    }

    // optional int32 m_starmax = 6;
    if (has_m_starmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starmax());
    }

    // optional int32 m_startype = 7;
    if (has_m_startype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_startype());
    }

    // optional int32 m_activationitem = 8;
    if (has_m_activationitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activationitem());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_activationnum = 9;
    if (has_m_activationnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activationnum());
    }

    // optional int32 m_starid = 10;
    if (has_m_starid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonChange::MergeFrom(const E_DragonChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_funid()) {
      set_m_funid(from.m_funid());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_exskillid()) {
      set_m_exskillid(from.m_exskillid());
    }
    if (from.has_m_fxid()) {
      set_m_fxid(from.m_fxid());
    }
    if (from.has_m_starmax()) {
      set_m_starmax(from.m_starmax());
    }
    if (from.has_m_startype()) {
      set_m_startype(from.m_startype());
    }
    if (from.has_m_activationitem()) {
      set_m_activationitem(from.m_activationitem());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_activationnum()) {
      set_m_activationnum(from.m_activationnum());
    }
    if (from.has_m_starid()) {
      set_m_starid(from.m_starid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonChange::CopyFrom(const E_DragonChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonChange::IsInitialized() const {

  return true;
}

void E_DragonChange::Swap(E_DragonChange* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_funid_, other->m_funid_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_exskillid_, other->m_exskillid_);
    std::swap(m_fxid_, other->m_fxid_);
    std::swap(m_starmax_, other->m_starmax_);
    std::swap(m_startype_, other->m_startype_);
    std::swap(m_activationitem_, other->m_activationitem_);
    std::swap(m_activationnum_, other->m_activationnum_);
    std::swap(m_starid_, other->m_starid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonChange_descriptor_;
  metadata.reflection = E_DragonChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonChange::kEDragonChangeListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonChange::Sheet_DragonChange()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonChange::InitAsDefaultInstance() {
}

Sheet_DragonChange::Sheet_DragonChange(const Sheet_DragonChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonChange::~Sheet_DragonChange() {
  SharedDtor();
}

void Sheet_DragonChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonChange_descriptor_;
}

const Sheet_DragonChange& Sheet_DragonChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

Sheet_DragonChange* Sheet_DragonChange::default_instance_ = NULL;

Sheet_DragonChange* Sheet_DragonChange::New() const {
  return new Sheet_DragonChange;
}

void Sheet_DragonChange::Clear() {
  e_dragonchange_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonChange E_DragonChange_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonChange_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonchange_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonChange_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonChange E_DragonChange_List = 1;
  for (int i = 0; i < this->e_dragonchange_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonchange_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonChange E_DragonChange_List = 1;
  for (int i = 0; i < this->e_dragonchange_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonchange_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonChange::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonChange E_DragonChange_List = 1;
  total_size += 1 * this->e_dragonchange_list_size();
  for (int i = 0; i < this->e_dragonchange_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonchange_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonChange::MergeFrom(const Sheet_DragonChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonchange_list_.MergeFrom(from.e_dragonchange_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonChange::CopyFrom(const Sheet_DragonChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonChange::IsInitialized() const {

  return true;
}

void Sheet_DragonChange::Swap(Sheet_DragonChange* other) {
  if (other != this) {
    e_dragonchange_list_.Swap(&other->e_dragonchange_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonChange_descriptor_;
  metadata.reflection = Sheet_DragonChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonLvvalueAttributeDesc::kMValueFieldNumber;
const int E_DragonLvvalueAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_DragonLvvalueAttributeDesc::E_DragonLvvalueAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonLvvalueAttributeDesc::InitAsDefaultInstance() {
}

E_DragonLvvalueAttributeDesc::E_DragonLvvalueAttributeDesc(const E_DragonLvvalueAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonLvvalueAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonLvvalueAttributeDesc::~E_DragonLvvalueAttributeDesc() {
  SharedDtor();
}

void E_DragonLvvalueAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonLvvalueAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonLvvalueAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonLvvalueAttributeDesc_descriptor_;
}

const E_DragonLvvalueAttributeDesc& E_DragonLvvalueAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

E_DragonLvvalueAttributeDesc* E_DragonLvvalueAttributeDesc::default_instance_ = NULL;

E_DragonLvvalueAttributeDesc* E_DragonLvvalueAttributeDesc::New() const {
  return new E_DragonLvvalueAttributeDesc;
}

void E_DragonLvvalueAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonLvvalueAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonLvvalueAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonLvvalueAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonLvvalueAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonLvvalueAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonLvvalueAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonLvvalueAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonLvvalueAttributeDesc::MergeFrom(const E_DragonLvvalueAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonLvvalueAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonLvvalueAttributeDesc::CopyFrom(const E_DragonLvvalueAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonLvvalueAttributeDesc::IsInitialized() const {

  return true;
}

void E_DragonLvvalueAttributeDesc::Swap(E_DragonLvvalueAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonLvvalueAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonLvvalueAttributeDesc_descriptor_;
  metadata.reflection = E_DragonLvvalueAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonLvvalue::kMLvFieldNumber;
const int E_DragonLvvalue::kMExpFieldNumber;
const int E_DragonLvvalue::kMGoldFieldNumber;
const int E_DragonLvvalue::kMStarlimitFieldNumber;
const int E_DragonLvvalue::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_DragonLvvalue::E_DragonLvvalue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonLvvalue::InitAsDefaultInstance() {
}

E_DragonLvvalue::E_DragonLvvalue(const E_DragonLvvalue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonLvvalue::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_exp_ = 0;
  m_gold_ = 0;
  m_starlimit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonLvvalue::~E_DragonLvvalue() {
  SharedDtor();
}

void E_DragonLvvalue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonLvvalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonLvvalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonLvvalue_descriptor_;
}

const E_DragonLvvalue& E_DragonLvvalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

E_DragonLvvalue* E_DragonLvvalue::default_instance_ = NULL;

E_DragonLvvalue* E_DragonLvvalue::New() const {
  return new E_DragonLvvalue;
}

void E_DragonLvvalue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_exp_ = 0;
    m_gold_ = 0;
    m_starlimit_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonLvvalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_exp;
        break;
      }

      // optional int32 m_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_gold;
        break;
      }

      // optional int32 m_gold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_gold_)));
          set_has_m_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_starlimit;
        break;
      }

      // optional int32 m_starlimit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starlimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starlimit_)));
          set_has_m_starlimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_DragonLvvalueAttributeDesc m_attribute = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonLvvalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_exp(), output);
  }

  // optional int32 m_gold = 3;
  if (has_m_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_gold(), output);
  }

  // optional int32 m_starlimit = 4;
  if (has_m_starlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_starlimit(), output);
  }

  // repeated .proto_ff.E_DragonLvvalueAttributeDesc m_attribute = 5;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonLvvalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_exp(), target);
  }

  // optional int32 m_gold = 3;
  if (has_m_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_gold(), target);
  }

  // optional int32 m_starlimit = 4;
  if (has_m_starlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_starlimit(), target);
  }

  // repeated .proto_ff.E_DragonLvvalueAttributeDesc m_attribute = 5;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonLvvalue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_exp = 2;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

    // optional int32 m_gold = 3;
    if (has_m_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_gold());
    }

    // optional int32 m_starlimit = 4;
    if (has_m_starlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starlimit());
    }

  }
  // repeated .proto_ff.E_DragonLvvalueAttributeDesc m_attribute = 5;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonLvvalue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonLvvalue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonLvvalue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonLvvalue::MergeFrom(const E_DragonLvvalue& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_gold()) {
      set_m_gold(from.m_gold());
    }
    if (from.has_m_starlimit()) {
      set_m_starlimit(from.m_starlimit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonLvvalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonLvvalue::CopyFrom(const E_DragonLvvalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonLvvalue::IsInitialized() const {

  return true;
}

void E_DragonLvvalue::Swap(E_DragonLvvalue* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_gold_, other->m_gold_);
    std::swap(m_starlimit_, other->m_starlimit_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonLvvalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonLvvalue_descriptor_;
  metadata.reflection = E_DragonLvvalue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonLvvalue::kEDragonLvvalueListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonLvvalue::Sheet_DragonLvvalue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonLvvalue::InitAsDefaultInstance() {
}

Sheet_DragonLvvalue::Sheet_DragonLvvalue(const Sheet_DragonLvvalue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonLvvalue::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonLvvalue::~Sheet_DragonLvvalue() {
  SharedDtor();
}

void Sheet_DragonLvvalue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonLvvalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonLvvalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonLvvalue_descriptor_;
}

const Sheet_DragonLvvalue& Sheet_DragonLvvalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

Sheet_DragonLvvalue* Sheet_DragonLvvalue::default_instance_ = NULL;

Sheet_DragonLvvalue* Sheet_DragonLvvalue::New() const {
  return new Sheet_DragonLvvalue;
}

void Sheet_DragonLvvalue::Clear() {
  e_dragonlvvalue_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonLvvalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonLvvalue E_DragonLvvalue_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonLvvalue_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonlvvalue_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonLvvalue_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonLvvalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonLvvalue E_DragonLvvalue_List = 1;
  for (int i = 0; i < this->e_dragonlvvalue_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonlvvalue_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonLvvalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonLvvalue E_DragonLvvalue_List = 1;
  for (int i = 0; i < this->e_dragonlvvalue_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonlvvalue_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonLvvalue::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonLvvalue E_DragonLvvalue_List = 1;
  total_size += 1 * this->e_dragonlvvalue_list_size();
  for (int i = 0; i < this->e_dragonlvvalue_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonlvvalue_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonLvvalue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonLvvalue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonLvvalue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonLvvalue::MergeFrom(const Sheet_DragonLvvalue& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonlvvalue_list_.MergeFrom(from.e_dragonlvvalue_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonLvvalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonLvvalue::CopyFrom(const Sheet_DragonLvvalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonLvvalue::IsInitialized() const {

  return true;
}

void Sheet_DragonLvvalue::Swap(Sheet_DragonLvvalue* other) {
  if (other != this) {
    e_dragonlvvalue_list_.Swap(&other->e_dragonlvvalue_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonLvvalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonLvvalue_descriptor_;
  metadata.reflection = Sheet_DragonLvvalue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonStarvalueAttributeDesc::kMValueFieldNumber;
const int E_DragonStarvalueAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_DragonStarvalueAttributeDesc::E_DragonStarvalueAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonStarvalueAttributeDesc::InitAsDefaultInstance() {
}

E_DragonStarvalueAttributeDesc::E_DragonStarvalueAttributeDesc(const E_DragonStarvalueAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonStarvalueAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonStarvalueAttributeDesc::~E_DragonStarvalueAttributeDesc() {
  SharedDtor();
}

void E_DragonStarvalueAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonStarvalueAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonStarvalueAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonStarvalueAttributeDesc_descriptor_;
}

const E_DragonStarvalueAttributeDesc& E_DragonStarvalueAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

E_DragonStarvalueAttributeDesc* E_DragonStarvalueAttributeDesc::default_instance_ = NULL;

E_DragonStarvalueAttributeDesc* E_DragonStarvalueAttributeDesc::New() const {
  return new E_DragonStarvalueAttributeDesc;
}

void E_DragonStarvalueAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonStarvalueAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonStarvalueAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonStarvalueAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonStarvalueAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonStarvalueAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonStarvalueAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonStarvalueAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonStarvalueAttributeDesc::MergeFrom(const E_DragonStarvalueAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonStarvalueAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonStarvalueAttributeDesc::CopyFrom(const E_DragonStarvalueAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonStarvalueAttributeDesc::IsInitialized() const {

  return true;
}

void E_DragonStarvalueAttributeDesc::Swap(E_DragonStarvalueAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonStarvalueAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonStarvalueAttributeDesc_descriptor_;
  metadata.reflection = E_DragonStarvalueAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonStarvalue::kMIdFieldNumber;
const int E_DragonStarvalue::kMTypeFieldNumber;
const int E_DragonStarvalue::kMStarFieldNumber;
const int E_DragonStarvalue::kMGoldFieldNumber;
const int E_DragonStarvalue::kMStarnumFieldNumber;
const int E_DragonStarvalue::kMSucessFieldNumber;
const int E_DragonStarvalue::kMLuckmaxFieldNumber;
const int E_DragonStarvalue::kMFailluckFieldNumber;
const int E_DragonStarvalue::kMModelFieldNumber;
const int E_DragonStarvalue::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_DragonStarvalue::E_DragonStarvalue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonStarvalue::InitAsDefaultInstance() {
}

E_DragonStarvalue::E_DragonStarvalue(const E_DragonStarvalue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonStarvalue::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_star_ = 0;
  m_gold_ = 0;
  m_starnum_ = 0;
  m_sucess_ = 0;
  m_luckmax_ = 0;
  m_failluck_ = 0;
  m_model_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonStarvalue::~E_DragonStarvalue() {
  SharedDtor();
}

void E_DragonStarvalue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonStarvalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonStarvalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonStarvalue_descriptor_;
}

const E_DragonStarvalue& E_DragonStarvalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

E_DragonStarvalue* E_DragonStarvalue::default_instance_ = NULL;

E_DragonStarvalue* E_DragonStarvalue::New() const {
  return new E_DragonStarvalue;
}

void E_DragonStarvalue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_star_ = 0;
    m_gold_ = 0;
    m_starnum_ = 0;
    m_sucess_ = 0;
    m_luckmax_ = 0;
    m_failluck_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_model_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonStarvalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_gold;
        break;
      }

      // optional int32 m_gold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_gold_)));
          set_has_m_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_starnum;
        break;
      }

      // optional int32 m_starnum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starnum_)));
          set_has_m_starnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_sucess;
        break;
      }

      // optional int32 m_sucess = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_sucess:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_sucess_)));
          set_has_m_sucess();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_luckmax;
        break;
      }

      // optional int32 m_luckmax = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_luckmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_luckmax_)));
          set_has_m_luckmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_failluck;
        break;
      }

      // optional int32 m_failluck = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_failluck:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_failluck_)));
          set_has_m_failluck();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_model;
        break;
      }

      // optional int32 m_model = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_model:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_model_)));
          set_has_m_model();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_DragonStarvalueAttributeDesc m_attribute = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonStarvalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_star = 3;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_star(), output);
  }

  // optional int32 m_gold = 4;
  if (has_m_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_gold(), output);
  }

  // optional int32 m_starnum = 5;
  if (has_m_starnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_starnum(), output);
  }

  // optional int32 m_sucess = 6;
  if (has_m_sucess()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_sucess(), output);
  }

  // optional int32 m_luckmax = 7;
  if (has_m_luckmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_luckmax(), output);
  }

  // optional int32 m_failluck = 8;
  if (has_m_failluck()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_failluck(), output);
  }

  // optional int32 m_model = 9;
  if (has_m_model()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_model(), output);
  }

  // repeated .proto_ff.E_DragonStarvalueAttributeDesc m_attribute = 10;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonStarvalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_star = 3;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_star(), target);
  }

  // optional int32 m_gold = 4;
  if (has_m_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_gold(), target);
  }

  // optional int32 m_starnum = 5;
  if (has_m_starnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_starnum(), target);
  }

  // optional int32 m_sucess = 6;
  if (has_m_sucess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_sucess(), target);
  }

  // optional int32 m_luckmax = 7;
  if (has_m_luckmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_luckmax(), target);
  }

  // optional int32 m_failluck = 8;
  if (has_m_failluck()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_failluck(), target);
  }

  // optional int32 m_model = 9;
  if (has_m_model()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_model(), target);
  }

  // repeated .proto_ff.E_DragonStarvalueAttributeDesc m_attribute = 10;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonStarvalue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_star = 3;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_gold = 4;
    if (has_m_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_gold());
    }

    // optional int32 m_starnum = 5;
    if (has_m_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starnum());
    }

    // optional int32 m_sucess = 6;
    if (has_m_sucess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_sucess());
    }

    // optional int32 m_luckmax = 7;
    if (has_m_luckmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_luckmax());
    }

    // optional int32 m_failluck = 8;
    if (has_m_failluck()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_failluck());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_model = 9;
    if (has_m_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_model());
    }

  }
  // repeated .proto_ff.E_DragonStarvalueAttributeDesc m_attribute = 10;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonStarvalue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonStarvalue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonStarvalue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonStarvalue::MergeFrom(const E_DragonStarvalue& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_gold()) {
      set_m_gold(from.m_gold());
    }
    if (from.has_m_starnum()) {
      set_m_starnum(from.m_starnum());
    }
    if (from.has_m_sucess()) {
      set_m_sucess(from.m_sucess());
    }
    if (from.has_m_luckmax()) {
      set_m_luckmax(from.m_luckmax());
    }
    if (from.has_m_failluck()) {
      set_m_failluck(from.m_failluck());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_model()) {
      set_m_model(from.m_model());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonStarvalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonStarvalue::CopyFrom(const E_DragonStarvalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonStarvalue::IsInitialized() const {

  return true;
}

void E_DragonStarvalue::Swap(E_DragonStarvalue* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_gold_, other->m_gold_);
    std::swap(m_starnum_, other->m_starnum_);
    std::swap(m_sucess_, other->m_sucess_);
    std::swap(m_luckmax_, other->m_luckmax_);
    std::swap(m_failluck_, other->m_failluck_);
    std::swap(m_model_, other->m_model_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonStarvalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonStarvalue_descriptor_;
  metadata.reflection = E_DragonStarvalue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonStarvalue::kEDragonStarvalueListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonStarvalue::Sheet_DragonStarvalue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonStarvalue::InitAsDefaultInstance() {
}

Sheet_DragonStarvalue::Sheet_DragonStarvalue(const Sheet_DragonStarvalue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonStarvalue::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonStarvalue::~Sheet_DragonStarvalue() {
  SharedDtor();
}

void Sheet_DragonStarvalue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonStarvalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonStarvalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonStarvalue_descriptor_;
}

const Sheet_DragonStarvalue& Sheet_DragonStarvalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragon_2eproto();
  return *default_instance_;
}

Sheet_DragonStarvalue* Sheet_DragonStarvalue::default_instance_ = NULL;

Sheet_DragonStarvalue* Sheet_DragonStarvalue::New() const {
  return new Sheet_DragonStarvalue;
}

void Sheet_DragonStarvalue::Clear() {
  e_dragonstarvalue_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonStarvalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonStarvalue E_DragonStarvalue_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonStarvalue_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonstarvalue_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonStarvalue_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonStarvalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonStarvalue E_DragonStarvalue_List = 1;
  for (int i = 0; i < this->e_dragonstarvalue_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonstarvalue_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonStarvalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonStarvalue E_DragonStarvalue_List = 1;
  for (int i = 0; i < this->e_dragonstarvalue_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonstarvalue_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonStarvalue::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonStarvalue E_DragonStarvalue_List = 1;
  total_size += 1 * this->e_dragonstarvalue_list_size();
  for (int i = 0; i < this->e_dragonstarvalue_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonstarvalue_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonStarvalue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonStarvalue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonStarvalue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonStarvalue::MergeFrom(const Sheet_DragonStarvalue& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonstarvalue_list_.MergeFrom(from.e_dragonstarvalue_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonStarvalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonStarvalue::CopyFrom(const Sheet_DragonStarvalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonStarvalue::IsInitialized() const {

  return true;
}

void Sheet_DragonStarvalue::Swap(Sheet_DragonStarvalue* other) {
  if (other != this) {
    e_dragonstarvalue_list_.Swap(&other->e_dragonstarvalue_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonStarvalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonStarvalue_descriptor_;
  metadata.reflection = Sheet_DragonStarvalue_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
