// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: facade.proto

#ifndef PROTOBUF_facade_2eproto__INCLUDED
#define PROTOBUF_facade_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_facade_2eproto();
void protobuf_AssignDesc_facade_2eproto();
void protobuf_ShutdownFile_facade_2eproto();

class facadedisplaymaterialDesc;
class facadedisplay;
class Sheet_facadedisplay;
class facadevaluetreasureAttributeDesc;
class facadevalueArtifactAttributeDesc;
class facadevalueBladeAttributeDesc;
class facadevaluewingAttributeDesc;
class facadevalue;
class Sheet_facadevalue;
class facadetype;
class Sheet_facadetype;
class facadefragmentattributeDesc;
class facadefragment;
class Sheet_facadefragment;
class facadechangeattributeDesc;
class facadechangeActiveAttributeDesc;
class facadechange;
class Sheet_facadechange;
class facadestarUpupAttributeDesc;
class facadestarUp;
class Sheet_facadestarUp;
class facadesoulattributeDesc;
class facadesoul;
class Sheet_facadesoul;
class facadesoulActive;
class Sheet_facadesoulActive;
class facadesoulLvattributeDesc;
class facadesoulLv;
class Sheet_facadesoulLv;
class facadesoulAchievement;
class Sheet_facadesoulAchievement;

// ===================================================================

class facadedisplaymaterialDesc : public ::google::protobuf::Message {
 public:
  facadedisplaymaterialDesc();
  virtual ~facadedisplaymaterialDesc();

  facadedisplaymaterialDesc(const facadedisplaymaterialDesc& from);

  inline facadedisplaymaterialDesc& operator=(const facadedisplaymaterialDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadedisplaymaterialDesc& default_instance();

  void Swap(facadedisplaymaterialDesc* other);

  // implements Message ----------------------------------------------

  facadedisplaymaterialDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadedisplaymaterialDesc& from);
  void MergeFrom(const facadedisplaymaterialDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadedisplaymaterialDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadedisplaymaterialDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadedisplay : public ::google::protobuf::Message {
 public:
  facadedisplay();
  virtual ~facadedisplay();

  facadedisplay(const facadedisplay& from);

  inline facadedisplay& operator=(const facadedisplay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadedisplay& default_instance();

  void Swap(facadedisplay* other);

  // implements Message ----------------------------------------------

  facadedisplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadedisplay& from);
  void MergeFrom(const facadedisplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string resource = 3;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 3;
  inline const ::std::string& resource() const;
  inline void set_resource(const ::std::string& value);
  inline void set_resource(const char* value);
  inline void set_resource(const char* value, size_t size);
  inline ::std::string* mutable_resource();
  inline ::std::string* release_resource();
  inline void set_allocated_resource(::std::string* resource);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string activeDesc = 5;
  inline bool has_activedesc() const;
  inline void clear_activedesc();
  static const int kActiveDescFieldNumber = 5;
  inline const ::std::string& activedesc() const;
  inline void set_activedesc(const ::std::string& value);
  inline void set_activedesc(const char* value);
  inline void set_activedesc(const char* value, size_t size);
  inline ::std::string* mutable_activedesc();
  inline ::std::string* release_activedesc();
  inline void set_allocated_activedesc(::std::string* activedesc);

  // optional string professionID = 6;
  inline bool has_professionid() const;
  inline void clear_professionid();
  static const int kProfessionIDFieldNumber = 6;
  inline const ::std::string& professionid() const;
  inline void set_professionid(const ::std::string& value);
  inline void set_professionid(const char* value);
  inline void set_professionid(const char* value, size_t size);
  inline ::std::string* mutable_professionid();
  inline ::std::string* release_professionid();
  inline void set_allocated_professionid(::std::string* professionid);

  // optional string skillID = 7;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 7;
  inline const ::std::string& skillid() const;
  inline void set_skillid(const ::std::string& value);
  inline void set_skillid(const char* value);
  inline void set_skillid(const char* value, size_t size);
  inline ::std::string* mutable_skillid();
  inline ::std::string* release_skillid();
  inline void set_allocated_skillid(::std::string* skillid);

  // optional int32 soulItemID = 8;
  inline bool has_soulitemid() const;
  inline void clear_soulitemid();
  static const int kSoulItemIDFieldNumber = 8;
  inline ::google::protobuf::int32 soulitemid() const;
  inline void set_soulitemid(::google::protobuf::int32 value);

  // repeated .proto_ff.facadedisplaymaterialDesc material = 9;
  inline int material_size() const;
  inline void clear_material();
  static const int kMaterialFieldNumber = 9;
  inline const ::proto_ff::facadedisplaymaterialDesc& material(int index) const;
  inline ::proto_ff::facadedisplaymaterialDesc* mutable_material(int index);
  inline ::proto_ff::facadedisplaymaterialDesc* add_material();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadedisplaymaterialDesc >&
      material() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadedisplaymaterialDesc >*
      mutable_material();

  // repeated int64 fragmentID = 10;
  inline int fragmentid_size() const;
  inline void clear_fragmentid();
  static const int kFragmentIDFieldNumber = 10;
  inline ::google::protobuf::int64 fragmentid(int index) const;
  inline void set_fragmentid(int index, ::google::protobuf::int64 value);
  inline void add_fragmentid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      fragmentid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_fragmentid();

  // @@protoc_insertion_point(class_scope:proto_ff.facadedisplay)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_resource();
  inline void clear_has_resource();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_activedesc();
  inline void clear_has_activedesc();
  inline void set_has_professionid();
  inline void clear_has_professionid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_soulitemid();
  inline void clear_has_soulitemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* resource_;
  ::std::string* name_;
  ::std::string* activedesc_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 soulitemid_;
  ::std::string* professionid_;
  ::std::string* skillid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadedisplaymaterialDesc > material_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > fragmentid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadedisplay* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_facadedisplay : public ::google::protobuf::Message {
 public:
  Sheet_facadedisplay();
  virtual ~Sheet_facadedisplay();

  Sheet_facadedisplay(const Sheet_facadedisplay& from);

  inline Sheet_facadedisplay& operator=(const Sheet_facadedisplay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_facadedisplay& default_instance();

  void Swap(Sheet_facadedisplay* other);

  // implements Message ----------------------------------------------

  Sheet_facadedisplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_facadedisplay& from);
  void MergeFrom(const Sheet_facadedisplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.facadedisplay facadedisplay_List = 1;
  inline int facadedisplay_list_size() const;
  inline void clear_facadedisplay_list();
  static const int kFacadedisplayListFieldNumber = 1;
  inline const ::proto_ff::facadedisplay& facadedisplay_list(int index) const;
  inline ::proto_ff::facadedisplay* mutable_facadedisplay_list(int index);
  inline ::proto_ff::facadedisplay* add_facadedisplay_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadedisplay >&
      facadedisplay_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadedisplay >*
      mutable_facadedisplay_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_facadedisplay)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadedisplay > facadedisplay_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_facadedisplay* default_instance_;
};
// -------------------------------------------------------------------

class facadevaluetreasureAttributeDesc : public ::google::protobuf::Message {
 public:
  facadevaluetreasureAttributeDesc();
  virtual ~facadevaluetreasureAttributeDesc();

  facadevaluetreasureAttributeDesc(const facadevaluetreasureAttributeDesc& from);

  inline facadevaluetreasureAttributeDesc& operator=(const facadevaluetreasureAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadevaluetreasureAttributeDesc& default_instance();

  void Swap(facadevaluetreasureAttributeDesc* other);

  // implements Message ----------------------------------------------

  facadevaluetreasureAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadevaluetreasureAttributeDesc& from);
  void MergeFrom(const facadevaluetreasureAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadevaluetreasureAttributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadevaluetreasureAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadevalueArtifactAttributeDesc : public ::google::protobuf::Message {
 public:
  facadevalueArtifactAttributeDesc();
  virtual ~facadevalueArtifactAttributeDesc();

  facadevalueArtifactAttributeDesc(const facadevalueArtifactAttributeDesc& from);

  inline facadevalueArtifactAttributeDesc& operator=(const facadevalueArtifactAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadevalueArtifactAttributeDesc& default_instance();

  void Swap(facadevalueArtifactAttributeDesc* other);

  // implements Message ----------------------------------------------

  facadevalueArtifactAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadevalueArtifactAttributeDesc& from);
  void MergeFrom(const facadevalueArtifactAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadevalueArtifactAttributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadevalueArtifactAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadevalueBladeAttributeDesc : public ::google::protobuf::Message {
 public:
  facadevalueBladeAttributeDesc();
  virtual ~facadevalueBladeAttributeDesc();

  facadevalueBladeAttributeDesc(const facadevalueBladeAttributeDesc& from);

  inline facadevalueBladeAttributeDesc& operator=(const facadevalueBladeAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadevalueBladeAttributeDesc& default_instance();

  void Swap(facadevalueBladeAttributeDesc* other);

  // implements Message ----------------------------------------------

  facadevalueBladeAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadevalueBladeAttributeDesc& from);
  void MergeFrom(const facadevalueBladeAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadevalueBladeAttributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadevalueBladeAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadevaluewingAttributeDesc : public ::google::protobuf::Message {
 public:
  facadevaluewingAttributeDesc();
  virtual ~facadevaluewingAttributeDesc();

  facadevaluewingAttributeDesc(const facadevaluewingAttributeDesc& from);

  inline facadevaluewingAttributeDesc& operator=(const facadevaluewingAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadevaluewingAttributeDesc& default_instance();

  void Swap(facadevaluewingAttributeDesc* other);

  // implements Message ----------------------------------------------

  facadevaluewingAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadevaluewingAttributeDesc& from);
  void MergeFrom(const facadevaluewingAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadevaluewingAttributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadevaluewingAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadevalue : public ::google::protobuf::Message {
 public:
  facadevalue();
  virtual ~facadevalue();

  facadevalue(const facadevalue& from);

  inline facadevalue& operator=(const facadevalue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadevalue& default_instance();

  void Swap(facadevalue* other);

  // implements Message ----------------------------------------------

  facadevalue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadevalue& from);
  void MergeFrom(const facadevalue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int64 wingExp = 2;
  inline bool has_wingexp() const;
  inline void clear_wingexp();
  static const int kWingExpFieldNumber = 2;
  inline ::google::protobuf::int64 wingexp() const;
  inline void set_wingexp(::google::protobuf::int64 value);

  // optional int64 treasureExp = 3;
  inline bool has_treasureexp() const;
  inline void clear_treasureexp();
  static const int kTreasureExpFieldNumber = 3;
  inline ::google::protobuf::int64 treasureexp() const;
  inline void set_treasureexp(::google::protobuf::int64 value);

  // optional int64 ArtifactExp = 4;
  inline bool has_artifactexp() const;
  inline void clear_artifactexp();
  static const int kArtifactExpFieldNumber = 4;
  inline ::google::protobuf::int64 artifactexp() const;
  inline void set_artifactexp(::google::protobuf::int64 value);

  // optional int64 BladeExp = 5;
  inline bool has_bladeexp() const;
  inline void clear_bladeexp();
  static const int kBladeExpFieldNumber = 5;
  inline ::google::protobuf::int64 bladeexp() const;
  inline void set_bladeexp(::google::protobuf::int64 value);

  // repeated .proto_ff.facadevaluetreasureAttributeDesc treasureAttribute = 6;
  inline int treasureattribute_size() const;
  inline void clear_treasureattribute();
  static const int kTreasureAttributeFieldNumber = 6;
  inline const ::proto_ff::facadevaluetreasureAttributeDesc& treasureattribute(int index) const;
  inline ::proto_ff::facadevaluetreasureAttributeDesc* mutable_treasureattribute(int index);
  inline ::proto_ff::facadevaluetreasureAttributeDesc* add_treasureattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevaluetreasureAttributeDesc >&
      treasureattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevaluetreasureAttributeDesc >*
      mutable_treasureattribute();

  // repeated .proto_ff.facadevalueArtifactAttributeDesc ArtifactAttribute = 7;
  inline int artifactattribute_size() const;
  inline void clear_artifactattribute();
  static const int kArtifactAttributeFieldNumber = 7;
  inline const ::proto_ff::facadevalueArtifactAttributeDesc& artifactattribute(int index) const;
  inline ::proto_ff::facadevalueArtifactAttributeDesc* mutable_artifactattribute(int index);
  inline ::proto_ff::facadevalueArtifactAttributeDesc* add_artifactattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalueArtifactAttributeDesc >&
      artifactattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalueArtifactAttributeDesc >*
      mutable_artifactattribute();

  // repeated .proto_ff.facadevalueBladeAttributeDesc BladeAttribute = 8;
  inline int bladeattribute_size() const;
  inline void clear_bladeattribute();
  static const int kBladeAttributeFieldNumber = 8;
  inline const ::proto_ff::facadevalueBladeAttributeDesc& bladeattribute(int index) const;
  inline ::proto_ff::facadevalueBladeAttributeDesc* mutable_bladeattribute(int index);
  inline ::proto_ff::facadevalueBladeAttributeDesc* add_bladeattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalueBladeAttributeDesc >&
      bladeattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalueBladeAttributeDesc >*
      mutable_bladeattribute();

  // repeated .proto_ff.facadevaluewingAttributeDesc wingAttribute = 9;
  inline int wingattribute_size() const;
  inline void clear_wingattribute();
  static const int kWingAttributeFieldNumber = 9;
  inline const ::proto_ff::facadevaluewingAttributeDesc& wingattribute(int index) const;
  inline ::proto_ff::facadevaluewingAttributeDesc* mutable_wingattribute(int index);
  inline ::proto_ff::facadevaluewingAttributeDesc* add_wingattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevaluewingAttributeDesc >&
      wingattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevaluewingAttributeDesc >*
      mutable_wingattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.facadevalue)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_wingexp();
  inline void clear_has_wingexp();
  inline void set_has_treasureexp();
  inline void clear_has_treasureexp();
  inline void set_has_artifactexp();
  inline void clear_has_artifactexp();
  inline void set_has_bladeexp();
  inline void clear_has_bladeexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 wingexp_;
  ::google::protobuf::int64 treasureexp_;
  ::google::protobuf::int64 artifactexp_;
  ::google::protobuf::int64 bladeexp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevaluetreasureAttributeDesc > treasureattribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalueArtifactAttributeDesc > artifactattribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalueBladeAttributeDesc > bladeattribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevaluewingAttributeDesc > wingattribute_;
  ::google::protobuf::int32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadevalue* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_facadevalue : public ::google::protobuf::Message {
 public:
  Sheet_facadevalue();
  virtual ~Sheet_facadevalue();

  Sheet_facadevalue(const Sheet_facadevalue& from);

  inline Sheet_facadevalue& operator=(const Sheet_facadevalue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_facadevalue& default_instance();

  void Swap(Sheet_facadevalue* other);

  // implements Message ----------------------------------------------

  Sheet_facadevalue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_facadevalue& from);
  void MergeFrom(const Sheet_facadevalue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.facadevalue facadevalue_List = 1;
  inline int facadevalue_list_size() const;
  inline void clear_facadevalue_list();
  static const int kFacadevalueListFieldNumber = 1;
  inline const ::proto_ff::facadevalue& facadevalue_list(int index) const;
  inline ::proto_ff::facadevalue* mutable_facadevalue_list(int index);
  inline ::proto_ff::facadevalue* add_facadevalue_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalue >&
      facadevalue_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalue >*
      mutable_facadevalue_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_facadevalue)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalue > facadevalue_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_facadevalue* default_instance_;
};
// -------------------------------------------------------------------

class facadetype : public ::google::protobuf::Message {
 public:
  facadetype();
  virtual ~facadetype();

  facadetype(const facadetype& from);

  inline facadetype& operator=(const facadetype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadetype& default_instance();

  void Swap(facadetype* other);

  // implements Message ----------------------------------------------

  facadetype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadetype& from);
  void MergeFrom(const facadetype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string souceName = 2;
  inline bool has_soucename() const;
  inline void clear_soucename();
  static const int kSouceNameFieldNumber = 2;
  inline const ::std::string& soucename() const;
  inline void set_soucename(const ::std::string& value);
  inline void set_soucename(const char* value);
  inline void set_soucename(const char* value, size_t size);
  inline ::std::string* mutable_soucename();
  inline ::std::string* release_soucename();
  inline void set_allocated_soucename(::std::string* soucename);

  // @@protoc_insertion_point(class_scope:proto_ff.facadetype)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_soucename();
  inline void clear_has_soucename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* soucename_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadetype* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_facadetype : public ::google::protobuf::Message {
 public:
  Sheet_facadetype();
  virtual ~Sheet_facadetype();

  Sheet_facadetype(const Sheet_facadetype& from);

  inline Sheet_facadetype& operator=(const Sheet_facadetype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_facadetype& default_instance();

  void Swap(Sheet_facadetype* other);

  // implements Message ----------------------------------------------

  Sheet_facadetype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_facadetype& from);
  void MergeFrom(const Sheet_facadetype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.facadetype facadetype_List = 1;
  inline int facadetype_list_size() const;
  inline void clear_facadetype_list();
  static const int kFacadetypeListFieldNumber = 1;
  inline const ::proto_ff::facadetype& facadetype_list(int index) const;
  inline ::proto_ff::facadetype* mutable_facadetype_list(int index);
  inline ::proto_ff::facadetype* add_facadetype_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadetype >&
      facadetype_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadetype >*
      mutable_facadetype_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_facadetype)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadetype > facadetype_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_facadetype* default_instance_;
};
// -------------------------------------------------------------------

class facadefragmentattributeDesc : public ::google::protobuf::Message {
 public:
  facadefragmentattributeDesc();
  virtual ~facadefragmentattributeDesc();

  facadefragmentattributeDesc(const facadefragmentattributeDesc& from);

  inline facadefragmentattributeDesc& operator=(const facadefragmentattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadefragmentattributeDesc& default_instance();

  void Swap(facadefragmentattributeDesc* other);

  // implements Message ----------------------------------------------

  facadefragmentattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadefragmentattributeDesc& from);
  void MergeFrom(const facadefragmentattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadefragmentattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadefragmentattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadefragment : public ::google::protobuf::Message {
 public:
  facadefragment();
  virtual ~facadefragment();

  facadefragment(const facadefragment& from);

  inline facadefragment& operator=(const facadefragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadefragment& default_instance();

  void Swap(facadefragment* other);

  // implements Message ----------------------------------------------

  facadefragment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadefragment& from);
  void MergeFrom(const facadefragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 fragmentID = 1;
  inline bool has_fragmentid() const;
  inline void clear_fragmentid();
  static const int kFragmentIDFieldNumber = 1;
  inline ::google::protobuf::int64 fragmentid() const;
  inline void set_fragmentid(::google::protobuf::int64 value);

  // optional int64 item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline ::google::protobuf::int64 item() const;
  inline void set_item(::google::protobuf::int64 value);

  // optional int32 itemNum = 3;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // repeated .proto_ff.facadefragmentattributeDesc attribute = 4;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 4;
  inline const ::proto_ff::facadefragmentattributeDesc& attribute(int index) const;
  inline ::proto_ff::facadefragmentattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::facadefragmentattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadefragmentattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadefragmentattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.facadefragment)
 private:
  inline void set_has_fragmentid();
  inline void clear_has_fragmentid();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 fragmentid_;
  ::google::protobuf::int64 item_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadefragmentattributeDesc > attribute_;
  ::google::protobuf::int32 itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadefragment* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_facadefragment : public ::google::protobuf::Message {
 public:
  Sheet_facadefragment();
  virtual ~Sheet_facadefragment();

  Sheet_facadefragment(const Sheet_facadefragment& from);

  inline Sheet_facadefragment& operator=(const Sheet_facadefragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_facadefragment& default_instance();

  void Swap(Sheet_facadefragment* other);

  // implements Message ----------------------------------------------

  Sheet_facadefragment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_facadefragment& from);
  void MergeFrom(const Sheet_facadefragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.facadefragment facadefragment_List = 1;
  inline int facadefragment_list_size() const;
  inline void clear_facadefragment_list();
  static const int kFacadefragmentListFieldNumber = 1;
  inline const ::proto_ff::facadefragment& facadefragment_list(int index) const;
  inline ::proto_ff::facadefragment* mutable_facadefragment_list(int index);
  inline ::proto_ff::facadefragment* add_facadefragment_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadefragment >&
      facadefragment_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadefragment >*
      mutable_facadefragment_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_facadefragment)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadefragment > facadefragment_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_facadefragment* default_instance_;
};
// -------------------------------------------------------------------

class facadechangeattributeDesc : public ::google::protobuf::Message {
 public:
  facadechangeattributeDesc();
  virtual ~facadechangeattributeDesc();

  facadechangeattributeDesc(const facadechangeattributeDesc& from);

  inline facadechangeattributeDesc& operator=(const facadechangeattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadechangeattributeDesc& default_instance();

  void Swap(facadechangeattributeDesc* other);

  // implements Message ----------------------------------------------

  facadechangeattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadechangeattributeDesc& from);
  void MergeFrom(const facadechangeattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadechangeattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadechangeattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadechangeActiveAttributeDesc : public ::google::protobuf::Message {
 public:
  facadechangeActiveAttributeDesc();
  virtual ~facadechangeActiveAttributeDesc();

  facadechangeActiveAttributeDesc(const facadechangeActiveAttributeDesc& from);

  inline facadechangeActiveAttributeDesc& operator=(const facadechangeActiveAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadechangeActiveAttributeDesc& default_instance();

  void Swap(facadechangeActiveAttributeDesc* other);

  // implements Message ----------------------------------------------

  facadechangeActiveAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadechangeActiveAttributeDesc& from);
  void MergeFrom(const facadechangeActiveAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadechangeActiveAttributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadechangeActiveAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadechange : public ::google::protobuf::Message {
 public:
  facadechange();
  virtual ~facadechange();

  facadechange(const facadechange& from);

  inline facadechange& operator=(const facadechange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadechange& default_instance();

  void Swap(facadechange* other);

  // implements Message ----------------------------------------------

  facadechange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadechange& from);
  void MergeFrom(const facadechange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string resource = 3;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 3;
  inline const ::std::string& resource() const;
  inline void set_resource(const ::std::string& value);
  inline void set_resource(const char* value);
  inline void set_resource(const char* value, size_t size);
  inline ::std::string* mutable_resource();
  inline ::std::string* release_resource();
  inline void set_allocated_resource(::std::string* resource);

  // optional string professionID = 4;
  inline bool has_professionid() const;
  inline void clear_professionid();
  static const int kProfessionIDFieldNumber = 4;
  inline const ::std::string& professionid() const;
  inline void set_professionid(const ::std::string& value);
  inline void set_professionid(const char* value);
  inline void set_professionid(const char* value, size_t size);
  inline ::std::string* mutable_professionid();
  inline ::std::string* release_professionid();
  inline void set_allocated_professionid(::std::string* professionid);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string activeDesc = 6;
  inline bool has_activedesc() const;
  inline void clear_activedesc();
  static const int kActiveDescFieldNumber = 6;
  inline const ::std::string& activedesc() const;
  inline void set_activedesc(const ::std::string& value);
  inline void set_activedesc(const char* value);
  inline void set_activedesc(const char* value, size_t size);
  inline ::std::string* mutable_activedesc();
  inline ::std::string* release_activedesc();
  inline void set_allocated_activedesc(::std::string* activedesc);

  // optional int32 quality = 7;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 7;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int64 activationItem = 8;
  inline bool has_activationitem() const;
  inline void clear_activationitem();
  static const int kActivationItemFieldNumber = 8;
  inline ::google::protobuf::int64 activationitem() const;
  inline void set_activationitem(::google::protobuf::int64 value);

  // optional int32 activationNum = 9;
  inline bool has_activationnum() const;
  inline void clear_activationnum();
  static const int kActivationNumFieldNumber = 9;
  inline ::google::protobuf::int32 activationnum() const;
  inline void set_activationnum(::google::protobuf::int32 value);

  // optional int64 starId = 10;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIdFieldNumber = 10;
  inline ::google::protobuf::int64 starid() const;
  inline void set_starid(::google::protobuf::int64 value);

  // optional string starNum = 11;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 11;
  inline const ::std::string& starnum() const;
  inline void set_starnum(const ::std::string& value);
  inline void set_starnum(const char* value);
  inline void set_starnum(const char* value, size_t size);
  inline ::std::string* mutable_starnum();
  inline ::std::string* release_starnum();
  inline void set_allocated_starnum(::std::string* starnum);

  // optional int32 starUp = 12;
  inline bool has_starup() const;
  inline void clear_starup();
  static const int kStarUpFieldNumber = 12;
  inline ::google::protobuf::int32 starup() const;
  inline void set_starup(::google::protobuf::int32 value);

  // optional int32 starBer = 13;
  inline bool has_starber() const;
  inline void clear_starber();
  static const int kStarBerFieldNumber = 13;
  inline ::google::protobuf::int32 starber() const;
  inline void set_starber(::google::protobuf::int32 value);

  // optional int64 upAttributeId = 14;
  inline bool has_upattributeid() const;
  inline void clear_upattributeid();
  static const int kUpAttributeIdFieldNumber = 14;
  inline ::google::protobuf::int64 upattributeid() const;
  inline void set_upattributeid(::google::protobuf::int64 value);

  // optional int32 activeSkill = 15;
  inline bool has_activeskill() const;
  inline void clear_activeskill();
  static const int kActiveSkillFieldNumber = 15;
  inline ::google::protobuf::int32 activeskill() const;
  inline void set_activeskill(::google::protobuf::int32 value);

  // repeated .proto_ff.facadechangeattributeDesc attribute = 16;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 16;
  inline const ::proto_ff::facadechangeattributeDesc& attribute(int index) const;
  inline ::proto_ff::facadechangeattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::facadechangeattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechangeattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechangeattributeDesc >*
      mutable_attribute();

  // repeated .proto_ff.facadechangeActiveAttributeDesc ActiveAttribute = 17;
  inline int activeattribute_size() const;
  inline void clear_activeattribute();
  static const int kActiveAttributeFieldNumber = 17;
  inline const ::proto_ff::facadechangeActiveAttributeDesc& activeattribute(int index) const;
  inline ::proto_ff::facadechangeActiveAttributeDesc* mutable_activeattribute(int index);
  inline ::proto_ff::facadechangeActiveAttributeDesc* add_activeattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechangeActiveAttributeDesc >&
      activeattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechangeActiveAttributeDesc >*
      mutable_activeattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.facadechange)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_resource();
  inline void clear_has_resource();
  inline void set_has_professionid();
  inline void clear_has_professionid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_activedesc();
  inline void clear_has_activedesc();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_activationitem();
  inline void clear_has_activationitem();
  inline void set_has_activationnum();
  inline void clear_has_activationnum();
  inline void set_has_starid();
  inline void clear_has_starid();
  inline void set_has_starnum();
  inline void clear_has_starnum();
  inline void set_has_starup();
  inline void clear_has_starup();
  inline void set_has_starber();
  inline void clear_has_starber();
  inline void set_has_upattributeid();
  inline void clear_has_upattributeid();
  inline void set_has_activeskill();
  inline void clear_has_activeskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* resource_;
  ::std::string* professionid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 quality_;
  ::std::string* name_;
  ::std::string* activedesc_;
  ::google::protobuf::int64 activationitem_;
  ::google::protobuf::int64 starid_;
  ::google::protobuf::int32 activationnum_;
  ::google::protobuf::int32 starup_;
  ::std::string* starnum_;
  ::google::protobuf::int64 upattributeid_;
  ::google::protobuf::int32 starber_;
  ::google::protobuf::int32 activeskill_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechangeattributeDesc > attribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechangeActiveAttributeDesc > activeattribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadechange* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_facadechange : public ::google::protobuf::Message {
 public:
  Sheet_facadechange();
  virtual ~Sheet_facadechange();

  Sheet_facadechange(const Sheet_facadechange& from);

  inline Sheet_facadechange& operator=(const Sheet_facadechange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_facadechange& default_instance();

  void Swap(Sheet_facadechange* other);

  // implements Message ----------------------------------------------

  Sheet_facadechange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_facadechange& from);
  void MergeFrom(const Sheet_facadechange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.facadechange facadechange_List = 1;
  inline int facadechange_list_size() const;
  inline void clear_facadechange_list();
  static const int kFacadechangeListFieldNumber = 1;
  inline const ::proto_ff::facadechange& facadechange_list(int index) const;
  inline ::proto_ff::facadechange* mutable_facadechange_list(int index);
  inline ::proto_ff::facadechange* add_facadechange_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechange >&
      facadechange_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechange >*
      mutable_facadechange_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_facadechange)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechange > facadechange_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_facadechange* default_instance_;
};
// -------------------------------------------------------------------

class facadestarUpupAttributeDesc : public ::google::protobuf::Message {
 public:
  facadestarUpupAttributeDesc();
  virtual ~facadestarUpupAttributeDesc();

  facadestarUpupAttributeDesc(const facadestarUpupAttributeDesc& from);

  inline facadestarUpupAttributeDesc& operator=(const facadestarUpupAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadestarUpupAttributeDesc& default_instance();

  void Swap(facadestarUpupAttributeDesc* other);

  // implements Message ----------------------------------------------

  facadestarUpupAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadestarUpupAttributeDesc& from);
  void MergeFrom(const facadestarUpupAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadestarUpupAttributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadestarUpupAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadestarUp : public ::google::protobuf::Message {
 public:
  facadestarUp();
  virtual ~facadestarUp();

  facadestarUp(const facadestarUp& from);

  inline facadestarUp& operator=(const facadestarUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadestarUp& default_instance();

  void Swap(facadestarUp* other);

  // implements Message ----------------------------------------------

  facadestarUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadestarUp& from);
  void MergeFrom(const facadestarUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 upAttributeId = 2;
  inline bool has_upattributeid() const;
  inline void clear_upattributeid();
  static const int kUpAttributeIdFieldNumber = 2;
  inline ::google::protobuf::int64 upattributeid() const;
  inline void set_upattributeid(::google::protobuf::int64 value);

  // optional int32 starID = 3;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIDFieldNumber = 3;
  inline ::google::protobuf::int32 starid() const;
  inline void set_starid(::google::protobuf::int32 value);

  // optional int32 skillID = 4;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 4;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // repeated .proto_ff.facadestarUpupAttributeDesc upAttribute = 5;
  inline int upattribute_size() const;
  inline void clear_upattribute();
  static const int kUpAttributeFieldNumber = 5;
  inline const ::proto_ff::facadestarUpupAttributeDesc& upattribute(int index) const;
  inline ::proto_ff::facadestarUpupAttributeDesc* mutable_upattribute(int index);
  inline ::proto_ff::facadestarUpupAttributeDesc* add_upattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadestarUpupAttributeDesc >&
      upattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadestarUpupAttributeDesc >*
      mutable_upattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.facadestarUp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_upattributeid();
  inline void clear_has_upattributeid();
  inline void set_has_starid();
  inline void clear_has_starid();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 upattributeid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 starid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadestarUpupAttributeDesc > upattribute_;
  ::google::protobuf::int32 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadestarUp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_facadestarUp : public ::google::protobuf::Message {
 public:
  Sheet_facadestarUp();
  virtual ~Sheet_facadestarUp();

  Sheet_facadestarUp(const Sheet_facadestarUp& from);

  inline Sheet_facadestarUp& operator=(const Sheet_facadestarUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_facadestarUp& default_instance();

  void Swap(Sheet_facadestarUp* other);

  // implements Message ----------------------------------------------

  Sheet_facadestarUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_facadestarUp& from);
  void MergeFrom(const Sheet_facadestarUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.facadestarUp facadestarUp_List = 1;
  inline int facadestarup_list_size() const;
  inline void clear_facadestarup_list();
  static const int kFacadestarUpListFieldNumber = 1;
  inline const ::proto_ff::facadestarUp& facadestarup_list(int index) const;
  inline ::proto_ff::facadestarUp* mutable_facadestarup_list(int index);
  inline ::proto_ff::facadestarUp* add_facadestarup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadestarUp >&
      facadestarup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadestarUp >*
      mutable_facadestarup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_facadestarUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadestarUp > facadestarup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_facadestarUp* default_instance_;
};
// -------------------------------------------------------------------

class facadesoulattributeDesc : public ::google::protobuf::Message {
 public:
  facadesoulattributeDesc();
  virtual ~facadesoulattributeDesc();

  facadesoulattributeDesc(const facadesoulattributeDesc& from);

  inline facadesoulattributeDesc& operator=(const facadesoulattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadesoulattributeDesc& default_instance();

  void Swap(facadesoulattributeDesc* other);

  // implements Message ----------------------------------------------

  facadesoulattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadesoulattributeDesc& from);
  void MergeFrom(const facadesoulattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadesoulattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadesoulattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadesoul : public ::google::protobuf::Message {
 public:
  facadesoul();
  virtual ~facadesoul();

  facadesoul(const facadesoul& from);

  inline facadesoul& operator=(const facadesoul& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadesoul& default_instance();

  void Swap(facadesoul* other);

  // implements Message ----------------------------------------------

  facadesoul* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadesoul& from);
  void MergeFrom(const facadesoul& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 rechargeID = 2;
  inline bool has_rechargeid() const;
  inline void clear_rechargeid();
  static const int kRechargeIDFieldNumber = 2;
  inline ::google::protobuf::int32 rechargeid() const;
  inline void set_rechargeid(::google::protobuf::int32 value);

  // optional int32 mainSkill = 3;
  inline bool has_mainskill() const;
  inline void clear_mainskill();
  static const int kMainSkillFieldNumber = 3;
  inline ::google::protobuf::int32 mainskill() const;
  inline void set_mainskill(::google::protobuf::int32 value);

  // repeated .proto_ff.facadesoulattributeDesc attribute = 4;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 4;
  inline const ::proto_ff::facadesoulattributeDesc& attribute(int index) const;
  inline ::proto_ff::facadesoulattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::facadesoulattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulattributeDesc >*
      mutable_attribute();

  // repeated int32 minorSkill = 5;
  inline int minorskill_size() const;
  inline void clear_minorskill();
  static const int kMinorSkillFieldNumber = 5;
  inline ::google::protobuf::int32 minorskill(int index) const;
  inline void set_minorskill(int index, ::google::protobuf::int32 value);
  inline void add_minorskill(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      minorskill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_minorskill();

  // @@protoc_insertion_point(class_scope:proto_ff.facadesoul)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rechargeid();
  inline void clear_has_rechargeid();
  inline void set_has_mainskill();
  inline void clear_has_mainskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 rechargeid_;
  ::google::protobuf::int32 mainskill_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulattributeDesc > attribute_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > minorskill_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadesoul* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_facadesoul : public ::google::protobuf::Message {
 public:
  Sheet_facadesoul();
  virtual ~Sheet_facadesoul();

  Sheet_facadesoul(const Sheet_facadesoul& from);

  inline Sheet_facadesoul& operator=(const Sheet_facadesoul& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_facadesoul& default_instance();

  void Swap(Sheet_facadesoul* other);

  // implements Message ----------------------------------------------

  Sheet_facadesoul* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_facadesoul& from);
  void MergeFrom(const Sheet_facadesoul& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.facadesoul facadesoul_List = 1;
  inline int facadesoul_list_size() const;
  inline void clear_facadesoul_list();
  static const int kFacadesoulListFieldNumber = 1;
  inline const ::proto_ff::facadesoul& facadesoul_list(int index) const;
  inline ::proto_ff::facadesoul* mutable_facadesoul_list(int index);
  inline ::proto_ff::facadesoul* add_facadesoul_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoul >&
      facadesoul_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoul >*
      mutable_facadesoul_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_facadesoul)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoul > facadesoul_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_facadesoul* default_instance_;
};
// -------------------------------------------------------------------

class facadesoulActive : public ::google::protobuf::Message {
 public:
  facadesoulActive();
  virtual ~facadesoulActive();

  facadesoulActive(const facadesoulActive& from);

  inline facadesoulActive& operator=(const facadesoulActive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadesoulActive& default_instance();

  void Swap(facadesoulActive* other);

  // implements Message ----------------------------------------------

  facadesoulActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadesoulActive& from);
  void MergeFrom(const facadesoulActive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated string parama = 2;
  inline int parama_size() const;
  inline void clear_parama();
  static const int kParamaFieldNumber = 2;
  inline const ::std::string& parama(int index) const;
  inline ::std::string* mutable_parama(int index);
  inline void set_parama(int index, const ::std::string& value);
  inline void set_parama(int index, const char* value);
  inline void set_parama(int index, const char* value, size_t size);
  inline ::std::string* add_parama();
  inline void add_parama(const ::std::string& value);
  inline void add_parama(const char* value);
  inline void add_parama(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& parama() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_parama();

  // repeated int32 condition = 3;
  inline int condition_size() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 3;
  inline ::google::protobuf::int32 condition(int index) const;
  inline void set_condition(int index, ::google::protobuf::int32 value);
  inline void add_condition(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      condition() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_condition();

  // @@protoc_insertion_point(class_scope:proto_ff.facadesoulActive)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> parama_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > condition_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadesoulActive* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_facadesoulActive : public ::google::protobuf::Message {
 public:
  Sheet_facadesoulActive();
  virtual ~Sheet_facadesoulActive();

  Sheet_facadesoulActive(const Sheet_facadesoulActive& from);

  inline Sheet_facadesoulActive& operator=(const Sheet_facadesoulActive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_facadesoulActive& default_instance();

  void Swap(Sheet_facadesoulActive* other);

  // implements Message ----------------------------------------------

  Sheet_facadesoulActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_facadesoulActive& from);
  void MergeFrom(const Sheet_facadesoulActive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.facadesoulActive facadesoulActive_List = 1;
  inline int facadesoulactive_list_size() const;
  inline void clear_facadesoulactive_list();
  static const int kFacadesoulActiveListFieldNumber = 1;
  inline const ::proto_ff::facadesoulActive& facadesoulactive_list(int index) const;
  inline ::proto_ff::facadesoulActive* mutable_facadesoulactive_list(int index);
  inline ::proto_ff::facadesoulActive* add_facadesoulactive_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulActive >&
      facadesoulactive_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulActive >*
      mutable_facadesoulactive_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_facadesoulActive)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulActive > facadesoulactive_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_facadesoulActive* default_instance_;
};
// -------------------------------------------------------------------

class facadesoulLvattributeDesc : public ::google::protobuf::Message {
 public:
  facadesoulLvattributeDesc();
  virtual ~facadesoulLvattributeDesc();

  facadesoulLvattributeDesc(const facadesoulLvattributeDesc& from);

  inline facadesoulLvattributeDesc& operator=(const facadesoulLvattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadesoulLvattributeDesc& default_instance();

  void Swap(facadesoulLvattributeDesc* other);

  // implements Message ----------------------------------------------

  facadesoulLvattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadesoulLvattributeDesc& from);
  void MergeFrom(const facadesoulLvattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadesoulLvattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadesoulLvattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class facadesoulLv : public ::google::protobuf::Message {
 public:
  facadesoulLv();
  virtual ~facadesoulLv();

  facadesoulLv(const facadesoulLv& from);

  inline facadesoulLv& operator=(const facadesoulLv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadesoulLv& default_instance();

  void Swap(facadesoulLv* other);

  // implements Message ----------------------------------------------

  facadesoulLv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadesoulLv& from);
  void MergeFrom(const facadesoulLv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 soulID = 2;
  inline bool has_soulid() const;
  inline void clear_soulid();
  static const int kSoulIDFieldNumber = 2;
  inline ::google::protobuf::int32 soulid() const;
  inline void set_soulid(::google::protobuf::int32 value);

  // optional int32 itemID = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 3;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 successRate = 5;
  inline bool has_successrate() const;
  inline void clear_successrate();
  static const int kSuccessRateFieldNumber = 5;
  inline ::google::protobuf::int32 successrate() const;
  inline void set_successrate(::google::protobuf::int32 value);

  // optional int32 downLv = 6;
  inline bool has_downlv() const;
  inline void clear_downlv();
  static const int kDownLvFieldNumber = 6;
  inline ::google::protobuf::int32 downlv() const;
  inline void set_downlv(::google::protobuf::int32 value);

  // repeated .proto_ff.facadesoulLvattributeDesc attribute = 7;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 7;
  inline const ::proto_ff::facadesoulLvattributeDesc& attribute(int index) const;
  inline ::proto_ff::facadesoulLvattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::facadesoulLvattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulLvattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulLvattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.facadesoulLv)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_soulid();
  inline void clear_has_soulid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_successrate();
  inline void clear_has_successrate();
  inline void set_has_downlv();
  inline void clear_has_downlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 soulid_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 successrate_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulLvattributeDesc > attribute_;
  ::google::protobuf::int32 downlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadesoulLv* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_facadesoulLv : public ::google::protobuf::Message {
 public:
  Sheet_facadesoulLv();
  virtual ~Sheet_facadesoulLv();

  Sheet_facadesoulLv(const Sheet_facadesoulLv& from);

  inline Sheet_facadesoulLv& operator=(const Sheet_facadesoulLv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_facadesoulLv& default_instance();

  void Swap(Sheet_facadesoulLv* other);

  // implements Message ----------------------------------------------

  Sheet_facadesoulLv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_facadesoulLv& from);
  void MergeFrom(const Sheet_facadesoulLv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.facadesoulLv facadesoulLv_List = 1;
  inline int facadesoullv_list_size() const;
  inline void clear_facadesoullv_list();
  static const int kFacadesoulLvListFieldNumber = 1;
  inline const ::proto_ff::facadesoulLv& facadesoullv_list(int index) const;
  inline ::proto_ff::facadesoulLv* mutable_facadesoullv_list(int index);
  inline ::proto_ff::facadesoulLv* add_facadesoullv_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulLv >&
      facadesoullv_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulLv >*
      mutable_facadesoullv_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_facadesoulLv)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulLv > facadesoullv_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_facadesoulLv* default_instance_;
};
// -------------------------------------------------------------------

class facadesoulAchievement : public ::google::protobuf::Message {
 public:
  facadesoulAchievement();
  virtual ~facadesoulAchievement();

  facadesoulAchievement(const facadesoulAchievement& from);

  inline facadesoulAchievement& operator=(const facadesoulAchievement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const facadesoulAchievement& default_instance();

  void Swap(facadesoulAchievement* other);

  // implements Message ----------------------------------------------

  facadesoulAchievement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const facadesoulAchievement& from);
  void MergeFrom(const facadesoulAchievement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 soulID = 2;
  inline bool has_soulid() const;
  inline void clear_soulid();
  static const int kSoulIDFieldNumber = 2;
  inline ::google::protobuf::int32 soulid() const;
  inline void set_soulid(::google::protobuf::int32 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 parama = 4;
  inline bool has_parama() const;
  inline void clear_parama();
  static const int kParamaFieldNumber = 4;
  inline ::google::protobuf::int32 parama() const;
  inline void set_parama(::google::protobuf::int32 value);

  // optional int32 itemID = 5;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 5;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 num = 6;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 6;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.facadesoulAchievement)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_soulid();
  inline void clear_has_soulid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_parama();
  inline void clear_has_parama();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 soulid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 parama_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static facadesoulAchievement* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_facadesoulAchievement : public ::google::protobuf::Message {
 public:
  Sheet_facadesoulAchievement();
  virtual ~Sheet_facadesoulAchievement();

  Sheet_facadesoulAchievement(const Sheet_facadesoulAchievement& from);

  inline Sheet_facadesoulAchievement& operator=(const Sheet_facadesoulAchievement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_facadesoulAchievement& default_instance();

  void Swap(Sheet_facadesoulAchievement* other);

  // implements Message ----------------------------------------------

  Sheet_facadesoulAchievement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_facadesoulAchievement& from);
  void MergeFrom(const Sheet_facadesoulAchievement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.facadesoulAchievement facadesoulAchievement_List = 1;
  inline int facadesoulachievement_list_size() const;
  inline void clear_facadesoulachievement_list();
  static const int kFacadesoulAchievementListFieldNumber = 1;
  inline const ::proto_ff::facadesoulAchievement& facadesoulachievement_list(int index) const;
  inline ::proto_ff::facadesoulAchievement* mutable_facadesoulachievement_list(int index);
  inline ::proto_ff::facadesoulAchievement* add_facadesoulachievement_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulAchievement >&
      facadesoulachievement_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulAchievement >*
      mutable_facadesoulachievement_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_facadesoulAchievement)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulAchievement > facadesoulachievement_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_facade_2eproto();
  friend void protobuf_AssignDesc_facade_2eproto();
  friend void protobuf_ShutdownFile_facade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_facadesoulAchievement* default_instance_;
};
// ===================================================================


// ===================================================================

// facadedisplaymaterialDesc

// optional int64 id = 1;
inline bool facadedisplaymaterialDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadedisplaymaterialDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadedisplaymaterialDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadedisplaymaterialDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 facadedisplaymaterialDesc::id() const {
  return id_;
}
inline void facadedisplaymaterialDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 exp = 2;
inline bool facadedisplaymaterialDesc::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadedisplaymaterialDesc::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadedisplaymaterialDesc::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadedisplaymaterialDesc::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 facadedisplaymaterialDesc::exp() const {
  return exp_;
}
inline void facadedisplaymaterialDesc::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// facadedisplay

// optional int64 id = 1;
inline bool facadedisplay::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadedisplay::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadedisplay::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadedisplay::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 facadedisplay::id() const {
  return id_;
}
inline void facadedisplay::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool facadedisplay::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadedisplay::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadedisplay::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadedisplay::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadedisplay::type() const {
  return type_;
}
inline void facadedisplay::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string resource = 3;
inline bool facadedisplay::has_resource() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void facadedisplay::set_has_resource() {
  _has_bits_[0] |= 0x00000004u;
}
inline void facadedisplay::clear_has_resource() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void facadedisplay::clear_resource() {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    resource_->clear();
  }
  clear_has_resource();
}
inline const ::std::string& facadedisplay::resource() const {
  return *resource_;
}
inline void facadedisplay::set_resource(const ::std::string& value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void facadedisplay::set_resource(const char* value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void facadedisplay::set_resource(const char* value, size_t size) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadedisplay::mutable_resource() {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  return resource_;
}
inline ::std::string* facadedisplay::release_resource() {
  clear_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resource_;
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadedisplay::set_allocated_resource(::std::string* resource) {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    delete resource_;
  }
  if (resource) {
    set_has_resource();
    resource_ = resource;
  } else {
    clear_has_resource();
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string name = 4;
inline bool facadedisplay::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void facadedisplay::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void facadedisplay::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void facadedisplay::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& facadedisplay::name() const {
  return *name_;
}
inline void facadedisplay::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void facadedisplay::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void facadedisplay::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadedisplay::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* facadedisplay::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadedisplay::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string activeDesc = 5;
inline bool facadedisplay::has_activedesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void facadedisplay::set_has_activedesc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void facadedisplay::clear_has_activedesc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void facadedisplay::clear_activedesc() {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    activedesc_->clear();
  }
  clear_has_activedesc();
}
inline const ::std::string& facadedisplay::activedesc() const {
  return *activedesc_;
}
inline void facadedisplay::set_activedesc(const ::std::string& value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void facadedisplay::set_activedesc(const char* value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void facadedisplay::set_activedesc(const char* value, size_t size) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadedisplay::mutable_activedesc() {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  return activedesc_;
}
inline ::std::string* facadedisplay::release_activedesc() {
  clear_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activedesc_;
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadedisplay::set_allocated_activedesc(::std::string* activedesc) {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete activedesc_;
  }
  if (activedesc) {
    set_has_activedesc();
    activedesc_ = activedesc;
  } else {
    clear_has_activedesc();
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string professionID = 6;
inline bool facadedisplay::has_professionid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void facadedisplay::set_has_professionid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void facadedisplay::clear_has_professionid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void facadedisplay::clear_professionid() {
  if (professionid_ != &::google::protobuf::internal::kEmptyString) {
    professionid_->clear();
  }
  clear_has_professionid();
}
inline const ::std::string& facadedisplay::professionid() const {
  return *professionid_;
}
inline void facadedisplay::set_professionid(const ::std::string& value) {
  set_has_professionid();
  if (professionid_ == &::google::protobuf::internal::kEmptyString) {
    professionid_ = new ::std::string;
  }
  professionid_->assign(value);
}
inline void facadedisplay::set_professionid(const char* value) {
  set_has_professionid();
  if (professionid_ == &::google::protobuf::internal::kEmptyString) {
    professionid_ = new ::std::string;
  }
  professionid_->assign(value);
}
inline void facadedisplay::set_professionid(const char* value, size_t size) {
  set_has_professionid();
  if (professionid_ == &::google::protobuf::internal::kEmptyString) {
    professionid_ = new ::std::string;
  }
  professionid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadedisplay::mutable_professionid() {
  set_has_professionid();
  if (professionid_ == &::google::protobuf::internal::kEmptyString) {
    professionid_ = new ::std::string;
  }
  return professionid_;
}
inline ::std::string* facadedisplay::release_professionid() {
  clear_has_professionid();
  if (professionid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = professionid_;
    professionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadedisplay::set_allocated_professionid(::std::string* professionid) {
  if (professionid_ != &::google::protobuf::internal::kEmptyString) {
    delete professionid_;
  }
  if (professionid) {
    set_has_professionid();
    professionid_ = professionid;
  } else {
    clear_has_professionid();
    professionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string skillID = 7;
inline bool facadedisplay::has_skillid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void facadedisplay::set_has_skillid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void facadedisplay::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void facadedisplay::clear_skillid() {
  if (skillid_ != &::google::protobuf::internal::kEmptyString) {
    skillid_->clear();
  }
  clear_has_skillid();
}
inline const ::std::string& facadedisplay::skillid() const {
  return *skillid_;
}
inline void facadedisplay::set_skillid(const ::std::string& value) {
  set_has_skillid();
  if (skillid_ == &::google::protobuf::internal::kEmptyString) {
    skillid_ = new ::std::string;
  }
  skillid_->assign(value);
}
inline void facadedisplay::set_skillid(const char* value) {
  set_has_skillid();
  if (skillid_ == &::google::protobuf::internal::kEmptyString) {
    skillid_ = new ::std::string;
  }
  skillid_->assign(value);
}
inline void facadedisplay::set_skillid(const char* value, size_t size) {
  set_has_skillid();
  if (skillid_ == &::google::protobuf::internal::kEmptyString) {
    skillid_ = new ::std::string;
  }
  skillid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadedisplay::mutable_skillid() {
  set_has_skillid();
  if (skillid_ == &::google::protobuf::internal::kEmptyString) {
    skillid_ = new ::std::string;
  }
  return skillid_;
}
inline ::std::string* facadedisplay::release_skillid() {
  clear_has_skillid();
  if (skillid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = skillid_;
    skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadedisplay::set_allocated_skillid(::std::string* skillid) {
  if (skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete skillid_;
  }
  if (skillid) {
    set_has_skillid();
    skillid_ = skillid;
  } else {
    clear_has_skillid();
    skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 soulItemID = 8;
inline bool facadedisplay::has_soulitemid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void facadedisplay::set_has_soulitemid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void facadedisplay::clear_has_soulitemid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void facadedisplay::clear_soulitemid() {
  soulitemid_ = 0;
  clear_has_soulitemid();
}
inline ::google::protobuf::int32 facadedisplay::soulitemid() const {
  return soulitemid_;
}
inline void facadedisplay::set_soulitemid(::google::protobuf::int32 value) {
  set_has_soulitemid();
  soulitemid_ = value;
}

// repeated .proto_ff.facadedisplaymaterialDesc material = 9;
inline int facadedisplay::material_size() const {
  return material_.size();
}
inline void facadedisplay::clear_material() {
  material_.Clear();
}
inline const ::proto_ff::facadedisplaymaterialDesc& facadedisplay::material(int index) const {
  return material_.Get(index);
}
inline ::proto_ff::facadedisplaymaterialDesc* facadedisplay::mutable_material(int index) {
  return material_.Mutable(index);
}
inline ::proto_ff::facadedisplaymaterialDesc* facadedisplay::add_material() {
  return material_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadedisplaymaterialDesc >&
facadedisplay::material() const {
  return material_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadedisplaymaterialDesc >*
facadedisplay::mutable_material() {
  return &material_;
}

// repeated int64 fragmentID = 10;
inline int facadedisplay::fragmentid_size() const {
  return fragmentid_.size();
}
inline void facadedisplay::clear_fragmentid() {
  fragmentid_.Clear();
}
inline ::google::protobuf::int64 facadedisplay::fragmentid(int index) const {
  return fragmentid_.Get(index);
}
inline void facadedisplay::set_fragmentid(int index, ::google::protobuf::int64 value) {
  fragmentid_.Set(index, value);
}
inline void facadedisplay::add_fragmentid(::google::protobuf::int64 value) {
  fragmentid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
facadedisplay::fragmentid() const {
  return fragmentid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
facadedisplay::mutable_fragmentid() {
  return &fragmentid_;
}

// -------------------------------------------------------------------

// Sheet_facadedisplay

// repeated .proto_ff.facadedisplay facadedisplay_List = 1;
inline int Sheet_facadedisplay::facadedisplay_list_size() const {
  return facadedisplay_list_.size();
}
inline void Sheet_facadedisplay::clear_facadedisplay_list() {
  facadedisplay_list_.Clear();
}
inline const ::proto_ff::facadedisplay& Sheet_facadedisplay::facadedisplay_list(int index) const {
  return facadedisplay_list_.Get(index);
}
inline ::proto_ff::facadedisplay* Sheet_facadedisplay::mutable_facadedisplay_list(int index) {
  return facadedisplay_list_.Mutable(index);
}
inline ::proto_ff::facadedisplay* Sheet_facadedisplay::add_facadedisplay_list() {
  return facadedisplay_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadedisplay >&
Sheet_facadedisplay::facadedisplay_list() const {
  return facadedisplay_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadedisplay >*
Sheet_facadedisplay::mutable_facadedisplay_list() {
  return &facadedisplay_list_;
}

// -------------------------------------------------------------------

// facadevaluetreasureAttributeDesc

// optional int32 type = 1;
inline bool facadevaluetreasureAttributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadevaluetreasureAttributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadevaluetreasureAttributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadevaluetreasureAttributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadevaluetreasureAttributeDesc::type() const {
  return type_;
}
inline void facadevaluetreasureAttributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool facadevaluetreasureAttributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadevaluetreasureAttributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadevaluetreasureAttributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadevaluetreasureAttributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 facadevaluetreasureAttributeDesc::value() const {
  return value_;
}
inline void facadevaluetreasureAttributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// facadevalueArtifactAttributeDesc

// optional int32 type = 1;
inline bool facadevalueArtifactAttributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadevalueArtifactAttributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadevalueArtifactAttributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadevalueArtifactAttributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadevalueArtifactAttributeDesc::type() const {
  return type_;
}
inline void facadevalueArtifactAttributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool facadevalueArtifactAttributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadevalueArtifactAttributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadevalueArtifactAttributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadevalueArtifactAttributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 facadevalueArtifactAttributeDesc::value() const {
  return value_;
}
inline void facadevalueArtifactAttributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// facadevalueBladeAttributeDesc

// optional int32 type = 1;
inline bool facadevalueBladeAttributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadevalueBladeAttributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadevalueBladeAttributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadevalueBladeAttributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadevalueBladeAttributeDesc::type() const {
  return type_;
}
inline void facadevalueBladeAttributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool facadevalueBladeAttributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadevalueBladeAttributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadevalueBladeAttributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadevalueBladeAttributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 facadevalueBladeAttributeDesc::value() const {
  return value_;
}
inline void facadevalueBladeAttributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// facadevaluewingAttributeDesc

// optional int32 type = 1;
inline bool facadevaluewingAttributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadevaluewingAttributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadevaluewingAttributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadevaluewingAttributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadevaluewingAttributeDesc::type() const {
  return type_;
}
inline void facadevaluewingAttributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool facadevaluewingAttributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadevaluewingAttributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadevaluewingAttributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadevaluewingAttributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 facadevaluewingAttributeDesc::value() const {
  return value_;
}
inline void facadevaluewingAttributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// facadevalue

// optional int32 lv = 1;
inline bool facadevalue::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadevalue::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadevalue::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadevalue::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 facadevalue::lv() const {
  return lv_;
}
inline void facadevalue::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int64 wingExp = 2;
inline bool facadevalue::has_wingexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadevalue::set_has_wingexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadevalue::clear_has_wingexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadevalue::clear_wingexp() {
  wingexp_ = GOOGLE_LONGLONG(0);
  clear_has_wingexp();
}
inline ::google::protobuf::int64 facadevalue::wingexp() const {
  return wingexp_;
}
inline void facadevalue::set_wingexp(::google::protobuf::int64 value) {
  set_has_wingexp();
  wingexp_ = value;
}

// optional int64 treasureExp = 3;
inline bool facadevalue::has_treasureexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void facadevalue::set_has_treasureexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void facadevalue::clear_has_treasureexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void facadevalue::clear_treasureexp() {
  treasureexp_ = GOOGLE_LONGLONG(0);
  clear_has_treasureexp();
}
inline ::google::protobuf::int64 facadevalue::treasureexp() const {
  return treasureexp_;
}
inline void facadevalue::set_treasureexp(::google::protobuf::int64 value) {
  set_has_treasureexp();
  treasureexp_ = value;
}

// optional int64 ArtifactExp = 4;
inline bool facadevalue::has_artifactexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void facadevalue::set_has_artifactexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void facadevalue::clear_has_artifactexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void facadevalue::clear_artifactexp() {
  artifactexp_ = GOOGLE_LONGLONG(0);
  clear_has_artifactexp();
}
inline ::google::protobuf::int64 facadevalue::artifactexp() const {
  return artifactexp_;
}
inline void facadevalue::set_artifactexp(::google::protobuf::int64 value) {
  set_has_artifactexp();
  artifactexp_ = value;
}

// optional int64 BladeExp = 5;
inline bool facadevalue::has_bladeexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void facadevalue::set_has_bladeexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void facadevalue::clear_has_bladeexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void facadevalue::clear_bladeexp() {
  bladeexp_ = GOOGLE_LONGLONG(0);
  clear_has_bladeexp();
}
inline ::google::protobuf::int64 facadevalue::bladeexp() const {
  return bladeexp_;
}
inline void facadevalue::set_bladeexp(::google::protobuf::int64 value) {
  set_has_bladeexp();
  bladeexp_ = value;
}

// repeated .proto_ff.facadevaluetreasureAttributeDesc treasureAttribute = 6;
inline int facadevalue::treasureattribute_size() const {
  return treasureattribute_.size();
}
inline void facadevalue::clear_treasureattribute() {
  treasureattribute_.Clear();
}
inline const ::proto_ff::facadevaluetreasureAttributeDesc& facadevalue::treasureattribute(int index) const {
  return treasureattribute_.Get(index);
}
inline ::proto_ff::facadevaluetreasureAttributeDesc* facadevalue::mutable_treasureattribute(int index) {
  return treasureattribute_.Mutable(index);
}
inline ::proto_ff::facadevaluetreasureAttributeDesc* facadevalue::add_treasureattribute() {
  return treasureattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevaluetreasureAttributeDesc >&
facadevalue::treasureattribute() const {
  return treasureattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevaluetreasureAttributeDesc >*
facadevalue::mutable_treasureattribute() {
  return &treasureattribute_;
}

// repeated .proto_ff.facadevalueArtifactAttributeDesc ArtifactAttribute = 7;
inline int facadevalue::artifactattribute_size() const {
  return artifactattribute_.size();
}
inline void facadevalue::clear_artifactattribute() {
  artifactattribute_.Clear();
}
inline const ::proto_ff::facadevalueArtifactAttributeDesc& facadevalue::artifactattribute(int index) const {
  return artifactattribute_.Get(index);
}
inline ::proto_ff::facadevalueArtifactAttributeDesc* facadevalue::mutable_artifactattribute(int index) {
  return artifactattribute_.Mutable(index);
}
inline ::proto_ff::facadevalueArtifactAttributeDesc* facadevalue::add_artifactattribute() {
  return artifactattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalueArtifactAttributeDesc >&
facadevalue::artifactattribute() const {
  return artifactattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalueArtifactAttributeDesc >*
facadevalue::mutable_artifactattribute() {
  return &artifactattribute_;
}

// repeated .proto_ff.facadevalueBladeAttributeDesc BladeAttribute = 8;
inline int facadevalue::bladeattribute_size() const {
  return bladeattribute_.size();
}
inline void facadevalue::clear_bladeattribute() {
  bladeattribute_.Clear();
}
inline const ::proto_ff::facadevalueBladeAttributeDesc& facadevalue::bladeattribute(int index) const {
  return bladeattribute_.Get(index);
}
inline ::proto_ff::facadevalueBladeAttributeDesc* facadevalue::mutable_bladeattribute(int index) {
  return bladeattribute_.Mutable(index);
}
inline ::proto_ff::facadevalueBladeAttributeDesc* facadevalue::add_bladeattribute() {
  return bladeattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalueBladeAttributeDesc >&
facadevalue::bladeattribute() const {
  return bladeattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalueBladeAttributeDesc >*
facadevalue::mutable_bladeattribute() {
  return &bladeattribute_;
}

// repeated .proto_ff.facadevaluewingAttributeDesc wingAttribute = 9;
inline int facadevalue::wingattribute_size() const {
  return wingattribute_.size();
}
inline void facadevalue::clear_wingattribute() {
  wingattribute_.Clear();
}
inline const ::proto_ff::facadevaluewingAttributeDesc& facadevalue::wingattribute(int index) const {
  return wingattribute_.Get(index);
}
inline ::proto_ff::facadevaluewingAttributeDesc* facadevalue::mutable_wingattribute(int index) {
  return wingattribute_.Mutable(index);
}
inline ::proto_ff::facadevaluewingAttributeDesc* facadevalue::add_wingattribute() {
  return wingattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevaluewingAttributeDesc >&
facadevalue::wingattribute() const {
  return wingattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevaluewingAttributeDesc >*
facadevalue::mutable_wingattribute() {
  return &wingattribute_;
}

// -------------------------------------------------------------------

// Sheet_facadevalue

// repeated .proto_ff.facadevalue facadevalue_List = 1;
inline int Sheet_facadevalue::facadevalue_list_size() const {
  return facadevalue_list_.size();
}
inline void Sheet_facadevalue::clear_facadevalue_list() {
  facadevalue_list_.Clear();
}
inline const ::proto_ff::facadevalue& Sheet_facadevalue::facadevalue_list(int index) const {
  return facadevalue_list_.Get(index);
}
inline ::proto_ff::facadevalue* Sheet_facadevalue::mutable_facadevalue_list(int index) {
  return facadevalue_list_.Mutable(index);
}
inline ::proto_ff::facadevalue* Sheet_facadevalue::add_facadevalue_list() {
  return facadevalue_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalue >&
Sheet_facadevalue::facadevalue_list() const {
  return facadevalue_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadevalue >*
Sheet_facadevalue::mutable_facadevalue_list() {
  return &facadevalue_list_;
}

// -------------------------------------------------------------------

// facadetype

// optional int32 id = 1;
inline bool facadetype::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadetype::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadetype::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadetype::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 facadetype::id() const {
  return id_;
}
inline void facadetype::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string souceName = 2;
inline bool facadetype::has_soucename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadetype::set_has_soucename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadetype::clear_has_soucename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadetype::clear_soucename() {
  if (soucename_ != &::google::protobuf::internal::kEmptyString) {
    soucename_->clear();
  }
  clear_has_soucename();
}
inline const ::std::string& facadetype::soucename() const {
  return *soucename_;
}
inline void facadetype::set_soucename(const ::std::string& value) {
  set_has_soucename();
  if (soucename_ == &::google::protobuf::internal::kEmptyString) {
    soucename_ = new ::std::string;
  }
  soucename_->assign(value);
}
inline void facadetype::set_soucename(const char* value) {
  set_has_soucename();
  if (soucename_ == &::google::protobuf::internal::kEmptyString) {
    soucename_ = new ::std::string;
  }
  soucename_->assign(value);
}
inline void facadetype::set_soucename(const char* value, size_t size) {
  set_has_soucename();
  if (soucename_ == &::google::protobuf::internal::kEmptyString) {
    soucename_ = new ::std::string;
  }
  soucename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadetype::mutable_soucename() {
  set_has_soucename();
  if (soucename_ == &::google::protobuf::internal::kEmptyString) {
    soucename_ = new ::std::string;
  }
  return soucename_;
}
inline ::std::string* facadetype::release_soucename() {
  clear_has_soucename();
  if (soucename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = soucename_;
    soucename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadetype::set_allocated_soucename(::std::string* soucename) {
  if (soucename_ != &::google::protobuf::internal::kEmptyString) {
    delete soucename_;
  }
  if (soucename) {
    set_has_soucename();
    soucename_ = soucename;
  } else {
    clear_has_soucename();
    soucename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_facadetype

// repeated .proto_ff.facadetype facadetype_List = 1;
inline int Sheet_facadetype::facadetype_list_size() const {
  return facadetype_list_.size();
}
inline void Sheet_facadetype::clear_facadetype_list() {
  facadetype_list_.Clear();
}
inline const ::proto_ff::facadetype& Sheet_facadetype::facadetype_list(int index) const {
  return facadetype_list_.Get(index);
}
inline ::proto_ff::facadetype* Sheet_facadetype::mutable_facadetype_list(int index) {
  return facadetype_list_.Mutable(index);
}
inline ::proto_ff::facadetype* Sheet_facadetype::add_facadetype_list() {
  return facadetype_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadetype >&
Sheet_facadetype::facadetype_list() const {
  return facadetype_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadetype >*
Sheet_facadetype::mutable_facadetype_list() {
  return &facadetype_list_;
}

// -------------------------------------------------------------------

// facadefragmentattributeDesc

// optional int32 type = 1;
inline bool facadefragmentattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadefragmentattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadefragmentattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadefragmentattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadefragmentattributeDesc::type() const {
  return type_;
}
inline void facadefragmentattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool facadefragmentattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadefragmentattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadefragmentattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadefragmentattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 facadefragmentattributeDesc::value() const {
  return value_;
}
inline void facadefragmentattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// facadefragment

// optional int64 fragmentID = 1;
inline bool facadefragment::has_fragmentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadefragment::set_has_fragmentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadefragment::clear_has_fragmentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadefragment::clear_fragmentid() {
  fragmentid_ = GOOGLE_LONGLONG(0);
  clear_has_fragmentid();
}
inline ::google::protobuf::int64 facadefragment::fragmentid() const {
  return fragmentid_;
}
inline void facadefragment::set_fragmentid(::google::protobuf::int64 value) {
  set_has_fragmentid();
  fragmentid_ = value;
}

// optional int64 item = 2;
inline bool facadefragment::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadefragment::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadefragment::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadefragment::clear_item() {
  item_ = GOOGLE_LONGLONG(0);
  clear_has_item();
}
inline ::google::protobuf::int64 facadefragment::item() const {
  return item_;
}
inline void facadefragment::set_item(::google::protobuf::int64 value) {
  set_has_item();
  item_ = value;
}

// optional int32 itemNum = 3;
inline bool facadefragment::has_itemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void facadefragment::set_has_itemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void facadefragment::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void facadefragment::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 facadefragment::itemnum() const {
  return itemnum_;
}
inline void facadefragment::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// repeated .proto_ff.facadefragmentattributeDesc attribute = 4;
inline int facadefragment::attribute_size() const {
  return attribute_.size();
}
inline void facadefragment::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::facadefragmentattributeDesc& facadefragment::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::facadefragmentattributeDesc* facadefragment::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::facadefragmentattributeDesc* facadefragment::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadefragmentattributeDesc >&
facadefragment::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadefragmentattributeDesc >*
facadefragment::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_facadefragment

// repeated .proto_ff.facadefragment facadefragment_List = 1;
inline int Sheet_facadefragment::facadefragment_list_size() const {
  return facadefragment_list_.size();
}
inline void Sheet_facadefragment::clear_facadefragment_list() {
  facadefragment_list_.Clear();
}
inline const ::proto_ff::facadefragment& Sheet_facadefragment::facadefragment_list(int index) const {
  return facadefragment_list_.Get(index);
}
inline ::proto_ff::facadefragment* Sheet_facadefragment::mutable_facadefragment_list(int index) {
  return facadefragment_list_.Mutable(index);
}
inline ::proto_ff::facadefragment* Sheet_facadefragment::add_facadefragment_list() {
  return facadefragment_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadefragment >&
Sheet_facadefragment::facadefragment_list() const {
  return facadefragment_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadefragment >*
Sheet_facadefragment::mutable_facadefragment_list() {
  return &facadefragment_list_;
}

// -------------------------------------------------------------------

// facadechangeattributeDesc

// optional int32 type = 1;
inline bool facadechangeattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadechangeattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadechangeattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadechangeattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadechangeattributeDesc::type() const {
  return type_;
}
inline void facadechangeattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool facadechangeattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadechangeattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadechangeattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadechangeattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 facadechangeattributeDesc::value() const {
  return value_;
}
inline void facadechangeattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// facadechangeActiveAttributeDesc

// optional int32 type = 1;
inline bool facadechangeActiveAttributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadechangeActiveAttributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadechangeActiveAttributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadechangeActiveAttributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadechangeActiveAttributeDesc::type() const {
  return type_;
}
inline void facadechangeActiveAttributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool facadechangeActiveAttributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadechangeActiveAttributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadechangeActiveAttributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadechangeActiveAttributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 facadechangeActiveAttributeDesc::value() const {
  return value_;
}
inline void facadechangeActiveAttributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// facadechange

// optional int64 id = 1;
inline bool facadechange::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadechange::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadechange::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadechange::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 facadechange::id() const {
  return id_;
}
inline void facadechange::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool facadechange::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadechange::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadechange::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadechange::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadechange::type() const {
  return type_;
}
inline void facadechange::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string resource = 3;
inline bool facadechange::has_resource() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void facadechange::set_has_resource() {
  _has_bits_[0] |= 0x00000004u;
}
inline void facadechange::clear_has_resource() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void facadechange::clear_resource() {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    resource_->clear();
  }
  clear_has_resource();
}
inline const ::std::string& facadechange::resource() const {
  return *resource_;
}
inline void facadechange::set_resource(const ::std::string& value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void facadechange::set_resource(const char* value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void facadechange::set_resource(const char* value, size_t size) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadechange::mutable_resource() {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  return resource_;
}
inline ::std::string* facadechange::release_resource() {
  clear_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resource_;
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadechange::set_allocated_resource(::std::string* resource) {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    delete resource_;
  }
  if (resource) {
    set_has_resource();
    resource_ = resource;
  } else {
    clear_has_resource();
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string professionID = 4;
inline bool facadechange::has_professionid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void facadechange::set_has_professionid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void facadechange::clear_has_professionid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void facadechange::clear_professionid() {
  if (professionid_ != &::google::protobuf::internal::kEmptyString) {
    professionid_->clear();
  }
  clear_has_professionid();
}
inline const ::std::string& facadechange::professionid() const {
  return *professionid_;
}
inline void facadechange::set_professionid(const ::std::string& value) {
  set_has_professionid();
  if (professionid_ == &::google::protobuf::internal::kEmptyString) {
    professionid_ = new ::std::string;
  }
  professionid_->assign(value);
}
inline void facadechange::set_professionid(const char* value) {
  set_has_professionid();
  if (professionid_ == &::google::protobuf::internal::kEmptyString) {
    professionid_ = new ::std::string;
  }
  professionid_->assign(value);
}
inline void facadechange::set_professionid(const char* value, size_t size) {
  set_has_professionid();
  if (professionid_ == &::google::protobuf::internal::kEmptyString) {
    professionid_ = new ::std::string;
  }
  professionid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadechange::mutable_professionid() {
  set_has_professionid();
  if (professionid_ == &::google::protobuf::internal::kEmptyString) {
    professionid_ = new ::std::string;
  }
  return professionid_;
}
inline ::std::string* facadechange::release_professionid() {
  clear_has_professionid();
  if (professionid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = professionid_;
    professionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadechange::set_allocated_professionid(::std::string* professionid) {
  if (professionid_ != &::google::protobuf::internal::kEmptyString) {
    delete professionid_;
  }
  if (professionid) {
    set_has_professionid();
    professionid_ = professionid;
  } else {
    clear_has_professionid();
    professionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string name = 5;
inline bool facadechange::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void facadechange::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void facadechange::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void facadechange::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& facadechange::name() const {
  return *name_;
}
inline void facadechange::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void facadechange::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void facadechange::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadechange::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* facadechange::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadechange::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string activeDesc = 6;
inline bool facadechange::has_activedesc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void facadechange::set_has_activedesc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void facadechange::clear_has_activedesc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void facadechange::clear_activedesc() {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    activedesc_->clear();
  }
  clear_has_activedesc();
}
inline const ::std::string& facadechange::activedesc() const {
  return *activedesc_;
}
inline void facadechange::set_activedesc(const ::std::string& value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void facadechange::set_activedesc(const char* value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void facadechange::set_activedesc(const char* value, size_t size) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadechange::mutable_activedesc() {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  return activedesc_;
}
inline ::std::string* facadechange::release_activedesc() {
  clear_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activedesc_;
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadechange::set_allocated_activedesc(::std::string* activedesc) {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete activedesc_;
  }
  if (activedesc) {
    set_has_activedesc();
    activedesc_ = activedesc;
  } else {
    clear_has_activedesc();
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 quality = 7;
inline bool facadechange::has_quality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void facadechange::set_has_quality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void facadechange::clear_has_quality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void facadechange::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 facadechange::quality() const {
  return quality_;
}
inline void facadechange::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int64 activationItem = 8;
inline bool facadechange::has_activationitem() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void facadechange::set_has_activationitem() {
  _has_bits_[0] |= 0x00000080u;
}
inline void facadechange::clear_has_activationitem() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void facadechange::clear_activationitem() {
  activationitem_ = GOOGLE_LONGLONG(0);
  clear_has_activationitem();
}
inline ::google::protobuf::int64 facadechange::activationitem() const {
  return activationitem_;
}
inline void facadechange::set_activationitem(::google::protobuf::int64 value) {
  set_has_activationitem();
  activationitem_ = value;
}

// optional int32 activationNum = 9;
inline bool facadechange::has_activationnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void facadechange::set_has_activationnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void facadechange::clear_has_activationnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void facadechange::clear_activationnum() {
  activationnum_ = 0;
  clear_has_activationnum();
}
inline ::google::protobuf::int32 facadechange::activationnum() const {
  return activationnum_;
}
inline void facadechange::set_activationnum(::google::protobuf::int32 value) {
  set_has_activationnum();
  activationnum_ = value;
}

// optional int64 starId = 10;
inline bool facadechange::has_starid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void facadechange::set_has_starid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void facadechange::clear_has_starid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void facadechange::clear_starid() {
  starid_ = GOOGLE_LONGLONG(0);
  clear_has_starid();
}
inline ::google::protobuf::int64 facadechange::starid() const {
  return starid_;
}
inline void facadechange::set_starid(::google::protobuf::int64 value) {
  set_has_starid();
  starid_ = value;
}

// optional string starNum = 11;
inline bool facadechange::has_starnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void facadechange::set_has_starnum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void facadechange::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void facadechange::clear_starnum() {
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    starnum_->clear();
  }
  clear_has_starnum();
}
inline const ::std::string& facadechange::starnum() const {
  return *starnum_;
}
inline void facadechange::set_starnum(const ::std::string& value) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(value);
}
inline void facadechange::set_starnum(const char* value) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(value);
}
inline void facadechange::set_starnum(const char* value, size_t size) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadechange::mutable_starnum() {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  return starnum_;
}
inline ::std::string* facadechange::release_starnum() {
  clear_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = starnum_;
    starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void facadechange::set_allocated_starnum(::std::string* starnum) {
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete starnum_;
  }
  if (starnum) {
    set_has_starnum();
    starnum_ = starnum;
  } else {
    clear_has_starnum();
    starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 starUp = 12;
inline bool facadechange::has_starup() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void facadechange::set_has_starup() {
  _has_bits_[0] |= 0x00000800u;
}
inline void facadechange::clear_has_starup() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void facadechange::clear_starup() {
  starup_ = 0;
  clear_has_starup();
}
inline ::google::protobuf::int32 facadechange::starup() const {
  return starup_;
}
inline void facadechange::set_starup(::google::protobuf::int32 value) {
  set_has_starup();
  starup_ = value;
}

// optional int32 starBer = 13;
inline bool facadechange::has_starber() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void facadechange::set_has_starber() {
  _has_bits_[0] |= 0x00001000u;
}
inline void facadechange::clear_has_starber() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void facadechange::clear_starber() {
  starber_ = 0;
  clear_has_starber();
}
inline ::google::protobuf::int32 facadechange::starber() const {
  return starber_;
}
inline void facadechange::set_starber(::google::protobuf::int32 value) {
  set_has_starber();
  starber_ = value;
}

// optional int64 upAttributeId = 14;
inline bool facadechange::has_upattributeid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void facadechange::set_has_upattributeid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void facadechange::clear_has_upattributeid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void facadechange::clear_upattributeid() {
  upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_upattributeid();
}
inline ::google::protobuf::int64 facadechange::upattributeid() const {
  return upattributeid_;
}
inline void facadechange::set_upattributeid(::google::protobuf::int64 value) {
  set_has_upattributeid();
  upattributeid_ = value;
}

// optional int32 activeSkill = 15;
inline bool facadechange::has_activeskill() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void facadechange::set_has_activeskill() {
  _has_bits_[0] |= 0x00004000u;
}
inline void facadechange::clear_has_activeskill() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void facadechange::clear_activeskill() {
  activeskill_ = 0;
  clear_has_activeskill();
}
inline ::google::protobuf::int32 facadechange::activeskill() const {
  return activeskill_;
}
inline void facadechange::set_activeskill(::google::protobuf::int32 value) {
  set_has_activeskill();
  activeskill_ = value;
}

// repeated .proto_ff.facadechangeattributeDesc attribute = 16;
inline int facadechange::attribute_size() const {
  return attribute_.size();
}
inline void facadechange::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::facadechangeattributeDesc& facadechange::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::facadechangeattributeDesc* facadechange::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::facadechangeattributeDesc* facadechange::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechangeattributeDesc >&
facadechange::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechangeattributeDesc >*
facadechange::mutable_attribute() {
  return &attribute_;
}

// repeated .proto_ff.facadechangeActiveAttributeDesc ActiveAttribute = 17;
inline int facadechange::activeattribute_size() const {
  return activeattribute_.size();
}
inline void facadechange::clear_activeattribute() {
  activeattribute_.Clear();
}
inline const ::proto_ff::facadechangeActiveAttributeDesc& facadechange::activeattribute(int index) const {
  return activeattribute_.Get(index);
}
inline ::proto_ff::facadechangeActiveAttributeDesc* facadechange::mutable_activeattribute(int index) {
  return activeattribute_.Mutable(index);
}
inline ::proto_ff::facadechangeActiveAttributeDesc* facadechange::add_activeattribute() {
  return activeattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechangeActiveAttributeDesc >&
facadechange::activeattribute() const {
  return activeattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechangeActiveAttributeDesc >*
facadechange::mutable_activeattribute() {
  return &activeattribute_;
}

// -------------------------------------------------------------------

// Sheet_facadechange

// repeated .proto_ff.facadechange facadechange_List = 1;
inline int Sheet_facadechange::facadechange_list_size() const {
  return facadechange_list_.size();
}
inline void Sheet_facadechange::clear_facadechange_list() {
  facadechange_list_.Clear();
}
inline const ::proto_ff::facadechange& Sheet_facadechange::facadechange_list(int index) const {
  return facadechange_list_.Get(index);
}
inline ::proto_ff::facadechange* Sheet_facadechange::mutable_facadechange_list(int index) {
  return facadechange_list_.Mutable(index);
}
inline ::proto_ff::facadechange* Sheet_facadechange::add_facadechange_list() {
  return facadechange_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechange >&
Sheet_facadechange::facadechange_list() const {
  return facadechange_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadechange >*
Sheet_facadechange::mutable_facadechange_list() {
  return &facadechange_list_;
}

// -------------------------------------------------------------------

// facadestarUpupAttributeDesc

// optional int32 type = 1;
inline bool facadestarUpupAttributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadestarUpupAttributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadestarUpupAttributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadestarUpupAttributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadestarUpupAttributeDesc::type() const {
  return type_;
}
inline void facadestarUpupAttributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool facadestarUpupAttributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadestarUpupAttributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadestarUpupAttributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadestarUpupAttributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 facadestarUpupAttributeDesc::value() const {
  return value_;
}
inline void facadestarUpupAttributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// facadestarUp

// optional int32 ID = 1;
inline bool facadestarUp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadestarUp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadestarUp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadestarUp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 facadestarUp::id() const {
  return id_;
}
inline void facadestarUp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 upAttributeId = 2;
inline bool facadestarUp::has_upattributeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadestarUp::set_has_upattributeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadestarUp::clear_has_upattributeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadestarUp::clear_upattributeid() {
  upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_upattributeid();
}
inline ::google::protobuf::int64 facadestarUp::upattributeid() const {
  return upattributeid_;
}
inline void facadestarUp::set_upattributeid(::google::protobuf::int64 value) {
  set_has_upattributeid();
  upattributeid_ = value;
}

// optional int32 starID = 3;
inline bool facadestarUp::has_starid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void facadestarUp::set_has_starid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void facadestarUp::clear_has_starid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void facadestarUp::clear_starid() {
  starid_ = 0;
  clear_has_starid();
}
inline ::google::protobuf::int32 facadestarUp::starid() const {
  return starid_;
}
inline void facadestarUp::set_starid(::google::protobuf::int32 value) {
  set_has_starid();
  starid_ = value;
}

// optional int32 skillID = 4;
inline bool facadestarUp::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void facadestarUp::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void facadestarUp::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void facadestarUp::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 facadestarUp::skillid() const {
  return skillid_;
}
inline void facadestarUp::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// repeated .proto_ff.facadestarUpupAttributeDesc upAttribute = 5;
inline int facadestarUp::upattribute_size() const {
  return upattribute_.size();
}
inline void facadestarUp::clear_upattribute() {
  upattribute_.Clear();
}
inline const ::proto_ff::facadestarUpupAttributeDesc& facadestarUp::upattribute(int index) const {
  return upattribute_.Get(index);
}
inline ::proto_ff::facadestarUpupAttributeDesc* facadestarUp::mutable_upattribute(int index) {
  return upattribute_.Mutable(index);
}
inline ::proto_ff::facadestarUpupAttributeDesc* facadestarUp::add_upattribute() {
  return upattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadestarUpupAttributeDesc >&
facadestarUp::upattribute() const {
  return upattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadestarUpupAttributeDesc >*
facadestarUp::mutable_upattribute() {
  return &upattribute_;
}

// -------------------------------------------------------------------

// Sheet_facadestarUp

// repeated .proto_ff.facadestarUp facadestarUp_List = 1;
inline int Sheet_facadestarUp::facadestarup_list_size() const {
  return facadestarup_list_.size();
}
inline void Sheet_facadestarUp::clear_facadestarup_list() {
  facadestarup_list_.Clear();
}
inline const ::proto_ff::facadestarUp& Sheet_facadestarUp::facadestarup_list(int index) const {
  return facadestarup_list_.Get(index);
}
inline ::proto_ff::facadestarUp* Sheet_facadestarUp::mutable_facadestarup_list(int index) {
  return facadestarup_list_.Mutable(index);
}
inline ::proto_ff::facadestarUp* Sheet_facadestarUp::add_facadestarup_list() {
  return facadestarup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadestarUp >&
Sheet_facadestarUp::facadestarup_list() const {
  return facadestarup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadestarUp >*
Sheet_facadestarUp::mutable_facadestarup_list() {
  return &facadestarup_list_;
}

// -------------------------------------------------------------------

// facadesoulattributeDesc

// optional int32 type = 1;
inline bool facadesoulattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadesoulattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadesoulattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadesoulattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadesoulattributeDesc::type() const {
  return type_;
}
inline void facadesoulattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool facadesoulattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadesoulattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadesoulattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadesoulattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 facadesoulattributeDesc::value() const {
  return value_;
}
inline void facadesoulattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// facadesoul

// optional int64 id = 1;
inline bool facadesoul::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadesoul::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadesoul::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadesoul::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 facadesoul::id() const {
  return id_;
}
inline void facadesoul::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 rechargeID = 2;
inline bool facadesoul::has_rechargeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadesoul::set_has_rechargeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadesoul::clear_has_rechargeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadesoul::clear_rechargeid() {
  rechargeid_ = 0;
  clear_has_rechargeid();
}
inline ::google::protobuf::int32 facadesoul::rechargeid() const {
  return rechargeid_;
}
inline void facadesoul::set_rechargeid(::google::protobuf::int32 value) {
  set_has_rechargeid();
  rechargeid_ = value;
}

// optional int32 mainSkill = 3;
inline bool facadesoul::has_mainskill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void facadesoul::set_has_mainskill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void facadesoul::clear_has_mainskill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void facadesoul::clear_mainskill() {
  mainskill_ = 0;
  clear_has_mainskill();
}
inline ::google::protobuf::int32 facadesoul::mainskill() const {
  return mainskill_;
}
inline void facadesoul::set_mainskill(::google::protobuf::int32 value) {
  set_has_mainskill();
  mainskill_ = value;
}

// repeated .proto_ff.facadesoulattributeDesc attribute = 4;
inline int facadesoul::attribute_size() const {
  return attribute_.size();
}
inline void facadesoul::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::facadesoulattributeDesc& facadesoul::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::facadesoulattributeDesc* facadesoul::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::facadesoulattributeDesc* facadesoul::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulattributeDesc >&
facadesoul::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulattributeDesc >*
facadesoul::mutable_attribute() {
  return &attribute_;
}

// repeated int32 minorSkill = 5;
inline int facadesoul::minorskill_size() const {
  return minorskill_.size();
}
inline void facadesoul::clear_minorskill() {
  minorskill_.Clear();
}
inline ::google::protobuf::int32 facadesoul::minorskill(int index) const {
  return minorskill_.Get(index);
}
inline void facadesoul::set_minorskill(int index, ::google::protobuf::int32 value) {
  minorskill_.Set(index, value);
}
inline void facadesoul::add_minorskill(::google::protobuf::int32 value) {
  minorskill_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
facadesoul::minorskill() const {
  return minorskill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
facadesoul::mutable_minorskill() {
  return &minorskill_;
}

// -------------------------------------------------------------------

// Sheet_facadesoul

// repeated .proto_ff.facadesoul facadesoul_List = 1;
inline int Sheet_facadesoul::facadesoul_list_size() const {
  return facadesoul_list_.size();
}
inline void Sheet_facadesoul::clear_facadesoul_list() {
  facadesoul_list_.Clear();
}
inline const ::proto_ff::facadesoul& Sheet_facadesoul::facadesoul_list(int index) const {
  return facadesoul_list_.Get(index);
}
inline ::proto_ff::facadesoul* Sheet_facadesoul::mutable_facadesoul_list(int index) {
  return facadesoul_list_.Mutable(index);
}
inline ::proto_ff::facadesoul* Sheet_facadesoul::add_facadesoul_list() {
  return facadesoul_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoul >&
Sheet_facadesoul::facadesoul_list() const {
  return facadesoul_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoul >*
Sheet_facadesoul::mutable_facadesoul_list() {
  return &facadesoul_list_;
}

// -------------------------------------------------------------------

// facadesoulActive

// optional int64 id = 1;
inline bool facadesoulActive::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadesoulActive::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadesoulActive::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadesoulActive::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 facadesoulActive::id() const {
  return id_;
}
inline void facadesoulActive::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// repeated string parama = 2;
inline int facadesoulActive::parama_size() const {
  return parama_.size();
}
inline void facadesoulActive::clear_parama() {
  parama_.Clear();
}
inline const ::std::string& facadesoulActive::parama(int index) const {
  return parama_.Get(index);
}
inline ::std::string* facadesoulActive::mutable_parama(int index) {
  return parama_.Mutable(index);
}
inline void facadesoulActive::set_parama(int index, const ::std::string& value) {
  parama_.Mutable(index)->assign(value);
}
inline void facadesoulActive::set_parama(int index, const char* value) {
  parama_.Mutable(index)->assign(value);
}
inline void facadesoulActive::set_parama(int index, const char* value, size_t size) {
  parama_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* facadesoulActive::add_parama() {
  return parama_.Add();
}
inline void facadesoulActive::add_parama(const ::std::string& value) {
  parama_.Add()->assign(value);
}
inline void facadesoulActive::add_parama(const char* value) {
  parama_.Add()->assign(value);
}
inline void facadesoulActive::add_parama(const char* value, size_t size) {
  parama_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
facadesoulActive::parama() const {
  return parama_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
facadesoulActive::mutable_parama() {
  return &parama_;
}

// repeated int32 condition = 3;
inline int facadesoulActive::condition_size() const {
  return condition_.size();
}
inline void facadesoulActive::clear_condition() {
  condition_.Clear();
}
inline ::google::protobuf::int32 facadesoulActive::condition(int index) const {
  return condition_.Get(index);
}
inline void facadesoulActive::set_condition(int index, ::google::protobuf::int32 value) {
  condition_.Set(index, value);
}
inline void facadesoulActive::add_condition(::google::protobuf::int32 value) {
  condition_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
facadesoulActive::condition() const {
  return condition_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
facadesoulActive::mutable_condition() {
  return &condition_;
}

// -------------------------------------------------------------------

// Sheet_facadesoulActive

// repeated .proto_ff.facadesoulActive facadesoulActive_List = 1;
inline int Sheet_facadesoulActive::facadesoulactive_list_size() const {
  return facadesoulactive_list_.size();
}
inline void Sheet_facadesoulActive::clear_facadesoulactive_list() {
  facadesoulactive_list_.Clear();
}
inline const ::proto_ff::facadesoulActive& Sheet_facadesoulActive::facadesoulactive_list(int index) const {
  return facadesoulactive_list_.Get(index);
}
inline ::proto_ff::facadesoulActive* Sheet_facadesoulActive::mutable_facadesoulactive_list(int index) {
  return facadesoulactive_list_.Mutable(index);
}
inline ::proto_ff::facadesoulActive* Sheet_facadesoulActive::add_facadesoulactive_list() {
  return facadesoulactive_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulActive >&
Sheet_facadesoulActive::facadesoulactive_list() const {
  return facadesoulactive_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulActive >*
Sheet_facadesoulActive::mutable_facadesoulactive_list() {
  return &facadesoulactive_list_;
}

// -------------------------------------------------------------------

// facadesoulLvattributeDesc

// optional int32 type = 1;
inline bool facadesoulLvattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadesoulLvattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadesoulLvattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadesoulLvattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadesoulLvattributeDesc::type() const {
  return type_;
}
inline void facadesoulLvattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool facadesoulLvattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadesoulLvattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadesoulLvattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadesoulLvattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 facadesoulLvattributeDesc::value() const {
  return value_;
}
inline void facadesoulLvattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// facadesoulLv

// optional int64 id = 1;
inline bool facadesoulLv::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadesoulLv::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadesoulLv::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadesoulLv::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 facadesoulLv::id() const {
  return id_;
}
inline void facadesoulLv::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 soulID = 2;
inline bool facadesoulLv::has_soulid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadesoulLv::set_has_soulid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadesoulLv::clear_has_soulid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadesoulLv::clear_soulid() {
  soulid_ = 0;
  clear_has_soulid();
}
inline ::google::protobuf::int32 facadesoulLv::soulid() const {
  return soulid_;
}
inline void facadesoulLv::set_soulid(::google::protobuf::int32 value) {
  set_has_soulid();
  soulid_ = value;
}

// optional int32 itemID = 3;
inline bool facadesoulLv::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void facadesoulLv::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void facadesoulLv::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void facadesoulLv::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 facadesoulLv::itemid() const {
  return itemid_;
}
inline void facadesoulLv::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 num = 4;
inline bool facadesoulLv::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void facadesoulLv::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void facadesoulLv::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void facadesoulLv::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 facadesoulLv::num() const {
  return num_;
}
inline void facadesoulLv::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 successRate = 5;
inline bool facadesoulLv::has_successrate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void facadesoulLv::set_has_successrate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void facadesoulLv::clear_has_successrate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void facadesoulLv::clear_successrate() {
  successrate_ = 0;
  clear_has_successrate();
}
inline ::google::protobuf::int32 facadesoulLv::successrate() const {
  return successrate_;
}
inline void facadesoulLv::set_successrate(::google::protobuf::int32 value) {
  set_has_successrate();
  successrate_ = value;
}

// optional int32 downLv = 6;
inline bool facadesoulLv::has_downlv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void facadesoulLv::set_has_downlv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void facadesoulLv::clear_has_downlv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void facadesoulLv::clear_downlv() {
  downlv_ = 0;
  clear_has_downlv();
}
inline ::google::protobuf::int32 facadesoulLv::downlv() const {
  return downlv_;
}
inline void facadesoulLv::set_downlv(::google::protobuf::int32 value) {
  set_has_downlv();
  downlv_ = value;
}

// repeated .proto_ff.facadesoulLvattributeDesc attribute = 7;
inline int facadesoulLv::attribute_size() const {
  return attribute_.size();
}
inline void facadesoulLv::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::facadesoulLvattributeDesc& facadesoulLv::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::facadesoulLvattributeDesc* facadesoulLv::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::facadesoulLvattributeDesc* facadesoulLv::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulLvattributeDesc >&
facadesoulLv::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulLvattributeDesc >*
facadesoulLv::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_facadesoulLv

// repeated .proto_ff.facadesoulLv facadesoulLv_List = 1;
inline int Sheet_facadesoulLv::facadesoullv_list_size() const {
  return facadesoullv_list_.size();
}
inline void Sheet_facadesoulLv::clear_facadesoullv_list() {
  facadesoullv_list_.Clear();
}
inline const ::proto_ff::facadesoulLv& Sheet_facadesoulLv::facadesoullv_list(int index) const {
  return facadesoullv_list_.Get(index);
}
inline ::proto_ff::facadesoulLv* Sheet_facadesoulLv::mutable_facadesoullv_list(int index) {
  return facadesoullv_list_.Mutable(index);
}
inline ::proto_ff::facadesoulLv* Sheet_facadesoulLv::add_facadesoullv_list() {
  return facadesoullv_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulLv >&
Sheet_facadesoulLv::facadesoullv_list() const {
  return facadesoullv_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulLv >*
Sheet_facadesoulLv::mutable_facadesoullv_list() {
  return &facadesoullv_list_;
}

// -------------------------------------------------------------------

// facadesoulAchievement

// optional int64 id = 1;
inline bool facadesoulAchievement::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void facadesoulAchievement::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void facadesoulAchievement::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void facadesoulAchievement::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 facadesoulAchievement::id() const {
  return id_;
}
inline void facadesoulAchievement::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 soulID = 2;
inline bool facadesoulAchievement::has_soulid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void facadesoulAchievement::set_has_soulid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void facadesoulAchievement::clear_has_soulid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void facadesoulAchievement::clear_soulid() {
  soulid_ = 0;
  clear_has_soulid();
}
inline ::google::protobuf::int32 facadesoulAchievement::soulid() const {
  return soulid_;
}
inline void facadesoulAchievement::set_soulid(::google::protobuf::int32 value) {
  set_has_soulid();
  soulid_ = value;
}

// optional int32 type = 3;
inline bool facadesoulAchievement::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void facadesoulAchievement::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void facadesoulAchievement::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void facadesoulAchievement::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 facadesoulAchievement::type() const {
  return type_;
}
inline void facadesoulAchievement::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 parama = 4;
inline bool facadesoulAchievement::has_parama() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void facadesoulAchievement::set_has_parama() {
  _has_bits_[0] |= 0x00000008u;
}
inline void facadesoulAchievement::clear_has_parama() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void facadesoulAchievement::clear_parama() {
  parama_ = 0;
  clear_has_parama();
}
inline ::google::protobuf::int32 facadesoulAchievement::parama() const {
  return parama_;
}
inline void facadesoulAchievement::set_parama(::google::protobuf::int32 value) {
  set_has_parama();
  parama_ = value;
}

// optional int32 itemID = 5;
inline bool facadesoulAchievement::has_itemid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void facadesoulAchievement::set_has_itemid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void facadesoulAchievement::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void facadesoulAchievement::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 facadesoulAchievement::itemid() const {
  return itemid_;
}
inline void facadesoulAchievement::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 num = 6;
inline bool facadesoulAchievement::has_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void facadesoulAchievement::set_has_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void facadesoulAchievement::clear_has_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void facadesoulAchievement::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 facadesoulAchievement::num() const {
  return num_;
}
inline void facadesoulAchievement::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// Sheet_facadesoulAchievement

// repeated .proto_ff.facadesoulAchievement facadesoulAchievement_List = 1;
inline int Sheet_facadesoulAchievement::facadesoulachievement_list_size() const {
  return facadesoulachievement_list_.size();
}
inline void Sheet_facadesoulAchievement::clear_facadesoulachievement_list() {
  facadesoulachievement_list_.Clear();
}
inline const ::proto_ff::facadesoulAchievement& Sheet_facadesoulAchievement::facadesoulachievement_list(int index) const {
  return facadesoulachievement_list_.Get(index);
}
inline ::proto_ff::facadesoulAchievement* Sheet_facadesoulAchievement::mutable_facadesoulachievement_list(int index) {
  return facadesoulachievement_list_.Mutable(index);
}
inline ::proto_ff::facadesoulAchievement* Sheet_facadesoulAchievement::add_facadesoulachievement_list() {
  return facadesoulachievement_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulAchievement >&
Sheet_facadesoulAchievement::facadesoulachievement_list() const {
  return facadesoulachievement_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::facadesoulAchievement >*
Sheet_facadesoulAchievement::mutable_facadesoulachievement_list() {
  return &facadesoulachievement_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_facade_2eproto__INCLUDED
