// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Pet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Pet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* NotifyPetModuleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPetModuleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPetRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPetRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPetFetterRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPetFetterRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPetHatchRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPetHatchRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPetGetedListRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPetGetedListRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPetYaoHun_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPetYaoHun_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPetYaoHunSimple_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPetYaoHunSimple_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetLvUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetLvUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetLvUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetLvUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetStepLvReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetStepLvReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetStepLvRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetStepLvRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetStarLvReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetStarLvReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetStarLvRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetStarLvRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetFormationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetFormationReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetFormationRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetFormationRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetAddHatchReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetAddHatchReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetAddHatchRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetAddHatchRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetHatchUnlockReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetHatchUnlockReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetHatchUnlockRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetHatchUnlockRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetHatchEggReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetHatchEggReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetHatchEggRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetHatchEggRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetActiveFetterReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetActiveFetterReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetActiveFetterRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetActiveFetterRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetSkillLvReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetSkillLvReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetSkillLvRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetSkillLvRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRestReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRestReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRestRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRestRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetDecomposeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetDecomposeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetDecomposeRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetDecomposeRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetQuickHatchEggReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetQuickHatchEggReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetQuickHatchEggRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetQuickHatchEggRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRestReViewReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRestReViewReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRestReViewRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRestReViewRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPetGrow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPetGrow_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetGrowOptReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetGrowOptReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetGrowOptRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetGrowOptRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunUnlockReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunUnlockReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunUnlockRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunUnlockRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunDressReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunDressReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunDressRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunDressRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetLianYaoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetLianYaoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetLianYaoReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetLianYaoReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetLianYaoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetLianYaoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunExchangeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunExchangeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunExchangeRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunExchangeRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunLvReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunLvReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunLvRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunLvRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunBreakReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunBreakReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunBreakRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunBreakRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetLianYaoTqBuyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetLianYaoTqBuyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetLianYaoTqBuyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetLianYaoTqBuyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunSuitReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunSuitReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunSuitRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunSuitRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunResetReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunResetReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetYaoHunResetRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetYaoHunResetRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Pet_2eproto() {
  protobuf_AddDesc_Pet_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Pet.proto");
  GOOGLE_CHECK(file != NULL);
  NotifyPetModuleRsp_descriptor_ = file->message_type(0);
  static const int NotifyPetModuleRsp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetModuleRsp, fetter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetModuleRsp, pets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetModuleRsp, hatchs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetModuleRsp, cfgids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetModuleRsp, grows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetModuleRsp, yaohun_),
  };
  NotifyPetModuleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPetModuleRsp_descriptor_,
      NotifyPetModuleRsp::default_instance_,
      NotifyPetModuleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetModuleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetModuleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPetModuleRsp));
  NotifyPetRsp_descriptor_ = file->message_type(1);
  static const int NotifyPetRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetRsp, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetRsp, pets_),
  };
  NotifyPetRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPetRsp_descriptor_,
      NotifyPetRsp::default_instance_,
      NotifyPetRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPetRsp));
  NotifyPetFetterRsp_descriptor_ = file->message_type(2);
  static const int NotifyPetFetterRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetFetterRsp, fetter_),
  };
  NotifyPetFetterRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPetFetterRsp_descriptor_,
      NotifyPetFetterRsp::default_instance_,
      NotifyPetFetterRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetFetterRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetFetterRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPetFetterRsp));
  NotifyPetHatchRsp_descriptor_ = file->message_type(3);
  static const int NotifyPetHatchRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetHatchRsp, hatchs_),
  };
  NotifyPetHatchRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPetHatchRsp_descriptor_,
      NotifyPetHatchRsp::default_instance_,
      NotifyPetHatchRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetHatchRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetHatchRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPetHatchRsp));
  NotifyPetGetedListRsp_descriptor_ = file->message_type(4);
  static const int NotifyPetGetedListRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetGetedListRsp, cfgids_),
  };
  NotifyPetGetedListRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPetGetedListRsp_descriptor_,
      NotifyPetGetedListRsp::default_instance_,
      NotifyPetGetedListRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetGetedListRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetGetedListRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPetGetedListRsp));
  NotifyPetYaoHun_descriptor_ = file->message_type(5);
  static const int NotifyPetYaoHun_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetYaoHun, info_),
  };
  NotifyPetYaoHun_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPetYaoHun_descriptor_,
      NotifyPetYaoHun::default_instance_,
      NotifyPetYaoHun_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetYaoHun, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetYaoHun, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPetYaoHun));
  NotifyPetYaoHunSimple_descriptor_ = file->message_type(6);
  static const int NotifyPetYaoHunSimple_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetYaoHunSimple, lianyao_tq_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetYaoHunSimple, yaolu_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetYaoHunSimple, yaolu_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetYaoHunSimple, yaoqi_),
  };
  NotifyPetYaoHunSimple_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPetYaoHunSimple_descriptor_,
      NotifyPetYaoHunSimple::default_instance_,
      NotifyPetYaoHunSimple_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetYaoHunSimple, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetYaoHunSimple, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPetYaoHunSimple));
  PetLvUpReq_descriptor_ = file->message_type(7);
  static const int PetLvUpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLvUpReq, instid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLvUpReq, itemid_),
  };
  PetLvUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetLvUpReq_descriptor_,
      PetLvUpReq::default_instance_,
      PetLvUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLvUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLvUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetLvUpReq));
  PetLvUpRsp_descriptor_ = file->message_type(8);
  static const int PetLvUpRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLvUpRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLvUpRsp, instid_),
  };
  PetLvUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetLvUpRsp_descriptor_,
      PetLvUpRsp::default_instance_,
      PetLvUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLvUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLvUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetLvUpRsp));
  PetStepLvReq_descriptor_ = file->message_type(9);
  static const int PetStepLvReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStepLvReq, instid_),
  };
  PetStepLvReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetStepLvReq_descriptor_,
      PetStepLvReq::default_instance_,
      PetStepLvReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStepLvReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStepLvReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetStepLvReq));
  PetStepLvRsp_descriptor_ = file->message_type(10);
  static const int PetStepLvRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStepLvRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStepLvRsp, instid_),
  };
  PetStepLvRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetStepLvRsp_descriptor_,
      PetStepLvRsp::default_instance_,
      PetStepLvRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStepLvRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStepLvRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetStepLvRsp));
  PetStarLvReq_descriptor_ = file->message_type(11);
  static const int PetStarLvReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStarLvReq, instid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStarLvReq, costpetids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStarLvReq, iscostitem_),
  };
  PetStarLvReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetStarLvReq_descriptor_,
      PetStarLvReq::default_instance_,
      PetStarLvReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStarLvReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStarLvReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetStarLvReq));
  PetStarLvRsp_descriptor_ = file->message_type(12);
  static const int PetStarLvRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStarLvRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStarLvRsp, instid_),
  };
  PetStarLvRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetStarLvRsp_descriptor_,
      PetStarLvRsp::default_instance_,
      PetStarLvRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStarLvRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetStarLvRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetStarLvRsp));
  PetFormationReq_descriptor_ = file->message_type(13);
  static const int PetFormationReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationReq, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationReq, instid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationReq, slot_),
  };
  PetFormationReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetFormationReq_descriptor_,
      PetFormationReq::default_instance_,
      PetFormationReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetFormationReq));
  PetFormationRsp_descriptor_ = file->message_type(14);
  static const int PetFormationRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationRsp, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationRsp, instid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationRsp, slot_),
  };
  PetFormationRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetFormationRsp_descriptor_,
      PetFormationRsp::default_instance_,
      PetFormationRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetFormationRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetFormationRsp));
  PetAddHatchReq_descriptor_ = file->message_type(15);
  static const int PetAddHatchReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetAddHatchReq, pair_),
  };
  PetAddHatchReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetAddHatchReq_descriptor_,
      PetAddHatchReq::default_instance_,
      PetAddHatchReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetAddHatchReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetAddHatchReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetAddHatchReq));
  PetAddHatchRsp_descriptor_ = file->message_type(16);
  static const int PetAddHatchRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetAddHatchRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetAddHatchRsp, pair_),
  };
  PetAddHatchRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetAddHatchRsp_descriptor_,
      PetAddHatchRsp::default_instance_,
      PetAddHatchRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetAddHatchRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetAddHatchRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetAddHatchRsp));
  PetHatchUnlockReq_descriptor_ = file->message_type(17);
  static const int PetHatchUnlockReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchUnlockReq, slot_),
  };
  PetHatchUnlockReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetHatchUnlockReq_descriptor_,
      PetHatchUnlockReq::default_instance_,
      PetHatchUnlockReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchUnlockReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchUnlockReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetHatchUnlockReq));
  PetHatchUnlockRsp_descriptor_ = file->message_type(18);
  static const int PetHatchUnlockRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchUnlockRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchUnlockRsp, slot_),
  };
  PetHatchUnlockRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetHatchUnlockRsp_descriptor_,
      PetHatchUnlockRsp::default_instance_,
      PetHatchUnlockRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchUnlockRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchUnlockRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetHatchUnlockRsp));
  PetHatchEggReq_descriptor_ = file->message_type(19);
  static const int PetHatchEggReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchEggReq, slots_),
  };
  PetHatchEggReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetHatchEggReq_descriptor_,
      PetHatchEggReq::default_instance_,
      PetHatchEggReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchEggReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchEggReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetHatchEggReq));
  PetHatchEggRsp_descriptor_ = file->message_type(20);
  static const int PetHatchEggRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchEggRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchEggRsp, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchEggRsp, slot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchEggRsp, petinstids_),
  };
  PetHatchEggRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetHatchEggRsp_descriptor_,
      PetHatchEggRsp::default_instance_,
      PetHatchEggRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchEggRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetHatchEggRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetHatchEggRsp));
  PetActiveFetterReq_descriptor_ = file->message_type(21);
  static const int PetActiveFetterReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetActiveFetterReq, id_),
  };
  PetActiveFetterReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetActiveFetterReq_descriptor_,
      PetActiveFetterReq::default_instance_,
      PetActiveFetterReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetActiveFetterReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetActiveFetterReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetActiveFetterReq));
  PetActiveFetterRsp_descriptor_ = file->message_type(22);
  static const int PetActiveFetterRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetActiveFetterRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetActiveFetterRsp, id_),
  };
  PetActiveFetterRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetActiveFetterRsp_descriptor_,
      PetActiveFetterRsp::default_instance_,
      PetActiveFetterRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetActiveFetterRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetActiveFetterRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetActiveFetterRsp));
  PetSkillLvReq_descriptor_ = file->message_type(23);
  static const int PetSkillLvReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvReq, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvReq, instid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvReq, skill_id_),
  };
  PetSkillLvReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetSkillLvReq_descriptor_,
      PetSkillLvReq::default_instance_,
      PetSkillLvReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetSkillLvReq));
  PetSkillLvRsp_descriptor_ = file->message_type(24);
  static const int PetSkillLvRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvRsp, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvRsp, instid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvRsp, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvRsp, lv_),
  };
  PetSkillLvRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetSkillLvRsp_descriptor_,
      PetSkillLvRsp::default_instance_,
      PetSkillLvRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetSkillLvRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetSkillLvRsp));
  PetRestReq_descriptor_ = file->message_type(25);
  static const int PetRestReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReq, instid_),
  };
  PetRestReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRestReq_descriptor_,
      PetRestReq::default_instance_,
      PetRestReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRestReq));
  PetRestRsp_descriptor_ = file->message_type(26);
  static const int PetRestRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestRsp, instid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestRsp, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestRsp, pets_),
  };
  PetRestRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRestRsp_descriptor_,
      PetRestRsp::default_instance_,
      PetRestRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRestRsp));
  PetDecomposeReq_descriptor_ = file->message_type(27);
  static const int PetDecomposeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetDecomposeReq, instids_),
  };
  PetDecomposeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetDecomposeReq_descriptor_,
      PetDecomposeReq::default_instance_,
      PetDecomposeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetDecomposeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetDecomposeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetDecomposeReq));
  PetDecomposeRsp_descriptor_ = file->message_type(28);
  static const int PetDecomposeRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetDecomposeRsp, ret_),
  };
  PetDecomposeRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetDecomposeRsp_descriptor_,
      PetDecomposeRsp::default_instance_,
      PetDecomposeRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetDecomposeRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetDecomposeRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetDecomposeRsp));
  PetQuickHatchEggReq_descriptor_ = file->message_type(29);
  static const int PetQuickHatchEggReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetQuickHatchEggReq, slot_),
  };
  PetQuickHatchEggReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetQuickHatchEggReq_descriptor_,
      PetQuickHatchEggReq::default_instance_,
      PetQuickHatchEggReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetQuickHatchEggReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetQuickHatchEggReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetQuickHatchEggReq));
  PetQuickHatchEggRsp_descriptor_ = file->message_type(30);
  static const int PetQuickHatchEggRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetQuickHatchEggRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetQuickHatchEggRsp, slot_),
  };
  PetQuickHatchEggRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetQuickHatchEggRsp_descriptor_,
      PetQuickHatchEggRsp::default_instance_,
      PetQuickHatchEggRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetQuickHatchEggRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetQuickHatchEggRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetQuickHatchEggRsp));
  PetRestReViewReq_descriptor_ = file->message_type(31);
  static const int PetRestReViewReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReViewReq, instid_),
  };
  PetRestReViewReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRestReViewReq_descriptor_,
      PetRestReViewReq::default_instance_,
      PetRestReViewReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReViewReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReViewReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRestReViewReq));
  PetRestReViewRsp_descriptor_ = file->message_type(32);
  static const int PetRestReViewRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReViewRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReViewRsp, instid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReViewRsp, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReViewRsp, pets_),
  };
  PetRestReViewRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRestReViewRsp_descriptor_,
      PetRestReViewRsp::default_instance_,
      PetRestReViewRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReViewRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRestReViewRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRestReViewRsp));
  NotifyPetGrow_descriptor_ = file->message_type(33);
  static const int NotifyPetGrow_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetGrow, grows_),
  };
  NotifyPetGrow_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPetGrow_descriptor_,
      NotifyPetGrow::default_instance_,
      NotifyPetGrow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetGrow, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPetGrow, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPetGrow));
  PetGrowOptReq_descriptor_ = file->message_type(34);
  static const int PetGrowOptReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptReq, cfgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptReq, starindex_),
  };
  PetGrowOptReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetGrowOptReq_descriptor_,
      PetGrowOptReq::default_instance_,
      PetGrowOptReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetGrowOptReq));
  PetGrowOptRsp_descriptor_ = file->message_type(35);
  static const int PetGrowOptRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptRsp, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptRsp, cfgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptRsp, code_),
  };
  PetGrowOptRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetGrowOptRsp_descriptor_,
      PetGrowOptRsp::default_instance_,
      PetGrowOptRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetGrowOptRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetGrowOptRsp));
  PetYaoHunUnlockReq_descriptor_ = file->message_type(36);
  static const int PetYaoHunUnlockReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunUnlockReq, fight_pos_),
  };
  PetYaoHunUnlockReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunUnlockReq_descriptor_,
      PetYaoHunUnlockReq::default_instance_,
      PetYaoHunUnlockReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunUnlockReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunUnlockReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunUnlockReq));
  PetYaoHunUnlockRsp_descriptor_ = file->message_type(37);
  static const int PetYaoHunUnlockRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunUnlockRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunUnlockRsp, fight_pos_),
  };
  PetYaoHunUnlockRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunUnlockRsp_descriptor_,
      PetYaoHunUnlockRsp::default_instance_,
      PetYaoHunUnlockRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunUnlockRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunUnlockRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunUnlockRsp));
  PetYaoHunDressReq_descriptor_ = file->message_type(38);
  static const int PetYaoHunDressReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunDressReq, fight_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunDressReq, bag_pos_),
  };
  PetYaoHunDressReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunDressReq_descriptor_,
      PetYaoHunDressReq::default_instance_,
      PetYaoHunDressReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunDressReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunDressReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunDressReq));
  PetYaoHunDressRsp_descriptor_ = file->message_type(39);
  static const int PetYaoHunDressRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunDressRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunDressRsp, fight_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunDressRsp, bag_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunDressRsp, code_),
  };
  PetYaoHunDressRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunDressRsp_descriptor_,
      PetYaoHunDressRsp::default_instance_,
      PetYaoHunDressRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunDressRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunDressRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunDressRsp));
  PetLianYaoReq_descriptor_ = file->message_type(40);
  static const int PetLianYaoReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReq, lian_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReq, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReq, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReq, quick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReq, bag_pos_),
  };
  PetLianYaoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetLianYaoReq_descriptor_,
      PetLianYaoReq::default_instance_,
      PetLianYaoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetLianYaoReq));
  PetLianYaoReward_descriptor_ = file->message_type(41);
  static const int PetLianYaoReward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReward, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReward, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReward, tq_add_flag_),
  };
  PetLianYaoReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetLianYaoReward_descriptor_,
      PetLianYaoReward::default_instance_,
      PetLianYaoReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetLianYaoReward));
  PetLianYaoRsp_descriptor_ = file->message_type(42);
  static const int PetLianYaoRsp_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoRsp, rewards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoRsp, yaolu_add_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoRsp, yaolu_exp_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoRsp, yaohun_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoRsp, fin_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoRsp, fin_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoRsp, last_lv_),
  };
  PetLianYaoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetLianYaoRsp_descriptor_,
      PetLianYaoRsp::default_instance_,
      PetLianYaoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetLianYaoRsp));
  PetYaoHunExchangeReq_descriptor_ = file->message_type(43);
  static const int PetYaoHunExchangeReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunExchangeReq, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunExchangeReq, num_),
  };
  PetYaoHunExchangeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunExchangeReq_descriptor_,
      PetYaoHunExchangeReq::default_instance_,
      PetYaoHunExchangeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunExchangeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunExchangeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunExchangeReq));
  PetYaoHunExchangeRsp_descriptor_ = file->message_type(44);
  static const int PetYaoHunExchangeRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunExchangeRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunExchangeRsp, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunExchangeRsp, num_),
  };
  PetYaoHunExchangeRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunExchangeRsp_descriptor_,
      PetYaoHunExchangeRsp::default_instance_,
      PetYaoHunExchangeRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunExchangeRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunExchangeRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunExchangeRsp));
  PetYaoHunLvReq_descriptor_ = file->message_type(45);
  static const int PetYaoHunLvReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunLvReq, fight_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunLvReq, slot_pos_),
  };
  PetYaoHunLvReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunLvReq_descriptor_,
      PetYaoHunLvReq::default_instance_,
      PetYaoHunLvReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunLvReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunLvReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunLvReq));
  PetYaoHunLvRsp_descriptor_ = file->message_type(46);
  static const int PetYaoHunLvRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunLvRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunLvRsp, fight_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunLvRsp, slot_pos_),
  };
  PetYaoHunLvRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunLvRsp_descriptor_,
      PetYaoHunLvRsp::default_instance_,
      PetYaoHunLvRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunLvRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunLvRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunLvRsp));
  PetYaoHunBreakReq_descriptor_ = file->message_type(47);
  static const int PetYaoHunBreakReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunBreakReq, fight_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunBreakReq, slot_pos_),
  };
  PetYaoHunBreakReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunBreakReq_descriptor_,
      PetYaoHunBreakReq::default_instance_,
      PetYaoHunBreakReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunBreakReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunBreakReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunBreakReq));
  PetYaoHunBreakRsp_descriptor_ = file->message_type(48);
  static const int PetYaoHunBreakRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunBreakRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunBreakRsp, fight_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunBreakRsp, slot_pos_),
  };
  PetYaoHunBreakRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunBreakRsp_descriptor_,
      PetYaoHunBreakRsp::default_instance_,
      PetYaoHunBreakRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunBreakRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunBreakRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunBreakRsp));
  PetLianYaoTqBuyReq_descriptor_ = file->message_type(49);
  static const int PetLianYaoTqBuyReq_offsets_[1] = {
  };
  PetLianYaoTqBuyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetLianYaoTqBuyReq_descriptor_,
      PetLianYaoTqBuyReq::default_instance_,
      PetLianYaoTqBuyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoTqBuyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoTqBuyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetLianYaoTqBuyReq));
  PetLianYaoTqBuyRsp_descriptor_ = file->message_type(50);
  static const int PetLianYaoTqBuyRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoTqBuyRsp, ret_),
  };
  PetLianYaoTqBuyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetLianYaoTqBuyRsp_descriptor_,
      PetLianYaoTqBuyRsp::default_instance_,
      PetLianYaoTqBuyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoTqBuyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetLianYaoTqBuyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetLianYaoTqBuyRsp));
  PetYaoHunSuitReq_descriptor_ = file->message_type(51);
  static const int PetYaoHunSuitReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunSuitReq, fight_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunSuitReq, suit_id_),
  };
  PetYaoHunSuitReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunSuitReq_descriptor_,
      PetYaoHunSuitReq::default_instance_,
      PetYaoHunSuitReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunSuitReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunSuitReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunSuitReq));
  PetYaoHunSuitRsp_descriptor_ = file->message_type(52);
  static const int PetYaoHunSuitRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunSuitRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunSuitRsp, fight_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunSuitRsp, suit_id_),
  };
  PetYaoHunSuitRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunSuitRsp_descriptor_,
      PetYaoHunSuitRsp::default_instance_,
      PetYaoHunSuitRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunSuitRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunSuitRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunSuitRsp));
  PetYaoHunResetReq_descriptor_ = file->message_type(53);
  static const int PetYaoHunResetReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunResetReq, bag_pos_),
  };
  PetYaoHunResetReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunResetReq_descriptor_,
      PetYaoHunResetReq::default_instance_,
      PetYaoHunResetReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunResetReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunResetReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunResetReq));
  PetYaoHunResetRsp_descriptor_ = file->message_type(54);
  static const int PetYaoHunResetRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunResetRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunResetRsp, bag_pos_),
  };
  PetYaoHunResetRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetYaoHunResetRsp_descriptor_,
      PetYaoHunResetRsp::default_instance_,
      PetYaoHunResetRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunResetRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetYaoHunResetRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetYaoHunResetRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Pet_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPetModuleRsp_descriptor_, &NotifyPetModuleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPetRsp_descriptor_, &NotifyPetRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPetFetterRsp_descriptor_, &NotifyPetFetterRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPetHatchRsp_descriptor_, &NotifyPetHatchRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPetGetedListRsp_descriptor_, &NotifyPetGetedListRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPetYaoHun_descriptor_, &NotifyPetYaoHun::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPetYaoHunSimple_descriptor_, &NotifyPetYaoHunSimple::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetLvUpReq_descriptor_, &PetLvUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetLvUpRsp_descriptor_, &PetLvUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetStepLvReq_descriptor_, &PetStepLvReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetStepLvRsp_descriptor_, &PetStepLvRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetStarLvReq_descriptor_, &PetStarLvReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetStarLvRsp_descriptor_, &PetStarLvRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetFormationReq_descriptor_, &PetFormationReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetFormationRsp_descriptor_, &PetFormationRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetAddHatchReq_descriptor_, &PetAddHatchReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetAddHatchRsp_descriptor_, &PetAddHatchRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetHatchUnlockReq_descriptor_, &PetHatchUnlockReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetHatchUnlockRsp_descriptor_, &PetHatchUnlockRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetHatchEggReq_descriptor_, &PetHatchEggReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetHatchEggRsp_descriptor_, &PetHatchEggRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetActiveFetterReq_descriptor_, &PetActiveFetterReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetActiveFetterRsp_descriptor_, &PetActiveFetterRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetSkillLvReq_descriptor_, &PetSkillLvReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetSkillLvRsp_descriptor_, &PetSkillLvRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRestReq_descriptor_, &PetRestReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRestRsp_descriptor_, &PetRestRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetDecomposeReq_descriptor_, &PetDecomposeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetDecomposeRsp_descriptor_, &PetDecomposeRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetQuickHatchEggReq_descriptor_, &PetQuickHatchEggReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetQuickHatchEggRsp_descriptor_, &PetQuickHatchEggRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRestReViewReq_descriptor_, &PetRestReViewReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRestReViewRsp_descriptor_, &PetRestReViewRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPetGrow_descriptor_, &NotifyPetGrow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetGrowOptReq_descriptor_, &PetGrowOptReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetGrowOptRsp_descriptor_, &PetGrowOptRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunUnlockReq_descriptor_, &PetYaoHunUnlockReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunUnlockRsp_descriptor_, &PetYaoHunUnlockRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunDressReq_descriptor_, &PetYaoHunDressReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunDressRsp_descriptor_, &PetYaoHunDressRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetLianYaoReq_descriptor_, &PetLianYaoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetLianYaoReward_descriptor_, &PetLianYaoReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetLianYaoRsp_descriptor_, &PetLianYaoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunExchangeReq_descriptor_, &PetYaoHunExchangeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunExchangeRsp_descriptor_, &PetYaoHunExchangeRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunLvReq_descriptor_, &PetYaoHunLvReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunLvRsp_descriptor_, &PetYaoHunLvRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunBreakReq_descriptor_, &PetYaoHunBreakReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunBreakRsp_descriptor_, &PetYaoHunBreakRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetLianYaoTqBuyReq_descriptor_, &PetLianYaoTqBuyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetLianYaoTqBuyRsp_descriptor_, &PetLianYaoTqBuyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunSuitReq_descriptor_, &PetYaoHunSuitReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunSuitRsp_descriptor_, &PetYaoHunSuitRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunResetReq_descriptor_, &PetYaoHunResetReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetYaoHunResetRsp_descriptor_, &PetYaoHunResetRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Pet_2eproto() {
  delete NotifyPetModuleRsp::default_instance_;
  delete NotifyPetModuleRsp_reflection_;
  delete NotifyPetRsp::default_instance_;
  delete NotifyPetRsp_reflection_;
  delete NotifyPetFetterRsp::default_instance_;
  delete NotifyPetFetterRsp_reflection_;
  delete NotifyPetHatchRsp::default_instance_;
  delete NotifyPetHatchRsp_reflection_;
  delete NotifyPetGetedListRsp::default_instance_;
  delete NotifyPetGetedListRsp_reflection_;
  delete NotifyPetYaoHun::default_instance_;
  delete NotifyPetYaoHun_reflection_;
  delete NotifyPetYaoHunSimple::default_instance_;
  delete NotifyPetYaoHunSimple_reflection_;
  delete PetLvUpReq::default_instance_;
  delete PetLvUpReq_reflection_;
  delete PetLvUpRsp::default_instance_;
  delete PetLvUpRsp_reflection_;
  delete PetStepLvReq::default_instance_;
  delete PetStepLvReq_reflection_;
  delete PetStepLvRsp::default_instance_;
  delete PetStepLvRsp_reflection_;
  delete PetStarLvReq::default_instance_;
  delete PetStarLvReq_reflection_;
  delete PetStarLvRsp::default_instance_;
  delete PetStarLvRsp_reflection_;
  delete PetFormationReq::default_instance_;
  delete PetFormationReq_reflection_;
  delete PetFormationRsp::default_instance_;
  delete PetFormationRsp_reflection_;
  delete PetAddHatchReq::default_instance_;
  delete PetAddHatchReq_reflection_;
  delete PetAddHatchRsp::default_instance_;
  delete PetAddHatchRsp_reflection_;
  delete PetHatchUnlockReq::default_instance_;
  delete PetHatchUnlockReq_reflection_;
  delete PetHatchUnlockRsp::default_instance_;
  delete PetHatchUnlockRsp_reflection_;
  delete PetHatchEggReq::default_instance_;
  delete PetHatchEggReq_reflection_;
  delete PetHatchEggRsp::default_instance_;
  delete PetHatchEggRsp_reflection_;
  delete PetActiveFetterReq::default_instance_;
  delete PetActiveFetterReq_reflection_;
  delete PetActiveFetterRsp::default_instance_;
  delete PetActiveFetterRsp_reflection_;
  delete PetSkillLvReq::default_instance_;
  delete PetSkillLvReq_reflection_;
  delete PetSkillLvRsp::default_instance_;
  delete PetSkillLvRsp_reflection_;
  delete PetRestReq::default_instance_;
  delete PetRestReq_reflection_;
  delete PetRestRsp::default_instance_;
  delete PetRestRsp_reflection_;
  delete PetDecomposeReq::default_instance_;
  delete PetDecomposeReq_reflection_;
  delete PetDecomposeRsp::default_instance_;
  delete PetDecomposeRsp_reflection_;
  delete PetQuickHatchEggReq::default_instance_;
  delete PetQuickHatchEggReq_reflection_;
  delete PetQuickHatchEggRsp::default_instance_;
  delete PetQuickHatchEggRsp_reflection_;
  delete PetRestReViewReq::default_instance_;
  delete PetRestReViewReq_reflection_;
  delete PetRestReViewRsp::default_instance_;
  delete PetRestReViewRsp_reflection_;
  delete NotifyPetGrow::default_instance_;
  delete NotifyPetGrow_reflection_;
  delete PetGrowOptReq::default_instance_;
  delete PetGrowOptReq_reflection_;
  delete PetGrowOptRsp::default_instance_;
  delete PetGrowOptRsp_reflection_;
  delete PetYaoHunUnlockReq::default_instance_;
  delete PetYaoHunUnlockReq_reflection_;
  delete PetYaoHunUnlockRsp::default_instance_;
  delete PetYaoHunUnlockRsp_reflection_;
  delete PetYaoHunDressReq::default_instance_;
  delete PetYaoHunDressReq_reflection_;
  delete PetYaoHunDressRsp::default_instance_;
  delete PetYaoHunDressRsp_reflection_;
  delete PetLianYaoReq::default_instance_;
  delete PetLianYaoReq_reflection_;
  delete PetLianYaoReward::default_instance_;
  delete PetLianYaoReward_reflection_;
  delete PetLianYaoRsp::default_instance_;
  delete PetLianYaoRsp_reflection_;
  delete PetYaoHunExchangeReq::default_instance_;
  delete PetYaoHunExchangeReq_reflection_;
  delete PetYaoHunExchangeRsp::default_instance_;
  delete PetYaoHunExchangeRsp_reflection_;
  delete PetYaoHunLvReq::default_instance_;
  delete PetYaoHunLvReq_reflection_;
  delete PetYaoHunLvRsp::default_instance_;
  delete PetYaoHunLvRsp_reflection_;
  delete PetYaoHunBreakReq::default_instance_;
  delete PetYaoHunBreakReq_reflection_;
  delete PetYaoHunBreakRsp::default_instance_;
  delete PetYaoHunBreakRsp_reflection_;
  delete PetLianYaoTqBuyReq::default_instance_;
  delete PetLianYaoTqBuyReq_reflection_;
  delete PetLianYaoTqBuyRsp::default_instance_;
  delete PetLianYaoTqBuyRsp_reflection_;
  delete PetYaoHunSuitReq::default_instance_;
  delete PetYaoHunSuitReq_reflection_;
  delete PetYaoHunSuitRsp::default_instance_;
  delete PetYaoHunSuitRsp_reflection_;
  delete PetYaoHunResetReq::default_instance_;
  delete PetYaoHunResetReq_reflection_;
  delete PetYaoHunResetRsp::default_instance_;
  delete PetYaoHunResetRsp_reflection_;
}

void protobuf_AddDesc_Pet_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::proto_ff::protobuf_AddDesc_ComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tPet.proto\022\010proto_ff\032\tCom.proto\032\017ComDef"
    "ine.proto\"\312\001\n\022NotifyPetModuleRsp\022\016\n\006fett"
    "er\030\001 \003(\005\022\037\n\004pets\030\002 \003(\0132\021.proto_ff.PetInf"
    "o\022&\n\006hatchs\030\003 \003(\0132\026.proto_ff.PetHatchInf"
    "o\022\016\n\006cfgids\030\004 \003(\003\022 \n\005grows\030\005 \003(\0132\021.proto"
    "_ff.PetGrow\022)\n\006yaohun\030\006 \001(\0132\031.proto_ff.P"
    "etYaoHunModule\"<\n\014NotifyPetRsp\022\013\n\003opt\030\001 "
    "\001(\005\022\037\n\004pets\030\002 \003(\0132\021.proto_ff.PetInfo\"$\n\022"
    "NotifyPetFetterRsp\022\016\n\006fetter\030\001 \003(\005\";\n\021No"
    "tifyPetHatchRsp\022&\n\006hatchs\030\001 \003(\0132\026.proto_"
    "ff.PetHatchInfo\"\'\n\025NotifyPetGetedListRsp"
    "\022\016\n\006cfgids\030\001 \003(\003\"9\n\017NotifyPetYaoHun\022&\n\004i"
    "nfo\030\001 \001(\0132\030.proto_ff.PetYaoHunEntry\"d\n\025N"
    "otifyPetYaoHunSimple\022\027\n\017lianyao_tq_flag\030"
    "\002 \001(\005\022\020\n\010yaolu_lv\030\003 \001(\005\022\021\n\tyaolu_exp\030\004 \001"
    "(\005\022\r\n\005yaoqi\030\005 \001(\005\",\n\nPetLvUpReq\022\016\n\006instI"
    "d\030\001 \001(\005\022\016\n\006itemid\030\002 \001(\003\")\n\nPetLvUpRsp\022\013\n"
    "\003ret\030\001 \001(\005\022\016\n\006instId\030\002 \001(\005\"\036\n\014PetStepLvR"
    "eq\022\016\n\006instId\030\001 \001(\005\"+\n\014PetStepLvRsp\022\013\n\003re"
    "t\030\001 \001(\005\022\016\n\006instId\030\002 \001(\005\"F\n\014PetStarLvReq\022"
    "\016\n\006instId\030\001 \001(\005\022\022\n\ncostPetIds\030\002 \003(\005\022\022\n\ni"
    "sCostItem\030\003 \001(\005\"+\n\014PetStarLvRsp\022\013\n\003ret\030\001"
    " \001(\005\022\016\n\006instId\030\002 \001(\005\"<\n\017PetFormationReq\022"
    "\013\n\003opt\030\001 \001(\005\022\016\n\006instId\030\002 \001(\005\022\014\n\004slot\030\003 \001"
    "(\005\"I\n\017PetFormationRsp\022\013\n\003ret\030\001 \001(\005\022\013\n\003op"
    "t\030\002 \001(\005\022\016\n\006instId\030\003 \001(\005\022\014\n\004slot\030\004 \001(\005\"1\n"
    "\016PetAddHatchReq\022\037\n\004pair\030\001 \003(\0132\021.proto_ff"
    ".ComPair\">\n\016PetAddHatchRsp\022\013\n\003ret\030\001 \001(\005\022"
    "\037\n\004pair\030\002 \003(\0132\021.proto_ff.ComPair\"!\n\021PetH"
    "atchUnlockReq\022\014\n\004slot\030\001 \001(\005\".\n\021PetHatchU"
    "nlockRsp\022\013\n\003ret\030\001 \001(\005\022\014\n\004slot\030\002 \001(\005\"\037\n\016P"
    "etHatchEggReq\022\r\n\005slots\030\001 \003(\005\"L\n\016PetHatch"
    "EggRsp\022\013\n\003ret\030\001 \001(\005\022\013\n\003opt\030\002 \001(\005\022\014\n\004slot"
    "\030\003 \003(\005\022\022\n\npetInstIds\030\004 \003(\005\" \n\022PetActiveF"
    "etterReq\022\n\n\002id\030\001 \001(\005\"-\n\022PetActiveFetterR"
    "sp\022\013\n\003ret\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\">\n\rPetSkillL"
    "vReq\022\013\n\003opt\030\001 \001(\005\022\016\n\006instId\030\002 \001(\005\022\020\n\010ski"
    "ll_id\030\003 \001(\005\"W\n\rPetSkillLvRsp\022\013\n\003ret\030\001 \001("
    "\005\022\013\n\003opt\030\002 \001(\005\022\016\n\006instId\030\003 \001(\005\022\020\n\010skill_"
    "id\030\004 \001(\005\022\n\n\002lv\030\005 \001(\005\"\034\n\nPetRestReq\022\016\n\006in"
    "stId\030\001 \001(\005\"p\n\nPetRestRsp\022\013\n\003ret\030\001 \001(\005\022\016\n"
    "\006instId\030\002 \001(\005\022\"\n\005items\030\003 \003(\0132\023.proto_ff."
    "ComPair64\022!\n\004pets\030\004 \003(\0132\023.proto_ff.ComPa"
    "ir64\"\"\n\017PetDecomposeReq\022\017\n\007instIds\030\001 \003(\005"
    "\"\036\n\017PetDecomposeRsp\022\013\n\003ret\030\001 \001(\005\"#\n\023PetQ"
    "uickHatchEggReq\022\014\n\004slot\030\001 \001(\005\"0\n\023PetQuic"
    "kHatchEggRsp\022\013\n\003ret\030\001 \001(\005\022\014\n\004slot\030\002 \001(\005\""
    "\"\n\020PetRestReViewReq\022\016\n\006instId\030\001 \001(\005\"v\n\020P"
    "etRestReViewRsp\022\013\n\003ret\030\001 \001(\005\022\016\n\006instId\030\002"
    " \001(\005\022\"\n\005items\030\003 \003(\0132\023.proto_ff.ComPair64"
    "\022!\n\004pets\030\004 \003(\0132\023.proto_ff.ComPair64\"1\n\rN"
    "otifyPetGrow\022 \n\005grows\030\001 \003(\0132\021.proto_ff.P"
    "etGrow\"\?\n\rPetGrowOptReq\022\014\n\004type\030\001 \001(\005\022\r\n"
    "\005cfgid\030\002 \001(\005\022\021\n\tstarindex\030\003 \001(\005\"G\n\rPetGr"
    "owOptRsp\022\013\n\003ret\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\022\r\n\005c"
    "fgid\030\003 \001(\005\022\014\n\004code\030\004 \001(\005\"\'\n\022PetYaoHunUnl"
    "ockReq\022\021\n\tfight_pos\030\001 \001(\005\"4\n\022PetYaoHunUn"
    "lockRsp\022\013\n\003ret\030\001 \001(\005\022\021\n\tfight_pos\030\002 \001(\005\""
    "7\n\021PetYaoHunDressReq\022\021\n\tfight_pos\030\001 \001(\005\022"
    "\017\n\007bag_pos\030\002 \001(\005\"R\n\021PetYaoHunDressRsp\022\013\n"
    "\003ret\030\001 \001(\005\022\021\n\tfight_pos\030\002 \001(\005\022\017\n\007bag_pos"
    "\030\003 \001(\005\022\014\n\004code\030\004 \001(\005\"`\n\rPetLianYaoReq\022\020\n"
    "\010lian_num\030\001 \001(\005\022\017\n\007quality\030\002 \001(\005\022\014\n\004star"
    "\030\003 \001(\005\022\r\n\005quick\030\004 \001(\005\022\017\n\007bag_pos\030\005 \003(\005\"D"
    "\n\020PetLianYaoReward\022\016\n\006itemid\030\001 \001(\005\022\013\n\003nu"
    "m\030\002 \001(\005\022\023\n\013tq_add_flag\030\003 \001(\005\"\276\001\n\rPetLian"
    "YaoRsp\022\013\n\003ret\030\001 \001(\005\022+\n\007rewards\030\002 \003(\0132\032.p"
    "roto_ff.PetLianYaoReward\022\025\n\ryaolu_add_ex"
    "p\030\003 \001(\005\022\026\n\016yaolu_exp_flag\030\004 \001(\005\022\022\n\nyaohu"
    "n_add\030\005 \001(\005\022\017\n\007fin_exp\030\006 \001(\005\022\016\n\006fin_lv\030\007"
    " \001(\005\022\017\n\007last_lv\030\010 \001(\005\"6\n\024PetYaoHunExchan"
    "geReq\022\021\n\ttarget_id\030\001 \001(\005\022\013\n\003num\030\002 \001(\005\"C\n"
    "\024PetYaoHunExchangeRsp\022\013\n\003ret\030\001 \001(\005\022\021\n\tta"
    "rget_id\030\002 \001(\005\022\013\n\003num\030\003 \001(\005\"5\n\016PetYaoHunL"
    "vReq\022\021\n\tfight_pos\030\001 \001(\005\022\020\n\010slot_pos\030\002 \001("
    "\005\"B\n\016PetYaoHunLvRsp\022\013\n\003ret\030\001 \001(\005\022\021\n\tfigh"
    "t_pos\030\002 \001(\005\022\020\n\010slot_pos\030\003 \001(\005\"8\n\021PetYaoH"
    "unBreakReq\022\021\n\tfight_pos\030\001 \001(\005\022\020\n\010slot_po"
    "s\030\002 \001(\005\"E\n\021PetYaoHunBreakRsp\022\013\n\003ret\030\001 \001("
    "\005\022\021\n\tfight_pos\030\002 \001(\005\022\020\n\010slot_pos\030\003 \001(\005\"\024"
    "\n\022PetLianYaoTqBuyReq\"!\n\022PetLianYaoTqBuyR"
    "sp\022\013\n\003ret\030\001 \001(\005\"6\n\020PetYaoHunSuitReq\022\021\n\tf"
    "ight_pos\030\001 \001(\005\022\017\n\007suit_id\030\002 \001(\005\"C\n\020PetYa"
    "oHunSuitRsp\022\013\n\003ret\030\001 \001(\005\022\021\n\tfight_pos\030\002 "
    "\001(\005\022\017\n\007suit_id\030\003 \001(\005\"$\n\021PetYaoHunResetRe"
    "q\022\017\n\007bag_pos\030\001 \001(\005\"1\n\021PetYaoHunResetRsp\022"
    "\013\n\003ret\030\001 \001(\005\022\017\n\007bag_pos\030\002 \001(\005", 3469);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Pet.proto", &protobuf_RegisterTypes);
  NotifyPetModuleRsp::default_instance_ = new NotifyPetModuleRsp();
  NotifyPetRsp::default_instance_ = new NotifyPetRsp();
  NotifyPetFetterRsp::default_instance_ = new NotifyPetFetterRsp();
  NotifyPetHatchRsp::default_instance_ = new NotifyPetHatchRsp();
  NotifyPetGetedListRsp::default_instance_ = new NotifyPetGetedListRsp();
  NotifyPetYaoHun::default_instance_ = new NotifyPetYaoHun();
  NotifyPetYaoHunSimple::default_instance_ = new NotifyPetYaoHunSimple();
  PetLvUpReq::default_instance_ = new PetLvUpReq();
  PetLvUpRsp::default_instance_ = new PetLvUpRsp();
  PetStepLvReq::default_instance_ = new PetStepLvReq();
  PetStepLvRsp::default_instance_ = new PetStepLvRsp();
  PetStarLvReq::default_instance_ = new PetStarLvReq();
  PetStarLvRsp::default_instance_ = new PetStarLvRsp();
  PetFormationReq::default_instance_ = new PetFormationReq();
  PetFormationRsp::default_instance_ = new PetFormationRsp();
  PetAddHatchReq::default_instance_ = new PetAddHatchReq();
  PetAddHatchRsp::default_instance_ = new PetAddHatchRsp();
  PetHatchUnlockReq::default_instance_ = new PetHatchUnlockReq();
  PetHatchUnlockRsp::default_instance_ = new PetHatchUnlockRsp();
  PetHatchEggReq::default_instance_ = new PetHatchEggReq();
  PetHatchEggRsp::default_instance_ = new PetHatchEggRsp();
  PetActiveFetterReq::default_instance_ = new PetActiveFetterReq();
  PetActiveFetterRsp::default_instance_ = new PetActiveFetterRsp();
  PetSkillLvReq::default_instance_ = new PetSkillLvReq();
  PetSkillLvRsp::default_instance_ = new PetSkillLvRsp();
  PetRestReq::default_instance_ = new PetRestReq();
  PetRestRsp::default_instance_ = new PetRestRsp();
  PetDecomposeReq::default_instance_ = new PetDecomposeReq();
  PetDecomposeRsp::default_instance_ = new PetDecomposeRsp();
  PetQuickHatchEggReq::default_instance_ = new PetQuickHatchEggReq();
  PetQuickHatchEggRsp::default_instance_ = new PetQuickHatchEggRsp();
  PetRestReViewReq::default_instance_ = new PetRestReViewReq();
  PetRestReViewRsp::default_instance_ = new PetRestReViewRsp();
  NotifyPetGrow::default_instance_ = new NotifyPetGrow();
  PetGrowOptReq::default_instance_ = new PetGrowOptReq();
  PetGrowOptRsp::default_instance_ = new PetGrowOptRsp();
  PetYaoHunUnlockReq::default_instance_ = new PetYaoHunUnlockReq();
  PetYaoHunUnlockRsp::default_instance_ = new PetYaoHunUnlockRsp();
  PetYaoHunDressReq::default_instance_ = new PetYaoHunDressReq();
  PetYaoHunDressRsp::default_instance_ = new PetYaoHunDressRsp();
  PetLianYaoReq::default_instance_ = new PetLianYaoReq();
  PetLianYaoReward::default_instance_ = new PetLianYaoReward();
  PetLianYaoRsp::default_instance_ = new PetLianYaoRsp();
  PetYaoHunExchangeReq::default_instance_ = new PetYaoHunExchangeReq();
  PetYaoHunExchangeRsp::default_instance_ = new PetYaoHunExchangeRsp();
  PetYaoHunLvReq::default_instance_ = new PetYaoHunLvReq();
  PetYaoHunLvRsp::default_instance_ = new PetYaoHunLvRsp();
  PetYaoHunBreakReq::default_instance_ = new PetYaoHunBreakReq();
  PetYaoHunBreakRsp::default_instance_ = new PetYaoHunBreakRsp();
  PetLianYaoTqBuyReq::default_instance_ = new PetLianYaoTqBuyReq();
  PetLianYaoTqBuyRsp::default_instance_ = new PetLianYaoTqBuyRsp();
  PetYaoHunSuitReq::default_instance_ = new PetYaoHunSuitReq();
  PetYaoHunSuitRsp::default_instance_ = new PetYaoHunSuitRsp();
  PetYaoHunResetReq::default_instance_ = new PetYaoHunResetReq();
  PetYaoHunResetRsp::default_instance_ = new PetYaoHunResetRsp();
  NotifyPetModuleRsp::default_instance_->InitAsDefaultInstance();
  NotifyPetRsp::default_instance_->InitAsDefaultInstance();
  NotifyPetFetterRsp::default_instance_->InitAsDefaultInstance();
  NotifyPetHatchRsp::default_instance_->InitAsDefaultInstance();
  NotifyPetGetedListRsp::default_instance_->InitAsDefaultInstance();
  NotifyPetYaoHun::default_instance_->InitAsDefaultInstance();
  NotifyPetYaoHunSimple::default_instance_->InitAsDefaultInstance();
  PetLvUpReq::default_instance_->InitAsDefaultInstance();
  PetLvUpRsp::default_instance_->InitAsDefaultInstance();
  PetStepLvReq::default_instance_->InitAsDefaultInstance();
  PetStepLvRsp::default_instance_->InitAsDefaultInstance();
  PetStarLvReq::default_instance_->InitAsDefaultInstance();
  PetStarLvRsp::default_instance_->InitAsDefaultInstance();
  PetFormationReq::default_instance_->InitAsDefaultInstance();
  PetFormationRsp::default_instance_->InitAsDefaultInstance();
  PetAddHatchReq::default_instance_->InitAsDefaultInstance();
  PetAddHatchRsp::default_instance_->InitAsDefaultInstance();
  PetHatchUnlockReq::default_instance_->InitAsDefaultInstance();
  PetHatchUnlockRsp::default_instance_->InitAsDefaultInstance();
  PetHatchEggReq::default_instance_->InitAsDefaultInstance();
  PetHatchEggRsp::default_instance_->InitAsDefaultInstance();
  PetActiveFetterReq::default_instance_->InitAsDefaultInstance();
  PetActiveFetterRsp::default_instance_->InitAsDefaultInstance();
  PetSkillLvReq::default_instance_->InitAsDefaultInstance();
  PetSkillLvRsp::default_instance_->InitAsDefaultInstance();
  PetRestReq::default_instance_->InitAsDefaultInstance();
  PetRestRsp::default_instance_->InitAsDefaultInstance();
  PetDecomposeReq::default_instance_->InitAsDefaultInstance();
  PetDecomposeRsp::default_instance_->InitAsDefaultInstance();
  PetQuickHatchEggReq::default_instance_->InitAsDefaultInstance();
  PetQuickHatchEggRsp::default_instance_->InitAsDefaultInstance();
  PetRestReViewReq::default_instance_->InitAsDefaultInstance();
  PetRestReViewRsp::default_instance_->InitAsDefaultInstance();
  NotifyPetGrow::default_instance_->InitAsDefaultInstance();
  PetGrowOptReq::default_instance_->InitAsDefaultInstance();
  PetGrowOptRsp::default_instance_->InitAsDefaultInstance();
  PetYaoHunUnlockReq::default_instance_->InitAsDefaultInstance();
  PetYaoHunUnlockRsp::default_instance_->InitAsDefaultInstance();
  PetYaoHunDressReq::default_instance_->InitAsDefaultInstance();
  PetYaoHunDressRsp::default_instance_->InitAsDefaultInstance();
  PetLianYaoReq::default_instance_->InitAsDefaultInstance();
  PetLianYaoReward::default_instance_->InitAsDefaultInstance();
  PetLianYaoRsp::default_instance_->InitAsDefaultInstance();
  PetYaoHunExchangeReq::default_instance_->InitAsDefaultInstance();
  PetYaoHunExchangeRsp::default_instance_->InitAsDefaultInstance();
  PetYaoHunLvReq::default_instance_->InitAsDefaultInstance();
  PetYaoHunLvRsp::default_instance_->InitAsDefaultInstance();
  PetYaoHunBreakReq::default_instance_->InitAsDefaultInstance();
  PetYaoHunBreakRsp::default_instance_->InitAsDefaultInstance();
  PetLianYaoTqBuyReq::default_instance_->InitAsDefaultInstance();
  PetLianYaoTqBuyRsp::default_instance_->InitAsDefaultInstance();
  PetYaoHunSuitReq::default_instance_->InitAsDefaultInstance();
  PetYaoHunSuitRsp::default_instance_->InitAsDefaultInstance();
  PetYaoHunResetReq::default_instance_->InitAsDefaultInstance();
  PetYaoHunResetRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Pet_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Pet_2eproto {
  StaticDescriptorInitializer_Pet_2eproto() {
    protobuf_AddDesc_Pet_2eproto();
  }
} static_descriptor_initializer_Pet_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int NotifyPetModuleRsp::kFetterFieldNumber;
const int NotifyPetModuleRsp::kPetsFieldNumber;
const int NotifyPetModuleRsp::kHatchsFieldNumber;
const int NotifyPetModuleRsp::kCfgidsFieldNumber;
const int NotifyPetModuleRsp::kGrowsFieldNumber;
const int NotifyPetModuleRsp::kYaohunFieldNumber;
#endif  // !_MSC_VER

NotifyPetModuleRsp::NotifyPetModuleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyPetModuleRsp::InitAsDefaultInstance() {
  yaohun_ = const_cast< ::proto_ff::PetYaoHunModule*>(&::proto_ff::PetYaoHunModule::default_instance());
}

NotifyPetModuleRsp::NotifyPetModuleRsp(const NotifyPetModuleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyPetModuleRsp::SharedCtor() {
  _cached_size_ = 0;
  yaohun_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPetModuleRsp::~NotifyPetModuleRsp() {
  SharedDtor();
}

void NotifyPetModuleRsp::SharedDtor() {
  if (this != default_instance_) {
    delete yaohun_;
  }
}

void NotifyPetModuleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPetModuleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPetModuleRsp_descriptor_;
}

const NotifyPetModuleRsp& NotifyPetModuleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

NotifyPetModuleRsp* NotifyPetModuleRsp::default_instance_ = NULL;

NotifyPetModuleRsp* NotifyPetModuleRsp::New() const {
  return new NotifyPetModuleRsp;
}

void NotifyPetModuleRsp::Clear() {
  if (_has_bits_[5 / 32] & (0xffu << (5 % 32))) {
    if (has_yaohun()) {
      if (yaohun_ != NULL) yaohun_->::proto_ff::PetYaoHunModule::Clear();
    }
  }
  fetter_.Clear();
  pets_.Clear();
  hatchs_.Clear();
  cfgids_.Clear();
  grows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPetModuleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 fetter = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fetter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_fetter())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fetter())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_fetter;
        if (input->ExpectTag(18)) goto parse_pets;
        break;
      }

      // repeated .proto_ff.PetInfo pets = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pets()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_pets;
        if (input->ExpectTag(26)) goto parse_hatchs;
        break;
      }

      // repeated .proto_ff.PetHatchInfo hatchs = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hatchs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hatchs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_hatchs;
        if (input->ExpectTag(32)) goto parse_cfgids;
        break;
      }

      // repeated int64 cfgids = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cfgids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_cfgids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_cfgids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cfgids;
        if (input->ExpectTag(42)) goto parse_grows;
        break;
      }

      // repeated .proto_ff.PetGrow grows = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_grows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grows()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_grows;
        if (input->ExpectTag(50)) goto parse_yaohun;
        break;
      }

      // optional .proto_ff.PetYaoHunModule yaohun = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_yaohun:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yaohun()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyPetModuleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 fetter = 1;
  for (int i = 0; i < this->fetter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->fetter(i), output);
  }

  // repeated .proto_ff.PetInfo pets = 2;
  for (int i = 0; i < this->pets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pets(i), output);
  }

  // repeated .proto_ff.PetHatchInfo hatchs = 3;
  for (int i = 0; i < this->hatchs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->hatchs(i), output);
  }

  // repeated int64 cfgids = 4;
  for (int i = 0; i < this->cfgids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->cfgids(i), output);
  }

  // repeated .proto_ff.PetGrow grows = 5;
  for (int i = 0; i < this->grows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->grows(i), output);
  }

  // optional .proto_ff.PetYaoHunModule yaohun = 6;
  if (has_yaohun()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->yaohun(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyPetModuleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 fetter = 1;
  for (int i = 0; i < this->fetter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->fetter(i), target);
  }

  // repeated .proto_ff.PetInfo pets = 2;
  for (int i = 0; i < this->pets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pets(i), target);
  }

  // repeated .proto_ff.PetHatchInfo hatchs = 3;
  for (int i = 0; i < this->hatchs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->hatchs(i), target);
  }

  // repeated int64 cfgids = 4;
  for (int i = 0; i < this->cfgids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->cfgids(i), target);
  }

  // repeated .proto_ff.PetGrow grows = 5;
  for (int i = 0; i < this->grows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->grows(i), target);
  }

  // optional .proto_ff.PetYaoHunModule yaohun = 6;
  if (has_yaohun()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->yaohun(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyPetModuleRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[5 / 32] & (0xffu << (5 % 32))) {
    // optional .proto_ff.PetYaoHunModule yaohun = 6;
    if (has_yaohun()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->yaohun());
    }

  }
  // repeated int32 fetter = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->fetter_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->fetter(i));
    }
    total_size += 1 * this->fetter_size() + data_size;
  }

  // repeated .proto_ff.PetInfo pets = 2;
  total_size += 1 * this->pets_size();
  for (int i = 0; i < this->pets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pets(i));
  }

  // repeated .proto_ff.PetHatchInfo hatchs = 3;
  total_size += 1 * this->hatchs_size();
  for (int i = 0; i < this->hatchs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hatchs(i));
  }

  // repeated int64 cfgids = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->cfgids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->cfgids(i));
    }
    total_size += 1 * this->cfgids_size() + data_size;
  }

  // repeated .proto_ff.PetGrow grows = 5;
  total_size += 1 * this->grows_size();
  for (int i = 0; i < this->grows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grows(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPetModuleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPetModuleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPetModuleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPetModuleRsp::MergeFrom(const NotifyPetModuleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  fetter_.MergeFrom(from.fetter_);
  pets_.MergeFrom(from.pets_);
  hatchs_.MergeFrom(from.hatchs_);
  cfgids_.MergeFrom(from.cfgids_);
  grows_.MergeFrom(from.grows_);
  if (from._has_bits_[5 / 32] & (0xffu << (5 % 32))) {
    if (from.has_yaohun()) {
      mutable_yaohun()->::proto_ff::PetYaoHunModule::MergeFrom(from.yaohun());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPetModuleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPetModuleRsp::CopyFrom(const NotifyPetModuleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPetModuleRsp::IsInitialized() const {

  if (has_yaohun()) {
    if (!this->yaohun().IsInitialized()) return false;
  }
  return true;
}

void NotifyPetModuleRsp::Swap(NotifyPetModuleRsp* other) {
  if (other != this) {
    fetter_.Swap(&other->fetter_);
    pets_.Swap(&other->pets_);
    hatchs_.Swap(&other->hatchs_);
    cfgids_.Swap(&other->cfgids_);
    grows_.Swap(&other->grows_);
    std::swap(yaohun_, other->yaohun_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPetModuleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPetModuleRsp_descriptor_;
  metadata.reflection = NotifyPetModuleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPetRsp::kOptFieldNumber;
const int NotifyPetRsp::kPetsFieldNumber;
#endif  // !_MSC_VER

NotifyPetRsp::NotifyPetRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyPetRsp::InitAsDefaultInstance() {
}

NotifyPetRsp::NotifyPetRsp(const NotifyPetRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyPetRsp::SharedCtor() {
  _cached_size_ = 0;
  opt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPetRsp::~NotifyPetRsp() {
  SharedDtor();
}

void NotifyPetRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPetRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPetRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPetRsp_descriptor_;
}

const NotifyPetRsp& NotifyPetRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

NotifyPetRsp* NotifyPetRsp::default_instance_ = NULL;

NotifyPetRsp* NotifyPetRsp::New() const {
  return new NotifyPetRsp;
}

void NotifyPetRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    opt_ = 0;
  }
  pets_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPetRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 opt = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
          set_has_opt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_pets;
        break;
      }

      // repeated .proto_ff.PetInfo pets = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pets()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_pets;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyPetRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->opt(), output);
  }

  // repeated .proto_ff.PetInfo pets = 2;
  for (int i = 0; i < this->pets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pets(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyPetRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 opt = 1;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->opt(), target);
  }

  // repeated .proto_ff.PetInfo pets = 2;
  for (int i = 0; i < this->pets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pets(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyPetRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 opt = 1;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt());
    }

  }
  // repeated .proto_ff.PetInfo pets = 2;
  total_size += 1 * this->pets_size();
  for (int i = 0; i < this->pets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pets(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPetRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPetRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPetRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPetRsp::MergeFrom(const NotifyPetRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  pets_.MergeFrom(from.pets_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opt()) {
      set_opt(from.opt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPetRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPetRsp::CopyFrom(const NotifyPetRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPetRsp::IsInitialized() const {

  return true;
}

void NotifyPetRsp::Swap(NotifyPetRsp* other) {
  if (other != this) {
    std::swap(opt_, other->opt_);
    pets_.Swap(&other->pets_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPetRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPetRsp_descriptor_;
  metadata.reflection = NotifyPetRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPetFetterRsp::kFetterFieldNumber;
#endif  // !_MSC_VER

NotifyPetFetterRsp::NotifyPetFetterRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyPetFetterRsp::InitAsDefaultInstance() {
}

NotifyPetFetterRsp::NotifyPetFetterRsp(const NotifyPetFetterRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyPetFetterRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPetFetterRsp::~NotifyPetFetterRsp() {
  SharedDtor();
}

void NotifyPetFetterRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPetFetterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPetFetterRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPetFetterRsp_descriptor_;
}

const NotifyPetFetterRsp& NotifyPetFetterRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

NotifyPetFetterRsp* NotifyPetFetterRsp::default_instance_ = NULL;

NotifyPetFetterRsp* NotifyPetFetterRsp::New() const {
  return new NotifyPetFetterRsp;
}

void NotifyPetFetterRsp::Clear() {
  fetter_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPetFetterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 fetter = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fetter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_fetter())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fetter())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_fetter;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyPetFetterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 fetter = 1;
  for (int i = 0; i < this->fetter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->fetter(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyPetFetterRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 fetter = 1;
  for (int i = 0; i < this->fetter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->fetter(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyPetFetterRsp::ByteSize() const {
  int total_size = 0;

  // repeated int32 fetter = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->fetter_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->fetter(i));
    }
    total_size += 1 * this->fetter_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPetFetterRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPetFetterRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPetFetterRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPetFetterRsp::MergeFrom(const NotifyPetFetterRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  fetter_.MergeFrom(from.fetter_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPetFetterRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPetFetterRsp::CopyFrom(const NotifyPetFetterRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPetFetterRsp::IsInitialized() const {

  return true;
}

void NotifyPetFetterRsp::Swap(NotifyPetFetterRsp* other) {
  if (other != this) {
    fetter_.Swap(&other->fetter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPetFetterRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPetFetterRsp_descriptor_;
  metadata.reflection = NotifyPetFetterRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPetHatchRsp::kHatchsFieldNumber;
#endif  // !_MSC_VER

NotifyPetHatchRsp::NotifyPetHatchRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyPetHatchRsp::InitAsDefaultInstance() {
}

NotifyPetHatchRsp::NotifyPetHatchRsp(const NotifyPetHatchRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyPetHatchRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPetHatchRsp::~NotifyPetHatchRsp() {
  SharedDtor();
}

void NotifyPetHatchRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPetHatchRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPetHatchRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPetHatchRsp_descriptor_;
}

const NotifyPetHatchRsp& NotifyPetHatchRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

NotifyPetHatchRsp* NotifyPetHatchRsp::default_instance_ = NULL;

NotifyPetHatchRsp* NotifyPetHatchRsp::New() const {
  return new NotifyPetHatchRsp;
}

void NotifyPetHatchRsp::Clear() {
  hatchs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPetHatchRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.PetHatchInfo hatchs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hatchs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hatchs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_hatchs;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyPetHatchRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.PetHatchInfo hatchs = 1;
  for (int i = 0; i < this->hatchs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hatchs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyPetHatchRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.PetHatchInfo hatchs = 1;
  for (int i = 0; i < this->hatchs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hatchs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyPetHatchRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.PetHatchInfo hatchs = 1;
  total_size += 1 * this->hatchs_size();
  for (int i = 0; i < this->hatchs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hatchs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPetHatchRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPetHatchRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPetHatchRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPetHatchRsp::MergeFrom(const NotifyPetHatchRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  hatchs_.MergeFrom(from.hatchs_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPetHatchRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPetHatchRsp::CopyFrom(const NotifyPetHatchRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPetHatchRsp::IsInitialized() const {

  return true;
}

void NotifyPetHatchRsp::Swap(NotifyPetHatchRsp* other) {
  if (other != this) {
    hatchs_.Swap(&other->hatchs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPetHatchRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPetHatchRsp_descriptor_;
  metadata.reflection = NotifyPetHatchRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPetGetedListRsp::kCfgidsFieldNumber;
#endif  // !_MSC_VER

NotifyPetGetedListRsp::NotifyPetGetedListRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyPetGetedListRsp::InitAsDefaultInstance() {
}

NotifyPetGetedListRsp::NotifyPetGetedListRsp(const NotifyPetGetedListRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyPetGetedListRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPetGetedListRsp::~NotifyPetGetedListRsp() {
  SharedDtor();
}

void NotifyPetGetedListRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPetGetedListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPetGetedListRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPetGetedListRsp_descriptor_;
}

const NotifyPetGetedListRsp& NotifyPetGetedListRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

NotifyPetGetedListRsp* NotifyPetGetedListRsp::default_instance_ = NULL;

NotifyPetGetedListRsp* NotifyPetGetedListRsp::New() const {
  return new NotifyPetGetedListRsp;
}

void NotifyPetGetedListRsp::Clear() {
  cfgids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPetGetedListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 cfgids = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cfgids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_cfgids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_cfgids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_cfgids;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyPetGetedListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 cfgids = 1;
  for (int i = 0; i < this->cfgids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->cfgids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyPetGetedListRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 cfgids = 1;
  for (int i = 0; i < this->cfgids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->cfgids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyPetGetedListRsp::ByteSize() const {
  int total_size = 0;

  // repeated int64 cfgids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->cfgids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->cfgids(i));
    }
    total_size += 1 * this->cfgids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPetGetedListRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPetGetedListRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPetGetedListRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPetGetedListRsp::MergeFrom(const NotifyPetGetedListRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfgids_.MergeFrom(from.cfgids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPetGetedListRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPetGetedListRsp::CopyFrom(const NotifyPetGetedListRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPetGetedListRsp::IsInitialized() const {

  return true;
}

void NotifyPetGetedListRsp::Swap(NotifyPetGetedListRsp* other) {
  if (other != this) {
    cfgids_.Swap(&other->cfgids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPetGetedListRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPetGetedListRsp_descriptor_;
  metadata.reflection = NotifyPetGetedListRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPetYaoHun::kInfoFieldNumber;
#endif  // !_MSC_VER

NotifyPetYaoHun::NotifyPetYaoHun()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyPetYaoHun::InitAsDefaultInstance() {
  info_ = const_cast< ::proto_ff::PetYaoHunEntry*>(&::proto_ff::PetYaoHunEntry::default_instance());
}

NotifyPetYaoHun::NotifyPetYaoHun(const NotifyPetYaoHun& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyPetYaoHun::SharedCtor() {
  _cached_size_ = 0;
  info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPetYaoHun::~NotifyPetYaoHun() {
  SharedDtor();
}

void NotifyPetYaoHun::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void NotifyPetYaoHun::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPetYaoHun::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPetYaoHun_descriptor_;
}

const NotifyPetYaoHun& NotifyPetYaoHun::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

NotifyPetYaoHun* NotifyPetYaoHun::default_instance_ = NULL;

NotifyPetYaoHun* NotifyPetYaoHun::New() const {
  return new NotifyPetYaoHun;
}

void NotifyPetYaoHun::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_info()) {
      if (info_ != NULL) info_->::proto_ff::PetYaoHunEntry::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPetYaoHun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto_ff.PetYaoHunEntry info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyPetYaoHun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto_ff.PetYaoHunEntry info = 1;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyPetYaoHun::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto_ff.PetYaoHunEntry info = 1;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyPetYaoHun::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto_ff.PetYaoHunEntry info = 1;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPetYaoHun::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPetYaoHun* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPetYaoHun*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPetYaoHun::MergeFrom(const NotifyPetYaoHun& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_info()) {
      mutable_info()->::proto_ff::PetYaoHunEntry::MergeFrom(from.info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPetYaoHun::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPetYaoHun::CopyFrom(const NotifyPetYaoHun& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPetYaoHun::IsInitialized() const {

  if (has_info()) {
    if (!this->info().IsInitialized()) return false;
  }
  return true;
}

void NotifyPetYaoHun::Swap(NotifyPetYaoHun* other) {
  if (other != this) {
    std::swap(info_, other->info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPetYaoHun::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPetYaoHun_descriptor_;
  metadata.reflection = NotifyPetYaoHun_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPetYaoHunSimple::kLianyaoTqFlagFieldNumber;
const int NotifyPetYaoHunSimple::kYaoluLvFieldNumber;
const int NotifyPetYaoHunSimple::kYaoluExpFieldNumber;
const int NotifyPetYaoHunSimple::kYaoqiFieldNumber;
#endif  // !_MSC_VER

NotifyPetYaoHunSimple::NotifyPetYaoHunSimple()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyPetYaoHunSimple::InitAsDefaultInstance() {
}

NotifyPetYaoHunSimple::NotifyPetYaoHunSimple(const NotifyPetYaoHunSimple& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyPetYaoHunSimple::SharedCtor() {
  _cached_size_ = 0;
  lianyao_tq_flag_ = 0;
  yaolu_lv_ = 0;
  yaolu_exp_ = 0;
  yaoqi_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPetYaoHunSimple::~NotifyPetYaoHunSimple() {
  SharedDtor();
}

void NotifyPetYaoHunSimple::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPetYaoHunSimple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPetYaoHunSimple::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPetYaoHunSimple_descriptor_;
}

const NotifyPetYaoHunSimple& NotifyPetYaoHunSimple::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

NotifyPetYaoHunSimple* NotifyPetYaoHunSimple::default_instance_ = NULL;

NotifyPetYaoHunSimple* NotifyPetYaoHunSimple::New() const {
  return new NotifyPetYaoHunSimple;
}

void NotifyPetYaoHunSimple::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lianyao_tq_flag_ = 0;
    yaolu_lv_ = 0;
    yaolu_exp_ = 0;
    yaoqi_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPetYaoHunSimple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lianyao_tq_flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lianyao_tq_flag_)));
          set_has_lianyao_tq_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_yaolu_lv;
        break;
      }

      // optional int32 yaolu_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yaolu_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yaolu_lv_)));
          set_has_yaolu_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_yaolu_exp;
        break;
      }

      // optional int32 yaolu_exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yaolu_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yaolu_exp_)));
          set_has_yaolu_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_yaoqi;
        break;
      }

      // optional int32 yaoqi = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yaoqi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yaoqi_)));
          set_has_yaoqi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyPetYaoHunSimple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 lianyao_tq_flag = 2;
  if (has_lianyao_tq_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lianyao_tq_flag(), output);
  }

  // optional int32 yaolu_lv = 3;
  if (has_yaolu_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->yaolu_lv(), output);
  }

  // optional int32 yaolu_exp = 4;
  if (has_yaolu_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->yaolu_exp(), output);
  }

  // optional int32 yaoqi = 5;
  if (has_yaoqi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->yaoqi(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyPetYaoHunSimple::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 lianyao_tq_flag = 2;
  if (has_lianyao_tq_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lianyao_tq_flag(), target);
  }

  // optional int32 yaolu_lv = 3;
  if (has_yaolu_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->yaolu_lv(), target);
  }

  // optional int32 yaolu_exp = 4;
  if (has_yaolu_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->yaolu_exp(), target);
  }

  // optional int32 yaoqi = 5;
  if (has_yaoqi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->yaoqi(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyPetYaoHunSimple::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 lianyao_tq_flag = 2;
    if (has_lianyao_tq_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lianyao_tq_flag());
    }

    // optional int32 yaolu_lv = 3;
    if (has_yaolu_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yaolu_lv());
    }

    // optional int32 yaolu_exp = 4;
    if (has_yaolu_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yaolu_exp());
    }

    // optional int32 yaoqi = 5;
    if (has_yaoqi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yaoqi());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPetYaoHunSimple::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPetYaoHunSimple* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPetYaoHunSimple*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPetYaoHunSimple::MergeFrom(const NotifyPetYaoHunSimple& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lianyao_tq_flag()) {
      set_lianyao_tq_flag(from.lianyao_tq_flag());
    }
    if (from.has_yaolu_lv()) {
      set_yaolu_lv(from.yaolu_lv());
    }
    if (from.has_yaolu_exp()) {
      set_yaolu_exp(from.yaolu_exp());
    }
    if (from.has_yaoqi()) {
      set_yaoqi(from.yaoqi());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPetYaoHunSimple::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPetYaoHunSimple::CopyFrom(const NotifyPetYaoHunSimple& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPetYaoHunSimple::IsInitialized() const {

  return true;
}

void NotifyPetYaoHunSimple::Swap(NotifyPetYaoHunSimple* other) {
  if (other != this) {
    std::swap(lianyao_tq_flag_, other->lianyao_tq_flag_);
    std::swap(yaolu_lv_, other->yaolu_lv_);
    std::swap(yaolu_exp_, other->yaolu_exp_);
    std::swap(yaoqi_, other->yaoqi_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPetYaoHunSimple::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPetYaoHunSimple_descriptor_;
  metadata.reflection = NotifyPetYaoHunSimple_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetLvUpReq::kInstIdFieldNumber;
const int PetLvUpReq::kItemidFieldNumber;
#endif  // !_MSC_VER

PetLvUpReq::PetLvUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetLvUpReq::InitAsDefaultInstance() {
}

PetLvUpReq::PetLvUpReq(const PetLvUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetLvUpReq::SharedCtor() {
  _cached_size_ = 0;
  instid_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetLvUpReq::~PetLvUpReq() {
  SharedDtor();
}

void PetLvUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetLvUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetLvUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetLvUpReq_descriptor_;
}

const PetLvUpReq& PetLvUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetLvUpReq* PetLvUpReq::default_instance_ = NULL;

PetLvUpReq* PetLvUpReq::New() const {
  return new PetLvUpReq;
}

void PetLvUpReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    instid_ = 0;
    itemid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetLvUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 instId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_itemid;
        break;
      }

      // optional int64 itemid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetLvUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 instId = 1;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instid(), output);
  }

  // optional int64 itemid = 2;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetLvUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 instId = 1;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instid(), target);
  }

  // optional int64 itemid = 2;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetLvUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 instId = 1;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

    // optional int64 itemid = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetLvUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetLvUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetLvUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetLvUpReq::MergeFrom(const PetLvUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instid()) {
      set_instid(from.instid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetLvUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetLvUpReq::CopyFrom(const PetLvUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetLvUpReq::IsInitialized() const {

  return true;
}

void PetLvUpReq::Swap(PetLvUpReq* other) {
  if (other != this) {
    std::swap(instid_, other->instid_);
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetLvUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetLvUpReq_descriptor_;
  metadata.reflection = PetLvUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetLvUpRsp::kRetFieldNumber;
const int PetLvUpRsp::kInstIdFieldNumber;
#endif  // !_MSC_VER

PetLvUpRsp::PetLvUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetLvUpRsp::InitAsDefaultInstance() {
}

PetLvUpRsp::PetLvUpRsp(const PetLvUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetLvUpRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  instid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetLvUpRsp::~PetLvUpRsp() {
  SharedDtor();
}

void PetLvUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetLvUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetLvUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetLvUpRsp_descriptor_;
}

const PetLvUpRsp& PetLvUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetLvUpRsp* PetLvUpRsp::default_instance_ = NULL;

PetLvUpRsp* PetLvUpRsp::New() const {
  return new PetLvUpRsp;
}

void PetLvUpRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    instid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetLvUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_instId;
        break;
      }

      // optional int32 instId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetLvUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->instid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetLvUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->instid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetLvUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 instId = 2;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetLvUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetLvUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetLvUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetLvUpRsp::MergeFrom(const PetLvUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_instid()) {
      set_instid(from.instid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetLvUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetLvUpRsp::CopyFrom(const PetLvUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetLvUpRsp::IsInitialized() const {

  return true;
}

void PetLvUpRsp::Swap(PetLvUpRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(instid_, other->instid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetLvUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetLvUpRsp_descriptor_;
  metadata.reflection = PetLvUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetStepLvReq::kInstIdFieldNumber;
#endif  // !_MSC_VER

PetStepLvReq::PetStepLvReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetStepLvReq::InitAsDefaultInstance() {
}

PetStepLvReq::PetStepLvReq(const PetStepLvReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetStepLvReq::SharedCtor() {
  _cached_size_ = 0;
  instid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetStepLvReq::~PetStepLvReq() {
  SharedDtor();
}

void PetStepLvReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetStepLvReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetStepLvReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetStepLvReq_descriptor_;
}

const PetStepLvReq& PetStepLvReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetStepLvReq* PetStepLvReq::default_instance_ = NULL;

PetStepLvReq* PetStepLvReq::New() const {
  return new PetStepLvReq;
}

void PetStepLvReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    instid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetStepLvReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 instId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetStepLvReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 instId = 1;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetStepLvReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 instId = 1;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetStepLvReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 instId = 1;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetStepLvReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetStepLvReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetStepLvReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetStepLvReq::MergeFrom(const PetStepLvReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instid()) {
      set_instid(from.instid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetStepLvReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetStepLvReq::CopyFrom(const PetStepLvReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetStepLvReq::IsInitialized() const {

  return true;
}

void PetStepLvReq::Swap(PetStepLvReq* other) {
  if (other != this) {
    std::swap(instid_, other->instid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetStepLvReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetStepLvReq_descriptor_;
  metadata.reflection = PetStepLvReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetStepLvRsp::kRetFieldNumber;
const int PetStepLvRsp::kInstIdFieldNumber;
#endif  // !_MSC_VER

PetStepLvRsp::PetStepLvRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetStepLvRsp::InitAsDefaultInstance() {
}

PetStepLvRsp::PetStepLvRsp(const PetStepLvRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetStepLvRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  instid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetStepLvRsp::~PetStepLvRsp() {
  SharedDtor();
}

void PetStepLvRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetStepLvRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetStepLvRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetStepLvRsp_descriptor_;
}

const PetStepLvRsp& PetStepLvRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetStepLvRsp* PetStepLvRsp::default_instance_ = NULL;

PetStepLvRsp* PetStepLvRsp::New() const {
  return new PetStepLvRsp;
}

void PetStepLvRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    instid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetStepLvRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_instId;
        break;
      }

      // optional int32 instId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetStepLvRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->instid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetStepLvRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->instid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetStepLvRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 instId = 2;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetStepLvRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetStepLvRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetStepLvRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetStepLvRsp::MergeFrom(const PetStepLvRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_instid()) {
      set_instid(from.instid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetStepLvRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetStepLvRsp::CopyFrom(const PetStepLvRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetStepLvRsp::IsInitialized() const {

  return true;
}

void PetStepLvRsp::Swap(PetStepLvRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(instid_, other->instid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetStepLvRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetStepLvRsp_descriptor_;
  metadata.reflection = PetStepLvRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetStarLvReq::kInstIdFieldNumber;
const int PetStarLvReq::kCostPetIdsFieldNumber;
const int PetStarLvReq::kIsCostItemFieldNumber;
#endif  // !_MSC_VER

PetStarLvReq::PetStarLvReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetStarLvReq::InitAsDefaultInstance() {
}

PetStarLvReq::PetStarLvReq(const PetStarLvReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetStarLvReq::SharedCtor() {
  _cached_size_ = 0;
  instid_ = 0;
  iscostitem_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetStarLvReq::~PetStarLvReq() {
  SharedDtor();
}

void PetStarLvReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetStarLvReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetStarLvReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetStarLvReq_descriptor_;
}

const PetStarLvReq& PetStarLvReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetStarLvReq* PetStarLvReq::default_instance_ = NULL;

PetStarLvReq* PetStarLvReq::New() const {
  return new PetStarLvReq;
}

void PetStarLvReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    instid_ = 0;
    iscostitem_ = 0;
  }
  costpetids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetStarLvReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 instId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_costPetIds;
        break;
      }

      // repeated int32 costPetIds = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costPetIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_costpetids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_costpetids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_costPetIds;
        if (input->ExpectTag(24)) goto parse_isCostItem;
        break;
      }

      // optional int32 isCostItem = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isCostItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iscostitem_)));
          set_has_iscostitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetStarLvReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 instId = 1;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instid(), output);
  }

  // repeated int32 costPetIds = 2;
  for (int i = 0; i < this->costpetids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->costpetids(i), output);
  }

  // optional int32 isCostItem = 3;
  if (has_iscostitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->iscostitem(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetStarLvReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 instId = 1;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instid(), target);
  }

  // repeated int32 costPetIds = 2;
  for (int i = 0; i < this->costpetids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->costpetids(i), target);
  }

  // optional int32 isCostItem = 3;
  if (has_iscostitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->iscostitem(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetStarLvReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 instId = 1;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

    // optional int32 isCostItem = 3;
    if (has_iscostitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iscostitem());
    }

  }
  // repeated int32 costPetIds = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->costpetids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->costpetids(i));
    }
    total_size += 1 * this->costpetids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetStarLvReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetStarLvReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetStarLvReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetStarLvReq::MergeFrom(const PetStarLvReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  costpetids_.MergeFrom(from.costpetids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instid()) {
      set_instid(from.instid());
    }
    if (from.has_iscostitem()) {
      set_iscostitem(from.iscostitem());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetStarLvReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetStarLvReq::CopyFrom(const PetStarLvReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetStarLvReq::IsInitialized() const {

  return true;
}

void PetStarLvReq::Swap(PetStarLvReq* other) {
  if (other != this) {
    std::swap(instid_, other->instid_);
    costpetids_.Swap(&other->costpetids_);
    std::swap(iscostitem_, other->iscostitem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetStarLvReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetStarLvReq_descriptor_;
  metadata.reflection = PetStarLvReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetStarLvRsp::kRetFieldNumber;
const int PetStarLvRsp::kInstIdFieldNumber;
#endif  // !_MSC_VER

PetStarLvRsp::PetStarLvRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetStarLvRsp::InitAsDefaultInstance() {
}

PetStarLvRsp::PetStarLvRsp(const PetStarLvRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetStarLvRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  instid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetStarLvRsp::~PetStarLvRsp() {
  SharedDtor();
}

void PetStarLvRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetStarLvRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetStarLvRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetStarLvRsp_descriptor_;
}

const PetStarLvRsp& PetStarLvRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetStarLvRsp* PetStarLvRsp::default_instance_ = NULL;

PetStarLvRsp* PetStarLvRsp::New() const {
  return new PetStarLvRsp;
}

void PetStarLvRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    instid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetStarLvRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_instId;
        break;
      }

      // optional int32 instId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetStarLvRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->instid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetStarLvRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->instid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetStarLvRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 instId = 2;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetStarLvRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetStarLvRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetStarLvRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetStarLvRsp::MergeFrom(const PetStarLvRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_instid()) {
      set_instid(from.instid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetStarLvRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetStarLvRsp::CopyFrom(const PetStarLvRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetStarLvRsp::IsInitialized() const {

  return true;
}

void PetStarLvRsp::Swap(PetStarLvRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(instid_, other->instid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetStarLvRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetStarLvRsp_descriptor_;
  metadata.reflection = PetStarLvRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetFormationReq::kOptFieldNumber;
const int PetFormationReq::kInstIdFieldNumber;
const int PetFormationReq::kSlotFieldNumber;
#endif  // !_MSC_VER

PetFormationReq::PetFormationReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetFormationReq::InitAsDefaultInstance() {
}

PetFormationReq::PetFormationReq(const PetFormationReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetFormationReq::SharedCtor() {
  _cached_size_ = 0;
  opt_ = 0;
  instid_ = 0;
  slot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetFormationReq::~PetFormationReq() {
  SharedDtor();
}

void PetFormationReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetFormationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetFormationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetFormationReq_descriptor_;
}

const PetFormationReq& PetFormationReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetFormationReq* PetFormationReq::default_instance_ = NULL;

PetFormationReq* PetFormationReq::New() const {
  return new PetFormationReq;
}

void PetFormationReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    opt_ = 0;
    instid_ = 0;
    slot_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetFormationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 opt = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
          set_has_opt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_instId;
        break;
      }

      // optional int32 instId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_slot;
        break;
      }

      // optional int32 slot = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetFormationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->opt(), output);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->instid(), output);
  }

  // optional int32 slot = 3;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->slot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetFormationReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 opt = 1;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->opt(), target);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->instid(), target);
  }

  // optional int32 slot = 3;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->slot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetFormationReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 opt = 1;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt());
    }

    // optional int32 instId = 2;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

    // optional int32 slot = 3;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetFormationReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetFormationReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetFormationReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetFormationReq::MergeFrom(const PetFormationReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_instid()) {
      set_instid(from.instid());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetFormationReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetFormationReq::CopyFrom(const PetFormationReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetFormationReq::IsInitialized() const {

  return true;
}

void PetFormationReq::Swap(PetFormationReq* other) {
  if (other != this) {
    std::swap(opt_, other->opt_);
    std::swap(instid_, other->instid_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetFormationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetFormationReq_descriptor_;
  metadata.reflection = PetFormationReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetFormationRsp::kRetFieldNumber;
const int PetFormationRsp::kOptFieldNumber;
const int PetFormationRsp::kInstIdFieldNumber;
const int PetFormationRsp::kSlotFieldNumber;
#endif  // !_MSC_VER

PetFormationRsp::PetFormationRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetFormationRsp::InitAsDefaultInstance() {
}

PetFormationRsp::PetFormationRsp(const PetFormationRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetFormationRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  opt_ = 0;
  instid_ = 0;
  slot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetFormationRsp::~PetFormationRsp() {
  SharedDtor();
}

void PetFormationRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetFormationRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetFormationRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetFormationRsp_descriptor_;
}

const PetFormationRsp& PetFormationRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetFormationRsp* PetFormationRsp::default_instance_ = NULL;

PetFormationRsp* PetFormationRsp::New() const {
  return new PetFormationRsp;
}

void PetFormationRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    opt_ = 0;
    instid_ = 0;
    slot_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetFormationRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_opt;
        break;
      }

      // optional int32 opt = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
          set_has_opt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_instId;
        break;
      }

      // optional int32 instId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_slot;
        break;
      }

      // optional int32 slot = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetFormationRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 opt = 2;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->opt(), output);
  }

  // optional int32 instId = 3;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->instid(), output);
  }

  // optional int32 slot = 4;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->slot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetFormationRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 opt = 2;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->opt(), target);
  }

  // optional int32 instId = 3;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->instid(), target);
  }

  // optional int32 slot = 4;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->slot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetFormationRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 opt = 2;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt());
    }

    // optional int32 instId = 3;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

    // optional int32 slot = 4;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetFormationRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetFormationRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetFormationRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetFormationRsp::MergeFrom(const PetFormationRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_instid()) {
      set_instid(from.instid());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetFormationRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetFormationRsp::CopyFrom(const PetFormationRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetFormationRsp::IsInitialized() const {

  return true;
}

void PetFormationRsp::Swap(PetFormationRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(opt_, other->opt_);
    std::swap(instid_, other->instid_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetFormationRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetFormationRsp_descriptor_;
  metadata.reflection = PetFormationRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetAddHatchReq::kPairFieldNumber;
#endif  // !_MSC_VER

PetAddHatchReq::PetAddHatchReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetAddHatchReq::InitAsDefaultInstance() {
}

PetAddHatchReq::PetAddHatchReq(const PetAddHatchReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetAddHatchReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetAddHatchReq::~PetAddHatchReq() {
  SharedDtor();
}

void PetAddHatchReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetAddHatchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetAddHatchReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetAddHatchReq_descriptor_;
}

const PetAddHatchReq& PetAddHatchReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetAddHatchReq* PetAddHatchReq::default_instance_ = NULL;

PetAddHatchReq* PetAddHatchReq::New() const {
  return new PetAddHatchReq;
}

void PetAddHatchReq::Clear() {
  pair_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetAddHatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.ComPair pair = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pair:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pair()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_pair;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetAddHatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.ComPair pair = 1;
  for (int i = 0; i < this->pair_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pair(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetAddHatchReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.ComPair pair = 1;
  for (int i = 0; i < this->pair_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pair(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetAddHatchReq::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.ComPair pair = 1;
  total_size += 1 * this->pair_size();
  for (int i = 0; i < this->pair_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pair(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetAddHatchReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetAddHatchReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetAddHatchReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetAddHatchReq::MergeFrom(const PetAddHatchReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  pair_.MergeFrom(from.pair_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetAddHatchReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetAddHatchReq::CopyFrom(const PetAddHatchReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetAddHatchReq::IsInitialized() const {

  return true;
}

void PetAddHatchReq::Swap(PetAddHatchReq* other) {
  if (other != this) {
    pair_.Swap(&other->pair_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetAddHatchReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetAddHatchReq_descriptor_;
  metadata.reflection = PetAddHatchReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetAddHatchRsp::kRetFieldNumber;
const int PetAddHatchRsp::kPairFieldNumber;
#endif  // !_MSC_VER

PetAddHatchRsp::PetAddHatchRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetAddHatchRsp::InitAsDefaultInstance() {
}

PetAddHatchRsp::PetAddHatchRsp(const PetAddHatchRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetAddHatchRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetAddHatchRsp::~PetAddHatchRsp() {
  SharedDtor();
}

void PetAddHatchRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetAddHatchRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetAddHatchRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetAddHatchRsp_descriptor_;
}

const PetAddHatchRsp& PetAddHatchRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetAddHatchRsp* PetAddHatchRsp::default_instance_ = NULL;

PetAddHatchRsp* PetAddHatchRsp::New() const {
  return new PetAddHatchRsp;
}

void PetAddHatchRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
  }
  pair_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetAddHatchRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_pair;
        break;
      }

      // repeated .proto_ff.ComPair pair = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pair:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pair()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_pair;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetAddHatchRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // repeated .proto_ff.ComPair pair = 2;
  for (int i = 0; i < this->pair_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pair(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetAddHatchRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // repeated .proto_ff.ComPair pair = 2;
  for (int i = 0; i < this->pair_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pair(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetAddHatchRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  // repeated .proto_ff.ComPair pair = 2;
  total_size += 1 * this->pair_size();
  for (int i = 0; i < this->pair_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pair(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetAddHatchRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetAddHatchRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetAddHatchRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetAddHatchRsp::MergeFrom(const PetAddHatchRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  pair_.MergeFrom(from.pair_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetAddHatchRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetAddHatchRsp::CopyFrom(const PetAddHatchRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetAddHatchRsp::IsInitialized() const {

  return true;
}

void PetAddHatchRsp::Swap(PetAddHatchRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    pair_.Swap(&other->pair_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetAddHatchRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetAddHatchRsp_descriptor_;
  metadata.reflection = PetAddHatchRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetHatchUnlockReq::kSlotFieldNumber;
#endif  // !_MSC_VER

PetHatchUnlockReq::PetHatchUnlockReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetHatchUnlockReq::InitAsDefaultInstance() {
}

PetHatchUnlockReq::PetHatchUnlockReq(const PetHatchUnlockReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetHatchUnlockReq::SharedCtor() {
  _cached_size_ = 0;
  slot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetHatchUnlockReq::~PetHatchUnlockReq() {
  SharedDtor();
}

void PetHatchUnlockReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetHatchUnlockReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetHatchUnlockReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetHatchUnlockReq_descriptor_;
}

const PetHatchUnlockReq& PetHatchUnlockReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetHatchUnlockReq* PetHatchUnlockReq::default_instance_ = NULL;

PetHatchUnlockReq* PetHatchUnlockReq::New() const {
  return new PetHatchUnlockReq;
}

void PetHatchUnlockReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    slot_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetHatchUnlockReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 slot = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetHatchUnlockReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 slot = 1;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetHatchUnlockReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 slot = 1;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetHatchUnlockReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 slot = 1;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetHatchUnlockReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetHatchUnlockReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetHatchUnlockReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetHatchUnlockReq::MergeFrom(const PetHatchUnlockReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetHatchUnlockReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetHatchUnlockReq::CopyFrom(const PetHatchUnlockReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetHatchUnlockReq::IsInitialized() const {

  return true;
}

void PetHatchUnlockReq::Swap(PetHatchUnlockReq* other) {
  if (other != this) {
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetHatchUnlockReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetHatchUnlockReq_descriptor_;
  metadata.reflection = PetHatchUnlockReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetHatchUnlockRsp::kRetFieldNumber;
const int PetHatchUnlockRsp::kSlotFieldNumber;
#endif  // !_MSC_VER

PetHatchUnlockRsp::PetHatchUnlockRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetHatchUnlockRsp::InitAsDefaultInstance() {
}

PetHatchUnlockRsp::PetHatchUnlockRsp(const PetHatchUnlockRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetHatchUnlockRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  slot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetHatchUnlockRsp::~PetHatchUnlockRsp() {
  SharedDtor();
}

void PetHatchUnlockRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetHatchUnlockRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetHatchUnlockRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetHatchUnlockRsp_descriptor_;
}

const PetHatchUnlockRsp& PetHatchUnlockRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetHatchUnlockRsp* PetHatchUnlockRsp::default_instance_ = NULL;

PetHatchUnlockRsp* PetHatchUnlockRsp::New() const {
  return new PetHatchUnlockRsp;
}

void PetHatchUnlockRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    slot_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetHatchUnlockRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_slot;
        break;
      }

      // optional int32 slot = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetHatchUnlockRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 slot = 2;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetHatchUnlockRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 slot = 2;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetHatchUnlockRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 slot = 2;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetHatchUnlockRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetHatchUnlockRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetHatchUnlockRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetHatchUnlockRsp::MergeFrom(const PetHatchUnlockRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetHatchUnlockRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetHatchUnlockRsp::CopyFrom(const PetHatchUnlockRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetHatchUnlockRsp::IsInitialized() const {

  return true;
}

void PetHatchUnlockRsp::Swap(PetHatchUnlockRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetHatchUnlockRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetHatchUnlockRsp_descriptor_;
  metadata.reflection = PetHatchUnlockRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetHatchEggReq::kSlotsFieldNumber;
#endif  // !_MSC_VER

PetHatchEggReq::PetHatchEggReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetHatchEggReq::InitAsDefaultInstance() {
}

PetHatchEggReq::PetHatchEggReq(const PetHatchEggReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetHatchEggReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetHatchEggReq::~PetHatchEggReq() {
  SharedDtor();
}

void PetHatchEggReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetHatchEggReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetHatchEggReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetHatchEggReq_descriptor_;
}

const PetHatchEggReq& PetHatchEggReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetHatchEggReq* PetHatchEggReq::default_instance_ = NULL;

PetHatchEggReq* PetHatchEggReq::New() const {
  return new PetHatchEggReq;
}

void PetHatchEggReq::Clear() {
  slots_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetHatchEggReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 slots = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slots:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_slots())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_slots())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_slots;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetHatchEggReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 slots = 1;
  for (int i = 0; i < this->slots_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->slots(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetHatchEggReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 slots = 1;
  for (int i = 0; i < this->slots_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->slots(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetHatchEggReq::ByteSize() const {
  int total_size = 0;

  // repeated int32 slots = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->slots_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->slots(i));
    }
    total_size += 1 * this->slots_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetHatchEggReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetHatchEggReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetHatchEggReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetHatchEggReq::MergeFrom(const PetHatchEggReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  slots_.MergeFrom(from.slots_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetHatchEggReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetHatchEggReq::CopyFrom(const PetHatchEggReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetHatchEggReq::IsInitialized() const {

  return true;
}

void PetHatchEggReq::Swap(PetHatchEggReq* other) {
  if (other != this) {
    slots_.Swap(&other->slots_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetHatchEggReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetHatchEggReq_descriptor_;
  metadata.reflection = PetHatchEggReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetHatchEggRsp::kRetFieldNumber;
const int PetHatchEggRsp::kOptFieldNumber;
const int PetHatchEggRsp::kSlotFieldNumber;
const int PetHatchEggRsp::kPetInstIdsFieldNumber;
#endif  // !_MSC_VER

PetHatchEggRsp::PetHatchEggRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetHatchEggRsp::InitAsDefaultInstance() {
}

PetHatchEggRsp::PetHatchEggRsp(const PetHatchEggRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetHatchEggRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  opt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetHatchEggRsp::~PetHatchEggRsp() {
  SharedDtor();
}

void PetHatchEggRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetHatchEggRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetHatchEggRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetHatchEggRsp_descriptor_;
}

const PetHatchEggRsp& PetHatchEggRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetHatchEggRsp* PetHatchEggRsp::default_instance_ = NULL;

PetHatchEggRsp* PetHatchEggRsp::New() const {
  return new PetHatchEggRsp;
}

void PetHatchEggRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    opt_ = 0;
  }
  slot_.Clear();
  petinstids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetHatchEggRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_opt;
        break;
      }

      // optional int32 opt = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
          set_has_opt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_slot;
        break;
      }

      // repeated int32 slot = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_slot())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_slot())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_slot;
        if (input->ExpectTag(32)) goto parse_petInstIds;
        break;
      }

      // repeated int32 petInstIds = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_petInstIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_petinstids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_petinstids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_petInstIds;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetHatchEggRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 opt = 2;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->opt(), output);
  }

  // repeated int32 slot = 3;
  for (int i = 0; i < this->slot_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->slot(i), output);
  }

  // repeated int32 petInstIds = 4;
  for (int i = 0; i < this->petinstids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->petinstids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetHatchEggRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 opt = 2;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->opt(), target);
  }

  // repeated int32 slot = 3;
  for (int i = 0; i < this->slot_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->slot(i), target);
  }

  // repeated int32 petInstIds = 4;
  for (int i = 0; i < this->petinstids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->petinstids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetHatchEggRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 opt = 2;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt());
    }

  }
  // repeated int32 slot = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->slot_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->slot(i));
    }
    total_size += 1 * this->slot_size() + data_size;
  }

  // repeated int32 petInstIds = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->petinstids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->petinstids(i));
    }
    total_size += 1 * this->petinstids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetHatchEggRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetHatchEggRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetHatchEggRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetHatchEggRsp::MergeFrom(const PetHatchEggRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  slot_.MergeFrom(from.slot_);
  petinstids_.MergeFrom(from.petinstids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_opt()) {
      set_opt(from.opt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetHatchEggRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetHatchEggRsp::CopyFrom(const PetHatchEggRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetHatchEggRsp::IsInitialized() const {

  return true;
}

void PetHatchEggRsp::Swap(PetHatchEggRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(opt_, other->opt_);
    slot_.Swap(&other->slot_);
    petinstids_.Swap(&other->petinstids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetHatchEggRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetHatchEggRsp_descriptor_;
  metadata.reflection = PetHatchEggRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetActiveFetterReq::kIdFieldNumber;
#endif  // !_MSC_VER

PetActiveFetterReq::PetActiveFetterReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetActiveFetterReq::InitAsDefaultInstance() {
}

PetActiveFetterReq::PetActiveFetterReq(const PetActiveFetterReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetActiveFetterReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetActiveFetterReq::~PetActiveFetterReq() {
  SharedDtor();
}

void PetActiveFetterReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetActiveFetterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetActiveFetterReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetActiveFetterReq_descriptor_;
}

const PetActiveFetterReq& PetActiveFetterReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetActiveFetterReq* PetActiveFetterReq::default_instance_ = NULL;

PetActiveFetterReq* PetActiveFetterReq::New() const {
  return new PetActiveFetterReq;
}

void PetActiveFetterReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetActiveFetterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetActiveFetterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetActiveFetterReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetActiveFetterReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetActiveFetterReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetActiveFetterReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetActiveFetterReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetActiveFetterReq::MergeFrom(const PetActiveFetterReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetActiveFetterReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetActiveFetterReq::CopyFrom(const PetActiveFetterReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetActiveFetterReq::IsInitialized() const {

  return true;
}

void PetActiveFetterReq::Swap(PetActiveFetterReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetActiveFetterReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetActiveFetterReq_descriptor_;
  metadata.reflection = PetActiveFetterReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetActiveFetterRsp::kRetFieldNumber;
const int PetActiveFetterRsp::kIdFieldNumber;
#endif  // !_MSC_VER

PetActiveFetterRsp::PetActiveFetterRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetActiveFetterRsp::InitAsDefaultInstance() {
}

PetActiveFetterRsp::PetActiveFetterRsp(const PetActiveFetterRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetActiveFetterRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetActiveFetterRsp::~PetActiveFetterRsp() {
  SharedDtor();
}

void PetActiveFetterRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetActiveFetterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetActiveFetterRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetActiveFetterRsp_descriptor_;
}

const PetActiveFetterRsp& PetActiveFetterRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetActiveFetterRsp* PetActiveFetterRsp::default_instance_ = NULL;

PetActiveFetterRsp* PetActiveFetterRsp::New() const {
  return new PetActiveFetterRsp;
}

void PetActiveFetterRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetActiveFetterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetActiveFetterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetActiveFetterRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetActiveFetterRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetActiveFetterRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetActiveFetterRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetActiveFetterRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetActiveFetterRsp::MergeFrom(const PetActiveFetterRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetActiveFetterRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetActiveFetterRsp::CopyFrom(const PetActiveFetterRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetActiveFetterRsp::IsInitialized() const {

  return true;
}

void PetActiveFetterRsp::Swap(PetActiveFetterRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetActiveFetterRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetActiveFetterRsp_descriptor_;
  metadata.reflection = PetActiveFetterRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetSkillLvReq::kOptFieldNumber;
const int PetSkillLvReq::kInstIdFieldNumber;
const int PetSkillLvReq::kSkillIdFieldNumber;
#endif  // !_MSC_VER

PetSkillLvReq::PetSkillLvReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetSkillLvReq::InitAsDefaultInstance() {
}

PetSkillLvReq::PetSkillLvReq(const PetSkillLvReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetSkillLvReq::SharedCtor() {
  _cached_size_ = 0;
  opt_ = 0;
  instid_ = 0;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetSkillLvReq::~PetSkillLvReq() {
  SharedDtor();
}

void PetSkillLvReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetSkillLvReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetSkillLvReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetSkillLvReq_descriptor_;
}

const PetSkillLvReq& PetSkillLvReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetSkillLvReq* PetSkillLvReq::default_instance_ = NULL;

PetSkillLvReq* PetSkillLvReq::New() const {
  return new PetSkillLvReq;
}

void PetSkillLvReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    opt_ = 0;
    instid_ = 0;
    skill_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetSkillLvReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 opt = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
          set_has_opt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_instId;
        break;
      }

      // optional int32 instId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetSkillLvReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->opt(), output);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->instid(), output);
  }

  // optional int32 skill_id = 3;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetSkillLvReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 opt = 1;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->opt(), target);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->instid(), target);
  }

  // optional int32 skill_id = 3;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetSkillLvReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 opt = 1;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt());
    }

    // optional int32 instId = 2;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

    // optional int32 skill_id = 3;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetSkillLvReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetSkillLvReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetSkillLvReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetSkillLvReq::MergeFrom(const PetSkillLvReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_instid()) {
      set_instid(from.instid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetSkillLvReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetSkillLvReq::CopyFrom(const PetSkillLvReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetSkillLvReq::IsInitialized() const {

  return true;
}

void PetSkillLvReq::Swap(PetSkillLvReq* other) {
  if (other != this) {
    std::swap(opt_, other->opt_);
    std::swap(instid_, other->instid_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetSkillLvReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetSkillLvReq_descriptor_;
  metadata.reflection = PetSkillLvReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetSkillLvRsp::kRetFieldNumber;
const int PetSkillLvRsp::kOptFieldNumber;
const int PetSkillLvRsp::kInstIdFieldNumber;
const int PetSkillLvRsp::kSkillIdFieldNumber;
const int PetSkillLvRsp::kLvFieldNumber;
#endif  // !_MSC_VER

PetSkillLvRsp::PetSkillLvRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetSkillLvRsp::InitAsDefaultInstance() {
}

PetSkillLvRsp::PetSkillLvRsp(const PetSkillLvRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetSkillLvRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  opt_ = 0;
  instid_ = 0;
  skill_id_ = 0;
  lv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetSkillLvRsp::~PetSkillLvRsp() {
  SharedDtor();
}

void PetSkillLvRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetSkillLvRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetSkillLvRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetSkillLvRsp_descriptor_;
}

const PetSkillLvRsp& PetSkillLvRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetSkillLvRsp* PetSkillLvRsp::default_instance_ = NULL;

PetSkillLvRsp* PetSkillLvRsp::New() const {
  return new PetSkillLvRsp;
}

void PetSkillLvRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    opt_ = 0;
    instid_ = 0;
    skill_id_ = 0;
    lv_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetSkillLvRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_opt;
        break;
      }

      // optional int32 opt = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
          set_has_opt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_instId;
        break;
      }

      // optional int32 instId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_lv;
        break;
      }

      // optional int32 lv = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lv_)));
          set_has_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetSkillLvRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 opt = 2;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->opt(), output);
  }

  // optional int32 instId = 3;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->instid(), output);
  }

  // optional int32 skill_id = 4;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skill_id(), output);
  }

  // optional int32 lv = 5;
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetSkillLvRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 opt = 2;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->opt(), target);
  }

  // optional int32 instId = 3;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->instid(), target);
  }

  // optional int32 skill_id = 4;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skill_id(), target);
  }

  // optional int32 lv = 5;
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetSkillLvRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 opt = 2;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt());
    }

    // optional int32 instId = 3;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

    // optional int32 skill_id = 4;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int32 lv = 5;
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetSkillLvRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetSkillLvRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetSkillLvRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetSkillLvRsp::MergeFrom(const PetSkillLvRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_instid()) {
      set_instid(from.instid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_lv()) {
      set_lv(from.lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetSkillLvRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetSkillLvRsp::CopyFrom(const PetSkillLvRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetSkillLvRsp::IsInitialized() const {

  return true;
}

void PetSkillLvRsp::Swap(PetSkillLvRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(opt_, other->opt_);
    std::swap(instid_, other->instid_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(lv_, other->lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetSkillLvRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetSkillLvRsp_descriptor_;
  metadata.reflection = PetSkillLvRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRestReq::kInstIdFieldNumber;
#endif  // !_MSC_VER

PetRestReq::PetRestReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRestReq::InitAsDefaultInstance() {
}

PetRestReq::PetRestReq(const PetRestReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRestReq::SharedCtor() {
  _cached_size_ = 0;
  instid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRestReq::~PetRestReq() {
  SharedDtor();
}

void PetRestReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRestReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRestReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRestReq_descriptor_;
}

const PetRestReq& PetRestReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetRestReq* PetRestReq::default_instance_ = NULL;

PetRestReq* PetRestReq::New() const {
  return new PetRestReq;
}

void PetRestReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    instid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRestReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 instId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRestReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 instId = 1;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRestReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 instId = 1;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRestReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 instId = 1;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRestReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRestReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRestReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRestReq::MergeFrom(const PetRestReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instid()) {
      set_instid(from.instid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRestReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRestReq::CopyFrom(const PetRestReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRestReq::IsInitialized() const {

  return true;
}

void PetRestReq::Swap(PetRestReq* other) {
  if (other != this) {
    std::swap(instid_, other->instid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRestReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRestReq_descriptor_;
  metadata.reflection = PetRestReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRestRsp::kRetFieldNumber;
const int PetRestRsp::kInstIdFieldNumber;
const int PetRestRsp::kItemsFieldNumber;
const int PetRestRsp::kPetsFieldNumber;
#endif  // !_MSC_VER

PetRestRsp::PetRestRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRestRsp::InitAsDefaultInstance() {
}

PetRestRsp::PetRestRsp(const PetRestRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRestRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  instid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRestRsp::~PetRestRsp() {
  SharedDtor();
}

void PetRestRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRestRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRestRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRestRsp_descriptor_;
}

const PetRestRsp& PetRestRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetRestRsp* PetRestRsp::default_instance_ = NULL;

PetRestRsp* PetRestRsp::New() const {
  return new PetRestRsp;
}

void PetRestRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    instid_ = 0;
  }
  items_.Clear();
  pets_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRestRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_instId;
        break;
      }

      // optional int32 instId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_items;
        break;
      }

      // repeated .proto_ff.ComPair64 items = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_items;
        if (input->ExpectTag(34)) goto parse_pets;
        break;
      }

      // repeated .proto_ff.ComPair64 pets = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pets()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_pets;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRestRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->instid(), output);
  }

  // repeated .proto_ff.ComPair64 items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(i), output);
  }

  // repeated .proto_ff.ComPair64 pets = 4;
  for (int i = 0; i < this->pets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pets(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRestRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->instid(), target);
  }

  // repeated .proto_ff.ComPair64 items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->items(i), target);
  }

  // repeated .proto_ff.ComPair64 pets = 4;
  for (int i = 0; i < this->pets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->pets(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRestRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 instId = 2;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

  }
  // repeated .proto_ff.ComPair64 items = 3;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  // repeated .proto_ff.ComPair64 pets = 4;
  total_size += 1 * this->pets_size();
  for (int i = 0; i < this->pets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pets(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRestRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRestRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRestRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRestRsp::MergeFrom(const PetRestRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  pets_.MergeFrom(from.pets_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_instid()) {
      set_instid(from.instid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRestRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRestRsp::CopyFrom(const PetRestRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRestRsp::IsInitialized() const {

  return true;
}

void PetRestRsp::Swap(PetRestRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(instid_, other->instid_);
    items_.Swap(&other->items_);
    pets_.Swap(&other->pets_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRestRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRestRsp_descriptor_;
  metadata.reflection = PetRestRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetDecomposeReq::kInstIdsFieldNumber;
#endif  // !_MSC_VER

PetDecomposeReq::PetDecomposeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetDecomposeReq::InitAsDefaultInstance() {
}

PetDecomposeReq::PetDecomposeReq(const PetDecomposeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetDecomposeReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetDecomposeReq::~PetDecomposeReq() {
  SharedDtor();
}

void PetDecomposeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetDecomposeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetDecomposeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetDecomposeReq_descriptor_;
}

const PetDecomposeReq& PetDecomposeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetDecomposeReq* PetDecomposeReq::default_instance_ = NULL;

PetDecomposeReq* PetDecomposeReq::New() const {
  return new PetDecomposeReq;
}

void PetDecomposeReq::Clear() {
  instids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetDecomposeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 instIds = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_instids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_instids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_instIds;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetDecomposeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 instIds = 1;
  for (int i = 0; i < this->instids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->instids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetDecomposeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 instIds = 1;
  for (int i = 0; i < this->instids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->instids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetDecomposeReq::ByteSize() const {
  int total_size = 0;

  // repeated int32 instIds = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->instids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->instids(i));
    }
    total_size += 1 * this->instids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetDecomposeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetDecomposeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetDecomposeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetDecomposeReq::MergeFrom(const PetDecomposeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  instids_.MergeFrom(from.instids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetDecomposeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetDecomposeReq::CopyFrom(const PetDecomposeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetDecomposeReq::IsInitialized() const {

  return true;
}

void PetDecomposeReq::Swap(PetDecomposeReq* other) {
  if (other != this) {
    instids_.Swap(&other->instids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetDecomposeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetDecomposeReq_descriptor_;
  metadata.reflection = PetDecomposeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetDecomposeRsp::kRetFieldNumber;
#endif  // !_MSC_VER

PetDecomposeRsp::PetDecomposeRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetDecomposeRsp::InitAsDefaultInstance() {
}

PetDecomposeRsp::PetDecomposeRsp(const PetDecomposeRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetDecomposeRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetDecomposeRsp::~PetDecomposeRsp() {
  SharedDtor();
}

void PetDecomposeRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetDecomposeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetDecomposeRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetDecomposeRsp_descriptor_;
}

const PetDecomposeRsp& PetDecomposeRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetDecomposeRsp* PetDecomposeRsp::default_instance_ = NULL;

PetDecomposeRsp* PetDecomposeRsp::New() const {
  return new PetDecomposeRsp;
}

void PetDecomposeRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetDecomposeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetDecomposeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetDecomposeRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetDecomposeRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetDecomposeRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetDecomposeRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetDecomposeRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetDecomposeRsp::MergeFrom(const PetDecomposeRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetDecomposeRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetDecomposeRsp::CopyFrom(const PetDecomposeRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetDecomposeRsp::IsInitialized() const {

  return true;
}

void PetDecomposeRsp::Swap(PetDecomposeRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetDecomposeRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetDecomposeRsp_descriptor_;
  metadata.reflection = PetDecomposeRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetQuickHatchEggReq::kSlotFieldNumber;
#endif  // !_MSC_VER

PetQuickHatchEggReq::PetQuickHatchEggReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetQuickHatchEggReq::InitAsDefaultInstance() {
}

PetQuickHatchEggReq::PetQuickHatchEggReq(const PetQuickHatchEggReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetQuickHatchEggReq::SharedCtor() {
  _cached_size_ = 0;
  slot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetQuickHatchEggReq::~PetQuickHatchEggReq() {
  SharedDtor();
}

void PetQuickHatchEggReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetQuickHatchEggReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetQuickHatchEggReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetQuickHatchEggReq_descriptor_;
}

const PetQuickHatchEggReq& PetQuickHatchEggReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetQuickHatchEggReq* PetQuickHatchEggReq::default_instance_ = NULL;

PetQuickHatchEggReq* PetQuickHatchEggReq::New() const {
  return new PetQuickHatchEggReq;
}

void PetQuickHatchEggReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    slot_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetQuickHatchEggReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 slot = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetQuickHatchEggReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 slot = 1;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetQuickHatchEggReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 slot = 1;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetQuickHatchEggReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 slot = 1;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetQuickHatchEggReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetQuickHatchEggReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetQuickHatchEggReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetQuickHatchEggReq::MergeFrom(const PetQuickHatchEggReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetQuickHatchEggReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetQuickHatchEggReq::CopyFrom(const PetQuickHatchEggReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetQuickHatchEggReq::IsInitialized() const {

  return true;
}

void PetQuickHatchEggReq::Swap(PetQuickHatchEggReq* other) {
  if (other != this) {
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetQuickHatchEggReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetQuickHatchEggReq_descriptor_;
  metadata.reflection = PetQuickHatchEggReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetQuickHatchEggRsp::kRetFieldNumber;
const int PetQuickHatchEggRsp::kSlotFieldNumber;
#endif  // !_MSC_VER

PetQuickHatchEggRsp::PetQuickHatchEggRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetQuickHatchEggRsp::InitAsDefaultInstance() {
}

PetQuickHatchEggRsp::PetQuickHatchEggRsp(const PetQuickHatchEggRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetQuickHatchEggRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  slot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetQuickHatchEggRsp::~PetQuickHatchEggRsp() {
  SharedDtor();
}

void PetQuickHatchEggRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetQuickHatchEggRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetQuickHatchEggRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetQuickHatchEggRsp_descriptor_;
}

const PetQuickHatchEggRsp& PetQuickHatchEggRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetQuickHatchEggRsp* PetQuickHatchEggRsp::default_instance_ = NULL;

PetQuickHatchEggRsp* PetQuickHatchEggRsp::New() const {
  return new PetQuickHatchEggRsp;
}

void PetQuickHatchEggRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    slot_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetQuickHatchEggRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_slot;
        break;
      }

      // optional int32 slot = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
          set_has_slot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetQuickHatchEggRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 slot = 2;
  if (has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetQuickHatchEggRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 slot = 2;
  if (has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetQuickHatchEggRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 slot = 2;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetQuickHatchEggRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetQuickHatchEggRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetQuickHatchEggRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetQuickHatchEggRsp::MergeFrom(const PetQuickHatchEggRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_slot()) {
      set_slot(from.slot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetQuickHatchEggRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetQuickHatchEggRsp::CopyFrom(const PetQuickHatchEggRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetQuickHatchEggRsp::IsInitialized() const {

  return true;
}

void PetQuickHatchEggRsp::Swap(PetQuickHatchEggRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(slot_, other->slot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetQuickHatchEggRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetQuickHatchEggRsp_descriptor_;
  metadata.reflection = PetQuickHatchEggRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRestReViewReq::kInstIdFieldNumber;
#endif  // !_MSC_VER

PetRestReViewReq::PetRestReViewReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRestReViewReq::InitAsDefaultInstance() {
}

PetRestReViewReq::PetRestReViewReq(const PetRestReViewReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRestReViewReq::SharedCtor() {
  _cached_size_ = 0;
  instid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRestReViewReq::~PetRestReViewReq() {
  SharedDtor();
}

void PetRestReViewReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRestReViewReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRestReViewReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRestReViewReq_descriptor_;
}

const PetRestReViewReq& PetRestReViewReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetRestReViewReq* PetRestReViewReq::default_instance_ = NULL;

PetRestReViewReq* PetRestReViewReq::New() const {
  return new PetRestReViewReq;
}

void PetRestReViewReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    instid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRestReViewReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 instId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRestReViewReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 instId = 1;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRestReViewReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 instId = 1;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRestReViewReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 instId = 1;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRestReViewReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRestReViewReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRestReViewReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRestReViewReq::MergeFrom(const PetRestReViewReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instid()) {
      set_instid(from.instid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRestReViewReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRestReViewReq::CopyFrom(const PetRestReViewReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRestReViewReq::IsInitialized() const {

  return true;
}

void PetRestReViewReq::Swap(PetRestReViewReq* other) {
  if (other != this) {
    std::swap(instid_, other->instid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRestReViewReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRestReViewReq_descriptor_;
  metadata.reflection = PetRestReViewReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRestReViewRsp::kRetFieldNumber;
const int PetRestReViewRsp::kInstIdFieldNumber;
const int PetRestReViewRsp::kItemsFieldNumber;
const int PetRestReViewRsp::kPetsFieldNumber;
#endif  // !_MSC_VER

PetRestReViewRsp::PetRestReViewRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRestReViewRsp::InitAsDefaultInstance() {
}

PetRestReViewRsp::PetRestReViewRsp(const PetRestReViewRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRestReViewRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  instid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRestReViewRsp::~PetRestReViewRsp() {
  SharedDtor();
}

void PetRestReViewRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRestReViewRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRestReViewRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRestReViewRsp_descriptor_;
}

const PetRestReViewRsp& PetRestReViewRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetRestReViewRsp* PetRestReViewRsp::default_instance_ = NULL;

PetRestReViewRsp* PetRestReViewRsp::New() const {
  return new PetRestReViewRsp;
}

void PetRestReViewRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    instid_ = 0;
  }
  items_.Clear();
  pets_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRestReViewRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_instId;
        break;
      }

      // optional int32 instId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instid_)));
          set_has_instid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_items;
        break;
      }

      // repeated .proto_ff.ComPair64 items = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_items;
        if (input->ExpectTag(34)) goto parse_pets;
        break;
      }

      // repeated .proto_ff.ComPair64 pets = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pets()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_pets;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRestReViewRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->instid(), output);
  }

  // repeated .proto_ff.ComPair64 items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(i), output);
  }

  // repeated .proto_ff.ComPair64 pets = 4;
  for (int i = 0; i < this->pets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pets(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRestReViewRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 instId = 2;
  if (has_instid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->instid(), target);
  }

  // repeated .proto_ff.ComPair64 items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->items(i), target);
  }

  // repeated .proto_ff.ComPair64 pets = 4;
  for (int i = 0; i < this->pets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->pets(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRestReViewRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 instId = 2;
    if (has_instid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instid());
    }

  }
  // repeated .proto_ff.ComPair64 items = 3;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  // repeated .proto_ff.ComPair64 pets = 4;
  total_size += 1 * this->pets_size();
  for (int i = 0; i < this->pets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pets(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRestReViewRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRestReViewRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRestReViewRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRestReViewRsp::MergeFrom(const PetRestReViewRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  pets_.MergeFrom(from.pets_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_instid()) {
      set_instid(from.instid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRestReViewRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRestReViewRsp::CopyFrom(const PetRestReViewRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRestReViewRsp::IsInitialized() const {

  return true;
}

void PetRestReViewRsp::Swap(PetRestReViewRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(instid_, other->instid_);
    items_.Swap(&other->items_);
    pets_.Swap(&other->pets_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRestReViewRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRestReViewRsp_descriptor_;
  metadata.reflection = PetRestReViewRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPetGrow::kGrowsFieldNumber;
#endif  // !_MSC_VER

NotifyPetGrow::NotifyPetGrow()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyPetGrow::InitAsDefaultInstance() {
}

NotifyPetGrow::NotifyPetGrow(const NotifyPetGrow& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyPetGrow::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPetGrow::~NotifyPetGrow() {
  SharedDtor();
}

void NotifyPetGrow::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPetGrow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPetGrow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPetGrow_descriptor_;
}

const NotifyPetGrow& NotifyPetGrow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

NotifyPetGrow* NotifyPetGrow::default_instance_ = NULL;

NotifyPetGrow* NotifyPetGrow::New() const {
  return new NotifyPetGrow;
}

void NotifyPetGrow::Clear() {
  grows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPetGrow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.PetGrow grows = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_grows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grows()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_grows;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyPetGrow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.PetGrow grows = 1;
  for (int i = 0; i < this->grows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->grows(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyPetGrow::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.PetGrow grows = 1;
  for (int i = 0; i < this->grows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->grows(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyPetGrow::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.PetGrow grows = 1;
  total_size += 1 * this->grows_size();
  for (int i = 0; i < this->grows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grows(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPetGrow::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPetGrow* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPetGrow*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPetGrow::MergeFrom(const NotifyPetGrow& from) {
  GOOGLE_CHECK_NE(&from, this);
  grows_.MergeFrom(from.grows_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPetGrow::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPetGrow::CopyFrom(const NotifyPetGrow& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPetGrow::IsInitialized() const {

  return true;
}

void NotifyPetGrow::Swap(NotifyPetGrow* other) {
  if (other != this) {
    grows_.Swap(&other->grows_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPetGrow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPetGrow_descriptor_;
  metadata.reflection = NotifyPetGrow_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetGrowOptReq::kTypeFieldNumber;
const int PetGrowOptReq::kCfgidFieldNumber;
const int PetGrowOptReq::kStarindexFieldNumber;
#endif  // !_MSC_VER

PetGrowOptReq::PetGrowOptReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetGrowOptReq::InitAsDefaultInstance() {
}

PetGrowOptReq::PetGrowOptReq(const PetGrowOptReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetGrowOptReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  cfgid_ = 0;
  starindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetGrowOptReq::~PetGrowOptReq() {
  SharedDtor();
}

void PetGrowOptReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetGrowOptReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetGrowOptReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetGrowOptReq_descriptor_;
}

const PetGrowOptReq& PetGrowOptReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetGrowOptReq* PetGrowOptReq::default_instance_ = NULL;

PetGrowOptReq* PetGrowOptReq::New() const {
  return new PetGrowOptReq;
}

void PetGrowOptReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    cfgid_ = 0;
    starindex_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetGrowOptReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cfgid;
        break;
      }

      // optional int32 cfgid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cfgid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cfgid_)));
          set_has_cfgid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_starindex;
        break;
      }

      // optional int32 starindex = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starindex_)));
          set_has_starindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetGrowOptReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 cfgid = 2;
  if (has_cfgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cfgid(), output);
  }

  // optional int32 starindex = 3;
  if (has_starindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->starindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetGrowOptReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 cfgid = 2;
  if (has_cfgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cfgid(), target);
  }

  // optional int32 starindex = 3;
  if (has_starindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->starindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetGrowOptReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 cfgid = 2;
    if (has_cfgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cfgid());
    }

    // optional int32 starindex = 3;
    if (has_starindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetGrowOptReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetGrowOptReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetGrowOptReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetGrowOptReq::MergeFrom(const PetGrowOptReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_cfgid()) {
      set_cfgid(from.cfgid());
    }
    if (from.has_starindex()) {
      set_starindex(from.starindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetGrowOptReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetGrowOptReq::CopyFrom(const PetGrowOptReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetGrowOptReq::IsInitialized() const {

  return true;
}

void PetGrowOptReq::Swap(PetGrowOptReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(cfgid_, other->cfgid_);
    std::swap(starindex_, other->starindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetGrowOptReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetGrowOptReq_descriptor_;
  metadata.reflection = PetGrowOptReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetGrowOptRsp::kRetFieldNumber;
const int PetGrowOptRsp::kTypeFieldNumber;
const int PetGrowOptRsp::kCfgidFieldNumber;
const int PetGrowOptRsp::kCodeFieldNumber;
#endif  // !_MSC_VER

PetGrowOptRsp::PetGrowOptRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetGrowOptRsp::InitAsDefaultInstance() {
}

PetGrowOptRsp::PetGrowOptRsp(const PetGrowOptRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetGrowOptRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  type_ = 0;
  cfgid_ = 0;
  code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetGrowOptRsp::~PetGrowOptRsp() {
  SharedDtor();
}

void PetGrowOptRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetGrowOptRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetGrowOptRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetGrowOptRsp_descriptor_;
}

const PetGrowOptRsp& PetGrowOptRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetGrowOptRsp* PetGrowOptRsp::default_instance_ = NULL;

PetGrowOptRsp* PetGrowOptRsp::New() const {
  return new PetGrowOptRsp;
}

void PetGrowOptRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    type_ = 0;
    cfgid_ = 0;
    code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetGrowOptRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cfgid;
        break;
      }

      // optional int32 cfgid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cfgid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cfgid_)));
          set_has_cfgid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_code;
        break;
      }

      // optional int32 code = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetGrowOptRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 cfgid = 3;
  if (has_cfgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cfgid(), output);
  }

  // optional int32 code = 4;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetGrowOptRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 cfgid = 3;
  if (has_cfgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cfgid(), target);
  }

  // optional int32 code = 4;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetGrowOptRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 cfgid = 3;
    if (has_cfgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cfgid());
    }

    // optional int32 code = 4;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetGrowOptRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetGrowOptRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetGrowOptRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetGrowOptRsp::MergeFrom(const PetGrowOptRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_cfgid()) {
      set_cfgid(from.cfgid());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetGrowOptRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetGrowOptRsp::CopyFrom(const PetGrowOptRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetGrowOptRsp::IsInitialized() const {

  return true;
}

void PetGrowOptRsp::Swap(PetGrowOptRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(type_, other->type_);
    std::swap(cfgid_, other->cfgid_);
    std::swap(code_, other->code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetGrowOptRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetGrowOptRsp_descriptor_;
  metadata.reflection = PetGrowOptRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunUnlockReq::kFightPosFieldNumber;
#endif  // !_MSC_VER

PetYaoHunUnlockReq::PetYaoHunUnlockReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunUnlockReq::InitAsDefaultInstance() {
}

PetYaoHunUnlockReq::PetYaoHunUnlockReq(const PetYaoHunUnlockReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunUnlockReq::SharedCtor() {
  _cached_size_ = 0;
  fight_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunUnlockReq::~PetYaoHunUnlockReq() {
  SharedDtor();
}

void PetYaoHunUnlockReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunUnlockReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunUnlockReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunUnlockReq_descriptor_;
}

const PetYaoHunUnlockReq& PetYaoHunUnlockReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunUnlockReq* PetYaoHunUnlockReq::default_instance_ = NULL;

PetYaoHunUnlockReq* PetYaoHunUnlockReq::New() const {
  return new PetYaoHunUnlockReq;
}

void PetYaoHunUnlockReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fight_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunUnlockReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fight_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_pos_)));
          set_has_fight_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunUnlockReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fight_pos = 1;
  if (has_fight_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fight_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunUnlockReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fight_pos = 1;
  if (has_fight_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fight_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunUnlockReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fight_pos = 1;
    if (has_fight_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunUnlockReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunUnlockReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunUnlockReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunUnlockReq::MergeFrom(const PetYaoHunUnlockReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fight_pos()) {
      set_fight_pos(from.fight_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunUnlockReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunUnlockReq::CopyFrom(const PetYaoHunUnlockReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunUnlockReq::IsInitialized() const {

  return true;
}

void PetYaoHunUnlockReq::Swap(PetYaoHunUnlockReq* other) {
  if (other != this) {
    std::swap(fight_pos_, other->fight_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunUnlockReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunUnlockReq_descriptor_;
  metadata.reflection = PetYaoHunUnlockReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunUnlockRsp::kRetFieldNumber;
const int PetYaoHunUnlockRsp::kFightPosFieldNumber;
#endif  // !_MSC_VER

PetYaoHunUnlockRsp::PetYaoHunUnlockRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunUnlockRsp::InitAsDefaultInstance() {
}

PetYaoHunUnlockRsp::PetYaoHunUnlockRsp(const PetYaoHunUnlockRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunUnlockRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  fight_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunUnlockRsp::~PetYaoHunUnlockRsp() {
  SharedDtor();
}

void PetYaoHunUnlockRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunUnlockRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunUnlockRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunUnlockRsp_descriptor_;
}

const PetYaoHunUnlockRsp& PetYaoHunUnlockRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunUnlockRsp* PetYaoHunUnlockRsp::default_instance_ = NULL;

PetYaoHunUnlockRsp* PetYaoHunUnlockRsp::New() const {
  return new PetYaoHunUnlockRsp;
}

void PetYaoHunUnlockRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    fight_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunUnlockRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fight_pos;
        break;
      }

      // optional int32 fight_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_pos_)));
          set_has_fight_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunUnlockRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 fight_pos = 2;
  if (has_fight_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fight_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunUnlockRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 fight_pos = 2;
  if (has_fight_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fight_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunUnlockRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 fight_pos = 2;
    if (has_fight_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunUnlockRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunUnlockRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunUnlockRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunUnlockRsp::MergeFrom(const PetYaoHunUnlockRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_fight_pos()) {
      set_fight_pos(from.fight_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunUnlockRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunUnlockRsp::CopyFrom(const PetYaoHunUnlockRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunUnlockRsp::IsInitialized() const {

  return true;
}

void PetYaoHunUnlockRsp::Swap(PetYaoHunUnlockRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(fight_pos_, other->fight_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunUnlockRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunUnlockRsp_descriptor_;
  metadata.reflection = PetYaoHunUnlockRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunDressReq::kFightPosFieldNumber;
const int PetYaoHunDressReq::kBagPosFieldNumber;
#endif  // !_MSC_VER

PetYaoHunDressReq::PetYaoHunDressReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunDressReq::InitAsDefaultInstance() {
}

PetYaoHunDressReq::PetYaoHunDressReq(const PetYaoHunDressReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunDressReq::SharedCtor() {
  _cached_size_ = 0;
  fight_pos_ = 0;
  bag_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunDressReq::~PetYaoHunDressReq() {
  SharedDtor();
}

void PetYaoHunDressReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunDressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunDressReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunDressReq_descriptor_;
}

const PetYaoHunDressReq& PetYaoHunDressReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunDressReq* PetYaoHunDressReq::default_instance_ = NULL;

PetYaoHunDressReq* PetYaoHunDressReq::New() const {
  return new PetYaoHunDressReq;
}

void PetYaoHunDressReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fight_pos_ = 0;
    bag_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunDressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fight_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_pos_)));
          set_has_fight_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bag_pos;
        break;
      }

      // optional int32 bag_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bag_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bag_pos_)));
          set_has_bag_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunDressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fight_pos = 1;
  if (has_fight_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fight_pos(), output);
  }

  // optional int32 bag_pos = 2;
  if (has_bag_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bag_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunDressReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fight_pos = 1;
  if (has_fight_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fight_pos(), target);
  }

  // optional int32 bag_pos = 2;
  if (has_bag_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bag_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunDressReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fight_pos = 1;
    if (has_fight_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_pos());
    }

    // optional int32 bag_pos = 2;
    if (has_bag_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bag_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunDressReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunDressReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunDressReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunDressReq::MergeFrom(const PetYaoHunDressReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fight_pos()) {
      set_fight_pos(from.fight_pos());
    }
    if (from.has_bag_pos()) {
      set_bag_pos(from.bag_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunDressReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunDressReq::CopyFrom(const PetYaoHunDressReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunDressReq::IsInitialized() const {

  return true;
}

void PetYaoHunDressReq::Swap(PetYaoHunDressReq* other) {
  if (other != this) {
    std::swap(fight_pos_, other->fight_pos_);
    std::swap(bag_pos_, other->bag_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunDressReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunDressReq_descriptor_;
  metadata.reflection = PetYaoHunDressReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunDressRsp::kRetFieldNumber;
const int PetYaoHunDressRsp::kFightPosFieldNumber;
const int PetYaoHunDressRsp::kBagPosFieldNumber;
const int PetYaoHunDressRsp::kCodeFieldNumber;
#endif  // !_MSC_VER

PetYaoHunDressRsp::PetYaoHunDressRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunDressRsp::InitAsDefaultInstance() {
}

PetYaoHunDressRsp::PetYaoHunDressRsp(const PetYaoHunDressRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunDressRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  fight_pos_ = 0;
  bag_pos_ = 0;
  code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunDressRsp::~PetYaoHunDressRsp() {
  SharedDtor();
}

void PetYaoHunDressRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunDressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunDressRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunDressRsp_descriptor_;
}

const PetYaoHunDressRsp& PetYaoHunDressRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunDressRsp* PetYaoHunDressRsp::default_instance_ = NULL;

PetYaoHunDressRsp* PetYaoHunDressRsp::New() const {
  return new PetYaoHunDressRsp;
}

void PetYaoHunDressRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    fight_pos_ = 0;
    bag_pos_ = 0;
    code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunDressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fight_pos;
        break;
      }

      // optional int32 fight_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_pos_)));
          set_has_fight_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bag_pos;
        break;
      }

      // optional int32 bag_pos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bag_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bag_pos_)));
          set_has_bag_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_code;
        break;
      }

      // optional int32 code = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunDressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 fight_pos = 2;
  if (has_fight_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fight_pos(), output);
  }

  // optional int32 bag_pos = 3;
  if (has_bag_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bag_pos(), output);
  }

  // optional int32 code = 4;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunDressRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 fight_pos = 2;
  if (has_fight_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fight_pos(), target);
  }

  // optional int32 bag_pos = 3;
  if (has_bag_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bag_pos(), target);
  }

  // optional int32 code = 4;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunDressRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 fight_pos = 2;
    if (has_fight_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_pos());
    }

    // optional int32 bag_pos = 3;
    if (has_bag_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bag_pos());
    }

    // optional int32 code = 4;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunDressRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunDressRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunDressRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunDressRsp::MergeFrom(const PetYaoHunDressRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_fight_pos()) {
      set_fight_pos(from.fight_pos());
    }
    if (from.has_bag_pos()) {
      set_bag_pos(from.bag_pos());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunDressRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunDressRsp::CopyFrom(const PetYaoHunDressRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunDressRsp::IsInitialized() const {

  return true;
}

void PetYaoHunDressRsp::Swap(PetYaoHunDressRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(fight_pos_, other->fight_pos_);
    std::swap(bag_pos_, other->bag_pos_);
    std::swap(code_, other->code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunDressRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunDressRsp_descriptor_;
  metadata.reflection = PetYaoHunDressRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetLianYaoReq::kLianNumFieldNumber;
const int PetLianYaoReq::kQualityFieldNumber;
const int PetLianYaoReq::kStarFieldNumber;
const int PetLianYaoReq::kQuickFieldNumber;
const int PetLianYaoReq::kBagPosFieldNumber;
#endif  // !_MSC_VER

PetLianYaoReq::PetLianYaoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetLianYaoReq::InitAsDefaultInstance() {
}

PetLianYaoReq::PetLianYaoReq(const PetLianYaoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetLianYaoReq::SharedCtor() {
  _cached_size_ = 0;
  lian_num_ = 0;
  quality_ = 0;
  star_ = 0;
  quick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetLianYaoReq::~PetLianYaoReq() {
  SharedDtor();
}

void PetLianYaoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetLianYaoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetLianYaoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetLianYaoReq_descriptor_;
}

const PetLianYaoReq& PetLianYaoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetLianYaoReq* PetLianYaoReq::default_instance_ = NULL;

PetLianYaoReq* PetLianYaoReq::New() const {
  return new PetLianYaoReq;
}

void PetLianYaoReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lian_num_ = 0;
    quality_ = 0;
    star_ = 0;
    quick_ = 0;
  }
  bag_pos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetLianYaoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lian_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lian_num_)));
          set_has_lian_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_quality;
        break;
      }

      // optional int32 quality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_star;
        break;
      }

      // optional int32 star = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_quick;
        break;
      }

      // optional int32 quick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quick_)));
          set_has_quick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_bag_pos;
        break;
      }

      // repeated int32 bag_pos = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bag_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_bag_pos())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_bag_pos())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_bag_pos;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetLianYaoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 lian_num = 1;
  if (has_lian_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lian_num(), output);
  }

  // optional int32 quality = 2;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quality(), output);
  }

  // optional int32 star = 3;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->star(), output);
  }

  // optional int32 quick = 4;
  if (has_quick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->quick(), output);
  }

  // repeated int32 bag_pos = 5;
  for (int i = 0; i < this->bag_pos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->bag_pos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetLianYaoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 lian_num = 1;
  if (has_lian_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lian_num(), target);
  }

  // optional int32 quality = 2;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quality(), target);
  }

  // optional int32 star = 3;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->star(), target);
  }

  // optional int32 quick = 4;
  if (has_quick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->quick(), target);
  }

  // repeated int32 bag_pos = 5;
  for (int i = 0; i < this->bag_pos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->bag_pos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetLianYaoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 lian_num = 1;
    if (has_lian_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lian_num());
    }

    // optional int32 quality = 2;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional int32 star = 3;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->star());
    }

    // optional int32 quick = 4;
    if (has_quick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quick());
    }

  }
  // repeated int32 bag_pos = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->bag_pos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->bag_pos(i));
    }
    total_size += 1 * this->bag_pos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetLianYaoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetLianYaoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetLianYaoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetLianYaoReq::MergeFrom(const PetLianYaoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  bag_pos_.MergeFrom(from.bag_pos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lian_num()) {
      set_lian_num(from.lian_num());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_quick()) {
      set_quick(from.quick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetLianYaoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetLianYaoReq::CopyFrom(const PetLianYaoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetLianYaoReq::IsInitialized() const {

  return true;
}

void PetLianYaoReq::Swap(PetLianYaoReq* other) {
  if (other != this) {
    std::swap(lian_num_, other->lian_num_);
    std::swap(quality_, other->quality_);
    std::swap(star_, other->star_);
    std::swap(quick_, other->quick_);
    bag_pos_.Swap(&other->bag_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetLianYaoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetLianYaoReq_descriptor_;
  metadata.reflection = PetLianYaoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetLianYaoReward::kItemidFieldNumber;
const int PetLianYaoReward::kNumFieldNumber;
const int PetLianYaoReward::kTqAddFlagFieldNumber;
#endif  // !_MSC_VER

PetLianYaoReward::PetLianYaoReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetLianYaoReward::InitAsDefaultInstance() {
}

PetLianYaoReward::PetLianYaoReward(const PetLianYaoReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetLianYaoReward::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0;
  num_ = 0;
  tq_add_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetLianYaoReward::~PetLianYaoReward() {
  SharedDtor();
}

void PetLianYaoReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetLianYaoReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetLianYaoReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetLianYaoReward_descriptor_;
}

const PetLianYaoReward& PetLianYaoReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetLianYaoReward* PetLianYaoReward::default_instance_ = NULL;

PetLianYaoReward* PetLianYaoReward::New() const {
  return new PetLianYaoReward;
}

void PetLianYaoReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = 0;
    num_ = 0;
    tq_add_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetLianYaoReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_tq_add_flag;
        break;
      }

      // optional int32 tq_add_flag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tq_add_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tq_add_flag_)));
          set_has_tq_add_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetLianYaoReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  // optional int32 tq_add_flag = 3;
  if (has_tq_add_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tq_add_flag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetLianYaoReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  // optional int32 tq_add_flag = 3;
  if (has_tq_add_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tq_add_flag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetLianYaoReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // optional int32 tq_add_flag = 3;
    if (has_tq_add_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tq_add_flag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetLianYaoReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetLianYaoReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetLianYaoReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetLianYaoReward::MergeFrom(const PetLianYaoReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_tq_add_flag()) {
      set_tq_add_flag(from.tq_add_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetLianYaoReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetLianYaoReward::CopyFrom(const PetLianYaoReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetLianYaoReward::IsInitialized() const {

  return true;
}

void PetLianYaoReward::Swap(PetLianYaoReward* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(num_, other->num_);
    std::swap(tq_add_flag_, other->tq_add_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetLianYaoReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetLianYaoReward_descriptor_;
  metadata.reflection = PetLianYaoReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetLianYaoRsp::kRetFieldNumber;
const int PetLianYaoRsp::kRewardsFieldNumber;
const int PetLianYaoRsp::kYaoluAddExpFieldNumber;
const int PetLianYaoRsp::kYaoluExpFlagFieldNumber;
const int PetLianYaoRsp::kYaohunAddFieldNumber;
const int PetLianYaoRsp::kFinExpFieldNumber;
const int PetLianYaoRsp::kFinLvFieldNumber;
const int PetLianYaoRsp::kLastLvFieldNumber;
#endif  // !_MSC_VER

PetLianYaoRsp::PetLianYaoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetLianYaoRsp::InitAsDefaultInstance() {
}

PetLianYaoRsp::PetLianYaoRsp(const PetLianYaoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetLianYaoRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  yaolu_add_exp_ = 0;
  yaolu_exp_flag_ = 0;
  yaohun_add_ = 0;
  fin_exp_ = 0;
  fin_lv_ = 0;
  last_lv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetLianYaoRsp::~PetLianYaoRsp() {
  SharedDtor();
}

void PetLianYaoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetLianYaoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetLianYaoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetLianYaoRsp_descriptor_;
}

const PetLianYaoRsp& PetLianYaoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetLianYaoRsp* PetLianYaoRsp::default_instance_ = NULL;

PetLianYaoRsp* PetLianYaoRsp::New() const {
  return new PetLianYaoRsp;
}

void PetLianYaoRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    yaolu_add_exp_ = 0;
    yaolu_exp_flag_ = 0;
    yaohun_add_ = 0;
    fin_exp_ = 0;
    fin_lv_ = 0;
    last_lv_ = 0;
  }
  rewards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetLianYaoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rewards;
        break;
      }

      // repeated .proto_ff.PetLianYaoReward rewards = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rewards:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewards()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rewards;
        if (input->ExpectTag(24)) goto parse_yaolu_add_exp;
        break;
      }

      // optional int32 yaolu_add_exp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yaolu_add_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yaolu_add_exp_)));
          set_has_yaolu_add_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_yaolu_exp_flag;
        break;
      }

      // optional int32 yaolu_exp_flag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yaolu_exp_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yaolu_exp_flag_)));
          set_has_yaolu_exp_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_yaohun_add;
        break;
      }

      // optional int32 yaohun_add = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yaohun_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yaohun_add_)));
          set_has_yaohun_add();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_fin_exp;
        break;
      }

      // optional int32 fin_exp = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fin_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fin_exp_)));
          set_has_fin_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_fin_lv;
        break;
      }

      // optional int32 fin_lv = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fin_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fin_lv_)));
          set_has_fin_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_last_lv;
        break;
      }

      // optional int32 last_lv = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_lv_)));
          set_has_last_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetLianYaoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // repeated .proto_ff.PetLianYaoReward rewards = 2;
  for (int i = 0; i < this->rewards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rewards(i), output);
  }

  // optional int32 yaolu_add_exp = 3;
  if (has_yaolu_add_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->yaolu_add_exp(), output);
  }

  // optional int32 yaolu_exp_flag = 4;
  if (has_yaolu_exp_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->yaolu_exp_flag(), output);
  }

  // optional int32 yaohun_add = 5;
  if (has_yaohun_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->yaohun_add(), output);
  }

  // optional int32 fin_exp = 6;
  if (has_fin_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->fin_exp(), output);
  }

  // optional int32 fin_lv = 7;
  if (has_fin_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->fin_lv(), output);
  }

  // optional int32 last_lv = 8;
  if (has_last_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->last_lv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetLianYaoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // repeated .proto_ff.PetLianYaoReward rewards = 2;
  for (int i = 0; i < this->rewards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rewards(i), target);
  }

  // optional int32 yaolu_add_exp = 3;
  if (has_yaolu_add_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->yaolu_add_exp(), target);
  }

  // optional int32 yaolu_exp_flag = 4;
  if (has_yaolu_exp_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->yaolu_exp_flag(), target);
  }

  // optional int32 yaohun_add = 5;
  if (has_yaohun_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->yaohun_add(), target);
  }

  // optional int32 fin_exp = 6;
  if (has_fin_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->fin_exp(), target);
  }

  // optional int32 fin_lv = 7;
  if (has_fin_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->fin_lv(), target);
  }

  // optional int32 last_lv = 8;
  if (has_last_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->last_lv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetLianYaoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 yaolu_add_exp = 3;
    if (has_yaolu_add_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yaolu_add_exp());
    }

    // optional int32 yaolu_exp_flag = 4;
    if (has_yaolu_exp_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yaolu_exp_flag());
    }

    // optional int32 yaohun_add = 5;
    if (has_yaohun_add()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yaohun_add());
    }

    // optional int32 fin_exp = 6;
    if (has_fin_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fin_exp());
    }

    // optional int32 fin_lv = 7;
    if (has_fin_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fin_lv());
    }

    // optional int32 last_lv = 8;
    if (has_last_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_lv());
    }

  }
  // repeated .proto_ff.PetLianYaoReward rewards = 2;
  total_size += 1 * this->rewards_size();
  for (int i = 0; i < this->rewards_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewards(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetLianYaoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetLianYaoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetLianYaoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetLianYaoRsp::MergeFrom(const PetLianYaoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewards_.MergeFrom(from.rewards_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_yaolu_add_exp()) {
      set_yaolu_add_exp(from.yaolu_add_exp());
    }
    if (from.has_yaolu_exp_flag()) {
      set_yaolu_exp_flag(from.yaolu_exp_flag());
    }
    if (from.has_yaohun_add()) {
      set_yaohun_add(from.yaohun_add());
    }
    if (from.has_fin_exp()) {
      set_fin_exp(from.fin_exp());
    }
    if (from.has_fin_lv()) {
      set_fin_lv(from.fin_lv());
    }
    if (from.has_last_lv()) {
      set_last_lv(from.last_lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetLianYaoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetLianYaoRsp::CopyFrom(const PetLianYaoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetLianYaoRsp::IsInitialized() const {

  return true;
}

void PetLianYaoRsp::Swap(PetLianYaoRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    rewards_.Swap(&other->rewards_);
    std::swap(yaolu_add_exp_, other->yaolu_add_exp_);
    std::swap(yaolu_exp_flag_, other->yaolu_exp_flag_);
    std::swap(yaohun_add_, other->yaohun_add_);
    std::swap(fin_exp_, other->fin_exp_);
    std::swap(fin_lv_, other->fin_lv_);
    std::swap(last_lv_, other->last_lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetLianYaoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetLianYaoRsp_descriptor_;
  metadata.reflection = PetLianYaoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunExchangeReq::kTargetIdFieldNumber;
const int PetYaoHunExchangeReq::kNumFieldNumber;
#endif  // !_MSC_VER

PetYaoHunExchangeReq::PetYaoHunExchangeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunExchangeReq::InitAsDefaultInstance() {
}

PetYaoHunExchangeReq::PetYaoHunExchangeReq(const PetYaoHunExchangeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunExchangeReq::SharedCtor() {
  _cached_size_ = 0;
  target_id_ = 0;
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunExchangeReq::~PetYaoHunExchangeReq() {
  SharedDtor();
}

void PetYaoHunExchangeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunExchangeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunExchangeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunExchangeReq_descriptor_;
}

const PetYaoHunExchangeReq& PetYaoHunExchangeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunExchangeReq* PetYaoHunExchangeReq::default_instance_ = NULL;

PetYaoHunExchangeReq* PetYaoHunExchangeReq::New() const {
  return new PetYaoHunExchangeReq;
}

void PetYaoHunExchangeReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    target_id_ = 0;
    num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunExchangeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 target_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_id_)));
          set_has_target_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunExchangeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 target_id = 1;
  if (has_target_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->target_id(), output);
  }

  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunExchangeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 target_id = 1;
  if (has_target_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->target_id(), target);
  }

  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunExchangeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 target_id = 1;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_id());
    }

    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunExchangeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunExchangeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunExchangeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunExchangeReq::MergeFrom(const PetYaoHunExchangeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_target_id()) {
      set_target_id(from.target_id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunExchangeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunExchangeReq::CopyFrom(const PetYaoHunExchangeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunExchangeReq::IsInitialized() const {

  return true;
}

void PetYaoHunExchangeReq::Swap(PetYaoHunExchangeReq* other) {
  if (other != this) {
    std::swap(target_id_, other->target_id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunExchangeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunExchangeReq_descriptor_;
  metadata.reflection = PetYaoHunExchangeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunExchangeRsp::kRetFieldNumber;
const int PetYaoHunExchangeRsp::kTargetIdFieldNumber;
const int PetYaoHunExchangeRsp::kNumFieldNumber;
#endif  // !_MSC_VER

PetYaoHunExchangeRsp::PetYaoHunExchangeRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunExchangeRsp::InitAsDefaultInstance() {
}

PetYaoHunExchangeRsp::PetYaoHunExchangeRsp(const PetYaoHunExchangeRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunExchangeRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  target_id_ = 0;
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunExchangeRsp::~PetYaoHunExchangeRsp() {
  SharedDtor();
}

void PetYaoHunExchangeRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunExchangeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunExchangeRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunExchangeRsp_descriptor_;
}

const PetYaoHunExchangeRsp& PetYaoHunExchangeRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunExchangeRsp* PetYaoHunExchangeRsp::default_instance_ = NULL;

PetYaoHunExchangeRsp* PetYaoHunExchangeRsp::New() const {
  return new PetYaoHunExchangeRsp;
}

void PetYaoHunExchangeRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    target_id_ = 0;
    num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunExchangeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_target_id;
        break;
      }

      // optional int32 target_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_id_)));
          set_has_target_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_num;
        break;
      }

      // optional int32 num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunExchangeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 target_id = 2;
  if (has_target_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target_id(), output);
  }

  // optional int32 num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunExchangeRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 target_id = 2;
  if (has_target_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target_id(), target);
  }

  // optional int32 num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunExchangeRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 target_id = 2;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_id());
    }

    // optional int32 num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunExchangeRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunExchangeRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunExchangeRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunExchangeRsp::MergeFrom(const PetYaoHunExchangeRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_target_id()) {
      set_target_id(from.target_id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunExchangeRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunExchangeRsp::CopyFrom(const PetYaoHunExchangeRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunExchangeRsp::IsInitialized() const {

  return true;
}

void PetYaoHunExchangeRsp::Swap(PetYaoHunExchangeRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(target_id_, other->target_id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunExchangeRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunExchangeRsp_descriptor_;
  metadata.reflection = PetYaoHunExchangeRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunLvReq::kFightPosFieldNumber;
const int PetYaoHunLvReq::kSlotPosFieldNumber;
#endif  // !_MSC_VER

PetYaoHunLvReq::PetYaoHunLvReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunLvReq::InitAsDefaultInstance() {
}

PetYaoHunLvReq::PetYaoHunLvReq(const PetYaoHunLvReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunLvReq::SharedCtor() {
  _cached_size_ = 0;
  fight_pos_ = 0;
  slot_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunLvReq::~PetYaoHunLvReq() {
  SharedDtor();
}

void PetYaoHunLvReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunLvReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunLvReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunLvReq_descriptor_;
}

const PetYaoHunLvReq& PetYaoHunLvReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunLvReq* PetYaoHunLvReq::default_instance_ = NULL;

PetYaoHunLvReq* PetYaoHunLvReq::New() const {
  return new PetYaoHunLvReq;
}

void PetYaoHunLvReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fight_pos_ = 0;
    slot_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunLvReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fight_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_pos_)));
          set_has_fight_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_slot_pos;
        break;
      }

      // optional int32 slot_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_pos_)));
          set_has_slot_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunLvReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fight_pos = 1;
  if (has_fight_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fight_pos(), output);
  }

  // optional int32 slot_pos = 2;
  if (has_slot_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunLvReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fight_pos = 1;
  if (has_fight_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fight_pos(), target);
  }

  // optional int32 slot_pos = 2;
  if (has_slot_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunLvReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fight_pos = 1;
    if (has_fight_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_pos());
    }

    // optional int32 slot_pos = 2;
    if (has_slot_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunLvReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunLvReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunLvReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunLvReq::MergeFrom(const PetYaoHunLvReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fight_pos()) {
      set_fight_pos(from.fight_pos());
    }
    if (from.has_slot_pos()) {
      set_slot_pos(from.slot_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunLvReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunLvReq::CopyFrom(const PetYaoHunLvReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunLvReq::IsInitialized() const {

  return true;
}

void PetYaoHunLvReq::Swap(PetYaoHunLvReq* other) {
  if (other != this) {
    std::swap(fight_pos_, other->fight_pos_);
    std::swap(slot_pos_, other->slot_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunLvReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunLvReq_descriptor_;
  metadata.reflection = PetYaoHunLvReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunLvRsp::kRetFieldNumber;
const int PetYaoHunLvRsp::kFightPosFieldNumber;
const int PetYaoHunLvRsp::kSlotPosFieldNumber;
#endif  // !_MSC_VER

PetYaoHunLvRsp::PetYaoHunLvRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunLvRsp::InitAsDefaultInstance() {
}

PetYaoHunLvRsp::PetYaoHunLvRsp(const PetYaoHunLvRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunLvRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  fight_pos_ = 0;
  slot_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunLvRsp::~PetYaoHunLvRsp() {
  SharedDtor();
}

void PetYaoHunLvRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunLvRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunLvRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunLvRsp_descriptor_;
}

const PetYaoHunLvRsp& PetYaoHunLvRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunLvRsp* PetYaoHunLvRsp::default_instance_ = NULL;

PetYaoHunLvRsp* PetYaoHunLvRsp::New() const {
  return new PetYaoHunLvRsp;
}

void PetYaoHunLvRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    fight_pos_ = 0;
    slot_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunLvRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fight_pos;
        break;
      }

      // optional int32 fight_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_pos_)));
          set_has_fight_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_slot_pos;
        break;
      }

      // optional int32 slot_pos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_pos_)));
          set_has_slot_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunLvRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 fight_pos = 2;
  if (has_fight_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fight_pos(), output);
  }

  // optional int32 slot_pos = 3;
  if (has_slot_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->slot_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunLvRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 fight_pos = 2;
  if (has_fight_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fight_pos(), target);
  }

  // optional int32 slot_pos = 3;
  if (has_slot_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->slot_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunLvRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 fight_pos = 2;
    if (has_fight_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_pos());
    }

    // optional int32 slot_pos = 3;
    if (has_slot_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunLvRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunLvRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunLvRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunLvRsp::MergeFrom(const PetYaoHunLvRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_fight_pos()) {
      set_fight_pos(from.fight_pos());
    }
    if (from.has_slot_pos()) {
      set_slot_pos(from.slot_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunLvRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunLvRsp::CopyFrom(const PetYaoHunLvRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunLvRsp::IsInitialized() const {

  return true;
}

void PetYaoHunLvRsp::Swap(PetYaoHunLvRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(fight_pos_, other->fight_pos_);
    std::swap(slot_pos_, other->slot_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunLvRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunLvRsp_descriptor_;
  metadata.reflection = PetYaoHunLvRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunBreakReq::kFightPosFieldNumber;
const int PetYaoHunBreakReq::kSlotPosFieldNumber;
#endif  // !_MSC_VER

PetYaoHunBreakReq::PetYaoHunBreakReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunBreakReq::InitAsDefaultInstance() {
}

PetYaoHunBreakReq::PetYaoHunBreakReq(const PetYaoHunBreakReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunBreakReq::SharedCtor() {
  _cached_size_ = 0;
  fight_pos_ = 0;
  slot_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunBreakReq::~PetYaoHunBreakReq() {
  SharedDtor();
}

void PetYaoHunBreakReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunBreakReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunBreakReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunBreakReq_descriptor_;
}

const PetYaoHunBreakReq& PetYaoHunBreakReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunBreakReq* PetYaoHunBreakReq::default_instance_ = NULL;

PetYaoHunBreakReq* PetYaoHunBreakReq::New() const {
  return new PetYaoHunBreakReq;
}

void PetYaoHunBreakReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fight_pos_ = 0;
    slot_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunBreakReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fight_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_pos_)));
          set_has_fight_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_slot_pos;
        break;
      }

      // optional int32 slot_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_pos_)));
          set_has_slot_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunBreakReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fight_pos = 1;
  if (has_fight_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fight_pos(), output);
  }

  // optional int32 slot_pos = 2;
  if (has_slot_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunBreakReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fight_pos = 1;
  if (has_fight_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fight_pos(), target);
  }

  // optional int32 slot_pos = 2;
  if (has_slot_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunBreakReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fight_pos = 1;
    if (has_fight_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_pos());
    }

    // optional int32 slot_pos = 2;
    if (has_slot_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunBreakReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunBreakReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunBreakReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunBreakReq::MergeFrom(const PetYaoHunBreakReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fight_pos()) {
      set_fight_pos(from.fight_pos());
    }
    if (from.has_slot_pos()) {
      set_slot_pos(from.slot_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunBreakReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunBreakReq::CopyFrom(const PetYaoHunBreakReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunBreakReq::IsInitialized() const {

  return true;
}

void PetYaoHunBreakReq::Swap(PetYaoHunBreakReq* other) {
  if (other != this) {
    std::swap(fight_pos_, other->fight_pos_);
    std::swap(slot_pos_, other->slot_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunBreakReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunBreakReq_descriptor_;
  metadata.reflection = PetYaoHunBreakReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunBreakRsp::kRetFieldNumber;
const int PetYaoHunBreakRsp::kFightPosFieldNumber;
const int PetYaoHunBreakRsp::kSlotPosFieldNumber;
#endif  // !_MSC_VER

PetYaoHunBreakRsp::PetYaoHunBreakRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunBreakRsp::InitAsDefaultInstance() {
}

PetYaoHunBreakRsp::PetYaoHunBreakRsp(const PetYaoHunBreakRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunBreakRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  fight_pos_ = 0;
  slot_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunBreakRsp::~PetYaoHunBreakRsp() {
  SharedDtor();
}

void PetYaoHunBreakRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunBreakRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunBreakRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunBreakRsp_descriptor_;
}

const PetYaoHunBreakRsp& PetYaoHunBreakRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunBreakRsp* PetYaoHunBreakRsp::default_instance_ = NULL;

PetYaoHunBreakRsp* PetYaoHunBreakRsp::New() const {
  return new PetYaoHunBreakRsp;
}

void PetYaoHunBreakRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    fight_pos_ = 0;
    slot_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunBreakRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fight_pos;
        break;
      }

      // optional int32 fight_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_pos_)));
          set_has_fight_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_slot_pos;
        break;
      }

      // optional int32 slot_pos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_pos_)));
          set_has_slot_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunBreakRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 fight_pos = 2;
  if (has_fight_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fight_pos(), output);
  }

  // optional int32 slot_pos = 3;
  if (has_slot_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->slot_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunBreakRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 fight_pos = 2;
  if (has_fight_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fight_pos(), target);
  }

  // optional int32 slot_pos = 3;
  if (has_slot_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->slot_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunBreakRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 fight_pos = 2;
    if (has_fight_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_pos());
    }

    // optional int32 slot_pos = 3;
    if (has_slot_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunBreakRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunBreakRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunBreakRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunBreakRsp::MergeFrom(const PetYaoHunBreakRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_fight_pos()) {
      set_fight_pos(from.fight_pos());
    }
    if (from.has_slot_pos()) {
      set_slot_pos(from.slot_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunBreakRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunBreakRsp::CopyFrom(const PetYaoHunBreakRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunBreakRsp::IsInitialized() const {

  return true;
}

void PetYaoHunBreakRsp::Swap(PetYaoHunBreakRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(fight_pos_, other->fight_pos_);
    std::swap(slot_pos_, other->slot_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunBreakRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunBreakRsp_descriptor_;
  metadata.reflection = PetYaoHunBreakRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PetLianYaoTqBuyReq::PetLianYaoTqBuyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetLianYaoTqBuyReq::InitAsDefaultInstance() {
}

PetLianYaoTqBuyReq::PetLianYaoTqBuyReq(const PetLianYaoTqBuyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetLianYaoTqBuyReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetLianYaoTqBuyReq::~PetLianYaoTqBuyReq() {
  SharedDtor();
}

void PetLianYaoTqBuyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetLianYaoTqBuyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetLianYaoTqBuyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetLianYaoTqBuyReq_descriptor_;
}

const PetLianYaoTqBuyReq& PetLianYaoTqBuyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetLianYaoTqBuyReq* PetLianYaoTqBuyReq::default_instance_ = NULL;

PetLianYaoTqBuyReq* PetLianYaoTqBuyReq::New() const {
  return new PetLianYaoTqBuyReq;
}

void PetLianYaoTqBuyReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetLianYaoTqBuyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PetLianYaoTqBuyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetLianYaoTqBuyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetLianYaoTqBuyReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetLianYaoTqBuyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetLianYaoTqBuyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetLianYaoTqBuyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetLianYaoTqBuyReq::MergeFrom(const PetLianYaoTqBuyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetLianYaoTqBuyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetLianYaoTqBuyReq::CopyFrom(const PetLianYaoTqBuyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetLianYaoTqBuyReq::IsInitialized() const {

  return true;
}

void PetLianYaoTqBuyReq::Swap(PetLianYaoTqBuyReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetLianYaoTqBuyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetLianYaoTqBuyReq_descriptor_;
  metadata.reflection = PetLianYaoTqBuyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetLianYaoTqBuyRsp::kRetFieldNumber;
#endif  // !_MSC_VER

PetLianYaoTqBuyRsp::PetLianYaoTqBuyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetLianYaoTqBuyRsp::InitAsDefaultInstance() {
}

PetLianYaoTqBuyRsp::PetLianYaoTqBuyRsp(const PetLianYaoTqBuyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetLianYaoTqBuyRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetLianYaoTqBuyRsp::~PetLianYaoTqBuyRsp() {
  SharedDtor();
}

void PetLianYaoTqBuyRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetLianYaoTqBuyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetLianYaoTqBuyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetLianYaoTqBuyRsp_descriptor_;
}

const PetLianYaoTqBuyRsp& PetLianYaoTqBuyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetLianYaoTqBuyRsp* PetLianYaoTqBuyRsp::default_instance_ = NULL;

PetLianYaoTqBuyRsp* PetLianYaoTqBuyRsp::New() const {
  return new PetLianYaoTqBuyRsp;
}

void PetLianYaoTqBuyRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetLianYaoTqBuyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetLianYaoTqBuyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetLianYaoTqBuyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetLianYaoTqBuyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetLianYaoTqBuyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetLianYaoTqBuyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetLianYaoTqBuyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetLianYaoTqBuyRsp::MergeFrom(const PetLianYaoTqBuyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetLianYaoTqBuyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetLianYaoTqBuyRsp::CopyFrom(const PetLianYaoTqBuyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetLianYaoTqBuyRsp::IsInitialized() const {

  return true;
}

void PetLianYaoTqBuyRsp::Swap(PetLianYaoTqBuyRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetLianYaoTqBuyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetLianYaoTqBuyRsp_descriptor_;
  metadata.reflection = PetLianYaoTqBuyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunSuitReq::kFightPosFieldNumber;
const int PetYaoHunSuitReq::kSuitIdFieldNumber;
#endif  // !_MSC_VER

PetYaoHunSuitReq::PetYaoHunSuitReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunSuitReq::InitAsDefaultInstance() {
}

PetYaoHunSuitReq::PetYaoHunSuitReq(const PetYaoHunSuitReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunSuitReq::SharedCtor() {
  _cached_size_ = 0;
  fight_pos_ = 0;
  suit_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunSuitReq::~PetYaoHunSuitReq() {
  SharedDtor();
}

void PetYaoHunSuitReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunSuitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunSuitReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunSuitReq_descriptor_;
}

const PetYaoHunSuitReq& PetYaoHunSuitReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunSuitReq* PetYaoHunSuitReq::default_instance_ = NULL;

PetYaoHunSuitReq* PetYaoHunSuitReq::New() const {
  return new PetYaoHunSuitReq;
}

void PetYaoHunSuitReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fight_pos_ = 0;
    suit_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunSuitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fight_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_pos_)));
          set_has_fight_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_suit_id;
        break;
      }

      // optional int32 suit_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_suit_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_id_)));
          set_has_suit_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunSuitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fight_pos = 1;
  if (has_fight_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fight_pos(), output);
  }

  // optional int32 suit_id = 2;
  if (has_suit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->suit_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunSuitReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fight_pos = 1;
  if (has_fight_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fight_pos(), target);
  }

  // optional int32 suit_id = 2;
  if (has_suit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->suit_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunSuitReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fight_pos = 1;
    if (has_fight_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_pos());
    }

    // optional int32 suit_id = 2;
    if (has_suit_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->suit_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunSuitReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunSuitReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunSuitReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunSuitReq::MergeFrom(const PetYaoHunSuitReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fight_pos()) {
      set_fight_pos(from.fight_pos());
    }
    if (from.has_suit_id()) {
      set_suit_id(from.suit_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunSuitReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunSuitReq::CopyFrom(const PetYaoHunSuitReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunSuitReq::IsInitialized() const {

  return true;
}

void PetYaoHunSuitReq::Swap(PetYaoHunSuitReq* other) {
  if (other != this) {
    std::swap(fight_pos_, other->fight_pos_);
    std::swap(suit_id_, other->suit_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunSuitReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunSuitReq_descriptor_;
  metadata.reflection = PetYaoHunSuitReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunSuitRsp::kRetFieldNumber;
const int PetYaoHunSuitRsp::kFightPosFieldNumber;
const int PetYaoHunSuitRsp::kSuitIdFieldNumber;
#endif  // !_MSC_VER

PetYaoHunSuitRsp::PetYaoHunSuitRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunSuitRsp::InitAsDefaultInstance() {
}

PetYaoHunSuitRsp::PetYaoHunSuitRsp(const PetYaoHunSuitRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunSuitRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  fight_pos_ = 0;
  suit_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunSuitRsp::~PetYaoHunSuitRsp() {
  SharedDtor();
}

void PetYaoHunSuitRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunSuitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunSuitRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunSuitRsp_descriptor_;
}

const PetYaoHunSuitRsp& PetYaoHunSuitRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunSuitRsp* PetYaoHunSuitRsp::default_instance_ = NULL;

PetYaoHunSuitRsp* PetYaoHunSuitRsp::New() const {
  return new PetYaoHunSuitRsp;
}

void PetYaoHunSuitRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    fight_pos_ = 0;
    suit_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunSuitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fight_pos;
        break;
      }

      // optional int32 fight_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_pos_)));
          set_has_fight_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_suit_id;
        break;
      }

      // optional int32 suit_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_suit_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_id_)));
          set_has_suit_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunSuitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 fight_pos = 2;
  if (has_fight_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fight_pos(), output);
  }

  // optional int32 suit_id = 3;
  if (has_suit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->suit_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunSuitRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 fight_pos = 2;
  if (has_fight_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fight_pos(), target);
  }

  // optional int32 suit_id = 3;
  if (has_suit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->suit_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunSuitRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 fight_pos = 2;
    if (has_fight_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_pos());
    }

    // optional int32 suit_id = 3;
    if (has_suit_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->suit_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunSuitRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunSuitRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunSuitRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunSuitRsp::MergeFrom(const PetYaoHunSuitRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_fight_pos()) {
      set_fight_pos(from.fight_pos());
    }
    if (from.has_suit_id()) {
      set_suit_id(from.suit_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunSuitRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunSuitRsp::CopyFrom(const PetYaoHunSuitRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunSuitRsp::IsInitialized() const {

  return true;
}

void PetYaoHunSuitRsp::Swap(PetYaoHunSuitRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(fight_pos_, other->fight_pos_);
    std::swap(suit_id_, other->suit_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunSuitRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunSuitRsp_descriptor_;
  metadata.reflection = PetYaoHunSuitRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunResetReq::kBagPosFieldNumber;
#endif  // !_MSC_VER

PetYaoHunResetReq::PetYaoHunResetReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunResetReq::InitAsDefaultInstance() {
}

PetYaoHunResetReq::PetYaoHunResetReq(const PetYaoHunResetReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunResetReq::SharedCtor() {
  _cached_size_ = 0;
  bag_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunResetReq::~PetYaoHunResetReq() {
  SharedDtor();
}

void PetYaoHunResetReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunResetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunResetReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunResetReq_descriptor_;
}

const PetYaoHunResetReq& PetYaoHunResetReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunResetReq* PetYaoHunResetReq::default_instance_ = NULL;

PetYaoHunResetReq* PetYaoHunResetReq::New() const {
  return new PetYaoHunResetReq;
}

void PetYaoHunResetReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bag_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunResetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bag_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bag_pos_)));
          set_has_bag_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunResetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 bag_pos = 1;
  if (has_bag_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bag_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunResetReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 bag_pos = 1;
  if (has_bag_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bag_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunResetReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 bag_pos = 1;
    if (has_bag_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bag_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunResetReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunResetReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunResetReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunResetReq::MergeFrom(const PetYaoHunResetReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bag_pos()) {
      set_bag_pos(from.bag_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunResetReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunResetReq::CopyFrom(const PetYaoHunResetReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunResetReq::IsInitialized() const {

  return true;
}

void PetYaoHunResetReq::Swap(PetYaoHunResetReq* other) {
  if (other != this) {
    std::swap(bag_pos_, other->bag_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunResetReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunResetReq_descriptor_;
  metadata.reflection = PetYaoHunResetReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetYaoHunResetRsp::kRetFieldNumber;
const int PetYaoHunResetRsp::kBagPosFieldNumber;
#endif  // !_MSC_VER

PetYaoHunResetRsp::PetYaoHunResetRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetYaoHunResetRsp::InitAsDefaultInstance() {
}

PetYaoHunResetRsp::PetYaoHunResetRsp(const PetYaoHunResetRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetYaoHunResetRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  bag_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetYaoHunResetRsp::~PetYaoHunResetRsp() {
  SharedDtor();
}

void PetYaoHunResetRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetYaoHunResetRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetYaoHunResetRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetYaoHunResetRsp_descriptor_;
}

const PetYaoHunResetRsp& PetYaoHunResetRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Pet_2eproto();
  return *default_instance_;
}

PetYaoHunResetRsp* PetYaoHunResetRsp::default_instance_ = NULL;

PetYaoHunResetRsp* PetYaoHunResetRsp::New() const {
  return new PetYaoHunResetRsp;
}

void PetYaoHunResetRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    bag_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetYaoHunResetRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bag_pos;
        break;
      }

      // optional int32 bag_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bag_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bag_pos_)));
          set_has_bag_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetYaoHunResetRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 bag_pos = 2;
  if (has_bag_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bag_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetYaoHunResetRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 bag_pos = 2;
  if (has_bag_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bag_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetYaoHunResetRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 bag_pos = 2;
    if (has_bag_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bag_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetYaoHunResetRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetYaoHunResetRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetYaoHunResetRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetYaoHunResetRsp::MergeFrom(const PetYaoHunResetRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_bag_pos()) {
      set_bag_pos(from.bag_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetYaoHunResetRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetYaoHunResetRsp::CopyFrom(const PetYaoHunResetRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetYaoHunResetRsp::IsInitialized() const {

  return true;
}

void PetYaoHunResetRsp::Swap(PetYaoHunResetRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(bag_pos_, other->bag_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetYaoHunResetRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetYaoHunResetRsp_descriptor_;
  metadata.reflection = PetYaoHunResetRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
