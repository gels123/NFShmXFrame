// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: daily.proto

#ifndef PROTOBUF_daily_2eproto__INCLUDED
#define PROTOBUF_daily_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_daily_2eproto();
void protobuf_AssignDesc_daily_2eproto();
void protobuf_ShutdownFile_daily_2eproto();

class E_DailyDaily;
class Sheet_DailyDaily;
class E_DailyReward;
class Sheet_DailyReward;
class E_DailyCultivateAttributeDesc;
class E_DailyCultivate;
class Sheet_DailyCultivate;

// ===================================================================

class E_DailyDaily : public ::google::protobuf::Message {
 public:
  E_DailyDaily();
  virtual ~E_DailyDaily();

  E_DailyDaily(const E_DailyDaily& from);

  inline E_DailyDaily& operator=(const E_DailyDaily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_DailyDaily& default_instance();

  void Swap(E_DailyDaily* other);

  // implements Message ----------------------------------------------

  E_DailyDaily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_DailyDaily& from);
  void MergeFrom(const E_DailyDaily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_args = 4;
  inline bool has_m_args() const;
  inline void clear_m_args();
  static const int kMArgsFieldNumber = 4;
  inline ::google::protobuf::int32 m_args() const;
  inline void set_m_args(::google::protobuf::int32 value);

  // optional int32 m_playtype = 5;
  inline bool has_m_playtype() const;
  inline void clear_m_playtype();
  static const int kMPlaytypeFieldNumber = 5;
  inline ::google::protobuf::int32 m_playtype() const;
  inline void set_m_playtype(::google::protobuf::int32 value);

  // optional int32 m_playargs = 6;
  inline bool has_m_playargs() const;
  inline void clear_m_playargs();
  static const int kMPlayargsFieldNumber = 6;
  inline ::google::protobuf::int32 m_playargs() const;
  inline void set_m_playargs(::google::protobuf::int32 value);

  // optional int64 m_funciontid = 7;
  inline bool has_m_funciontid() const;
  inline void clear_m_funciontid();
  static const int kMFunciontidFieldNumber = 7;
  inline ::google::protobuf::int64 m_funciontid() const;
  inline void set_m_funciontid(::google::protobuf::int64 value);

  // optional int32 m_number = 8;
  inline bool has_m_number() const;
  inline void clear_m_number();
  static const int kMNumberFieldNumber = 8;
  inline ::google::protobuf::int32 m_number() const;
  inline void set_m_number(::google::protobuf::int32 value);

  // optional int32 m_viptype = 9;
  inline bool has_m_viptype() const;
  inline void clear_m_viptype();
  static const int kMViptypeFieldNumber = 9;
  inline ::google::protobuf::int32 m_viptype() const;
  inline void set_m_viptype(::google::protobuf::int32 value);

  // optional int32 m_othernum = 10;
  inline bool has_m_othernum() const;
  inline void clear_m_othernum();
  static const int kMOthernumFieldNumber = 10;
  inline ::google::protobuf::int32 m_othernum() const;
  inline void set_m_othernum(::google::protobuf::int32 value);

  // optional int32 m_eachscore = 11;
  inline bool has_m_eachscore() const;
  inline void clear_m_eachscore();
  static const int kMEachscoreFieldNumber = 11;
  inline ::google::protobuf::int32 m_eachscore() const;
  inline void set_m_eachscore(::google::protobuf::int32 value);

  // optional int32 m_cycle = 12;
  inline bool has_m_cycle() const;
  inline void clear_m_cycle();
  static const int kMCycleFieldNumber = 12;
  inline ::google::protobuf::int32 m_cycle() const;
  inline void set_m_cycle(::google::protobuf::int32 value);

  // optional int32 m_regreward = 13;
  inline bool has_m_regreward() const;
  inline void clear_m_regreward();
  static const int kMRegrewardFieldNumber = 13;
  inline ::google::protobuf::int32 m_regreward() const;
  inline void set_m_regreward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_DailyDaily)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_args();
  inline void clear_has_m_args();
  inline void set_has_m_playtype();
  inline void clear_has_m_playtype();
  inline void set_has_m_playargs();
  inline void clear_has_m_playargs();
  inline void set_has_m_funciontid();
  inline void clear_has_m_funciontid();
  inline void set_has_m_number();
  inline void clear_has_m_number();
  inline void set_has_m_viptype();
  inline void clear_has_m_viptype();
  inline void set_has_m_othernum();
  inline void clear_has_m_othernum();
  inline void set_has_m_eachscore();
  inline void clear_has_m_eachscore();
  inline void set_has_m_cycle();
  inline void clear_has_m_cycle();
  inline void set_has_m_regreward();
  inline void clear_has_m_regreward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::std::string* m_name_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_args_;
  ::google::protobuf::int32 m_playtype_;
  ::google::protobuf::int32 m_playargs_;
  ::google::protobuf::int64 m_funciontid_;
  ::google::protobuf::int32 m_number_;
  ::google::protobuf::int32 m_viptype_;
  ::google::protobuf::int32 m_othernum_;
  ::google::protobuf::int32 m_eachscore_;
  ::google::protobuf::int32 m_cycle_;
  ::google::protobuf::int32 m_regreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_daily_2eproto();
  friend void protobuf_AssignDesc_daily_2eproto();
  friend void protobuf_ShutdownFile_daily_2eproto();

  void InitAsDefaultInstance();
  static E_DailyDaily* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_DailyDaily : public ::google::protobuf::Message {
 public:
  Sheet_DailyDaily();
  virtual ~Sheet_DailyDaily();

  Sheet_DailyDaily(const Sheet_DailyDaily& from);

  inline Sheet_DailyDaily& operator=(const Sheet_DailyDaily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_DailyDaily& default_instance();

  void Swap(Sheet_DailyDaily* other);

  // implements Message ----------------------------------------------

  Sheet_DailyDaily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_DailyDaily& from);
  void MergeFrom(const Sheet_DailyDaily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_DailyDaily E_DailyDaily_List = 1;
  inline int e_dailydaily_list_size() const;
  inline void clear_e_dailydaily_list();
  static const int kEDailyDailyListFieldNumber = 1;
  inline const ::proto_ff::E_DailyDaily& e_dailydaily_list(int index) const;
  inline ::proto_ff::E_DailyDaily* mutable_e_dailydaily_list(int index);
  inline ::proto_ff::E_DailyDaily* add_e_dailydaily_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyDaily >&
      e_dailydaily_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyDaily >*
      mutable_e_dailydaily_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_DailyDaily)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyDaily > e_dailydaily_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_daily_2eproto();
  friend void protobuf_AssignDesc_daily_2eproto();
  friend void protobuf_ShutdownFile_daily_2eproto();

  void InitAsDefaultInstance();
  static Sheet_DailyDaily* default_instance_;
};
// -------------------------------------------------------------------

class E_DailyReward : public ::google::protobuf::Message {
 public:
  E_DailyReward();
  virtual ~E_DailyReward();

  E_DailyReward(const E_DailyReward& from);

  inline E_DailyReward& operator=(const E_DailyReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_DailyReward& default_instance();

  void Swap(E_DailyReward* other);

  // implements Message ----------------------------------------------

  E_DailyReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_DailyReward& from);
  void MergeFrom(const E_DailyReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_activescore = 3;
  inline bool has_m_activescore() const;
  inline void clear_m_activescore();
  static const int kMActivescoreFieldNumber = 3;
  inline ::google::protobuf::int32 m_activescore() const;
  inline void set_m_activescore(::google::protobuf::int32 value);

  // optional int64 m_rewardid = 4;
  inline bool has_m_rewardid() const;
  inline void clear_m_rewardid();
  static const int kMRewardidFieldNumber = 4;
  inline ::google::protobuf::int64 m_rewardid() const;
  inline void set_m_rewardid(::google::protobuf::int64 value);

  // optional int32 m_rewardnum = 5;
  inline bool has_m_rewardnum() const;
  inline void clear_m_rewardnum();
  static const int kMRewardnumFieldNumber = 5;
  inline ::google::protobuf::int32 m_rewardnum() const;
  inline void set_m_rewardnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_DailyReward)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_activescore();
  inline void clear_has_m_activescore();
  inline void set_has_m_rewardid();
  inline void clear_has_m_rewardid();
  inline void set_has_m_rewardnum();
  inline void clear_has_m_rewardnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int64 m_rewardid_;
  ::google::protobuf::int32 m_activescore_;
  ::google::protobuf::int32 m_rewardnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_daily_2eproto();
  friend void protobuf_AssignDesc_daily_2eproto();
  friend void protobuf_ShutdownFile_daily_2eproto();

  void InitAsDefaultInstance();
  static E_DailyReward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_DailyReward : public ::google::protobuf::Message {
 public:
  Sheet_DailyReward();
  virtual ~Sheet_DailyReward();

  Sheet_DailyReward(const Sheet_DailyReward& from);

  inline Sheet_DailyReward& operator=(const Sheet_DailyReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_DailyReward& default_instance();

  void Swap(Sheet_DailyReward* other);

  // implements Message ----------------------------------------------

  Sheet_DailyReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_DailyReward& from);
  void MergeFrom(const Sheet_DailyReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_DailyReward E_DailyReward_List = 1;
  inline int e_dailyreward_list_size() const;
  inline void clear_e_dailyreward_list();
  static const int kEDailyRewardListFieldNumber = 1;
  inline const ::proto_ff::E_DailyReward& e_dailyreward_list(int index) const;
  inline ::proto_ff::E_DailyReward* mutable_e_dailyreward_list(int index);
  inline ::proto_ff::E_DailyReward* add_e_dailyreward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyReward >&
      e_dailyreward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyReward >*
      mutable_e_dailyreward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_DailyReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyReward > e_dailyreward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_daily_2eproto();
  friend void protobuf_AssignDesc_daily_2eproto();
  friend void protobuf_ShutdownFile_daily_2eproto();

  void InitAsDefaultInstance();
  static Sheet_DailyReward* default_instance_;
};
// -------------------------------------------------------------------

class E_DailyCultivateAttributeDesc : public ::google::protobuf::Message {
 public:
  E_DailyCultivateAttributeDesc();
  virtual ~E_DailyCultivateAttributeDesc();

  E_DailyCultivateAttributeDesc(const E_DailyCultivateAttributeDesc& from);

  inline E_DailyCultivateAttributeDesc& operator=(const E_DailyCultivateAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_DailyCultivateAttributeDesc& default_instance();

  void Swap(E_DailyCultivateAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_DailyCultivateAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_DailyCultivateAttributeDesc& from);
  void MergeFrom(const E_DailyCultivateAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_value = 2;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 2;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_DailyCultivateAttributeDesc)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_daily_2eproto();
  friend void protobuf_AssignDesc_daily_2eproto();
  friend void protobuf_ShutdownFile_daily_2eproto();

  void InitAsDefaultInstance();
  static E_DailyCultivateAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_DailyCultivate : public ::google::protobuf::Message {
 public:
  E_DailyCultivate();
  virtual ~E_DailyCultivate();

  E_DailyCultivate(const E_DailyCultivate& from);

  inline E_DailyCultivate& operator=(const E_DailyCultivate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_DailyCultivate& default_instance();

  void Swap(E_DailyCultivate* other);

  // implements Message ----------------------------------------------

  E_DailyCultivate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_DailyCultivate& from);
  void MergeFrom(const E_DailyCultivate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_lv = 2;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 2;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_exp = 3;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 3;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // repeated .proto_ff.E_DailyCultivateAttributeDesc m_attribute = 4;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 4;
  inline const ::proto_ff::E_DailyCultivateAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_DailyCultivateAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_DailyCultivateAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyCultivateAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyCultivateAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_DailyCultivate)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyCultivateAttributeDesc > m_attribute_;
  ::google::protobuf::int32 m_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_daily_2eproto();
  friend void protobuf_AssignDesc_daily_2eproto();
  friend void protobuf_ShutdownFile_daily_2eproto();

  void InitAsDefaultInstance();
  static E_DailyCultivate* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_DailyCultivate : public ::google::protobuf::Message {
 public:
  Sheet_DailyCultivate();
  virtual ~Sheet_DailyCultivate();

  Sheet_DailyCultivate(const Sheet_DailyCultivate& from);

  inline Sheet_DailyCultivate& operator=(const Sheet_DailyCultivate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_DailyCultivate& default_instance();

  void Swap(Sheet_DailyCultivate* other);

  // implements Message ----------------------------------------------

  Sheet_DailyCultivate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_DailyCultivate& from);
  void MergeFrom(const Sheet_DailyCultivate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_DailyCultivate E_DailyCultivate_List = 1;
  inline int e_dailycultivate_list_size() const;
  inline void clear_e_dailycultivate_list();
  static const int kEDailyCultivateListFieldNumber = 1;
  inline const ::proto_ff::E_DailyCultivate& e_dailycultivate_list(int index) const;
  inline ::proto_ff::E_DailyCultivate* mutable_e_dailycultivate_list(int index);
  inline ::proto_ff::E_DailyCultivate* add_e_dailycultivate_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyCultivate >&
      e_dailycultivate_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyCultivate >*
      mutable_e_dailycultivate_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_DailyCultivate)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyCultivate > e_dailycultivate_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_daily_2eproto();
  friend void protobuf_AssignDesc_daily_2eproto();
  friend void protobuf_ShutdownFile_daily_2eproto();

  void InitAsDefaultInstance();
  static Sheet_DailyCultivate* default_instance_;
};
// ===================================================================


// ===================================================================

// E_DailyDaily

// optional int64 m_id = 1;
inline bool E_DailyDaily::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_DailyDaily::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_DailyDaily::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_DailyDaily::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_DailyDaily::m_id() const {
  return m_id_;
}
inline void E_DailyDaily::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_DailyDaily::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_DailyDaily::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_DailyDaily::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_DailyDaily::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_DailyDaily::m_name() const {
  return *m_name_;
}
inline void E_DailyDaily::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_DailyDaily::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_DailyDaily::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_DailyDaily::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_DailyDaily::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_DailyDaily::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_type = 3;
inline bool E_DailyDaily::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_DailyDaily::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_DailyDaily::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_DailyDaily::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_DailyDaily::m_type() const {
  return m_type_;
}
inline void E_DailyDaily::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_args = 4;
inline bool E_DailyDaily::has_m_args() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_DailyDaily::set_has_m_args() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_DailyDaily::clear_has_m_args() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_DailyDaily::clear_m_args() {
  m_args_ = 0;
  clear_has_m_args();
}
inline ::google::protobuf::int32 E_DailyDaily::m_args() const {
  return m_args_;
}
inline void E_DailyDaily::set_m_args(::google::protobuf::int32 value) {
  set_has_m_args();
  m_args_ = value;
}

// optional int32 m_playtype = 5;
inline bool E_DailyDaily::has_m_playtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_DailyDaily::set_has_m_playtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_DailyDaily::clear_has_m_playtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_DailyDaily::clear_m_playtype() {
  m_playtype_ = 0;
  clear_has_m_playtype();
}
inline ::google::protobuf::int32 E_DailyDaily::m_playtype() const {
  return m_playtype_;
}
inline void E_DailyDaily::set_m_playtype(::google::protobuf::int32 value) {
  set_has_m_playtype();
  m_playtype_ = value;
}

// optional int32 m_playargs = 6;
inline bool E_DailyDaily::has_m_playargs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_DailyDaily::set_has_m_playargs() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_DailyDaily::clear_has_m_playargs() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_DailyDaily::clear_m_playargs() {
  m_playargs_ = 0;
  clear_has_m_playargs();
}
inline ::google::protobuf::int32 E_DailyDaily::m_playargs() const {
  return m_playargs_;
}
inline void E_DailyDaily::set_m_playargs(::google::protobuf::int32 value) {
  set_has_m_playargs();
  m_playargs_ = value;
}

// optional int64 m_funciontid = 7;
inline bool E_DailyDaily::has_m_funciontid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_DailyDaily::set_has_m_funciontid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_DailyDaily::clear_has_m_funciontid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_DailyDaily::clear_m_funciontid() {
  m_funciontid_ = GOOGLE_LONGLONG(0);
  clear_has_m_funciontid();
}
inline ::google::protobuf::int64 E_DailyDaily::m_funciontid() const {
  return m_funciontid_;
}
inline void E_DailyDaily::set_m_funciontid(::google::protobuf::int64 value) {
  set_has_m_funciontid();
  m_funciontid_ = value;
}

// optional int32 m_number = 8;
inline bool E_DailyDaily::has_m_number() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_DailyDaily::set_has_m_number() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_DailyDaily::clear_has_m_number() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_DailyDaily::clear_m_number() {
  m_number_ = 0;
  clear_has_m_number();
}
inline ::google::protobuf::int32 E_DailyDaily::m_number() const {
  return m_number_;
}
inline void E_DailyDaily::set_m_number(::google::protobuf::int32 value) {
  set_has_m_number();
  m_number_ = value;
}

// optional int32 m_viptype = 9;
inline bool E_DailyDaily::has_m_viptype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_DailyDaily::set_has_m_viptype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_DailyDaily::clear_has_m_viptype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_DailyDaily::clear_m_viptype() {
  m_viptype_ = 0;
  clear_has_m_viptype();
}
inline ::google::protobuf::int32 E_DailyDaily::m_viptype() const {
  return m_viptype_;
}
inline void E_DailyDaily::set_m_viptype(::google::protobuf::int32 value) {
  set_has_m_viptype();
  m_viptype_ = value;
}

// optional int32 m_othernum = 10;
inline bool E_DailyDaily::has_m_othernum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_DailyDaily::set_has_m_othernum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_DailyDaily::clear_has_m_othernum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_DailyDaily::clear_m_othernum() {
  m_othernum_ = 0;
  clear_has_m_othernum();
}
inline ::google::protobuf::int32 E_DailyDaily::m_othernum() const {
  return m_othernum_;
}
inline void E_DailyDaily::set_m_othernum(::google::protobuf::int32 value) {
  set_has_m_othernum();
  m_othernum_ = value;
}

// optional int32 m_eachscore = 11;
inline bool E_DailyDaily::has_m_eachscore() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_DailyDaily::set_has_m_eachscore() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_DailyDaily::clear_has_m_eachscore() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_DailyDaily::clear_m_eachscore() {
  m_eachscore_ = 0;
  clear_has_m_eachscore();
}
inline ::google::protobuf::int32 E_DailyDaily::m_eachscore() const {
  return m_eachscore_;
}
inline void E_DailyDaily::set_m_eachscore(::google::protobuf::int32 value) {
  set_has_m_eachscore();
  m_eachscore_ = value;
}

// optional int32 m_cycle = 12;
inline bool E_DailyDaily::has_m_cycle() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_DailyDaily::set_has_m_cycle() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_DailyDaily::clear_has_m_cycle() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_DailyDaily::clear_m_cycle() {
  m_cycle_ = 0;
  clear_has_m_cycle();
}
inline ::google::protobuf::int32 E_DailyDaily::m_cycle() const {
  return m_cycle_;
}
inline void E_DailyDaily::set_m_cycle(::google::protobuf::int32 value) {
  set_has_m_cycle();
  m_cycle_ = value;
}

// optional int32 m_regreward = 13;
inline bool E_DailyDaily::has_m_regreward() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_DailyDaily::set_has_m_regreward() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_DailyDaily::clear_has_m_regreward() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_DailyDaily::clear_m_regreward() {
  m_regreward_ = 0;
  clear_has_m_regreward();
}
inline ::google::protobuf::int32 E_DailyDaily::m_regreward() const {
  return m_regreward_;
}
inline void E_DailyDaily::set_m_regreward(::google::protobuf::int32 value) {
  set_has_m_regreward();
  m_regreward_ = value;
}

// -------------------------------------------------------------------

// Sheet_DailyDaily

// repeated .proto_ff.E_DailyDaily E_DailyDaily_List = 1;
inline int Sheet_DailyDaily::e_dailydaily_list_size() const {
  return e_dailydaily_list_.size();
}
inline void Sheet_DailyDaily::clear_e_dailydaily_list() {
  e_dailydaily_list_.Clear();
}
inline const ::proto_ff::E_DailyDaily& Sheet_DailyDaily::e_dailydaily_list(int index) const {
  return e_dailydaily_list_.Get(index);
}
inline ::proto_ff::E_DailyDaily* Sheet_DailyDaily::mutable_e_dailydaily_list(int index) {
  return e_dailydaily_list_.Mutable(index);
}
inline ::proto_ff::E_DailyDaily* Sheet_DailyDaily::add_e_dailydaily_list() {
  return e_dailydaily_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyDaily >&
Sheet_DailyDaily::e_dailydaily_list() const {
  return e_dailydaily_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyDaily >*
Sheet_DailyDaily::mutable_e_dailydaily_list() {
  return &e_dailydaily_list_;
}

// -------------------------------------------------------------------

// E_DailyReward

// optional int32 m_id = 1;
inline bool E_DailyReward::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_DailyReward::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_DailyReward::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_DailyReward::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_DailyReward::m_id() const {
  return m_id_;
}
inline void E_DailyReward::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_DailyReward::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_DailyReward::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_DailyReward::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_DailyReward::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_DailyReward::m_type() const {
  return m_type_;
}
inline void E_DailyReward::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_activescore = 3;
inline bool E_DailyReward::has_m_activescore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_DailyReward::set_has_m_activescore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_DailyReward::clear_has_m_activescore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_DailyReward::clear_m_activescore() {
  m_activescore_ = 0;
  clear_has_m_activescore();
}
inline ::google::protobuf::int32 E_DailyReward::m_activescore() const {
  return m_activescore_;
}
inline void E_DailyReward::set_m_activescore(::google::protobuf::int32 value) {
  set_has_m_activescore();
  m_activescore_ = value;
}

// optional int64 m_rewardid = 4;
inline bool E_DailyReward::has_m_rewardid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_DailyReward::set_has_m_rewardid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_DailyReward::clear_has_m_rewardid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_DailyReward::clear_m_rewardid() {
  m_rewardid_ = GOOGLE_LONGLONG(0);
  clear_has_m_rewardid();
}
inline ::google::protobuf::int64 E_DailyReward::m_rewardid() const {
  return m_rewardid_;
}
inline void E_DailyReward::set_m_rewardid(::google::protobuf::int64 value) {
  set_has_m_rewardid();
  m_rewardid_ = value;
}

// optional int32 m_rewardnum = 5;
inline bool E_DailyReward::has_m_rewardnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_DailyReward::set_has_m_rewardnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_DailyReward::clear_has_m_rewardnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_DailyReward::clear_m_rewardnum() {
  m_rewardnum_ = 0;
  clear_has_m_rewardnum();
}
inline ::google::protobuf::int32 E_DailyReward::m_rewardnum() const {
  return m_rewardnum_;
}
inline void E_DailyReward::set_m_rewardnum(::google::protobuf::int32 value) {
  set_has_m_rewardnum();
  m_rewardnum_ = value;
}

// -------------------------------------------------------------------

// Sheet_DailyReward

// repeated .proto_ff.E_DailyReward E_DailyReward_List = 1;
inline int Sheet_DailyReward::e_dailyreward_list_size() const {
  return e_dailyreward_list_.size();
}
inline void Sheet_DailyReward::clear_e_dailyreward_list() {
  e_dailyreward_list_.Clear();
}
inline const ::proto_ff::E_DailyReward& Sheet_DailyReward::e_dailyreward_list(int index) const {
  return e_dailyreward_list_.Get(index);
}
inline ::proto_ff::E_DailyReward* Sheet_DailyReward::mutable_e_dailyreward_list(int index) {
  return e_dailyreward_list_.Mutable(index);
}
inline ::proto_ff::E_DailyReward* Sheet_DailyReward::add_e_dailyreward_list() {
  return e_dailyreward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyReward >&
Sheet_DailyReward::e_dailyreward_list() const {
  return e_dailyreward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyReward >*
Sheet_DailyReward::mutable_e_dailyreward_list() {
  return &e_dailyreward_list_;
}

// -------------------------------------------------------------------

// E_DailyCultivateAttributeDesc

// optional int32 m_id = 1;
inline bool E_DailyCultivateAttributeDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_DailyCultivateAttributeDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_DailyCultivateAttributeDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_DailyCultivateAttributeDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_DailyCultivateAttributeDesc::m_id() const {
  return m_id_;
}
inline void E_DailyCultivateAttributeDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_value = 2;
inline bool E_DailyCultivateAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_DailyCultivateAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_DailyCultivateAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_DailyCultivateAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_DailyCultivateAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_DailyCultivateAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// -------------------------------------------------------------------

// E_DailyCultivate

// optional int32 m_id = 1;
inline bool E_DailyCultivate::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_DailyCultivate::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_DailyCultivate::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_DailyCultivate::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_DailyCultivate::m_id() const {
  return m_id_;
}
inline void E_DailyCultivate::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_lv = 2;
inline bool E_DailyCultivate::has_m_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_DailyCultivate::set_has_m_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_DailyCultivate::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_DailyCultivate::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_DailyCultivate::m_lv() const {
  return m_lv_;
}
inline void E_DailyCultivate::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_exp = 3;
inline bool E_DailyCultivate::has_m_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_DailyCultivate::set_has_m_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_DailyCultivate::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_DailyCultivate::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_DailyCultivate::m_exp() const {
  return m_exp_;
}
inline void E_DailyCultivate::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// repeated .proto_ff.E_DailyCultivateAttributeDesc m_attribute = 4;
inline int E_DailyCultivate::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_DailyCultivate::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_DailyCultivateAttributeDesc& E_DailyCultivate::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_DailyCultivateAttributeDesc* E_DailyCultivate::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_DailyCultivateAttributeDesc* E_DailyCultivate::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyCultivateAttributeDesc >&
E_DailyCultivate::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyCultivateAttributeDesc >*
E_DailyCultivate::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_DailyCultivate

// repeated .proto_ff.E_DailyCultivate E_DailyCultivate_List = 1;
inline int Sheet_DailyCultivate::e_dailycultivate_list_size() const {
  return e_dailycultivate_list_.size();
}
inline void Sheet_DailyCultivate::clear_e_dailycultivate_list() {
  e_dailycultivate_list_.Clear();
}
inline const ::proto_ff::E_DailyCultivate& Sheet_DailyCultivate::e_dailycultivate_list(int index) const {
  return e_dailycultivate_list_.Get(index);
}
inline ::proto_ff::E_DailyCultivate* Sheet_DailyCultivate::mutable_e_dailycultivate_list(int index) {
  return e_dailycultivate_list_.Mutable(index);
}
inline ::proto_ff::E_DailyCultivate* Sheet_DailyCultivate::add_e_dailycultivate_list() {
  return e_dailycultivate_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyCultivate >&
Sheet_DailyCultivate::e_dailycultivate_list() const {
  return e_dailycultivate_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_DailyCultivate >*
Sheet_DailyCultivate::mutable_e_dailycultivate_list() {
  return &e_dailycultivate_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_daily_2eproto__INCLUDED
