// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fashion.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "fashion.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* fashionfashionattributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  fashionfashionattributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* fashionfashion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  fashionfashion_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_fashionfashion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_fashionfashion_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_fashion_2eproto() {
  protobuf_AddDesc_fashion_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "fashion.proto");
  GOOGLE_CHECK(file != NULL);
  fashionfashionattributeDesc_descriptor_ = file->message_type(0);
  static const int fashionfashionattributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashionattributeDesc, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashionattributeDesc, value_),
  };
  fashionfashionattributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      fashionfashionattributeDesc_descriptor_,
      fashionfashionattributeDesc::default_instance_,
      fashionfashionattributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashionattributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashionattributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(fashionfashionattributeDesc));
  fashionfashion_descriptor_ = file->message_type(1);
  static const int fashionfashion_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, fashionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, fashionname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, fashiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, fashionzhiye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, starid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, starup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, starber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, attribute_),
  };
  fashionfashion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      fashionfashion_descriptor_,
      fashionfashion::default_instance_,
      fashionfashion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(fashionfashion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(fashionfashion));
  Sheet_fashionfashion_descriptor_ = file->message_type(2);
  static const int Sheet_fashionfashion_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_fashionfashion, fashionfashion_list_),
  };
  Sheet_fashionfashion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_fashionfashion_descriptor_,
      Sheet_fashionfashion::default_instance_,
      Sheet_fashionfashion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_fashionfashion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_fashionfashion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_fashionfashion));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_fashion_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    fashionfashionattributeDesc_descriptor_, &fashionfashionattributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    fashionfashion_descriptor_, &fashionfashion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_fashionfashion_descriptor_, &Sheet_fashionfashion::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_fashion_2eproto() {
  delete fashionfashionattributeDesc::default_instance_;
  delete fashionfashionattributeDesc_reflection_;
  delete fashionfashion::default_instance_;
  delete fashionfashion_reflection_;
  delete Sheet_fashionfashion::default_instance_;
  delete Sheet_fashionfashion_reflection_;
}

void protobuf_AddDesc_fashion_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rfashion.proto\022\010proto_ff\032\025yd_fieldoptio"
    "ns.proto\"O\n\033fashionfashionattributeDesc\022"
    "\030\n\004type\030\001 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\026\n\005value\030\002 \001(\005"
    "B\007\302\377\024\003\345\200\274\"\324\003\n\016fashionfashion\022\037\n\tfashionI"
    "D\030\001 \001(\003B\014\302\377\024\010\346\227\266\350\243\205ID\022)\n\013fashionName\030\002 \001"
    "(\tB\024\302\377\024\014\346\227\266\350\243\205\345\220\215\347\247\260\220\301\024 \022%\n\013fashionType\030"
    "\003 \001(\005B\020\302\377\024\014\346\227\266\350\243\205\347\261\273\345\236\213\022!\n\007quality\030\004 \001(\005"
    "B\020\302\377\024\014\346\227\266\350\243\205\345\223\201\350\264\250\022*\n\014fashionZhiye\030\005 \001(\t"
    "B\024\302\377\024\014\350\201\214\344\270\232\351\231\220\345\210\266\220\301\024 \022\"\n\006starId\030\006 \001(\003B\022"
    "\302\377\024\016\345\215\207\346\230\237\351\201\223\345\205\267id\022,\n\007starNum\030\007 \001(\tB\033\302\377\024"
    "\022\345\215\207\346\230\237\351\201\223\345\205\267\346\225\260\351\207\217\220\301\024\227\001\022&\n\006starUp\030\010 \001(\005"
    "B\026\302\377\024\022\345\215\207\346\230\237\347\255\211\347\272\247\344\270\212\351\231\220\022<\n\007starBer\030\t \001("
    "\005B+\302\377\024\'\346\257\217\346\254\241\345\215\207\346\230\237\345\261\236\346\200\247\345\242\236\345\212\240\347\232\204\347\231\276\345\210\206"
    "\346\257\224\345\200\274\022H\n\tattribute\030\n \003(\0132%.proto_ff.fas"
    "hionfashionattributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\005"
    "\"T\n\024Sheet_fashionfashion\022<\n\023fashionfashi"
    "on_List\030\001 \003(\0132\030.proto_ff.fashionfashionB"
    "\005\210\301\024\352\001", 686);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fashion.proto", &protobuf_RegisterTypes);
  fashionfashionattributeDesc::default_instance_ = new fashionfashionattributeDesc();
  fashionfashion::default_instance_ = new fashionfashion();
  Sheet_fashionfashion::default_instance_ = new Sheet_fashionfashion();
  fashionfashionattributeDesc::default_instance_->InitAsDefaultInstance();
  fashionfashion::default_instance_->InitAsDefaultInstance();
  Sheet_fashionfashion::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_fashion_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_fashion_2eproto {
  StaticDescriptorInitializer_fashion_2eproto() {
    protobuf_AddDesc_fashion_2eproto();
  }
} static_descriptor_initializer_fashion_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int fashionfashionattributeDesc::kTypeFieldNumber;
const int fashionfashionattributeDesc::kValueFieldNumber;
#endif  // !_MSC_VER

fashionfashionattributeDesc::fashionfashionattributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void fashionfashionattributeDesc::InitAsDefaultInstance() {
}

fashionfashionattributeDesc::fashionfashionattributeDesc(const fashionfashionattributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void fashionfashionattributeDesc::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

fashionfashionattributeDesc::~fashionfashionattributeDesc() {
  SharedDtor();
}

void fashionfashionattributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void fashionfashionattributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* fashionfashionattributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return fashionfashionattributeDesc_descriptor_;
}

const fashionfashionattributeDesc& fashionfashionattributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fashion_2eproto();
  return *default_instance_;
}

fashionfashionattributeDesc* fashionfashionattributeDesc::default_instance_ = NULL;

fashionfashionattributeDesc* fashionfashionattributeDesc::New() const {
  return new fashionfashionattributeDesc;
}

void fashionfashionattributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool fashionfashionattributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional int32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void fashionfashionattributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* fashionfashionattributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int fashionfashionattributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void fashionfashionattributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const fashionfashionattributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const fashionfashionattributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void fashionfashionattributeDesc::MergeFrom(const fashionfashionattributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void fashionfashionattributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void fashionfashionattributeDesc::CopyFrom(const fashionfashionattributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool fashionfashionattributeDesc::IsInitialized() const {

  return true;
}

void fashionfashionattributeDesc::Swap(fashionfashionattributeDesc* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata fashionfashionattributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = fashionfashionattributeDesc_descriptor_;
  metadata.reflection = fashionfashionattributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int fashionfashion::kFashionIDFieldNumber;
const int fashionfashion::kFashionNameFieldNumber;
const int fashionfashion::kFashionTypeFieldNumber;
const int fashionfashion::kQualityFieldNumber;
const int fashionfashion::kFashionZhiyeFieldNumber;
const int fashionfashion::kStarIdFieldNumber;
const int fashionfashion::kStarNumFieldNumber;
const int fashionfashion::kStarUpFieldNumber;
const int fashionfashion::kStarBerFieldNumber;
const int fashionfashion::kAttributeFieldNumber;
#endif  // !_MSC_VER

fashionfashion::fashionfashion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void fashionfashion::InitAsDefaultInstance() {
}

fashionfashion::fashionfashion(const fashionfashion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void fashionfashion::SharedCtor() {
  _cached_size_ = 0;
  fashionid_ = GOOGLE_LONGLONG(0);
  fashionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fashiontype_ = 0;
  quality_ = 0;
  fashionzhiye_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  starid_ = GOOGLE_LONGLONG(0);
  starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  starup_ = 0;
  starber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

fashionfashion::~fashionfashion() {
  SharedDtor();
}

void fashionfashion::SharedDtor() {
  if (fashionname_ != &::google::protobuf::internal::kEmptyString) {
    delete fashionname_;
  }
  if (fashionzhiye_ != &::google::protobuf::internal::kEmptyString) {
    delete fashionzhiye_;
  }
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete starnum_;
  }
  if (this != default_instance_) {
  }
}

void fashionfashion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* fashionfashion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return fashionfashion_descriptor_;
}

const fashionfashion& fashionfashion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fashion_2eproto();
  return *default_instance_;
}

fashionfashion* fashionfashion::default_instance_ = NULL;

fashionfashion* fashionfashion::New() const {
  return new fashionfashion;
}

void fashionfashion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashionid_ = GOOGLE_LONGLONG(0);
    if (has_fashionname()) {
      if (fashionname_ != &::google::protobuf::internal::kEmptyString) {
        fashionname_->clear();
      }
    }
    fashiontype_ = 0;
    quality_ = 0;
    if (has_fashionzhiye()) {
      if (fashionzhiye_ != &::google::protobuf::internal::kEmptyString) {
        fashionzhiye_->clear();
      }
    }
    starid_ = GOOGLE_LONGLONG(0);
    if (has_starnum()) {
      if (starnum_ != &::google::protobuf::internal::kEmptyString) {
        starnum_->clear();
      }
    }
    starup_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    starber_ = 0;
  }
  attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool fashionfashion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fashionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fashionid_)));
          set_has_fashionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fashionName;
        break;
      }

      // optional string fashionName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fashionName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fashionname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fashionname().data(), this->fashionname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fashionType;
        break;
      }

      // optional int32 fashionType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashionType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashiontype_)));
          set_has_fashiontype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_quality;
        break;
      }

      // optional int32 quality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_fashionZhiye;
        break;
      }

      // optional string fashionZhiye = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fashionZhiye:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fashionzhiye()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fashionzhiye().data(), this->fashionzhiye().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_starId;
        break;
      }

      // optional int64 starId = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starid_)));
          set_has_starid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_starNum;
        break;
      }

      // optional string starNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_starNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_starnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->starnum().data(), this->starnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_starUp;
        break;
      }

      // optional int32 starUp = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starup_)));
          set_has_starup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_starBer;
        break;
      }

      // optional int32 starBer = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starBer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starber_)));
          set_has_starber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_attribute;
        break;
      }

      // repeated .proto_ff.fashionfashionattributeDesc attribute = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void fashionfashion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fashionID = 1;
  if (has_fashionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fashionid(), output);
  }

  // optional string fashionName = 2;
  if (has_fashionname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fashionname().data(), this->fashionname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->fashionname(), output);
  }

  // optional int32 fashionType = 3;
  if (has_fashiontype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fashiontype(), output);
  }

  // optional int32 quality = 4;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->quality(), output);
  }

  // optional string fashionZhiye = 5;
  if (has_fashionzhiye()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fashionzhiye().data(), this->fashionzhiye().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->fashionzhiye(), output);
  }

  // optional int64 starId = 6;
  if (has_starid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->starid(), output);
  }

  // optional string starNum = 7;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->starnum().data(), this->starnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->starnum(), output);
  }

  // optional int32 starUp = 8;
  if (has_starup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->starup(), output);
  }

  // optional int32 starBer = 9;
  if (has_starber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->starber(), output);
  }

  // repeated .proto_ff.fashionfashionattributeDesc attribute = 10;
  for (int i = 0; i < this->attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* fashionfashion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fashionID = 1;
  if (has_fashionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fashionid(), target);
  }

  // optional string fashionName = 2;
  if (has_fashionname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fashionname().data(), this->fashionname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fashionname(), target);
  }

  // optional int32 fashionType = 3;
  if (has_fashiontype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fashiontype(), target);
  }

  // optional int32 quality = 4;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->quality(), target);
  }

  // optional string fashionZhiye = 5;
  if (has_fashionzhiye()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fashionzhiye().data(), this->fashionzhiye().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->fashionzhiye(), target);
  }

  // optional int64 starId = 6;
  if (has_starid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->starid(), target);
  }

  // optional string starNum = 7;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->starnum().data(), this->starnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->starnum(), target);
  }

  // optional int32 starUp = 8;
  if (has_starup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->starup(), target);
  }

  // optional int32 starBer = 9;
  if (has_starber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->starber(), target);
  }

  // repeated .proto_ff.fashionfashionattributeDesc attribute = 10;
  for (int i = 0; i < this->attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int fashionfashion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fashionID = 1;
    if (has_fashionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fashionid());
    }

    // optional string fashionName = 2;
    if (has_fashionname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fashionname());
    }

    // optional int32 fashionType = 3;
    if (has_fashiontype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashiontype());
    }

    // optional int32 quality = 4;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional string fashionZhiye = 5;
    if (has_fashionzhiye()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fashionzhiye());
    }

    // optional int64 starId = 6;
    if (has_starid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->starid());
    }

    // optional string starNum = 7;
    if (has_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->starnum());
    }

    // optional int32 starUp = 8;
    if (has_starup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starup());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 starBer = 9;
    if (has_starber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starber());
    }

  }
  // repeated .proto_ff.fashionfashionattributeDesc attribute = 10;
  total_size += 1 * this->attribute_size();
  for (int i = 0; i < this->attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void fashionfashion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const fashionfashion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const fashionfashion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void fashionfashion::MergeFrom(const fashionfashion& from) {
  GOOGLE_CHECK_NE(&from, this);
  attribute_.MergeFrom(from.attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashionid()) {
      set_fashionid(from.fashionid());
    }
    if (from.has_fashionname()) {
      set_fashionname(from.fashionname());
    }
    if (from.has_fashiontype()) {
      set_fashiontype(from.fashiontype());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_fashionzhiye()) {
      set_fashionzhiye(from.fashionzhiye());
    }
    if (from.has_starid()) {
      set_starid(from.starid());
    }
    if (from.has_starnum()) {
      set_starnum(from.starnum());
    }
    if (from.has_starup()) {
      set_starup(from.starup());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_starber()) {
      set_starber(from.starber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void fashionfashion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void fashionfashion::CopyFrom(const fashionfashion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool fashionfashion::IsInitialized() const {

  return true;
}

void fashionfashion::Swap(fashionfashion* other) {
  if (other != this) {
    std::swap(fashionid_, other->fashionid_);
    std::swap(fashionname_, other->fashionname_);
    std::swap(fashiontype_, other->fashiontype_);
    std::swap(quality_, other->quality_);
    std::swap(fashionzhiye_, other->fashionzhiye_);
    std::swap(starid_, other->starid_);
    std::swap(starnum_, other->starnum_);
    std::swap(starup_, other->starup_);
    std::swap(starber_, other->starber_);
    attribute_.Swap(&other->attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata fashionfashion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = fashionfashion_descriptor_;
  metadata.reflection = fashionfashion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_fashionfashion::kFashionfashionListFieldNumber;
#endif  // !_MSC_VER

Sheet_fashionfashion::Sheet_fashionfashion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_fashionfashion::InitAsDefaultInstance() {
}

Sheet_fashionfashion::Sheet_fashionfashion(const Sheet_fashionfashion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_fashionfashion::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_fashionfashion::~Sheet_fashionfashion() {
  SharedDtor();
}

void Sheet_fashionfashion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_fashionfashion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_fashionfashion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_fashionfashion_descriptor_;
}

const Sheet_fashionfashion& Sheet_fashionfashion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fashion_2eproto();
  return *default_instance_;
}

Sheet_fashionfashion* Sheet_fashionfashion::default_instance_ = NULL;

Sheet_fashionfashion* Sheet_fashionfashion::New() const {
  return new Sheet_fashionfashion;
}

void Sheet_fashionfashion::Clear() {
  fashionfashion_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_fashionfashion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.fashionfashion fashionfashion_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fashionfashion_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fashionfashion_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_fashionfashion_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_fashionfashion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.fashionfashion fashionfashion_List = 1;
  for (int i = 0; i < this->fashionfashion_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fashionfashion_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_fashionfashion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.fashionfashion fashionfashion_List = 1;
  for (int i = 0; i < this->fashionfashion_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fashionfashion_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_fashionfashion::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.fashionfashion fashionfashion_List = 1;
  total_size += 1 * this->fashionfashion_list_size();
  for (int i = 0; i < this->fashionfashion_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fashionfashion_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_fashionfashion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_fashionfashion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_fashionfashion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_fashionfashion::MergeFrom(const Sheet_fashionfashion& from) {
  GOOGLE_CHECK_NE(&from, this);
  fashionfashion_list_.MergeFrom(from.fashionfashion_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_fashionfashion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_fashionfashion::CopyFrom(const Sheet_fashionfashion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_fashionfashion::IsInitialized() const {

  return true;
}

void Sheet_fashionfashion::Swap(Sheet_fashionfashion* other) {
  if (other != this) {
    fashionfashion_list_.Swap(&other->fashionfashion_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_fashionfashion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_fashionfashion_descriptor_;
  metadata.reflection = Sheet_fashionfashion_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
