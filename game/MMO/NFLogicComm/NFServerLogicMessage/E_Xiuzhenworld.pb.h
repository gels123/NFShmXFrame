// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Xiuzhenworld.proto

#ifndef PROTOBUF_E_5fXiuzhenworld_2eproto__INCLUDED
#define PROTOBUF_E_5fXiuzhenworld_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fXiuzhenworld_2eproto();
void protobuf_AssignDesc_E_5fXiuzhenworld_2eproto();
void protobuf_ShutdownFile_E_5fXiuzhenworld_2eproto();

class E_XiuzhenworldConstantTimeitemDesc;
class E_XiuzhenworldConstantTypeDesc;
class E_XiuzhenworldConstant;
class Sheet_XiuzhenworldConstant;
class E_XiuzhenworldExpmap;
class Sheet_XiuzhenworldExpmap;

// ===================================================================

class E_XiuzhenworldConstantTimeitemDesc : public ::google::protobuf::Message {
 public:
  E_XiuzhenworldConstantTimeitemDesc();
  virtual ~E_XiuzhenworldConstantTimeitemDesc();

  E_XiuzhenworldConstantTimeitemDesc(const E_XiuzhenworldConstantTimeitemDesc& from);

  inline E_XiuzhenworldConstantTimeitemDesc& operator=(const E_XiuzhenworldConstantTimeitemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XiuzhenworldConstantTimeitemDesc& default_instance();

  void Swap(E_XiuzhenworldConstantTimeitemDesc* other);

  // implements Message ----------------------------------------------

  E_XiuzhenworldConstantTimeitemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XiuzhenworldConstantTimeitemDesc& from);
  void MergeFrom(const E_XiuzhenworldConstantTimeitemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_time = 1;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 1;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XiuzhenworldConstantTimeitemDesc)
 private:
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_time_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenworld_2eproto();

  void InitAsDefaultInstance();
  static E_XiuzhenworldConstantTimeitemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XiuzhenworldConstantTypeDesc : public ::google::protobuf::Message {
 public:
  E_XiuzhenworldConstantTypeDesc();
  virtual ~E_XiuzhenworldConstantTypeDesc();

  E_XiuzhenworldConstantTypeDesc(const E_XiuzhenworldConstantTypeDesc& from);

  inline E_XiuzhenworldConstantTypeDesc& operator=(const E_XiuzhenworldConstantTypeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XiuzhenworldConstantTypeDesc& default_instance();

  void Swap(E_XiuzhenworldConstantTypeDesc* other);

  // implements Message ----------------------------------------------

  E_XiuzhenworldConstantTypeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XiuzhenworldConstantTypeDesc& from);
  void MergeFrom(const E_XiuzhenworldConstantTypeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline const ::std::string& m_num() const;
  inline void set_m_num(const ::std::string& value);
  inline void set_m_num(const char* value);
  inline void set_m_num(const char* value, size_t size);
  inline ::std::string* mutable_m_num();
  inline ::std::string* release_m_num();
  inline void set_allocated_m_num(::std::string* m_num);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XiuzhenworldConstantTypeDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenworld_2eproto();

  void InitAsDefaultInstance();
  static E_XiuzhenworldConstantTypeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XiuzhenworldConstant : public ::google::protobuf::Message {
 public:
  E_XiuzhenworldConstant();
  virtual ~E_XiuzhenworldConstant();

  E_XiuzhenworldConstant(const E_XiuzhenworldConstant& from);

  inline E_XiuzhenworldConstant& operator=(const E_XiuzhenworldConstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XiuzhenworldConstant& default_instance();

  void Swap(E_XiuzhenworldConstant* other);

  // implements Message ----------------------------------------------

  E_XiuzhenworldConstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XiuzhenworldConstant& from);
  void MergeFrom(const E_XiuzhenworldConstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_freetimemoment = 2;
  inline bool has_m_freetimemoment() const;
  inline void clear_m_freetimemoment();
  static const int kMFreetimemomentFieldNumber = 2;
  inline const ::std::string& m_freetimemoment() const;
  inline void set_m_freetimemoment(const ::std::string& value);
  inline void set_m_freetimemoment(const char* value);
  inline void set_m_freetimemoment(const char* value, size_t size);
  inline ::std::string* mutable_m_freetimemoment();
  inline ::std::string* release_m_freetimemoment();
  inline void set_allocated_m_freetimemoment(::std::string* m_freetimemoment);

  // optional int32 m_freetime = 3;
  inline bool has_m_freetime() const;
  inline void clear_m_freetime();
  static const int kMFreetimeFieldNumber = 3;
  inline ::google::protobuf::int32 m_freetime() const;
  inline void set_m_freetime(::google::protobuf::int32 value);

  // optional int32 m_freetimemax = 4;
  inline bool has_m_freetimemax() const;
  inline void clear_m_freetimemax();
  static const int kMFreetimemaxFieldNumber = 4;
  inline ::google::protobuf::int32 m_freetimemax() const;
  inline void set_m_freetimemax(::google::protobuf::int32 value);

  // optional int32 m_helpid = 5;
  inline bool has_m_helpid() const;
  inline void clear_m_helpid();
  static const int kMHelpidFieldNumber = 5;
  inline ::google::protobuf::int32 m_helpid() const;
  inline void set_m_helpid(::google::protobuf::int32 value);

  // optional int32 m_addgexpmax = 6;
  inline bool has_m_addgexpmax() const;
  inline void clear_m_addgexpmax();
  static const int kMAddgexpmaxFieldNumber = 6;
  inline ::google::protobuf::int32 m_addgexpmax() const;
  inline void set_m_addgexpmax(::google::protobuf::int32 value);

  // optional int32 m_pripricetype = 7;
  inline bool has_m_pripricetype() const;
  inline void clear_m_pripricetype();
  static const int kMPripricetypeFieldNumber = 7;
  inline ::google::protobuf::int32 m_pripricetype() const;
  inline void set_m_pripricetype(::google::protobuf::int32 value);

  // optional int32 m_pricevalue = 8;
  inline bool has_m_pricevalue() const;
  inline void clear_m_pricevalue();
  static const int kMPricevalueFieldNumber = 8;
  inline ::google::protobuf::int32 m_pricevalue() const;
  inline void set_m_pricevalue(::google::protobuf::int32 value);

  // optional int32 m_gexppribonus = 9;
  inline bool has_m_gexppribonus() const;
  inline void clear_m_gexppribonus();
  static const int kMGexppribonusFieldNumber = 9;
  inline ::google::protobuf::int32 m_gexppribonus() const;
  inline void set_m_gexppribonus(::google::protobuf::int32 value);

  // optional int32 m_gexpgroupbonus = 10;
  inline bool has_m_gexpgroupbonus() const;
  inline void clear_m_gexpgroupbonus();
  static const int kMGexpgroupbonusFieldNumber = 10;
  inline ::google::protobuf::int32 m_gexpgroupbonus() const;
  inline void set_m_gexpgroupbonus(::google::protobuf::int32 value);

  // optional int32 m_mapstart = 11;
  inline bool has_m_mapstart() const;
  inline void clear_m_mapstart();
  static const int kMMapstartFieldNumber = 11;
  inline ::google::protobuf::int32 m_mapstart() const;
  inline void set_m_mapstart(::google::protobuf::int32 value);

  // optional int32 m_mapend = 12;
  inline bool has_m_mapend() const;
  inline void clear_m_mapend();
  static const int kMMapendFieldNumber = 12;
  inline ::google::protobuf::int32 m_mapend() const;
  inline void set_m_mapend(::google::protobuf::int32 value);

  // optional int32 m_expitemid = 13;
  inline bool has_m_expitemid() const;
  inline void clear_m_expitemid();
  static const int kMExpitemidFieldNumber = 13;
  inline ::google::protobuf::int32 m_expitemid() const;
  inline void set_m_expitemid(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XiuzhenworldConstantTimeitemDesc m_timeitem = 14;
  inline int m_timeitem_size() const;
  inline void clear_m_timeitem();
  static const int kMTimeitemFieldNumber = 14;
  inline const ::proto_ff::E_XiuzhenworldConstantTimeitemDesc& m_timeitem(int index) const;
  inline ::proto_ff::E_XiuzhenworldConstantTimeitemDesc* mutable_m_timeitem(int index);
  inline ::proto_ff::E_XiuzhenworldConstantTimeitemDesc* add_m_timeitem();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstantTimeitemDesc >&
      m_timeitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstantTimeitemDesc >*
      mutable_m_timeitem();

  // repeated .proto_ff.E_XiuzhenworldConstantTypeDesc m_type = 15;
  inline int m_type_size() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 15;
  inline const ::proto_ff::E_XiuzhenworldConstantTypeDesc& m_type(int index) const;
  inline ::proto_ff::E_XiuzhenworldConstantTypeDesc* mutable_m_type(int index);
  inline ::proto_ff::E_XiuzhenworldConstantTypeDesc* add_m_type();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstantTypeDesc >&
      m_type() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstantTypeDesc >*
      mutable_m_type();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XiuzhenworldConstant)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_freetimemoment();
  inline void clear_has_m_freetimemoment();
  inline void set_has_m_freetime();
  inline void clear_has_m_freetime();
  inline void set_has_m_freetimemax();
  inline void clear_has_m_freetimemax();
  inline void set_has_m_helpid();
  inline void clear_has_m_helpid();
  inline void set_has_m_addgexpmax();
  inline void clear_has_m_addgexpmax();
  inline void set_has_m_pripricetype();
  inline void clear_has_m_pripricetype();
  inline void set_has_m_pricevalue();
  inline void clear_has_m_pricevalue();
  inline void set_has_m_gexppribonus();
  inline void clear_has_m_gexppribonus();
  inline void set_has_m_gexpgroupbonus();
  inline void clear_has_m_gexpgroupbonus();
  inline void set_has_m_mapstart();
  inline void clear_has_m_mapstart();
  inline void set_has_m_mapend();
  inline void clear_has_m_mapend();
  inline void set_has_m_expitemid();
  inline void clear_has_m_expitemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_freetimemoment_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_freetime_;
  ::google::protobuf::int32 m_freetimemax_;
  ::google::protobuf::int32 m_helpid_;
  ::google::protobuf::int32 m_addgexpmax_;
  ::google::protobuf::int32 m_pripricetype_;
  ::google::protobuf::int32 m_pricevalue_;
  ::google::protobuf::int32 m_gexppribonus_;
  ::google::protobuf::int32 m_gexpgroupbonus_;
  ::google::protobuf::int32 m_mapstart_;
  ::google::protobuf::int32 m_mapend_;
  ::google::protobuf::int32 m_expitemid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstantTimeitemDesc > m_timeitem_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstantTypeDesc > m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenworld_2eproto();

  void InitAsDefaultInstance();
  static E_XiuzhenworldConstant* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XiuzhenworldConstant : public ::google::protobuf::Message {
 public:
  Sheet_XiuzhenworldConstant();
  virtual ~Sheet_XiuzhenworldConstant();

  Sheet_XiuzhenworldConstant(const Sheet_XiuzhenworldConstant& from);

  inline Sheet_XiuzhenworldConstant& operator=(const Sheet_XiuzhenworldConstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XiuzhenworldConstant& default_instance();

  void Swap(Sheet_XiuzhenworldConstant* other);

  // implements Message ----------------------------------------------

  Sheet_XiuzhenworldConstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XiuzhenworldConstant& from);
  void MergeFrom(const Sheet_XiuzhenworldConstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XiuzhenworldConstant E_XiuzhenworldConstant_List = 1;
  inline int e_xiuzhenworldconstant_list_size() const;
  inline void clear_e_xiuzhenworldconstant_list();
  static const int kEXiuzhenworldConstantListFieldNumber = 1;
  inline const ::proto_ff::E_XiuzhenworldConstant& e_xiuzhenworldconstant_list(int index) const;
  inline ::proto_ff::E_XiuzhenworldConstant* mutable_e_xiuzhenworldconstant_list(int index);
  inline ::proto_ff::E_XiuzhenworldConstant* add_e_xiuzhenworldconstant_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstant >&
      e_xiuzhenworldconstant_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstant >*
      mutable_e_xiuzhenworldconstant_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XiuzhenworldConstant)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstant > e_xiuzhenworldconstant_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenworld_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XiuzhenworldConstant* default_instance_;
};
// -------------------------------------------------------------------

class E_XiuzhenworldExpmap : public ::google::protobuf::Message {
 public:
  E_XiuzhenworldExpmap();
  virtual ~E_XiuzhenworldExpmap();

  E_XiuzhenworldExpmap(const E_XiuzhenworldExpmap& from);

  inline E_XiuzhenworldExpmap& operator=(const E_XiuzhenworldExpmap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XiuzhenworldExpmap& default_instance();

  void Swap(E_XiuzhenworldExpmap* other);

  // implements Message ----------------------------------------------

  E_XiuzhenworldExpmap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XiuzhenworldExpmap& from);
  void MergeFrom(const E_XiuzhenworldExpmap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_conditionglv = 2;
  inline bool has_m_conditionglv() const;
  inline void clear_m_conditionglv();
  static const int kMConditionglvFieldNumber = 2;
  inline ::google::protobuf::int32 m_conditionglv() const;
  inline void set_m_conditionglv(::google::protobuf::int32 value);

  // optional int32 m_mapid = 3;
  inline bool has_m_mapid() const;
  inline void clear_m_mapid();
  static const int kMMapidFieldNumber = 3;
  inline ::google::protobuf::int32 m_mapid() const;
  inline void set_m_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XiuzhenworldExpmap)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_conditionglv();
  inline void clear_has_m_conditionglv();
  inline void set_has_m_mapid();
  inline void clear_has_m_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_conditionglv_;
  ::google::protobuf::int32 m_mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenworld_2eproto();

  void InitAsDefaultInstance();
  static E_XiuzhenworldExpmap* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XiuzhenworldExpmap : public ::google::protobuf::Message {
 public:
  Sheet_XiuzhenworldExpmap();
  virtual ~Sheet_XiuzhenworldExpmap();

  Sheet_XiuzhenworldExpmap(const Sheet_XiuzhenworldExpmap& from);

  inline Sheet_XiuzhenworldExpmap& operator=(const Sheet_XiuzhenworldExpmap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XiuzhenworldExpmap& default_instance();

  void Swap(Sheet_XiuzhenworldExpmap* other);

  // implements Message ----------------------------------------------

  Sheet_XiuzhenworldExpmap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XiuzhenworldExpmap& from);
  void MergeFrom(const Sheet_XiuzhenworldExpmap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XiuzhenworldExpmap E_XiuzhenworldExpmap_List = 1;
  inline int e_xiuzhenworldexpmap_list_size() const;
  inline void clear_e_xiuzhenworldexpmap_list();
  static const int kEXiuzhenworldExpmapListFieldNumber = 1;
  inline const ::proto_ff::E_XiuzhenworldExpmap& e_xiuzhenworldexpmap_list(int index) const;
  inline ::proto_ff::E_XiuzhenworldExpmap* mutable_e_xiuzhenworldexpmap_list(int index);
  inline ::proto_ff::E_XiuzhenworldExpmap* add_e_xiuzhenworldexpmap_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldExpmap >&
      e_xiuzhenworldexpmap_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldExpmap >*
      mutable_e_xiuzhenworldexpmap_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XiuzhenworldExpmap)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldExpmap > e_xiuzhenworldexpmap_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenworld_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenworld_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XiuzhenworldExpmap* default_instance_;
};
// ===================================================================


// ===================================================================

// E_XiuzhenworldConstantTimeitemDesc

// optional int32 m_time = 1;
inline bool E_XiuzhenworldConstantTimeitemDesc::has_m_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XiuzhenworldConstantTimeitemDesc::set_has_m_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XiuzhenworldConstantTimeitemDesc::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XiuzhenworldConstantTimeitemDesc::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstantTimeitemDesc::m_time() const {
  return m_time_;
}
inline void E_XiuzhenworldConstantTimeitemDesc::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// optional int32 m_id = 2;
inline bool E_XiuzhenworldConstantTimeitemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XiuzhenworldConstantTimeitemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XiuzhenworldConstantTimeitemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XiuzhenworldConstantTimeitemDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstantTimeitemDesc::m_id() const {
  return m_id_;
}
inline void E_XiuzhenworldConstantTimeitemDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_XiuzhenworldConstantTypeDesc

// optional string m_num = 1;
inline bool E_XiuzhenworldConstantTypeDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XiuzhenworldConstantTypeDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XiuzhenworldConstantTypeDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XiuzhenworldConstantTypeDesc::clear_m_num() {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    m_num_->clear();
  }
  clear_has_m_num();
}
inline const ::std::string& E_XiuzhenworldConstantTypeDesc::m_num() const {
  return *m_num_;
}
inline void E_XiuzhenworldConstantTypeDesc::set_m_num(const ::std::string& value) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(value);
}
inline void E_XiuzhenworldConstantTypeDesc::set_m_num(const char* value) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(value);
}
inline void E_XiuzhenworldConstantTypeDesc::set_m_num(const char* value, size_t size) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_XiuzhenworldConstantTypeDesc::mutable_m_num() {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  return m_num_;
}
inline ::std::string* E_XiuzhenworldConstantTypeDesc::release_m_num() {
  clear_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_num_;
    m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_XiuzhenworldConstantTypeDesc::set_allocated_m_num(::std::string* m_num) {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    delete m_num_;
  }
  if (m_num) {
    set_has_m_num();
    m_num_ = m_num;
  } else {
    clear_has_m_num();
    m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_id = 2;
inline bool E_XiuzhenworldConstantTypeDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XiuzhenworldConstantTypeDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XiuzhenworldConstantTypeDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XiuzhenworldConstantTypeDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstantTypeDesc::m_id() const {
  return m_id_;
}
inline void E_XiuzhenworldConstantTypeDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_XiuzhenworldConstant

// optional int32 m_id = 1;
inline bool E_XiuzhenworldConstant::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XiuzhenworldConstant::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XiuzhenworldConstant::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_id() const {
  return m_id_;
}
inline void E_XiuzhenworldConstant::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_freetimemoment = 2;
inline bool E_XiuzhenworldConstant::has_m_freetimemoment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_freetimemoment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XiuzhenworldConstant::clear_has_m_freetimemoment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XiuzhenworldConstant::clear_m_freetimemoment() {
  if (m_freetimemoment_ != &::google::protobuf::internal::kEmptyString) {
    m_freetimemoment_->clear();
  }
  clear_has_m_freetimemoment();
}
inline const ::std::string& E_XiuzhenworldConstant::m_freetimemoment() const {
  return *m_freetimemoment_;
}
inline void E_XiuzhenworldConstant::set_m_freetimemoment(const ::std::string& value) {
  set_has_m_freetimemoment();
  if (m_freetimemoment_ == &::google::protobuf::internal::kEmptyString) {
    m_freetimemoment_ = new ::std::string;
  }
  m_freetimemoment_->assign(value);
}
inline void E_XiuzhenworldConstant::set_m_freetimemoment(const char* value) {
  set_has_m_freetimemoment();
  if (m_freetimemoment_ == &::google::protobuf::internal::kEmptyString) {
    m_freetimemoment_ = new ::std::string;
  }
  m_freetimemoment_->assign(value);
}
inline void E_XiuzhenworldConstant::set_m_freetimemoment(const char* value, size_t size) {
  set_has_m_freetimemoment();
  if (m_freetimemoment_ == &::google::protobuf::internal::kEmptyString) {
    m_freetimemoment_ = new ::std::string;
  }
  m_freetimemoment_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_XiuzhenworldConstant::mutable_m_freetimemoment() {
  set_has_m_freetimemoment();
  if (m_freetimemoment_ == &::google::protobuf::internal::kEmptyString) {
    m_freetimemoment_ = new ::std::string;
  }
  return m_freetimemoment_;
}
inline ::std::string* E_XiuzhenworldConstant::release_m_freetimemoment() {
  clear_has_m_freetimemoment();
  if (m_freetimemoment_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_freetimemoment_;
    m_freetimemoment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_XiuzhenworldConstant::set_allocated_m_freetimemoment(::std::string* m_freetimemoment) {
  if (m_freetimemoment_ != &::google::protobuf::internal::kEmptyString) {
    delete m_freetimemoment_;
  }
  if (m_freetimemoment) {
    set_has_m_freetimemoment();
    m_freetimemoment_ = m_freetimemoment;
  } else {
    clear_has_m_freetimemoment();
    m_freetimemoment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_freetime = 3;
inline bool E_XiuzhenworldConstant::has_m_freetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_freetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XiuzhenworldConstant::clear_has_m_freetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XiuzhenworldConstant::clear_m_freetime() {
  m_freetime_ = 0;
  clear_has_m_freetime();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_freetime() const {
  return m_freetime_;
}
inline void E_XiuzhenworldConstant::set_m_freetime(::google::protobuf::int32 value) {
  set_has_m_freetime();
  m_freetime_ = value;
}

// optional int32 m_freetimemax = 4;
inline bool E_XiuzhenworldConstant::has_m_freetimemax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_freetimemax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XiuzhenworldConstant::clear_has_m_freetimemax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XiuzhenworldConstant::clear_m_freetimemax() {
  m_freetimemax_ = 0;
  clear_has_m_freetimemax();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_freetimemax() const {
  return m_freetimemax_;
}
inline void E_XiuzhenworldConstant::set_m_freetimemax(::google::protobuf::int32 value) {
  set_has_m_freetimemax();
  m_freetimemax_ = value;
}

// optional int32 m_helpid = 5;
inline bool E_XiuzhenworldConstant::has_m_helpid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_helpid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XiuzhenworldConstant::clear_has_m_helpid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XiuzhenworldConstant::clear_m_helpid() {
  m_helpid_ = 0;
  clear_has_m_helpid();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_helpid() const {
  return m_helpid_;
}
inline void E_XiuzhenworldConstant::set_m_helpid(::google::protobuf::int32 value) {
  set_has_m_helpid();
  m_helpid_ = value;
}

// optional int32 m_addgexpmax = 6;
inline bool E_XiuzhenworldConstant::has_m_addgexpmax() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_addgexpmax() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_XiuzhenworldConstant::clear_has_m_addgexpmax() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_XiuzhenworldConstant::clear_m_addgexpmax() {
  m_addgexpmax_ = 0;
  clear_has_m_addgexpmax();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_addgexpmax() const {
  return m_addgexpmax_;
}
inline void E_XiuzhenworldConstant::set_m_addgexpmax(::google::protobuf::int32 value) {
  set_has_m_addgexpmax();
  m_addgexpmax_ = value;
}

// optional int32 m_pripricetype = 7;
inline bool E_XiuzhenworldConstant::has_m_pripricetype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_pripricetype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_XiuzhenworldConstant::clear_has_m_pripricetype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_XiuzhenworldConstant::clear_m_pripricetype() {
  m_pripricetype_ = 0;
  clear_has_m_pripricetype();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_pripricetype() const {
  return m_pripricetype_;
}
inline void E_XiuzhenworldConstant::set_m_pripricetype(::google::protobuf::int32 value) {
  set_has_m_pripricetype();
  m_pripricetype_ = value;
}

// optional int32 m_pricevalue = 8;
inline bool E_XiuzhenworldConstant::has_m_pricevalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_pricevalue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_XiuzhenworldConstant::clear_has_m_pricevalue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_XiuzhenworldConstant::clear_m_pricevalue() {
  m_pricevalue_ = 0;
  clear_has_m_pricevalue();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_pricevalue() const {
  return m_pricevalue_;
}
inline void E_XiuzhenworldConstant::set_m_pricevalue(::google::protobuf::int32 value) {
  set_has_m_pricevalue();
  m_pricevalue_ = value;
}

// optional int32 m_gexppribonus = 9;
inline bool E_XiuzhenworldConstant::has_m_gexppribonus() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_gexppribonus() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_XiuzhenworldConstant::clear_has_m_gexppribonus() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_XiuzhenworldConstant::clear_m_gexppribonus() {
  m_gexppribonus_ = 0;
  clear_has_m_gexppribonus();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_gexppribonus() const {
  return m_gexppribonus_;
}
inline void E_XiuzhenworldConstant::set_m_gexppribonus(::google::protobuf::int32 value) {
  set_has_m_gexppribonus();
  m_gexppribonus_ = value;
}

// optional int32 m_gexpgroupbonus = 10;
inline bool E_XiuzhenworldConstant::has_m_gexpgroupbonus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_gexpgroupbonus() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_XiuzhenworldConstant::clear_has_m_gexpgroupbonus() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_XiuzhenworldConstant::clear_m_gexpgroupbonus() {
  m_gexpgroupbonus_ = 0;
  clear_has_m_gexpgroupbonus();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_gexpgroupbonus() const {
  return m_gexpgroupbonus_;
}
inline void E_XiuzhenworldConstant::set_m_gexpgroupbonus(::google::protobuf::int32 value) {
  set_has_m_gexpgroupbonus();
  m_gexpgroupbonus_ = value;
}

// optional int32 m_mapstart = 11;
inline bool E_XiuzhenworldConstant::has_m_mapstart() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_mapstart() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_XiuzhenworldConstant::clear_has_m_mapstart() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_XiuzhenworldConstant::clear_m_mapstart() {
  m_mapstart_ = 0;
  clear_has_m_mapstart();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_mapstart() const {
  return m_mapstart_;
}
inline void E_XiuzhenworldConstant::set_m_mapstart(::google::protobuf::int32 value) {
  set_has_m_mapstart();
  m_mapstart_ = value;
}

// optional int32 m_mapend = 12;
inline bool E_XiuzhenworldConstant::has_m_mapend() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_mapend() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_XiuzhenworldConstant::clear_has_m_mapend() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_XiuzhenworldConstant::clear_m_mapend() {
  m_mapend_ = 0;
  clear_has_m_mapend();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_mapend() const {
  return m_mapend_;
}
inline void E_XiuzhenworldConstant::set_m_mapend(::google::protobuf::int32 value) {
  set_has_m_mapend();
  m_mapend_ = value;
}

// optional int32 m_expitemid = 13;
inline bool E_XiuzhenworldConstant::has_m_expitemid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_XiuzhenworldConstant::set_has_m_expitemid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_XiuzhenworldConstant::clear_has_m_expitemid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_XiuzhenworldConstant::clear_m_expitemid() {
  m_expitemid_ = 0;
  clear_has_m_expitemid();
}
inline ::google::protobuf::int32 E_XiuzhenworldConstant::m_expitemid() const {
  return m_expitemid_;
}
inline void E_XiuzhenworldConstant::set_m_expitemid(::google::protobuf::int32 value) {
  set_has_m_expitemid();
  m_expitemid_ = value;
}

// repeated .proto_ff.E_XiuzhenworldConstantTimeitemDesc m_timeitem = 14;
inline int E_XiuzhenworldConstant::m_timeitem_size() const {
  return m_timeitem_.size();
}
inline void E_XiuzhenworldConstant::clear_m_timeitem() {
  m_timeitem_.Clear();
}
inline const ::proto_ff::E_XiuzhenworldConstantTimeitemDesc& E_XiuzhenworldConstant::m_timeitem(int index) const {
  return m_timeitem_.Get(index);
}
inline ::proto_ff::E_XiuzhenworldConstantTimeitemDesc* E_XiuzhenworldConstant::mutable_m_timeitem(int index) {
  return m_timeitem_.Mutable(index);
}
inline ::proto_ff::E_XiuzhenworldConstantTimeitemDesc* E_XiuzhenworldConstant::add_m_timeitem() {
  return m_timeitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstantTimeitemDesc >&
E_XiuzhenworldConstant::m_timeitem() const {
  return m_timeitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstantTimeitemDesc >*
E_XiuzhenworldConstant::mutable_m_timeitem() {
  return &m_timeitem_;
}

// repeated .proto_ff.E_XiuzhenworldConstantTypeDesc m_type = 15;
inline int E_XiuzhenworldConstant::m_type_size() const {
  return m_type_.size();
}
inline void E_XiuzhenworldConstant::clear_m_type() {
  m_type_.Clear();
}
inline const ::proto_ff::E_XiuzhenworldConstantTypeDesc& E_XiuzhenworldConstant::m_type(int index) const {
  return m_type_.Get(index);
}
inline ::proto_ff::E_XiuzhenworldConstantTypeDesc* E_XiuzhenworldConstant::mutable_m_type(int index) {
  return m_type_.Mutable(index);
}
inline ::proto_ff::E_XiuzhenworldConstantTypeDesc* E_XiuzhenworldConstant::add_m_type() {
  return m_type_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstantTypeDesc >&
E_XiuzhenworldConstant::m_type() const {
  return m_type_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstantTypeDesc >*
E_XiuzhenworldConstant::mutable_m_type() {
  return &m_type_;
}

// -------------------------------------------------------------------

// Sheet_XiuzhenworldConstant

// repeated .proto_ff.E_XiuzhenworldConstant E_XiuzhenworldConstant_List = 1;
inline int Sheet_XiuzhenworldConstant::e_xiuzhenworldconstant_list_size() const {
  return e_xiuzhenworldconstant_list_.size();
}
inline void Sheet_XiuzhenworldConstant::clear_e_xiuzhenworldconstant_list() {
  e_xiuzhenworldconstant_list_.Clear();
}
inline const ::proto_ff::E_XiuzhenworldConstant& Sheet_XiuzhenworldConstant::e_xiuzhenworldconstant_list(int index) const {
  return e_xiuzhenworldconstant_list_.Get(index);
}
inline ::proto_ff::E_XiuzhenworldConstant* Sheet_XiuzhenworldConstant::mutable_e_xiuzhenworldconstant_list(int index) {
  return e_xiuzhenworldconstant_list_.Mutable(index);
}
inline ::proto_ff::E_XiuzhenworldConstant* Sheet_XiuzhenworldConstant::add_e_xiuzhenworldconstant_list() {
  return e_xiuzhenworldconstant_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstant >&
Sheet_XiuzhenworldConstant::e_xiuzhenworldconstant_list() const {
  return e_xiuzhenworldconstant_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldConstant >*
Sheet_XiuzhenworldConstant::mutable_e_xiuzhenworldconstant_list() {
  return &e_xiuzhenworldconstant_list_;
}

// -------------------------------------------------------------------

// E_XiuzhenworldExpmap

// optional int32 m_id = 1;
inline bool E_XiuzhenworldExpmap::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XiuzhenworldExpmap::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XiuzhenworldExpmap::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XiuzhenworldExpmap::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XiuzhenworldExpmap::m_id() const {
  return m_id_;
}
inline void E_XiuzhenworldExpmap::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_conditionglv = 2;
inline bool E_XiuzhenworldExpmap::has_m_conditionglv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XiuzhenworldExpmap::set_has_m_conditionglv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XiuzhenworldExpmap::clear_has_m_conditionglv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XiuzhenworldExpmap::clear_m_conditionglv() {
  m_conditionglv_ = 0;
  clear_has_m_conditionglv();
}
inline ::google::protobuf::int32 E_XiuzhenworldExpmap::m_conditionglv() const {
  return m_conditionglv_;
}
inline void E_XiuzhenworldExpmap::set_m_conditionglv(::google::protobuf::int32 value) {
  set_has_m_conditionglv();
  m_conditionglv_ = value;
}

// optional int32 m_mapid = 3;
inline bool E_XiuzhenworldExpmap::has_m_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XiuzhenworldExpmap::set_has_m_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XiuzhenworldExpmap::clear_has_m_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XiuzhenworldExpmap::clear_m_mapid() {
  m_mapid_ = 0;
  clear_has_m_mapid();
}
inline ::google::protobuf::int32 E_XiuzhenworldExpmap::m_mapid() const {
  return m_mapid_;
}
inline void E_XiuzhenworldExpmap::set_m_mapid(::google::protobuf::int32 value) {
  set_has_m_mapid();
  m_mapid_ = value;
}

// -------------------------------------------------------------------

// Sheet_XiuzhenworldExpmap

// repeated .proto_ff.E_XiuzhenworldExpmap E_XiuzhenworldExpmap_List = 1;
inline int Sheet_XiuzhenworldExpmap::e_xiuzhenworldexpmap_list_size() const {
  return e_xiuzhenworldexpmap_list_.size();
}
inline void Sheet_XiuzhenworldExpmap::clear_e_xiuzhenworldexpmap_list() {
  e_xiuzhenworldexpmap_list_.Clear();
}
inline const ::proto_ff::E_XiuzhenworldExpmap& Sheet_XiuzhenworldExpmap::e_xiuzhenworldexpmap_list(int index) const {
  return e_xiuzhenworldexpmap_list_.Get(index);
}
inline ::proto_ff::E_XiuzhenworldExpmap* Sheet_XiuzhenworldExpmap::mutable_e_xiuzhenworldexpmap_list(int index) {
  return e_xiuzhenworldexpmap_list_.Mutable(index);
}
inline ::proto_ff::E_XiuzhenworldExpmap* Sheet_XiuzhenworldExpmap::add_e_xiuzhenworldexpmap_list() {
  return e_xiuzhenworldexpmap_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldExpmap >&
Sheet_XiuzhenworldExpmap::e_xiuzhenworldexpmap_list() const {
  return e_xiuzhenworldexpmap_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenworldExpmap >*
Sheet_XiuzhenworldExpmap::mutable_e_xiuzhenworldexpmap_list() {
  return &e_xiuzhenworldexpmap_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fXiuzhenworld_2eproto__INCLUDED
