// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Godevil.proto

#ifndef PROTOBUF_E_5fGodevil_2eproto__INCLUDED
#define PROTOBUF_E_5fGodevil_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fGodevil_2eproto();
void protobuf_AssignDesc_E_5fGodevil_2eproto();
void protobuf_ShutdownFile_E_5fGodevil_2eproto();

class E_GodevilPreposetask;
class Sheet_GodevilPreposetask;
class E_GodevilGodevillvAttributeDesc;
class E_GodevilGodevillv;
class Sheet_GodevilGodevillv;
class E_GodevilGodevilprivilege;
class Sheet_GodevilGodevilprivilege;
class E_GodevilStrongStDesc;
class E_GodevilStrong;
class Sheet_GodevilStrong;
class E_GodevilStrongexp;
class Sheet_GodevilStrongexp;
class E_GodevilAdvancelvAdDesc;
class E_GodevilAdvancelv;
class Sheet_GodevilAdvancelv;
class E_GodevilAdvanceexp;
class Sheet_GodevilAdvanceexp;
class E_GodevilQualitylvItemDesc;
class E_GodevilQualitylv;
class Sheet_GodevilQualitylv;
class E_GodevilPositionunlock;
class Sheet_GodevilPositionunlock;
class E_GodevilBlacksmithItemDesc;
class E_GodevilBlacksmithSkillDesc;
class E_GodevilBlacksmith;
class Sheet_GodevilBlacksmith;
class E_GodevilGodevilskill;
class Sheet_GodevilGodevilskill;
class E_GodevilPrefixname;
class Sheet_GodevilPrefixname;

// ===================================================================

class E_GodevilPreposetask : public ::google::protobuf::Message {
 public:
  E_GodevilPreposetask();
  virtual ~E_GodevilPreposetask();

  E_GodevilPreposetask(const E_GodevilPreposetask& from);

  inline E_GodevilPreposetask& operator=(const E_GodevilPreposetask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilPreposetask& default_instance();

  void Swap(E_GodevilPreposetask* other);

  // implements Message ----------------------------------------------

  E_GodevilPreposetask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilPreposetask& from);
  void MergeFrom(const E_GodevilPreposetask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_modeltype = 3;
  inline bool has_m_modeltype() const;
  inline void clear_m_modeltype();
  static const int kMModeltypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_modeltype() const;
  inline void set_m_modeltype(::google::protobuf::int32 value);

  // optional int32 m_starttask = 4;
  inline bool has_m_starttask() const;
  inline void clear_m_starttask();
  static const int kMStarttaskFieldNumber = 4;
  inline ::google::protobuf::int32 m_starttask() const;
  inline void set_m_starttask(::google::protobuf::int32 value);

  // optional int32 m_endtask = 5;
  inline bool has_m_endtask() const;
  inline void clear_m_endtask();
  static const int kMEndtaskFieldNumber = 5;
  inline ::google::protobuf::int32 m_endtask() const;
  inline void set_m_endtask(::google::protobuf::int32 value);

  // optional int32 m_condition = 6;
  inline bool has_m_condition() const;
  inline void clear_m_condition();
  static const int kMConditionFieldNumber = 6;
  inline ::google::protobuf::int32 m_condition() const;
  inline void set_m_condition(::google::protobuf::int32 value);

  // optional int32 m_value = 7;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 7;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_rewardid = 8;
  inline bool has_m_rewardid() const;
  inline void clear_m_rewardid();
  static const int kMRewardidFieldNumber = 8;
  inline ::google::protobuf::int32 m_rewardid() const;
  inline void set_m_rewardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilPreposetask)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_modeltype();
  inline void clear_has_m_modeltype();
  inline void set_has_m_starttask();
  inline void clear_has_m_starttask();
  inline void set_has_m_endtask();
  inline void clear_has_m_endtask();
  inline void set_has_m_condition();
  inline void clear_has_m_condition();
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_rewardid();
  inline void clear_has_m_rewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_modeltype_;
  ::google::protobuf::int32 m_starttask_;
  ::google::protobuf::int32 m_endtask_;
  ::google::protobuf::int32 m_condition_;
  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_rewardid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilPreposetask* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilPreposetask : public ::google::protobuf::Message {
 public:
  Sheet_GodevilPreposetask();
  virtual ~Sheet_GodevilPreposetask();

  Sheet_GodevilPreposetask(const Sheet_GodevilPreposetask& from);

  inline Sheet_GodevilPreposetask& operator=(const Sheet_GodevilPreposetask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilPreposetask& default_instance();

  void Swap(Sheet_GodevilPreposetask* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilPreposetask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilPreposetask& from);
  void MergeFrom(const Sheet_GodevilPreposetask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilPreposetask E_GodevilPreposetask_List = 1;
  inline int e_godevilpreposetask_list_size() const;
  inline void clear_e_godevilpreposetask_list();
  static const int kEGodevilPreposetaskListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilPreposetask& e_godevilpreposetask_list(int index) const;
  inline ::proto_ff::E_GodevilPreposetask* mutable_e_godevilpreposetask_list(int index);
  inline ::proto_ff::E_GodevilPreposetask* add_e_godevilpreposetask_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPreposetask >&
      e_godevilpreposetask_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPreposetask >*
      mutable_e_godevilpreposetask_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilPreposetask)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPreposetask > e_godevilpreposetask_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilPreposetask* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilGodevillvAttributeDesc : public ::google::protobuf::Message {
 public:
  E_GodevilGodevillvAttributeDesc();
  virtual ~E_GodevilGodevillvAttributeDesc();

  E_GodevilGodevillvAttributeDesc(const E_GodevilGodevillvAttributeDesc& from);

  inline E_GodevilGodevillvAttributeDesc& operator=(const E_GodevilGodevillvAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilGodevillvAttributeDesc& default_instance();

  void Swap(E_GodevilGodevillvAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_GodevilGodevillvAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilGodevillvAttributeDesc& from);
  void MergeFrom(const E_GodevilGodevillvAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilGodevillvAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilGodevillvAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilGodevillv : public ::google::protobuf::Message {
 public:
  E_GodevilGodevillv();
  virtual ~E_GodevilGodevillv();

  E_GodevilGodevillv(const E_GodevilGodevillv& from);

  inline E_GodevilGodevillv& operator=(const E_GodevilGodevillv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilGodevillv& default_instance();

  void Swap(E_GodevilGodevillv* other);

  // implements Message ----------------------------------------------

  E_GodevilGodevillv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilGodevillv& from);
  void MergeFrom(const E_GodevilGodevillv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int64 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int64 m_exp() const;
  inline void set_m_exp(::google::protobuf::int64 value);

  // optional int64 m_explimit = 3;
  inline bool has_m_explimit() const;
  inline void clear_m_explimit();
  static const int kMExplimitFieldNumber = 3;
  inline ::google::protobuf::int64 m_explimit() const;
  inline void set_m_explimit(::google::protobuf::int64 value);

  // optional int32 m_itemid = 4;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemidFieldNumber = 4;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_num = 5;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // repeated .proto_ff.E_GodevilGodevillvAttributeDesc m_attribute = 6;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 6;
  inline const ::proto_ff::E_GodevilGodevillvAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_GodevilGodevillvAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_GodevilGodevillvAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillvAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillvAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilGodevillv)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_explimit();
  inline void clear_has_m_explimit();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_num();
  inline void clear_has_m_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int64 m_exp_;
  ::google::protobuf::int64 m_explimit_;
  ::google::protobuf::int32 m_itemid_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillvAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilGodevillv* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilGodevillv : public ::google::protobuf::Message {
 public:
  Sheet_GodevilGodevillv();
  virtual ~Sheet_GodevilGodevillv();

  Sheet_GodevilGodevillv(const Sheet_GodevilGodevillv& from);

  inline Sheet_GodevilGodevillv& operator=(const Sheet_GodevilGodevillv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilGodevillv& default_instance();

  void Swap(Sheet_GodevilGodevillv* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilGodevillv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilGodevillv& from);
  void MergeFrom(const Sheet_GodevilGodevillv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilGodevillv E_GodevilGodevillv_List = 1;
  inline int e_godevilgodevillv_list_size() const;
  inline void clear_e_godevilgodevillv_list();
  static const int kEGodevilGodevillvListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilGodevillv& e_godevilgodevillv_list(int index) const;
  inline ::proto_ff::E_GodevilGodevillv* mutable_e_godevilgodevillv_list(int index);
  inline ::proto_ff::E_GodevilGodevillv* add_e_godevilgodevillv_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillv >&
      e_godevilgodevillv_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillv >*
      mutable_e_godevilgodevillv_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilGodevillv)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillv > e_godevilgodevillv_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilGodevillv* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilGodevilprivilege : public ::google::protobuf::Message {
 public:
  E_GodevilGodevilprivilege();
  virtual ~E_GodevilGodevilprivilege();

  E_GodevilGodevilprivilege(const E_GodevilGodevilprivilege& from);

  inline E_GodevilGodevilprivilege& operator=(const E_GodevilGodevilprivilege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilGodevilprivilege& default_instance();

  void Swap(E_GodevilGodevilprivilege* other);

  // implements Message ----------------------------------------------

  E_GodevilGodevilprivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilGodevilprivilege& from);
  void MergeFrom(const E_GodevilGodevilprivilege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_oldprice = 2;
  inline bool has_m_oldprice() const;
  inline void clear_m_oldprice();
  static const int kMOldpriceFieldNumber = 2;
  inline ::google::protobuf::int32 m_oldprice() const;
  inline void set_m_oldprice(::google::protobuf::int32 value);

  // optional int32 m_newprice = 3;
  inline bool has_m_newprice() const;
  inline void clear_m_newprice();
  static const int kMNewpriceFieldNumber = 3;
  inline ::google::protobuf::int32 m_newprice() const;
  inline void set_m_newprice(::google::protobuf::int32 value);

  // optional int32 m_rechargid = 4;
  inline bool has_m_rechargid() const;
  inline void clear_m_rechargid();
  static const int kMRechargidFieldNumber = 4;
  inline ::google::protobuf::int32 m_rechargid() const;
  inline void set_m_rechargid(::google::protobuf::int32 value);

  // optional int32 m_type = 5;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 5;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_lv = 6;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 6;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_functiontype = 7;
  inline bool has_m_functiontype() const;
  inline void clear_m_functiontype();
  static const int kMFunctiontypeFieldNumber = 7;
  inline ::google::protobuf::int32 m_functiontype() const;
  inline void set_m_functiontype(::google::protobuf::int32 value);

  // optional int32 m_parama = 8;
  inline bool has_m_parama() const;
  inline void clear_m_parama();
  static const int kMParamaFieldNumber = 8;
  inline ::google::protobuf::int32 m_parama() const;
  inline void set_m_parama(::google::protobuf::int32 value);

  // optional int32 m_equipmentid = 9;
  inline bool has_m_equipmentid() const;
  inline void clear_m_equipmentid();
  static const int kMEquipmentidFieldNumber = 9;
  inline ::google::protobuf::int32 m_equipmentid() const;
  inline void set_m_equipmentid(::google::protobuf::int32 value);

  // optional int32 m_itemid = 10;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemidFieldNumber = 10;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilGodevilprivilege)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_oldprice();
  inline void clear_has_m_oldprice();
  inline void set_has_m_newprice();
  inline void clear_has_m_newprice();
  inline void set_has_m_rechargid();
  inline void clear_has_m_rechargid();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_functiontype();
  inline void clear_has_m_functiontype();
  inline void set_has_m_parama();
  inline void clear_has_m_parama();
  inline void set_has_m_equipmentid();
  inline void clear_has_m_equipmentid();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_oldprice_;
  ::google::protobuf::int32 m_newprice_;
  ::google::protobuf::int32 m_rechargid_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_functiontype_;
  ::google::protobuf::int32 m_parama_;
  ::google::protobuf::int32 m_equipmentid_;
  ::google::protobuf::int32 m_itemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilGodevilprivilege* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilGodevilprivilege : public ::google::protobuf::Message {
 public:
  Sheet_GodevilGodevilprivilege();
  virtual ~Sheet_GodevilGodevilprivilege();

  Sheet_GodevilGodevilprivilege(const Sheet_GodevilGodevilprivilege& from);

  inline Sheet_GodevilGodevilprivilege& operator=(const Sheet_GodevilGodevilprivilege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilGodevilprivilege& default_instance();

  void Swap(Sheet_GodevilGodevilprivilege* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilGodevilprivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilGodevilprivilege& from);
  void MergeFrom(const Sheet_GodevilGodevilprivilege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilGodevilprivilege E_GodevilGodevilprivilege_List = 1;
  inline int e_godevilgodevilprivilege_list_size() const;
  inline void clear_e_godevilgodevilprivilege_list();
  static const int kEGodevilGodevilprivilegeListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilGodevilprivilege& e_godevilgodevilprivilege_list(int index) const;
  inline ::proto_ff::E_GodevilGodevilprivilege* mutable_e_godevilgodevilprivilege_list(int index);
  inline ::proto_ff::E_GodevilGodevilprivilege* add_e_godevilgodevilprivilege_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilprivilege >&
      e_godevilgodevilprivilege_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilprivilege >*
      mutable_e_godevilgodevilprivilege_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilGodevilprivilege)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilprivilege > e_godevilgodevilprivilege_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilGodevilprivilege* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilStrongStDesc : public ::google::protobuf::Message {
 public:
  E_GodevilStrongStDesc();
  virtual ~E_GodevilStrongStDesc();

  E_GodevilStrongStDesc(const E_GodevilStrongStDesc& from);

  inline E_GodevilStrongStDesc& operator=(const E_GodevilStrongStDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilStrongStDesc& default_instance();

  void Swap(E_GodevilStrongStDesc* other);

  // implements Message ----------------------------------------------

  E_GodevilStrongStDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilStrongStDesc& from);
  void MergeFrom(const E_GodevilStrongStDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m_typeid = 1;
  inline bool has_m_typeid() const;
  inline void clear_m_typeid();
  static const int kMTypeidFieldNumber = 1;
  inline const ::std::string& m_typeid() const;
  inline void set_m_typeid(const ::std::string& value);
  inline void set_m_typeid(const char* value);
  inline void set_m_typeid(const char* value, size_t size);
  inline ::std::string* mutable_m_typeid();
  inline ::std::string* release_m_typeid();
  inline void set_allocated_m_typeid(::std::string* m_typeid);

  // optional string m_quality = 2;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 2;
  inline const ::std::string& m_quality() const;
  inline void set_m_quality(const ::std::string& value);
  inline void set_m_quality(const char* value);
  inline void set_m_quality(const char* value, size_t size);
  inline ::std::string* mutable_m_quality();
  inline ::std::string* release_m_quality();
  inline void set_allocated_m_quality(::std::string* m_quality);

  // optional string m_position = 3;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 3;
  inline const ::std::string& m_position() const;
  inline void set_m_position(const ::std::string& value);
  inline void set_m_position(const char* value);
  inline void set_m_position(const char* value, size_t size);
  inline ::std::string* mutable_m_position();
  inline ::std::string* release_m_position();
  inline void set_allocated_m_position(::std::string* m_position);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilStrongStDesc)
 private:
  inline void set_has_m_typeid();
  inline void clear_has_m_typeid();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_position();
  inline void clear_has_m_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_typeid_;
  ::std::string* m_quality_;
  ::std::string* m_position_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilStrongStDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilStrong : public ::google::protobuf::Message {
 public:
  E_GodevilStrong();
  virtual ~E_GodevilStrong();

  E_GodevilStrong(const E_GodevilStrong& from);

  inline E_GodevilStrong& operator=(const E_GodevilStrong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilStrong& default_instance();

  void Swap(E_GodevilStrong* other);

  // implements Message ----------------------------------------------

  E_GodevilStrong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilStrong& from);
  void MergeFrom(const E_GodevilStrong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // optional int32 m_type_num = 3;
  inline bool has_m_type_num() const;
  inline void clear_m_type_num();
  static const int kMTypeNumFieldNumber = 3;
  inline ::google::protobuf::int32 m_type_num() const;
  inline void set_m_type_num(::google::protobuf::int32 value);

  // optional int32 m_godevillv = 4;
  inline bool has_m_godevillv() const;
  inline void clear_m_godevillv();
  static const int kMGodevillvFieldNumber = 4;
  inline ::google::protobuf::int32 m_godevillv() const;
  inline void set_m_godevillv(::google::protobuf::int32 value);

  // repeated .proto_ff.E_GodevilStrongStDesc m_st = 5;
  inline int m_st_size() const;
  inline void clear_m_st();
  static const int kMStFieldNumber = 5;
  inline const ::proto_ff::E_GodevilStrongStDesc& m_st(int index) const;
  inline ::proto_ff::E_GodevilStrongStDesc* mutable_m_st(int index);
  inline ::proto_ff::E_GodevilStrongStDesc* add_m_st();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrongStDesc >&
      m_st() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrongStDesc >*
      mutable_m_st();

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilStrong)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_type_num();
  inline void clear_has_m_type_num();
  inline void set_has_m_godevillv();
  inline void clear_has_m_godevillv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_exp_;
  ::google::protobuf::int32 m_type_num_;
  ::google::protobuf::int32 m_godevillv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrongStDesc > m_st_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilStrong* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilStrong : public ::google::protobuf::Message {
 public:
  Sheet_GodevilStrong();
  virtual ~Sheet_GodevilStrong();

  Sheet_GodevilStrong(const Sheet_GodevilStrong& from);

  inline Sheet_GodevilStrong& operator=(const Sheet_GodevilStrong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilStrong& default_instance();

  void Swap(Sheet_GodevilStrong* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilStrong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilStrong& from);
  void MergeFrom(const Sheet_GodevilStrong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilStrong E_GodevilStrong_List = 1;
  inline int e_godevilstrong_list_size() const;
  inline void clear_e_godevilstrong_list();
  static const int kEGodevilStrongListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilStrong& e_godevilstrong_list(int index) const;
  inline ::proto_ff::E_GodevilStrong* mutable_e_godevilstrong_list(int index);
  inline ::proto_ff::E_GodevilStrong* add_e_godevilstrong_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrong >&
      e_godevilstrong_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrong >*
      mutable_e_godevilstrong_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilStrong)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrong > e_godevilstrong_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilStrong* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilStrongexp : public ::google::protobuf::Message {
 public:
  E_GodevilStrongexp();
  virtual ~E_GodevilStrongexp();

  E_GodevilStrongexp(const E_GodevilStrongexp& from);

  inline E_GodevilStrongexp& operator=(const E_GodevilStrongexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilStrongexp& default_instance();

  void Swap(E_GodevilStrongexp* other);

  // implements Message ----------------------------------------------

  E_GodevilStrongexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilStrongexp& from);
  void MergeFrom(const E_GodevilStrongexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_parama = 3;
  inline bool has_m_parama() const;
  inline void clear_m_parama();
  static const int kMParamaFieldNumber = 3;
  inline ::google::protobuf::int32 m_parama() const;
  inline void set_m_parama(::google::protobuf::int32 value);

  // optional int32 m_strongexp = 4;
  inline bool has_m_strongexp() const;
  inline void clear_m_strongexp();
  static const int kMStrongexpFieldNumber = 4;
  inline ::google::protobuf::int32 m_strongexp() const;
  inline void set_m_strongexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilStrongexp)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_parama();
  inline void clear_has_m_parama();
  inline void set_has_m_strongexp();
  inline void clear_has_m_strongexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_parama_;
  ::google::protobuf::int32 m_strongexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilStrongexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilStrongexp : public ::google::protobuf::Message {
 public:
  Sheet_GodevilStrongexp();
  virtual ~Sheet_GodevilStrongexp();

  Sheet_GodevilStrongexp(const Sheet_GodevilStrongexp& from);

  inline Sheet_GodevilStrongexp& operator=(const Sheet_GodevilStrongexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilStrongexp& default_instance();

  void Swap(Sheet_GodevilStrongexp* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilStrongexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilStrongexp& from);
  void MergeFrom(const Sheet_GodevilStrongexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilStrongexp E_GodevilStrongexp_List = 1;
  inline int e_godevilstrongexp_list_size() const;
  inline void clear_e_godevilstrongexp_list();
  static const int kEGodevilStrongexpListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilStrongexp& e_godevilstrongexp_list(int index) const;
  inline ::proto_ff::E_GodevilStrongexp* mutable_e_godevilstrongexp_list(int index);
  inline ::proto_ff::E_GodevilStrongexp* add_e_godevilstrongexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrongexp >&
      e_godevilstrongexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrongexp >*
      mutable_e_godevilstrongexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilStrongexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrongexp > e_godevilstrongexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilStrongexp* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilAdvancelvAdDesc : public ::google::protobuf::Message {
 public:
  E_GodevilAdvancelvAdDesc();
  virtual ~E_GodevilAdvancelvAdDesc();

  E_GodevilAdvancelvAdDesc(const E_GodevilAdvancelvAdDesc& from);

  inline E_GodevilAdvancelvAdDesc& operator=(const E_GodevilAdvancelvAdDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilAdvancelvAdDesc& default_instance();

  void Swap(E_GodevilAdvancelvAdDesc* other);

  // implements Message ----------------------------------------------

  E_GodevilAdvancelvAdDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilAdvancelvAdDesc& from);
  void MergeFrom(const E_GodevilAdvancelvAdDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_godevillv = 1;
  inline bool has_m_godevillv() const;
  inline void clear_m_godevillv();
  static const int kMGodevillvFieldNumber = 1;
  inline ::google::protobuf::int32 m_godevillv() const;
  inline void set_m_godevillv(::google::protobuf::int32 value);

  // optional int32 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // optional string m_position = 3;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 3;
  inline const ::std::string& m_position() const;
  inline void set_m_position(const ::std::string& value);
  inline void set_m_position(const char* value);
  inline void set_m_position(const char* value, size_t size);
  inline ::std::string* mutable_m_position();
  inline ::std::string* release_m_position();
  inline void set_allocated_m_position(::std::string* m_position);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilAdvancelvAdDesc)
 private:
  inline void set_has_m_godevillv();
  inline void clear_has_m_godevillv();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_position();
  inline void clear_has_m_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_godevillv_;
  ::google::protobuf::int32 m_exp_;
  ::std::string* m_position_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilAdvancelvAdDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilAdvancelv : public ::google::protobuf::Message {
 public:
  E_GodevilAdvancelv();
  virtual ~E_GodevilAdvancelv();

  E_GodevilAdvancelv(const E_GodevilAdvancelv& from);

  inline E_GodevilAdvancelv& operator=(const E_GodevilAdvancelv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilAdvancelv& default_instance();

  void Swap(E_GodevilAdvancelv* other);

  // implements Message ----------------------------------------------

  E_GodevilAdvancelv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilAdvancelv& from);
  void MergeFrom(const E_GodevilAdvancelv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_wearlv = 1;
  inline bool has_m_wearlv() const;
  inline void clear_m_wearlv();
  static const int kMWearlvFieldNumber = 1;
  inline ::google::protobuf::int32 m_wearlv() const;
  inline void set_m_wearlv(::google::protobuf::int32 value);

  // repeated .proto_ff.E_GodevilAdvancelvAdDesc m_ad = 2;
  inline int m_ad_size() const;
  inline void clear_m_ad();
  static const int kMAdFieldNumber = 2;
  inline const ::proto_ff::E_GodevilAdvancelvAdDesc& m_ad(int index) const;
  inline ::proto_ff::E_GodevilAdvancelvAdDesc* mutable_m_ad(int index);
  inline ::proto_ff::E_GodevilAdvancelvAdDesc* add_m_ad();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvancelvAdDesc >&
      m_ad() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvancelvAdDesc >*
      mutable_m_ad();

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilAdvancelv)
 private:
  inline void set_has_m_wearlv();
  inline void clear_has_m_wearlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvancelvAdDesc > m_ad_;
  ::google::protobuf::int32 m_wearlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilAdvancelv* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilAdvancelv : public ::google::protobuf::Message {
 public:
  Sheet_GodevilAdvancelv();
  virtual ~Sheet_GodevilAdvancelv();

  Sheet_GodevilAdvancelv(const Sheet_GodevilAdvancelv& from);

  inline Sheet_GodevilAdvancelv& operator=(const Sheet_GodevilAdvancelv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilAdvancelv& default_instance();

  void Swap(Sheet_GodevilAdvancelv* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilAdvancelv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilAdvancelv& from);
  void MergeFrom(const Sheet_GodevilAdvancelv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilAdvancelv E_GodevilAdvancelv_List = 1;
  inline int e_godeviladvancelv_list_size() const;
  inline void clear_e_godeviladvancelv_list();
  static const int kEGodevilAdvancelvListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilAdvancelv& e_godeviladvancelv_list(int index) const;
  inline ::proto_ff::E_GodevilAdvancelv* mutable_e_godeviladvancelv_list(int index);
  inline ::proto_ff::E_GodevilAdvancelv* add_e_godeviladvancelv_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvancelv >&
      e_godeviladvancelv_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvancelv >*
      mutable_e_godeviladvancelv_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilAdvancelv)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvancelv > e_godeviladvancelv_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilAdvancelv* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilAdvanceexp : public ::google::protobuf::Message {
 public:
  E_GodevilAdvanceexp();
  virtual ~E_GodevilAdvanceexp();

  E_GodevilAdvanceexp(const E_GodevilAdvanceexp& from);

  inline E_GodevilAdvanceexp& operator=(const E_GodevilAdvanceexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilAdvanceexp& default_instance();

  void Swap(E_GodevilAdvanceexp* other);

  // implements Message ----------------------------------------------

  E_GodevilAdvanceexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilAdvanceexp& from);
  void MergeFrom(const E_GodevilAdvanceexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_wearlv = 2;
  inline bool has_m_wearlv() const;
  inline void clear_m_wearlv();
  static const int kMWearlvFieldNumber = 2;
  inline ::google::protobuf::int32 m_wearlv() const;
  inline void set_m_wearlv(::google::protobuf::int32 value);

  // optional string m_position = 3;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 3;
  inline const ::std::string& m_position() const;
  inline void set_m_position(const ::std::string& value);
  inline void set_m_position(const char* value);
  inline void set_m_position(const char* value, size_t size);
  inline ::std::string* mutable_m_position();
  inline ::std::string* release_m_position();
  inline void set_allocated_m_position(::std::string* m_position);

  // optional int32 m_lvparama = 4;
  inline bool has_m_lvparama() const;
  inline void clear_m_lvparama();
  static const int kMLvparamaFieldNumber = 4;
  inline ::google::protobuf::int32 m_lvparama() const;
  inline void set_m_lvparama(::google::protobuf::int32 value);

  // optional int32 m_goldparama = 5;
  inline bool has_m_goldparama() const;
  inline void clear_m_goldparama();
  static const int kMGoldparamaFieldNumber = 5;
  inline ::google::protobuf::int32 m_goldparama() const;
  inline void set_m_goldparama(::google::protobuf::int32 value);

  // optional int32 m_silverparama = 6;
  inline bool has_m_silverparama() const;
  inline void clear_m_silverparama();
  static const int kMSilverparamaFieldNumber = 6;
  inline ::google::protobuf::int32 m_silverparama() const;
  inline void set_m_silverparama(::google::protobuf::int32 value);

  // optional int32 m_quality6 = 7;
  inline bool has_m_quality6() const;
  inline void clear_m_quality6();
  static const int kMQuality6FieldNumber = 7;
  inline ::google::protobuf::int32 m_quality6() const;
  inline void set_m_quality6(::google::protobuf::int32 value);

  // optional int32 m_quality7 = 8;
  inline bool has_m_quality7() const;
  inline void clear_m_quality7();
  static const int kMQuality7FieldNumber = 8;
  inline ::google::protobuf::int32 m_quality7() const;
  inline void set_m_quality7(::google::protobuf::int32 value);

  // optional int32 m_quality8 = 9;
  inline bool has_m_quality8() const;
  inline void clear_m_quality8();
  static const int kMQuality8FieldNumber = 9;
  inline ::google::protobuf::int32 m_quality8() const;
  inline void set_m_quality8(::google::protobuf::int32 value);

  // optional int32 m_quality9 = 10;
  inline bool has_m_quality9() const;
  inline void clear_m_quality9();
  static const int kMQuality9FieldNumber = 10;
  inline ::google::protobuf::int32 m_quality9() const;
  inline void set_m_quality9(::google::protobuf::int32 value);

  // optional int32 m_quality10 = 11;
  inline bool has_m_quality10() const;
  inline void clear_m_quality10();
  static const int kMQuality10FieldNumber = 11;
  inline ::google::protobuf::int32 m_quality10() const;
  inline void set_m_quality10(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilAdvanceexp)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_wearlv();
  inline void clear_has_m_wearlv();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_lvparama();
  inline void clear_has_m_lvparama();
  inline void set_has_m_goldparama();
  inline void clear_has_m_goldparama();
  inline void set_has_m_silverparama();
  inline void clear_has_m_silverparama();
  inline void set_has_m_quality6();
  inline void clear_has_m_quality6();
  inline void set_has_m_quality7();
  inline void clear_has_m_quality7();
  inline void set_has_m_quality8();
  inline void clear_has_m_quality8();
  inline void set_has_m_quality9();
  inline void clear_has_m_quality9();
  inline void set_has_m_quality10();
  inline void clear_has_m_quality10();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_wearlv_;
  ::std::string* m_position_;
  ::google::protobuf::int32 m_lvparama_;
  ::google::protobuf::int32 m_goldparama_;
  ::google::protobuf::int32 m_silverparama_;
  ::google::protobuf::int32 m_quality6_;
  ::google::protobuf::int32 m_quality7_;
  ::google::protobuf::int32 m_quality8_;
  ::google::protobuf::int32 m_quality9_;
  ::google::protobuf::int32 m_quality10_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilAdvanceexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilAdvanceexp : public ::google::protobuf::Message {
 public:
  Sheet_GodevilAdvanceexp();
  virtual ~Sheet_GodevilAdvanceexp();

  Sheet_GodevilAdvanceexp(const Sheet_GodevilAdvanceexp& from);

  inline Sheet_GodevilAdvanceexp& operator=(const Sheet_GodevilAdvanceexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilAdvanceexp& default_instance();

  void Swap(Sheet_GodevilAdvanceexp* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilAdvanceexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilAdvanceexp& from);
  void MergeFrom(const Sheet_GodevilAdvanceexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilAdvanceexp E_GodevilAdvanceexp_List = 1;
  inline int e_godeviladvanceexp_list_size() const;
  inline void clear_e_godeviladvanceexp_list();
  static const int kEGodevilAdvanceexpListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilAdvanceexp& e_godeviladvanceexp_list(int index) const;
  inline ::proto_ff::E_GodevilAdvanceexp* mutable_e_godeviladvanceexp_list(int index);
  inline ::proto_ff::E_GodevilAdvanceexp* add_e_godeviladvanceexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvanceexp >&
      e_godeviladvanceexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvanceexp >*
      mutable_e_godeviladvanceexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilAdvanceexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvanceexp > e_godeviladvanceexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilAdvanceexp* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilQualitylvItemDesc : public ::google::protobuf::Message {
 public:
  E_GodevilQualitylvItemDesc();
  virtual ~E_GodevilQualitylvItemDesc();

  E_GodevilQualitylvItemDesc(const E_GodevilQualitylvItemDesc& from);

  inline E_GodevilQualitylvItemDesc& operator=(const E_GodevilQualitylvItemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilQualitylvItemDesc& default_instance();

  void Swap(E_GodevilQualitylvItemDesc* other);

  // implements Message ----------------------------------------------

  E_GodevilQualitylvItemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilQualitylvItemDesc& from);
  void MergeFrom(const E_GodevilQualitylvItemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilQualitylvItemDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilQualitylvItemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilQualitylv : public ::google::protobuf::Message {
 public:
  E_GodevilQualitylv();
  virtual ~E_GodevilQualitylv();

  E_GodevilQualitylv(const E_GodevilQualitylv& from);

  inline E_GodevilQualitylv& operator=(const E_GodevilQualitylv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilQualitylv& default_instance();

  void Swap(E_GodevilQualitylv* other);

  // implements Message ----------------------------------------------

  E_GodevilQualitylv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilQualitylv& from);
  void MergeFrom(const E_GodevilQualitylv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_quality = 2;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 2;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_wearlv = 3;
  inline bool has_m_wearlv() const;
  inline void clear_m_wearlv();
  static const int kMWearlvFieldNumber = 3;
  inline ::google::protobuf::int32 m_wearlv() const;
  inline void set_m_wearlv(::google::protobuf::int32 value);

  // optional int32 m_percent = 4;
  inline bool has_m_percent() const;
  inline void clear_m_percent();
  static const int kMPercentFieldNumber = 4;
  inline ::google::protobuf::int32 m_percent() const;
  inline void set_m_percent(::google::protobuf::int32 value);

  // optional string m_position = 5;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 5;
  inline const ::std::string& m_position() const;
  inline void set_m_position(const ::std::string& value);
  inline void set_m_position(const char* value);
  inline void set_m_position(const char* value, size_t size);
  inline ::std::string* mutable_m_position();
  inline ::std::string* release_m_position();
  inline void set_allocated_m_position(::std::string* m_position);

  // optional int32 m_costwuxiongitem = 6;
  inline bool has_m_costwuxiongitem() const;
  inline void clear_m_costwuxiongitem();
  static const int kMCostwuxiongitemFieldNumber = 6;
  inline ::google::protobuf::int32 m_costwuxiongitem() const;
  inline void set_m_costwuxiongitem(::google::protobuf::int32 value);

  // optional int32 m_costnumber = 7;
  inline bool has_m_costnumber() const;
  inline void clear_m_costnumber();
  static const int kMCostnumberFieldNumber = 7;
  inline ::google::protobuf::int32 m_costnumber() const;
  inline void set_m_costnumber(::google::protobuf::int32 value);

  // repeated .proto_ff.E_GodevilQualitylvItemDesc m_item = 8;
  inline int m_item_size() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 8;
  inline const ::proto_ff::E_GodevilQualitylvItemDesc& m_item(int index) const;
  inline ::proto_ff::E_GodevilQualitylvItemDesc* mutable_m_item(int index);
  inline ::proto_ff::E_GodevilQualitylvItemDesc* add_m_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilQualitylvItemDesc >&
      m_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilQualitylvItemDesc >*
      mutable_m_item();

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilQualitylv)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_wearlv();
  inline void clear_has_m_wearlv();
  inline void set_has_m_percent();
  inline void clear_has_m_percent();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_costwuxiongitem();
  inline void clear_has_m_costwuxiongitem();
  inline void set_has_m_costnumber();
  inline void clear_has_m_costnumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_wearlv_;
  ::google::protobuf::int32 m_percent_;
  ::std::string* m_position_;
  ::google::protobuf::int32 m_costwuxiongitem_;
  ::google::protobuf::int32 m_costnumber_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilQualitylvItemDesc > m_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilQualitylv* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilQualitylv : public ::google::protobuf::Message {
 public:
  Sheet_GodevilQualitylv();
  virtual ~Sheet_GodevilQualitylv();

  Sheet_GodevilQualitylv(const Sheet_GodevilQualitylv& from);

  inline Sheet_GodevilQualitylv& operator=(const Sheet_GodevilQualitylv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilQualitylv& default_instance();

  void Swap(Sheet_GodevilQualitylv* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilQualitylv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilQualitylv& from);
  void MergeFrom(const Sheet_GodevilQualitylv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilQualitylv E_GodevilQualitylv_List = 1;
  inline int e_godevilqualitylv_list_size() const;
  inline void clear_e_godevilqualitylv_list();
  static const int kEGodevilQualitylvListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilQualitylv& e_godevilqualitylv_list(int index) const;
  inline ::proto_ff::E_GodevilQualitylv* mutable_e_godevilqualitylv_list(int index);
  inline ::proto_ff::E_GodevilQualitylv* add_e_godevilqualitylv_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilQualitylv >&
      e_godevilqualitylv_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilQualitylv >*
      mutable_e_godevilqualitylv_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilQualitylv)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilQualitylv > e_godevilqualitylv_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilQualitylv* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilPositionunlock : public ::google::protobuf::Message {
 public:
  E_GodevilPositionunlock();
  virtual ~E_GodevilPositionunlock();

  E_GodevilPositionunlock(const E_GodevilPositionunlock& from);

  inline E_GodevilPositionunlock& operator=(const E_GodevilPositionunlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilPositionunlock& default_instance();

  void Swap(E_GodevilPositionunlock* other);

  // implements Message ----------------------------------------------

  E_GodevilPositionunlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilPositionunlock& from);
  void MergeFrom(const E_GodevilPositionunlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_position = 1;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 1;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional int32 m_day = 2;
  inline bool has_m_day() const;
  inline void clear_m_day();
  static const int kMDayFieldNumber = 2;
  inline ::google::protobuf::int32 m_day() const;
  inline void set_m_day(::google::protobuf::int32 value);

  // optional int32 m_godevillv = 3;
  inline bool has_m_godevillv() const;
  inline void clear_m_godevillv();
  static const int kMGodevillvFieldNumber = 3;
  inline ::google::protobuf::int32 m_godevillv() const;
  inline void set_m_godevillv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilPositionunlock)
 private:
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_day();
  inline void clear_has_m_day();
  inline void set_has_m_godevillv();
  inline void clear_has_m_godevillv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_day_;
  ::google::protobuf::int32 m_godevillv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilPositionunlock* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilPositionunlock : public ::google::protobuf::Message {
 public:
  Sheet_GodevilPositionunlock();
  virtual ~Sheet_GodevilPositionunlock();

  Sheet_GodevilPositionunlock(const Sheet_GodevilPositionunlock& from);

  inline Sheet_GodevilPositionunlock& operator=(const Sheet_GodevilPositionunlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilPositionunlock& default_instance();

  void Swap(Sheet_GodevilPositionunlock* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilPositionunlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilPositionunlock& from);
  void MergeFrom(const Sheet_GodevilPositionunlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilPositionunlock E_GodevilPositionunlock_List = 1;
  inline int e_godevilpositionunlock_list_size() const;
  inline void clear_e_godevilpositionunlock_list();
  static const int kEGodevilPositionunlockListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilPositionunlock& e_godevilpositionunlock_list(int index) const;
  inline ::proto_ff::E_GodevilPositionunlock* mutable_e_godevilpositionunlock_list(int index);
  inline ::proto_ff::E_GodevilPositionunlock* add_e_godevilpositionunlock_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPositionunlock >&
      e_godevilpositionunlock_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPositionunlock >*
      mutable_e_godevilpositionunlock_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilPositionunlock)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPositionunlock > e_godevilpositionunlock_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilPositionunlock* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilBlacksmithItemDesc : public ::google::protobuf::Message {
 public:
  E_GodevilBlacksmithItemDesc();
  virtual ~E_GodevilBlacksmithItemDesc();

  E_GodevilBlacksmithItemDesc(const E_GodevilBlacksmithItemDesc& from);

  inline E_GodevilBlacksmithItemDesc& operator=(const E_GodevilBlacksmithItemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilBlacksmithItemDesc& default_instance();

  void Swap(E_GodevilBlacksmithItemDesc* other);

  // implements Message ----------------------------------------------

  E_GodevilBlacksmithItemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilBlacksmithItemDesc& from);
  void MergeFrom(const E_GodevilBlacksmithItemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilBlacksmithItemDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilBlacksmithItemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilBlacksmithSkillDesc : public ::google::protobuf::Message {
 public:
  E_GodevilBlacksmithSkillDesc();
  virtual ~E_GodevilBlacksmithSkillDesc();

  E_GodevilBlacksmithSkillDesc(const E_GodevilBlacksmithSkillDesc& from);

  inline E_GodevilBlacksmithSkillDesc& operator=(const E_GodevilBlacksmithSkillDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilBlacksmithSkillDesc& default_instance();

  void Swap(E_GodevilBlacksmithSkillDesc* other);

  // implements Message ----------------------------------------------

  E_GodevilBlacksmithSkillDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilBlacksmithSkillDesc& from);
  void MergeFrom(const E_GodevilBlacksmithSkillDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_probability = 1;
  inline bool has_m_probability() const;
  inline void clear_m_probability();
  static const int kMProbabilityFieldNumber = 1;
  inline ::google::protobuf::int32 m_probability() const;
  inline void set_m_probability(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilBlacksmithSkillDesc)
 private:
  inline void set_has_m_probability();
  inline void clear_has_m_probability();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_probability_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilBlacksmithSkillDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilBlacksmith : public ::google::protobuf::Message {
 public:
  E_GodevilBlacksmith();
  virtual ~E_GodevilBlacksmith();

  E_GodevilBlacksmith(const E_GodevilBlacksmith& from);

  inline E_GodevilBlacksmith& operator=(const E_GodevilBlacksmith& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilBlacksmith& default_instance();

  void Swap(E_GodevilBlacksmith* other);

  // implements Message ----------------------------------------------

  E_GodevilBlacksmith* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilBlacksmith& from);
  void MergeFrom(const E_GodevilBlacksmith& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_position = 3;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 3;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional int32 m_quality = 4;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 4;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_probability = 5;
  inline bool has_m_probability() const;
  inline void clear_m_probability();
  static const int kMProbabilityFieldNumber = 5;
  inline ::google::protobuf::int32 m_probability() const;
  inline void set_m_probability(::google::protobuf::int32 value);

  // optional string m_godpoint = 6;
  inline bool has_m_godpoint() const;
  inline void clear_m_godpoint();
  static const int kMGodpointFieldNumber = 6;
  inline const ::std::string& m_godpoint() const;
  inline void set_m_godpoint(const ::std::string& value);
  inline void set_m_godpoint(const char* value);
  inline void set_m_godpoint(const char* value, size_t size);
  inline ::std::string* mutable_m_godpoint();
  inline ::std::string* release_m_godpoint();
  inline void set_allocated_m_godpoint(::std::string* m_godpoint);

  // optional string m_starsprobability = 7;
  inline bool has_m_starsprobability() const;
  inline void clear_m_starsprobability();
  static const int kMStarsprobabilityFieldNumber = 7;
  inline const ::std::string& m_starsprobability() const;
  inline void set_m_starsprobability(const ::std::string& value);
  inline void set_m_starsprobability(const char* value);
  inline void set_m_starsprobability(const char* value, size_t size);
  inline ::std::string* mutable_m_starsprobability();
  inline ::std::string* release_m_starsprobability();
  inline void set_allocated_m_starsprobability(::std::string* m_starsprobability);

  // optional int32 m_gold = 8;
  inline bool has_m_gold() const;
  inline void clear_m_gold();
  static const int kMGoldFieldNumber = 8;
  inline ::google::protobuf::int32 m_gold() const;
  inline void set_m_gold(::google::protobuf::int32 value);

  // optional int32 m_silver = 9;
  inline bool has_m_silver() const;
  inline void clear_m_silver();
  static const int kMSilverFieldNumber = 9;
  inline ::google::protobuf::int32 m_silver() const;
  inline void set_m_silver(::google::protobuf::int32 value);

  // optional int32 m_paperid = 10;
  inline bool has_m_paperid() const;
  inline void clear_m_paperid();
  static const int kMPaperidFieldNumber = 10;
  inline ::google::protobuf::int32 m_paperid() const;
  inline void set_m_paperid(::google::protobuf::int32 value);

  // optional int32 m_papernum = 11;
  inline bool has_m_papernum() const;
  inline void clear_m_papernum();
  static const int kMPapernumFieldNumber = 11;
  inline ::google::protobuf::int32 m_papernum() const;
  inline void set_m_papernum(::google::protobuf::int32 value);

  // optional int32 m_substituteitem = 12;
  inline bool has_m_substituteitem() const;
  inline void clear_m_substituteitem();
  static const int kMSubstituteitemFieldNumber = 12;
  inline ::google::protobuf::int32 m_substituteitem() const;
  inline void set_m_substituteitem(::google::protobuf::int32 value);

  // optional int32 m_number = 13;
  inline bool has_m_number() const;
  inline void clear_m_number();
  static const int kMNumberFieldNumber = 13;
  inline ::google::protobuf::int32 m_number() const;
  inline void set_m_number(::google::protobuf::int32 value);

  // optional int32 m_godevilskill = 14;
  inline bool has_m_godevilskill() const;
  inline void clear_m_godevilskill();
  static const int kMGodevilskillFieldNumber = 14;
  inline ::google::protobuf::int32 m_godevilskill() const;
  inline void set_m_godevilskill(::google::protobuf::int32 value);

  // optional string m_skillset = 15;
  inline bool has_m_skillset() const;
  inline void clear_m_skillset();
  static const int kMSkillsetFieldNumber = 15;
  inline const ::std::string& m_skillset() const;
  inline void set_m_skillset(const ::std::string& value);
  inline void set_m_skillset(const char* value);
  inline void set_m_skillset(const char* value, size_t size);
  inline ::std::string* mutable_m_skillset();
  inline ::std::string* release_m_skillset();
  inline void set_allocated_m_skillset(::std::string* m_skillset);

  // repeated .proto_ff.E_GodevilBlacksmithItemDesc m_item = 16;
  inline int m_item_size() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 16;
  inline const ::proto_ff::E_GodevilBlacksmithItemDesc& m_item(int index) const;
  inline ::proto_ff::E_GodevilBlacksmithItemDesc* mutable_m_item(int index);
  inline ::proto_ff::E_GodevilBlacksmithItemDesc* add_m_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmithItemDesc >&
      m_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmithItemDesc >*
      mutable_m_item();

  // repeated .proto_ff.E_GodevilBlacksmithSkillDesc m_skill = 17;
  inline int m_skill_size() const;
  inline void clear_m_skill();
  static const int kMSkillFieldNumber = 17;
  inline const ::proto_ff::E_GodevilBlacksmithSkillDesc& m_skill(int index) const;
  inline ::proto_ff::E_GodevilBlacksmithSkillDesc* mutable_m_skill(int index);
  inline ::proto_ff::E_GodevilBlacksmithSkillDesc* add_m_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmithSkillDesc >&
      m_skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmithSkillDesc >*
      mutable_m_skill();

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilBlacksmith)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_probability();
  inline void clear_has_m_probability();
  inline void set_has_m_godpoint();
  inline void clear_has_m_godpoint();
  inline void set_has_m_starsprobability();
  inline void clear_has_m_starsprobability();
  inline void set_has_m_gold();
  inline void clear_has_m_gold();
  inline void set_has_m_silver();
  inline void clear_has_m_silver();
  inline void set_has_m_paperid();
  inline void clear_has_m_paperid();
  inline void set_has_m_papernum();
  inline void clear_has_m_papernum();
  inline void set_has_m_substituteitem();
  inline void clear_has_m_substituteitem();
  inline void set_has_m_number();
  inline void clear_has_m_number();
  inline void set_has_m_godevilskill();
  inline void clear_has_m_godevilskill();
  inline void set_has_m_skillset();
  inline void clear_has_m_skillset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_quality_;
  ::std::string* m_godpoint_;
  ::google::protobuf::int32 m_probability_;
  ::google::protobuf::int32 m_gold_;
  ::std::string* m_starsprobability_;
  ::google::protobuf::int32 m_silver_;
  ::google::protobuf::int32 m_paperid_;
  ::google::protobuf::int32 m_papernum_;
  ::google::protobuf::int32 m_substituteitem_;
  ::google::protobuf::int32 m_number_;
  ::google::protobuf::int32 m_godevilskill_;
  ::std::string* m_skillset_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmithItemDesc > m_item_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmithSkillDesc > m_skill_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilBlacksmith* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilBlacksmith : public ::google::protobuf::Message {
 public:
  Sheet_GodevilBlacksmith();
  virtual ~Sheet_GodevilBlacksmith();

  Sheet_GodevilBlacksmith(const Sheet_GodevilBlacksmith& from);

  inline Sheet_GodevilBlacksmith& operator=(const Sheet_GodevilBlacksmith& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilBlacksmith& default_instance();

  void Swap(Sheet_GodevilBlacksmith* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilBlacksmith* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilBlacksmith& from);
  void MergeFrom(const Sheet_GodevilBlacksmith& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilBlacksmith E_GodevilBlacksmith_List = 1;
  inline int e_godevilblacksmith_list_size() const;
  inline void clear_e_godevilblacksmith_list();
  static const int kEGodevilBlacksmithListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilBlacksmith& e_godevilblacksmith_list(int index) const;
  inline ::proto_ff::E_GodevilBlacksmith* mutable_e_godevilblacksmith_list(int index);
  inline ::proto_ff::E_GodevilBlacksmith* add_e_godevilblacksmith_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmith >&
      e_godevilblacksmith_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmith >*
      mutable_e_godevilblacksmith_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilBlacksmith)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmith > e_godevilblacksmith_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilBlacksmith* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilGodevilskill : public ::google::protobuf::Message {
 public:
  E_GodevilGodevilskill();
  virtual ~E_GodevilGodevilskill();

  E_GodevilGodevilskill(const E_GodevilGodevilskill& from);

  inline E_GodevilGodevilskill& operator=(const E_GodevilGodevilskill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilGodevilskill& default_instance();

  void Swap(E_GodevilGodevilskill* other);

  // implements Message ----------------------------------------------

  E_GodevilGodevilskill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilGodevilskill& from);
  void MergeFrom(const E_GodevilGodevilskill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_godevilskill = 1;
  inline bool has_m_godevilskill() const;
  inline void clear_m_godevilskill();
  static const int kMGodevilskillFieldNumber = 1;
  inline ::google::protobuf::int32 m_godevilskill() const;
  inline void set_m_godevilskill(::google::protobuf::int32 value);

  // optional int32 m_goldstars = 2;
  inline bool has_m_goldstars() const;
  inline void clear_m_goldstars();
  static const int kMGoldstarsFieldNumber = 2;
  inline ::google::protobuf::int32 m_goldstars() const;
  inline void set_m_goldstars(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilGodevilskill)
 private:
  inline void set_has_m_godevilskill();
  inline void clear_has_m_godevilskill();
  inline void set_has_m_goldstars();
  inline void clear_has_m_goldstars();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_godevilskill_;
  ::google::protobuf::int32 m_goldstars_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilGodevilskill* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilGodevilskill : public ::google::protobuf::Message {
 public:
  Sheet_GodevilGodevilskill();
  virtual ~Sheet_GodevilGodevilskill();

  Sheet_GodevilGodevilskill(const Sheet_GodevilGodevilskill& from);

  inline Sheet_GodevilGodevilskill& operator=(const Sheet_GodevilGodevilskill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilGodevilskill& default_instance();

  void Swap(Sheet_GodevilGodevilskill* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilGodevilskill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilGodevilskill& from);
  void MergeFrom(const Sheet_GodevilGodevilskill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilGodevilskill E_GodevilGodevilskill_List = 1;
  inline int e_godevilgodevilskill_list_size() const;
  inline void clear_e_godevilgodevilskill_list();
  static const int kEGodevilGodevilskillListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilGodevilskill& e_godevilgodevilskill_list(int index) const;
  inline ::proto_ff::E_GodevilGodevilskill* mutable_e_godevilgodevilskill_list(int index);
  inline ::proto_ff::E_GodevilGodevilskill* add_e_godevilgodevilskill_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilskill >&
      e_godevilgodevilskill_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilskill >*
      mutable_e_godevilgodevilskill_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilGodevilskill)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilskill > e_godevilgodevilskill_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilGodevilskill* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilPrefixname : public ::google::protobuf::Message {
 public:
  E_GodevilPrefixname();
  virtual ~E_GodevilPrefixname();

  E_GodevilPrefixname(const E_GodevilPrefixname& from);

  inline E_GodevilPrefixname& operator=(const E_GodevilPrefixname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilPrefixname& default_instance();

  void Swap(E_GodevilPrefixname* other);

  // implements Message ----------------------------------------------

  E_GodevilPrefixname* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilPrefixname& from);
  void MergeFrom(const E_GodevilPrefixname& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_number = 3;
  inline bool has_m_number() const;
  inline void clear_m_number();
  static const int kMNumberFieldNumber = 3;
  inline ::google::protobuf::int32 m_number() const;
  inline void set_m_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilPrefixname)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_number();
  inline void clear_has_m_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilPrefixname* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilPrefixname : public ::google::protobuf::Message {
 public:
  Sheet_GodevilPrefixname();
  virtual ~Sheet_GodevilPrefixname();

  Sheet_GodevilPrefixname(const Sheet_GodevilPrefixname& from);

  inline Sheet_GodevilPrefixname& operator=(const Sheet_GodevilPrefixname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilPrefixname& default_instance();

  void Swap(Sheet_GodevilPrefixname* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilPrefixname* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilPrefixname& from);
  void MergeFrom(const Sheet_GodevilPrefixname& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilPrefixname E_GodevilPrefixname_List = 1;
  inline int e_godevilprefixname_list_size() const;
  inline void clear_e_godevilprefixname_list();
  static const int kEGodevilPrefixnameListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilPrefixname& e_godevilprefixname_list(int index) const;
  inline ::proto_ff::E_GodevilPrefixname* mutable_e_godevilprefixname_list(int index);
  inline ::proto_ff::E_GodevilPrefixname* add_e_godevilprefixname_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPrefixname >&
      e_godevilprefixname_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPrefixname >*
      mutable_e_godevilprefixname_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilPrefixname)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPrefixname > e_godevilprefixname_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGodevil_2eproto();
  friend void protobuf_AssignDesc_E_5fGodevil_2eproto();
  friend void protobuf_ShutdownFile_E_5fGodevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilPrefixname* default_instance_;
};
// ===================================================================


// ===================================================================

// E_GodevilPreposetask

// optional int32 m_id = 1;
inline bool E_GodevilPreposetask::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilPreposetask::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilPreposetask::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_id() const {
  return m_id_;
}
inline void E_GodevilPreposetask::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_GodevilPreposetask::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilPreposetask::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilPreposetask::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_type() const {
  return m_type_;
}
inline void E_GodevilPreposetask::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_modeltype = 3;
inline bool E_GodevilPreposetask::has_m_modeltype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_modeltype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilPreposetask::clear_has_m_modeltype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilPreposetask::clear_m_modeltype() {
  m_modeltype_ = 0;
  clear_has_m_modeltype();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_modeltype() const {
  return m_modeltype_;
}
inline void E_GodevilPreposetask::set_m_modeltype(::google::protobuf::int32 value) {
  set_has_m_modeltype();
  m_modeltype_ = value;
}

// optional int32 m_starttask = 4;
inline bool E_GodevilPreposetask::has_m_starttask() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_starttask() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilPreposetask::clear_has_m_starttask() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilPreposetask::clear_m_starttask() {
  m_starttask_ = 0;
  clear_has_m_starttask();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_starttask() const {
  return m_starttask_;
}
inline void E_GodevilPreposetask::set_m_starttask(::google::protobuf::int32 value) {
  set_has_m_starttask();
  m_starttask_ = value;
}

// optional int32 m_endtask = 5;
inline bool E_GodevilPreposetask::has_m_endtask() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_endtask() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_GodevilPreposetask::clear_has_m_endtask() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_GodevilPreposetask::clear_m_endtask() {
  m_endtask_ = 0;
  clear_has_m_endtask();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_endtask() const {
  return m_endtask_;
}
inline void E_GodevilPreposetask::set_m_endtask(::google::protobuf::int32 value) {
  set_has_m_endtask();
  m_endtask_ = value;
}

// optional int32 m_condition = 6;
inline bool E_GodevilPreposetask::has_m_condition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_condition() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_GodevilPreposetask::clear_has_m_condition() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_GodevilPreposetask::clear_m_condition() {
  m_condition_ = 0;
  clear_has_m_condition();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_condition() const {
  return m_condition_;
}
inline void E_GodevilPreposetask::set_m_condition(::google::protobuf::int32 value) {
  set_has_m_condition();
  m_condition_ = value;
}

// optional int32 m_value = 7;
inline bool E_GodevilPreposetask::has_m_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_GodevilPreposetask::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_GodevilPreposetask::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_value() const {
  return m_value_;
}
inline void E_GodevilPreposetask::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_rewardid = 8;
inline bool E_GodevilPreposetask::has_m_rewardid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_rewardid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_GodevilPreposetask::clear_has_m_rewardid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_GodevilPreposetask::clear_m_rewardid() {
  m_rewardid_ = 0;
  clear_has_m_rewardid();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_rewardid() const {
  return m_rewardid_;
}
inline void E_GodevilPreposetask::set_m_rewardid(::google::protobuf::int32 value) {
  set_has_m_rewardid();
  m_rewardid_ = value;
}

// -------------------------------------------------------------------

// Sheet_GodevilPreposetask

// repeated .proto_ff.E_GodevilPreposetask E_GodevilPreposetask_List = 1;
inline int Sheet_GodevilPreposetask::e_godevilpreposetask_list_size() const {
  return e_godevilpreposetask_list_.size();
}
inline void Sheet_GodevilPreposetask::clear_e_godevilpreposetask_list() {
  e_godevilpreposetask_list_.Clear();
}
inline const ::proto_ff::E_GodevilPreposetask& Sheet_GodevilPreposetask::e_godevilpreposetask_list(int index) const {
  return e_godevilpreposetask_list_.Get(index);
}
inline ::proto_ff::E_GodevilPreposetask* Sheet_GodevilPreposetask::mutable_e_godevilpreposetask_list(int index) {
  return e_godevilpreposetask_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilPreposetask* Sheet_GodevilPreposetask::add_e_godevilpreposetask_list() {
  return e_godevilpreposetask_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPreposetask >&
Sheet_GodevilPreposetask::e_godevilpreposetask_list() const {
  return e_godevilpreposetask_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPreposetask >*
Sheet_GodevilPreposetask::mutable_e_godevilpreposetask_list() {
  return &e_godevilpreposetask_list_;
}

// -------------------------------------------------------------------

// E_GodevilGodevillvAttributeDesc

// optional int32 m_value = 1;
inline bool E_GodevilGodevillvAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilGodevillvAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilGodevillvAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilGodevillvAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_GodevilGodevillvAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_GodevilGodevillvAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_GodevilGodevillvAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilGodevillvAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilGodevillvAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilGodevillvAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_GodevilGodevillvAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_GodevilGodevillvAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_GodevilGodevillv

// optional int64 m_id = 1;
inline bool E_GodevilGodevillv::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilGodevillv::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilGodevillv::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilGodevillv::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_GodevilGodevillv::m_id() const {
  return m_id_;
}
inline void E_GodevilGodevillv::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int64 m_exp = 2;
inline bool E_GodevilGodevillv::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilGodevillv::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilGodevillv::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilGodevillv::clear_m_exp() {
  m_exp_ = GOOGLE_LONGLONG(0);
  clear_has_m_exp();
}
inline ::google::protobuf::int64 E_GodevilGodevillv::m_exp() const {
  return m_exp_;
}
inline void E_GodevilGodevillv::set_m_exp(::google::protobuf::int64 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional int64 m_explimit = 3;
inline bool E_GodevilGodevillv::has_m_explimit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilGodevillv::set_has_m_explimit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilGodevillv::clear_has_m_explimit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilGodevillv::clear_m_explimit() {
  m_explimit_ = GOOGLE_LONGLONG(0);
  clear_has_m_explimit();
}
inline ::google::protobuf::int64 E_GodevilGodevillv::m_explimit() const {
  return m_explimit_;
}
inline void E_GodevilGodevillv::set_m_explimit(::google::protobuf::int64 value) {
  set_has_m_explimit();
  m_explimit_ = value;
}

// optional int32 m_itemid = 4;
inline bool E_GodevilGodevillv::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilGodevillv::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilGodevillv::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilGodevillv::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_GodevilGodevillv::m_itemid() const {
  return m_itemid_;
}
inline void E_GodevilGodevillv::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_num = 5;
inline bool E_GodevilGodevillv::has_m_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_GodevilGodevillv::set_has_m_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_GodevilGodevillv::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_GodevilGodevillv::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_GodevilGodevillv::m_num() const {
  return m_num_;
}
inline void E_GodevilGodevillv::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// repeated .proto_ff.E_GodevilGodevillvAttributeDesc m_attribute = 6;
inline int E_GodevilGodevillv::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_GodevilGodevillv::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_GodevilGodevillvAttributeDesc& E_GodevilGodevillv::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_GodevilGodevillvAttributeDesc* E_GodevilGodevillv::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_GodevilGodevillvAttributeDesc* E_GodevilGodevillv::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillvAttributeDesc >&
E_GodevilGodevillv::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillvAttributeDesc >*
E_GodevilGodevillv::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_GodevilGodevillv

// repeated .proto_ff.E_GodevilGodevillv E_GodevilGodevillv_List = 1;
inline int Sheet_GodevilGodevillv::e_godevilgodevillv_list_size() const {
  return e_godevilgodevillv_list_.size();
}
inline void Sheet_GodevilGodevillv::clear_e_godevilgodevillv_list() {
  e_godevilgodevillv_list_.Clear();
}
inline const ::proto_ff::E_GodevilGodevillv& Sheet_GodevilGodevillv::e_godevilgodevillv_list(int index) const {
  return e_godevilgodevillv_list_.Get(index);
}
inline ::proto_ff::E_GodevilGodevillv* Sheet_GodevilGodevillv::mutable_e_godevilgodevillv_list(int index) {
  return e_godevilgodevillv_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilGodevillv* Sheet_GodevilGodevillv::add_e_godevilgodevillv_list() {
  return e_godevilgodevillv_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillv >&
Sheet_GodevilGodevillv::e_godevilgodevillv_list() const {
  return e_godevilgodevillv_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillv >*
Sheet_GodevilGodevillv::mutable_e_godevilgodevillv_list() {
  return &e_godevilgodevillv_list_;
}

// -------------------------------------------------------------------

// E_GodevilGodevilprivilege

// optional int64 m_id = 1;
inline bool E_GodevilGodevilprivilege::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilGodevilprivilege::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_GodevilGodevilprivilege::m_id() const {
  return m_id_;
}
inline void E_GodevilGodevilprivilege::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_oldprice = 2;
inline bool E_GodevilGodevilprivilege::has_m_oldprice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_oldprice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_oldprice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilGodevilprivilege::clear_m_oldprice() {
  m_oldprice_ = 0;
  clear_has_m_oldprice();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_oldprice() const {
  return m_oldprice_;
}
inline void E_GodevilGodevilprivilege::set_m_oldprice(::google::protobuf::int32 value) {
  set_has_m_oldprice();
  m_oldprice_ = value;
}

// optional int32 m_newprice = 3;
inline bool E_GodevilGodevilprivilege::has_m_newprice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_newprice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_newprice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilGodevilprivilege::clear_m_newprice() {
  m_newprice_ = 0;
  clear_has_m_newprice();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_newprice() const {
  return m_newprice_;
}
inline void E_GodevilGodevilprivilege::set_m_newprice(::google::protobuf::int32 value) {
  set_has_m_newprice();
  m_newprice_ = value;
}

// optional int32 m_rechargid = 4;
inline bool E_GodevilGodevilprivilege::has_m_rechargid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_rechargid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_rechargid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilGodevilprivilege::clear_m_rechargid() {
  m_rechargid_ = 0;
  clear_has_m_rechargid();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_rechargid() const {
  return m_rechargid_;
}
inline void E_GodevilGodevilprivilege::set_m_rechargid(::google::protobuf::int32 value) {
  set_has_m_rechargid();
  m_rechargid_ = value;
}

// optional int32 m_type = 5;
inline bool E_GodevilGodevilprivilege::has_m_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_GodevilGodevilprivilege::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_type() const {
  return m_type_;
}
inline void E_GodevilGodevilprivilege::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_lv = 6;
inline bool E_GodevilGodevilprivilege::has_m_lv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_lv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_GodevilGodevilprivilege::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_lv() const {
  return m_lv_;
}
inline void E_GodevilGodevilprivilege::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_functiontype = 7;
inline bool E_GodevilGodevilprivilege::has_m_functiontype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_functiontype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_functiontype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_GodevilGodevilprivilege::clear_m_functiontype() {
  m_functiontype_ = 0;
  clear_has_m_functiontype();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_functiontype() const {
  return m_functiontype_;
}
inline void E_GodevilGodevilprivilege::set_m_functiontype(::google::protobuf::int32 value) {
  set_has_m_functiontype();
  m_functiontype_ = value;
}

// optional int32 m_parama = 8;
inline bool E_GodevilGodevilprivilege::has_m_parama() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_parama() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_parama() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_GodevilGodevilprivilege::clear_m_parama() {
  m_parama_ = 0;
  clear_has_m_parama();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_parama() const {
  return m_parama_;
}
inline void E_GodevilGodevilprivilege::set_m_parama(::google::protobuf::int32 value) {
  set_has_m_parama();
  m_parama_ = value;
}

// optional int32 m_equipmentid = 9;
inline bool E_GodevilGodevilprivilege::has_m_equipmentid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_equipmentid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_equipmentid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_GodevilGodevilprivilege::clear_m_equipmentid() {
  m_equipmentid_ = 0;
  clear_has_m_equipmentid();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_equipmentid() const {
  return m_equipmentid_;
}
inline void E_GodevilGodevilprivilege::set_m_equipmentid(::google::protobuf::int32 value) {
  set_has_m_equipmentid();
  m_equipmentid_ = value;
}

// optional int32 m_itemid = 10;
inline bool E_GodevilGodevilprivilege::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_GodevilGodevilprivilege::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_itemid() const {
  return m_itemid_;
}
inline void E_GodevilGodevilprivilege::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// -------------------------------------------------------------------

// Sheet_GodevilGodevilprivilege

// repeated .proto_ff.E_GodevilGodevilprivilege E_GodevilGodevilprivilege_List = 1;
inline int Sheet_GodevilGodevilprivilege::e_godevilgodevilprivilege_list_size() const {
  return e_godevilgodevilprivilege_list_.size();
}
inline void Sheet_GodevilGodevilprivilege::clear_e_godevilgodevilprivilege_list() {
  e_godevilgodevilprivilege_list_.Clear();
}
inline const ::proto_ff::E_GodevilGodevilprivilege& Sheet_GodevilGodevilprivilege::e_godevilgodevilprivilege_list(int index) const {
  return e_godevilgodevilprivilege_list_.Get(index);
}
inline ::proto_ff::E_GodevilGodevilprivilege* Sheet_GodevilGodevilprivilege::mutable_e_godevilgodevilprivilege_list(int index) {
  return e_godevilgodevilprivilege_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilGodevilprivilege* Sheet_GodevilGodevilprivilege::add_e_godevilgodevilprivilege_list() {
  return e_godevilgodevilprivilege_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilprivilege >&
Sheet_GodevilGodevilprivilege::e_godevilgodevilprivilege_list() const {
  return e_godevilgodevilprivilege_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilprivilege >*
Sheet_GodevilGodevilprivilege::mutable_e_godevilgodevilprivilege_list() {
  return &e_godevilgodevilprivilege_list_;
}

// -------------------------------------------------------------------

// E_GodevilStrongStDesc

// optional string m_typeid = 1;
inline bool E_GodevilStrongStDesc::has_m_typeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilStrongStDesc::set_has_m_typeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilStrongStDesc::clear_has_m_typeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilStrongStDesc::clear_m_typeid() {
  if (m_typeid_ != &::google::protobuf::internal::kEmptyString) {
    m_typeid_->clear();
  }
  clear_has_m_typeid();
}
inline const ::std::string& E_GodevilStrongStDesc::m_typeid() const {
  return *m_typeid_;
}
inline void E_GodevilStrongStDesc::set_m_typeid(const ::std::string& value) {
  set_has_m_typeid();
  if (m_typeid_ == &::google::protobuf::internal::kEmptyString) {
    m_typeid_ = new ::std::string;
  }
  m_typeid_->assign(value);
}
inline void E_GodevilStrongStDesc::set_m_typeid(const char* value) {
  set_has_m_typeid();
  if (m_typeid_ == &::google::protobuf::internal::kEmptyString) {
    m_typeid_ = new ::std::string;
  }
  m_typeid_->assign(value);
}
inline void E_GodevilStrongStDesc::set_m_typeid(const char* value, size_t size) {
  set_has_m_typeid();
  if (m_typeid_ == &::google::protobuf::internal::kEmptyString) {
    m_typeid_ = new ::std::string;
  }
  m_typeid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GodevilStrongStDesc::mutable_m_typeid() {
  set_has_m_typeid();
  if (m_typeid_ == &::google::protobuf::internal::kEmptyString) {
    m_typeid_ = new ::std::string;
  }
  return m_typeid_;
}
inline ::std::string* E_GodevilStrongStDesc::release_m_typeid() {
  clear_has_m_typeid();
  if (m_typeid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_typeid_;
    m_typeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GodevilStrongStDesc::set_allocated_m_typeid(::std::string* m_typeid) {
  if (m_typeid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_typeid_;
  }
  if (m_typeid) {
    set_has_m_typeid();
    m_typeid_ = m_typeid;
  } else {
    clear_has_m_typeid();
    m_typeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_quality = 2;
inline bool E_GodevilStrongStDesc::has_m_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilStrongStDesc::set_has_m_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilStrongStDesc::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilStrongStDesc::clear_m_quality() {
  if (m_quality_ != &::google::protobuf::internal::kEmptyString) {
    m_quality_->clear();
  }
  clear_has_m_quality();
}
inline const ::std::string& E_GodevilStrongStDesc::m_quality() const {
  return *m_quality_;
}
inline void E_GodevilStrongStDesc::set_m_quality(const ::std::string& value) {
  set_has_m_quality();
  if (m_quality_ == &::google::protobuf::internal::kEmptyString) {
    m_quality_ = new ::std::string;
  }
  m_quality_->assign(value);
}
inline void E_GodevilStrongStDesc::set_m_quality(const char* value) {
  set_has_m_quality();
  if (m_quality_ == &::google::protobuf::internal::kEmptyString) {
    m_quality_ = new ::std::string;
  }
  m_quality_->assign(value);
}
inline void E_GodevilStrongStDesc::set_m_quality(const char* value, size_t size) {
  set_has_m_quality();
  if (m_quality_ == &::google::protobuf::internal::kEmptyString) {
    m_quality_ = new ::std::string;
  }
  m_quality_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GodevilStrongStDesc::mutable_m_quality() {
  set_has_m_quality();
  if (m_quality_ == &::google::protobuf::internal::kEmptyString) {
    m_quality_ = new ::std::string;
  }
  return m_quality_;
}
inline ::std::string* E_GodevilStrongStDesc::release_m_quality() {
  clear_has_m_quality();
  if (m_quality_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_quality_;
    m_quality_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GodevilStrongStDesc::set_allocated_m_quality(::std::string* m_quality) {
  if (m_quality_ != &::google::protobuf::internal::kEmptyString) {
    delete m_quality_;
  }
  if (m_quality) {
    set_has_m_quality();
    m_quality_ = m_quality;
  } else {
    clear_has_m_quality();
    m_quality_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_position = 3;
inline bool E_GodevilStrongStDesc::has_m_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilStrongStDesc::set_has_m_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilStrongStDesc::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilStrongStDesc::clear_m_position() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    m_position_->clear();
  }
  clear_has_m_position();
}
inline const ::std::string& E_GodevilStrongStDesc::m_position() const {
  return *m_position_;
}
inline void E_GodevilStrongStDesc::set_m_position(const ::std::string& value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_GodevilStrongStDesc::set_m_position(const char* value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_GodevilStrongStDesc::set_m_position(const char* value, size_t size) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GodevilStrongStDesc::mutable_m_position() {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  return m_position_;
}
inline ::std::string* E_GodevilStrongStDesc::release_m_position() {
  clear_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_position_;
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GodevilStrongStDesc::set_allocated_m_position(::std::string* m_position) {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (m_position) {
    set_has_m_position();
    m_position_ = m_position;
  } else {
    clear_has_m_position();
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// E_GodevilStrong

// optional int32 m_lv = 1;
inline bool E_GodevilStrong::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilStrong::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilStrong::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilStrong::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_GodevilStrong::m_lv() const {
  return m_lv_;
}
inline void E_GodevilStrong::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_exp = 2;
inline bool E_GodevilStrong::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilStrong::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilStrong::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilStrong::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_GodevilStrong::m_exp() const {
  return m_exp_;
}
inline void E_GodevilStrong::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional int32 m_type_num = 3;
inline bool E_GodevilStrong::has_m_type_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilStrong::set_has_m_type_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilStrong::clear_has_m_type_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilStrong::clear_m_type_num() {
  m_type_num_ = 0;
  clear_has_m_type_num();
}
inline ::google::protobuf::int32 E_GodevilStrong::m_type_num() const {
  return m_type_num_;
}
inline void E_GodevilStrong::set_m_type_num(::google::protobuf::int32 value) {
  set_has_m_type_num();
  m_type_num_ = value;
}

// optional int32 m_godevillv = 4;
inline bool E_GodevilStrong::has_m_godevillv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilStrong::set_has_m_godevillv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilStrong::clear_has_m_godevillv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilStrong::clear_m_godevillv() {
  m_godevillv_ = 0;
  clear_has_m_godevillv();
}
inline ::google::protobuf::int32 E_GodevilStrong::m_godevillv() const {
  return m_godevillv_;
}
inline void E_GodevilStrong::set_m_godevillv(::google::protobuf::int32 value) {
  set_has_m_godevillv();
  m_godevillv_ = value;
}

// repeated .proto_ff.E_GodevilStrongStDesc m_st = 5;
inline int E_GodevilStrong::m_st_size() const {
  return m_st_.size();
}
inline void E_GodevilStrong::clear_m_st() {
  m_st_.Clear();
}
inline const ::proto_ff::E_GodevilStrongStDesc& E_GodevilStrong::m_st(int index) const {
  return m_st_.Get(index);
}
inline ::proto_ff::E_GodevilStrongStDesc* E_GodevilStrong::mutable_m_st(int index) {
  return m_st_.Mutable(index);
}
inline ::proto_ff::E_GodevilStrongStDesc* E_GodevilStrong::add_m_st() {
  return m_st_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrongStDesc >&
E_GodevilStrong::m_st() const {
  return m_st_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrongStDesc >*
E_GodevilStrong::mutable_m_st() {
  return &m_st_;
}

// -------------------------------------------------------------------

// Sheet_GodevilStrong

// repeated .proto_ff.E_GodevilStrong E_GodevilStrong_List = 1;
inline int Sheet_GodevilStrong::e_godevilstrong_list_size() const {
  return e_godevilstrong_list_.size();
}
inline void Sheet_GodevilStrong::clear_e_godevilstrong_list() {
  e_godevilstrong_list_.Clear();
}
inline const ::proto_ff::E_GodevilStrong& Sheet_GodevilStrong::e_godevilstrong_list(int index) const {
  return e_godevilstrong_list_.Get(index);
}
inline ::proto_ff::E_GodevilStrong* Sheet_GodevilStrong::mutable_e_godevilstrong_list(int index) {
  return e_godevilstrong_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilStrong* Sheet_GodevilStrong::add_e_godevilstrong_list() {
  return e_godevilstrong_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrong >&
Sheet_GodevilStrong::e_godevilstrong_list() const {
  return e_godevilstrong_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrong >*
Sheet_GodevilStrong::mutable_e_godevilstrong_list() {
  return &e_godevilstrong_list_;
}

// -------------------------------------------------------------------

// E_GodevilStrongexp

// optional int32 m_id = 1;
inline bool E_GodevilStrongexp::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilStrongexp::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilStrongexp::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilStrongexp::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GodevilStrongexp::m_id() const {
  return m_id_;
}
inline void E_GodevilStrongexp::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_GodevilStrongexp::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilStrongexp::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilStrongexp::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilStrongexp::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_GodevilStrongexp::m_type() const {
  return m_type_;
}
inline void E_GodevilStrongexp::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_parama = 3;
inline bool E_GodevilStrongexp::has_m_parama() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilStrongexp::set_has_m_parama() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilStrongexp::clear_has_m_parama() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilStrongexp::clear_m_parama() {
  m_parama_ = 0;
  clear_has_m_parama();
}
inline ::google::protobuf::int32 E_GodevilStrongexp::m_parama() const {
  return m_parama_;
}
inline void E_GodevilStrongexp::set_m_parama(::google::protobuf::int32 value) {
  set_has_m_parama();
  m_parama_ = value;
}

// optional int32 m_strongexp = 4;
inline bool E_GodevilStrongexp::has_m_strongexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilStrongexp::set_has_m_strongexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilStrongexp::clear_has_m_strongexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilStrongexp::clear_m_strongexp() {
  m_strongexp_ = 0;
  clear_has_m_strongexp();
}
inline ::google::protobuf::int32 E_GodevilStrongexp::m_strongexp() const {
  return m_strongexp_;
}
inline void E_GodevilStrongexp::set_m_strongexp(::google::protobuf::int32 value) {
  set_has_m_strongexp();
  m_strongexp_ = value;
}

// -------------------------------------------------------------------

// Sheet_GodevilStrongexp

// repeated .proto_ff.E_GodevilStrongexp E_GodevilStrongexp_List = 1;
inline int Sheet_GodevilStrongexp::e_godevilstrongexp_list_size() const {
  return e_godevilstrongexp_list_.size();
}
inline void Sheet_GodevilStrongexp::clear_e_godevilstrongexp_list() {
  e_godevilstrongexp_list_.Clear();
}
inline const ::proto_ff::E_GodevilStrongexp& Sheet_GodevilStrongexp::e_godevilstrongexp_list(int index) const {
  return e_godevilstrongexp_list_.Get(index);
}
inline ::proto_ff::E_GodevilStrongexp* Sheet_GodevilStrongexp::mutable_e_godevilstrongexp_list(int index) {
  return e_godevilstrongexp_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilStrongexp* Sheet_GodevilStrongexp::add_e_godevilstrongexp_list() {
  return e_godevilstrongexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrongexp >&
Sheet_GodevilStrongexp::e_godevilstrongexp_list() const {
  return e_godevilstrongexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilStrongexp >*
Sheet_GodevilStrongexp::mutable_e_godevilstrongexp_list() {
  return &e_godevilstrongexp_list_;
}

// -------------------------------------------------------------------

// E_GodevilAdvancelvAdDesc

// optional int32 m_godevillv = 1;
inline bool E_GodevilAdvancelvAdDesc::has_m_godevillv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilAdvancelvAdDesc::set_has_m_godevillv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilAdvancelvAdDesc::clear_has_m_godevillv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilAdvancelvAdDesc::clear_m_godevillv() {
  m_godevillv_ = 0;
  clear_has_m_godevillv();
}
inline ::google::protobuf::int32 E_GodevilAdvancelvAdDesc::m_godevillv() const {
  return m_godevillv_;
}
inline void E_GodevilAdvancelvAdDesc::set_m_godevillv(::google::protobuf::int32 value) {
  set_has_m_godevillv();
  m_godevillv_ = value;
}

// optional int32 m_exp = 2;
inline bool E_GodevilAdvancelvAdDesc::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilAdvancelvAdDesc::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilAdvancelvAdDesc::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilAdvancelvAdDesc::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_GodevilAdvancelvAdDesc::m_exp() const {
  return m_exp_;
}
inline void E_GodevilAdvancelvAdDesc::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional string m_position = 3;
inline bool E_GodevilAdvancelvAdDesc::has_m_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilAdvancelvAdDesc::set_has_m_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilAdvancelvAdDesc::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilAdvancelvAdDesc::clear_m_position() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    m_position_->clear();
  }
  clear_has_m_position();
}
inline const ::std::string& E_GodevilAdvancelvAdDesc::m_position() const {
  return *m_position_;
}
inline void E_GodevilAdvancelvAdDesc::set_m_position(const ::std::string& value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_GodevilAdvancelvAdDesc::set_m_position(const char* value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_GodevilAdvancelvAdDesc::set_m_position(const char* value, size_t size) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GodevilAdvancelvAdDesc::mutable_m_position() {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  return m_position_;
}
inline ::std::string* E_GodevilAdvancelvAdDesc::release_m_position() {
  clear_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_position_;
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GodevilAdvancelvAdDesc::set_allocated_m_position(::std::string* m_position) {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (m_position) {
    set_has_m_position();
    m_position_ = m_position;
  } else {
    clear_has_m_position();
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// E_GodevilAdvancelv

// optional int32 m_wearlv = 1;
inline bool E_GodevilAdvancelv::has_m_wearlv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilAdvancelv::set_has_m_wearlv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilAdvancelv::clear_has_m_wearlv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilAdvancelv::clear_m_wearlv() {
  m_wearlv_ = 0;
  clear_has_m_wearlv();
}
inline ::google::protobuf::int32 E_GodevilAdvancelv::m_wearlv() const {
  return m_wearlv_;
}
inline void E_GodevilAdvancelv::set_m_wearlv(::google::protobuf::int32 value) {
  set_has_m_wearlv();
  m_wearlv_ = value;
}

// repeated .proto_ff.E_GodevilAdvancelvAdDesc m_ad = 2;
inline int E_GodevilAdvancelv::m_ad_size() const {
  return m_ad_.size();
}
inline void E_GodevilAdvancelv::clear_m_ad() {
  m_ad_.Clear();
}
inline const ::proto_ff::E_GodevilAdvancelvAdDesc& E_GodevilAdvancelv::m_ad(int index) const {
  return m_ad_.Get(index);
}
inline ::proto_ff::E_GodevilAdvancelvAdDesc* E_GodevilAdvancelv::mutable_m_ad(int index) {
  return m_ad_.Mutable(index);
}
inline ::proto_ff::E_GodevilAdvancelvAdDesc* E_GodevilAdvancelv::add_m_ad() {
  return m_ad_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvancelvAdDesc >&
E_GodevilAdvancelv::m_ad() const {
  return m_ad_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvancelvAdDesc >*
E_GodevilAdvancelv::mutable_m_ad() {
  return &m_ad_;
}

// -------------------------------------------------------------------

// Sheet_GodevilAdvancelv

// repeated .proto_ff.E_GodevilAdvancelv E_GodevilAdvancelv_List = 1;
inline int Sheet_GodevilAdvancelv::e_godeviladvancelv_list_size() const {
  return e_godeviladvancelv_list_.size();
}
inline void Sheet_GodevilAdvancelv::clear_e_godeviladvancelv_list() {
  e_godeviladvancelv_list_.Clear();
}
inline const ::proto_ff::E_GodevilAdvancelv& Sheet_GodevilAdvancelv::e_godeviladvancelv_list(int index) const {
  return e_godeviladvancelv_list_.Get(index);
}
inline ::proto_ff::E_GodevilAdvancelv* Sheet_GodevilAdvancelv::mutable_e_godeviladvancelv_list(int index) {
  return e_godeviladvancelv_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilAdvancelv* Sheet_GodevilAdvancelv::add_e_godeviladvancelv_list() {
  return e_godeviladvancelv_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvancelv >&
Sheet_GodevilAdvancelv::e_godeviladvancelv_list() const {
  return e_godeviladvancelv_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvancelv >*
Sheet_GodevilAdvancelv::mutable_e_godeviladvancelv_list() {
  return &e_godeviladvancelv_list_;
}

// -------------------------------------------------------------------

// E_GodevilAdvanceexp

// optional int32 m_id = 1;
inline bool E_GodevilAdvanceexp::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilAdvanceexp::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilAdvanceexp::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GodevilAdvanceexp::m_id() const {
  return m_id_;
}
inline void E_GodevilAdvanceexp::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_wearlv = 2;
inline bool E_GodevilAdvanceexp::has_m_wearlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_wearlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilAdvanceexp::clear_has_m_wearlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilAdvanceexp::clear_m_wearlv() {
  m_wearlv_ = 0;
  clear_has_m_wearlv();
}
inline ::google::protobuf::int32 E_GodevilAdvanceexp::m_wearlv() const {
  return m_wearlv_;
}
inline void E_GodevilAdvanceexp::set_m_wearlv(::google::protobuf::int32 value) {
  set_has_m_wearlv();
  m_wearlv_ = value;
}

// optional string m_position = 3;
inline bool E_GodevilAdvanceexp::has_m_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilAdvanceexp::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilAdvanceexp::clear_m_position() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    m_position_->clear();
  }
  clear_has_m_position();
}
inline const ::std::string& E_GodevilAdvanceexp::m_position() const {
  return *m_position_;
}
inline void E_GodevilAdvanceexp::set_m_position(const ::std::string& value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_GodevilAdvanceexp::set_m_position(const char* value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_GodevilAdvanceexp::set_m_position(const char* value, size_t size) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GodevilAdvanceexp::mutable_m_position() {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  return m_position_;
}
inline ::std::string* E_GodevilAdvanceexp::release_m_position() {
  clear_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_position_;
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GodevilAdvanceexp::set_allocated_m_position(::std::string* m_position) {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (m_position) {
    set_has_m_position();
    m_position_ = m_position;
  } else {
    clear_has_m_position();
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_lvparama = 4;
inline bool E_GodevilAdvanceexp::has_m_lvparama() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_lvparama() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilAdvanceexp::clear_has_m_lvparama() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilAdvanceexp::clear_m_lvparama() {
  m_lvparama_ = 0;
  clear_has_m_lvparama();
}
inline ::google::protobuf::int32 E_GodevilAdvanceexp::m_lvparama() const {
  return m_lvparama_;
}
inline void E_GodevilAdvanceexp::set_m_lvparama(::google::protobuf::int32 value) {
  set_has_m_lvparama();
  m_lvparama_ = value;
}

// optional int32 m_goldparama = 5;
inline bool E_GodevilAdvanceexp::has_m_goldparama() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_goldparama() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_GodevilAdvanceexp::clear_has_m_goldparama() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_GodevilAdvanceexp::clear_m_goldparama() {
  m_goldparama_ = 0;
  clear_has_m_goldparama();
}
inline ::google::protobuf::int32 E_GodevilAdvanceexp::m_goldparama() const {
  return m_goldparama_;
}
inline void E_GodevilAdvanceexp::set_m_goldparama(::google::protobuf::int32 value) {
  set_has_m_goldparama();
  m_goldparama_ = value;
}

// optional int32 m_silverparama = 6;
inline bool E_GodevilAdvanceexp::has_m_silverparama() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_silverparama() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_GodevilAdvanceexp::clear_has_m_silverparama() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_GodevilAdvanceexp::clear_m_silverparama() {
  m_silverparama_ = 0;
  clear_has_m_silverparama();
}
inline ::google::protobuf::int32 E_GodevilAdvanceexp::m_silverparama() const {
  return m_silverparama_;
}
inline void E_GodevilAdvanceexp::set_m_silverparama(::google::protobuf::int32 value) {
  set_has_m_silverparama();
  m_silverparama_ = value;
}

// optional int32 m_quality6 = 7;
inline bool E_GodevilAdvanceexp::has_m_quality6() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_quality6() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_GodevilAdvanceexp::clear_has_m_quality6() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_GodevilAdvanceexp::clear_m_quality6() {
  m_quality6_ = 0;
  clear_has_m_quality6();
}
inline ::google::protobuf::int32 E_GodevilAdvanceexp::m_quality6() const {
  return m_quality6_;
}
inline void E_GodevilAdvanceexp::set_m_quality6(::google::protobuf::int32 value) {
  set_has_m_quality6();
  m_quality6_ = value;
}

// optional int32 m_quality7 = 8;
inline bool E_GodevilAdvanceexp::has_m_quality7() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_quality7() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_GodevilAdvanceexp::clear_has_m_quality7() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_GodevilAdvanceexp::clear_m_quality7() {
  m_quality7_ = 0;
  clear_has_m_quality7();
}
inline ::google::protobuf::int32 E_GodevilAdvanceexp::m_quality7() const {
  return m_quality7_;
}
inline void E_GodevilAdvanceexp::set_m_quality7(::google::protobuf::int32 value) {
  set_has_m_quality7();
  m_quality7_ = value;
}

// optional int32 m_quality8 = 9;
inline bool E_GodevilAdvanceexp::has_m_quality8() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_quality8() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_GodevilAdvanceexp::clear_has_m_quality8() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_GodevilAdvanceexp::clear_m_quality8() {
  m_quality8_ = 0;
  clear_has_m_quality8();
}
inline ::google::protobuf::int32 E_GodevilAdvanceexp::m_quality8() const {
  return m_quality8_;
}
inline void E_GodevilAdvanceexp::set_m_quality8(::google::protobuf::int32 value) {
  set_has_m_quality8();
  m_quality8_ = value;
}

// optional int32 m_quality9 = 10;
inline bool E_GodevilAdvanceexp::has_m_quality9() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_quality9() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_GodevilAdvanceexp::clear_has_m_quality9() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_GodevilAdvanceexp::clear_m_quality9() {
  m_quality9_ = 0;
  clear_has_m_quality9();
}
inline ::google::protobuf::int32 E_GodevilAdvanceexp::m_quality9() const {
  return m_quality9_;
}
inline void E_GodevilAdvanceexp::set_m_quality9(::google::protobuf::int32 value) {
  set_has_m_quality9();
  m_quality9_ = value;
}

// optional int32 m_quality10 = 11;
inline bool E_GodevilAdvanceexp::has_m_quality10() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_GodevilAdvanceexp::set_has_m_quality10() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_GodevilAdvanceexp::clear_has_m_quality10() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_GodevilAdvanceexp::clear_m_quality10() {
  m_quality10_ = 0;
  clear_has_m_quality10();
}
inline ::google::protobuf::int32 E_GodevilAdvanceexp::m_quality10() const {
  return m_quality10_;
}
inline void E_GodevilAdvanceexp::set_m_quality10(::google::protobuf::int32 value) {
  set_has_m_quality10();
  m_quality10_ = value;
}

// -------------------------------------------------------------------

// Sheet_GodevilAdvanceexp

// repeated .proto_ff.E_GodevilAdvanceexp E_GodevilAdvanceexp_List = 1;
inline int Sheet_GodevilAdvanceexp::e_godeviladvanceexp_list_size() const {
  return e_godeviladvanceexp_list_.size();
}
inline void Sheet_GodevilAdvanceexp::clear_e_godeviladvanceexp_list() {
  e_godeviladvanceexp_list_.Clear();
}
inline const ::proto_ff::E_GodevilAdvanceexp& Sheet_GodevilAdvanceexp::e_godeviladvanceexp_list(int index) const {
  return e_godeviladvanceexp_list_.Get(index);
}
inline ::proto_ff::E_GodevilAdvanceexp* Sheet_GodevilAdvanceexp::mutable_e_godeviladvanceexp_list(int index) {
  return e_godeviladvanceexp_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilAdvanceexp* Sheet_GodevilAdvanceexp::add_e_godeviladvanceexp_list() {
  return e_godeviladvanceexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvanceexp >&
Sheet_GodevilAdvanceexp::e_godeviladvanceexp_list() const {
  return e_godeviladvanceexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilAdvanceexp >*
Sheet_GodevilAdvanceexp::mutable_e_godeviladvanceexp_list() {
  return &e_godeviladvanceexp_list_;
}

// -------------------------------------------------------------------

// E_GodevilQualitylvItemDesc

// optional int32 m_num = 1;
inline bool E_GodevilQualitylvItemDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilQualitylvItemDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilQualitylvItemDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilQualitylvItemDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_GodevilQualitylvItemDesc::m_num() const {
  return m_num_;
}
inline void E_GodevilQualitylvItemDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 2;
inline bool E_GodevilQualitylvItemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilQualitylvItemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilQualitylvItemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilQualitylvItemDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GodevilQualitylvItemDesc::m_id() const {
  return m_id_;
}
inline void E_GodevilQualitylvItemDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_GodevilQualitylv

// optional int32 m_id = 1;
inline bool E_GodevilQualitylv::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilQualitylv::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilQualitylv::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilQualitylv::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GodevilQualitylv::m_id() const {
  return m_id_;
}
inline void E_GodevilQualitylv::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_quality = 2;
inline bool E_GodevilQualitylv::has_m_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilQualitylv::set_has_m_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilQualitylv::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilQualitylv::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_GodevilQualitylv::m_quality() const {
  return m_quality_;
}
inline void E_GodevilQualitylv::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_wearlv = 3;
inline bool E_GodevilQualitylv::has_m_wearlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilQualitylv::set_has_m_wearlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilQualitylv::clear_has_m_wearlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilQualitylv::clear_m_wearlv() {
  m_wearlv_ = 0;
  clear_has_m_wearlv();
}
inline ::google::protobuf::int32 E_GodevilQualitylv::m_wearlv() const {
  return m_wearlv_;
}
inline void E_GodevilQualitylv::set_m_wearlv(::google::protobuf::int32 value) {
  set_has_m_wearlv();
  m_wearlv_ = value;
}

// optional int32 m_percent = 4;
inline bool E_GodevilQualitylv::has_m_percent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilQualitylv::set_has_m_percent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilQualitylv::clear_has_m_percent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilQualitylv::clear_m_percent() {
  m_percent_ = 0;
  clear_has_m_percent();
}
inline ::google::protobuf::int32 E_GodevilQualitylv::m_percent() const {
  return m_percent_;
}
inline void E_GodevilQualitylv::set_m_percent(::google::protobuf::int32 value) {
  set_has_m_percent();
  m_percent_ = value;
}

// optional string m_position = 5;
inline bool E_GodevilQualitylv::has_m_position() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_GodevilQualitylv::set_has_m_position() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_GodevilQualitylv::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_GodevilQualitylv::clear_m_position() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    m_position_->clear();
  }
  clear_has_m_position();
}
inline const ::std::string& E_GodevilQualitylv::m_position() const {
  return *m_position_;
}
inline void E_GodevilQualitylv::set_m_position(const ::std::string& value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_GodevilQualitylv::set_m_position(const char* value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_GodevilQualitylv::set_m_position(const char* value, size_t size) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GodevilQualitylv::mutable_m_position() {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  return m_position_;
}
inline ::std::string* E_GodevilQualitylv::release_m_position() {
  clear_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_position_;
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GodevilQualitylv::set_allocated_m_position(::std::string* m_position) {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (m_position) {
    set_has_m_position();
    m_position_ = m_position;
  } else {
    clear_has_m_position();
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_costwuxiongitem = 6;
inline bool E_GodevilQualitylv::has_m_costwuxiongitem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_GodevilQualitylv::set_has_m_costwuxiongitem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_GodevilQualitylv::clear_has_m_costwuxiongitem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_GodevilQualitylv::clear_m_costwuxiongitem() {
  m_costwuxiongitem_ = 0;
  clear_has_m_costwuxiongitem();
}
inline ::google::protobuf::int32 E_GodevilQualitylv::m_costwuxiongitem() const {
  return m_costwuxiongitem_;
}
inline void E_GodevilQualitylv::set_m_costwuxiongitem(::google::protobuf::int32 value) {
  set_has_m_costwuxiongitem();
  m_costwuxiongitem_ = value;
}

// optional int32 m_costnumber = 7;
inline bool E_GodevilQualitylv::has_m_costnumber() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_GodevilQualitylv::set_has_m_costnumber() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_GodevilQualitylv::clear_has_m_costnumber() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_GodevilQualitylv::clear_m_costnumber() {
  m_costnumber_ = 0;
  clear_has_m_costnumber();
}
inline ::google::protobuf::int32 E_GodevilQualitylv::m_costnumber() const {
  return m_costnumber_;
}
inline void E_GodevilQualitylv::set_m_costnumber(::google::protobuf::int32 value) {
  set_has_m_costnumber();
  m_costnumber_ = value;
}

// repeated .proto_ff.E_GodevilQualitylvItemDesc m_item = 8;
inline int E_GodevilQualitylv::m_item_size() const {
  return m_item_.size();
}
inline void E_GodevilQualitylv::clear_m_item() {
  m_item_.Clear();
}
inline const ::proto_ff::E_GodevilQualitylvItemDesc& E_GodevilQualitylv::m_item(int index) const {
  return m_item_.Get(index);
}
inline ::proto_ff::E_GodevilQualitylvItemDesc* E_GodevilQualitylv::mutable_m_item(int index) {
  return m_item_.Mutable(index);
}
inline ::proto_ff::E_GodevilQualitylvItemDesc* E_GodevilQualitylv::add_m_item() {
  return m_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilQualitylvItemDesc >&
E_GodevilQualitylv::m_item() const {
  return m_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilQualitylvItemDesc >*
E_GodevilQualitylv::mutable_m_item() {
  return &m_item_;
}

// -------------------------------------------------------------------

// Sheet_GodevilQualitylv

// repeated .proto_ff.E_GodevilQualitylv E_GodevilQualitylv_List = 1;
inline int Sheet_GodevilQualitylv::e_godevilqualitylv_list_size() const {
  return e_godevilqualitylv_list_.size();
}
inline void Sheet_GodevilQualitylv::clear_e_godevilqualitylv_list() {
  e_godevilqualitylv_list_.Clear();
}
inline const ::proto_ff::E_GodevilQualitylv& Sheet_GodevilQualitylv::e_godevilqualitylv_list(int index) const {
  return e_godevilqualitylv_list_.Get(index);
}
inline ::proto_ff::E_GodevilQualitylv* Sheet_GodevilQualitylv::mutable_e_godevilqualitylv_list(int index) {
  return e_godevilqualitylv_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilQualitylv* Sheet_GodevilQualitylv::add_e_godevilqualitylv_list() {
  return e_godevilqualitylv_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilQualitylv >&
Sheet_GodevilQualitylv::e_godevilqualitylv_list() const {
  return e_godevilqualitylv_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilQualitylv >*
Sheet_GodevilQualitylv::mutable_e_godevilqualitylv_list() {
  return &e_godevilqualitylv_list_;
}

// -------------------------------------------------------------------

// E_GodevilPositionunlock

// optional int32 m_position = 1;
inline bool E_GodevilPositionunlock::has_m_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilPositionunlock::set_has_m_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilPositionunlock::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilPositionunlock::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_GodevilPositionunlock::m_position() const {
  return m_position_;
}
inline void E_GodevilPositionunlock::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional int32 m_day = 2;
inline bool E_GodevilPositionunlock::has_m_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilPositionunlock::set_has_m_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilPositionunlock::clear_has_m_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilPositionunlock::clear_m_day() {
  m_day_ = 0;
  clear_has_m_day();
}
inline ::google::protobuf::int32 E_GodevilPositionunlock::m_day() const {
  return m_day_;
}
inline void E_GodevilPositionunlock::set_m_day(::google::protobuf::int32 value) {
  set_has_m_day();
  m_day_ = value;
}

// optional int32 m_godevillv = 3;
inline bool E_GodevilPositionunlock::has_m_godevillv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilPositionunlock::set_has_m_godevillv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilPositionunlock::clear_has_m_godevillv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilPositionunlock::clear_m_godevillv() {
  m_godevillv_ = 0;
  clear_has_m_godevillv();
}
inline ::google::protobuf::int32 E_GodevilPositionunlock::m_godevillv() const {
  return m_godevillv_;
}
inline void E_GodevilPositionunlock::set_m_godevillv(::google::protobuf::int32 value) {
  set_has_m_godevillv();
  m_godevillv_ = value;
}

// -------------------------------------------------------------------

// Sheet_GodevilPositionunlock

// repeated .proto_ff.E_GodevilPositionunlock E_GodevilPositionunlock_List = 1;
inline int Sheet_GodevilPositionunlock::e_godevilpositionunlock_list_size() const {
  return e_godevilpositionunlock_list_.size();
}
inline void Sheet_GodevilPositionunlock::clear_e_godevilpositionunlock_list() {
  e_godevilpositionunlock_list_.Clear();
}
inline const ::proto_ff::E_GodevilPositionunlock& Sheet_GodevilPositionunlock::e_godevilpositionunlock_list(int index) const {
  return e_godevilpositionunlock_list_.Get(index);
}
inline ::proto_ff::E_GodevilPositionunlock* Sheet_GodevilPositionunlock::mutable_e_godevilpositionunlock_list(int index) {
  return e_godevilpositionunlock_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilPositionunlock* Sheet_GodevilPositionunlock::add_e_godevilpositionunlock_list() {
  return e_godevilpositionunlock_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPositionunlock >&
Sheet_GodevilPositionunlock::e_godevilpositionunlock_list() const {
  return e_godevilpositionunlock_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPositionunlock >*
Sheet_GodevilPositionunlock::mutable_e_godevilpositionunlock_list() {
  return &e_godevilpositionunlock_list_;
}

// -------------------------------------------------------------------

// E_GodevilBlacksmithItemDesc

// optional int32 m_num = 1;
inline bool E_GodevilBlacksmithItemDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilBlacksmithItemDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilBlacksmithItemDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilBlacksmithItemDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_GodevilBlacksmithItemDesc::m_num() const {
  return m_num_;
}
inline void E_GodevilBlacksmithItemDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 2;
inline bool E_GodevilBlacksmithItemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilBlacksmithItemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilBlacksmithItemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilBlacksmithItemDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GodevilBlacksmithItemDesc::m_id() const {
  return m_id_;
}
inline void E_GodevilBlacksmithItemDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_GodevilBlacksmithSkillDesc

// optional int32 m_probability = 1;
inline bool E_GodevilBlacksmithSkillDesc::has_m_probability() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilBlacksmithSkillDesc::set_has_m_probability() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilBlacksmithSkillDesc::clear_has_m_probability() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilBlacksmithSkillDesc::clear_m_probability() {
  m_probability_ = 0;
  clear_has_m_probability();
}
inline ::google::protobuf::int32 E_GodevilBlacksmithSkillDesc::m_probability() const {
  return m_probability_;
}
inline void E_GodevilBlacksmithSkillDesc::set_m_probability(::google::protobuf::int32 value) {
  set_has_m_probability();
  m_probability_ = value;
}

// optional int32 m_id = 2;
inline bool E_GodevilBlacksmithSkillDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilBlacksmithSkillDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilBlacksmithSkillDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilBlacksmithSkillDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GodevilBlacksmithSkillDesc::m_id() const {
  return m_id_;
}
inline void E_GodevilBlacksmithSkillDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_GodevilBlacksmith

// optional int32 m_id = 1;
inline bool E_GodevilBlacksmith::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilBlacksmith::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilBlacksmith::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_id() const {
  return m_id_;
}
inline void E_GodevilBlacksmith::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_GodevilBlacksmith::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilBlacksmith::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilBlacksmith::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_type() const {
  return m_type_;
}
inline void E_GodevilBlacksmith::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_position = 3;
inline bool E_GodevilBlacksmith::has_m_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilBlacksmith::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilBlacksmith::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_position() const {
  return m_position_;
}
inline void E_GodevilBlacksmith::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional int32 m_quality = 4;
inline bool E_GodevilBlacksmith::has_m_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilBlacksmith::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilBlacksmith::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_quality() const {
  return m_quality_;
}
inline void E_GodevilBlacksmith::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_probability = 5;
inline bool E_GodevilBlacksmith::has_m_probability() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_probability() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_GodevilBlacksmith::clear_has_m_probability() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_GodevilBlacksmith::clear_m_probability() {
  m_probability_ = 0;
  clear_has_m_probability();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_probability() const {
  return m_probability_;
}
inline void E_GodevilBlacksmith::set_m_probability(::google::protobuf::int32 value) {
  set_has_m_probability();
  m_probability_ = value;
}

// optional string m_godpoint = 6;
inline bool E_GodevilBlacksmith::has_m_godpoint() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_godpoint() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_GodevilBlacksmith::clear_has_m_godpoint() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_GodevilBlacksmith::clear_m_godpoint() {
  if (m_godpoint_ != &::google::protobuf::internal::kEmptyString) {
    m_godpoint_->clear();
  }
  clear_has_m_godpoint();
}
inline const ::std::string& E_GodevilBlacksmith::m_godpoint() const {
  return *m_godpoint_;
}
inline void E_GodevilBlacksmith::set_m_godpoint(const ::std::string& value) {
  set_has_m_godpoint();
  if (m_godpoint_ == &::google::protobuf::internal::kEmptyString) {
    m_godpoint_ = new ::std::string;
  }
  m_godpoint_->assign(value);
}
inline void E_GodevilBlacksmith::set_m_godpoint(const char* value) {
  set_has_m_godpoint();
  if (m_godpoint_ == &::google::protobuf::internal::kEmptyString) {
    m_godpoint_ = new ::std::string;
  }
  m_godpoint_->assign(value);
}
inline void E_GodevilBlacksmith::set_m_godpoint(const char* value, size_t size) {
  set_has_m_godpoint();
  if (m_godpoint_ == &::google::protobuf::internal::kEmptyString) {
    m_godpoint_ = new ::std::string;
  }
  m_godpoint_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GodevilBlacksmith::mutable_m_godpoint() {
  set_has_m_godpoint();
  if (m_godpoint_ == &::google::protobuf::internal::kEmptyString) {
    m_godpoint_ = new ::std::string;
  }
  return m_godpoint_;
}
inline ::std::string* E_GodevilBlacksmith::release_m_godpoint() {
  clear_has_m_godpoint();
  if (m_godpoint_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_godpoint_;
    m_godpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GodevilBlacksmith::set_allocated_m_godpoint(::std::string* m_godpoint) {
  if (m_godpoint_ != &::google::protobuf::internal::kEmptyString) {
    delete m_godpoint_;
  }
  if (m_godpoint) {
    set_has_m_godpoint();
    m_godpoint_ = m_godpoint;
  } else {
    clear_has_m_godpoint();
    m_godpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_starsprobability = 7;
inline bool E_GodevilBlacksmith::has_m_starsprobability() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_starsprobability() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_GodevilBlacksmith::clear_has_m_starsprobability() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_GodevilBlacksmith::clear_m_starsprobability() {
  if (m_starsprobability_ != &::google::protobuf::internal::kEmptyString) {
    m_starsprobability_->clear();
  }
  clear_has_m_starsprobability();
}
inline const ::std::string& E_GodevilBlacksmith::m_starsprobability() const {
  return *m_starsprobability_;
}
inline void E_GodevilBlacksmith::set_m_starsprobability(const ::std::string& value) {
  set_has_m_starsprobability();
  if (m_starsprobability_ == &::google::protobuf::internal::kEmptyString) {
    m_starsprobability_ = new ::std::string;
  }
  m_starsprobability_->assign(value);
}
inline void E_GodevilBlacksmith::set_m_starsprobability(const char* value) {
  set_has_m_starsprobability();
  if (m_starsprobability_ == &::google::protobuf::internal::kEmptyString) {
    m_starsprobability_ = new ::std::string;
  }
  m_starsprobability_->assign(value);
}
inline void E_GodevilBlacksmith::set_m_starsprobability(const char* value, size_t size) {
  set_has_m_starsprobability();
  if (m_starsprobability_ == &::google::protobuf::internal::kEmptyString) {
    m_starsprobability_ = new ::std::string;
  }
  m_starsprobability_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GodevilBlacksmith::mutable_m_starsprobability() {
  set_has_m_starsprobability();
  if (m_starsprobability_ == &::google::protobuf::internal::kEmptyString) {
    m_starsprobability_ = new ::std::string;
  }
  return m_starsprobability_;
}
inline ::std::string* E_GodevilBlacksmith::release_m_starsprobability() {
  clear_has_m_starsprobability();
  if (m_starsprobability_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_starsprobability_;
    m_starsprobability_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GodevilBlacksmith::set_allocated_m_starsprobability(::std::string* m_starsprobability) {
  if (m_starsprobability_ != &::google::protobuf::internal::kEmptyString) {
    delete m_starsprobability_;
  }
  if (m_starsprobability) {
    set_has_m_starsprobability();
    m_starsprobability_ = m_starsprobability;
  } else {
    clear_has_m_starsprobability();
    m_starsprobability_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_gold = 8;
inline bool E_GodevilBlacksmith::has_m_gold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_gold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_GodevilBlacksmith::clear_has_m_gold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_GodevilBlacksmith::clear_m_gold() {
  m_gold_ = 0;
  clear_has_m_gold();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_gold() const {
  return m_gold_;
}
inline void E_GodevilBlacksmith::set_m_gold(::google::protobuf::int32 value) {
  set_has_m_gold();
  m_gold_ = value;
}

// optional int32 m_silver = 9;
inline bool E_GodevilBlacksmith::has_m_silver() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_silver() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_GodevilBlacksmith::clear_has_m_silver() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_GodevilBlacksmith::clear_m_silver() {
  m_silver_ = 0;
  clear_has_m_silver();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_silver() const {
  return m_silver_;
}
inline void E_GodevilBlacksmith::set_m_silver(::google::protobuf::int32 value) {
  set_has_m_silver();
  m_silver_ = value;
}

// optional int32 m_paperid = 10;
inline bool E_GodevilBlacksmith::has_m_paperid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_paperid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_GodevilBlacksmith::clear_has_m_paperid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_GodevilBlacksmith::clear_m_paperid() {
  m_paperid_ = 0;
  clear_has_m_paperid();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_paperid() const {
  return m_paperid_;
}
inline void E_GodevilBlacksmith::set_m_paperid(::google::protobuf::int32 value) {
  set_has_m_paperid();
  m_paperid_ = value;
}

// optional int32 m_papernum = 11;
inline bool E_GodevilBlacksmith::has_m_papernum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_papernum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_GodevilBlacksmith::clear_has_m_papernum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_GodevilBlacksmith::clear_m_papernum() {
  m_papernum_ = 0;
  clear_has_m_papernum();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_papernum() const {
  return m_papernum_;
}
inline void E_GodevilBlacksmith::set_m_papernum(::google::protobuf::int32 value) {
  set_has_m_papernum();
  m_papernum_ = value;
}

// optional int32 m_substituteitem = 12;
inline bool E_GodevilBlacksmith::has_m_substituteitem() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_substituteitem() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_GodevilBlacksmith::clear_has_m_substituteitem() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_GodevilBlacksmith::clear_m_substituteitem() {
  m_substituteitem_ = 0;
  clear_has_m_substituteitem();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_substituteitem() const {
  return m_substituteitem_;
}
inline void E_GodevilBlacksmith::set_m_substituteitem(::google::protobuf::int32 value) {
  set_has_m_substituteitem();
  m_substituteitem_ = value;
}

// optional int32 m_number = 13;
inline bool E_GodevilBlacksmith::has_m_number() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_number() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_GodevilBlacksmith::clear_has_m_number() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_GodevilBlacksmith::clear_m_number() {
  m_number_ = 0;
  clear_has_m_number();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_number() const {
  return m_number_;
}
inline void E_GodevilBlacksmith::set_m_number(::google::protobuf::int32 value) {
  set_has_m_number();
  m_number_ = value;
}

// optional int32 m_godevilskill = 14;
inline bool E_GodevilBlacksmith::has_m_godevilskill() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_godevilskill() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_GodevilBlacksmith::clear_has_m_godevilskill() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_GodevilBlacksmith::clear_m_godevilskill() {
  m_godevilskill_ = 0;
  clear_has_m_godevilskill();
}
inline ::google::protobuf::int32 E_GodevilBlacksmith::m_godevilskill() const {
  return m_godevilskill_;
}
inline void E_GodevilBlacksmith::set_m_godevilskill(::google::protobuf::int32 value) {
  set_has_m_godevilskill();
  m_godevilskill_ = value;
}

// optional string m_skillset = 15;
inline bool E_GodevilBlacksmith::has_m_skillset() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_GodevilBlacksmith::set_has_m_skillset() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_GodevilBlacksmith::clear_has_m_skillset() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_GodevilBlacksmith::clear_m_skillset() {
  if (m_skillset_ != &::google::protobuf::internal::kEmptyString) {
    m_skillset_->clear();
  }
  clear_has_m_skillset();
}
inline const ::std::string& E_GodevilBlacksmith::m_skillset() const {
  return *m_skillset_;
}
inline void E_GodevilBlacksmith::set_m_skillset(const ::std::string& value) {
  set_has_m_skillset();
  if (m_skillset_ == &::google::protobuf::internal::kEmptyString) {
    m_skillset_ = new ::std::string;
  }
  m_skillset_->assign(value);
}
inline void E_GodevilBlacksmith::set_m_skillset(const char* value) {
  set_has_m_skillset();
  if (m_skillset_ == &::google::protobuf::internal::kEmptyString) {
    m_skillset_ = new ::std::string;
  }
  m_skillset_->assign(value);
}
inline void E_GodevilBlacksmith::set_m_skillset(const char* value, size_t size) {
  set_has_m_skillset();
  if (m_skillset_ == &::google::protobuf::internal::kEmptyString) {
    m_skillset_ = new ::std::string;
  }
  m_skillset_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GodevilBlacksmith::mutable_m_skillset() {
  set_has_m_skillset();
  if (m_skillset_ == &::google::protobuf::internal::kEmptyString) {
    m_skillset_ = new ::std::string;
  }
  return m_skillset_;
}
inline ::std::string* E_GodevilBlacksmith::release_m_skillset() {
  clear_has_m_skillset();
  if (m_skillset_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_skillset_;
    m_skillset_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GodevilBlacksmith::set_allocated_m_skillset(::std::string* m_skillset) {
  if (m_skillset_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillset_;
  }
  if (m_skillset) {
    set_has_m_skillset();
    m_skillset_ = m_skillset;
  } else {
    clear_has_m_skillset();
    m_skillset_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_GodevilBlacksmithItemDesc m_item = 16;
inline int E_GodevilBlacksmith::m_item_size() const {
  return m_item_.size();
}
inline void E_GodevilBlacksmith::clear_m_item() {
  m_item_.Clear();
}
inline const ::proto_ff::E_GodevilBlacksmithItemDesc& E_GodevilBlacksmith::m_item(int index) const {
  return m_item_.Get(index);
}
inline ::proto_ff::E_GodevilBlacksmithItemDesc* E_GodevilBlacksmith::mutable_m_item(int index) {
  return m_item_.Mutable(index);
}
inline ::proto_ff::E_GodevilBlacksmithItemDesc* E_GodevilBlacksmith::add_m_item() {
  return m_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmithItemDesc >&
E_GodevilBlacksmith::m_item() const {
  return m_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmithItemDesc >*
E_GodevilBlacksmith::mutable_m_item() {
  return &m_item_;
}

// repeated .proto_ff.E_GodevilBlacksmithSkillDesc m_skill = 17;
inline int E_GodevilBlacksmith::m_skill_size() const {
  return m_skill_.size();
}
inline void E_GodevilBlacksmith::clear_m_skill() {
  m_skill_.Clear();
}
inline const ::proto_ff::E_GodevilBlacksmithSkillDesc& E_GodevilBlacksmith::m_skill(int index) const {
  return m_skill_.Get(index);
}
inline ::proto_ff::E_GodevilBlacksmithSkillDesc* E_GodevilBlacksmith::mutable_m_skill(int index) {
  return m_skill_.Mutable(index);
}
inline ::proto_ff::E_GodevilBlacksmithSkillDesc* E_GodevilBlacksmith::add_m_skill() {
  return m_skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmithSkillDesc >&
E_GodevilBlacksmith::m_skill() const {
  return m_skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmithSkillDesc >*
E_GodevilBlacksmith::mutable_m_skill() {
  return &m_skill_;
}

// -------------------------------------------------------------------

// Sheet_GodevilBlacksmith

// repeated .proto_ff.E_GodevilBlacksmith E_GodevilBlacksmith_List = 1;
inline int Sheet_GodevilBlacksmith::e_godevilblacksmith_list_size() const {
  return e_godevilblacksmith_list_.size();
}
inline void Sheet_GodevilBlacksmith::clear_e_godevilblacksmith_list() {
  e_godevilblacksmith_list_.Clear();
}
inline const ::proto_ff::E_GodevilBlacksmith& Sheet_GodevilBlacksmith::e_godevilblacksmith_list(int index) const {
  return e_godevilblacksmith_list_.Get(index);
}
inline ::proto_ff::E_GodevilBlacksmith* Sheet_GodevilBlacksmith::mutable_e_godevilblacksmith_list(int index) {
  return e_godevilblacksmith_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilBlacksmith* Sheet_GodevilBlacksmith::add_e_godevilblacksmith_list() {
  return e_godevilblacksmith_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmith >&
Sheet_GodevilBlacksmith::e_godevilblacksmith_list() const {
  return e_godevilblacksmith_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilBlacksmith >*
Sheet_GodevilBlacksmith::mutable_e_godevilblacksmith_list() {
  return &e_godevilblacksmith_list_;
}

// -------------------------------------------------------------------

// E_GodevilGodevilskill

// optional int32 m_godevilskill = 1;
inline bool E_GodevilGodevilskill::has_m_godevilskill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilGodevilskill::set_has_m_godevilskill() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilGodevilskill::clear_has_m_godevilskill() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilGodevilskill::clear_m_godevilskill() {
  m_godevilskill_ = 0;
  clear_has_m_godevilskill();
}
inline ::google::protobuf::int32 E_GodevilGodevilskill::m_godevilskill() const {
  return m_godevilskill_;
}
inline void E_GodevilGodevilskill::set_m_godevilskill(::google::protobuf::int32 value) {
  set_has_m_godevilskill();
  m_godevilskill_ = value;
}

// optional int32 m_goldstars = 2;
inline bool E_GodevilGodevilskill::has_m_goldstars() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilGodevilskill::set_has_m_goldstars() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilGodevilskill::clear_has_m_goldstars() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilGodevilskill::clear_m_goldstars() {
  m_goldstars_ = 0;
  clear_has_m_goldstars();
}
inline ::google::protobuf::int32 E_GodevilGodevilskill::m_goldstars() const {
  return m_goldstars_;
}
inline void E_GodevilGodevilskill::set_m_goldstars(::google::protobuf::int32 value) {
  set_has_m_goldstars();
  m_goldstars_ = value;
}

// -------------------------------------------------------------------

// Sheet_GodevilGodevilskill

// repeated .proto_ff.E_GodevilGodevilskill E_GodevilGodevilskill_List = 1;
inline int Sheet_GodevilGodevilskill::e_godevilgodevilskill_list_size() const {
  return e_godevilgodevilskill_list_.size();
}
inline void Sheet_GodevilGodevilskill::clear_e_godevilgodevilskill_list() {
  e_godevilgodevilskill_list_.Clear();
}
inline const ::proto_ff::E_GodevilGodevilskill& Sheet_GodevilGodevilskill::e_godevilgodevilskill_list(int index) const {
  return e_godevilgodevilskill_list_.Get(index);
}
inline ::proto_ff::E_GodevilGodevilskill* Sheet_GodevilGodevilskill::mutable_e_godevilgodevilskill_list(int index) {
  return e_godevilgodevilskill_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilGodevilskill* Sheet_GodevilGodevilskill::add_e_godevilgodevilskill_list() {
  return e_godevilgodevilskill_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilskill >&
Sheet_GodevilGodevilskill::e_godevilgodevilskill_list() const {
  return e_godevilgodevilskill_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilskill >*
Sheet_GodevilGodevilskill::mutable_e_godevilgodevilskill_list() {
  return &e_godevilgodevilskill_list_;
}

// -------------------------------------------------------------------

// E_GodevilPrefixname

// optional int32 m_id = 1;
inline bool E_GodevilPrefixname::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilPrefixname::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilPrefixname::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilPrefixname::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GodevilPrefixname::m_id() const {
  return m_id_;
}
inline void E_GodevilPrefixname::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_GodevilPrefixname::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilPrefixname::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilPrefixname::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilPrefixname::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_GodevilPrefixname::m_type() const {
  return m_type_;
}
inline void E_GodevilPrefixname::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_number = 3;
inline bool E_GodevilPrefixname::has_m_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilPrefixname::set_has_m_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilPrefixname::clear_has_m_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilPrefixname::clear_m_number() {
  m_number_ = 0;
  clear_has_m_number();
}
inline ::google::protobuf::int32 E_GodevilPrefixname::m_number() const {
  return m_number_;
}
inline void E_GodevilPrefixname::set_m_number(::google::protobuf::int32 value) {
  set_has_m_number();
  m_number_ = value;
}

// -------------------------------------------------------------------

// Sheet_GodevilPrefixname

// repeated .proto_ff.E_GodevilPrefixname E_GodevilPrefixname_List = 1;
inline int Sheet_GodevilPrefixname::e_godevilprefixname_list_size() const {
  return e_godevilprefixname_list_.size();
}
inline void Sheet_GodevilPrefixname::clear_e_godevilprefixname_list() {
  e_godevilprefixname_list_.Clear();
}
inline const ::proto_ff::E_GodevilPrefixname& Sheet_GodevilPrefixname::e_godevilprefixname_list(int index) const {
  return e_godevilprefixname_list_.Get(index);
}
inline ::proto_ff::E_GodevilPrefixname* Sheet_GodevilPrefixname::mutable_e_godevilprefixname_list(int index) {
  return e_godevilprefixname_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilPrefixname* Sheet_GodevilPrefixname::add_e_godevilprefixname_list() {
  return e_godevilprefixname_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPrefixname >&
Sheet_GodevilPrefixname::e_godevilprefixname_list() const {
  return e_godevilprefixname_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPrefixname >*
Sheet_GodevilPrefixname::mutable_e_godevilprefixname_list() {
  return &e_godevilprefixname_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fGodevil_2eproto__INCLUDED
