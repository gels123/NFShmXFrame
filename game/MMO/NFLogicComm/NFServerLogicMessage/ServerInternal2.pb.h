// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerInternal2.proto

#ifndef PROTOBUF_ServerInternal2_2eproto__INCLUDED
#define PROTOBUF_ServerInternal2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "DBProto.pb.h"
#include "DBProto2.pb.h"
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ServerInternal2_2eproto();
void protobuf_AssignDesc_ServerInternal2_2eproto();
void protobuf_ShutdownFile_ServerInternal2_2eproto();

class WorldToLogicGetRoleList;
class LogicToWorldGetRoleListRsp;
class NotifyGateLeaveGame2;
class WorldToLogicCreateRoleReq;
class LogicToWorldCreateRoleRsp;
class NotifyCenterDisConnect2;
class ProxyServerBusInfo;
class WroldToProxyChangeServerBusId;
class WorldToOtherServerDisconnectNotify;
class WorldToLogicLoginReq;
class LogicToWorldLoginRsp;
class WorldToSnsLoginReq;
class SnsToWorldLoginRsp;
class GameToWorldRegisterMapReq;
class WorldToGameRegisterMapRsp;
class WorldToLogicLoginFinishNotify;
class LogicToWorldEnterSceneReq;
class WorldToGameEnterSceneReq;

// ===================================================================

class WorldToLogicGetRoleList : public ::google::protobuf::Message {
 public:
  WorldToLogicGetRoleList();
  virtual ~WorldToLogicGetRoleList();

  WorldToLogicGetRoleList(const WorldToLogicGetRoleList& from);

  inline WorldToLogicGetRoleList& operator=(const WorldToLogicGetRoleList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldToLogicGetRoleList& default_instance();

  void Swap(WorldToLogicGetRoleList* other);

  // implements Message ----------------------------------------------

  WorldToLogicGetRoleList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldToLogicGetRoleList& from);
  void MergeFrom(const WorldToLogicGetRoleList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 born_zone_id = 2;
  inline bool has_born_zone_id() const;
  inline void clear_born_zone_id();
  static const int kBornZoneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 born_zone_id() const;
  inline void set_born_zone_id(::google::protobuf::uint32 value);

  // optional uint64 proxy_id = 3;
  inline bool has_proxy_id() const;
  inline void clear_proxy_id();
  static const int kProxyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 proxy_id() const;
  inline void set_proxy_id(::google::protobuf::uint64 value);

  // optional uint64 client_id = 4;
  inline bool has_client_id() const;
  inline void clear_client_id();
  static const int kClientIdFieldNumber = 4;
  inline ::google::protobuf::uint64 client_id() const;
  inline void set_client_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WorldToLogicGetRoleList)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_born_zone_id();
  inline void clear_has_born_zone_id();
  inline void set_has_proxy_id();
  inline void clear_has_proxy_id();
  inline void set_has_client_id();
  inline void clear_has_client_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 proxy_id_;
  ::google::protobuf::uint64 client_id_;
  ::google::protobuf::uint32 born_zone_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static WorldToLogicGetRoleList* default_instance_;
};
// -------------------------------------------------------------------

class LogicToWorldGetRoleListRsp : public ::google::protobuf::Message {
 public:
  LogicToWorldGetRoleListRsp();
  virtual ~LogicToWorldGetRoleListRsp();

  LogicToWorldGetRoleListRsp(const LogicToWorldGetRoleListRsp& from);

  inline LogicToWorldGetRoleListRsp& operator=(const LogicToWorldGetRoleListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToWorldGetRoleListRsp& default_instance();

  void Swap(LogicToWorldGetRoleListRsp* other);

  // implements Message ----------------------------------------------

  LogicToWorldGetRoleListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToWorldGetRoleListRsp& from);
  void MergeFrom(const LogicToWorldGetRoleListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // optional uint64 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 born_zone_id = 3;
  inline bool has_born_zone_id() const;
  inline void clear_born_zone_id();
  static const int kBornZoneIdFieldNumber = 3;
  inline ::google::protobuf::uint32 born_zone_id() const;
  inline void set_born_zone_id(::google::protobuf::uint32 value);

  // optional uint64 proxy_id = 4;
  inline bool has_proxy_id() const;
  inline void clear_proxy_id();
  static const int kProxyIdFieldNumber = 4;
  inline ::google::protobuf::uint64 proxy_id() const;
  inline void set_proxy_id(::google::protobuf::uint64 value);

  // optional uint64 client_id = 5;
  inline bool has_client_id() const;
  inline void clear_client_id();
  static const int kClientIdFieldNumber = 5;
  inline ::google::protobuf::uint64 client_id() const;
  inline void set_client_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.RoleDBData role_info_list = 6;
  inline int role_info_list_size() const;
  inline void clear_role_info_list();
  static const int kRoleInfoListFieldNumber = 6;
  inline const ::proto_ff::RoleDBData& role_info_list(int index) const;
  inline ::proto_ff::RoleDBData* mutable_role_info_list(int index);
  inline ::proto_ff::RoleDBData* add_role_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleDBData >&
      role_info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleDBData >*
      mutable_role_info_list();

  // optional uint32 register_num = 7;
  inline bool has_register_num() const;
  inline void clear_register_num();
  static const int kRegisterNumFieldNumber = 7;
  inline ::google::protobuf::uint32 register_num() const;
  inline void set_register_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LogicToWorldGetRoleListRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_born_zone_id();
  inline void clear_has_born_zone_id();
  inline void set_has_proxy_id();
  inline void clear_has_proxy_id();
  inline void set_has_client_id();
  inline void clear_has_client_id();
  inline void set_has_register_num();
  inline void clear_has_register_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::int32 ret_code_;
  ::google::protobuf::uint32 born_zone_id_;
  ::google::protobuf::uint64 proxy_id_;
  ::google::protobuf::uint64 client_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleDBData > role_info_list_;
  ::google::protobuf::uint32 register_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static LogicToWorldGetRoleListRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGateLeaveGame2 : public ::google::protobuf::Message {
 public:
  NotifyGateLeaveGame2();
  virtual ~NotifyGateLeaveGame2();

  NotifyGateLeaveGame2(const NotifyGateLeaveGame2& from);

  inline NotifyGateLeaveGame2& operator=(const NotifyGateLeaveGame2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyGateLeaveGame2& default_instance();

  void Swap(NotifyGateLeaveGame2* other);

  // implements Message ----------------------------------------------

  NotifyGateLeaveGame2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyGateLeaveGame2& from);
  void MergeFrom(const NotifyGateLeaveGame2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 clientid = 1;
  inline bool has_clientid() const;
  inline void clear_clientid();
  static const int kClientidFieldNumber = 1;
  inline ::google::protobuf::uint64 clientid() const;
  inline void set_clientid(::google::protobuf::uint64 value);

  // optional .proto_ff.LOGOUT_TYPE leave_flag = 3;
  inline bool has_leave_flag() const;
  inline void clear_leave_flag();
  static const int kLeaveFlagFieldNumber = 3;
  inline ::proto_ff::LOGOUT_TYPE leave_flag() const;
  inline void set_leave_flag(::proto_ff::LOGOUT_TYPE value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyGateLeaveGame2)
 private:
  inline void set_has_clientid();
  inline void clear_has_clientid();
  inline void set_has_leave_flag();
  inline void clear_has_leave_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 clientid_;
  int leave_flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static NotifyGateLeaveGame2* default_instance_;
};
// -------------------------------------------------------------------

class WorldToLogicCreateRoleReq : public ::google::protobuf::Message {
 public:
  WorldToLogicCreateRoleReq();
  virtual ~WorldToLogicCreateRoleReq();

  WorldToLogicCreateRoleReq(const WorldToLogicCreateRoleReq& from);

  inline WorldToLogicCreateRoleReq& operator=(const WorldToLogicCreateRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldToLogicCreateRoleReq& default_instance();

  void Swap(WorldToLogicCreateRoleReq* other);

  // implements Message ----------------------------------------------

  WorldToLogicCreateRoleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldToLogicCreateRoleReq& from);
  void MergeFrom(const WorldToLogicCreateRoleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 zid = 3;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 3;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint32 born_zid = 4;
  inline bool has_born_zid() const;
  inline void clear_born_zid();
  static const int kBornZidFieldNumber = 4;
  inline ::google::protobuf::uint32 born_zid() const;
  inline void set_born_zid(::google::protobuf::uint32 value);

  // optional uint32 channel_id = 5;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 5;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);

  // optional uint64 zone_mid = 6;
  inline bool has_zone_mid() const;
  inline void clear_zone_mid();
  static const int kZoneMidFieldNumber = 6;
  inline ::google::protobuf::uint64 zone_mid() const;
  inline void set_zone_mid(::google::protobuf::uint64 value);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 prof = 8;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 8;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 level = 9;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 color = 10;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 10;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // optional uint64 enter_scene_id = 11;
  inline bool has_enter_scene_id() const;
  inline void clear_enter_scene_id();
  static const int kEnterSceneIdFieldNumber = 11;
  inline ::google::protobuf::uint64 enter_scene_id() const;
  inline void set_enter_scene_id(::google::protobuf::uint64 value);

  // optional uint64 enter_map_id = 12;
  inline bool has_enter_map_id() const;
  inline void clear_enter_map_id();
  static const int kEnterMapIdFieldNumber = 12;
  inline ::google::protobuf::uint64 enter_map_id() const;
  inline void set_enter_map_id(::google::protobuf::uint64 value);

  // optional float enterposx = 13;
  inline bool has_enterposx() const;
  inline void clear_enterposx();
  static const int kEnterposxFieldNumber = 13;
  inline float enterposx() const;
  inline void set_enterposx(float value);

  // optional float enterposy = 14;
  inline bool has_enterposy() const;
  inline void clear_enterposy();
  static const int kEnterposyFieldNumber = 14;
  inline float enterposy() const;
  inline void set_enterposy(float value);

  // optional float enterposz = 15;
  inline bool has_enterposz() const;
  inline void clear_enterposz();
  static const int kEnterposzFieldNumber = 15;
  inline float enterposz() const;
  inline void set_enterposz(float value);

  // optional uint64 lastsceneid = 16;
  inline bool has_lastsceneid() const;
  inline void clear_lastsceneid();
  static const int kLastsceneidFieldNumber = 16;
  inline ::google::protobuf::uint64 lastsceneid() const;
  inline void set_lastsceneid(::google::protobuf::uint64 value);

  // optional uint64 lastmapid = 17;
  inline bool has_lastmapid() const;
  inline void clear_lastmapid();
  static const int kLastmapidFieldNumber = 17;
  inline ::google::protobuf::uint64 lastmapid() const;
  inline void set_lastmapid(::google::protobuf::uint64 value);

  // optional float lastposx = 18;
  inline bool has_lastposx() const;
  inline void clear_lastposx();
  static const int kLastposxFieldNumber = 18;
  inline float lastposx() const;
  inline void set_lastposx(float value);

  // optional float lastposy = 19;
  inline bool has_lastposy() const;
  inline void clear_lastposy();
  static const int kLastposyFieldNumber = 19;
  inline float lastposy() const;
  inline void set_lastposy(float value);

  // optional float lastposz = 20;
  inline bool has_lastposz() const;
  inline void clear_lastposz();
  static const int kLastposzFieldNumber = 20;
  inline float lastposz() const;
  inline void set_lastposz(float value);

  // @@protoc_insertion_point(class_scope:proto_ff.WorldToLogicCreateRoleReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_born_zid();
  inline void clear_has_born_zid();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_zone_mid();
  inline void clear_has_zone_mid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_enter_scene_id();
  inline void clear_has_enter_scene_id();
  inline void set_has_enter_map_id();
  inline void clear_has_enter_map_id();
  inline void set_has_enterposx();
  inline void clear_has_enterposx();
  inline void set_has_enterposy();
  inline void clear_has_enterposy();
  inline void set_has_enterposz();
  inline void clear_has_enterposz();
  inline void set_has_lastsceneid();
  inline void clear_has_lastsceneid();
  inline void set_has_lastmapid();
  inline void clear_has_lastmapid();
  inline void set_has_lastposx();
  inline void clear_has_lastposx();
  inline void set_has_lastposy();
  inline void clear_has_lastposy();
  inline void set_has_lastposz();
  inline void clear_has_lastposz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 zid_;
  ::google::protobuf::uint32 born_zid_;
  ::google::protobuf::uint64 zone_mid_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 prof_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::uint64 enter_scene_id_;
  ::google::protobuf::uint64 enter_map_id_;
  float enterposx_;
  float enterposy_;
  ::google::protobuf::uint64 lastsceneid_;
  float enterposz_;
  float lastposx_;
  ::google::protobuf::uint64 lastmapid_;
  float lastposy_;
  float lastposz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static WorldToLogicCreateRoleReq* default_instance_;
};
// -------------------------------------------------------------------

class LogicToWorldCreateRoleRsp : public ::google::protobuf::Message {
 public:
  LogicToWorldCreateRoleRsp();
  virtual ~LogicToWorldCreateRoleRsp();

  LogicToWorldCreateRoleRsp(const LogicToWorldCreateRoleRsp& from);

  inline LogicToWorldCreateRoleRsp& operator=(const LogicToWorldCreateRoleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToWorldCreateRoleRsp& default_instance();

  void Swap(LogicToWorldCreateRoleRsp* other);

  // implements Message ----------------------------------------------

  LogicToWorldCreateRoleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToWorldCreateRoleRsp& from);
  void MergeFrom(const LogicToWorldCreateRoleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // optional uint64 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleDBData role_info = 4;
  inline bool has_role_info() const;
  inline void clear_role_info();
  static const int kRoleInfoFieldNumber = 4;
  inline const ::proto_ff::RoleDBData& role_info() const;
  inline ::proto_ff::RoleDBData* mutable_role_info();
  inline ::proto_ff::RoleDBData* release_role_info();
  inline void set_allocated_role_info(::proto_ff::RoleDBData* role_info);

  // @@protoc_insertion_point(class_scope:proto_ff.LogicToWorldCreateRoleRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_role_info();
  inline void clear_has_role_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 cid_;
  ::proto_ff::RoleDBData* role_info_;
  ::google::protobuf::uint32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static LogicToWorldCreateRoleRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyCenterDisConnect2 : public ::google::protobuf::Message {
 public:
  NotifyCenterDisConnect2();
  virtual ~NotifyCenterDisConnect2();

  NotifyCenterDisConnect2(const NotifyCenterDisConnect2& from);

  inline NotifyCenterDisConnect2& operator=(const NotifyCenterDisConnect2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyCenterDisConnect2& default_instance();

  void Swap(NotifyCenterDisConnect2* other);

  // implements Message ----------------------------------------------

  NotifyCenterDisConnect2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyCenterDisConnect2& from);
  void MergeFrom(const NotifyCenterDisConnect2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 clientId = 1;
  inline bool has_clientid() const;
  inline void clear_clientid();
  static const int kClientIdFieldNumber = 1;
  inline ::google::protobuf::uint64 clientid() const;
  inline void set_clientid(::google::protobuf::uint64 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 errflag = 3;
  inline bool has_errflag() const;
  inline void clear_errflag();
  static const int kErrflagFieldNumber = 3;
  inline ::google::protobuf::int32 errflag() const;
  inline void set_errflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyCenterDisConnect2)
 private:
  inline void set_has_clientid();
  inline void clear_has_clientid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_errflag();
  inline void clear_has_errflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 clientid_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 errflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static NotifyCenterDisConnect2* default_instance_;
};
// -------------------------------------------------------------------

class ProxyServerBusInfo : public ::google::protobuf::Message {
 public:
  ProxyServerBusInfo();
  virtual ~ProxyServerBusInfo();

  ProxyServerBusInfo(const ProxyServerBusInfo& from);

  inline ProxyServerBusInfo& operator=(const ProxyServerBusInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyServerBusInfo& default_instance();

  void Swap(ProxyServerBusInfo* other);

  // implements Message ----------------------------------------------

  ProxyServerBusInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyServerBusInfo& from);
  void MergeFrom(const ProxyServerBusInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_type = 1;
  inline bool has_server_type() const;
  inline void clear_server_type();
  static const int kServerTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 server_type() const;
  inline void set_server_type(::google::protobuf::uint32 value);

  // optional uint32 bus_id = 2;
  inline bool has_bus_id() const;
  inline void clear_bus_id();
  static const int kBusIdFieldNumber = 2;
  inline ::google::protobuf::uint32 bus_id() const;
  inline void set_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ProxyServerBusInfo)
 private:
  inline void set_has_server_type();
  inline void clear_has_server_type();
  inline void set_has_bus_id();
  inline void clear_has_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 server_type_;
  ::google::protobuf::uint32 bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static ProxyServerBusInfo* default_instance_;
};
// -------------------------------------------------------------------

class WroldToProxyChangeServerBusId : public ::google::protobuf::Message {
 public:
  WroldToProxyChangeServerBusId();
  virtual ~WroldToProxyChangeServerBusId();

  WroldToProxyChangeServerBusId(const WroldToProxyChangeServerBusId& from);

  inline WroldToProxyChangeServerBusId& operator=(const WroldToProxyChangeServerBusId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WroldToProxyChangeServerBusId& default_instance();

  void Swap(WroldToProxyChangeServerBusId* other);

  // implements Message ----------------------------------------------

  WroldToProxyChangeServerBusId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WroldToProxyChangeServerBusId& from);
  void MergeFrom(const WroldToProxyChangeServerBusId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ProxyServerBusInfo server_info = 1;
  inline int server_info_size() const;
  inline void clear_server_info();
  static const int kServerInfoFieldNumber = 1;
  inline const ::proto_ff::ProxyServerBusInfo& server_info(int index) const;
  inline ::proto_ff::ProxyServerBusInfo* mutable_server_info(int index);
  inline ::proto_ff::ProxyServerBusInfo* add_server_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ProxyServerBusInfo >&
      server_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ProxyServerBusInfo >*
      mutable_server_info();

  // @@protoc_insertion_point(class_scope:proto_ff.WroldToProxyChangeServerBusId)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ProxyServerBusInfo > server_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static WroldToProxyChangeServerBusId* default_instance_;
};
// -------------------------------------------------------------------

class WorldToOtherServerDisconnectNotify : public ::google::protobuf::Message {
 public:
  WorldToOtherServerDisconnectNotify();
  virtual ~WorldToOtherServerDisconnectNotify();

  WorldToOtherServerDisconnectNotify(const WorldToOtherServerDisconnectNotify& from);

  inline WorldToOtherServerDisconnectNotify& operator=(const WorldToOtherServerDisconnectNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldToOtherServerDisconnectNotify& default_instance();

  void Swap(WorldToOtherServerDisconnectNotify* other);

  // implements Message ----------------------------------------------

  WorldToOtherServerDisconnectNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldToOtherServerDisconnectNotify& from);
  void MergeFrom(const WorldToOtherServerDisconnectNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional uint32 reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WorldToOtherServerDisconnectNotify)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::uint32 reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static WorldToOtherServerDisconnectNotify* default_instance_;
};
// -------------------------------------------------------------------

class WorldToLogicLoginReq : public ::google::protobuf::Message {
 public:
  WorldToLogicLoginReq();
  virtual ~WorldToLogicLoginReq();

  WorldToLogicLoginReq(const WorldToLogicLoginReq& from);

  inline WorldToLogicLoginReq& operator=(const WorldToLogicLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldToLogicLoginReq& default_instance();

  void Swap(WorldToLogicLoginReq* other);

  // implements Message ----------------------------------------------

  WorldToLogicLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldToLogicLoginReq& from);
  void MergeFrom(const WorldToLogicLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 proxy_id = 3;
  inline bool has_proxy_id() const;
  inline void clear_proxy_id();
  static const int kProxyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 proxy_id() const;
  inline void set_proxy_id(::google::protobuf::uint32 value);

  // optional uint64 client_id = 4;
  inline bool has_client_id() const;
  inline void clear_client_id();
  static const int kClientIdFieldNumber = 4;
  inline ::google::protobuf::uint64 client_id() const;
  inline void set_client_id(::google::protobuf::uint64 value);

  // optional uint32 zid = 5;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 5;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint32 channel_id = 6;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 6;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);

  // optional uint64 map_id = 7;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 7;
  inline ::google::protobuf::uint64 map_id() const;
  inline void set_map_id(::google::protobuf::uint64 value);

  // optional uint64 scene_id = 8;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 8;
  inline ::google::protobuf::uint64 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 9;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 9;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // @@protoc_insertion_point(class_scope:proto_ff.WorldToLogicLoginReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_proxy_id();
  inline void clear_has_proxy_id();
  inline void set_has_client_id();
  inline void clear_has_client_id();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 client_id_;
  ::google::protobuf::uint32 proxy_id_;
  ::google::protobuf::uint32 zid_;
  ::google::protobuf::uint64 map_id_;
  ::google::protobuf::uint64 scene_id_;
  ::proto_ff::Vector3PB* pos_;
  ::google::protobuf::uint32 channel_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static WorldToLogicLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class LogicToWorldLoginRsp : public ::google::protobuf::Message {
 public:
  LogicToWorldLoginRsp();
  virtual ~LogicToWorldLoginRsp();

  LogicToWorldLoginRsp(const LogicToWorldLoginRsp& from);

  inline LogicToWorldLoginRsp& operator=(const LogicToWorldLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToWorldLoginRsp& default_instance();

  void Swap(LogicToWorldLoginRsp* other);

  // implements Message ----------------------------------------------

  LogicToWorldLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToWorldLoginRsp& from);
  void MergeFrom(const LogicToWorldLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleDBSimpleData simple_data = 2;
  inline bool has_simple_data() const;
  inline void clear_simple_data();
  static const int kSimpleDataFieldNumber = 2;
  inline const ::proto_ff::RoleDBSimpleData& simple_data() const;
  inline ::proto_ff::RoleDBSimpleData* mutable_simple_data();
  inline ::proto_ff::RoleDBSimpleData* release_simple_data();
  inline void set_allocated_simple_data(::proto_ff::RoleDBSimpleData* simple_data);

  // @@protoc_insertion_point(class_scope:proto_ff.LogicToWorldLoginRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_simple_data();
  inline void clear_has_simple_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RoleDBSimpleData* simple_data_;
  ::google::protobuf::uint32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static LogicToWorldLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class WorldToSnsLoginReq : public ::google::protobuf::Message {
 public:
  WorldToSnsLoginReq();
  virtual ~WorldToSnsLoginReq();

  WorldToSnsLoginReq(const WorldToSnsLoginReq& from);

  inline WorldToSnsLoginReq& operator=(const WorldToSnsLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldToSnsLoginReq& default_instance();

  void Swap(WorldToSnsLoginReq* other);

  // implements Message ----------------------------------------------

  WorldToSnsLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldToSnsLoginReq& from);
  void MergeFrom(const WorldToSnsLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 proxy_id = 1;
  inline bool has_proxy_id() const;
  inline void clear_proxy_id();
  static const int kProxyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 proxy_id() const;
  inline void set_proxy_id(::google::protobuf::uint32 value);

  // optional uint32 logic_id = 2;
  inline bool has_logic_id() const;
  inline void clear_logic_id();
  static const int kLogicIdFieldNumber = 2;
  inline ::google::protobuf::uint32 logic_id() const;
  inline void set_logic_id(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleDBSimpleData simple_data = 3;
  inline bool has_simple_data() const;
  inline void clear_simple_data();
  static const int kSimpleDataFieldNumber = 3;
  inline const ::proto_ff::RoleDBSimpleData& simple_data() const;
  inline ::proto_ff::RoleDBSimpleData* mutable_simple_data();
  inline ::proto_ff::RoleDBSimpleData* release_simple_data();
  inline void set_allocated_simple_data(::proto_ff::RoleDBSimpleData* simple_data);

  // @@protoc_insertion_point(class_scope:proto_ff.WorldToSnsLoginReq)
 private:
  inline void set_has_proxy_id();
  inline void clear_has_proxy_id();
  inline void set_has_logic_id();
  inline void clear_has_logic_id();
  inline void set_has_simple_data();
  inline void clear_has_simple_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 proxy_id_;
  ::google::protobuf::uint32 logic_id_;
  ::proto_ff::RoleDBSimpleData* simple_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static WorldToSnsLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class SnsToWorldLoginRsp : public ::google::protobuf::Message {
 public:
  SnsToWorldLoginRsp();
  virtual ~SnsToWorldLoginRsp();

  SnsToWorldLoginRsp(const SnsToWorldLoginRsp& from);

  inline SnsToWorldLoginRsp& operator=(const SnsToWorldLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsToWorldLoginRsp& default_instance();

  void Swap(SnsToWorldLoginRsp* other);

  // implements Message ----------------------------------------------

  SnsToWorldLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnsToWorldLoginRsp& from);
  void MergeFrom(const SnsToWorldLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // optional uint64 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SnsToWorldLoginRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static SnsToWorldLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class GameToWorldRegisterMapReq : public ::google::protobuf::Message {
 public:
  GameToWorldRegisterMapReq();
  virtual ~GameToWorldRegisterMapReq();

  GameToWorldRegisterMapReq(const GameToWorldRegisterMapReq& from);

  inline GameToWorldRegisterMapReq& operator=(const GameToWorldRegisterMapReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameToWorldRegisterMapReq& default_instance();

  void Swap(GameToWorldRegisterMapReq* other);

  // implements Message ----------------------------------------------

  GameToWorldRegisterMapReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameToWorldRegisterMapReq& from);
  void MergeFrom(const GameToWorldRegisterMapReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_bus = 1;
  inline bool has_game_bus() const;
  inline void clear_game_bus();
  static const int kGameBusFieldNumber = 1;
  inline ::google::protobuf::uint32 game_bus() const;
  inline void set_game_bus(::google::protobuf::uint32 value);

  // repeated uint64 map_id = 2;
  inline int map_id_size() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::uint64 map_id(int index) const;
  inline void set_map_id(int index, ::google::protobuf::uint64 value);
  inline void add_map_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      map_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_map_id();

  // @@protoc_insertion_point(class_scope:proto_ff.GameToWorldRegisterMapReq)
 private:
  inline void set_has_game_bus();
  inline void clear_has_game_bus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > map_id_;
  ::google::protobuf::uint32 game_bus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static GameToWorldRegisterMapReq* default_instance_;
};
// -------------------------------------------------------------------

class WorldToGameRegisterMapRsp : public ::google::protobuf::Message {
 public:
  WorldToGameRegisterMapRsp();
  virtual ~WorldToGameRegisterMapRsp();

  WorldToGameRegisterMapRsp(const WorldToGameRegisterMapRsp& from);

  inline WorldToGameRegisterMapRsp& operator=(const WorldToGameRegisterMapRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldToGameRegisterMapRsp& default_instance();

  void Swap(WorldToGameRegisterMapRsp* other);

  // implements Message ----------------------------------------------

  WorldToGameRegisterMapRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldToGameRegisterMapRsp& from);
  void MergeFrom(const WorldToGameRegisterMapRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WorldToGameRegisterMapRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static WorldToGameRegisterMapRsp* default_instance_;
};
// -------------------------------------------------------------------

class WorldToLogicLoginFinishNotify : public ::google::protobuf::Message {
 public:
  WorldToLogicLoginFinishNotify();
  virtual ~WorldToLogicLoginFinishNotify();

  WorldToLogicLoginFinishNotify(const WorldToLogicLoginFinishNotify& from);

  inline WorldToLogicLoginFinishNotify& operator=(const WorldToLogicLoginFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldToLogicLoginFinishNotify& default_instance();

  void Swap(WorldToLogicLoginFinishNotify* other);

  // implements Message ----------------------------------------------

  WorldToLogicLoginFinishNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldToLogicLoginFinishNotify& from);
  void MergeFrom(const WorldToLogicLoginFinishNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 proxy_id = 3;
  inline bool has_proxy_id() const;
  inline void clear_proxy_id();
  static const int kProxyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 proxy_id() const;
  inline void set_proxy_id(::google::protobuf::uint32 value);

  // optional uint64 map_id = 4;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 4;
  inline ::google::protobuf::uint64 map_id() const;
  inline void set_map_id(::google::protobuf::uint64 value);

  // optional uint64 scene_id = 5;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 5;
  inline ::google::protobuf::uint64 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 6;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 6;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // @@protoc_insertion_point(class_scope:proto_ff.WorldToLogicLoginFinishNotify)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_proxy_id();
  inline void clear_has_proxy_id();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 map_id_;
  ::google::protobuf::uint64 scene_id_;
  ::proto_ff::Vector3PB* pos_;
  ::google::protobuf::uint32 proxy_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static WorldToLogicLoginFinishNotify* default_instance_;
};
// -------------------------------------------------------------------

class LogicToWorldEnterSceneReq : public ::google::protobuf::Message {
 public:
  LogicToWorldEnterSceneReq();
  virtual ~LogicToWorldEnterSceneReq();

  LogicToWorldEnterSceneReq(const LogicToWorldEnterSceneReq& from);

  inline LogicToWorldEnterSceneReq& operator=(const LogicToWorldEnterSceneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToWorldEnterSceneReq& default_instance();

  void Swap(LogicToWorldEnterSceneReq* other);

  // implements Message ----------------------------------------------

  LogicToWorldEnterSceneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToWorldEnterSceneReq& from);
  void MergeFrom(const LogicToWorldEnterSceneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 map_id = 2;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::uint64 map_id() const;
  inline void set_map_id(::google::protobuf::uint64 value);

  // optional uint64 scene_id = 3;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  inline ::google::protobuf::uint64 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // optional uint32 req_trans_id = 5;
  inline bool has_req_trans_id() const;
  inline void clear_req_trans_id();
  static const int kReqTransIdFieldNumber = 5;
  inline ::google::protobuf::uint32 req_trans_id() const;
  inline void set_req_trans_id(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleEnterSceneData data = 6;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::proto_ff::RoleEnterSceneData& data() const;
  inline ::proto_ff::RoleEnterSceneData* mutable_data();
  inline ::proto_ff::RoleEnterSceneData* release_data();
  inline void set_allocated_data(::proto_ff::RoleEnterSceneData* data);

  // @@protoc_insertion_point(class_scope:proto_ff.LogicToWorldEnterSceneReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_req_trans_id();
  inline void clear_has_req_trans_id();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 map_id_;
  ::google::protobuf::uint64 scene_id_;
  ::proto_ff::Vector3PB* pos_;
  ::proto_ff::RoleEnterSceneData* data_;
  ::google::protobuf::uint32 req_trans_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static LogicToWorldEnterSceneReq* default_instance_;
};
// -------------------------------------------------------------------

class WorldToGameEnterSceneReq : public ::google::protobuf::Message {
 public:
  WorldToGameEnterSceneReq();
  virtual ~WorldToGameEnterSceneReq();

  WorldToGameEnterSceneReq(const WorldToGameEnterSceneReq& from);

  inline WorldToGameEnterSceneReq& operator=(const WorldToGameEnterSceneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldToGameEnterSceneReq& default_instance();

  void Swap(WorldToGameEnterSceneReq* other);

  // implements Message ----------------------------------------------

  WorldToGameEnterSceneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldToGameEnterSceneReq& from);
  void MergeFrom(const WorldToGameEnterSceneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 map_id = 2;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::uint64 map_id() const;
  inline void set_map_id(::google::protobuf::uint64 value);

  // optional uint64 scene_id = 3;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  inline ::google::protobuf::uint64 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // optional uint32 req_trans_id = 5;
  inline bool has_req_trans_id() const;
  inline void clear_req_trans_id();
  static const int kReqTransIdFieldNumber = 5;
  inline ::google::protobuf::uint32 req_trans_id() const;
  inline void set_req_trans_id(::google::protobuf::uint32 value);

  // optional uint32 gate_id = 6;
  inline bool has_gate_id() const;
  inline void clear_gate_id();
  static const int kGateIdFieldNumber = 6;
  inline ::google::protobuf::uint32 gate_id() const;
  inline void set_gate_id(::google::protobuf::uint32 value);

  // optional uint32 logic_id = 7;
  inline bool has_logic_id() const;
  inline void clear_logic_id();
  static const int kLogicIdFieldNumber = 7;
  inline ::google::protobuf::uint32 logic_id() const;
  inline void set_logic_id(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleEnterSceneData data = 8;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 8;
  inline const ::proto_ff::RoleEnterSceneData& data() const;
  inline ::proto_ff::RoleEnterSceneData* mutable_data();
  inline ::proto_ff::RoleEnterSceneData* release_data();
  inline void set_allocated_data(::proto_ff::RoleEnterSceneData* data);

  // @@protoc_insertion_point(class_scope:proto_ff.WorldToGameEnterSceneReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_req_trans_id();
  inline void clear_has_req_trans_id();
  inline void set_has_gate_id();
  inline void clear_has_gate_id();
  inline void set_has_logic_id();
  inline void clear_has_logic_id();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 map_id_;
  ::google::protobuf::uint64 scene_id_;
  ::proto_ff::Vector3PB* pos_;
  ::google::protobuf::uint32 req_trans_id_;
  ::google::protobuf::uint32 gate_id_;
  ::proto_ff::RoleEnterSceneData* data_;
  ::google::protobuf::uint32 logic_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal2_2eproto();
  friend void protobuf_AssignDesc_ServerInternal2_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal2_2eproto();

  void InitAsDefaultInstance();
  static WorldToGameEnterSceneReq* default_instance_;
};
// ===================================================================


// ===================================================================

// WorldToLogicGetRoleList

// optional uint64 uid = 1;
inline bool WorldToLogicGetRoleList::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldToLogicGetRoleList::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldToLogicGetRoleList::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldToLogicGetRoleList::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 WorldToLogicGetRoleList::uid() const {
  return uid_;
}
inline void WorldToLogicGetRoleList::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 born_zone_id = 2;
inline bool WorldToLogicGetRoleList::has_born_zone_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldToLogicGetRoleList::set_has_born_zone_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldToLogicGetRoleList::clear_has_born_zone_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldToLogicGetRoleList::clear_born_zone_id() {
  born_zone_id_ = 0u;
  clear_has_born_zone_id();
}
inline ::google::protobuf::uint32 WorldToLogicGetRoleList::born_zone_id() const {
  return born_zone_id_;
}
inline void WorldToLogicGetRoleList::set_born_zone_id(::google::protobuf::uint32 value) {
  set_has_born_zone_id();
  born_zone_id_ = value;
}

// optional uint64 proxy_id = 3;
inline bool WorldToLogicGetRoleList::has_proxy_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldToLogicGetRoleList::set_has_proxy_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldToLogicGetRoleList::clear_has_proxy_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldToLogicGetRoleList::clear_proxy_id() {
  proxy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proxy_id();
}
inline ::google::protobuf::uint64 WorldToLogicGetRoleList::proxy_id() const {
  return proxy_id_;
}
inline void WorldToLogicGetRoleList::set_proxy_id(::google::protobuf::uint64 value) {
  set_has_proxy_id();
  proxy_id_ = value;
}

// optional uint64 client_id = 4;
inline bool WorldToLogicGetRoleList::has_client_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldToLogicGetRoleList::set_has_client_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldToLogicGetRoleList::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldToLogicGetRoleList::clear_client_id() {
  client_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_id();
}
inline ::google::protobuf::uint64 WorldToLogicGetRoleList::client_id() const {
  return client_id_;
}
inline void WorldToLogicGetRoleList::set_client_id(::google::protobuf::uint64 value) {
  set_has_client_id();
  client_id_ = value;
}

// -------------------------------------------------------------------

// LogicToWorldGetRoleListRsp

// optional int32 ret_code = 1;
inline bool LogicToWorldGetRoleListRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToWorldGetRoleListRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToWorldGetRoleListRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToWorldGetRoleListRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 LogicToWorldGetRoleListRsp::ret_code() const {
  return ret_code_;
}
inline void LogicToWorldGetRoleListRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional uint64 uid = 2;
inline bool LogicToWorldGetRoleListRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToWorldGetRoleListRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToWorldGetRoleListRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToWorldGetRoleListRsp::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 LogicToWorldGetRoleListRsp::uid() const {
  return uid_;
}
inline void LogicToWorldGetRoleListRsp::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 born_zone_id = 3;
inline bool LogicToWorldGetRoleListRsp::has_born_zone_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogicToWorldGetRoleListRsp::set_has_born_zone_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogicToWorldGetRoleListRsp::clear_has_born_zone_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogicToWorldGetRoleListRsp::clear_born_zone_id() {
  born_zone_id_ = 0u;
  clear_has_born_zone_id();
}
inline ::google::protobuf::uint32 LogicToWorldGetRoleListRsp::born_zone_id() const {
  return born_zone_id_;
}
inline void LogicToWorldGetRoleListRsp::set_born_zone_id(::google::protobuf::uint32 value) {
  set_has_born_zone_id();
  born_zone_id_ = value;
}

// optional uint64 proxy_id = 4;
inline bool LogicToWorldGetRoleListRsp::has_proxy_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogicToWorldGetRoleListRsp::set_has_proxy_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogicToWorldGetRoleListRsp::clear_has_proxy_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogicToWorldGetRoleListRsp::clear_proxy_id() {
  proxy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proxy_id();
}
inline ::google::protobuf::uint64 LogicToWorldGetRoleListRsp::proxy_id() const {
  return proxy_id_;
}
inline void LogicToWorldGetRoleListRsp::set_proxy_id(::google::protobuf::uint64 value) {
  set_has_proxy_id();
  proxy_id_ = value;
}

// optional uint64 client_id = 5;
inline bool LogicToWorldGetRoleListRsp::has_client_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogicToWorldGetRoleListRsp::set_has_client_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogicToWorldGetRoleListRsp::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogicToWorldGetRoleListRsp::clear_client_id() {
  client_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_id();
}
inline ::google::protobuf::uint64 LogicToWorldGetRoleListRsp::client_id() const {
  return client_id_;
}
inline void LogicToWorldGetRoleListRsp::set_client_id(::google::protobuf::uint64 value) {
  set_has_client_id();
  client_id_ = value;
}

// repeated .proto_ff.RoleDBData role_info_list = 6;
inline int LogicToWorldGetRoleListRsp::role_info_list_size() const {
  return role_info_list_.size();
}
inline void LogicToWorldGetRoleListRsp::clear_role_info_list() {
  role_info_list_.Clear();
}
inline const ::proto_ff::RoleDBData& LogicToWorldGetRoleListRsp::role_info_list(int index) const {
  return role_info_list_.Get(index);
}
inline ::proto_ff::RoleDBData* LogicToWorldGetRoleListRsp::mutable_role_info_list(int index) {
  return role_info_list_.Mutable(index);
}
inline ::proto_ff::RoleDBData* LogicToWorldGetRoleListRsp::add_role_info_list() {
  return role_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleDBData >&
LogicToWorldGetRoleListRsp::role_info_list() const {
  return role_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleDBData >*
LogicToWorldGetRoleListRsp::mutable_role_info_list() {
  return &role_info_list_;
}

// optional uint32 register_num = 7;
inline bool LogicToWorldGetRoleListRsp::has_register_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogicToWorldGetRoleListRsp::set_has_register_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogicToWorldGetRoleListRsp::clear_has_register_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogicToWorldGetRoleListRsp::clear_register_num() {
  register_num_ = 0u;
  clear_has_register_num();
}
inline ::google::protobuf::uint32 LogicToWorldGetRoleListRsp::register_num() const {
  return register_num_;
}
inline void LogicToWorldGetRoleListRsp::set_register_num(::google::protobuf::uint32 value) {
  set_has_register_num();
  register_num_ = value;
}

// -------------------------------------------------------------------

// NotifyGateLeaveGame2

// optional uint64 clientid = 1;
inline bool NotifyGateLeaveGame2::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGateLeaveGame2::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGateLeaveGame2::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGateLeaveGame2::clear_clientid() {
  clientid_ = GOOGLE_ULONGLONG(0);
  clear_has_clientid();
}
inline ::google::protobuf::uint64 NotifyGateLeaveGame2::clientid() const {
  return clientid_;
}
inline void NotifyGateLeaveGame2::set_clientid(::google::protobuf::uint64 value) {
  set_has_clientid();
  clientid_ = value;
}

// optional .proto_ff.LOGOUT_TYPE leave_flag = 3;
inline bool NotifyGateLeaveGame2::has_leave_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGateLeaveGame2::set_has_leave_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGateLeaveGame2::clear_has_leave_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGateLeaveGame2::clear_leave_flag() {
  leave_flag_ = 0;
  clear_has_leave_flag();
}
inline ::proto_ff::LOGOUT_TYPE NotifyGateLeaveGame2::leave_flag() const {
  return static_cast< ::proto_ff::LOGOUT_TYPE >(leave_flag_);
}
inline void NotifyGateLeaveGame2::set_leave_flag(::proto_ff::LOGOUT_TYPE value) {
  assert(::proto_ff::LOGOUT_TYPE_IsValid(value));
  set_has_leave_flag();
  leave_flag_ = value;
}

// -------------------------------------------------------------------

// WorldToLogicCreateRoleReq

// optional uint64 uid = 1;
inline bool WorldToLogicCreateRoleReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldToLogicCreateRoleReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldToLogicCreateRoleReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 WorldToLogicCreateRoleReq::uid() const {
  return uid_;
}
inline void WorldToLogicCreateRoleReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint64 cid = 2;
inline bool WorldToLogicCreateRoleReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldToLogicCreateRoleReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldToLogicCreateRoleReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 WorldToLogicCreateRoleReq::cid() const {
  return cid_;
}
inline void WorldToLogicCreateRoleReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 zid = 3;
inline bool WorldToLogicCreateRoleReq::has_zid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_zid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldToLogicCreateRoleReq::clear_has_zid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldToLogicCreateRoleReq::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 WorldToLogicCreateRoleReq::zid() const {
  return zid_;
}
inline void WorldToLogicCreateRoleReq::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint32 born_zid = 4;
inline bool WorldToLogicCreateRoleReq::has_born_zid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_born_zid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldToLogicCreateRoleReq::clear_has_born_zid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldToLogicCreateRoleReq::clear_born_zid() {
  born_zid_ = 0u;
  clear_has_born_zid();
}
inline ::google::protobuf::uint32 WorldToLogicCreateRoleReq::born_zid() const {
  return born_zid_;
}
inline void WorldToLogicCreateRoleReq::set_born_zid(::google::protobuf::uint32 value) {
  set_has_born_zid();
  born_zid_ = value;
}

// optional uint32 channel_id = 5;
inline bool WorldToLogicCreateRoleReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldToLogicCreateRoleReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldToLogicCreateRoleReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 WorldToLogicCreateRoleReq::channel_id() const {
  return channel_id_;
}
inline void WorldToLogicCreateRoleReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional uint64 zone_mid = 6;
inline bool WorldToLogicCreateRoleReq::has_zone_mid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_zone_mid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldToLogicCreateRoleReq::clear_has_zone_mid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldToLogicCreateRoleReq::clear_zone_mid() {
  zone_mid_ = GOOGLE_ULONGLONG(0);
  clear_has_zone_mid();
}
inline ::google::protobuf::uint64 WorldToLogicCreateRoleReq::zone_mid() const {
  return zone_mid_;
}
inline void WorldToLogicCreateRoleReq::set_zone_mid(::google::protobuf::uint64 value) {
  set_has_zone_mid();
  zone_mid_ = value;
}

// optional string name = 7;
inline bool WorldToLogicCreateRoleReq::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorldToLogicCreateRoleReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorldToLogicCreateRoleReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& WorldToLogicCreateRoleReq::name() const {
  return *name_;
}
inline void WorldToLogicCreateRoleReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void WorldToLogicCreateRoleReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void WorldToLogicCreateRoleReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WorldToLogicCreateRoleReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* WorldToLogicCreateRoleReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WorldToLogicCreateRoleReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 prof = 8;
inline bool WorldToLogicCreateRoleReq::has_prof() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_prof() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WorldToLogicCreateRoleReq::clear_has_prof() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WorldToLogicCreateRoleReq::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 WorldToLogicCreateRoleReq::prof() const {
  return prof_;
}
inline void WorldToLogicCreateRoleReq::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 9;
inline bool WorldToLogicCreateRoleReq::has_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WorldToLogicCreateRoleReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WorldToLogicCreateRoleReq::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 WorldToLogicCreateRoleReq::level() const {
  return level_;
}
inline void WorldToLogicCreateRoleReq::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 color = 10;
inline bool WorldToLogicCreateRoleReq::has_color() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_color() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WorldToLogicCreateRoleReq::clear_has_color() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WorldToLogicCreateRoleReq::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 WorldToLogicCreateRoleReq::color() const {
  return color_;
}
inline void WorldToLogicCreateRoleReq::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
}

// optional uint64 enter_scene_id = 11;
inline bool WorldToLogicCreateRoleReq::has_enter_scene_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_enter_scene_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WorldToLogicCreateRoleReq::clear_has_enter_scene_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WorldToLogicCreateRoleReq::clear_enter_scene_id() {
  enter_scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_scene_id();
}
inline ::google::protobuf::uint64 WorldToLogicCreateRoleReq::enter_scene_id() const {
  return enter_scene_id_;
}
inline void WorldToLogicCreateRoleReq::set_enter_scene_id(::google::protobuf::uint64 value) {
  set_has_enter_scene_id();
  enter_scene_id_ = value;
}

// optional uint64 enter_map_id = 12;
inline bool WorldToLogicCreateRoleReq::has_enter_map_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_enter_map_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WorldToLogicCreateRoleReq::clear_has_enter_map_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WorldToLogicCreateRoleReq::clear_enter_map_id() {
  enter_map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_map_id();
}
inline ::google::protobuf::uint64 WorldToLogicCreateRoleReq::enter_map_id() const {
  return enter_map_id_;
}
inline void WorldToLogicCreateRoleReq::set_enter_map_id(::google::protobuf::uint64 value) {
  set_has_enter_map_id();
  enter_map_id_ = value;
}

// optional float enterposx = 13;
inline bool WorldToLogicCreateRoleReq::has_enterposx() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_enterposx() {
  _has_bits_[0] |= 0x00001000u;
}
inline void WorldToLogicCreateRoleReq::clear_has_enterposx() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void WorldToLogicCreateRoleReq::clear_enterposx() {
  enterposx_ = 0;
  clear_has_enterposx();
}
inline float WorldToLogicCreateRoleReq::enterposx() const {
  return enterposx_;
}
inline void WorldToLogicCreateRoleReq::set_enterposx(float value) {
  set_has_enterposx();
  enterposx_ = value;
}

// optional float enterposy = 14;
inline bool WorldToLogicCreateRoleReq::has_enterposy() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_enterposy() {
  _has_bits_[0] |= 0x00002000u;
}
inline void WorldToLogicCreateRoleReq::clear_has_enterposy() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void WorldToLogicCreateRoleReq::clear_enterposy() {
  enterposy_ = 0;
  clear_has_enterposy();
}
inline float WorldToLogicCreateRoleReq::enterposy() const {
  return enterposy_;
}
inline void WorldToLogicCreateRoleReq::set_enterposy(float value) {
  set_has_enterposy();
  enterposy_ = value;
}

// optional float enterposz = 15;
inline bool WorldToLogicCreateRoleReq::has_enterposz() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_enterposz() {
  _has_bits_[0] |= 0x00004000u;
}
inline void WorldToLogicCreateRoleReq::clear_has_enterposz() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void WorldToLogicCreateRoleReq::clear_enterposz() {
  enterposz_ = 0;
  clear_has_enterposz();
}
inline float WorldToLogicCreateRoleReq::enterposz() const {
  return enterposz_;
}
inline void WorldToLogicCreateRoleReq::set_enterposz(float value) {
  set_has_enterposz();
  enterposz_ = value;
}

// optional uint64 lastsceneid = 16;
inline bool WorldToLogicCreateRoleReq::has_lastsceneid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_lastsceneid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void WorldToLogicCreateRoleReq::clear_has_lastsceneid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void WorldToLogicCreateRoleReq::clear_lastsceneid() {
  lastsceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastsceneid();
}
inline ::google::protobuf::uint64 WorldToLogicCreateRoleReq::lastsceneid() const {
  return lastsceneid_;
}
inline void WorldToLogicCreateRoleReq::set_lastsceneid(::google::protobuf::uint64 value) {
  set_has_lastsceneid();
  lastsceneid_ = value;
}

// optional uint64 lastmapid = 17;
inline bool WorldToLogicCreateRoleReq::has_lastmapid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_lastmapid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void WorldToLogicCreateRoleReq::clear_has_lastmapid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void WorldToLogicCreateRoleReq::clear_lastmapid() {
  lastmapid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastmapid();
}
inline ::google::protobuf::uint64 WorldToLogicCreateRoleReq::lastmapid() const {
  return lastmapid_;
}
inline void WorldToLogicCreateRoleReq::set_lastmapid(::google::protobuf::uint64 value) {
  set_has_lastmapid();
  lastmapid_ = value;
}

// optional float lastposx = 18;
inline bool WorldToLogicCreateRoleReq::has_lastposx() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_lastposx() {
  _has_bits_[0] |= 0x00020000u;
}
inline void WorldToLogicCreateRoleReq::clear_has_lastposx() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void WorldToLogicCreateRoleReq::clear_lastposx() {
  lastposx_ = 0;
  clear_has_lastposx();
}
inline float WorldToLogicCreateRoleReq::lastposx() const {
  return lastposx_;
}
inline void WorldToLogicCreateRoleReq::set_lastposx(float value) {
  set_has_lastposx();
  lastposx_ = value;
}

// optional float lastposy = 19;
inline bool WorldToLogicCreateRoleReq::has_lastposy() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_lastposy() {
  _has_bits_[0] |= 0x00040000u;
}
inline void WorldToLogicCreateRoleReq::clear_has_lastposy() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void WorldToLogicCreateRoleReq::clear_lastposy() {
  lastposy_ = 0;
  clear_has_lastposy();
}
inline float WorldToLogicCreateRoleReq::lastposy() const {
  return lastposy_;
}
inline void WorldToLogicCreateRoleReq::set_lastposy(float value) {
  set_has_lastposy();
  lastposy_ = value;
}

// optional float lastposz = 20;
inline bool WorldToLogicCreateRoleReq::has_lastposz() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void WorldToLogicCreateRoleReq::set_has_lastposz() {
  _has_bits_[0] |= 0x00080000u;
}
inline void WorldToLogicCreateRoleReq::clear_has_lastposz() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void WorldToLogicCreateRoleReq::clear_lastposz() {
  lastposz_ = 0;
  clear_has_lastposz();
}
inline float WorldToLogicCreateRoleReq::lastposz() const {
  return lastposz_;
}
inline void WorldToLogicCreateRoleReq::set_lastposz(float value) {
  set_has_lastposz();
  lastposz_ = value;
}

// -------------------------------------------------------------------

// LogicToWorldCreateRoleRsp

// optional uint32 ret_code = 1;
inline bool LogicToWorldCreateRoleRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToWorldCreateRoleRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToWorldCreateRoleRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToWorldCreateRoleRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 LogicToWorldCreateRoleRsp::ret_code() const {
  return ret_code_;
}
inline void LogicToWorldCreateRoleRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional uint64 uid = 2;
inline bool LogicToWorldCreateRoleRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToWorldCreateRoleRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToWorldCreateRoleRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToWorldCreateRoleRsp::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 LogicToWorldCreateRoleRsp::uid() const {
  return uid_;
}
inline void LogicToWorldCreateRoleRsp::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint64 cid = 3;
inline bool LogicToWorldCreateRoleRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogicToWorldCreateRoleRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogicToWorldCreateRoleRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogicToWorldCreateRoleRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 LogicToWorldCreateRoleRsp::cid() const {
  return cid_;
}
inline void LogicToWorldCreateRoleRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional .proto_ff.RoleDBData role_info = 4;
inline bool LogicToWorldCreateRoleRsp::has_role_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogicToWorldCreateRoleRsp::set_has_role_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogicToWorldCreateRoleRsp::clear_has_role_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogicToWorldCreateRoleRsp::clear_role_info() {
  if (role_info_ != NULL) role_info_->::proto_ff::RoleDBData::Clear();
  clear_has_role_info();
}
inline const ::proto_ff::RoleDBData& LogicToWorldCreateRoleRsp::role_info() const {
  return role_info_ != NULL ? *role_info_ : *default_instance_->role_info_;
}
inline ::proto_ff::RoleDBData* LogicToWorldCreateRoleRsp::mutable_role_info() {
  set_has_role_info();
  if (role_info_ == NULL) role_info_ = new ::proto_ff::RoleDBData;
  return role_info_;
}
inline ::proto_ff::RoleDBData* LogicToWorldCreateRoleRsp::release_role_info() {
  clear_has_role_info();
  ::proto_ff::RoleDBData* temp = role_info_;
  role_info_ = NULL;
  return temp;
}
inline void LogicToWorldCreateRoleRsp::set_allocated_role_info(::proto_ff::RoleDBData* role_info) {
  delete role_info_;
  role_info_ = role_info;
  if (role_info) {
    set_has_role_info();
  } else {
    clear_has_role_info();
  }
}

// -------------------------------------------------------------------

// NotifyCenterDisConnect2

// optional uint64 clientId = 1;
inline bool NotifyCenterDisConnect2::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyCenterDisConnect2::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyCenterDisConnect2::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyCenterDisConnect2::clear_clientid() {
  clientid_ = GOOGLE_ULONGLONG(0);
  clear_has_clientid();
}
inline ::google::protobuf::uint64 NotifyCenterDisConnect2::clientid() const {
  return clientid_;
}
inline void NotifyCenterDisConnect2::set_clientid(::google::protobuf::uint64 value) {
  set_has_clientid();
  clientid_ = value;
}

// optional uint64 cid = 2;
inline bool NotifyCenterDisConnect2::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyCenterDisConnect2::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyCenterDisConnect2::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyCenterDisConnect2::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 NotifyCenterDisConnect2::cid() const {
  return cid_;
}
inline void NotifyCenterDisConnect2::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 errflag = 3;
inline bool NotifyCenterDisConnect2::has_errflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyCenterDisConnect2::set_has_errflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyCenterDisConnect2::clear_has_errflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyCenterDisConnect2::clear_errflag() {
  errflag_ = 0;
  clear_has_errflag();
}
inline ::google::protobuf::int32 NotifyCenterDisConnect2::errflag() const {
  return errflag_;
}
inline void NotifyCenterDisConnect2::set_errflag(::google::protobuf::int32 value) {
  set_has_errflag();
  errflag_ = value;
}

// -------------------------------------------------------------------

// ProxyServerBusInfo

// optional uint32 server_type = 1;
inline bool ProxyServerBusInfo::has_server_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProxyServerBusInfo::set_has_server_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProxyServerBusInfo::clear_has_server_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProxyServerBusInfo::clear_server_type() {
  server_type_ = 0u;
  clear_has_server_type();
}
inline ::google::protobuf::uint32 ProxyServerBusInfo::server_type() const {
  return server_type_;
}
inline void ProxyServerBusInfo::set_server_type(::google::protobuf::uint32 value) {
  set_has_server_type();
  server_type_ = value;
}

// optional uint32 bus_id = 2;
inline bool ProxyServerBusInfo::has_bus_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProxyServerBusInfo::set_has_bus_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProxyServerBusInfo::clear_has_bus_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProxyServerBusInfo::clear_bus_id() {
  bus_id_ = 0u;
  clear_has_bus_id();
}
inline ::google::protobuf::uint32 ProxyServerBusInfo::bus_id() const {
  return bus_id_;
}
inline void ProxyServerBusInfo::set_bus_id(::google::protobuf::uint32 value) {
  set_has_bus_id();
  bus_id_ = value;
}

// -------------------------------------------------------------------

// WroldToProxyChangeServerBusId

// repeated .proto_ff.ProxyServerBusInfo server_info = 1;
inline int WroldToProxyChangeServerBusId::server_info_size() const {
  return server_info_.size();
}
inline void WroldToProxyChangeServerBusId::clear_server_info() {
  server_info_.Clear();
}
inline const ::proto_ff::ProxyServerBusInfo& WroldToProxyChangeServerBusId::server_info(int index) const {
  return server_info_.Get(index);
}
inline ::proto_ff::ProxyServerBusInfo* WroldToProxyChangeServerBusId::mutable_server_info(int index) {
  return server_info_.Mutable(index);
}
inline ::proto_ff::ProxyServerBusInfo* WroldToProxyChangeServerBusId::add_server_info() {
  return server_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ProxyServerBusInfo >&
WroldToProxyChangeServerBusId::server_info() const {
  return server_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ProxyServerBusInfo >*
WroldToProxyChangeServerBusId::mutable_server_info() {
  return &server_info_;
}

// -------------------------------------------------------------------

// WorldToOtherServerDisconnectNotify

// optional uint64 roleId = 1;
inline bool WorldToOtherServerDisconnectNotify::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldToOtherServerDisconnectNotify::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldToOtherServerDisconnectNotify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldToOtherServerDisconnectNotify::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 WorldToOtherServerDisconnectNotify::roleid() const {
  return roleid_;
}
inline void WorldToOtherServerDisconnectNotify::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional uint32 reason = 2;
inline bool WorldToOtherServerDisconnectNotify::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldToOtherServerDisconnectNotify::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldToOtherServerDisconnectNotify::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldToOtherServerDisconnectNotify::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 WorldToOtherServerDisconnectNotify::reason() const {
  return reason_;
}
inline void WorldToOtherServerDisconnectNotify::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// WorldToLogicLoginReq

// optional uint64 uid = 1;
inline bool WorldToLogicLoginReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldToLogicLoginReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldToLogicLoginReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldToLogicLoginReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 WorldToLogicLoginReq::uid() const {
  return uid_;
}
inline void WorldToLogicLoginReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint64 cid = 2;
inline bool WorldToLogicLoginReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldToLogicLoginReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldToLogicLoginReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldToLogicLoginReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 WorldToLogicLoginReq::cid() const {
  return cid_;
}
inline void WorldToLogicLoginReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 proxy_id = 3;
inline bool WorldToLogicLoginReq::has_proxy_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldToLogicLoginReq::set_has_proxy_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldToLogicLoginReq::clear_has_proxy_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldToLogicLoginReq::clear_proxy_id() {
  proxy_id_ = 0u;
  clear_has_proxy_id();
}
inline ::google::protobuf::uint32 WorldToLogicLoginReq::proxy_id() const {
  return proxy_id_;
}
inline void WorldToLogicLoginReq::set_proxy_id(::google::protobuf::uint32 value) {
  set_has_proxy_id();
  proxy_id_ = value;
}

// optional uint64 client_id = 4;
inline bool WorldToLogicLoginReq::has_client_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldToLogicLoginReq::set_has_client_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldToLogicLoginReq::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldToLogicLoginReq::clear_client_id() {
  client_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_id();
}
inline ::google::protobuf::uint64 WorldToLogicLoginReq::client_id() const {
  return client_id_;
}
inline void WorldToLogicLoginReq::set_client_id(::google::protobuf::uint64 value) {
  set_has_client_id();
  client_id_ = value;
}

// optional uint32 zid = 5;
inline bool WorldToLogicLoginReq::has_zid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldToLogicLoginReq::set_has_zid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldToLogicLoginReq::clear_has_zid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldToLogicLoginReq::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 WorldToLogicLoginReq::zid() const {
  return zid_;
}
inline void WorldToLogicLoginReq::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint32 channel_id = 6;
inline bool WorldToLogicLoginReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldToLogicLoginReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldToLogicLoginReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldToLogicLoginReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 WorldToLogicLoginReq::channel_id() const {
  return channel_id_;
}
inline void WorldToLogicLoginReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional uint64 map_id = 7;
inline bool WorldToLogicLoginReq::has_map_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorldToLogicLoginReq::set_has_map_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorldToLogicLoginReq::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorldToLogicLoginReq::clear_map_id() {
  map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_map_id();
}
inline ::google::protobuf::uint64 WorldToLogicLoginReq::map_id() const {
  return map_id_;
}
inline void WorldToLogicLoginReq::set_map_id(::google::protobuf::uint64 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional uint64 scene_id = 8;
inline bool WorldToLogicLoginReq::has_scene_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WorldToLogicLoginReq::set_has_scene_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WorldToLogicLoginReq::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WorldToLogicLoginReq::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_scene_id();
}
inline ::google::protobuf::uint64 WorldToLogicLoginReq::scene_id() const {
  return scene_id_;
}
inline void WorldToLogicLoginReq::set_scene_id(::google::protobuf::uint64 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional .proto_ff.Vector3PB pos = 9;
inline bool WorldToLogicLoginReq::has_pos() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WorldToLogicLoginReq::set_has_pos() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WorldToLogicLoginReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WorldToLogicLoginReq::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& WorldToLogicLoginReq::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* WorldToLogicLoginReq::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* WorldToLogicLoginReq::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void WorldToLogicLoginReq::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// -------------------------------------------------------------------

// LogicToWorldLoginRsp

// optional uint32 ret_code = 1;
inline bool LogicToWorldLoginRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToWorldLoginRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToWorldLoginRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToWorldLoginRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 LogicToWorldLoginRsp::ret_code() const {
  return ret_code_;
}
inline void LogicToWorldLoginRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional .proto_ff.RoleDBSimpleData simple_data = 2;
inline bool LogicToWorldLoginRsp::has_simple_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToWorldLoginRsp::set_has_simple_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToWorldLoginRsp::clear_has_simple_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToWorldLoginRsp::clear_simple_data() {
  if (simple_data_ != NULL) simple_data_->::proto_ff::RoleDBSimpleData::Clear();
  clear_has_simple_data();
}
inline const ::proto_ff::RoleDBSimpleData& LogicToWorldLoginRsp::simple_data() const {
  return simple_data_ != NULL ? *simple_data_ : *default_instance_->simple_data_;
}
inline ::proto_ff::RoleDBSimpleData* LogicToWorldLoginRsp::mutable_simple_data() {
  set_has_simple_data();
  if (simple_data_ == NULL) simple_data_ = new ::proto_ff::RoleDBSimpleData;
  return simple_data_;
}
inline ::proto_ff::RoleDBSimpleData* LogicToWorldLoginRsp::release_simple_data() {
  clear_has_simple_data();
  ::proto_ff::RoleDBSimpleData* temp = simple_data_;
  simple_data_ = NULL;
  return temp;
}
inline void LogicToWorldLoginRsp::set_allocated_simple_data(::proto_ff::RoleDBSimpleData* simple_data) {
  delete simple_data_;
  simple_data_ = simple_data;
  if (simple_data) {
    set_has_simple_data();
  } else {
    clear_has_simple_data();
  }
}

// -------------------------------------------------------------------

// WorldToSnsLoginReq

// optional uint32 proxy_id = 1;
inline bool WorldToSnsLoginReq::has_proxy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldToSnsLoginReq::set_has_proxy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldToSnsLoginReq::clear_has_proxy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldToSnsLoginReq::clear_proxy_id() {
  proxy_id_ = 0u;
  clear_has_proxy_id();
}
inline ::google::protobuf::uint32 WorldToSnsLoginReq::proxy_id() const {
  return proxy_id_;
}
inline void WorldToSnsLoginReq::set_proxy_id(::google::protobuf::uint32 value) {
  set_has_proxy_id();
  proxy_id_ = value;
}

// optional uint32 logic_id = 2;
inline bool WorldToSnsLoginReq::has_logic_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldToSnsLoginReq::set_has_logic_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldToSnsLoginReq::clear_has_logic_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldToSnsLoginReq::clear_logic_id() {
  logic_id_ = 0u;
  clear_has_logic_id();
}
inline ::google::protobuf::uint32 WorldToSnsLoginReq::logic_id() const {
  return logic_id_;
}
inline void WorldToSnsLoginReq::set_logic_id(::google::protobuf::uint32 value) {
  set_has_logic_id();
  logic_id_ = value;
}

// optional .proto_ff.RoleDBSimpleData simple_data = 3;
inline bool WorldToSnsLoginReq::has_simple_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldToSnsLoginReq::set_has_simple_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldToSnsLoginReq::clear_has_simple_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldToSnsLoginReq::clear_simple_data() {
  if (simple_data_ != NULL) simple_data_->::proto_ff::RoleDBSimpleData::Clear();
  clear_has_simple_data();
}
inline const ::proto_ff::RoleDBSimpleData& WorldToSnsLoginReq::simple_data() const {
  return simple_data_ != NULL ? *simple_data_ : *default_instance_->simple_data_;
}
inline ::proto_ff::RoleDBSimpleData* WorldToSnsLoginReq::mutable_simple_data() {
  set_has_simple_data();
  if (simple_data_ == NULL) simple_data_ = new ::proto_ff::RoleDBSimpleData;
  return simple_data_;
}
inline ::proto_ff::RoleDBSimpleData* WorldToSnsLoginReq::release_simple_data() {
  clear_has_simple_data();
  ::proto_ff::RoleDBSimpleData* temp = simple_data_;
  simple_data_ = NULL;
  return temp;
}
inline void WorldToSnsLoginReq::set_allocated_simple_data(::proto_ff::RoleDBSimpleData* simple_data) {
  delete simple_data_;
  simple_data_ = simple_data;
  if (simple_data) {
    set_has_simple_data();
  } else {
    clear_has_simple_data();
  }
}

// -------------------------------------------------------------------

// SnsToWorldLoginRsp

// optional uint32 ret_code = 1;
inline bool SnsToWorldLoginRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsToWorldLoginRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsToWorldLoginRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsToWorldLoginRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 SnsToWorldLoginRsp::ret_code() const {
  return ret_code_;
}
inline void SnsToWorldLoginRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional uint64 uid = 2;
inline bool SnsToWorldLoginRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsToWorldLoginRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsToWorldLoginRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsToWorldLoginRsp::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 SnsToWorldLoginRsp::uid() const {
  return uid_;
}
inline void SnsToWorldLoginRsp::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint64 cid = 3;
inline bool SnsToWorldLoginRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsToWorldLoginRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsToWorldLoginRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsToWorldLoginRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 SnsToWorldLoginRsp::cid() const {
  return cid_;
}
inline void SnsToWorldLoginRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// GameToWorldRegisterMapReq

// optional uint32 game_bus = 1;
inline bool GameToWorldRegisterMapReq::has_game_bus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameToWorldRegisterMapReq::set_has_game_bus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameToWorldRegisterMapReq::clear_has_game_bus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameToWorldRegisterMapReq::clear_game_bus() {
  game_bus_ = 0u;
  clear_has_game_bus();
}
inline ::google::protobuf::uint32 GameToWorldRegisterMapReq::game_bus() const {
  return game_bus_;
}
inline void GameToWorldRegisterMapReq::set_game_bus(::google::protobuf::uint32 value) {
  set_has_game_bus();
  game_bus_ = value;
}

// repeated uint64 map_id = 2;
inline int GameToWorldRegisterMapReq::map_id_size() const {
  return map_id_.size();
}
inline void GameToWorldRegisterMapReq::clear_map_id() {
  map_id_.Clear();
}
inline ::google::protobuf::uint64 GameToWorldRegisterMapReq::map_id(int index) const {
  return map_id_.Get(index);
}
inline void GameToWorldRegisterMapReq::set_map_id(int index, ::google::protobuf::uint64 value) {
  map_id_.Set(index, value);
}
inline void GameToWorldRegisterMapReq::add_map_id(::google::protobuf::uint64 value) {
  map_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GameToWorldRegisterMapReq::map_id() const {
  return map_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GameToWorldRegisterMapReq::mutable_map_id() {
  return &map_id_;
}

// -------------------------------------------------------------------

// WorldToGameRegisterMapRsp

// optional uint32 ret_code = 1;
inline bool WorldToGameRegisterMapRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldToGameRegisterMapRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldToGameRegisterMapRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldToGameRegisterMapRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 WorldToGameRegisterMapRsp::ret_code() const {
  return ret_code_;
}
inline void WorldToGameRegisterMapRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// -------------------------------------------------------------------

// WorldToLogicLoginFinishNotify

// optional uint64 uid = 1;
inline bool WorldToLogicLoginFinishNotify::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldToLogicLoginFinishNotify::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldToLogicLoginFinishNotify::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldToLogicLoginFinishNotify::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 WorldToLogicLoginFinishNotify::uid() const {
  return uid_;
}
inline void WorldToLogicLoginFinishNotify::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint64 cid = 2;
inline bool WorldToLogicLoginFinishNotify::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldToLogicLoginFinishNotify::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldToLogicLoginFinishNotify::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldToLogicLoginFinishNotify::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 WorldToLogicLoginFinishNotify::cid() const {
  return cid_;
}
inline void WorldToLogicLoginFinishNotify::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 proxy_id = 3;
inline bool WorldToLogicLoginFinishNotify::has_proxy_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldToLogicLoginFinishNotify::set_has_proxy_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldToLogicLoginFinishNotify::clear_has_proxy_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldToLogicLoginFinishNotify::clear_proxy_id() {
  proxy_id_ = 0u;
  clear_has_proxy_id();
}
inline ::google::protobuf::uint32 WorldToLogicLoginFinishNotify::proxy_id() const {
  return proxy_id_;
}
inline void WorldToLogicLoginFinishNotify::set_proxy_id(::google::protobuf::uint32 value) {
  set_has_proxy_id();
  proxy_id_ = value;
}

// optional uint64 map_id = 4;
inline bool WorldToLogicLoginFinishNotify::has_map_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldToLogicLoginFinishNotify::set_has_map_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldToLogicLoginFinishNotify::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldToLogicLoginFinishNotify::clear_map_id() {
  map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_map_id();
}
inline ::google::protobuf::uint64 WorldToLogicLoginFinishNotify::map_id() const {
  return map_id_;
}
inline void WorldToLogicLoginFinishNotify::set_map_id(::google::protobuf::uint64 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional uint64 scene_id = 5;
inline bool WorldToLogicLoginFinishNotify::has_scene_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldToLogicLoginFinishNotify::set_has_scene_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldToLogicLoginFinishNotify::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldToLogicLoginFinishNotify::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_scene_id();
}
inline ::google::protobuf::uint64 WorldToLogicLoginFinishNotify::scene_id() const {
  return scene_id_;
}
inline void WorldToLogicLoginFinishNotify::set_scene_id(::google::protobuf::uint64 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional .proto_ff.Vector3PB pos = 6;
inline bool WorldToLogicLoginFinishNotify::has_pos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldToLogicLoginFinishNotify::set_has_pos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldToLogicLoginFinishNotify::clear_has_pos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldToLogicLoginFinishNotify::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& WorldToLogicLoginFinishNotify::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* WorldToLogicLoginFinishNotify::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* WorldToLogicLoginFinishNotify::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void WorldToLogicLoginFinishNotify::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// -------------------------------------------------------------------

// LogicToWorldEnterSceneReq

// optional uint64 cid = 1;
inline bool LogicToWorldEnterSceneReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToWorldEnterSceneReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToWorldEnterSceneReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToWorldEnterSceneReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 LogicToWorldEnterSceneReq::cid() const {
  return cid_;
}
inline void LogicToWorldEnterSceneReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 map_id = 2;
inline bool LogicToWorldEnterSceneReq::has_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToWorldEnterSceneReq::set_has_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToWorldEnterSceneReq::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToWorldEnterSceneReq::clear_map_id() {
  map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_map_id();
}
inline ::google::protobuf::uint64 LogicToWorldEnterSceneReq::map_id() const {
  return map_id_;
}
inline void LogicToWorldEnterSceneReq::set_map_id(::google::protobuf::uint64 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional uint64 scene_id = 3;
inline bool LogicToWorldEnterSceneReq::has_scene_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogicToWorldEnterSceneReq::set_has_scene_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogicToWorldEnterSceneReq::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogicToWorldEnterSceneReq::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_scene_id();
}
inline ::google::protobuf::uint64 LogicToWorldEnterSceneReq::scene_id() const {
  return scene_id_;
}
inline void LogicToWorldEnterSceneReq::set_scene_id(::google::protobuf::uint64 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional .proto_ff.Vector3PB pos = 4;
inline bool LogicToWorldEnterSceneReq::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogicToWorldEnterSceneReq::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogicToWorldEnterSceneReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogicToWorldEnterSceneReq::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& LogicToWorldEnterSceneReq::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* LogicToWorldEnterSceneReq::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* LogicToWorldEnterSceneReq::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void LogicToWorldEnterSceneReq::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional uint32 req_trans_id = 5;
inline bool LogicToWorldEnterSceneReq::has_req_trans_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogicToWorldEnterSceneReq::set_has_req_trans_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogicToWorldEnterSceneReq::clear_has_req_trans_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogicToWorldEnterSceneReq::clear_req_trans_id() {
  req_trans_id_ = 0u;
  clear_has_req_trans_id();
}
inline ::google::protobuf::uint32 LogicToWorldEnterSceneReq::req_trans_id() const {
  return req_trans_id_;
}
inline void LogicToWorldEnterSceneReq::set_req_trans_id(::google::protobuf::uint32 value) {
  set_has_req_trans_id();
  req_trans_id_ = value;
}

// optional .proto_ff.RoleEnterSceneData data = 6;
inline bool LogicToWorldEnterSceneReq::has_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogicToWorldEnterSceneReq::set_has_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogicToWorldEnterSceneReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogicToWorldEnterSceneReq::clear_data() {
  if (data_ != NULL) data_->::proto_ff::RoleEnterSceneData::Clear();
  clear_has_data();
}
inline const ::proto_ff::RoleEnterSceneData& LogicToWorldEnterSceneReq::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto_ff::RoleEnterSceneData* LogicToWorldEnterSceneReq::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto_ff::RoleEnterSceneData;
  return data_;
}
inline ::proto_ff::RoleEnterSceneData* LogicToWorldEnterSceneReq::release_data() {
  clear_has_data();
  ::proto_ff::RoleEnterSceneData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void LogicToWorldEnterSceneReq::set_allocated_data(::proto_ff::RoleEnterSceneData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// WorldToGameEnterSceneReq

// optional uint64 cid = 1;
inline bool WorldToGameEnterSceneReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldToGameEnterSceneReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldToGameEnterSceneReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldToGameEnterSceneReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 WorldToGameEnterSceneReq::cid() const {
  return cid_;
}
inline void WorldToGameEnterSceneReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 map_id = 2;
inline bool WorldToGameEnterSceneReq::has_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldToGameEnterSceneReq::set_has_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldToGameEnterSceneReq::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldToGameEnterSceneReq::clear_map_id() {
  map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_map_id();
}
inline ::google::protobuf::uint64 WorldToGameEnterSceneReq::map_id() const {
  return map_id_;
}
inline void WorldToGameEnterSceneReq::set_map_id(::google::protobuf::uint64 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional uint64 scene_id = 3;
inline bool WorldToGameEnterSceneReq::has_scene_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldToGameEnterSceneReq::set_has_scene_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldToGameEnterSceneReq::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldToGameEnterSceneReq::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_scene_id();
}
inline ::google::protobuf::uint64 WorldToGameEnterSceneReq::scene_id() const {
  return scene_id_;
}
inline void WorldToGameEnterSceneReq::set_scene_id(::google::protobuf::uint64 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional .proto_ff.Vector3PB pos = 4;
inline bool WorldToGameEnterSceneReq::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldToGameEnterSceneReq::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldToGameEnterSceneReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldToGameEnterSceneReq::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& WorldToGameEnterSceneReq::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* WorldToGameEnterSceneReq::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* WorldToGameEnterSceneReq::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void WorldToGameEnterSceneReq::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional uint32 req_trans_id = 5;
inline bool WorldToGameEnterSceneReq::has_req_trans_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldToGameEnterSceneReq::set_has_req_trans_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldToGameEnterSceneReq::clear_has_req_trans_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldToGameEnterSceneReq::clear_req_trans_id() {
  req_trans_id_ = 0u;
  clear_has_req_trans_id();
}
inline ::google::protobuf::uint32 WorldToGameEnterSceneReq::req_trans_id() const {
  return req_trans_id_;
}
inline void WorldToGameEnterSceneReq::set_req_trans_id(::google::protobuf::uint32 value) {
  set_has_req_trans_id();
  req_trans_id_ = value;
}

// optional uint32 gate_id = 6;
inline bool WorldToGameEnterSceneReq::has_gate_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldToGameEnterSceneReq::set_has_gate_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldToGameEnterSceneReq::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldToGameEnterSceneReq::clear_gate_id() {
  gate_id_ = 0u;
  clear_has_gate_id();
}
inline ::google::protobuf::uint32 WorldToGameEnterSceneReq::gate_id() const {
  return gate_id_;
}
inline void WorldToGameEnterSceneReq::set_gate_id(::google::protobuf::uint32 value) {
  set_has_gate_id();
  gate_id_ = value;
}

// optional uint32 logic_id = 7;
inline bool WorldToGameEnterSceneReq::has_logic_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorldToGameEnterSceneReq::set_has_logic_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorldToGameEnterSceneReq::clear_has_logic_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorldToGameEnterSceneReq::clear_logic_id() {
  logic_id_ = 0u;
  clear_has_logic_id();
}
inline ::google::protobuf::uint32 WorldToGameEnterSceneReq::logic_id() const {
  return logic_id_;
}
inline void WorldToGameEnterSceneReq::set_logic_id(::google::protobuf::uint32 value) {
  set_has_logic_id();
  logic_id_ = value;
}

// optional .proto_ff.RoleEnterSceneData data = 8;
inline bool WorldToGameEnterSceneReq::has_data() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WorldToGameEnterSceneReq::set_has_data() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WorldToGameEnterSceneReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WorldToGameEnterSceneReq::clear_data() {
  if (data_ != NULL) data_->::proto_ff::RoleEnterSceneData::Clear();
  clear_has_data();
}
inline const ::proto_ff::RoleEnterSceneData& WorldToGameEnterSceneReq::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto_ff::RoleEnterSceneData* WorldToGameEnterSceneReq::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto_ff::RoleEnterSceneData;
  return data_;
}
inline ::proto_ff::RoleEnterSceneData* WorldToGameEnterSceneReq::release_data() {
  clear_has_data();
  ::proto_ff::RoleEnterSceneData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void WorldToGameEnterSceneReq::set_allocated_data(::proto_ff::RoleEnterSceneData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerInternal2_2eproto__INCLUDED
