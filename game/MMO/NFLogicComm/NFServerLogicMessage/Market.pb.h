// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Market.proto

#ifndef PROTOBUF_Market_2eproto__INCLUDED
#define PROTOBUF_Market_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Market_2eproto();
void protobuf_AssignDesc_Market_2eproto();
void protobuf_ShutdownFile_Market_2eproto();

class Goods;
class MarketItemReq;
class MarketItemRsp;
class MarketRoleReq;
class MarketRoleRsp;
class NotifyNewGoods;
class MarketFollowReq;
class MarketFollowRsp;
class NotifyMarketFollow;
class MarketLogReq;
class MarketLogRsp;
class MarketRoleOptReq;
class MarketRoleOptRsp;
class NotifyMarketFactionStart;
class MarketRoleInfo;
class C2LMarketRoleUpReq;
class L2CMarketRoleUpRsp;
class C2LMarketVieReq;
class L2CMarketVieRsp;
class C2LMarketBuyReq;
class L2CMarketBuyRsp;

// ===================================================================

class Goods : public ::google::protobuf::Message {
 public:
  Goods();
  virtual ~Goods();

  Goods(const Goods& from);

  inline Goods& operator=(const Goods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Goods& default_instance();

  void Swap(Goods* other);

  // implements Message ----------------------------------------------

  Goods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Goods& from);
  void MergeFrom(const Goods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 order_id = 1;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  inline ::google::protobuf::uint64 order_id() const;
  inline void set_order_id(::google::protobuf::uint64 value);

  // optional int32 market_type = 2;
  inline bool has_market_type() const;
  inline void clear_market_type();
  static const int kMarketTypeFieldNumber = 2;
  inline ::google::protobuf::int32 market_type() const;
  inline void set_market_type(::google::protobuf::int32 value);

  // optional uint64 market_owner = 3;
  inline bool has_market_owner() const;
  inline void clear_market_owner();
  static const int kMarketOwnerFieldNumber = 3;
  inline ::google::protobuf::uint64 market_owner() const;
  inline void set_market_owner(::google::protobuf::uint64 value);

  // optional uint64 role_id = 4;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional uint64 start_time = 5;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 start_time() const;
  inline void set_start_time(::google::protobuf::uint64 value);

  // optional uint64 end_time = 6;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // optional uint64 vie_id = 7;
  inline bool has_vie_id() const;
  inline void clear_vie_id();
  static const int kVieIdFieldNumber = 7;
  inline ::google::protobuf::uint64 vie_id() const;
  inline void set_vie_id(::google::protobuf::uint64 value);

  // optional int32 state = 8;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 8;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 isdelete = 9;
  inline bool has_isdelete() const;
  inline void clear_isdelete();
  static const int kIsdeleteFieldNumber = 9;
  inline ::google::protobuf::int32 isdelete() const;
  inline void set_isdelete(::google::protobuf::int32 value);

  // optional uint64 cmpt_time = 10;
  inline bool has_cmpt_time() const;
  inline void clear_cmpt_time();
  static const int kCmptTimeFieldNumber = 10;
  inline ::google::protobuf::uint64 cmpt_time() const;
  inline void set_cmpt_time(::google::protobuf::uint64 value);

  // optional int32 cur_price = 11;
  inline bool has_cur_price() const;
  inline void clear_cur_price();
  static const int kCurPriceFieldNumber = 11;
  inline ::google::protobuf::int32 cur_price() const;
  inline void set_cur_price(::google::protobuf::int32 value);

  // optional int32 cmpt_price = 12;
  inline bool has_cmpt_price() const;
  inline void clear_cmpt_price();
  static const int kCmptPriceFieldNumber = 12;
  inline ::google::protobuf::int32 cmpt_price() const;
  inline void set_cmpt_price(::google::protobuf::int32 value);

  // optional uint64 buyer_id = 13;
  inline bool has_buyer_id() const;
  inline void clear_buyer_id();
  static const int kBuyerIdFieldNumber = 13;
  inline ::google::protobuf::uint64 buyer_id() const;
  inline void set_buyer_id(::google::protobuf::uint64 value);

  // optional .proto_ff.ItemProtoInfo item_data = 14;
  inline bool has_item_data() const;
  inline void clear_item_data();
  static const int kItemDataFieldNumber = 14;
  inline const ::proto_ff::ItemProtoInfo& item_data() const;
  inline ::proto_ff::ItemProtoInfo* mutable_item_data();
  inline ::proto_ff::ItemProtoInfo* release_item_data();
  inline void set_allocated_item_data(::proto_ff::ItemProtoInfo* item_data);

  // optional int32 item_price = 15;
  inline bool has_item_price() const;
  inline void clear_item_price();
  static const int kItemPriceFieldNumber = 15;
  inline ::google::protobuf::int32 item_price() const;
  inline void set_item_price(::google::protobuf::int32 value);

  // optional int32 take_num = 16;
  inline bool has_take_num() const;
  inline void clear_take_num();
  static const int kTakeNumFieldNumber = 16;
  inline ::google::protobuf::int32 take_num() const;
  inline void set_take_num(::google::protobuf::int32 value);

  // optional int32 has_take = 17;
  inline bool has_has_take() const;
  inline void clear_has_take();
  static const int kHasTakeFieldNumber = 17;
  inline ::google::protobuf::int32 has_take() const;
  inline void set_has_take(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Goods)
 private:
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_market_type();
  inline void clear_has_market_type();
  inline void set_has_market_owner();
  inline void clear_has_market_owner();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_vie_id();
  inline void clear_has_vie_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_isdelete();
  inline void clear_has_isdelete();
  inline void set_has_cmpt_time();
  inline void clear_has_cmpt_time();
  inline void set_has_cur_price();
  inline void clear_has_cur_price();
  inline void set_has_cmpt_price();
  inline void clear_has_cmpt_price();
  inline void set_has_buyer_id();
  inline void clear_has_buyer_id();
  inline void set_has_item_data();
  inline void clear_has_item_data();
  inline void set_has_item_price();
  inline void clear_has_item_price();
  inline void set_has_take_num();
  inline void clear_has_take_num();
  inline void set_has_has_take();
  inline void clear_has_has_take();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 order_id_;
  ::google::protobuf::uint64 market_owner_;
  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::int32 market_type_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::uint64 end_time_;
  ::google::protobuf::uint64 vie_id_;
  ::google::protobuf::uint64 cmpt_time_;
  ::google::protobuf::int32 isdelete_;
  ::google::protobuf::int32 cur_price_;
  ::google::protobuf::uint64 buyer_id_;
  ::google::protobuf::int32 cmpt_price_;
  ::google::protobuf::int32 item_price_;
  ::proto_ff::ItemProtoInfo* item_data_;
  ::google::protobuf::int32 take_num_;
  ::google::protobuf::int32 has_take_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static Goods* default_instance_;
};
// -------------------------------------------------------------------

class MarketItemReq : public ::google::protobuf::Message {
 public:
  MarketItemReq();
  virtual ~MarketItemReq();

  MarketItemReq(const MarketItemReq& from);

  inline MarketItemReq& operator=(const MarketItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketItemReq& default_instance();

  void Swap(MarketItemReq* other);

  // implements Message ----------------------------------------------

  MarketItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketItemReq& from);
  void MergeFrom(const MarketItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 market_type = 1;
  inline bool has_market_type() const;
  inline void clear_market_type();
  static const int kMarketTypeFieldNumber = 1;
  inline ::google::protobuf::int32 market_type() const;
  inline void set_market_type(::google::protobuf::int32 value);

  // optional int32 bigId = 2;
  inline bool has_bigid() const;
  inline void clear_bigid();
  static const int kBigIdFieldNumber = 2;
  inline ::google::protobuf::int32 bigid() const;
  inline void set_bigid(::google::protobuf::int32 value);

  // optional int32 smallId = 3;
  inline bool has_smallid() const;
  inline void clear_smallid();
  static const int kSmallIdFieldNumber = 3;
  inline ::google::protobuf::int32 smallid() const;
  inline void set_smallid(::google::protobuf::int32 value);

  // optional int32 sort_type = 4;
  inline bool has_sort_type() const;
  inline void clear_sort_type();
  static const int kSortTypeFieldNumber = 4;
  inline ::google::protobuf::int32 sort_type() const;
  inline void set_sort_type(::google::protobuf::int32 value);

  // optional int32 fiter_star = 5;
  inline bool has_fiter_star() const;
  inline void clear_fiter_star();
  static const int kFiterStarFieldNumber = 5;
  inline ::google::protobuf::int32 fiter_star() const;
  inline void set_fiter_star(::google::protobuf::int32 value);

  // optional int32 is_same_prof = 6;
  inline bool has_is_same_prof() const;
  inline void clear_is_same_prof();
  static const int kIsSameProfFieldNumber = 6;
  inline ::google::protobuf::int32 is_same_prof() const;
  inline void set_is_same_prof(::google::protobuf::int32 value);

  // optional int32 cur_page = 7;
  inline bool has_cur_page() const;
  inline void clear_cur_page();
  static const int kCurPageFieldNumber = 7;
  inline ::google::protobuf::int32 cur_page() const;
  inline void set_cur_page(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarketItemReq)
 private:
  inline void set_has_market_type();
  inline void clear_has_market_type();
  inline void set_has_bigid();
  inline void clear_has_bigid();
  inline void set_has_smallid();
  inline void clear_has_smallid();
  inline void set_has_sort_type();
  inline void clear_has_sort_type();
  inline void set_has_fiter_star();
  inline void clear_has_fiter_star();
  inline void set_has_is_same_prof();
  inline void clear_has_is_same_prof();
  inline void set_has_cur_page();
  inline void clear_has_cur_page();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 market_type_;
  ::google::protobuf::int32 bigid_;
  ::google::protobuf::int32 smallid_;
  ::google::protobuf::int32 sort_type_;
  ::google::protobuf::int32 fiter_star_;
  ::google::protobuf::int32 is_same_prof_;
  ::google::protobuf::int32 cur_page_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketItemReq* default_instance_;
};
// -------------------------------------------------------------------

class MarketItemRsp : public ::google::protobuf::Message {
 public:
  MarketItemRsp();
  virtual ~MarketItemRsp();

  MarketItemRsp(const MarketItemRsp& from);

  inline MarketItemRsp& operator=(const MarketItemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketItemRsp& default_instance();

  void Swap(MarketItemRsp* other);

  // implements Message ----------------------------------------------

  MarketItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketItemRsp& from);
  void MergeFrom(const MarketItemRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 market_type = 1;
  inline bool has_market_type() const;
  inline void clear_market_type();
  static const int kMarketTypeFieldNumber = 1;
  inline ::google::protobuf::int32 market_type() const;
  inline void set_market_type(::google::protobuf::int32 value);

  // optional int32 bigId = 2;
  inline bool has_bigid() const;
  inline void clear_bigid();
  static const int kBigIdFieldNumber = 2;
  inline ::google::protobuf::int32 bigid() const;
  inline void set_bigid(::google::protobuf::int32 value);

  // optional int32 smallId = 3;
  inline bool has_smallid() const;
  inline void clear_smallid();
  static const int kSmallIdFieldNumber = 3;
  inline ::google::protobuf::int32 smallid() const;
  inline void set_smallid(::google::protobuf::int32 value);

  // optional int32 sort_type = 4;
  inline bool has_sort_type() const;
  inline void clear_sort_type();
  static const int kSortTypeFieldNumber = 4;
  inline ::google::protobuf::int32 sort_type() const;
  inline void set_sort_type(::google::protobuf::int32 value);

  // optional int32 fiter_star = 5;
  inline bool has_fiter_star() const;
  inline void clear_fiter_star();
  static const int kFiterStarFieldNumber = 5;
  inline ::google::protobuf::int32 fiter_star() const;
  inline void set_fiter_star(::google::protobuf::int32 value);

  // optional int32 is_same_prof = 6;
  inline bool has_is_same_prof() const;
  inline void clear_is_same_prof();
  static const int kIsSameProfFieldNumber = 6;
  inline ::google::protobuf::int32 is_same_prof() const;
  inline void set_is_same_prof(::google::protobuf::int32 value);

  // repeated .proto_ff.Goods infos = 7;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 7;
  inline const ::proto_ff::Goods& infos(int index) const;
  inline ::proto_ff::Goods* mutable_infos(int index);
  inline ::proto_ff::Goods* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >*
      mutable_infos();

  // optional int32 cur_page = 8;
  inline bool has_cur_page() const;
  inline void clear_cur_page();
  static const int kCurPageFieldNumber = 8;
  inline ::google::protobuf::int32 cur_page() const;
  inline void set_cur_page(::google::protobuf::int32 value);

  // optional int32 all_page = 9;
  inline bool has_all_page() const;
  inline void clear_all_page();
  static const int kAllPageFieldNumber = 9;
  inline ::google::protobuf::int32 all_page() const;
  inline void set_all_page(::google::protobuf::int32 value);

  // repeated .proto_ff.ComPair small_view = 10;
  inline int small_view_size() const;
  inline void clear_small_view();
  static const int kSmallViewFieldNumber = 10;
  inline const ::proto_ff::ComPair& small_view(int index) const;
  inline ::proto_ff::ComPair* mutable_small_view(int index);
  inline ::proto_ff::ComPair* add_small_view();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      small_view() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_small_view();

  // @@protoc_insertion_point(class_scope:proto_ff.MarketItemRsp)
 private:
  inline void set_has_market_type();
  inline void clear_has_market_type();
  inline void set_has_bigid();
  inline void clear_has_bigid();
  inline void set_has_smallid();
  inline void clear_has_smallid();
  inline void set_has_sort_type();
  inline void clear_has_sort_type();
  inline void set_has_fiter_star();
  inline void clear_has_fiter_star();
  inline void set_has_is_same_prof();
  inline void clear_has_is_same_prof();
  inline void set_has_cur_page();
  inline void clear_has_cur_page();
  inline void set_has_all_page();
  inline void clear_has_all_page();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 market_type_;
  ::google::protobuf::int32 bigid_;
  ::google::protobuf::int32 smallid_;
  ::google::protobuf::int32 sort_type_;
  ::google::protobuf::int32 fiter_star_;
  ::google::protobuf::int32 is_same_prof_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods > infos_;
  ::google::protobuf::int32 cur_page_;
  ::google::protobuf::int32 all_page_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > small_view_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketItemRsp* default_instance_;
};
// -------------------------------------------------------------------

class MarketRoleReq : public ::google::protobuf::Message {
 public:
  MarketRoleReq();
  virtual ~MarketRoleReq();

  MarketRoleReq(const MarketRoleReq& from);

  inline MarketRoleReq& operator=(const MarketRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketRoleReq& default_instance();

  void Swap(MarketRoleReq* other);

  // implements Message ----------------------------------------------

  MarketRoleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketRoleReq& from);
  void MergeFrom(const MarketRoleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarketRoleReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketRoleReq* default_instance_;
};
// -------------------------------------------------------------------

class MarketRoleRsp : public ::google::protobuf::Message {
 public:
  MarketRoleRsp();
  virtual ~MarketRoleRsp();

  MarketRoleRsp(const MarketRoleRsp& from);

  inline MarketRoleRsp& operator=(const MarketRoleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketRoleRsp& default_instance();

  void Swap(MarketRoleRsp* other);

  // implements Message ----------------------------------------------

  MarketRoleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketRoleRsp& from);
  void MergeFrom(const MarketRoleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .proto_ff.Goods infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::proto_ff::Goods& infos(int index) const;
  inline ::proto_ff::Goods* mutable_infos(int index);
  inline ::proto_ff::Goods* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.MarketRoleRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods > infos_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketRoleRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyNewGoods : public ::google::protobuf::Message {
 public:
  NotifyNewGoods();
  virtual ~NotifyNewGoods();

  NotifyNewGoods(const NotifyNewGoods& from);

  inline NotifyNewGoods& operator=(const NotifyNewGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyNewGoods& default_instance();

  void Swap(NotifyNewGoods* other);

  // implements Message ----------------------------------------------

  NotifyNewGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyNewGoods& from);
  void MergeFrom(const NotifyNewGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 market_type = 2;
  inline bool has_market_type() const;
  inline void clear_market_type();
  static const int kMarketTypeFieldNumber = 2;
  inline ::google::protobuf::int32 market_type() const;
  inline void set_market_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyNewGoods)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_market_type();
  inline void clear_has_market_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 market_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static NotifyNewGoods* default_instance_;
};
// -------------------------------------------------------------------

class MarketFollowReq : public ::google::protobuf::Message {
 public:
  MarketFollowReq();
  virtual ~MarketFollowReq();

  MarketFollowReq(const MarketFollowReq& from);

  inline MarketFollowReq& operator=(const MarketFollowReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketFollowReq& default_instance();

  void Swap(MarketFollowReq* other);

  // implements Message ----------------------------------------------

  MarketFollowReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketFollowReq& from);
  void MergeFrom(const MarketFollowReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 item_id() const;
  inline void set_item_id(::google::protobuf::int32 value);

  // optional int32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarketFollowReq)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketFollowReq* default_instance_;
};
// -------------------------------------------------------------------

class MarketFollowRsp : public ::google::protobuf::Message {
 public:
  MarketFollowRsp();
  virtual ~MarketFollowRsp();

  MarketFollowRsp(const MarketFollowRsp& from);

  inline MarketFollowRsp& operator=(const MarketFollowRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketFollowRsp& default_instance();

  void Swap(MarketFollowRsp* other);

  // implements Message ----------------------------------------------

  MarketFollowRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketFollowRsp& from);
  void MergeFrom(const MarketFollowRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 item_id() const;
  inline void set_item_id(::google::protobuf::int32 value);

  // optional int32 opt = 3;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 3;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarketFollowRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketFollowRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarketFollow : public ::google::protobuf::Message {
 public:
  NotifyMarketFollow();
  virtual ~NotifyMarketFollow();

  NotifyMarketFollow(const NotifyMarketFollow& from);

  inline NotifyMarketFollow& operator=(const NotifyMarketFollow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarketFollow& default_instance();

  void Swap(NotifyMarketFollow* other);

  // implements Message ----------------------------------------------

  NotifyMarketFollow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarketFollow& from);
  void MergeFrom(const NotifyMarketFollow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 follow_ids = 1;
  inline int follow_ids_size() const;
  inline void clear_follow_ids();
  static const int kFollowIdsFieldNumber = 1;
  inline ::google::protobuf::int32 follow_ids(int index) const;
  inline void set_follow_ids(int index, ::google::protobuf::int32 value);
  inline void add_follow_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      follow_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_follow_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarketFollow)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > follow_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarketFollow* default_instance_;
};
// -------------------------------------------------------------------

class MarketLogReq : public ::google::protobuf::Message {
 public:
  MarketLogReq();
  virtual ~MarketLogReq();

  MarketLogReq(const MarketLogReq& from);

  inline MarketLogReq& operator=(const MarketLogReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketLogReq& default_instance();

  void Swap(MarketLogReq* other);

  // implements Message ----------------------------------------------

  MarketLogReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketLogReq& from);
  void MergeFrom(const MarketLogReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarketLogReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketLogReq* default_instance_;
};
// -------------------------------------------------------------------

class MarketLogRsp : public ::google::protobuf::Message {
 public:
  MarketLogRsp();
  virtual ~MarketLogRsp();

  MarketLogRsp(const MarketLogRsp& from);

  inline MarketLogRsp& operator=(const MarketLogRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketLogRsp& default_instance();

  void Swap(MarketLogRsp* other);

  // implements Message ----------------------------------------------

  MarketLogRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketLogRsp& from);
  void MergeFrom(const MarketLogRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .proto_ff.Goods list = 2;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 2;
  inline const ::proto_ff::Goods& list(int index) const;
  inline ::proto_ff::Goods* mutable_list(int index);
  inline ::proto_ff::Goods* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:proto_ff.MarketLogRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods > list_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketLogRsp* default_instance_;
};
// -------------------------------------------------------------------

class MarketRoleOptReq : public ::google::protobuf::Message {
 public:
  MarketRoleOptReq();
  virtual ~MarketRoleOptReq();

  MarketRoleOptReq(const MarketRoleOptReq& from);

  inline MarketRoleOptReq& operator=(const MarketRoleOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketRoleOptReq& default_instance();

  void Swap(MarketRoleOptReq* other);

  // implements Message ----------------------------------------------

  MarketRoleOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketRoleOptReq& from);
  void MergeFrom(const MarketRoleOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 package_type = 2;
  inline bool has_package_type() const;
  inline void clear_package_type();
  static const int kPackageTypeFieldNumber = 2;
  inline ::google::protobuf::int32 package_type() const;
  inline void set_package_type(::google::protobuf::int32 value);

  // optional int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 price = 5;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 5;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional uint64 order_id = 6;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 6;
  inline ::google::protobuf::uint64 order_id() const;
  inline void set_order_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarketRoleOptReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_package_type();
  inline void clear_has_package_type();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_order_id();
  inline void clear_has_order_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 package_type_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::uint64 order_id_;
  ::google::protobuf::int32 price_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketRoleOptReq* default_instance_;
};
// -------------------------------------------------------------------

class MarketRoleOptRsp : public ::google::protobuf::Message {
 public:
  MarketRoleOptRsp();
  virtual ~MarketRoleOptRsp();

  MarketRoleOptRsp(const MarketRoleOptRsp& from);

  inline MarketRoleOptRsp& operator=(const MarketRoleOptRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketRoleOptRsp& default_instance();

  void Swap(MarketRoleOptRsp* other);

  // implements Message ----------------------------------------------

  MarketRoleOptRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketRoleOptRsp& from);
  void MergeFrom(const MarketRoleOptRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional .proto_ff.Goods info = 5;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 5;
  inline const ::proto_ff::Goods& info() const;
  inline ::proto_ff::Goods* mutable_info();
  inline ::proto_ff::Goods* release_info();
  inline void set_allocated_info(::proto_ff::Goods* info);

  // @@protoc_insertion_point(class_scope:proto_ff.MarketRoleOptRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 num_;
  ::proto_ff::Goods* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketRoleOptRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarketFactionStart : public ::google::protobuf::Message {
 public:
  NotifyMarketFactionStart();
  virtual ~NotifyMarketFactionStart();

  NotifyMarketFactionStart(const NotifyMarketFactionStart& from);

  inline NotifyMarketFactionStart& operator=(const NotifyMarketFactionStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarketFactionStart& default_instance();

  void Swap(NotifyMarketFactionStart* other);

  // implements Message ----------------------------------------------

  NotifyMarketFactionStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarketFactionStart& from);
  void MergeFrom(const NotifyMarketFactionStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarketFactionStart)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarketFactionStart* default_instance_;
};
// -------------------------------------------------------------------

class MarketRoleInfo : public ::google::protobuf::Message {
 public:
  MarketRoleInfo();
  virtual ~MarketRoleInfo();

  MarketRoleInfo(const MarketRoleInfo& from);

  inline MarketRoleInfo& operator=(const MarketRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketRoleInfo& default_instance();

  void Swap(MarketRoleInfo* other);

  // implements Message ----------------------------------------------

  MarketRoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketRoleInfo& from);
  void MergeFrom(const MarketRoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 refresh_time = 2;
  inline bool has_refresh_time() const;
  inline void clear_refresh_time();
  static const int kRefreshTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 refresh_time() const;
  inline void set_refresh_time(::google::protobuf::uint64 value);

  // repeated int32 follow_ids = 3;
  inline int follow_ids_size() const;
  inline void clear_follow_ids();
  static const int kFollowIdsFieldNumber = 3;
  inline ::google::protobuf::int32 follow_ids(int index) const;
  inline void set_follow_ids(int index, ::google::protobuf::int32 value);
  inline void add_follow_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      follow_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_follow_ids();

  // optional int32 recovery_num = 4;
  inline bool has_recovery_num() const;
  inline void clear_recovery_num();
  static const int kRecoveryNumFieldNumber = 4;
  inline ::google::protobuf::int32 recovery_num() const;
  inline void set_recovery_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarketRoleInfo)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_refresh_time();
  inline void clear_has_refresh_time();
  inline void set_has_recovery_num();
  inline void clear_has_recovery_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 refresh_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > follow_ids_;
  ::google::protobuf::int32 recovery_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static MarketRoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class C2LMarketRoleUpReq : public ::google::protobuf::Message {
 public:
  C2LMarketRoleUpReq();
  virtual ~C2LMarketRoleUpReq();

  C2LMarketRoleUpReq(const C2LMarketRoleUpReq& from);

  inline C2LMarketRoleUpReq& operator=(const C2LMarketRoleUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LMarketRoleUpReq& default_instance();

  void Swap(C2LMarketRoleUpReq* other);

  // implements Message ----------------------------------------------

  C2LMarketRoleUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LMarketRoleUpReq& from);
  void MergeFrom(const C2LMarketRoleUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 package_type = 2;
  inline bool has_package_type() const;
  inline void clear_package_type();
  static const int kPackageTypeFieldNumber = 2;
  inline ::google::protobuf::int32 package_type() const;
  inline void set_package_type(::google::protobuf::int32 value);

  // optional int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional uint64 role_id = 5;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 5;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LMarketRoleUpReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_package_type();
  inline void clear_has_package_type();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 package_type_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::uint64 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static C2LMarketRoleUpReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CMarketRoleUpRsp : public ::google::protobuf::Message {
 public:
  L2CMarketRoleUpRsp();
  virtual ~L2CMarketRoleUpRsp();

  L2CMarketRoleUpRsp(const L2CMarketRoleUpRsp& from);

  inline L2CMarketRoleUpRsp& operator=(const L2CMarketRoleUpRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CMarketRoleUpRsp& default_instance();

  void Swap(L2CMarketRoleUpRsp* other);

  // implements Message ----------------------------------------------

  L2CMarketRoleUpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CMarketRoleUpRsp& from);
  void MergeFrom(const L2CMarketRoleUpRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 package_type = 3;
  inline bool has_package_type() const;
  inline void clear_package_type();
  static const int kPackageTypeFieldNumber = 3;
  inline ::google::protobuf::int32 package_type() const;
  inline void set_package_type(::google::protobuf::int32 value);

  // optional int32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional uint64 role_id = 6;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 6;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional .proto_ff.ItemProtoInfo item_data = 7;
  inline bool has_item_data() const;
  inline void clear_item_data();
  static const int kItemDataFieldNumber = 7;
  inline const ::proto_ff::ItemProtoInfo& item_data() const;
  inline ::proto_ff::ItemProtoInfo* mutable_item_data();
  inline ::proto_ff::ItemProtoInfo* release_item_data();
  inline void set_allocated_item_data(::proto_ff::ItemProtoInfo* item_data);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CMarketRoleUpRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_package_type();
  inline void clear_has_package_type();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_item_data();
  inline void clear_has_item_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 package_type_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::uint64 role_id_;
  ::proto_ff::ItemProtoInfo* item_data_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static L2CMarketRoleUpRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2LMarketVieReq : public ::google::protobuf::Message {
 public:
  C2LMarketVieReq();
  virtual ~C2LMarketVieReq();

  C2LMarketVieReq(const C2LMarketVieReq& from);

  inline C2LMarketVieReq& operator=(const C2LMarketVieReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LMarketVieReq& default_instance();

  void Swap(C2LMarketVieReq* other);

  // implements Message ----------------------------------------------

  C2LMarketVieReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LMarketVieReq& from);
  void MergeFrom(const C2LMarketVieReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional int32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional int32 price_type = 4;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 4;
  inline ::google::protobuf::int32 price_type() const;
  inline void set_price_type(::google::protobuf::int32 value);

  // optional int32 opt = 5;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 5;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional uint64 order_id = 6;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 6;
  inline ::google::protobuf::uint64 order_id() const;
  inline void set_order_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LMarketVieReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_order_id();
  inline void clear_has_order_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 price_type_;
  ::google::protobuf::int32 opt_;
  ::google::protobuf::uint64 order_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static C2LMarketVieReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CMarketVieRsp : public ::google::protobuf::Message {
 public:
  L2CMarketVieRsp();
  virtual ~L2CMarketVieRsp();

  L2CMarketVieRsp(const L2CMarketVieRsp& from);

  inline L2CMarketVieRsp& operator=(const L2CMarketVieRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CMarketVieRsp& default_instance();

  void Swap(L2CMarketVieRsp* other);

  // implements Message ----------------------------------------------

  L2CMarketVieRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CMarketVieRsp& from);
  void MergeFrom(const L2CMarketVieRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional uint64 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional int32 price = 4;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 4;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional int32 price_type = 5;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 5;
  inline ::google::protobuf::int32 price_type() const;
  inline void set_price_type(::google::protobuf::int32 value);

  // optional uint64 order_id = 6;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 6;
  inline ::google::protobuf::uint64 order_id() const;
  inline void set_order_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CMarketVieRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_order_id();
  inline void clear_has_order_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 price_type_;
  ::google::protobuf::uint64 order_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static L2CMarketVieRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2LMarketBuyReq : public ::google::protobuf::Message {
 public:
  C2LMarketBuyReq();
  virtual ~C2LMarketBuyReq();

  C2LMarketBuyReq(const C2LMarketBuyReq& from);

  inline C2LMarketBuyReq& operator=(const C2LMarketBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LMarketBuyReq& default_instance();

  void Swap(C2LMarketBuyReq* other);

  // implements Message ----------------------------------------------

  C2LMarketBuyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LMarketBuyReq& from);
  void MergeFrom(const C2LMarketBuyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional int32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional int32 price_type = 4;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 4;
  inline ::google::protobuf::int32 price_type() const;
  inline void set_price_type(::google::protobuf::int32 value);

  // optional int32 opt = 5;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 5;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional uint64 order_id = 6;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 6;
  inline ::google::protobuf::uint64 order_id() const;
  inline void set_order_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LMarketBuyReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_order_id();
  inline void clear_has_order_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 price_type_;
  ::google::protobuf::int32 opt_;
  ::google::protobuf::uint64 order_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static C2LMarketBuyReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CMarketBuyRsp : public ::google::protobuf::Message {
 public:
  L2CMarketBuyRsp();
  virtual ~L2CMarketBuyRsp();

  L2CMarketBuyRsp(const L2CMarketBuyRsp& from);

  inline L2CMarketBuyRsp& operator=(const L2CMarketBuyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CMarketBuyRsp& default_instance();

  void Swap(L2CMarketBuyRsp* other);

  // implements Message ----------------------------------------------

  L2CMarketBuyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CMarketBuyRsp& from);
  void MergeFrom(const L2CMarketBuyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional uint64 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional int32 price = 4;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 4;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional int32 price_type = 5;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 5;
  inline ::google::protobuf::int32 price_type() const;
  inline void set_price_type(::google::protobuf::int32 value);

  // optional uint64 order_id = 6;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 6;
  inline ::google::protobuf::uint64 order_id() const;
  inline void set_order_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CMarketBuyRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_order_id();
  inline void clear_has_order_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 price_type_;
  ::google::protobuf::uint64 order_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Market_2eproto();
  friend void protobuf_AssignDesc_Market_2eproto();
  friend void protobuf_ShutdownFile_Market_2eproto();

  void InitAsDefaultInstance();
  static L2CMarketBuyRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// Goods

// optional uint64 order_id = 1;
inline bool Goods::has_order_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Goods::set_has_order_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Goods::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Goods::clear_order_id() {
  order_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_id();
}
inline ::google::protobuf::uint64 Goods::order_id() const {
  return order_id_;
}
inline void Goods::set_order_id(::google::protobuf::uint64 value) {
  set_has_order_id();
  order_id_ = value;
}

// optional int32 market_type = 2;
inline bool Goods::has_market_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Goods::set_has_market_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Goods::clear_has_market_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Goods::clear_market_type() {
  market_type_ = 0;
  clear_has_market_type();
}
inline ::google::protobuf::int32 Goods::market_type() const {
  return market_type_;
}
inline void Goods::set_market_type(::google::protobuf::int32 value) {
  set_has_market_type();
  market_type_ = value;
}

// optional uint64 market_owner = 3;
inline bool Goods::has_market_owner() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Goods::set_has_market_owner() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Goods::clear_has_market_owner() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Goods::clear_market_owner() {
  market_owner_ = GOOGLE_ULONGLONG(0);
  clear_has_market_owner();
}
inline ::google::protobuf::uint64 Goods::market_owner() const {
  return market_owner_;
}
inline void Goods::set_market_owner(::google::protobuf::uint64 value) {
  set_has_market_owner();
  market_owner_ = value;
}

// optional uint64 role_id = 4;
inline bool Goods::has_role_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Goods::set_has_role_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Goods::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Goods::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 Goods::role_id() const {
  return role_id_;
}
inline void Goods::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint64 start_time = 5;
inline bool Goods::has_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Goods::set_has_start_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Goods::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Goods::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::uint64 Goods::start_time() const {
  return start_time_;
}
inline void Goods::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional uint64 end_time = 6;
inline bool Goods::has_end_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Goods::set_has_end_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Goods::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Goods::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 Goods::end_time() const {
  return end_time_;
}
inline void Goods::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional uint64 vie_id = 7;
inline bool Goods::has_vie_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Goods::set_has_vie_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Goods::clear_has_vie_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Goods::clear_vie_id() {
  vie_id_ = GOOGLE_ULONGLONG(0);
  clear_has_vie_id();
}
inline ::google::protobuf::uint64 Goods::vie_id() const {
  return vie_id_;
}
inline void Goods::set_vie_id(::google::protobuf::uint64 value) {
  set_has_vie_id();
  vie_id_ = value;
}

// optional int32 state = 8;
inline bool Goods::has_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Goods::set_has_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Goods::clear_has_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Goods::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 Goods::state() const {
  return state_;
}
inline void Goods::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 isdelete = 9;
inline bool Goods::has_isdelete() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Goods::set_has_isdelete() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Goods::clear_has_isdelete() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Goods::clear_isdelete() {
  isdelete_ = 0;
  clear_has_isdelete();
}
inline ::google::protobuf::int32 Goods::isdelete() const {
  return isdelete_;
}
inline void Goods::set_isdelete(::google::protobuf::int32 value) {
  set_has_isdelete();
  isdelete_ = value;
}

// optional uint64 cmpt_time = 10;
inline bool Goods::has_cmpt_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Goods::set_has_cmpt_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Goods::clear_has_cmpt_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Goods::clear_cmpt_time() {
  cmpt_time_ = GOOGLE_ULONGLONG(0);
  clear_has_cmpt_time();
}
inline ::google::protobuf::uint64 Goods::cmpt_time() const {
  return cmpt_time_;
}
inline void Goods::set_cmpt_time(::google::protobuf::uint64 value) {
  set_has_cmpt_time();
  cmpt_time_ = value;
}

// optional int32 cur_price = 11;
inline bool Goods::has_cur_price() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Goods::set_has_cur_price() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Goods::clear_has_cur_price() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Goods::clear_cur_price() {
  cur_price_ = 0;
  clear_has_cur_price();
}
inline ::google::protobuf::int32 Goods::cur_price() const {
  return cur_price_;
}
inline void Goods::set_cur_price(::google::protobuf::int32 value) {
  set_has_cur_price();
  cur_price_ = value;
}

// optional int32 cmpt_price = 12;
inline bool Goods::has_cmpt_price() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Goods::set_has_cmpt_price() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Goods::clear_has_cmpt_price() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Goods::clear_cmpt_price() {
  cmpt_price_ = 0;
  clear_has_cmpt_price();
}
inline ::google::protobuf::int32 Goods::cmpt_price() const {
  return cmpt_price_;
}
inline void Goods::set_cmpt_price(::google::protobuf::int32 value) {
  set_has_cmpt_price();
  cmpt_price_ = value;
}

// optional uint64 buyer_id = 13;
inline bool Goods::has_buyer_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Goods::set_has_buyer_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Goods::clear_has_buyer_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Goods::clear_buyer_id() {
  buyer_id_ = GOOGLE_ULONGLONG(0);
  clear_has_buyer_id();
}
inline ::google::protobuf::uint64 Goods::buyer_id() const {
  return buyer_id_;
}
inline void Goods::set_buyer_id(::google::protobuf::uint64 value) {
  set_has_buyer_id();
  buyer_id_ = value;
}

// optional .proto_ff.ItemProtoInfo item_data = 14;
inline bool Goods::has_item_data() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Goods::set_has_item_data() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Goods::clear_has_item_data() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Goods::clear_item_data() {
  if (item_data_ != NULL) item_data_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_item_data();
}
inline const ::proto_ff::ItemProtoInfo& Goods::item_data() const {
  return item_data_ != NULL ? *item_data_ : *default_instance_->item_data_;
}
inline ::proto_ff::ItemProtoInfo* Goods::mutable_item_data() {
  set_has_item_data();
  if (item_data_ == NULL) item_data_ = new ::proto_ff::ItemProtoInfo;
  return item_data_;
}
inline ::proto_ff::ItemProtoInfo* Goods::release_item_data() {
  clear_has_item_data();
  ::proto_ff::ItemProtoInfo* temp = item_data_;
  item_data_ = NULL;
  return temp;
}
inline void Goods::set_allocated_item_data(::proto_ff::ItemProtoInfo* item_data) {
  delete item_data_;
  item_data_ = item_data;
  if (item_data) {
    set_has_item_data();
  } else {
    clear_has_item_data();
  }
}

// optional int32 item_price = 15;
inline bool Goods::has_item_price() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Goods::set_has_item_price() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Goods::clear_has_item_price() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Goods::clear_item_price() {
  item_price_ = 0;
  clear_has_item_price();
}
inline ::google::protobuf::int32 Goods::item_price() const {
  return item_price_;
}
inline void Goods::set_item_price(::google::protobuf::int32 value) {
  set_has_item_price();
  item_price_ = value;
}

// optional int32 take_num = 16;
inline bool Goods::has_take_num() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Goods::set_has_take_num() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Goods::clear_has_take_num() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Goods::clear_take_num() {
  take_num_ = 0;
  clear_has_take_num();
}
inline ::google::protobuf::int32 Goods::take_num() const {
  return take_num_;
}
inline void Goods::set_take_num(::google::protobuf::int32 value) {
  set_has_take_num();
  take_num_ = value;
}

// optional int32 has_take = 17;
inline bool Goods::has_has_take() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Goods::set_has_has_take() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Goods::clear_has_has_take() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Goods::clear_has_take() {
  has_take_ = 0;
  clear_has_has_take();
}
inline ::google::protobuf::int32 Goods::has_take() const {
  return has_take_;
}
inline void Goods::set_has_take(::google::protobuf::int32 value) {
  set_has_has_take();
  has_take_ = value;
}

// -------------------------------------------------------------------

// MarketItemReq

// optional int32 market_type = 1;
inline bool MarketItemReq::has_market_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketItemReq::set_has_market_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketItemReq::clear_has_market_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketItemReq::clear_market_type() {
  market_type_ = 0;
  clear_has_market_type();
}
inline ::google::protobuf::int32 MarketItemReq::market_type() const {
  return market_type_;
}
inline void MarketItemReq::set_market_type(::google::protobuf::int32 value) {
  set_has_market_type();
  market_type_ = value;
}

// optional int32 bigId = 2;
inline bool MarketItemReq::has_bigid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketItemReq::set_has_bigid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketItemReq::clear_has_bigid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketItemReq::clear_bigid() {
  bigid_ = 0;
  clear_has_bigid();
}
inline ::google::protobuf::int32 MarketItemReq::bigid() const {
  return bigid_;
}
inline void MarketItemReq::set_bigid(::google::protobuf::int32 value) {
  set_has_bigid();
  bigid_ = value;
}

// optional int32 smallId = 3;
inline bool MarketItemReq::has_smallid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarketItemReq::set_has_smallid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarketItemReq::clear_has_smallid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarketItemReq::clear_smallid() {
  smallid_ = 0;
  clear_has_smallid();
}
inline ::google::protobuf::int32 MarketItemReq::smallid() const {
  return smallid_;
}
inline void MarketItemReq::set_smallid(::google::protobuf::int32 value) {
  set_has_smallid();
  smallid_ = value;
}

// optional int32 sort_type = 4;
inline bool MarketItemReq::has_sort_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarketItemReq::set_has_sort_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarketItemReq::clear_has_sort_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarketItemReq::clear_sort_type() {
  sort_type_ = 0;
  clear_has_sort_type();
}
inline ::google::protobuf::int32 MarketItemReq::sort_type() const {
  return sort_type_;
}
inline void MarketItemReq::set_sort_type(::google::protobuf::int32 value) {
  set_has_sort_type();
  sort_type_ = value;
}

// optional int32 fiter_star = 5;
inline bool MarketItemReq::has_fiter_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MarketItemReq::set_has_fiter_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MarketItemReq::clear_has_fiter_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MarketItemReq::clear_fiter_star() {
  fiter_star_ = 0;
  clear_has_fiter_star();
}
inline ::google::protobuf::int32 MarketItemReq::fiter_star() const {
  return fiter_star_;
}
inline void MarketItemReq::set_fiter_star(::google::protobuf::int32 value) {
  set_has_fiter_star();
  fiter_star_ = value;
}

// optional int32 is_same_prof = 6;
inline bool MarketItemReq::has_is_same_prof() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MarketItemReq::set_has_is_same_prof() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MarketItemReq::clear_has_is_same_prof() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MarketItemReq::clear_is_same_prof() {
  is_same_prof_ = 0;
  clear_has_is_same_prof();
}
inline ::google::protobuf::int32 MarketItemReq::is_same_prof() const {
  return is_same_prof_;
}
inline void MarketItemReq::set_is_same_prof(::google::protobuf::int32 value) {
  set_has_is_same_prof();
  is_same_prof_ = value;
}

// optional int32 cur_page = 7;
inline bool MarketItemReq::has_cur_page() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MarketItemReq::set_has_cur_page() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MarketItemReq::clear_has_cur_page() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MarketItemReq::clear_cur_page() {
  cur_page_ = 0;
  clear_has_cur_page();
}
inline ::google::protobuf::int32 MarketItemReq::cur_page() const {
  return cur_page_;
}
inline void MarketItemReq::set_cur_page(::google::protobuf::int32 value) {
  set_has_cur_page();
  cur_page_ = value;
}

// -------------------------------------------------------------------

// MarketItemRsp

// optional int32 market_type = 1;
inline bool MarketItemRsp::has_market_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketItemRsp::set_has_market_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketItemRsp::clear_has_market_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketItemRsp::clear_market_type() {
  market_type_ = 0;
  clear_has_market_type();
}
inline ::google::protobuf::int32 MarketItemRsp::market_type() const {
  return market_type_;
}
inline void MarketItemRsp::set_market_type(::google::protobuf::int32 value) {
  set_has_market_type();
  market_type_ = value;
}

// optional int32 bigId = 2;
inline bool MarketItemRsp::has_bigid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketItemRsp::set_has_bigid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketItemRsp::clear_has_bigid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketItemRsp::clear_bigid() {
  bigid_ = 0;
  clear_has_bigid();
}
inline ::google::protobuf::int32 MarketItemRsp::bigid() const {
  return bigid_;
}
inline void MarketItemRsp::set_bigid(::google::protobuf::int32 value) {
  set_has_bigid();
  bigid_ = value;
}

// optional int32 smallId = 3;
inline bool MarketItemRsp::has_smallid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarketItemRsp::set_has_smallid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarketItemRsp::clear_has_smallid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarketItemRsp::clear_smallid() {
  smallid_ = 0;
  clear_has_smallid();
}
inline ::google::protobuf::int32 MarketItemRsp::smallid() const {
  return smallid_;
}
inline void MarketItemRsp::set_smallid(::google::protobuf::int32 value) {
  set_has_smallid();
  smallid_ = value;
}

// optional int32 sort_type = 4;
inline bool MarketItemRsp::has_sort_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarketItemRsp::set_has_sort_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarketItemRsp::clear_has_sort_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarketItemRsp::clear_sort_type() {
  sort_type_ = 0;
  clear_has_sort_type();
}
inline ::google::protobuf::int32 MarketItemRsp::sort_type() const {
  return sort_type_;
}
inline void MarketItemRsp::set_sort_type(::google::protobuf::int32 value) {
  set_has_sort_type();
  sort_type_ = value;
}

// optional int32 fiter_star = 5;
inline bool MarketItemRsp::has_fiter_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MarketItemRsp::set_has_fiter_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MarketItemRsp::clear_has_fiter_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MarketItemRsp::clear_fiter_star() {
  fiter_star_ = 0;
  clear_has_fiter_star();
}
inline ::google::protobuf::int32 MarketItemRsp::fiter_star() const {
  return fiter_star_;
}
inline void MarketItemRsp::set_fiter_star(::google::protobuf::int32 value) {
  set_has_fiter_star();
  fiter_star_ = value;
}

// optional int32 is_same_prof = 6;
inline bool MarketItemRsp::has_is_same_prof() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MarketItemRsp::set_has_is_same_prof() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MarketItemRsp::clear_has_is_same_prof() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MarketItemRsp::clear_is_same_prof() {
  is_same_prof_ = 0;
  clear_has_is_same_prof();
}
inline ::google::protobuf::int32 MarketItemRsp::is_same_prof() const {
  return is_same_prof_;
}
inline void MarketItemRsp::set_is_same_prof(::google::protobuf::int32 value) {
  set_has_is_same_prof();
  is_same_prof_ = value;
}

// repeated .proto_ff.Goods infos = 7;
inline int MarketItemRsp::infos_size() const {
  return infos_.size();
}
inline void MarketItemRsp::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::Goods& MarketItemRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::Goods* MarketItemRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::Goods* MarketItemRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >&
MarketItemRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >*
MarketItemRsp::mutable_infos() {
  return &infos_;
}

// optional int32 cur_page = 8;
inline bool MarketItemRsp::has_cur_page() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MarketItemRsp::set_has_cur_page() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MarketItemRsp::clear_has_cur_page() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MarketItemRsp::clear_cur_page() {
  cur_page_ = 0;
  clear_has_cur_page();
}
inline ::google::protobuf::int32 MarketItemRsp::cur_page() const {
  return cur_page_;
}
inline void MarketItemRsp::set_cur_page(::google::protobuf::int32 value) {
  set_has_cur_page();
  cur_page_ = value;
}

// optional int32 all_page = 9;
inline bool MarketItemRsp::has_all_page() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MarketItemRsp::set_has_all_page() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MarketItemRsp::clear_has_all_page() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MarketItemRsp::clear_all_page() {
  all_page_ = 0;
  clear_has_all_page();
}
inline ::google::protobuf::int32 MarketItemRsp::all_page() const {
  return all_page_;
}
inline void MarketItemRsp::set_all_page(::google::protobuf::int32 value) {
  set_has_all_page();
  all_page_ = value;
}

// repeated .proto_ff.ComPair small_view = 10;
inline int MarketItemRsp::small_view_size() const {
  return small_view_.size();
}
inline void MarketItemRsp::clear_small_view() {
  small_view_.Clear();
}
inline const ::proto_ff::ComPair& MarketItemRsp::small_view(int index) const {
  return small_view_.Get(index);
}
inline ::proto_ff::ComPair* MarketItemRsp::mutable_small_view(int index) {
  return small_view_.Mutable(index);
}
inline ::proto_ff::ComPair* MarketItemRsp::add_small_view() {
  return small_view_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
MarketItemRsp::small_view() const {
  return small_view_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
MarketItemRsp::mutable_small_view() {
  return &small_view_;
}

// -------------------------------------------------------------------

// MarketRoleReq

// optional int32 type = 1;
inline bool MarketRoleReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketRoleReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketRoleReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketRoleReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarketRoleReq::type() const {
  return type_;
}
inline void MarketRoleReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// MarketRoleRsp

// optional int32 type = 1;
inline bool MarketRoleRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketRoleRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketRoleRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketRoleRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarketRoleRsp::type() const {
  return type_;
}
inline void MarketRoleRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .proto_ff.Goods infos = 2;
inline int MarketRoleRsp::infos_size() const {
  return infos_.size();
}
inline void MarketRoleRsp::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::Goods& MarketRoleRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::Goods* MarketRoleRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::Goods* MarketRoleRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >&
MarketRoleRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >*
MarketRoleRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// NotifyNewGoods

// optional int32 itemid = 1;
inline bool NotifyNewGoods::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyNewGoods::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyNewGoods::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyNewGoods::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 NotifyNewGoods::itemid() const {
  return itemid_;
}
inline void NotifyNewGoods::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 market_type = 2;
inline bool NotifyNewGoods::has_market_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyNewGoods::set_has_market_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyNewGoods::clear_has_market_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyNewGoods::clear_market_type() {
  market_type_ = 0;
  clear_has_market_type();
}
inline ::google::protobuf::int32 NotifyNewGoods::market_type() const {
  return market_type_;
}
inline void NotifyNewGoods::set_market_type(::google::protobuf::int32 value) {
  set_has_market_type();
  market_type_ = value;
}

// -------------------------------------------------------------------

// MarketFollowReq

// optional int32 item_id = 1;
inline bool MarketFollowReq::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketFollowReq::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketFollowReq::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketFollowReq::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 MarketFollowReq::item_id() const {
  return item_id_;
}
inline void MarketFollowReq::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional int32 opt = 2;
inline bool MarketFollowReq::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketFollowReq::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketFollowReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketFollowReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 MarketFollowReq::opt() const {
  return opt_;
}
inline void MarketFollowReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// MarketFollowRsp

// optional int32 ret = 1;
inline bool MarketFollowRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketFollowRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketFollowRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketFollowRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarketFollowRsp::ret() const {
  return ret_;
}
inline void MarketFollowRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 item_id = 2;
inline bool MarketFollowRsp::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketFollowRsp::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketFollowRsp::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketFollowRsp::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 MarketFollowRsp::item_id() const {
  return item_id_;
}
inline void MarketFollowRsp::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional int32 opt = 3;
inline bool MarketFollowRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarketFollowRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarketFollowRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarketFollowRsp::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 MarketFollowRsp::opt() const {
  return opt_;
}
inline void MarketFollowRsp::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// NotifyMarketFollow

// repeated int32 follow_ids = 1;
inline int NotifyMarketFollow::follow_ids_size() const {
  return follow_ids_.size();
}
inline void NotifyMarketFollow::clear_follow_ids() {
  follow_ids_.Clear();
}
inline ::google::protobuf::int32 NotifyMarketFollow::follow_ids(int index) const {
  return follow_ids_.Get(index);
}
inline void NotifyMarketFollow::set_follow_ids(int index, ::google::protobuf::int32 value) {
  follow_ids_.Set(index, value);
}
inline void NotifyMarketFollow::add_follow_ids(::google::protobuf::int32 value) {
  follow_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyMarketFollow::follow_ids() const {
  return follow_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyMarketFollow::mutable_follow_ids() {
  return &follow_ids_;
}

// -------------------------------------------------------------------

// MarketLogReq

// optional int32 type = 1;
inline bool MarketLogReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketLogReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketLogReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketLogReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarketLogReq::type() const {
  return type_;
}
inline void MarketLogReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// MarketLogRsp

// optional int32 type = 1;
inline bool MarketLogRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketLogRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketLogRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketLogRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarketLogRsp::type() const {
  return type_;
}
inline void MarketLogRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .proto_ff.Goods list = 2;
inline int MarketLogRsp::list_size() const {
  return list_.size();
}
inline void MarketLogRsp::clear_list() {
  list_.Clear();
}
inline const ::proto_ff::Goods& MarketLogRsp::list(int index) const {
  return list_.Get(index);
}
inline ::proto_ff::Goods* MarketLogRsp::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::proto_ff::Goods* MarketLogRsp::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >&
MarketLogRsp::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Goods >*
MarketLogRsp::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// MarketRoleOptReq

// optional int32 type = 1;
inline bool MarketRoleOptReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketRoleOptReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketRoleOptReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketRoleOptReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarketRoleOptReq::type() const {
  return type_;
}
inline void MarketRoleOptReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 package_type = 2;
inline bool MarketRoleOptReq::has_package_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketRoleOptReq::set_has_package_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketRoleOptReq::clear_has_package_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketRoleOptReq::clear_package_type() {
  package_type_ = 0;
  clear_has_package_type();
}
inline ::google::protobuf::int32 MarketRoleOptReq::package_type() const {
  return package_type_;
}
inline void MarketRoleOptReq::set_package_type(::google::protobuf::int32 value) {
  set_has_package_type();
  package_type_ = value;
}

// optional int32 index = 3;
inline bool MarketRoleOptReq::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarketRoleOptReq::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarketRoleOptReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarketRoleOptReq::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 MarketRoleOptReq::index() const {
  return index_;
}
inline void MarketRoleOptReq::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 num = 4;
inline bool MarketRoleOptReq::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarketRoleOptReq::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarketRoleOptReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarketRoleOptReq::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 MarketRoleOptReq::num() const {
  return num_;
}
inline void MarketRoleOptReq::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 price = 5;
inline bool MarketRoleOptReq::has_price() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MarketRoleOptReq::set_has_price() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MarketRoleOptReq::clear_has_price() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MarketRoleOptReq::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 MarketRoleOptReq::price() const {
  return price_;
}
inline void MarketRoleOptReq::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
}

// optional uint64 order_id = 6;
inline bool MarketRoleOptReq::has_order_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MarketRoleOptReq::set_has_order_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MarketRoleOptReq::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MarketRoleOptReq::clear_order_id() {
  order_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_id();
}
inline ::google::protobuf::uint64 MarketRoleOptReq::order_id() const {
  return order_id_;
}
inline void MarketRoleOptReq::set_order_id(::google::protobuf::uint64 value) {
  set_has_order_id();
  order_id_ = value;
}

// -------------------------------------------------------------------

// MarketRoleOptRsp

// optional int32 ret = 1;
inline bool MarketRoleOptRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketRoleOptRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketRoleOptRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketRoleOptRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarketRoleOptRsp::ret() const {
  return ret_;
}
inline void MarketRoleOptRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool MarketRoleOptRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketRoleOptRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketRoleOptRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketRoleOptRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarketRoleOptRsp::type() const {
  return type_;
}
inline void MarketRoleOptRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 pos = 3;
inline bool MarketRoleOptRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarketRoleOptRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarketRoleOptRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarketRoleOptRsp::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 MarketRoleOptRsp::pos() const {
  return pos_;
}
inline void MarketRoleOptRsp::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// optional int32 num = 4;
inline bool MarketRoleOptRsp::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarketRoleOptRsp::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarketRoleOptRsp::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarketRoleOptRsp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 MarketRoleOptRsp::num() const {
  return num_;
}
inline void MarketRoleOptRsp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional .proto_ff.Goods info = 5;
inline bool MarketRoleOptRsp::has_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MarketRoleOptRsp::set_has_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MarketRoleOptRsp::clear_has_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MarketRoleOptRsp::clear_info() {
  if (info_ != NULL) info_->::proto_ff::Goods::Clear();
  clear_has_info();
}
inline const ::proto_ff::Goods& MarketRoleOptRsp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::Goods* MarketRoleOptRsp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::Goods;
  return info_;
}
inline ::proto_ff::Goods* MarketRoleOptRsp::release_info() {
  clear_has_info();
  ::proto_ff::Goods* temp = info_;
  info_ = NULL;
  return temp;
}
inline void MarketRoleOptRsp::set_allocated_info(::proto_ff::Goods* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// NotifyMarketFactionStart

// -------------------------------------------------------------------

// MarketRoleInfo

// optional uint64 cid = 1;
inline bool MarketRoleInfo::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketRoleInfo::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketRoleInfo::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketRoleInfo::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 MarketRoleInfo::cid() const {
  return cid_;
}
inline void MarketRoleInfo::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 refresh_time = 2;
inline bool MarketRoleInfo::has_refresh_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketRoleInfo::set_has_refresh_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketRoleInfo::clear_has_refresh_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketRoleInfo::clear_refresh_time() {
  refresh_time_ = GOOGLE_ULONGLONG(0);
  clear_has_refresh_time();
}
inline ::google::protobuf::uint64 MarketRoleInfo::refresh_time() const {
  return refresh_time_;
}
inline void MarketRoleInfo::set_refresh_time(::google::protobuf::uint64 value) {
  set_has_refresh_time();
  refresh_time_ = value;
}

// repeated int32 follow_ids = 3;
inline int MarketRoleInfo::follow_ids_size() const {
  return follow_ids_.size();
}
inline void MarketRoleInfo::clear_follow_ids() {
  follow_ids_.Clear();
}
inline ::google::protobuf::int32 MarketRoleInfo::follow_ids(int index) const {
  return follow_ids_.Get(index);
}
inline void MarketRoleInfo::set_follow_ids(int index, ::google::protobuf::int32 value) {
  follow_ids_.Set(index, value);
}
inline void MarketRoleInfo::add_follow_ids(::google::protobuf::int32 value) {
  follow_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MarketRoleInfo::follow_ids() const {
  return follow_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MarketRoleInfo::mutable_follow_ids() {
  return &follow_ids_;
}

// optional int32 recovery_num = 4;
inline bool MarketRoleInfo::has_recovery_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarketRoleInfo::set_has_recovery_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarketRoleInfo::clear_has_recovery_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarketRoleInfo::clear_recovery_num() {
  recovery_num_ = 0;
  clear_has_recovery_num();
}
inline ::google::protobuf::int32 MarketRoleInfo::recovery_num() const {
  return recovery_num_;
}
inline void MarketRoleInfo::set_recovery_num(::google::protobuf::int32 value) {
  set_has_recovery_num();
  recovery_num_ = value;
}

// -------------------------------------------------------------------

// C2LMarketRoleUpReq

// optional int32 type = 1;
inline bool C2LMarketRoleUpReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LMarketRoleUpReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LMarketRoleUpReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LMarketRoleUpReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 C2LMarketRoleUpReq::type() const {
  return type_;
}
inline void C2LMarketRoleUpReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 package_type = 2;
inline bool C2LMarketRoleUpReq::has_package_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LMarketRoleUpReq::set_has_package_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LMarketRoleUpReq::clear_has_package_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LMarketRoleUpReq::clear_package_type() {
  package_type_ = 0;
  clear_has_package_type();
}
inline ::google::protobuf::int32 C2LMarketRoleUpReq::package_type() const {
  return package_type_;
}
inline void C2LMarketRoleUpReq::set_package_type(::google::protobuf::int32 value) {
  set_has_package_type();
  package_type_ = value;
}

// optional int32 index = 3;
inline bool C2LMarketRoleUpReq::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LMarketRoleUpReq::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LMarketRoleUpReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LMarketRoleUpReq::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 C2LMarketRoleUpReq::index() const {
  return index_;
}
inline void C2LMarketRoleUpReq::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 num = 4;
inline bool C2LMarketRoleUpReq::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LMarketRoleUpReq::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LMarketRoleUpReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LMarketRoleUpReq::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 C2LMarketRoleUpReq::num() const {
  return num_;
}
inline void C2LMarketRoleUpReq::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional uint64 role_id = 5;
inline bool C2LMarketRoleUpReq::has_role_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2LMarketRoleUpReq::set_has_role_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2LMarketRoleUpReq::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2LMarketRoleUpReq::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 C2LMarketRoleUpReq::role_id() const {
  return role_id_;
}
inline void C2LMarketRoleUpReq::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// -------------------------------------------------------------------

// L2CMarketRoleUpRsp

// optional int32 ret = 1;
inline bool L2CMarketRoleUpRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CMarketRoleUpRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CMarketRoleUpRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CMarketRoleUpRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CMarketRoleUpRsp::ret() const {
  return ret_;
}
inline void L2CMarketRoleUpRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool L2CMarketRoleUpRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CMarketRoleUpRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CMarketRoleUpRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CMarketRoleUpRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 L2CMarketRoleUpRsp::type() const {
  return type_;
}
inline void L2CMarketRoleUpRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 package_type = 3;
inline bool L2CMarketRoleUpRsp::has_package_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CMarketRoleUpRsp::set_has_package_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CMarketRoleUpRsp::clear_has_package_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CMarketRoleUpRsp::clear_package_type() {
  package_type_ = 0;
  clear_has_package_type();
}
inline ::google::protobuf::int32 L2CMarketRoleUpRsp::package_type() const {
  return package_type_;
}
inline void L2CMarketRoleUpRsp::set_package_type(::google::protobuf::int32 value) {
  set_has_package_type();
  package_type_ = value;
}

// optional int32 index = 4;
inline bool L2CMarketRoleUpRsp::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CMarketRoleUpRsp::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CMarketRoleUpRsp::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CMarketRoleUpRsp::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 L2CMarketRoleUpRsp::index() const {
  return index_;
}
inline void L2CMarketRoleUpRsp::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 num = 5;
inline bool L2CMarketRoleUpRsp::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void L2CMarketRoleUpRsp::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void L2CMarketRoleUpRsp::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void L2CMarketRoleUpRsp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 L2CMarketRoleUpRsp::num() const {
  return num_;
}
inline void L2CMarketRoleUpRsp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional uint64 role_id = 6;
inline bool L2CMarketRoleUpRsp::has_role_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void L2CMarketRoleUpRsp::set_has_role_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void L2CMarketRoleUpRsp::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void L2CMarketRoleUpRsp::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 L2CMarketRoleUpRsp::role_id() const {
  return role_id_;
}
inline void L2CMarketRoleUpRsp::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional .proto_ff.ItemProtoInfo item_data = 7;
inline bool L2CMarketRoleUpRsp::has_item_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void L2CMarketRoleUpRsp::set_has_item_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void L2CMarketRoleUpRsp::clear_has_item_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void L2CMarketRoleUpRsp::clear_item_data() {
  if (item_data_ != NULL) item_data_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_item_data();
}
inline const ::proto_ff::ItemProtoInfo& L2CMarketRoleUpRsp::item_data() const {
  return item_data_ != NULL ? *item_data_ : *default_instance_->item_data_;
}
inline ::proto_ff::ItemProtoInfo* L2CMarketRoleUpRsp::mutable_item_data() {
  set_has_item_data();
  if (item_data_ == NULL) item_data_ = new ::proto_ff::ItemProtoInfo;
  return item_data_;
}
inline ::proto_ff::ItemProtoInfo* L2CMarketRoleUpRsp::release_item_data() {
  clear_has_item_data();
  ::proto_ff::ItemProtoInfo* temp = item_data_;
  item_data_ = NULL;
  return temp;
}
inline void L2CMarketRoleUpRsp::set_allocated_item_data(::proto_ff::ItemProtoInfo* item_data) {
  delete item_data_;
  item_data_ = item_data;
  if (item_data) {
    set_has_item_data();
  } else {
    clear_has_item_data();
  }
}

// -------------------------------------------------------------------

// C2LMarketVieReq

// optional int32 type = 1;
inline bool C2LMarketVieReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LMarketVieReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LMarketVieReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LMarketVieReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 C2LMarketVieReq::type() const {
  return type_;
}
inline void C2LMarketVieReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 role_id = 2;
inline bool C2LMarketVieReq::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LMarketVieReq::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LMarketVieReq::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LMarketVieReq::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 C2LMarketVieReq::role_id() const {
  return role_id_;
}
inline void C2LMarketVieReq::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional int32 price = 3;
inline bool C2LMarketVieReq::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LMarketVieReq::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LMarketVieReq::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LMarketVieReq::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 C2LMarketVieReq::price() const {
  return price_;
}
inline void C2LMarketVieReq::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
}

// optional int32 price_type = 4;
inline bool C2LMarketVieReq::has_price_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LMarketVieReq::set_has_price_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LMarketVieReq::clear_has_price_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LMarketVieReq::clear_price_type() {
  price_type_ = 0;
  clear_has_price_type();
}
inline ::google::protobuf::int32 C2LMarketVieReq::price_type() const {
  return price_type_;
}
inline void C2LMarketVieReq::set_price_type(::google::protobuf::int32 value) {
  set_has_price_type();
  price_type_ = value;
}

// optional int32 opt = 5;
inline bool C2LMarketVieReq::has_opt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2LMarketVieReq::set_has_opt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2LMarketVieReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2LMarketVieReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 C2LMarketVieReq::opt() const {
  return opt_;
}
inline void C2LMarketVieReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional uint64 order_id = 6;
inline bool C2LMarketVieReq::has_order_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2LMarketVieReq::set_has_order_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2LMarketVieReq::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2LMarketVieReq::clear_order_id() {
  order_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_id();
}
inline ::google::protobuf::uint64 C2LMarketVieReq::order_id() const {
  return order_id_;
}
inline void C2LMarketVieReq::set_order_id(::google::protobuf::uint64 value) {
  set_has_order_id();
  order_id_ = value;
}

// -------------------------------------------------------------------

// L2CMarketVieRsp

// optional int32 ret = 1;
inline bool L2CMarketVieRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CMarketVieRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CMarketVieRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CMarketVieRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CMarketVieRsp::ret() const {
  return ret_;
}
inline void L2CMarketVieRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool L2CMarketVieRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CMarketVieRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CMarketVieRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CMarketVieRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 L2CMarketVieRsp::type() const {
  return type_;
}
inline void L2CMarketVieRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 role_id = 3;
inline bool L2CMarketVieRsp::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CMarketVieRsp::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CMarketVieRsp::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CMarketVieRsp::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 L2CMarketVieRsp::role_id() const {
  return role_id_;
}
inline void L2CMarketVieRsp::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional int32 price = 4;
inline bool L2CMarketVieRsp::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CMarketVieRsp::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CMarketVieRsp::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CMarketVieRsp::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 L2CMarketVieRsp::price() const {
  return price_;
}
inline void L2CMarketVieRsp::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
}

// optional int32 price_type = 5;
inline bool L2CMarketVieRsp::has_price_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void L2CMarketVieRsp::set_has_price_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void L2CMarketVieRsp::clear_has_price_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void L2CMarketVieRsp::clear_price_type() {
  price_type_ = 0;
  clear_has_price_type();
}
inline ::google::protobuf::int32 L2CMarketVieRsp::price_type() const {
  return price_type_;
}
inline void L2CMarketVieRsp::set_price_type(::google::protobuf::int32 value) {
  set_has_price_type();
  price_type_ = value;
}

// optional uint64 order_id = 6;
inline bool L2CMarketVieRsp::has_order_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void L2CMarketVieRsp::set_has_order_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void L2CMarketVieRsp::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void L2CMarketVieRsp::clear_order_id() {
  order_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_id();
}
inline ::google::protobuf::uint64 L2CMarketVieRsp::order_id() const {
  return order_id_;
}
inline void L2CMarketVieRsp::set_order_id(::google::protobuf::uint64 value) {
  set_has_order_id();
  order_id_ = value;
}

// -------------------------------------------------------------------

// C2LMarketBuyReq

// optional int32 type = 1;
inline bool C2LMarketBuyReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LMarketBuyReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LMarketBuyReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LMarketBuyReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 C2LMarketBuyReq::type() const {
  return type_;
}
inline void C2LMarketBuyReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 role_id = 2;
inline bool C2LMarketBuyReq::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LMarketBuyReq::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LMarketBuyReq::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LMarketBuyReq::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 C2LMarketBuyReq::role_id() const {
  return role_id_;
}
inline void C2LMarketBuyReq::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional int32 price = 3;
inline bool C2LMarketBuyReq::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LMarketBuyReq::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LMarketBuyReq::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LMarketBuyReq::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 C2LMarketBuyReq::price() const {
  return price_;
}
inline void C2LMarketBuyReq::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
}

// optional int32 price_type = 4;
inline bool C2LMarketBuyReq::has_price_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LMarketBuyReq::set_has_price_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LMarketBuyReq::clear_has_price_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LMarketBuyReq::clear_price_type() {
  price_type_ = 0;
  clear_has_price_type();
}
inline ::google::protobuf::int32 C2LMarketBuyReq::price_type() const {
  return price_type_;
}
inline void C2LMarketBuyReq::set_price_type(::google::protobuf::int32 value) {
  set_has_price_type();
  price_type_ = value;
}

// optional int32 opt = 5;
inline bool C2LMarketBuyReq::has_opt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2LMarketBuyReq::set_has_opt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2LMarketBuyReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2LMarketBuyReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 C2LMarketBuyReq::opt() const {
  return opt_;
}
inline void C2LMarketBuyReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional uint64 order_id = 6;
inline bool C2LMarketBuyReq::has_order_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2LMarketBuyReq::set_has_order_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2LMarketBuyReq::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2LMarketBuyReq::clear_order_id() {
  order_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_id();
}
inline ::google::protobuf::uint64 C2LMarketBuyReq::order_id() const {
  return order_id_;
}
inline void C2LMarketBuyReq::set_order_id(::google::protobuf::uint64 value) {
  set_has_order_id();
  order_id_ = value;
}

// -------------------------------------------------------------------

// L2CMarketBuyRsp

// optional int32 ret = 1;
inline bool L2CMarketBuyRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CMarketBuyRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CMarketBuyRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CMarketBuyRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CMarketBuyRsp::ret() const {
  return ret_;
}
inline void L2CMarketBuyRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool L2CMarketBuyRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CMarketBuyRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CMarketBuyRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CMarketBuyRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 L2CMarketBuyRsp::type() const {
  return type_;
}
inline void L2CMarketBuyRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 role_id = 3;
inline bool L2CMarketBuyRsp::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CMarketBuyRsp::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CMarketBuyRsp::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CMarketBuyRsp::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 L2CMarketBuyRsp::role_id() const {
  return role_id_;
}
inline void L2CMarketBuyRsp::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional int32 price = 4;
inline bool L2CMarketBuyRsp::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CMarketBuyRsp::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CMarketBuyRsp::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CMarketBuyRsp::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 L2CMarketBuyRsp::price() const {
  return price_;
}
inline void L2CMarketBuyRsp::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
}

// optional int32 price_type = 5;
inline bool L2CMarketBuyRsp::has_price_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void L2CMarketBuyRsp::set_has_price_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void L2CMarketBuyRsp::clear_has_price_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void L2CMarketBuyRsp::clear_price_type() {
  price_type_ = 0;
  clear_has_price_type();
}
inline ::google::protobuf::int32 L2CMarketBuyRsp::price_type() const {
  return price_type_;
}
inline void L2CMarketBuyRsp::set_price_type(::google::protobuf::int32 value) {
  set_has_price_type();
  price_type_ = value;
}

// optional uint64 order_id = 6;
inline bool L2CMarketBuyRsp::has_order_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void L2CMarketBuyRsp::set_has_order_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void L2CMarketBuyRsp::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void L2CMarketBuyRsp::clear_order_id() {
  order_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_id();
}
inline ::google::protobuf::uint64 L2CMarketBuyRsp::order_id() const {
  return order_id_;
}
inline void L2CMarketBuyRsp::set_order_id(::google::protobuf::uint64 value) {
  set_has_order_id();
  order_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Market_2eproto__INCLUDED
