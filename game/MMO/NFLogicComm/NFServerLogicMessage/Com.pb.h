// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Com.proto

#ifndef PROTOBUF_Com_2eproto__INCLUDED
#define PROTOBUF_Com_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Com_2eproto();
void protobuf_AssignDesc_Com_2eproto();
void protobuf_ShutdownFile_Com_2eproto();

class EmptyMessage;
class ComPair;
class ComPair64;
class ComPairBool;
class ComItem;
class ComItemBind;
class Vector3PB;
class Vector2PB;
class Attr64;
class RoleFacadeProto;
class RoleHeadPicProto;
class RoleListDBProto;
class LoginRoleProto;
class MarryBrief;
class LoginSynMarry;
class AoPlatProto;
class FactionMagRecordProto;
class LoginSyncProto;
class CenterRoleProto;
class SocialRoleProto;
class ClanView;
class Attr;
class BlueStarAttr;
class TurnAttr;
class ItemProtoInfo;
class StoneSlotInfo;
class WashSlotInfo;
class RefineSlotInfo;
class SealSlotInfo;
class EquipSlotInfo;
class EquipInfo;
class EquipLvAttrInfo;
class ItemSimpleProto;
class MultItemSimpleProto;
class PetInfo;
class PetHatchInfo;
class PetGrow;
class PetYaoHunSlot;
class PetYaoHunEntry;
class PetYaoHunModule;
class MailParamProto;
class MailStrProto;
class MailAttachmentList;
class MailHead;
class MailInfo;
class WebMailItemProto;
class WebMailDataProto;
class UseItemArgProto;
class NotifyRoleFacadeCastRsp;
class ArenaChallResult;
class FunctionUnlockInfoData;
class FunctionUnlockInfo;
class RolePlayerMiniInfo;
class FriendInfo;
class FriendApplyInfo;
class RelationHateInfo;
class RelationGiftRecord;
class RelationDBInfo;
class DigPerfor;
class BuffProto;
class BuffListProto;
class SkillPosProto;
class SkillGroupProto;
class SkillGroupListProto;
class GodEvilTaskProto;
class GodEvilTaskListProto;
class GodEvilStageProto;
class GodEvilProto;
class RechargeProto;
class FacadeFantasyData;
class FacadeFragmentData;
class FacadeSkillData;
class MountFantasyData;
class MountFragmentData;
class MountSkillData;
class MountKunEquipData;
class MountKunEquipSuitData;
class MountKunData;
class MountKunChangeData;
class MountBloodData;
class MountBabySlotData;
class MountFairyLandTour;
class MountFairyLand;
class MountFairySlotRecord;
class MountFairySlot;
class StatisticDataProto;
class GodRelicsTaskEntry;
class GodRelicsTaskGroupEntry;
class DailyTaskEntry;
class DailyTaskLimitEntry;
class DailyTaskBackDayEntry;
class DailyTaskBackEntry;
class DailyTaskRewardEntry;
class DailyTaskAllData;
class CharacterDBRecentSubmitMission;
class CharacterDBMissionItemInfo;
class CharacterDBMissionTrack;
class CharacterDBDyMissionBountyParam;
class CharacterDBDyMissionInfo;
class GuildPrestigeMissionDBData;
class GuildPrestigeMissionDB;
class CharacterDBTaskData;
class NotifyVipDataRsp;
class NotifyPrivilegeOpt;
class BuyVipGiftReq;
class BuyVipGiftRsp;
class RcveVipRewardReq;
class RcveVipRewardRsp;
class VipHideReq;
class VipHideRsp;
class NotifyVipEvent;
class RecvVipCacheExpReq;
class RecvVipCacheExpRsp;
class DailyArenaReward;
class ChallArenaReward;
class NotifyServerFlag;
class FacadeSoulSkillData;
class FacadeSoulActivityData;
class FacadeSoulData;
class ItemSellProto;
class DeityFantasySkillData;
class DeityEquipData;
class DeityEquipSuitData;
class DeityGodHoodEquipData;
class DeityGodHoodEquip;
class DeityGodHoodData;
class DeityFantasyData;
class DeityFragmentData;
class DeitySkillData;
class DeityBattleSlotData;
class ArmorSuitState;
class ArmorInfo;
class TitleInfo;
class OccupationMissionSoulData;
class OccupationMissionStageData;
class OccupationMissionGradeData;
class OccupationMissionData;
class BestEQEquipInfo;
class BestEQBreak;
class BestEQSlotInfo;
class BestEQTask;
class OneAchievementData;
class OneXiuZhenRoadTaskData;
class OneXiuZhenRoadPointsData;
class OneXiuZhenRoadRechargeData;
class OneGoalTaskData;
class OneGoalData;
class OneBattlePassRewardData;
class OneBattlePassTaskData;
class OneBattlePassShopData;
class OneBattlePassData;
class BattlePassData;
class AchievementData;
class PTGBEventItem;
class PTGBEventLog;
class PTFuncMagic;
class PTlg;
class PTlgPotion;
class PTjm;
class PTPurchaseRecord;
class PracticeTrueDBData;
class AncientSlotInfo;
class AncientInfo;
class MarryChild;
class MarrySelfInfo;
class MarryWeddingInfo;
class ExpressLog;
class WeddingDBInfo;
class WeddingDBList;
class WeddingSimpleInfo;
class WeddingDetail;
class WeddingDupRoleInfo;
class GlobalExpressLog;
class SceneProto;
class HandBookPBInfo;
class HandBookEmployPBInfo;
class HandBookTablePBInfo;
class HandBookBeastEquipData;
class HandBookBeastPBData;
class HandBookBeastBattleSlotData;
class HandBookPBData;
class RankNodeDBData;
class RankTypeDBData;
class RankNodeData;
class RankDataInfo;
class MergeReq;
class MergeRsp;
class PSDGoods;
class PSDPurchaseRecord;
class PSDShop;
class PSDatas;
class DragonSoulHoleData;
class DragonSoulStar;
class DragonSoulData;
class EnterQyActReq;
class EnterQyActRsp;
class NotifyQyActDupData;
class QyRankInfo;
class NotifyQyPassLayer;
class NotifyQyActRank;
class L2CEnterActReq;
class C2LEnterActReq;
class L2CEnterActRsp;
class NotifyEnterActRsp;
class WelfareSignPBData;
class WelfareAccrueRewardPBData;
class WelfareLvRewardPBData;
class WelfareOnlineRewardPBData;
class WelfareFraudRewardPBData;
class WelfareNotifyRewardPBData;
class WelfareWeekEndRewardPBData;
class WelfareQiFuData;
class WelfareLogonData;
class WelfarePBData;
class WPPState;
class XingYunMiShiPBData;
class XingYunMiShiPBRecord;
class DailyGiftPBData;
class DailyGiftPBDataRecord;
class LianChongTodayPBData;
class LianChongTodayPBDataRecord;
class LianChongAccPBData;
class LianChongAccPBDataRecord;
class MonthCardPBData;
class MonthCardPBDataRecord;
class TurntableAccPBData;
class TurntablePBData;
class TurntablePBDataRecord;
class OneSuperGiftBuy;
class OnWelfareInvestRewardData;
class OneWelfareInvestData;
class OneYTTLGift;
class DailyWelfarePBData;
class SynRankEntry;
class C2SSynInitRankReq;
class FindTreasureRewardRecord;
class FindTreasureRewardRecordDBData;
class FindTreasureBigDragonRewardData;
class FindTreasureBigDragonData;
class FindTreasureBaiLianShopData;
class FindTreasureBaiLianActiveData;
class FindTreasureBaiLianData;
class FindTreasureSiShengRewardData;
class FindTreasureSiShengData;
class FindTreatureDBData;
class FestDailyTotalRechargeOneProto;
class FestRTurnableRechargeOneProto;
class RTurnableLogDBProto;
class FestRTurnableLogDBProto;
class FestTurnableTaskProto;
class FestDonateTaskProto;
class FestDonateSingleProto;
class FestDonateServerProto;
class FestOnlineOneProto;
class FestCollectWordOneProto;
class DonateServerDBProto;
class DrawPizeTaskProto;
class DrawPizeProto;
class DrawPizeLogDBProto;
class FestDrawPizeLogDBProto;
class FestRankRewardData;
class FestRankData;
class FestRankDBData;
class FestRechargePrizeTaskData;
class FestRechargePrizeRecord;
class FestRechargePrizeData;
class FestRechargePrizeDBData;
class NotifyWorldInfo;
class SynWorldInfoReq;
class SceneTransParam;
class FestHuiMengXiYouReward;
class FestHuiMengXiYouGame;
class FestHuiMengXiYouData;
class GHostDupRankInfo;
class StarFantasyData;
class StarSetupHoleData;
class StarSetupStarAttrData;
class StarSetupData;
class StarSkillData;
class StarSkillSlotData;
class StarShopData;
class StarData;
class TurnSlot;
class TurnGrow;
class TurnEntry;
class TurnSimple;
class TurnHelper;
class TurnTask;
class FMarryTask;
class SoulEntry;
class SoulSpirit;
class SoulBone;
class SoulGuwen;
class SoulPool;
class MoFaEquipProtoInfo;
class MoFaEquipInfo;
class RuneWordInfo;
class RuneSlot;
class RuneEntry;
class FestBossProto;
class NGTBoxOpened;
class NGTBoxItem;
class NGStorePurchaseLog;
class NGDbDatas;

enum ECState {
  state_init = 0,
  state_normal = 1,
  state_dead = 2,
  state_seat = 3,
  state_fight = 4,
  state_trans = 5
};
bool ECState_IsValid(int value);
const ECState ECState_MIN = state_init;
const ECState ECState_MAX = state_trans;
const int ECState_ARRAYSIZE = ECState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECState_descriptor();
inline const ::std::string& ECState_Name(ECState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECState_descriptor(), value);
}
inline bool ECState_Parse(
    const ::std::string& name, ECState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECState>(
    ECState_descriptor(), name, value);
}
enum EAttrGroup {
  EAttrGroup_Level = 1,
  EAttrGroup_Skill = 2,
  EAttrGroup_Buff = 3,
  EAttrGroup_Equip = 4,
  EAttrGroup_Grow = 5,
  EAttrGroup_Facade = 6,
  EAttrGroup_Gm = 7,
  EAttrGroup_MOUNT = 8,
  EAttrGroup_Pet = 9,
  EAttrGroup_DEITY = 10,
  EAttrGroup_Armor = 11,
  EAttrGroup_Title = 12,
  EAttrGroup_GodEvil = 13,
  EAttrGroup_BestEQ = 14,
  EAttrGroup_Occupation = 15,
  EAttrGroup_Use_Item = 16,
  EAttrGroup_PTrue = 17,
  EAttrGroup_Ancient = 18,
  EAttrGroup_Encylopedia = 19,
  EAttrGroup_Faction = 20,
  EAttrGroup_Marry = 21,
  EAttrGroup_Emblem = 22,
  EAttrGroup_DragonSoul = 23,
  EAttrGroup_Dragon = 24,
  EAttrGroup_Star = 25,
  EAttrGroup_Turn = 26,
  EAttrGroup_Soul = 27,
  EAttrGroup_Rune = 28,
  EAttrGroup_MoFa = 29
};
bool EAttrGroup_IsValid(int value);
const EAttrGroup EAttrGroup_MIN = EAttrGroup_Level;
const EAttrGroup EAttrGroup_MAX = EAttrGroup_MoFa;
const int EAttrGroup_ARRAYSIZE = EAttrGroup_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAttrGroup_descriptor();
inline const ::std::string& EAttrGroup_Name(EAttrGroup value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAttrGroup_descriptor(), value);
}
inline bool EAttrGroup_Parse(
    const ::std::string& name, EAttrGroup* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAttrGroup>(
    EAttrGroup_descriptor(), name, value);
}
enum GrowType {
  GrowType_clothes = 1,
  GrowType_weapon = 2,
  GrowType_eye_awn = 3,
  GrowType_face_des = 4,
  GrowType_waist_des = 5,
  GrowType_tail = 6,
  GrowType_bracelet = 7,
  GrowType_footprint = 8,
  GrowType_med = 9,
  GrowType_halo = 10,
  GrowType_proto_frame = 11,
  GrowType_bubble = 12,
  GrowType_head = 13,
  GrowType_WING_TYPE = 14,
  GrowType_TREASURE_TYPE = 15,
  GrowType_ARTIFACT_TYPE = 16,
  GrowType_PARTNER_TYPE = 17,
  GrowType_MOUNT_TYPE = 18,
  GrowType_DEITY_TYPE = 19,
  GrowType_dragon = 20,
  GrowType_Star = 21
};
bool GrowType_IsValid(int value);
const GrowType GrowType_MIN = GrowType_clothes;
const GrowType GrowType_MAX = GrowType_Star;
const int GrowType_ARRAYSIZE = GrowType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GrowType_descriptor();
inline const ::std::string& GrowType_Name(GrowType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GrowType_descriptor(), value);
}
inline bool GrowType_Parse(
    const ::std::string& name, GrowType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GrowType>(
    GrowType_descriptor(), name, value);
}
enum ECreatureAttr {
  A_NONE = 0,
  A_MAX_HP = 1,
  A_ATK = 2,
  A_DEF = 3,
  A_BRK_ARMOR = 4,
  A_FIVE_DAM = 5,
  A_FIVE_ARMOR = 6,
  A_THUMP_RATE = 7,
  A_THUMP_RESIST = 8,
  A_SKY = 9,
  A_SKY_DAM = 10,
  A_SKY_REDU_RESIST = 11,
  A_SKY_RESIST = 12,
  A_KILL_GOD = 13,
  A_GOD_BODY = 14,
  A_MORTAL_RATE = 15,
  A_MORTAL_RESIST = 16,
  A_FAIRY_RATE = 17,
  A_FAIRY_RESIST = 18,
  A_GOD_RATE = 19,
  A_GOD_RESIST = 20,
  A_CRIT_RATE = 21,
  A_CRIT_RESIT_RATE = 22,
  A_CRIT_DAM = 23,
  A_CRIT_REDU = 24,
  A_BATTER_RATE = 25,
  A_BATTER_RESIST = 26,
  A_BATTER_DAM = 27,
  A_BATTER_REDU = 28,
  A_BRKDOWN_RATE = 29,
  A_BRKDOWN_RESIST = 30,
  A_DAM_ADD = 31,
  A_DAM_REDU = 32,
  A_ALL_ADD = 33,
  A_ALL_REDU = 34,
  A_SKILL_ADD = 35,
  A_SKILL_REDU = 36,
  A_REBOUND_DAM = 37,
  A_HP_STEAL = 38,
  A_DODGE_RATE = 39,
  A_HIT_RATE = 40,
  A_BLK_RATE = 41,
  A_BRK_BLK_RATE = 42,
  A_BLK_FREE = 43,
  A_BLK_PIERCE = 44,
  A_REL_ARMOR = 45,
  A_REL_DAM = 46,
  A_FIVE_RESIST = 47,
  A_FIVE_RESIST_REDU = 48,
  A_FIRE_ADD = 49,
  A_FIRE_REDU = 50,
  A_ICE_ADD = 51,
  A_ICE_REDU = 52,
  A_THUNDER_ADD = 53,
  A_THUNDER_RDU = 54,
  A_PLAYER_REDU = 55,
  A_PLAYER_ADD = 56,
  A_LEADER_REDU = 57,
  A_LEADER_ADD = 58,
  A_MON_REDU = 59,
  A_MON_ADD = 60,
  A_VAR_REDU = 61,
  A_VAR_ADD = 62,
  A_UNUSUAL_RESIST = 63,
  A_UNUSUAL_HIT = 64,
  A_HP_RECOVER = 65,
  A_UNUSUAL_ADD = 66,
  A_FIX_RECOVER = 67,
  A_HIGH_HP_ADD = 68,
  A_RECOVER_HP_ADD = 69,
  A_WEEK_ADD = 70,
  A_MAG_SHIELD = 71,
  A_MAG_ATK = 72,
  A_MAG_DEF = 73,
  A_MAG_DAM = 74,
  A_MAG_SHIELD_ADD = 75,
  A_MAG_REDU = 76,
  A_MAG_ATK_ADD = 77,
  A_MAG_DEF_ADD = 78,
  A_MAG_VAR_COOL = 79,
  A_GOD_SHIELD = 80,
  A_SHIELD = 81,
  A_VAR_TIME = 82,
  A_COOL_TIME = 83,
  A_SPEED = 84,
  A_HP_ADD = 85,
  A_ATK_ADD = 86,
  A_DEF_ADD = 87,
  A_ARMOR_ADD = 88,
  A_FIVE_DAM_ADD = 89,
  A_FIVE_ARMOR_ADD = 90,
  A_DROP = 91,
  A_EXP_ADD = 92,
  A_GOLD_DROP = 93,
  A_SKY_ADD = 94,
  A_COM_SHIELD = 95,
  A_SPEED_ADD = 96,
  A_MAG_WEAPON_SOUL = 97,
  A_WING_SOUL_SHIELD = 98,
  A_CAPE_SOUL = 99,
  A_SWORD_SOUL_SHIELD = 100,
  A_MAG_WEAPON_SOUL_REDU = 101,
  A_MAG_WEAPON_SOUL_ADD = 102,
  A_CAPE_SOUL_REDU = 103,
  A_CAPE_SOUL_ADD = 104,
  A_SEAT_EXP_ADD = 105,
  A_YAO_KANG = 107,
  A_BASE_END = 130,
  A_EQUIP_POS_STONE_ALL_ADD = 131,
  A_EQUIP_POS_BASE_ALL_ADD = 132,
  A_EQUIP_POS_STRON_ALL_ADD = 133,
  A_EQUIP_POS_STAR_ALL_ADD = 134,
  A_EQUIP_POS_WAKE_ALL_ADD = 135,
  A_EQUIP_POS_EVOLVE_ALL_ADD = 136,
  A_EQUIP_BASE_ADD = 137,
  A_SUIT_POS_ADD = 138,
  A_EQUIP_BASE_HP_ADD = 139,
  A_EQUIP_BASE_ATK_ADD = 140,
  A_EQUIP_BASE_DEF_ADD = 141,
  A_EQUIP_BASE_ARMOR_ADD = 142,
  A_WING_ALL_ADD = 143,
  A_MAG_WEAPON_ALL_ADD = 144,
  A_ARTIFACT_ALL_ADD = 145,
  A_SWORD_ALL_ADD = 146,
  A_GOD_ALL_ADD = 147,
  A_MOUNT_ALL_ADD = 148,
  A_GODS_POS_BASE_ADD = 149,
  A_SHADOWN_ALL_ADD = 150,
  A_SPIRIT_BONE_BASE_ADD = 151,
  A_SPIRIT_DESIGN_BASE_ADD = 152,
  A_PRACTICE_GONGFA_ADD = 153,
  A_PRACTICE_PULSE_ADD = 154,
  A_GOD_BEAST_HP_ADD = 155,
  A_GOD_BEAST_ATK_ADD = 156,
  A_GOD_BEAST_DEF_ADD = 157,
  A_GOD_BEAST_ARMOR_ADD = 158,
  A_GOD_BEAST_FIVE_DAM = 159,
  A_GOD_BEAST_FIVE_ARMOR = 160,
  A_SOUL_EQUIP_REBOND_DAM_ADD = 161,
  A_SOUL_EQUIP_ARMOR_ADD = 162,
  A_SOUL_EQUIP_REL_DEF_ADD = 163,
  A_SOUL_EQUIP_DEF_ADD = 164,
  A_SOUL_EQUIP_REL_DAM_ADD = 165,
  A_SOUL_EQUIP_ATK_ADD = 166,
  A_SOUL_EQUIP_HP_ADD = 167,
  A_SOUL_EQUIP_FIVE_DAM = 168,
  A_SOUL_EQUIP_FIVE_DEF = 169,
  A_SOUL_EQUIP_HP_STEAL = 170,
  A_MAG_EQUIP_BASE_ADD = 171,
  A_MAG_EQUIP_ADV_ADD = 172,
  A_MAG_EQUIP_GOLD_STAR_ADD = 173,
  A_MAG_EQUIP_SILVER_STAR_ADD = 174,
  A_PVP_INJECT_ALL_ADD = 175,
  A_DEITY_HP_ADD = 176,
  A_DEITY_ATK_ADD = 177,
  A_DEITY_DEF_ADD = 178,
  A_DEITY_AORMOR_ADD = 179,
  A_DEITY_SKY_ADD = 180,
  A_ST_ALL_BASE_ADD = 181,
  A_ST_BASE_ADD = 182,
  A_ST_XP_COM_ADD = 183,
  A_ST_XP_STAR_ADD = 184,
  A_ST_ALL_STAR_ADD = 185,
  A_ST_EVOLVE_ADD = 186,
  A_ST_SPEC_ADD = 187,
  A_PET_GROW_BASE_ADD = 188,
  A_RUNE_BASE_ADD = 189,
  A_GUWEN_SUIT_BASE_ADD = 190,
  A_GUWEN_SUIT_PRE_ADD = 191,
  A_FIGHT_END = 200,
  A_GOLD = 201,
  A_MAGIC = 202,
  A_DIA = 203,
  A_BD_DIA = 204,
  A_PRESTIGE = 205,
  A_FIGHT = 206,
  A_EXP = 207,
  A_CUR_HP = 208,
  A_PROF = 209,
  A_LEVEL = 210,
  A_VIP_LEVEL = 211,
  A_TEAM_ID = 212,
  A_TEAM_LEADER = 213,
  A_ARENA_COIN = 214,
  A_TITLE_ID = 215,
  A_ACH_POINT = 216,
  A_FACTION_BUILD = 217,
  A_HOLYBEAST_BUILD = 218,
  A_MAGIC_SUM = 219,
  A_FRIEND_COUNT = 220,
  A_HANGUP_TIME = 221,
  A_WORLD_EXP_ADD = 222,
  A_FUSHI_TIME = 223,
  A_DUP_ID = 224,
  A_CAMP_ID = 226,
  A_DAILY_EXP = 227,
  A_FACTION_ID = 228,
  A_FACTION_LEADER = 229,
  A_FACTION_LEVEL = 230,
  A_FACTION_DUTY = 231,
  A_CONTRI = 232,
  A_ESCORT_ID = 233,
  A_GODEVIL_EXP = 234,
  A_GODEVIL_LEV = 235,
  A_FACTION_TRIBUTE = 236,
  A_BEST_AQ = 237,
  A_BEST_LJ = 238,
  PT_STAGE = 239,
  A_BATTLEPASS_XIANCE = 240,
  A_BATTLEPASS_BAODING = 241,
  A_FINDTREASURE_SHENGJIFU = 242,
  A_FINDTREASURE_BATTLE_SOUL = 243,
  A_GOD_META_EXP = 244,
  A_GOD_META_EXP_ADD = 245,
  A_HUN_LING = 246,
  A_FUWEN_MONEY = 247,
  A_HUNJING = 248,
  A_COMMON_END = 400
};
bool ECreatureAttr_IsValid(int value);
const ECreatureAttr ECreatureAttr_MIN = A_NONE;
const ECreatureAttr ECreatureAttr_MAX = A_COMMON_END;
const int ECreatureAttr_ARRAYSIZE = ECreatureAttr_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECreatureAttr_descriptor();
inline const ::std::string& ECreatureAttr_Name(ECreatureAttr value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECreatureAttr_descriptor(), value);
}
inline bool ECreatureAttr_Parse(
    const ::std::string& name, ECreatureAttr* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECreatureAttr>(
    ECreatureAttr_descriptor(), name, value);
}
enum DigPerforType {
  addhp = 1,
  reducehp = 2,
  crit = 3,
  dodge = 4,
  absorb = 5,
  normalimmune = 6,
  fiveimmune = 7,
  godimmune = 8,
  injury = 9,
  invincible = 10,
  effectivearea = 11,
  steal = 12,
  kill = 13,
  bosscountlimit = 14,
  breakdown = 15,
  conti = 16,
  pet1 = 17,
  pet2 = 18,
  pet3 = 19,
  block = 20,
  damageimmune = 21,
  killimmune = 22,
  fatalimmune = 23,
  protect = 24
};
bool DigPerforType_IsValid(int value);
const DigPerforType DigPerforType_MIN = addhp;
const DigPerforType DigPerforType_MAX = protect;
const int DigPerforType_ARRAYSIZE = DigPerforType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DigPerforType_descriptor();
inline const ::std::string& DigPerforType_Name(DigPerforType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DigPerforType_descriptor(), value);
}
inline bool DigPerforType_Parse(
    const ::std::string& name, DigPerforType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DigPerforType>(
    DigPerforType_descriptor(), name, value);
}
enum EMountKunEquipSuitStatus {
  EMountKunEquipSuitStatus_NONE = 0,
  EMountKunEquipSuitStatus_NOT_ACTIVE = 1,
  EMountKunEquipSuitStatus_ACTIVE = 2
};
bool EMountKunEquipSuitStatus_IsValid(int value);
const EMountKunEquipSuitStatus EMountKunEquipSuitStatus_MIN = EMountKunEquipSuitStatus_NONE;
const EMountKunEquipSuitStatus EMountKunEquipSuitStatus_MAX = EMountKunEquipSuitStatus_ACTIVE;
const int EMountKunEquipSuitStatus_ARRAYSIZE = EMountKunEquipSuitStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMountKunEquipSuitStatus_descriptor();
inline const ::std::string& EMountKunEquipSuitStatus_Name(EMountKunEquipSuitStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMountKunEquipSuitStatus_descriptor(), value);
}
inline bool EMountKunEquipSuitStatus_Parse(
    const ::std::string& name, EMountKunEquipSuitStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMountKunEquipSuitStatus>(
    EMountKunEquipSuitStatus_descriptor(), name, value);
}
enum MountBloodState {
  MOUNT_BLOOD_STATE_NOT_ACTIVE = 0,
  MOUNT_BLOOD_STATE_CAN_ACTIVE = 1,
  MOUNT_BLOOD_STATE_ACTIVED = 2
};
bool MountBloodState_IsValid(int value);
const MountBloodState MountBloodState_MIN = MOUNT_BLOOD_STATE_NOT_ACTIVE;
const MountBloodState MountBloodState_MAX = MOUNT_BLOOD_STATE_ACTIVED;
const int MountBloodState_ARRAYSIZE = MountBloodState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MountBloodState_descriptor();
inline const ::std::string& MountBloodState_Name(MountBloodState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MountBloodState_descriptor(), value);
}
inline bool MountBloodState_Parse(
    const ::std::string& name, MountBloodState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MountBloodState>(
    MountBloodState_descriptor(), name, value);
}
enum MountBabySlotState {
  MOUNT_BABY_SLOT_STATE_LOCK = 0,
  MOUNT_BABY_SLOT_STATE_EMPTY = 1,
  MOUNT_BABY_SLOT_STATE_USING = 2,
  MOUNT_BABY_SLOT_STATE_DUING_SUCCESS = 3
};
bool MountBabySlotState_IsValid(int value);
const MountBabySlotState MountBabySlotState_MIN = MOUNT_BABY_SLOT_STATE_LOCK;
const MountBabySlotState MountBabySlotState_MAX = MOUNT_BABY_SLOT_STATE_DUING_SUCCESS;
const int MountBabySlotState_ARRAYSIZE = MountBabySlotState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MountBabySlotState_descriptor();
inline const ::std::string& MountBabySlotState_Name(MountBabySlotState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MountBabySlotState_descriptor(), value);
}
inline bool MountBabySlotState_Parse(
    const ::std::string& name, MountBabySlotState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MountBabySlotState>(
    MountBabySlotState_descriptor(), name, value);
}
enum EN_GODRELICS_TASK_STATUS {
  EN_GODRELICS_TASK_STATUS_NOT_FINISH = 0,
  EN_GODRELICS_TASK_STATUS_FINISH = 1,
  EN_GODRELICS_TASK_STATUS_GET_REWARD = 2
};
bool EN_GODRELICS_TASK_STATUS_IsValid(int value);
const EN_GODRELICS_TASK_STATUS EN_GODRELICS_TASK_STATUS_MIN = EN_GODRELICS_TASK_STATUS_NOT_FINISH;
const EN_GODRELICS_TASK_STATUS EN_GODRELICS_TASK_STATUS_MAX = EN_GODRELICS_TASK_STATUS_GET_REWARD;
const int EN_GODRELICS_TASK_STATUS_ARRAYSIZE = EN_GODRELICS_TASK_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_GODRELICS_TASK_STATUS_descriptor();
inline const ::std::string& EN_GODRELICS_TASK_STATUS_Name(EN_GODRELICS_TASK_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_GODRELICS_TASK_STATUS_descriptor(), value);
}
inline bool EN_GODRELICS_TASK_STATUS_Parse(
    const ::std::string& name, EN_GODRELICS_TASK_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_GODRELICS_TASK_STATUS>(
    EN_GODRELICS_TASK_STATUS_descriptor(), name, value);
}
enum EN_GODRELICS_GROUP_TASK_STATUS {
  EN_GODRELICS_GROUP_TASK_STATUS_NOT_UNLOCK = 0,
  EN_GODRELICS_GROUP_TASK_STATUS_NOT_FINISH = 1,
  EN_GODRELICS_GROUP_TASK_STATUS_FINISH = 2,
  EN_GODRELICS_GROUP_TASK_STATUS_GET_REWARD = 3
};
bool EN_GODRELICS_GROUP_TASK_STATUS_IsValid(int value);
const EN_GODRELICS_GROUP_TASK_STATUS EN_GODRELICS_GROUP_TASK_STATUS_MIN = EN_GODRELICS_GROUP_TASK_STATUS_NOT_UNLOCK;
const EN_GODRELICS_GROUP_TASK_STATUS EN_GODRELICS_GROUP_TASK_STATUS_MAX = EN_GODRELICS_GROUP_TASK_STATUS_GET_REWARD;
const int EN_GODRELICS_GROUP_TASK_STATUS_ARRAYSIZE = EN_GODRELICS_GROUP_TASK_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_GODRELICS_GROUP_TASK_STATUS_descriptor();
inline const ::std::string& EN_GODRELICS_GROUP_TASK_STATUS_Name(EN_GODRELICS_GROUP_TASK_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_GODRELICS_GROUP_TASK_STATUS_descriptor(), value);
}
inline bool EN_GODRELICS_GROUP_TASK_STATUS_Parse(
    const ::std::string& name, EN_GODRELICS_GROUP_TASK_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_GODRELICS_GROUP_TASK_STATUS>(
    EN_GODRELICS_GROUP_TASK_STATUS_descriptor(), name, value);
}
enum EN_DAILY_TASK_STATUS {
  EN_DAILY_TASK_STATUS_NOT_UNLOCK = 0,
  EN_DAILY_TASK_STATUS_NOT_FINISH = 1,
  EN_DAILY_TASK_STATUS_FINISH = 2
};
bool EN_DAILY_TASK_STATUS_IsValid(int value);
const EN_DAILY_TASK_STATUS EN_DAILY_TASK_STATUS_MIN = EN_DAILY_TASK_STATUS_NOT_UNLOCK;
const EN_DAILY_TASK_STATUS EN_DAILY_TASK_STATUS_MAX = EN_DAILY_TASK_STATUS_FINISH;
const int EN_DAILY_TASK_STATUS_ARRAYSIZE = EN_DAILY_TASK_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_DAILY_TASK_STATUS_descriptor();
inline const ::std::string& EN_DAILY_TASK_STATUS_Name(EN_DAILY_TASK_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_DAILY_TASK_STATUS_descriptor(), value);
}
inline bool EN_DAILY_TASK_STATUS_Parse(
    const ::std::string& name, EN_DAILY_TASK_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_DAILY_TASK_STATUS>(
    EN_DAILY_TASK_STATUS_descriptor(), name, value);
}
enum EN_DAILY_TASK_REWARD_STATUS {
  EN_DAILY_TASK_REWARD_STATUS_NOT_GET = 0,
  EN_DAILY_TASK_REWARD_STATUS_CAN_GET = 1,
  EN_DAILY_TASK_REWARD_STATUS_GET = 2
};
bool EN_DAILY_TASK_REWARD_STATUS_IsValid(int value);
const EN_DAILY_TASK_REWARD_STATUS EN_DAILY_TASK_REWARD_STATUS_MIN = EN_DAILY_TASK_REWARD_STATUS_NOT_GET;
const EN_DAILY_TASK_REWARD_STATUS EN_DAILY_TASK_REWARD_STATUS_MAX = EN_DAILY_TASK_REWARD_STATUS_GET;
const int EN_DAILY_TASK_REWARD_STATUS_ARRAYSIZE = EN_DAILY_TASK_REWARD_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_DAILY_TASK_REWARD_STATUS_descriptor();
inline const ::std::string& EN_DAILY_TASK_REWARD_STATUS_Name(EN_DAILY_TASK_REWARD_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_DAILY_TASK_REWARD_STATUS_descriptor(), value);
}
inline bool EN_DAILY_TASK_REWARD_STATUS_Parse(
    const ::std::string& name, EN_DAILY_TASK_REWARD_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_DAILY_TASK_REWARD_STATUS>(
    EN_DAILY_TASK_REWARD_STATUS_descriptor(), name, value);
}
enum FacadeSoulSkillStatus {
  FACADE_SOUL_SKILL_STATUS_NONE = 0,
  FACADE_SOUL_SKILL_STATUS_ACTIVED = 1
};
bool FacadeSoulSkillStatus_IsValid(int value);
const FacadeSoulSkillStatus FacadeSoulSkillStatus_MIN = FACADE_SOUL_SKILL_STATUS_NONE;
const FacadeSoulSkillStatus FacadeSoulSkillStatus_MAX = FACADE_SOUL_SKILL_STATUS_ACTIVED;
const int FacadeSoulSkillStatus_ARRAYSIZE = FacadeSoulSkillStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* FacadeSoulSkillStatus_descriptor();
inline const ::std::string& FacadeSoulSkillStatus_Name(FacadeSoulSkillStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    FacadeSoulSkillStatus_descriptor(), value);
}
inline bool FacadeSoulSkillStatus_Parse(
    const ::std::string& name, FacadeSoulSkillStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FacadeSoulSkillStatus>(
    FacadeSoulSkillStatus_descriptor(), name, value);
}
enum FacadeSoulActivitytatus {
  FACADE_SOUL_ACTIVITY_STATUS_NONE = 0,
  FACADE_SOUL_ACTIVITY_STATUS_CAN_RECV = 1,
  FACADE_SOUL_ACTIVITY_STATUS_RECVed = 2
};
bool FacadeSoulActivitytatus_IsValid(int value);
const FacadeSoulActivitytatus FacadeSoulActivitytatus_MIN = FACADE_SOUL_ACTIVITY_STATUS_NONE;
const FacadeSoulActivitytatus FacadeSoulActivitytatus_MAX = FACADE_SOUL_ACTIVITY_STATUS_RECVed;
const int FacadeSoulActivitytatus_ARRAYSIZE = FacadeSoulActivitytatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* FacadeSoulActivitytatus_descriptor();
inline const ::std::string& FacadeSoulActivitytatus_Name(FacadeSoulActivitytatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    FacadeSoulActivitytatus_descriptor(), value);
}
inline bool FacadeSoulActivitytatus_Parse(
    const ::std::string& name, FacadeSoulActivitytatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FacadeSoulActivitytatus>(
    FacadeSoulActivitytatus_descriptor(), name, value);
}
enum EDeityEquipSuitStatus {
  EDeityEquipSuitStatus_NONE = 0,
  EDeityEquipSuitStatus_NOT_ACTIVE = 1,
  EDeityEquipSuitStatus_ACTIVE = 2
};
bool EDeityEquipSuitStatus_IsValid(int value);
const EDeityEquipSuitStatus EDeityEquipSuitStatus_MIN = EDeityEquipSuitStatus_NONE;
const EDeityEquipSuitStatus EDeityEquipSuitStatus_MAX = EDeityEquipSuitStatus_ACTIVE;
const int EDeityEquipSuitStatus_ARRAYSIZE = EDeityEquipSuitStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDeityEquipSuitStatus_descriptor();
inline const ::std::string& EDeityEquipSuitStatus_Name(EDeityEquipSuitStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDeityEquipSuitStatus_descriptor(), value);
}
inline bool EDeityEquipSuitStatus_Parse(
    const ::std::string& name, EDeityEquipSuitStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDeityEquipSuitStatus>(
    EDeityEquipSuitStatus_descriptor(), name, value);
}
enum DeityBattleSlotState {
  DEITY_BATTLE_SLOT_STATE_LOCK = 0,
  DEITY_BATTLE_SLOT_STATE_EMPTY = 1,
  DEITY_BATTLE_SLOT_STATE_USING = 2
};
bool DeityBattleSlotState_IsValid(int value);
const DeityBattleSlotState DeityBattleSlotState_MIN = DEITY_BATTLE_SLOT_STATE_LOCK;
const DeityBattleSlotState DeityBattleSlotState_MAX = DEITY_BATTLE_SLOT_STATE_USING;
const int DeityBattleSlotState_ARRAYSIZE = DeityBattleSlotState_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeityBattleSlotState_descriptor();
inline const ::std::string& DeityBattleSlotState_Name(DeityBattleSlotState value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeityBattleSlotState_descriptor(), value);
}
inline bool DeityBattleSlotState_Parse(
    const ::std::string& name, DeityBattleSlotState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeityBattleSlotState>(
    DeityBattleSlotState_descriptor(), name, value);
}
enum ETitleStatus {
  E_TITLE_STATUS_NONE = 0,
  E_TITLE_STATUS_CAN_ACTIVE = 1,
  E_TITLE_STATUS_ACTIVED = 2,
  E_TITLE_STATUS_WEARING = 3
};
bool ETitleStatus_IsValid(int value);
const ETitleStatus ETitleStatus_MIN = E_TITLE_STATUS_NONE;
const ETitleStatus ETitleStatus_MAX = E_TITLE_STATUS_WEARING;
const int ETitleStatus_ARRAYSIZE = ETitleStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETitleStatus_descriptor();
inline const ::std::string& ETitleStatus_Name(ETitleStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETitleStatus_descriptor(), value);
}
inline bool ETitleStatus_Parse(
    const ::std::string& name, ETitleStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETitleStatus>(
    ETitleStatus_descriptor(), name, value);
}
enum EnumAchievementStatus {
  ENUM_ACHIEVEMENT_STATUS_NOT_FINISH = 0,
  ENUM_ACHIEVEMENT_STATUS_CAN_GET = 1,
  ENUM_ACHIEVEMENT_STATUS_FINISH = 2,
  ENUM_ACHIEVEMENT_STATUS_CLOSE = 3
};
bool EnumAchievementStatus_IsValid(int value);
const EnumAchievementStatus EnumAchievementStatus_MIN = ENUM_ACHIEVEMENT_STATUS_NOT_FINISH;
const EnumAchievementStatus EnumAchievementStatus_MAX = ENUM_ACHIEVEMENT_STATUS_CLOSE;
const int EnumAchievementStatus_ARRAYSIZE = EnumAchievementStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnumAchievementStatus_descriptor();
inline const ::std::string& EnumAchievementStatus_Name(EnumAchievementStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumAchievementStatus_descriptor(), value);
}
inline bool EnumAchievementStatus_Parse(
    const ::std::string& name, EnumAchievementStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumAchievementStatus>(
    EnumAchievementStatus_descriptor(), name, value);
}
enum EnumBattlePassBuyStatus {
  ENUM_BATTLE_PASS_BUY_STATUS_NONE = 0,
  ENUM_BATTLE_PASS_BUY_STATUS_BUYED_LOW = 1,
  ENUM_BATTLE_PASS_BUY_STATUS_BUYED_HIGH = 2
};
bool EnumBattlePassBuyStatus_IsValid(int value);
const EnumBattlePassBuyStatus EnumBattlePassBuyStatus_MIN = ENUM_BATTLE_PASS_BUY_STATUS_NONE;
const EnumBattlePassBuyStatus EnumBattlePassBuyStatus_MAX = ENUM_BATTLE_PASS_BUY_STATUS_BUYED_HIGH;
const int EnumBattlePassBuyStatus_ARRAYSIZE = EnumBattlePassBuyStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnumBattlePassBuyStatus_descriptor();
inline const ::std::string& EnumBattlePassBuyStatus_Name(EnumBattlePassBuyStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumBattlePassBuyStatus_descriptor(), value);
}
inline bool EnumBattlePassBuyStatus_Parse(
    const ::std::string& name, EnumBattlePassBuyStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumBattlePassBuyStatus>(
    EnumBattlePassBuyStatus_descriptor(), name, value);
}
enum DragonSouleStarStatus {
  DragonSouleStarStatus_NoActived = 0,
  DragonSouleStarStatus_CanActived = 1,
  DragonSouleStarStatus_Actived = 2
};
bool DragonSouleStarStatus_IsValid(int value);
const DragonSouleStarStatus DragonSouleStarStatus_MIN = DragonSouleStarStatus_NoActived;
const DragonSouleStarStatus DragonSouleStarStatus_MAX = DragonSouleStarStatus_Actived;
const int DragonSouleStarStatus_ARRAYSIZE = DragonSouleStarStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* DragonSouleStarStatus_descriptor();
inline const ::std::string& DragonSouleStarStatus_Name(DragonSouleStarStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    DragonSouleStarStatus_descriptor(), value);
}
inline bool DragonSouleStarStatus_Parse(
    const ::std::string& name, DragonSouleStarStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DragonSouleStarStatus>(
    DragonSouleStarStatus_descriptor(), name, value);
}
enum WelfareSignStatus {
  WelfareSignStatus_None = 0,
  WelfareSignStatus_Can = 1,
  WelfareSignStatus_Back = 2,
  WelfareSignStatus_Get = 3
};
bool WelfareSignStatus_IsValid(int value);
const WelfareSignStatus WelfareSignStatus_MIN = WelfareSignStatus_None;
const WelfareSignStatus WelfareSignStatus_MAX = WelfareSignStatus_Get;
const int WelfareSignStatus_ARRAYSIZE = WelfareSignStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* WelfareSignStatus_descriptor();
inline const ::std::string& WelfareSignStatus_Name(WelfareSignStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    WelfareSignStatus_descriptor(), value);
}
inline bool WelfareSignStatus_Parse(
    const ::std::string& name, WelfareSignStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WelfareSignStatus>(
    WelfareSignStatus_descriptor(), name, value);
}
enum WelfareCommonStatus {
  WelfareCommonStatus_None = 0,
  WelfareCommonStatus_Can = 1,
  WelfareCommonStatus_Get = 2
};
bool WelfareCommonStatus_IsValid(int value);
const WelfareCommonStatus WelfareCommonStatus_MIN = WelfareCommonStatus_None;
const WelfareCommonStatus WelfareCommonStatus_MAX = WelfareCommonStatus_Get;
const int WelfareCommonStatus_ARRAYSIZE = WelfareCommonStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* WelfareCommonStatus_descriptor();
inline const ::std::string& WelfareCommonStatus_Name(WelfareCommonStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    WelfareCommonStatus_descriptor(), value);
}
inline bool WelfareCommonStatus_Parse(
    const ::std::string& name, WelfareCommonStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WelfareCommonStatus>(
    WelfareCommonStatus_descriptor(), name, value);
}
enum WelfareWeekEndStatus {
  WelfareWeekEndStatus_None = 0,
  WelfareWeekEndStatus_Can = 1,
  WelfareWeekEndStatus_Wrong = 2,
  WelfareWeekEndStatus_Get = 3
};
bool WelfareWeekEndStatus_IsValid(int value);
const WelfareWeekEndStatus WelfareWeekEndStatus_MIN = WelfareWeekEndStatus_None;
const WelfareWeekEndStatus WelfareWeekEndStatus_MAX = WelfareWeekEndStatus_Get;
const int WelfareWeekEndStatus_ARRAYSIZE = WelfareWeekEndStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* WelfareWeekEndStatus_descriptor();
inline const ::std::string& WelfareWeekEndStatus_Name(WelfareWeekEndStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    WelfareWeekEndStatus_descriptor(), value);
}
inline bool WelfareWeekEndStatus_Parse(
    const ::std::string& name, WelfareWeekEndStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WelfareWeekEndStatus>(
    WelfareWeekEndStatus_descriptor(), name, value);
}
enum WelfarePrayConst {
  PRAY_CONST_FREE_CD_TIME = 1,
  PRAY_CONST_GOLD_BUY_PRICE = 2,
  PRAY_COSNT_GOLD_BUY_GET_ITEM_BASE = 3,
  PRAY_CONST_EXP_BUY_PRICE = 4,
  PRAY_CONST_EXP_BUY_ADDITION = 5,
  PRAY_CONST_EXP_BUY_PRICE_ADDTION = 6,
  PRAY_CONST_GOLD_CAN_BUY_NUM = 7,
  PRAY_CONST_EXP_CAN_BUY_NUM = 8,
  PRAY_CONST_CAN_SAVE_MONEY = 9,
  PRAY_CONST_CAN_NOT_SAVE_MONEY = 10,
  PRAY_CONST_MAX_SAVE_MONEY = 11,
  PRAY_CONST_ONCE_SAVE_MONEY_NUM = 12,
  PRAY_CONST_SAVE_MONEY_RATE = 13,
  PRAY_CONST_GOLD_BUY_ADDITION = 14,
  PRAY_CONST_GOLD_BUY_PRICE_ADDTION = 15
};
bool WelfarePrayConst_IsValid(int value);
const WelfarePrayConst WelfarePrayConst_MIN = PRAY_CONST_FREE_CD_TIME;
const WelfarePrayConst WelfarePrayConst_MAX = PRAY_CONST_GOLD_BUY_PRICE_ADDTION;
const int WelfarePrayConst_ARRAYSIZE = WelfarePrayConst_MAX + 1;

const ::google::protobuf::EnumDescriptor* WelfarePrayConst_descriptor();
inline const ::std::string& WelfarePrayConst_Name(WelfarePrayConst value) {
  return ::google::protobuf::internal::NameOfEnum(
    WelfarePrayConst_descriptor(), value);
}
inline bool WelfarePrayConst_Parse(
    const ::std::string& name, WelfarePrayConst* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WelfarePrayConst>(
    WelfarePrayConst_descriptor(), name, value);
}
enum DailyGiftCommonStatus {
  DailyGiftCommonStatus_None = 0,
  DailyGiftCommonStatus_BUYED = 1
};
bool DailyGiftCommonStatus_IsValid(int value);
const DailyGiftCommonStatus DailyGiftCommonStatus_MIN = DailyGiftCommonStatus_None;
const DailyGiftCommonStatus DailyGiftCommonStatus_MAX = DailyGiftCommonStatus_BUYED;
const int DailyGiftCommonStatus_ARRAYSIZE = DailyGiftCommonStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* DailyGiftCommonStatus_descriptor();
inline const ::std::string& DailyGiftCommonStatus_Name(DailyGiftCommonStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    DailyGiftCommonStatus_descriptor(), value);
}
inline bool DailyGiftCommonStatus_Parse(
    const ::std::string& name, DailyGiftCommonStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DailyGiftCommonStatus>(
    DailyGiftCommonStatus_descriptor(), name, value);
}
// ===================================================================

class EmptyMessage : public ::google::protobuf::Message {
 public:
  EmptyMessage();
  virtual ~EmptyMessage();

  EmptyMessage(const EmptyMessage& from);

  inline EmptyMessage& operator=(const EmptyMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyMessage& default_instance();

  void Swap(EmptyMessage* other);

  // implements Message ----------------------------------------------

  EmptyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmptyMessage& from);
  void MergeFrom(const EmptyMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.EmptyMessage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EmptyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ComPair : public ::google::protobuf::Message {
 public:
  ComPair();
  virtual ~ComPair();

  ComPair(const ComPair& from);

  inline ComPair& operator=(const ComPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComPair& default_instance();

  void Swap(ComPair* other);

  // implements Message ----------------------------------------------

  ComPair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComPair& from);
  void MergeFrom(const ComPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComPair)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComPair* default_instance_;
};
// -------------------------------------------------------------------

class ComPair64 : public ::google::protobuf::Message {
 public:
  ComPair64();
  virtual ~ComPair64();

  ComPair64(const ComPair64& from);

  inline ComPair64& operator=(const ComPair64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComPair64& default_instance();

  void Swap(ComPair64* other);

  // implements Message ----------------------------------------------

  ComPair64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComPair64& from);
  void MergeFrom(const ComPair64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);

  // optional uint64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComPair64)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint64 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComPair64* default_instance_;
};
// -------------------------------------------------------------------

class ComPairBool : public ::google::protobuf::Message {
 public:
  ComPairBool();
  virtual ~ComPairBool();

  ComPairBool(const ComPairBool& from);

  inline ComPairBool& operator=(const ComPairBool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComPairBool& default_instance();

  void Swap(ComPairBool* other);

  // implements Message ----------------------------------------------

  ComPairBool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComPairBool& from);
  void MergeFrom(const ComPairBool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // optional bool value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline bool value() const;
  inline void set_value(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComPairBool)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 key_;
  bool value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComPairBool* default_instance_;
};
// -------------------------------------------------------------------

class ComItem : public ::google::protobuf::Message {
 public:
  ComItem();
  virtual ~ComItem();

  ComItem(const ComItem& from);

  inline ComItem& operator=(const ComItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComItem& default_instance();

  void Swap(ComItem* other);

  // implements Message ----------------------------------------------

  ComItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComItem& from);
  void MergeFrom(const ComItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional uint64 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint64 item_num() const;
  inline void set_item_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 item_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComItem* default_instance_;
};
// -------------------------------------------------------------------

class ComItemBind : public ::google::protobuf::Message {
 public:
  ComItemBind();
  virtual ~ComItemBind();

  ComItemBind(const ComItemBind& from);

  inline ComItemBind& operator=(const ComItemBind& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComItemBind& default_instance();

  void Swap(ComItemBind* other);

  // implements Message ----------------------------------------------

  ComItemBind* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComItemBind& from);
  void MergeFrom(const ComItemBind& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional uint64 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint64 item_num() const;
  inline void set_item_num(::google::protobuf::uint64 value);

  // optional int32 bind = 3;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 3;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComItemBind)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_bind();
  inline void clear_has_bind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 item_num_;
  ::google::protobuf::int32 bind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComItemBind* default_instance_;
};
// -------------------------------------------------------------------

class Vector3PB : public ::google::protobuf::Message {
 public:
  Vector3PB();
  virtual ~Vector3PB();

  Vector3PB(const Vector3PB& from);

  inline Vector3PB& operator=(const Vector3PB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector3PB& default_instance();

  void Swap(Vector3PB* other);

  // implements Message ----------------------------------------------

  Vector3PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vector3PB& from);
  void MergeFrom(const Vector3PB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // required float z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);

  // @@protoc_insertion_point(class_scope:proto_ff.Vector3PB)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  float z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Vector3PB* default_instance_;
};
// -------------------------------------------------------------------

class Vector2PB : public ::google::protobuf::Message {
 public:
  Vector2PB();
  virtual ~Vector2PB();

  Vector2PB(const Vector2PB& from);

  inline Vector2PB& operator=(const Vector2PB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector2PB& default_instance();

  void Swap(Vector2PB* other);

  // implements Message ----------------------------------------------

  Vector2PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vector2PB& from);
  void MergeFrom(const Vector2PB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:proto_ff.Vector2PB)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Vector2PB* default_instance_;
};
// -------------------------------------------------------------------

class Attr64 : public ::google::protobuf::Message {
 public:
  Attr64();
  virtual ~Attr64();

  Attr64(const Attr64& from);

  inline Attr64& operator=(const Attr64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attr64& default_instance();

  void Swap(Attr64* other);

  // implements Message ----------------------------------------------

  Attr64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attr64& from);
  void MergeFrom(const Attr64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Attr64)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Attr64* default_instance_;
};
// -------------------------------------------------------------------

class RoleFacadeProto : public ::google::protobuf::Message {
 public:
  RoleFacadeProto();
  virtual ~RoleFacadeProto();

  RoleFacadeProto(const RoleFacadeProto& from);

  inline RoleFacadeProto& operator=(const RoleFacadeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleFacadeProto& default_instance();

  void Swap(RoleFacadeProto* other);

  // implements Message ----------------------------------------------

  RoleFacadeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleFacadeProto& from);
  void MergeFrom(const RoleFacadeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.Attr64 growFacade = 1;
  inline int growfacade_size() const;
  inline void clear_growfacade();
  static const int kGrowFacadeFieldNumber = 1;
  inline const ::proto_ff::Attr64& growfacade(int index) const;
  inline ::proto_ff::Attr64* mutable_growfacade(int index);
  inline ::proto_ff::Attr64* add_growfacade();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >&
      growfacade() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >*
      mutable_growfacade();

  // optional int32 color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // optional int32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleFacadeProto)
 private:
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_prof();
  inline void clear_has_prof();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 > growfacade_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 prof_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RoleFacadeProto* default_instance_;
};
// -------------------------------------------------------------------

class RoleHeadPicProto : public ::google::protobuf::Message {
 public:
  RoleHeadPicProto();
  virtual ~RoleHeadPicProto();

  RoleHeadPicProto(const RoleHeadPicProto& from);

  inline RoleHeadPicProto& operator=(const RoleHeadPicProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleHeadPicProto& default_instance();

  void Swap(RoleHeadPicProto* other);

  // implements Message ----------------------------------------------

  RoleHeadPicProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleHeadPicProto& from);
  void MergeFrom(const RoleHeadPicProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 prof = 1;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 1;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // optional int64 frame = 2;
  inline bool has_frame() const;
  inline void clear_frame();
  static const int kFrameFieldNumber = 2;
  inline ::google::protobuf::int64 frame() const;
  inline void set_frame(::google::protobuf::int64 value);

  // optional int64 head = 3;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 3;
  inline ::google::protobuf::int64 head() const;
  inline void set_head(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleHeadPicProto)
 private:
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_frame();
  inline void clear_has_frame();
  inline void set_has_head();
  inline void clear_has_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 frame_;
  ::google::protobuf::int64 head_;
  ::google::protobuf::int32 prof_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RoleHeadPicProto* default_instance_;
};
// -------------------------------------------------------------------

class RoleListDBProto : public ::google::protobuf::Message {
 public:
  RoleListDBProto();
  virtual ~RoleListDBProto();

  RoleListDBProto(const RoleListDBProto& from);

  inline RoleListDBProto& operator=(const RoleListDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListDBProto& default_instance();

  void Swap(RoleListDBProto* other);

  // implements Message ----------------------------------------------

  RoleListDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListDBProto& from);
  void MergeFrom(const RoleListDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 createtime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 6;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 7;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 7;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint64 sceneid = 8;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 8;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 9;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 9;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 10;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 10;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // optional uint64 lastsceneid = 11;
  inline bool has_lastsceneid() const;
  inline void clear_lastsceneid();
  static const int kLastsceneidFieldNumber = 11;
  inline ::google::protobuf::uint64 lastsceneid() const;
  inline void set_lastsceneid(::google::protobuf::uint64 value);

  // optional uint64 lastmapid = 12;
  inline bool has_lastmapid() const;
  inline void clear_lastmapid();
  static const int kLastmapidFieldNumber = 12;
  inline ::google::protobuf::uint64 lastmapid() const;
  inline void set_lastmapid(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB lastpos = 13;
  inline bool has_lastpos() const;
  inline void clear_lastpos();
  static const int kLastposFieldNumber = 13;
  inline const ::proto_ff::Vector3PB& lastpos() const;
  inline ::proto_ff::Vector3PB* mutable_lastpos();
  inline ::proto_ff::Vector3PB* release_lastpos();
  inline void set_allocated_lastpos(::proto_ff::Vector3PB* lastpos);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleListDBProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_lastsceneid();
  inline void clear_has_lastsceneid();
  inline void set_has_lastmapid();
  inline void clear_has_lastmapid();
  inline void set_has_lastpos();
  inline void clear_has_lastpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 createtime_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 mapid_;
  ::proto_ff::Vector3PB* pos_;
  ::google::protobuf::uint64 lastsceneid_;
  ::google::protobuf::uint64 lastmapid_;
  ::proto_ff::Vector3PB* lastpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RoleListDBProto* default_instance_;
};
// -------------------------------------------------------------------

class LoginRoleProto : public ::google::protobuf::Message {
 public:
  LoginRoleProto();
  virtual ~LoginRoleProto();

  LoginRoleProto(const LoginRoleProto& from);

  inline LoginRoleProto& operator=(const LoginRoleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRoleProto& default_instance();

  void Swap(LoginRoleProto* other);

  // implements Message ----------------------------------------------

  LoginRoleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRoleProto& from);
  void MergeFrom(const LoginRoleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 createtime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 6;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 7;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 7;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // @@protoc_insertion_point(class_scope:proto_ff.LoginRoleProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_facade();
  inline void clear_has_facade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 createtime_;
  ::proto_ff::RoleFacadeProto* facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LoginRoleProto* default_instance_;
};
// -------------------------------------------------------------------

class MarryBrief : public ::google::protobuf::Message {
 public:
  MarryBrief();
  virtual ~MarryBrief();

  MarryBrief(const MarryBrief& from);

  inline MarryBrief& operator=(const MarryBrief& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryBrief& default_instance();

  void Swap(MarryBrief* other);

  // implements Message ----------------------------------------------

  MarryBrief* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryBrief& from);
  void MergeFrom(const MarryBrief& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 child_id = 2;
  inline bool has_child_id() const;
  inline void clear_child_id();
  static const int kChildIdFieldNumber = 2;
  inline ::google::protobuf::int32 child_id() const;
  inline void set_child_id(::google::protobuf::int32 value);

  // optional uint64 card_buy_time = 3;
  inline bool has_card_buy_time() const;
  inline void clear_card_buy_time();
  static const int kCardBuyTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 card_buy_time() const;
  inline void set_card_buy_time(::google::protobuf::uint64 value);

  // optional int32 express_lv = 4;
  inline bool has_express_lv() const;
  inline void clear_express_lv();
  static const int kExpressLvFieldNumber = 4;
  inline ::google::protobuf::int32 express_lv() const;
  inline void set_express_lv(::google::protobuf::int32 value);

  // repeated int32 gears = 5;
  inline int gears_size() const;
  inline void clear_gears();
  static const int kGearsFieldNumber = 5;
  inline ::google::protobuf::int32 gears(int index) const;
  inline void set_gears(int index, ::google::protobuf::int32 value);
  inline void add_gears(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gears() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gears();

  // optional int32 buy_dup_num = 6;
  inline bool has_buy_dup_num() const;
  inline void clear_buy_dup_num();
  static const int kBuyDupNumFieldNumber = 6;
  inline ::google::protobuf::int32 buy_dup_num() const;
  inline void set_buy_dup_num(::google::protobuf::int32 value);

  // optional int32 marry_flag = 7;
  inline bool has_marry_flag() const;
  inline void clear_marry_flag();
  static const int kMarryFlagFieldNumber = 7;
  inline ::google::protobuf::int32 marry_flag() const;
  inline void set_marry_flag(::google::protobuf::int32 value);

  // repeated int32 recved_gears = 8;
  inline int recved_gears_size() const;
  inline void clear_recved_gears();
  static const int kRecvedGearsFieldNumber = 8;
  inline ::google::protobuf::int32 recved_gears(int index) const;
  inline void set_recved_gears(int index, ::google::protobuf::int32 value);
  inline void add_recved_gears(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      recved_gears() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_recved_gears();

  // optional int32 dst_recv_day = 9;
  inline bool has_dst_recv_day() const;
  inline void clear_dst_recv_day();
  static const int kDstRecvDayFieldNumber = 9;
  inline ::google::protobuf::int32 dst_recv_day() const;
  inline void set_dst_recv_day(::google::protobuf::int32 value);

  // optional int32 dst_give_dup_num = 10;
  inline bool has_dst_give_dup_num() const;
  inline void clear_dst_give_dup_num();
  static const int kDstGiveDupNumFieldNumber = 10;
  inline ::google::protobuf::int32 dst_give_dup_num() const;
  inline void set_dst_give_dup_num(::google::protobuf::int32 value);

  // optional int32 card_surplus_day = 11;
  inline bool has_card_surplus_day() const;
  inline void clear_card_surplus_day();
  static const int kCardSurplusDayFieldNumber = 11;
  inline ::google::protobuf::int32 card_surplus_day() const;
  inline void set_card_surplus_day(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryBrief)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_child_id();
  inline void clear_has_child_id();
  inline void set_has_card_buy_time();
  inline void clear_has_card_buy_time();
  inline void set_has_express_lv();
  inline void clear_has_express_lv();
  inline void set_has_buy_dup_num();
  inline void clear_has_buy_dup_num();
  inline void set_has_marry_flag();
  inline void clear_has_marry_flag();
  inline void set_has_dst_recv_day();
  inline void clear_has_dst_recv_day();
  inline void set_has_dst_give_dup_num();
  inline void clear_has_dst_give_dup_num();
  inline void set_has_card_surplus_day();
  inline void clear_has_card_surplus_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 card_buy_time_;
  ::google::protobuf::int32 child_id_;
  ::google::protobuf::int32 express_lv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gears_;
  ::google::protobuf::int32 buy_dup_num_;
  ::google::protobuf::int32 marry_flag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > recved_gears_;
  ::google::protobuf::int32 dst_recv_day_;
  ::google::protobuf::int32 dst_give_dup_num_;
  ::google::protobuf::int32 card_surplus_day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MarryBrief* default_instance_;
};
// -------------------------------------------------------------------

class LoginSynMarry : public ::google::protobuf::Message {
 public:
  LoginSynMarry();
  virtual ~LoginSynMarry();

  LoginSynMarry(const LoginSynMarry& from);

  inline LoginSynMarry& operator=(const LoginSynMarry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginSynMarry& default_instance();

  void Swap(LoginSynMarry* other);

  // implements Message ----------------------------------------------

  LoginSynMarry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginSynMarry& from);
  void MergeFrom(const LoginSynMarry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 my_dst_recv_day = 1;
  inline bool has_my_dst_recv_day() const;
  inline void clear_my_dst_recv_day();
  static const int kMyDstRecvDayFieldNumber = 1;
  inline ::google::protobuf::int32 my_dst_recv_day() const;
  inline void set_my_dst_recv_day(::google::protobuf::int32 value);

  // optional int32 dst_give_dup_num = 2;
  inline bool has_dst_give_dup_num() const;
  inline void clear_dst_give_dup_num();
  static const int kDstGiveDupNumFieldNumber = 2;
  inline ::google::protobuf::int32 dst_give_dup_num() const;
  inline void set_dst_give_dup_num(::google::protobuf::int32 value);

  // optional int32 marry_id = 3;
  inline bool has_marry_id() const;
  inline void clear_marry_id();
  static const int kMarryIdFieldNumber = 3;
  inline ::google::protobuf::int32 marry_id() const;
  inline void set_marry_id(::google::protobuf::int32 value);

  // optional .proto_ff.MarryBrief brief = 4;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 4;
  inline const ::proto_ff::MarryBrief& brief() const;
  inline ::proto_ff::MarryBrief* mutable_brief();
  inline ::proto_ff::MarryBrief* release_brief();
  inline void set_allocated_brief(::proto_ff::MarryBrief* brief);

  // optional bytes dst_name = 5;
  inline bool has_dst_name() const;
  inline void clear_dst_name();
  static const int kDstNameFieldNumber = 5;
  inline const ::std::string& dst_name() const;
  inline void set_dst_name(const ::std::string& value);
  inline void set_dst_name(const char* value);
  inline void set_dst_name(const void* value, size_t size);
  inline ::std::string* mutable_dst_name();
  inline ::std::string* release_dst_name();
  inline void set_allocated_dst_name(::std::string* dst_name);

  // @@protoc_insertion_point(class_scope:proto_ff.LoginSynMarry)
 private:
  inline void set_has_my_dst_recv_day();
  inline void clear_has_my_dst_recv_day();
  inline void set_has_dst_give_dup_num();
  inline void clear_has_dst_give_dup_num();
  inline void set_has_marry_id();
  inline void clear_has_marry_id();
  inline void set_has_brief();
  inline void clear_has_brief();
  inline void set_has_dst_name();
  inline void clear_has_dst_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 my_dst_recv_day_;
  ::google::protobuf::int32 dst_give_dup_num_;
  ::proto_ff::MarryBrief* brief_;
  ::std::string* dst_name_;
  ::google::protobuf::int32 marry_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LoginSynMarry* default_instance_;
};
// -------------------------------------------------------------------

class AoPlatProto : public ::google::protobuf::Message {
 public:
  AoPlatProto();
  virtual ~AoPlatProto();

  AoPlatProto(const AoPlatProto& from);

  inline AoPlatProto& operator=(const AoPlatProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AoPlatProto& default_instance();

  void Swap(AoPlatProto* other);

  // implements Message ----------------------------------------------

  AoPlatProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AoPlatProto& from);
  void MergeFrom(const AoPlatProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes udid = 1;
  inline bool has_udid() const;
  inline void clear_udid();
  static const int kUdidFieldNumber = 1;
  inline const ::std::string& udid() const;
  inline void set_udid(const ::std::string& value);
  inline void set_udid(const char* value);
  inline void set_udid(const void* value, size_t size);
  inline ::std::string* mutable_udid();
  inline ::std::string* release_udid();
  inline void set_allocated_udid(::std::string* udid);

  // optional bytes imei = 2;
  inline bool has_imei() const;
  inline void clear_imei();
  static const int kImeiFieldNumber = 2;
  inline const ::std::string& imei() const;
  inline void set_imei(const ::std::string& value);
  inline void set_imei(const char* value);
  inline void set_imei(const void* value, size_t size);
  inline ::std::string* mutable_imei();
  inline ::std::string* release_imei();
  inline void set_allocated_imei(::std::string* imei);

  // optional bytes idfa = 3;
  inline bool has_idfa() const;
  inline void clear_idfa();
  static const int kIdfaFieldNumber = 3;
  inline const ::std::string& idfa() const;
  inline void set_idfa(const ::std::string& value);
  inline void set_idfa(const char* value);
  inline void set_idfa(const void* value, size_t size);
  inline ::std::string* mutable_idfa();
  inline ::std::string* release_idfa();
  inline void set_allocated_idfa(::std::string* idfa);

  // optional bytes oaid = 4;
  inline bool has_oaid() const;
  inline void clear_oaid();
  static const int kOaidFieldNumber = 4;
  inline const ::std::string& oaid() const;
  inline void set_oaid(const ::std::string& value);
  inline void set_oaid(const char* value);
  inline void set_oaid(const void* value, size_t size);
  inline ::std::string* mutable_oaid();
  inline ::std::string* release_oaid();
  inline void set_allocated_oaid(::std::string* oaid);

  // optional bytes caid = 5;
  inline bool has_caid() const;
  inline void clear_caid();
  static const int kCaidFieldNumber = 5;
  inline const ::std::string& caid() const;
  inline void set_caid(const ::std::string& value);
  inline void set_caid(const char* value);
  inline void set_caid(const void* value, size_t size);
  inline ::std::string* mutable_caid();
  inline ::std::string* release_caid();
  inline void set_allocated_caid(::std::string* caid);

  // optional bytes android_id = 6;
  inline bool has_android_id() const;
  inline void clear_android_id();
  static const int kAndroidIdFieldNumber = 6;
  inline const ::std::string& android_id() const;
  inline void set_android_id(const ::std::string& value);
  inline void set_android_id(const char* value);
  inline void set_android_id(const void* value, size_t size);
  inline ::std::string* mutable_android_id();
  inline ::std::string* release_android_id();
  inline void set_allocated_android_id(::std::string* android_id);

  // optional int32 group_id = 7;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 7;
  inline ::google::protobuf::int32 group_id() const;
  inline void set_group_id(::google::protobuf::int32 value);

  // optional bytes brand = 8;
  inline bool has_brand() const;
  inline void clear_brand();
  static const int kBrandFieldNumber = 8;
  inline const ::std::string& brand() const;
  inline void set_brand(const ::std::string& value);
  inline void set_brand(const char* value);
  inline void set_brand(const void* value, size_t size);
  inline ::std::string* mutable_brand();
  inline ::std::string* release_brand();
  inline void set_allocated_brand(::std::string* brand);

  // optional bytes device_model = 9;
  inline bool has_device_model() const;
  inline void clear_device_model();
  static const int kDeviceModelFieldNumber = 9;
  inline const ::std::string& device_model() const;
  inline void set_device_model(const ::std::string& value);
  inline void set_device_model(const char* value);
  inline void set_device_model(const void* value, size_t size);
  inline ::std::string* mutable_device_model();
  inline ::std::string* release_device_model();
  inline void set_allocated_device_model(::std::string* device_model);

  // optional int32 is_emulator = 10;
  inline bool has_is_emulator() const;
  inline void clear_is_emulator();
  static const int kIsEmulatorFieldNumber = 10;
  inline ::google::protobuf::int32 is_emulator() const;
  inline void set_is_emulator(::google::protobuf::int32 value);

  // optional int32 screen_length = 11;
  inline bool has_screen_length() const;
  inline void clear_screen_length();
  static const int kScreenLengthFieldNumber = 11;
  inline ::google::protobuf::int32 screen_length() const;
  inline void set_screen_length(::google::protobuf::int32 value);

  // optional int32 screen_width = 12;
  inline bool has_screen_width() const;
  inline void clear_screen_width();
  static const int kScreenWidthFieldNumber = 12;
  inline ::google::protobuf::int32 screen_width() const;
  inline void set_screen_width(::google::protobuf::int32 value);

  // optional bytes os_version = 13;
  inline bool has_os_version() const;
  inline void clear_os_version();
  static const int kOsVersionFieldNumber = 13;
  inline const ::std::string& os_version() const;
  inline void set_os_version(const ::std::string& value);
  inline void set_os_version(const char* value);
  inline void set_os_version(const void* value, size_t size);
  inline ::std::string* mutable_os_version();
  inline ::std::string* release_os_version();
  inline void set_allocated_os_version(::std::string* os_version);

  // optional bytes network_type = 14;
  inline bool has_network_type() const;
  inline void clear_network_type();
  static const int kNetworkTypeFieldNumber = 14;
  inline const ::std::string& network_type() const;
  inline void set_network_type(const ::std::string& value);
  inline void set_network_type(const char* value);
  inline void set_network_type(const void* value, size_t size);
  inline ::std::string* mutable_network_type();
  inline ::std::string* release_network_type();
  inline void set_allocated_network_type(::std::string* network_type);

  // optional bytes app_channel = 15;
  inline bool has_app_channel() const;
  inline void clear_app_channel();
  static const int kAppChannelFieldNumber = 15;
  inline const ::std::string& app_channel() const;
  inline void set_app_channel(const ::std::string& value);
  inline void set_app_channel(const char* value);
  inline void set_app_channel(const void* value, size_t size);
  inline ::std::string* mutable_app_channel();
  inline ::std::string* release_app_channel();
  inline void set_allocated_app_channel(::std::string* app_channel);

  // optional bytes app_version = 16;
  inline bool has_app_version() const;
  inline void clear_app_version();
  static const int kAppVersionFieldNumber = 16;
  inline const ::std::string& app_version() const;
  inline void set_app_version(const ::std::string& value);
  inline void set_app_version(const char* value);
  inline void set_app_version(const void* value, size_t size);
  inline ::std::string* mutable_app_version();
  inline ::std::string* release_app_version();
  inline void set_allocated_app_version(::std::string* app_version);

  // optional int32 channel_id = 17;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 17;
  inline ::google::protobuf::int32 channel_id() const;
  inline void set_channel_id(::google::protobuf::int32 value);

  // optional int32 sub_channel_id = 18;
  inline bool has_sub_channel_id() const;
  inline void clear_sub_channel_id();
  static const int kSubChannelIdFieldNumber = 18;
  inline ::google::protobuf::int32 sub_channel_id() const;
  inline void set_sub_channel_id(::google::protobuf::int32 value);

  // optional bytes account_id = 19;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 19;
  inline const ::std::string& account_id() const;
  inline void set_account_id(const ::std::string& value);
  inline void set_account_id(const char* value);
  inline void set_account_id(const void* value, size_t size);
  inline ::std::string* mutable_account_id();
  inline ::std::string* release_account_id();
  inline void set_allocated_account_id(::std::string* account_id);

  // optional bytes ip = 20;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 20;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const void* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 port = 21;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 21;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // optional int32 timezone_offset = 22;
  inline bool has_timezone_offset() const;
  inline void clear_timezone_offset();
  static const int kTimezoneOffsetFieldNumber = 22;
  inline ::google::protobuf::int32 timezone_offset() const;
  inline void set_timezone_offset(::google::protobuf::int32 value);

  // optional bytes platform_tag = 23;
  inline bool has_platform_tag() const;
  inline void clear_platform_tag();
  static const int kPlatformTagFieldNumber = 23;
  inline const ::std::string& platform_tag() const;
  inline void set_platform_tag(const ::std::string& value);
  inline void set_platform_tag(const char* value);
  inline void set_platform_tag(const void* value, size_t size);
  inline ::std::string* mutable_platform_tag();
  inline ::std::string* release_platform_tag();
  inline void set_allocated_platform_tag(::std::string* platform_tag);

  // @@protoc_insertion_point(class_scope:proto_ff.AoPlatProto)
 private:
  inline void set_has_udid();
  inline void clear_has_udid();
  inline void set_has_imei();
  inline void clear_has_imei();
  inline void set_has_idfa();
  inline void clear_has_idfa();
  inline void set_has_oaid();
  inline void clear_has_oaid();
  inline void set_has_caid();
  inline void clear_has_caid();
  inline void set_has_android_id();
  inline void clear_has_android_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_brand();
  inline void clear_has_brand();
  inline void set_has_device_model();
  inline void clear_has_device_model();
  inline void set_has_is_emulator();
  inline void clear_has_is_emulator();
  inline void set_has_screen_length();
  inline void clear_has_screen_length();
  inline void set_has_screen_width();
  inline void clear_has_screen_width();
  inline void set_has_os_version();
  inline void clear_has_os_version();
  inline void set_has_network_type();
  inline void clear_has_network_type();
  inline void set_has_app_channel();
  inline void clear_has_app_channel();
  inline void set_has_app_version();
  inline void clear_has_app_version();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_sub_channel_id();
  inline void clear_has_sub_channel_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_timezone_offset();
  inline void clear_has_timezone_offset();
  inline void set_has_platform_tag();
  inline void clear_has_platform_tag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* udid_;
  ::std::string* imei_;
  ::std::string* idfa_;
  ::std::string* oaid_;
  ::std::string* caid_;
  ::std::string* android_id_;
  ::std::string* brand_;
  ::google::protobuf::int32 group_id_;
  ::google::protobuf::int32 is_emulator_;
  ::std::string* device_model_;
  ::google::protobuf::int32 screen_length_;
  ::google::protobuf::int32 screen_width_;
  ::std::string* os_version_;
  ::std::string* network_type_;
  ::std::string* app_channel_;
  ::std::string* app_version_;
  ::google::protobuf::int32 channel_id_;
  ::google::protobuf::int32 sub_channel_id_;
  ::std::string* account_id_;
  ::std::string* ip_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 timezone_offset_;
  ::std::string* platform_tag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static AoPlatProto* default_instance_;
};
// -------------------------------------------------------------------

class FactionMagRecordProto : public ::google::protobuf::Message {
 public:
  FactionMagRecordProto();
  virtual ~FactionMagRecordProto();

  FactionMagRecordProto(const FactionMagRecordProto& from);

  inline FactionMagRecordProto& operator=(const FactionMagRecordProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FactionMagRecordProto& default_instance();

  void Swap(FactionMagRecordProto* other);

  // implements Message ----------------------------------------------

  FactionMagRecordProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactionMagRecordProto& from);
  void MergeFrom(const FactionMagRecordProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mag_id = 1;
  inline bool has_mag_id() const;
  inline void clear_mag_id();
  static const int kMagIdFieldNumber = 1;
  inline ::google::protobuf::int32 mag_id() const;
  inline void set_mag_id(::google::protobuf::int32 value);

  // optional int32 lamp_id = 2;
  inline bool has_lamp_id() const;
  inline void clear_lamp_id();
  static const int kLampIdFieldNumber = 2;
  inline ::google::protobuf::int32 lamp_id() const;
  inline void set_lamp_id(::google::protobuf::int32 value);

  // optional int32 guard_id = 3;
  inline bool has_guard_id() const;
  inline void clear_guard_id();
  static const int kGuardIdFieldNumber = 3;
  inline ::google::protobuf::int32 guard_id() const;
  inline void set_guard_id(::google::protobuf::int32 value);

  // optional int32 reel_id = 4;
  inline bool has_reel_id() const;
  inline void clear_reel_id();
  static const int kReelIdFieldNumber = 4;
  inline ::google::protobuf::int32 reel_id() const;
  inline void set_reel_id(::google::protobuf::int32 value);

  // optional int32 point = 5;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 5;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FactionMagRecordProto)
 private:
  inline void set_has_mag_id();
  inline void clear_has_mag_id();
  inline void set_has_lamp_id();
  inline void clear_has_lamp_id();
  inline void set_has_guard_id();
  inline void clear_has_guard_id();
  inline void set_has_reel_id();
  inline void clear_has_reel_id();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mag_id_;
  ::google::protobuf::int32 lamp_id_;
  ::google::protobuf::int32 guard_id_;
  ::google::protobuf::int32 reel_id_;
  ::google::protobuf::int32 point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FactionMagRecordProto* default_instance_;
};
// -------------------------------------------------------------------

class LoginSyncProto : public ::google::protobuf::Message {
 public:
  LoginSyncProto();
  virtual ~LoginSyncProto();

  LoginSyncProto(const LoginSyncProto& from);

  inline LoginSyncProto& operator=(const LoginSyncProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginSyncProto& default_instance();

  void Swap(LoginSyncProto* other);

  // implements Message ----------------------------------------------

  LoginSyncProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginSyncProto& from);
  void MergeFrom(const LoginSyncProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 faction_id = 1;
  inline bool has_faction_id() const;
  inline void clear_faction_id();
  static const int kFactionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 faction_id() const;
  inline void set_faction_id(::google::protobuf::uint32 value);

  // optional bytes faction_name = 2;
  inline bool has_faction_name() const;
  inline void clear_faction_name();
  static const int kFactionNameFieldNumber = 2;
  inline const ::std::string& faction_name() const;
  inline void set_faction_name(const ::std::string& value);
  inline void set_faction_name(const char* value);
  inline void set_faction_name(const void* value, size_t size);
  inline ::std::string* mutable_faction_name();
  inline ::std::string* release_faction_name();
  inline void set_allocated_faction_name(::std::string* faction_name);

  // optional int32 duty = 3;
  inline bool has_duty() const;
  inline void clear_duty();
  static const int kDutyFieldNumber = 3;
  inline ::google::protobuf::int32 duty() const;
  inline void set_duty(::google::protobuf::int32 value);

  // optional uint64 faction_leader = 4;
  inline bool has_faction_leader() const;
  inline void clear_faction_leader();
  static const int kFactionLeaderFieldNumber = 4;
  inline ::google::protobuf::uint64 faction_leader() const;
  inline void set_faction_leader(::google::protobuf::uint64 value);

  // optional int32 faction_level = 5;
  inline bool has_faction_level() const;
  inline void clear_faction_level();
  static const int kFactionLevelFieldNumber = 5;
  inline ::google::protobuf::int32 faction_level() const;
  inline void set_faction_level(::google::protobuf::int32 value);

  // optional uint32 team_id = 6;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 6;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional uint64 leader = 7;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 7;
  inline ::google::protobuf::uint64 leader() const;
  inline void set_leader(::google::protobuf::uint64 value);

  // optional int32 mem_count = 8;
  inline bool has_mem_count() const;
  inline void clear_mem_count();
  static const int kMemCountFieldNumber = 8;
  inline ::google::protobuf::int32 mem_count() const;
  inline void set_mem_count(::google::protobuf::int32 value);

  // optional int32 cloness_lev = 9;
  inline bool has_cloness_lev() const;
  inline void clear_cloness_lev();
  static const int kClonessLevFieldNumber = 9;
  inline ::google::protobuf::int32 cloness_lev() const;
  inline void set_cloness_lev(::google::protobuf::int32 value);

  // optional .proto_ff.LoginSynMarry marry = 10;
  inline bool has_marry() const;
  inline void clear_marry();
  static const int kMarryFieldNumber = 10;
  inline const ::proto_ff::LoginSynMarry& marry() const;
  inline ::proto_ff::LoginSynMarry* mutable_marry();
  inline ::proto_ff::LoginSynMarry* release_marry();
  inline void set_allocated_marry(::proto_ff::LoginSynMarry* marry);

  // optional .proto_ff.AoPlatProto plat = 11;
  inline bool has_plat() const;
  inline void clear_plat();
  static const int kPlatFieldNumber = 11;
  inline const ::proto_ff::AoPlatProto& plat() const;
  inline ::proto_ff::AoPlatProto* mutable_plat();
  inline ::proto_ff::AoPlatProto* release_plat();
  inline void set_allocated_plat(::proto_ff::AoPlatProto* plat);

  // optional .proto_ff.FactionMagRecordProto mag = 12;
  inline bool has_mag() const;
  inline void clear_mag();
  static const int kMagFieldNumber = 12;
  inline const ::proto_ff::FactionMagRecordProto& mag() const;
  inline ::proto_ff::FactionMagRecordProto* mutable_mag();
  inline ::proto_ff::FactionMagRecordProto* release_mag();
  inline void set_allocated_mag(::proto_ff::FactionMagRecordProto* mag);

  // @@protoc_insertion_point(class_scope:proto_ff.LoginSyncProto)
 private:
  inline void set_has_faction_id();
  inline void clear_has_faction_id();
  inline void set_has_faction_name();
  inline void clear_has_faction_name();
  inline void set_has_duty();
  inline void clear_has_duty();
  inline void set_has_faction_leader();
  inline void clear_has_faction_leader();
  inline void set_has_faction_level();
  inline void clear_has_faction_level();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_mem_count();
  inline void clear_has_mem_count();
  inline void set_has_cloness_lev();
  inline void clear_has_cloness_lev();
  inline void set_has_marry();
  inline void clear_has_marry();
  inline void set_has_plat();
  inline void clear_has_plat();
  inline void set_has_mag();
  inline void clear_has_mag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* faction_name_;
  ::google::protobuf::uint32 faction_id_;
  ::google::protobuf::int32 duty_;
  ::google::protobuf::uint64 faction_leader_;
  ::google::protobuf::int32 faction_level_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint64 leader_;
  ::google::protobuf::int32 mem_count_;
  ::google::protobuf::int32 cloness_lev_;
  ::proto_ff::LoginSynMarry* marry_;
  ::proto_ff::AoPlatProto* plat_;
  ::proto_ff::FactionMagRecordProto* mag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LoginSyncProto* default_instance_;
};
// -------------------------------------------------------------------

class CenterRoleProto : public ::google::protobuf::Message {
 public:
  CenterRoleProto();
  virtual ~CenterRoleProto();

  CenterRoleProto(const CenterRoleProto& from);

  inline CenterRoleProto& operator=(const CenterRoleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterRoleProto& default_instance();

  void Swap(CenterRoleProto* other);

  // implements Message ----------------------------------------------

  CenterRoleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterRoleProto& from);
  void MergeFrom(const CenterRoleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 lastlogout = 6;
  inline bool has_lastlogout() const;
  inline void clear_lastlogout();
  static const int kLastlogoutFieldNumber = 6;
  inline ::google::protobuf::uint64 lastlogout() const;
  inline void set_lastlogout(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 7;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 7;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint32 vip_level = 8;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional int64 hp = 9;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 9;
  inline ::google::protobuf::int64 hp() const;
  inline void set_hp(::google::protobuf::int64 value);

  // optional int64 max_hp = 10;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 10;
  inline ::google::protobuf::int64 max_hp() const;
  inline void set_max_hp(::google::protobuf::int64 value);

  // optional uint32 pt_stage = 11;
  inline bool has_pt_stage() const;
  inline void clear_pt_stage();
  static const int kPtStageFieldNumber = 11;
  inline ::google::protobuf::uint32 pt_stage() const;
  inline void set_pt_stage(::google::protobuf::uint32 value);

  // optional uint32 active = 12;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 12;
  inline ::google::protobuf::uint32 active() const;
  inline void set_active(::google::protobuf::uint32 value);

  // optional uint64 create_time = 13;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 13;
  inline ::google::protobuf::uint64 create_time() const;
  inline void set_create_time(::google::protobuf::uint64 value);

  // optional uint32 sdkrmb = 14;
  inline bool has_sdkrmb() const;
  inline void clear_sdkrmb();
  static const int kSdkrmbFieldNumber = 14;
  inline ::google::protobuf::uint32 sdkrmb() const;
  inline void set_sdkrmb(::google::protobuf::uint32 value);

  // optional int32 yaota_dupid = 15;
  inline bool has_yaota_dupid() const;
  inline void clear_yaota_dupid();
  static const int kYaotaDupidFieldNumber = 15;
  inline ::google::protobuf::int32 yaota_dupid() const;
  inline void set_yaota_dupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CenterRoleProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_lastlogout();
  inline void clear_has_lastlogout();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_pt_stage();
  inline void clear_has_pt_stage();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_sdkrmb();
  inline void clear_has_sdkrmb();
  inline void set_has_yaota_dupid();
  inline void clear_has_yaota_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 lastlogout_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::int64 hp_;
  ::google::protobuf::uint32 vip_level_;
  ::google::protobuf::uint32 pt_stage_;
  ::google::protobuf::int64 max_hp_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::uint32 active_;
  ::google::protobuf::uint32 sdkrmb_;
  ::google::protobuf::int32 yaota_dupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CenterRoleProto* default_instance_;
};
// -------------------------------------------------------------------

class SocialRoleProto : public ::google::protobuf::Message {
 public:
  SocialRoleProto();
  virtual ~SocialRoleProto();

  SocialRoleProto(const SocialRoleProto& from);

  inline SocialRoleProto& operator=(const SocialRoleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialRoleProto& default_instance();

  void Swap(SocialRoleProto* other);

  // implements Message ----------------------------------------------

  SocialRoleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialRoleProto& from);
  void MergeFrom(const SocialRoleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 prof = 4;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 4;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 fight = 6;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 6;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 lastlogout = 7;
  inline bool has_lastlogout() const;
  inline void clear_lastlogout();
  static const int kLastlogoutFieldNumber = 7;
  inline ::google::protobuf::uint64 lastlogout() const;
  inline void set_lastlogout(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 8;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 8;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint32 vip_level = 9;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional uint32 zid = 10;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 10;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional bool isonline = 11;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsonlineFieldNumber = 11;
  inline bool isonline() const;
  inline void set_isonline(bool value);

  // optional int64 hp = 12;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 12;
  inline ::google::protobuf::int64 hp() const;
  inline void set_hp(::google::protobuf::int64 value);

  // optional int64 max_hp = 13;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 13;
  inline ::google::protobuf::int64 max_hp() const;
  inline void set_max_hp(::google::protobuf::int64 value);

  // optional uint64 sceneid = 14;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 14;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 15;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 15;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional uint32 scenezid = 16;
  inline bool has_scenezid() const;
  inline void clear_scenezid();
  static const int kScenezidFieldNumber = 16;
  inline ::google::protobuf::uint32 scenezid() const;
  inline void set_scenezid(::google::protobuf::uint32 value);

  // optional uint32 factionid = 17;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 17;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);

  // optional int32 yaota_dupid = 18;
  inline bool has_yaota_dupid() const;
  inline void clear_yaota_dupid();
  static const int kYaotaDupidFieldNumber = 18;
  inline ::google::protobuf::int32 yaota_dupid() const;
  inline void set_yaota_dupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SocialRoleProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_lastlogout();
  inline void clear_has_lastlogout();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_isonline();
  inline void clear_has_isonline();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_scenezid();
  inline void clear_has_scenezid();
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_yaota_dupid();
  inline void clear_has_yaota_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 lastlogout_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 vip_level_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint32 zid_;
  bool isonline_;
  ::google::protobuf::int64 hp_;
  ::google::protobuf::int64 max_hp_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 mapid_;
  ::google::protobuf::uint32 scenezid_;
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::int32 yaota_dupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SocialRoleProto* default_instance_;
};
// -------------------------------------------------------------------

class ClanView : public ::google::protobuf::Message {
 public:
  ClanView();
  virtual ~ClanView();

  ClanView(const ClanView& from);

  inline ClanView& operator=(const ClanView& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClanView& default_instance();

  void Swap(ClanView* other);

  // implements Message ----------------------------------------------

  ClanView* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClanView& from);
  void MergeFrom(const ClanView& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 clan_id = 1;
  inline bool has_clan_id() const;
  inline void clear_clan_id();
  static const int kClanIdFieldNumber = 1;
  inline ::google::protobuf::uint64 clan_id() const;
  inline void set_clan_id(::google::protobuf::uint64 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 clan_type = 3;
  inline bool has_clan_type() const;
  inline void clear_clan_type();
  static const int kClanTypeFieldNumber = 3;
  inline ::google::protobuf::int32 clan_type() const;
  inline void set_clan_type(::google::protobuf::int32 value);

  // optional bytes clan_name = 4;
  inline bool has_clan_name() const;
  inline void clear_clan_name();
  static const int kClanNameFieldNumber = 4;
  inline const ::std::string& clan_name() const;
  inline void set_clan_name(const ::std::string& value);
  inline void set_clan_name(const char* value);
  inline void set_clan_name(const void* value, size_t size);
  inline ::std::string* mutable_clan_name();
  inline ::std::string* release_clan_name();
  inline void set_allocated_clan_name(::std::string* clan_name);

  // optional int32 badge_id = 5;
  inline bool has_badge_id() const;
  inline void clear_badge_id();
  static const int kBadgeIdFieldNumber = 5;
  inline ::google::protobuf::int32 badge_id() const;
  inline void set_badge_id(::google::protobuf::int32 value);

  // optional bytes badge_name = 6;
  inline bool has_badge_name() const;
  inline void clear_badge_name();
  static const int kBadgeNameFieldNumber = 6;
  inline const ::std::string& badge_name() const;
  inline void set_badge_name(const ::std::string& value);
  inline void set_badge_name(const char* value);
  inline void set_badge_name(const void* value, size_t size);
  inline ::std::string* mutable_badge_name();
  inline ::std::string* release_badge_name();
  inline void set_allocated_badge_name(::std::string* badge_name);

  // @@protoc_insertion_point(class_scope:proto_ff.ClanView)
 private:
  inline void set_has_clan_id();
  inline void clear_has_clan_id();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_clan_type();
  inline void clear_has_clan_type();
  inline void set_has_clan_name();
  inline void clear_has_clan_name();
  inline void set_has_badge_id();
  inline void clear_has_badge_id();
  inline void set_has_badge_name();
  inline void clear_has_badge_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 clan_id_;
  ::google::protobuf::uint64 cid_;
  ::std::string* clan_name_;
  ::google::protobuf::int32 clan_type_;
  ::google::protobuf::int32 badge_id_;
  ::std::string* badge_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ClanView* default_instance_;
};
// -------------------------------------------------------------------

class Attr : public ::google::protobuf::Message {
 public:
  Attr();
  virtual ~Attr();

  Attr(const Attr& from);

  inline Attr& operator=(const Attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attr& default_instance();

  void Swap(Attr* other);

  // implements Message ----------------------------------------------

  Attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attr& from);
  void MergeFrom(const Attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Attr)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Attr* default_instance_;
};
// -------------------------------------------------------------------

class BlueStarAttr : public ::google::protobuf::Message {
 public:
  BlueStarAttr();
  virtual ~BlueStarAttr();

  BlueStarAttr(const BlueStarAttr& from);

  inline BlueStarAttr& operator=(const BlueStarAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlueStarAttr& default_instance();

  void Swap(BlueStarAttr* other);

  // implements Message ----------------------------------------------

  BlueStarAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlueStarAttr& from);
  void MergeFrom(const BlueStarAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // optional int32 lv_part = 3;
  inline bool has_lv_part() const;
  inline void clear_lv_part();
  static const int kLvPartFieldNumber = 3;
  inline ::google::protobuf::int32 lv_part() const;
  inline void set_lv_part(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BlueStarAttr)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_lv_part();
  inline void clear_has_lv_part();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 lv_part_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BlueStarAttr* default_instance_;
};
// -------------------------------------------------------------------

class TurnAttr : public ::google::protobuf::Message {
 public:
  TurnAttr();
  virtual ~TurnAttr();

  TurnAttr(const TurnAttr& from);

  inline TurnAttr& operator=(const TurnAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnAttr& default_instance();

  void Swap(TurnAttr* other);

  // implements Message ----------------------------------------------

  TurnAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnAttr& from);
  void MergeFrom(const TurnAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 com_pos = 1;
  inline int com_pos_size() const;
  inline void clear_com_pos();
  static const int kComPosFieldNumber = 1;
  inline ::google::protobuf::int32 com_pos(int index) const;
  inline void set_com_pos(int index, ::google::protobuf::int32 value);
  inline void add_com_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      com_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_com_pos();

  // repeated int32 star_pos = 2;
  inline int star_pos_size() const;
  inline void clear_star_pos();
  static const int kStarPosFieldNumber = 2;
  inline ::google::protobuf::int32 star_pos(int index) const;
  inline void set_star_pos(int index, ::google::protobuf::int32 value);
  inline void add_star_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      star_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_star_pos();

  // @@protoc_insertion_point(class_scope:proto_ff.TurnAttr)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > com_pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > star_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TurnAttr* default_instance_;
};
// -------------------------------------------------------------------

class ItemProtoInfo : public ::google::protobuf::Message {
 public:
  ItemProtoInfo();
  virtual ~ItemProtoInfo();

  ItemProtoInfo(const ItemProtoInfo& from);

  inline ItemProtoInfo& operator=(const ItemProtoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemProtoInfo& default_instance();

  void Swap(ItemProtoInfo* other);

  // implements Message ----------------------------------------------

  ItemProtoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemProtoInfo& from);
  void MergeFrom(const ItemProtoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional uint64 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional int64 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int64 item_num() const;
  inline void set_item_num(::google::protobuf::int64 value);

  // optional int32 bind = 4;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 4;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated .proto_ff.Attr base = 6;
  inline int base_size() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 6;
  inline const ::proto_ff::Attr& base(int index) const;
  inline ::proto_ff::Attr* mutable_base(int index);
  inline ::proto_ff::Attr* add_base();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      base() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_base();

  // repeated .proto_ff.Attr refine = 7;
  inline int refine_size() const;
  inline void clear_refine();
  static const int kRefineFieldNumber = 7;
  inline const ::proto_ff::Attr& refine(int index) const;
  inline ::proto_ff::Attr* mutable_refine(int index);
  inline ::proto_ff::Attr* add_refine();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      refine() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_refine();

  // repeated .proto_ff.BlueStarAttr blue = 8;
  inline int blue_size() const;
  inline void clear_blue();
  static const int kBlueFieldNumber = 8;
  inline const ::proto_ff::BlueStarAttr& blue(int index) const;
  inline ::proto_ff::BlueStarAttr* mutable_blue(int index);
  inline ::proto_ff::BlueStarAttr* add_blue();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >&
      blue() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >*
      mutable_blue();

  // repeated .proto_ff.Attr god = 9;
  inline int god_size() const;
  inline void clear_god();
  static const int kGodFieldNumber = 9;
  inline const ::proto_ff::Attr& god(int index) const;
  inline ::proto_ff::Attr* mutable_god(int index);
  inline ::proto_ff::Attr* add_god();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      god() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_god();

  // optional uint64 expireTime = 10;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 10;
  inline ::google::protobuf::uint64 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint64 value);

  // optional int32 strong_lv = 11;
  inline bool has_strong_lv() const;
  inline void clear_strong_lv();
  static const int kStrongLvFieldNumber = 11;
  inline ::google::protobuf::int32 strong_lv() const;
  inline void set_strong_lv(::google::protobuf::int32 value);

  // optional int32 strong_wear_quality = 12;
  inline bool has_strong_wear_quality() const;
  inline void clear_strong_wear_quality();
  static const int kStrongWearQualityFieldNumber = 12;
  inline ::google::protobuf::int32 strong_wear_quality() const;
  inline void set_strong_wear_quality(::google::protobuf::int32 value);

  // optional int32 strong_exp = 13;
  inline bool has_strong_exp() const;
  inline void clear_strong_exp();
  static const int kStrongExpFieldNumber = 13;
  inline ::google::protobuf::int32 strong_exp() const;
  inline void set_strong_exp(::google::protobuf::int32 value);

  // optional int32 spec_lv = 14;
  inline bool has_spec_lv() const;
  inline void clear_spec_lv();
  static const int kSpecLvFieldNumber = 14;
  inline ::google::protobuf::int32 spec_lv() const;
  inline void set_spec_lv(::google::protobuf::int32 value);

  // optional int32 strong_wear_quality_exp = 15;
  inline bool has_strong_wear_quality_exp() const;
  inline void clear_strong_wear_quality_exp();
  static const int kStrongWearQualityExpFieldNumber = 15;
  inline ::google::protobuf::int32 strong_wear_quality_exp() const;
  inline void set_strong_wear_quality_exp(::google::protobuf::int32 value);

  // repeated .proto_ff.Attr misc = 16;
  inline int misc_size() const;
  inline void clear_misc();
  static const int kMiscFieldNumber = 16;
  inline const ::proto_ff::Attr& misc(int index) const;
  inline ::proto_ff::Attr* mutable_misc(int index);
  inline ::proto_ff::Attr* add_misc();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      misc() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_misc();

  // optional int32 makeId = 17;
  inline bool has_makeid() const;
  inline void clear_makeid();
  static const int kMakeIdFieldNumber = 17;
  inline ::google::protobuf::int32 makeid() const;
  inline void set_makeid(::google::protobuf::int32 value);

  // optional int32 state = 18;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 18;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // repeated int32 gold_star = 19;
  inline int gold_star_size() const;
  inline void clear_gold_star();
  static const int kGoldStarFieldNumber = 19;
  inline ::google::protobuf::int32 gold_star(int index) const;
  inline void set_gold_star(int index, ::google::protobuf::int32 value);
  inline void add_gold_star(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gold_star() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gold_star();

  // repeated int32 silver_star = 20;
  inline int silver_star_size() const;
  inline void clear_silver_star();
  static const int kSilverStarFieldNumber = 20;
  inline ::google::protobuf::int32 silver_star(int index) const;
  inline void set_silver_star(int index, ::google::protobuf::int32 value);
  inline void add_silver_star(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      silver_star() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_silver_star();

  // optional uint64 make_time = 21;
  inline bool has_make_time() const;
  inline void clear_make_time();
  static const int kMakeTimeFieldNumber = 21;
  inline ::google::protobuf::uint64 make_time() const;
  inline void set_make_time(::google::protobuf::uint64 value);

  // optional bytes make_name = 22;
  inline bool has_make_name() const;
  inline void clear_make_name();
  static const int kMakeNameFieldNumber = 22;
  inline const ::std::string& make_name() const;
  inline void set_make_name(const ::std::string& value);
  inline void set_make_name(const char* value);
  inline void set_make_name(const void* value, size_t size);
  inline ::std::string* mutable_make_name();
  inline ::std::string* release_make_name();
  inline void set_allocated_make_name(::std::string* make_name);

  // optional int32 savvy = 23;
  inline bool has_savvy() const;
  inline void clear_savvy();
  static const int kSavvyFieldNumber = 23;
  inline ::google::protobuf::int32 savvy() const;
  inline void set_savvy(::google::protobuf::int32 value);

  // repeated .proto_ff.ComPair64 skill = 24;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 24;
  inline const ::proto_ff::ComPair64& skill(int index) const;
  inline ::proto_ff::ComPair64* mutable_skill(int index);
  inline ::proto_ff::ComPair64* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_skill();

  // optional int32 evolve_lv = 25;
  inline bool has_evolve_lv() const;
  inline void clear_evolve_lv();
  static const int kEvolveLvFieldNumber = 25;
  inline ::google::protobuf::int32 evolve_lv() const;
  inline void set_evolve_lv(::google::protobuf::int32 value);

  // optional int32 awaken_lv = 26;
  inline bool has_awaken_lv() const;
  inline void clear_awaken_lv();
  static const int kAwakenLvFieldNumber = 26;
  inline ::google::protobuf::int32 awaken_lv() const;
  inline void set_awaken_lv(::google::protobuf::int32 value);

  // optional .proto_ff.TurnAttr turn_attr = 27;
  inline bool has_turn_attr() const;
  inline void clear_turn_attr();
  static const int kTurnAttrFieldNumber = 27;
  inline const ::proto_ff::TurnAttr& turn_attr() const;
  inline ::proto_ff::TurnAttr* mutable_turn_attr();
  inline ::proto_ff::TurnAttr* release_turn_attr();
  inline void set_allocated_turn_attr(::proto_ff::TurnAttr* turn_attr);

  // optional int64 item_chg_count = 28;
  inline bool has_item_chg_count() const;
  inline void clear_item_chg_count();
  static const int kItemChgCountFieldNumber = 28;
  inline ::google::protobuf::int64 item_chg_count() const;
  inline void set_item_chg_count(::google::protobuf::int64 value);

  // repeated int32 unlock_attr_index = 29;
  inline int unlock_attr_index_size() const;
  inline void clear_unlock_attr_index();
  static const int kUnlockAttrIndexFieldNumber = 29;
  inline ::google::protobuf::int32 unlock_attr_index(int index) const;
  inline void set_unlock_attr_index(int index, ::google::protobuf::int32 value);
  inline void add_unlock_attr_index(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unlock_attr_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unlock_attr_index();

  // optional uint32 base_attr_percent = 50;
  inline bool has_base_attr_percent() const;
  inline void clear_base_attr_percent();
  static const int kBaseAttrPercentFieldNumber = 50;
  inline ::google::protobuf::uint32 base_attr_percent() const;
  inline void set_base_attr_percent(::google::protobuf::uint32 value);

  // optional uint32 star_attr_percent = 51;
  inline bool has_star_attr_percent() const;
  inline void clear_star_attr_percent();
  static const int kStarAttrPercentFieldNumber = 51;
  inline ::google::protobuf::uint32 star_attr_percent() const;
  inline void set_star_attr_percent(::google::protobuf::uint32 value);

  // optional uint32 god_attr_percent = 52;
  inline bool has_god_attr_percent() const;
  inline void clear_god_attr_percent();
  static const int kGodAttrPercentFieldNumber = 52;
  inline ::google::protobuf::uint32 god_attr_percent() const;
  inline void set_god_attr_percent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemProtoInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_strong_lv();
  inline void clear_has_strong_lv();
  inline void set_has_strong_wear_quality();
  inline void clear_has_strong_wear_quality();
  inline void set_has_strong_exp();
  inline void clear_has_strong_exp();
  inline void set_has_spec_lv();
  inline void clear_has_spec_lv();
  inline void set_has_strong_wear_quality_exp();
  inline void clear_has_strong_wear_quality_exp();
  inline void set_has_makeid();
  inline void clear_has_makeid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_make_time();
  inline void clear_has_make_time();
  inline void set_has_make_name();
  inline void clear_has_make_name();
  inline void set_has_savvy();
  inline void clear_has_savvy();
  inline void set_has_evolve_lv();
  inline void clear_has_evolve_lv();
  inline void set_has_awaken_lv();
  inline void clear_has_awaken_lv();
  inline void set_has_turn_attr();
  inline void clear_has_turn_attr();
  inline void set_has_item_chg_count();
  inline void clear_has_item_chg_count();
  inline void set_has_base_attr_percent();
  inline void clear_has_base_attr_percent();
  inline void set_has_star_attr_percent();
  inline void clear_has_star_attr_percent();
  inline void set_has_god_attr_percent();
  inline void clear_has_god_attr_percent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 bind_;
  ::google::protobuf::int64 item_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > base_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > refine_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr > blue_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 strong_lv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > god_;
  ::google::protobuf::uint64 expiretime_;
  ::google::protobuf::int32 strong_wear_quality_;
  ::google::protobuf::int32 strong_exp_;
  ::google::protobuf::int32 spec_lv_;
  ::google::protobuf::int32 strong_wear_quality_exp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > misc_;
  ::google::protobuf::int32 makeid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gold_star_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > silver_star_;
  ::google::protobuf::uint64 make_time_;
  ::std::string* make_name_;
  ::google::protobuf::int32 savvy_;
  ::google::protobuf::int32 evolve_lv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > skill_;
  ::proto_ff::TurnAttr* turn_attr_;
  ::google::protobuf::int64 item_chg_count_;
  ::google::protobuf::int32 awaken_lv_;
  ::google::protobuf::uint32 base_attr_percent_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unlock_attr_index_;
  ::google::protobuf::uint32 star_attr_percent_;
  ::google::protobuf::uint32 god_attr_percent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(32 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ItemProtoInfo* default_instance_;
};
// -------------------------------------------------------------------

class StoneSlotInfo : public ::google::protobuf::Message {
 public:
  StoneSlotInfo();
  virtual ~StoneSlotInfo();

  StoneSlotInfo(const StoneSlotInfo& from);

  inline StoneSlotInfo& operator=(const StoneSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoneSlotInfo& default_instance();

  void Swap(StoneSlotInfo* other);

  // implements Message ----------------------------------------------

  StoneSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoneSlotInfo& from);
  void MergeFrom(const StoneSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stone_pos = 1;
  inline bool has_stone_pos() const;
  inline void clear_stone_pos();
  static const int kStonePosFieldNumber = 1;
  inline ::google::protobuf::int32 stone_pos() const;
  inline void set_stone_pos(::google::protobuf::int32 value);

  // optional int64 stoneid = 2;
  inline bool has_stoneid() const;
  inline void clear_stoneid();
  static const int kStoneidFieldNumber = 2;
  inline ::google::protobuf::int64 stoneid() const;
  inline void set_stoneid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StoneSlotInfo)
 private:
  inline void set_has_stone_pos();
  inline void clear_has_stone_pos();
  inline void set_has_stoneid();
  inline void clear_has_stoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 stoneid_;
  ::google::protobuf::int32 stone_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StoneSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class WashSlotInfo : public ::google::protobuf::Message {
 public:
  WashSlotInfo();
  virtual ~WashSlotInfo();

  WashSlotInfo(const WashSlotInfo& from);

  inline WashSlotInfo& operator=(const WashSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WashSlotInfo& default_instance();

  void Swap(WashSlotInfo* other);

  // implements Message ----------------------------------------------

  WashSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WashSlotInfo& from);
  void MergeFrom(const WashSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 lock = 3;
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 3;
  inline ::google::protobuf::int32 lock() const;
  inline void set_lock(::google::protobuf::int32 value);

  // optional int32 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WashSlotInfo)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_lock();
  inline void clear_has_lock();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 lock_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WashSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class RefineSlotInfo : public ::google::protobuf::Message {
 public:
  RefineSlotInfo();
  virtual ~RefineSlotInfo();

  RefineSlotInfo(const RefineSlotInfo& from);

  inline RefineSlotInfo& operator=(const RefineSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefineSlotInfo& default_instance();

  void Swap(RefineSlotInfo* other);

  // implements Message ----------------------------------------------

  RefineSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefineSlotInfo& from);
  void MergeFrom(const RefineSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 refine_lv = 1;
  inline bool has_refine_lv() const;
  inline void clear_refine_lv();
  static const int kRefineLvFieldNumber = 1;
  inline ::google::protobuf::int32 refine_lv() const;
  inline void set_refine_lv(::google::protobuf::int32 value);

  // repeated .proto_ff.ComPair unlocks = 2;
  inline int unlocks_size() const;
  inline void clear_unlocks();
  static const int kUnlocksFieldNumber = 2;
  inline const ::proto_ff::ComPair& unlocks(int index) const;
  inline ::proto_ff::ComPair* mutable_unlocks(int index);
  inline ::proto_ff::ComPair* add_unlocks();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      unlocks() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_unlocks();

  // optional int32 gm_lv = 3;
  inline bool has_gm_lv() const;
  inline void clear_gm_lv();
  static const int kGmLvFieldNumber = 3;
  inline ::google::protobuf::int32 gm_lv() const;
  inline void set_gm_lv(::google::protobuf::int32 value);

  // repeated int32 lock_pos = 4;
  inline int lock_pos_size() const;
  inline void clear_lock_pos();
  static const int kLockPosFieldNumber = 4;
  inline ::google::protobuf::int32 lock_pos(int index) const;
  inline void set_lock_pos(int index, ::google::protobuf::int32 value);
  inline void add_lock_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lock_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lock_pos();

  // @@protoc_insertion_point(class_scope:proto_ff.RefineSlotInfo)
 private:
  inline void set_has_refine_lv();
  inline void clear_has_refine_lv();
  inline void set_has_gm_lv();
  inline void clear_has_gm_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > unlocks_;
  ::google::protobuf::int32 refine_lv_;
  ::google::protobuf::int32 gm_lv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lock_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RefineSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class SealSlotInfo : public ::google::protobuf::Message {
 public:
  SealSlotInfo();
  virtual ~SealSlotInfo();

  SealSlotInfo(const SealSlotInfo& from);

  inline SealSlotInfo& operator=(const SealSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SealSlotInfo& default_instance();

  void Swap(SealSlotInfo* other);

  // implements Message ----------------------------------------------

  SealSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SealSlotInfo& from);
  void MergeFrom(const SealSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SealSlotInfo)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 itemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SealSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipSlotInfo : public ::google::protobuf::Message {
 public:
  EquipSlotInfo();
  virtual ~EquipSlotInfo();

  EquipSlotInfo(const EquipSlotInfo& from);

  inline EquipSlotInfo& operator=(const EquipSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSlotInfo& default_instance();

  void Swap(EquipSlotInfo* other);

  // implements Message ----------------------------------------------

  EquipSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSlotInfo& from);
  void MergeFrom(const EquipSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot_pos = 1;
  inline bool has_slot_pos() const;
  inline void clear_slot_pos();
  static const int kSlotPosFieldNumber = 1;
  inline ::google::protobuf::int32 slot_pos() const;
  inline void set_slot_pos(::google::protobuf::int32 value);

  // optional int64 total_score = 2;
  inline bool has_total_score() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 2;
  inline ::google::protobuf::int64 total_score() const;
  inline void set_total_score(::google::protobuf::int64 value);

  // optional int32 stronglv = 3;
  inline bool has_stronglv() const;
  inline void clear_stronglv();
  static const int kStronglvFieldNumber = 3;
  inline ::google::protobuf::int32 stronglv() const;
  inline void set_stronglv(::google::protobuf::int32 value);

  // repeated .proto_ff.StoneSlotInfo stones = 4;
  inline int stones_size() const;
  inline void clear_stones();
  static const int kStonesFieldNumber = 4;
  inline const ::proto_ff::StoneSlotInfo& stones(int index) const;
  inline ::proto_ff::StoneSlotInfo* mutable_stones(int index);
  inline ::proto_ff::StoneSlotInfo* add_stones();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StoneSlotInfo >&
      stones() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StoneSlotInfo >*
      mutable_stones();

  // optional int32 stone_pay_slot_open = 5;
  inline bool has_stone_pay_slot_open() const;
  inline void clear_stone_pay_slot_open();
  static const int kStonePaySlotOpenFieldNumber = 5;
  inline ::google::protobuf::int32 stone_pay_slot_open() const;
  inline void set_stone_pay_slot_open(::google::protobuf::int32 value);

  // repeated .proto_ff.WashSlotInfo washs = 6;
  inline int washs_size() const;
  inline void clear_washs();
  static const int kWashsFieldNumber = 6;
  inline const ::proto_ff::WashSlotInfo& washs(int index) const;
  inline ::proto_ff::WashSlotInfo* mutable_washs(int index);
  inline ::proto_ff::WashSlotInfo* add_washs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WashSlotInfo >&
      washs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WashSlotInfo >*
      mutable_washs();

  // optional int32 suitlv = 7;
  inline bool has_suitlv() const;
  inline void clear_suitlv();
  static const int kSuitlvFieldNumber = 7;
  inline ::google::protobuf::int32 suitlv() const;
  inline void set_suitlv(::google::protobuf::int32 value);

  // optional .proto_ff.RefineSlotInfo refine = 8;
  inline bool has_refine() const;
  inline void clear_refine();
  static const int kRefineFieldNumber = 8;
  inline const ::proto_ff::RefineSlotInfo& refine() const;
  inline ::proto_ff::RefineSlotInfo* mutable_refine();
  inline ::proto_ff::RefineSlotInfo* release_refine();
  inline void set_allocated_refine(::proto_ff::RefineSlotInfo* refine);

  // optional int32 awaken_lv = 9;
  inline bool has_awaken_lv() const;
  inline void clear_awaken_lv();
  static const int kAwakenLvFieldNumber = 9;
  inline ::google::protobuf::int32 awaken_lv() const;
  inline void set_awaken_lv(::google::protobuf::int32 value);

  // optional int32 awaken_break_flag = 10;
  inline bool has_awaken_break_flag() const;
  inline void clear_awaken_break_flag();
  static const int kAwakenBreakFlagFieldNumber = 10;
  inline ::google::protobuf::int32 awaken_break_flag() const;
  inline void set_awaken_break_flag(::google::protobuf::int32 value);

  // optional int32 soaring_lv = 11;
  inline bool has_soaring_lv() const;
  inline void clear_soaring_lv();
  static const int kSoaringLvFieldNumber = 11;
  inline ::google::protobuf::int32 soaring_lv() const;
  inline void set_soaring_lv(::google::protobuf::int32 value);

  // optional int32 quality_lv = 12;
  inline bool has_quality_lv() const;
  inline void clear_quality_lv();
  static const int kQualityLvFieldNumber = 12;
  inline ::google::protobuf::int32 quality_lv() const;
  inline void set_quality_lv(::google::protobuf::int32 value);

  // repeated .proto_ff.SealSlotInfo seal_slots = 13;
  inline int seal_slots_size() const;
  inline void clear_seal_slots();
  static const int kSealSlotsFieldNumber = 13;
  inline const ::proto_ff::SealSlotInfo& seal_slots(int index) const;
  inline ::proto_ff::SealSlotInfo* mutable_seal_slots(int index);
  inline ::proto_ff::SealSlotInfo* add_seal_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SealSlotInfo >&
      seal_slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SealSlotInfo >*
      mutable_seal_slots();

  // repeated int32 active_seal_ids = 14;
  inline int active_seal_ids_size() const;
  inline void clear_active_seal_ids();
  static const int kActiveSealIdsFieldNumber = 14;
  inline ::google::protobuf::int32 active_seal_ids(int index) const;
  inline void set_active_seal_ids(int index, ::google::protobuf::int32 value);
  inline void add_active_seal_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      active_seal_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_active_seal_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.EquipSlotInfo)
 private:
  inline void set_has_slot_pos();
  inline void clear_has_slot_pos();
  inline void set_has_total_score();
  inline void clear_has_total_score();
  inline void set_has_stronglv();
  inline void clear_has_stronglv();
  inline void set_has_stone_pay_slot_open();
  inline void clear_has_stone_pay_slot_open();
  inline void set_has_suitlv();
  inline void clear_has_suitlv();
  inline void set_has_refine();
  inline void clear_has_refine();
  inline void set_has_awaken_lv();
  inline void clear_has_awaken_lv();
  inline void set_has_awaken_break_flag();
  inline void clear_has_awaken_break_flag();
  inline void set_has_soaring_lv();
  inline void clear_has_soaring_lv();
  inline void set_has_quality_lv();
  inline void clear_has_quality_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 total_score_;
  ::google::protobuf::int32 slot_pos_;
  ::google::protobuf::int32 stronglv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::StoneSlotInfo > stones_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WashSlotInfo > washs_;
  ::google::protobuf::int32 stone_pay_slot_open_;
  ::google::protobuf::int32 suitlv_;
  ::proto_ff::RefineSlotInfo* refine_;
  ::google::protobuf::int32 awaken_lv_;
  ::google::protobuf::int32 awaken_break_flag_;
  ::google::protobuf::int32 soaring_lv_;
  ::google::protobuf::int32 quality_lv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::SealSlotInfo > seal_slots_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > active_seal_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EquipSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipInfo : public ::google::protobuf::Message {
 public:
  EquipInfo();
  virtual ~EquipInfo();

  EquipInfo(const EquipInfo& from);

  inline EquipInfo& operator=(const EquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipInfo& default_instance();

  void Swap(EquipInfo* other);

  // implements Message ----------------------------------------------

  EquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipInfo& from);
  void MergeFrom(const EquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional .proto_ff.ItemProtoInfo equip = 2;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 2;
  inline const ::proto_ff::ItemProtoInfo& equip() const;
  inline ::proto_ff::ItemProtoInfo* mutable_equip();
  inline ::proto_ff::ItemProtoInfo* release_equip();
  inline void set_allocated_equip(::proto_ff::ItemProtoInfo* equip);

  // optional .proto_ff.EquipSlotInfo slot = 3;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 3;
  inline const ::proto_ff::EquipSlotInfo& slot() const;
  inline ::proto_ff::EquipSlotInfo* mutable_slot();
  inline ::proto_ff::EquipSlotInfo* release_slot();
  inline void set_allocated_slot(::proto_ff::EquipSlotInfo* slot);

  // @@protoc_insertion_point(class_scope:proto_ff.EquipInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_equip();
  inline void clear_has_equip();
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::ItemProtoInfo* equip_;
  ::proto_ff::EquipSlotInfo* slot_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipLvAttrInfo : public ::google::protobuf::Message {
 public:
  EquipLvAttrInfo();
  virtual ~EquipLvAttrInfo();

  EquipLvAttrInfo(const EquipLvAttrInfo& from);

  inline EquipLvAttrInfo& operator=(const EquipLvAttrInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipLvAttrInfo& default_instance();

  void Swap(EquipLvAttrInfo* other);

  // implements Message ----------------------------------------------

  EquipLvAttrInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipLvAttrInfo& from);
  void MergeFrom(const EquipLvAttrInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EquipLvAttrInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EquipLvAttrInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemSimpleProto : public ::google::protobuf::Message {
 public:
  ItemSimpleProto();
  virtual ~ItemSimpleProto();

  ItemSimpleProto(const ItemSimpleProto& from);

  inline ItemSimpleProto& operator=(const ItemSimpleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemSimpleProto& default_instance();

  void Swap(ItemSimpleProto* other);

  // implements Message ----------------------------------------------

  ItemSimpleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemSimpleProto& from);
  void MergeFrom(const ItemSimpleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional int64 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int64 num() const;
  inline void set_num(::google::protobuf::int64 value);

  // optional int32 bind = 3;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 3;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemSimpleProto)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_bind();
  inline void clear_has_bind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::int64 num_;
  ::google::protobuf::int32 bind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ItemSimpleProto* default_instance_;
};
// -------------------------------------------------------------------

class MultItemSimpleProto : public ::google::protobuf::Message {
 public:
  MultItemSimpleProto();
  virtual ~MultItemSimpleProto();

  MultItemSimpleProto(const MultItemSimpleProto& from);

  inline MultItemSimpleProto& operator=(const MultItemSimpleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MultItemSimpleProto& default_instance();

  void Swap(MultItemSimpleProto* other);

  // implements Message ----------------------------------------------

  MultItemSimpleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MultItemSimpleProto& from);
  void MergeFrom(const MultItemSimpleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ItemSimpleProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::ItemSimpleProto& info(int index) const;
  inline ::proto_ff::ItemSimpleProto* mutable_info(int index);
  inline ::proto_ff::ItemSimpleProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.MultItemSimpleProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MultItemSimpleProto* default_instance_;
};
// -------------------------------------------------------------------

class PetInfo : public ::google::protobuf::Message {
 public:
  PetInfo();
  virtual ~PetInfo();

  PetInfo(const PetInfo& from);

  inline PetInfo& operator=(const PetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetInfo& default_instance();

  void Swap(PetInfo* other);

  // implements Message ----------------------------------------------

  PetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetInfo& from);
  void MergeFrom(const PetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 instId = 1;
  inline bool has_instid() const;
  inline void clear_instid();
  static const int kInstIdFieldNumber = 1;
  inline ::google::protobuf::int32 instid() const;
  inline void set_instid(::google::protobuf::int32 value);

  // optional int64 cfgid = 2;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgidFieldNumber = 2;
  inline ::google::protobuf::int64 cfgid() const;
  inline void set_cfgid(::google::protobuf::int64 value);

  // optional int32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 steplv = 4;
  inline bool has_steplv() const;
  inline void clear_steplv();
  static const int kSteplvFieldNumber = 4;
  inline ::google::protobuf::int32 steplv() const;
  inline void set_steplv(::google::protobuf::int32 value);

  // optional int32 starlv = 5;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarlvFieldNumber = 5;
  inline ::google::protobuf::int32 starlv() const;
  inline void set_starlv(::google::protobuf::int32 value);

  // optional int32 activeSkillLv = 6;
  inline bool has_activeskilllv() const;
  inline void clear_activeskilllv();
  static const int kActiveSkillLvFieldNumber = 6;
  inline ::google::protobuf::int32 activeskilllv() const;
  inline void set_activeskilllv(::google::protobuf::int32 value);

  // repeated int32 exclusiveSkillLvVec = 7;
  inline int exclusiveskilllvvec_size() const;
  inline void clear_exclusiveskilllvvec();
  static const int kExclusiveSkillLvVecFieldNumber = 7;
  inline ::google::protobuf::int32 exclusiveskilllvvec(int index) const;
  inline void set_exclusiveskilllvvec(int index, ::google::protobuf::int32 value);
  inline void add_exclusiveskilllvvec(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      exclusiveskilllvvec() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_exclusiveskilllvvec();

  // repeated int32 passiveSkillLvVec = 8;
  inline int passiveskilllvvec_size() const;
  inline void clear_passiveskilllvvec();
  static const int kPassiveSkillLvVecFieldNumber = 8;
  inline ::google::protobuf::int32 passiveskilllvvec(int index) const;
  inline void set_passiveskilllvvec(int index, ::google::protobuf::int32 value);
  inline void add_passiveskilllvvec(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      passiveskilllvvec() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_passiveskilllvvec();

  // optional float initgrow = 9;
  inline bool has_initgrow() const;
  inline void clear_initgrow();
  static const int kInitgrowFieldNumber = 9;
  inline float initgrow() const;
  inline void set_initgrow(float value);

  // optional int32 slot = 10;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 10;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 lvexp = 11;
  inline bool has_lvexp() const;
  inline void clear_lvexp();
  static const int kLvexpFieldNumber = 11;
  inline ::google::protobuf::int32 lvexp() const;
  inline void set_lvexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PetInfo)
 private:
  inline void set_has_instid();
  inline void clear_has_instid();
  inline void set_has_cfgid();
  inline void clear_has_cfgid();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_steplv();
  inline void clear_has_steplv();
  inline void set_has_starlv();
  inline void clear_has_starlv();
  inline void set_has_activeskilllv();
  inline void clear_has_activeskilllv();
  inline void set_has_initgrow();
  inline void clear_has_initgrow();
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_lvexp();
  inline void clear_has_lvexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cfgid_;
  ::google::protobuf::int32 instid_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 steplv_;
  ::google::protobuf::int32 starlv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > exclusiveskilllvvec_;
  ::google::protobuf::int32 activeskilllv_;
  float initgrow_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > passiveskilllvvec_;
  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 lvexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PetInfo* default_instance_;
};
// -------------------------------------------------------------------

class PetHatchInfo : public ::google::protobuf::Message {
 public:
  PetHatchInfo();
  virtual ~PetHatchInfo();

  PetHatchInfo(const PetHatchInfo& from);

  inline PetHatchInfo& operator=(const PetHatchInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetHatchInfo& default_instance();

  void Swap(PetHatchInfo* other);

  // implements Message ----------------------------------------------

  PetHatchInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetHatchInfo& from);
  void MergeFrom(const PetHatchInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 unlock = 2;
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 2;
  inline ::google::protobuf::int32 unlock() const;
  inline void set_unlock(::google::protobuf::int32 value);

  // optional int64 eggid = 3;
  inline bool has_eggid() const;
  inline void clear_eggid();
  static const int kEggidFieldNumber = 3;
  inline ::google::protobuf::int64 eggid() const;
  inline void set_eggid(::google::protobuf::int64 value);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PetHatchInfo)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_unlock();
  inline void clear_has_unlock();
  inline void set_has_eggid();
  inline void clear_has_eggid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 unlock_;
  ::google::protobuf::int64 eggid_;
  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PetHatchInfo* default_instance_;
};
// -------------------------------------------------------------------

class PetGrow : public ::google::protobuf::Message {
 public:
  PetGrow();
  virtual ~PetGrow();

  PetGrow(const PetGrow& from);

  inline PetGrow& operator=(const PetGrow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetGrow& default_instance();

  void Swap(PetGrow* other);

  // implements Message ----------------------------------------------

  PetGrow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetGrow& from);
  void MergeFrom(const PetGrow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cfgid = 1;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgidFieldNumber = 1;
  inline ::google::protobuf::int32 cfgid() const;
  inline void set_cfgid(::google::protobuf::int32 value);

  // optional int32 stronglv = 2;
  inline bool has_stronglv() const;
  inline void clear_stronglv();
  static const int kStronglvFieldNumber = 2;
  inline ::google::protobuf::int32 stronglv() const;
  inline void set_stronglv(::google::protobuf::int32 value);

  // optional int32 starlv = 3;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarlvFieldNumber = 3;
  inline ::google::protobuf::int32 starlv() const;
  inline void set_starlv(::google::protobuf::int32 value);

  // optional int32 starindex = 4;
  inline bool has_starindex() const;
  inline void clear_starindex();
  static const int kStarindexFieldNumber = 4;
  inline ::google::protobuf::int32 starindex() const;
  inline void set_starindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PetGrow)
 private:
  inline void set_has_cfgid();
  inline void clear_has_cfgid();
  inline void set_has_stronglv();
  inline void clear_has_stronglv();
  inline void set_has_starlv();
  inline void clear_has_starlv();
  inline void set_has_starindex();
  inline void clear_has_starindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cfgid_;
  ::google::protobuf::int32 stronglv_;
  ::google::protobuf::int32 starlv_;
  ::google::protobuf::int32 starindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PetGrow* default_instance_;
};
// -------------------------------------------------------------------

class PetYaoHunSlot : public ::google::protobuf::Message {
 public:
  PetYaoHunSlot();
  virtual ~PetYaoHunSlot();

  PetYaoHunSlot(const PetYaoHunSlot& from);

  inline PetYaoHunSlot& operator=(const PetYaoHunSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetYaoHunSlot& default_instance();

  void Swap(PetYaoHunSlot* other);

  // implements Message ----------------------------------------------

  PetYaoHunSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetYaoHunSlot& from);
  void MergeFrom(const PetYaoHunSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot_pos = 1;
  inline bool has_slot_pos() const;
  inline void clear_slot_pos();
  static const int kSlotPosFieldNumber = 1;
  inline ::google::protobuf::int32 slot_pos() const;
  inline void set_slot_pos(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 step = 4;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 4;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // optional .proto_ff.ItemProtoInfo equip = 5;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 5;
  inline const ::proto_ff::ItemProtoInfo& equip() const;
  inline ::proto_ff::ItemProtoInfo* mutable_equip();
  inline ::proto_ff::ItemProtoInfo* release_equip();
  inline void set_allocated_equip(::proto_ff::ItemProtoInfo* equip);

  // @@protoc_insertion_point(class_scope:proto_ff.PetYaoHunSlot)
 private:
  inline void set_has_slot_pos();
  inline void clear_has_slot_pos();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_equip();
  inline void clear_has_equip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_pos_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 step_;
  ::proto_ff::ItemProtoInfo* equip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PetYaoHunSlot* default_instance_;
};
// -------------------------------------------------------------------

class PetYaoHunEntry : public ::google::protobuf::Message {
 public:
  PetYaoHunEntry();
  virtual ~PetYaoHunEntry();

  PetYaoHunEntry(const PetYaoHunEntry& from);

  inline PetYaoHunEntry& operator=(const PetYaoHunEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetYaoHunEntry& default_instance();

  void Swap(PetYaoHunEntry* other);

  // implements Message ----------------------------------------------

  PetYaoHunEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetYaoHunEntry& from);
  void MergeFrom(const PetYaoHunEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fight_pos = 1;
  inline bool has_fight_pos() const;
  inline void clear_fight_pos();
  static const int kFightPosFieldNumber = 1;
  inline ::google::protobuf::int32 fight_pos() const;
  inline void set_fight_pos(::google::protobuf::int32 value);

  // optional int32 is_unlock = 2;
  inline bool has_is_unlock() const;
  inline void clear_is_unlock();
  static const int kIsUnlockFieldNumber = 2;
  inline ::google::protobuf::int32 is_unlock() const;
  inline void set_is_unlock(::google::protobuf::int32 value);

  // repeated .proto_ff.PetYaoHunSlot infos = 3;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 3;
  inline const ::proto_ff::PetYaoHunSlot& infos(int index) const;
  inline ::proto_ff::PetYaoHunSlot* mutable_infos(int index);
  inline ::proto_ff::PetYaoHunSlot* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PetYaoHunSlot >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PetYaoHunSlot >*
      mutable_infos();

  // repeated int32 suitids = 4;
  inline int suitids_size() const;
  inline void clear_suitids();
  static const int kSuitidsFieldNumber = 4;
  inline ::google::protobuf::int32 suitids(int index) const;
  inline void set_suitids(int index, ::google::protobuf::int32 value);
  inline void add_suitids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      suitids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_suitids();

  // @@protoc_insertion_point(class_scope:proto_ff.PetYaoHunEntry)
 private:
  inline void set_has_fight_pos();
  inline void clear_has_fight_pos();
  inline void set_has_is_unlock();
  inline void clear_has_is_unlock();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fight_pos_;
  ::google::protobuf::int32 is_unlock_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PetYaoHunSlot > infos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > suitids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PetYaoHunEntry* default_instance_;
};
// -------------------------------------------------------------------

class PetYaoHunModule : public ::google::protobuf::Message {
 public:
  PetYaoHunModule();
  virtual ~PetYaoHunModule();

  PetYaoHunModule(const PetYaoHunModule& from);

  inline PetYaoHunModule& operator=(const PetYaoHunModule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetYaoHunModule& default_instance();

  void Swap(PetYaoHunModule* other);

  // implements Message ----------------------------------------------

  PetYaoHunModule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetYaoHunModule& from);
  void MergeFrom(const PetYaoHunModule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.PetYaoHunEntry entrys = 1;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 1;
  inline const ::proto_ff::PetYaoHunEntry& entrys(int index) const;
  inline ::proto_ff::PetYaoHunEntry* mutable_entrys(int index);
  inline ::proto_ff::PetYaoHunEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PetYaoHunEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PetYaoHunEntry >*
      mutable_entrys();

  // optional int32 lianyao_tq_flag = 2;
  inline bool has_lianyao_tq_flag() const;
  inline void clear_lianyao_tq_flag();
  static const int kLianyaoTqFlagFieldNumber = 2;
  inline ::google::protobuf::int32 lianyao_tq_flag() const;
  inline void set_lianyao_tq_flag(::google::protobuf::int32 value);

  // optional int32 yaolu_lv = 3;
  inline bool has_yaolu_lv() const;
  inline void clear_yaolu_lv();
  static const int kYaoluLvFieldNumber = 3;
  inline ::google::protobuf::int32 yaolu_lv() const;
  inline void set_yaolu_lv(::google::protobuf::int32 value);

  // optional int32 yaolu_exp = 4;
  inline bool has_yaolu_exp() const;
  inline void clear_yaolu_exp();
  static const int kYaoluExpFieldNumber = 4;
  inline ::google::protobuf::int32 yaolu_exp() const;
  inline void set_yaolu_exp(::google::protobuf::int32 value);

  // optional int32 yaoqi = 5;
  inline bool has_yaoqi() const;
  inline void clear_yaoqi();
  static const int kYaoqiFieldNumber = 5;
  inline ::google::protobuf::int32 yaoqi() const;
  inline void set_yaoqi(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PetYaoHunModule)
 private:
  inline void set_has_lianyao_tq_flag();
  inline void clear_has_lianyao_tq_flag();
  inline void set_has_yaolu_lv();
  inline void clear_has_yaolu_lv();
  inline void set_has_yaolu_exp();
  inline void clear_has_yaolu_exp();
  inline void set_has_yaoqi();
  inline void clear_has_yaoqi();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::PetYaoHunEntry > entrys_;
  ::google::protobuf::int32 lianyao_tq_flag_;
  ::google::protobuf::int32 yaolu_lv_;
  ::google::protobuf::int32 yaolu_exp_;
  ::google::protobuf::int32 yaoqi_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PetYaoHunModule* default_instance_;
};
// -------------------------------------------------------------------

class MailParamProto : public ::google::protobuf::Message {
 public:
  MailParamProto();
  virtual ~MailParamProto();

  MailParamProto(const MailParamProto& from);

  inline MailParamProto& operator=(const MailParamProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailParamProto& default_instance();

  void Swap(MailParamProto* other);

  // implements Message ----------------------------------------------

  MailParamProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailParamProto& from);
  void MergeFrom(const MailParamProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cfgid = 1;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgidFieldNumber = 1;
  inline ::google::protobuf::uint64 cfgid() const;
  inline void set_cfgid(::google::protobuf::uint64 value);

  // repeated bytes str_param = 2;
  inline int str_param_size() const;
  inline void clear_str_param();
  static const int kStrParamFieldNumber = 2;
  inline const ::std::string& str_param(int index) const;
  inline ::std::string* mutable_str_param(int index);
  inline void set_str_param(int index, const ::std::string& value);
  inline void set_str_param(int index, const char* value);
  inline void set_str_param(int index, const void* value, size_t size);
  inline ::std::string* add_str_param();
  inline void add_str_param(const ::std::string& value);
  inline void add_str_param(const char* value);
  inline void add_str_param(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& str_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_str_param();

  // repeated uint64 int_param = 3;
  inline int int_param_size() const;
  inline void clear_int_param();
  static const int kIntParamFieldNumber = 3;
  inline ::google::protobuf::uint64 int_param(int index) const;
  inline void set_int_param(int index, ::google::protobuf::uint64 value);
  inline void add_int_param(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      int_param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_int_param();

  // @@protoc_insertion_point(class_scope:proto_ff.MailParamProto)
 private:
  inline void set_has_cfgid();
  inline void clear_has_cfgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cfgid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> str_param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > int_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailParamProto* default_instance_;
};
// -------------------------------------------------------------------

class MailStrProto : public ::google::protobuf::Message {
 public:
  MailStrProto();
  virtual ~MailStrProto();

  MailStrProto(const MailStrProto& from);

  inline MailStrProto& operator=(const MailStrProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailStrProto& default_instance();

  void Swap(MailStrProto* other);

  // implements Message ----------------------------------------------

  MailStrProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailStrProto& from);
  void MergeFrom(const MailStrProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const void* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // optional .proto_ff.MailParamProto param = 2;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline const ::proto_ff::MailParamProto& param() const;
  inline ::proto_ff::MailParamProto* mutable_param();
  inline ::proto_ff::MailParamProto* release_param();
  inline void set_allocated_param(::proto_ff::MailParamProto* param);

  // @@protoc_insertion_point(class_scope:proto_ff.MailStrProto)
 private:
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* str_;
  ::proto_ff::MailParamProto* param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailStrProto* default_instance_;
};
// -------------------------------------------------------------------

class MailAttachmentList : public ::google::protobuf::Message {
 public:
  MailAttachmentList();
  virtual ~MailAttachmentList();

  MailAttachmentList(const MailAttachmentList& from);

  inline MailAttachmentList& operator=(const MailAttachmentList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailAttachmentList& default_instance();

  void Swap(MailAttachmentList* other);

  // implements Message ----------------------------------------------

  MailAttachmentList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailAttachmentList& from);
  void MergeFrom(const MailAttachmentList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ItemProtoInfo itemInfo = 1;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 1;
  inline const ::proto_ff::ItemProtoInfo& iteminfo(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_iteminfo(int index);
  inline ::proto_ff::ItemProtoInfo* add_iteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_iteminfo();

  // @@protoc_insertion_point(class_scope:proto_ff.MailAttachmentList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > iteminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailAttachmentList* default_instance_;
};
// -------------------------------------------------------------------

class MailHead : public ::google::protobuf::Message {
 public:
  MailHead();
  virtual ~MailHead();

  MailHead(const MailHead& from);

  inline MailHead& operator=(const MailHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailHead& default_instance();

  void Swap(MailHead* other);

  // implements Message ----------------------------------------------

  MailHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailHead& from);
  void MergeFrom(const MailHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 sendPlayerId = 3;
  inline bool has_sendplayerid() const;
  inline void clear_sendplayerid();
  static const int kSendPlayerIdFieldNumber = 3;
  inline ::google::protobuf::uint64 sendplayerid() const;
  inline void set_sendplayerid(::google::protobuf::uint64 value);

  // optional bytes sendPlayerName = 4;
  inline bool has_sendplayername() const;
  inline void clear_sendplayername();
  static const int kSendPlayerNameFieldNumber = 4;
  inline const ::std::string& sendplayername() const;
  inline void set_sendplayername(const ::std::string& value);
  inline void set_sendplayername(const char* value);
  inline void set_sendplayername(const void* value, size_t size);
  inline ::std::string* mutable_sendplayername();
  inline ::std::string* release_sendplayername();
  inline void set_allocated_sendplayername(::std::string* sendplayername);

  // optional uint64 destPlayerId = 5;
  inline bool has_destplayerid() const;
  inline void clear_destplayerid();
  static const int kDestPlayerIdFieldNumber = 5;
  inline ::google::protobuf::uint64 destplayerid() const;
  inline void set_destplayerid(::google::protobuf::uint64 value);

  // optional .proto_ff.MailStrProto topic = 6;
  inline bool has_topic() const;
  inline void clear_topic();
  static const int kTopicFieldNumber = 6;
  inline const ::proto_ff::MailStrProto& topic() const;
  inline ::proto_ff::MailStrProto* mutable_topic();
  inline ::proto_ff::MailStrProto* release_topic();
  inline void set_allocated_topic(::proto_ff::MailStrProto* topic);

  // optional uint64 createTime = 7;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional uint32 status = 8;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 8;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional int32 fetch = 9;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 9;
  inline ::google::protobuf::int32 fetch() const;
  inline void set_fetch(::google::protobuf::int32 value);

  // optional int32 has_attach = 10;
  inline bool has_has_attach() const;
  inline void clear_has_attach();
  static const int kHasAttachFieldNumber = 10;
  inline ::google::protobuf::int32 has_attach() const;
  inline void set_has_attach(::google::protobuf::int32 value);

  // optional uint64 begin_time = 11;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 11;
  inline ::google::protobuf::uint64 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint64 value);

  // optional uint64 end_time = 12;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 12;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MailHead)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_sendplayerid();
  inline void clear_has_sendplayerid();
  inline void set_has_sendplayername();
  inline void clear_has_sendplayername();
  inline void set_has_destplayerid();
  inline void clear_has_destplayerid();
  inline void set_has_topic();
  inline void clear_has_topic();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_has_attach();
  inline void clear_has_has_attach();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::uint64 sendplayerid_;
  ::std::string* sendplayername_;
  ::google::protobuf::uint64 destplayerid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 status_;
  ::proto_ff::MailStrProto* topic_;
  ::google::protobuf::uint64 createtime_;
  ::google::protobuf::int32 fetch_;
  ::google::protobuf::int32 has_attach_;
  ::google::protobuf::uint64 begin_time_;
  ::google::protobuf::uint64 end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailHead* default_instance_;
};
// -------------------------------------------------------------------

class MailInfo : public ::google::protobuf::Message {
 public:
  MailInfo();
  virtual ~MailInfo();

  MailInfo(const MailInfo& from);

  inline MailInfo& operator=(const MailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailInfo& default_instance();

  void Swap(MailInfo* other);

  // implements Message ----------------------------------------------

  MailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailInfo& from);
  void MergeFrom(const MailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.MailHead mailHead = 1;
  inline bool has_mailhead() const;
  inline void clear_mailhead();
  static const int kMailHeadFieldNumber = 1;
  inline const ::proto_ff::MailHead& mailhead() const;
  inline ::proto_ff::MailHead* mutable_mailhead();
  inline ::proto_ff::MailHead* release_mailhead();
  inline void set_allocated_mailhead(::proto_ff::MailHead* mailhead);

  // optional .proto_ff.MailStrProto content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::proto_ff::MailStrProto& content() const;
  inline ::proto_ff::MailStrProto* mutable_content();
  inline ::proto_ff::MailStrProto* release_content();
  inline void set_allocated_content(::proto_ff::MailStrProto* content);

  // optional uint64 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::uint64 gold() const;
  inline void set_gold(::google::protobuf::uint64 value);

  // optional uint64 diamond = 4;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 4;
  inline ::google::protobuf::uint64 diamond() const;
  inline void set_diamond(::google::protobuf::uint64 value);

  // optional uint64 bindDiamond = 5;
  inline bool has_binddiamond() const;
  inline void clear_binddiamond();
  static const int kBindDiamondFieldNumber = 5;
  inline ::google::protobuf::uint64 binddiamond() const;
  inline void set_binddiamond(::google::protobuf::uint64 value);

  // optional uint64 magiccrystal = 6;
  inline bool has_magiccrystal() const;
  inline void clear_magiccrystal();
  static const int kMagiccrystalFieldNumber = 6;
  inline ::google::protobuf::uint64 magiccrystal() const;
  inline void set_magiccrystal(::google::protobuf::uint64 value);

  // optional uint64 prestige = 7;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 7;
  inline ::google::protobuf::uint64 prestige() const;
  inline void set_prestige(::google::protobuf::uint64 value);

  // optional .proto_ff.MailAttachmentList attachmentList = 8;
  inline bool has_attachmentlist() const;
  inline void clear_attachmentlist();
  static const int kAttachmentListFieldNumber = 8;
  inline const ::proto_ff::MailAttachmentList& attachmentlist() const;
  inline ::proto_ff::MailAttachmentList* mutable_attachmentlist();
  inline ::proto_ff::MailAttachmentList* release_attachmentlist();
  inline void set_allocated_attachmentlist(::proto_ff::MailAttachmentList* attachmentlist);

  // optional int32 source = 9;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 9;
  inline ::google::protobuf::int32 source() const;
  inline void set_source(::google::protobuf::int32 value);

  // optional int64 sourceVal = 10;
  inline bool has_sourceval() const;
  inline void clear_sourceval();
  static const int kSourceValFieldNumber = 10;
  inline ::google::protobuf::int64 sourceval() const;
  inline void set_sourceval(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MailInfo)
 private:
  inline void set_has_mailhead();
  inline void clear_has_mailhead();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_binddiamond();
  inline void clear_has_binddiamond();
  inline void set_has_magiccrystal();
  inline void clear_has_magiccrystal();
  inline void set_has_prestige();
  inline void clear_has_prestige();
  inline void set_has_attachmentlist();
  inline void clear_has_attachmentlist();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_sourceval();
  inline void clear_has_sourceval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::MailHead* mailhead_;
  ::proto_ff::MailStrProto* content_;
  ::google::protobuf::uint64 gold_;
  ::google::protobuf::uint64 diamond_;
  ::google::protobuf::uint64 binddiamond_;
  ::google::protobuf::uint64 magiccrystal_;
  ::google::protobuf::uint64 prestige_;
  ::proto_ff::MailAttachmentList* attachmentlist_;
  ::google::protobuf::int64 sourceval_;
  ::google::protobuf::int32 source_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailInfo* default_instance_;
};
// -------------------------------------------------------------------

class WebMailItemProto : public ::google::protobuf::Message {
 public:
  WebMailItemProto();
  virtual ~WebMailItemProto();

  WebMailItemProto(const WebMailItemProto& from);

  inline WebMailItemProto& operator=(const WebMailItemProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebMailItemProto& default_instance();

  void Swap(WebMailItemProto* other);

  // implements Message ----------------------------------------------

  WebMailItemProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebMailItemProto& from);
  void MergeFrom(const WebMailItemProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint64 num() const;
  inline void set_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WebMailItemProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WebMailItemProto* default_instance_;
};
// -------------------------------------------------------------------

class WebMailDataProto : public ::google::protobuf::Message {
 public:
  WebMailDataProto();
  virtual ~WebMailDataProto();

  WebMailDataProto(const WebMailDataProto& from);

  inline WebMailDataProto& operator=(const WebMailDataProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebMailDataProto& default_instance();

  void Swap(WebMailDataProto* other);

  // implements Message ----------------------------------------------

  WebMailDataProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebMailDataProto& from);
  void MergeFrom(const WebMailDataProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // optional uint64 createTime = 2;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional .proto_ff.MailStrProto topic = 3;
  inline bool has_topic() const;
  inline void clear_topic();
  static const int kTopicFieldNumber = 3;
  inline const ::proto_ff::MailStrProto& topic() const;
  inline ::proto_ff::MailStrProto* mutable_topic();
  inline ::proto_ff::MailStrProto* release_topic();
  inline void set_allocated_topic(::proto_ff::MailStrProto* topic);

  // optional int32 fetch = 4;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 4;
  inline ::google::protobuf::int32 fetch() const;
  inline void set_fetch(::google::protobuf::int32 value);

  // optional .proto_ff.MailStrProto content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::proto_ff::MailStrProto& content() const;
  inline ::proto_ff::MailStrProto* mutable_content();
  inline ::proto_ff::MailStrProto* release_content();
  inline void set_allocated_content(::proto_ff::MailStrProto* content);

  // optional uint64 gold = 6;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 6;
  inline ::google::protobuf::uint64 gold() const;
  inline void set_gold(::google::protobuf::uint64 value);

  // optional uint64 diamond = 7;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 7;
  inline ::google::protobuf::uint64 diamond() const;
  inline void set_diamond(::google::protobuf::uint64 value);

  // optional uint64 bindDiamond = 8;
  inline bool has_binddiamond() const;
  inline void clear_binddiamond();
  static const int kBindDiamondFieldNumber = 8;
  inline ::google::protobuf::uint64 binddiamond() const;
  inline void set_binddiamond(::google::protobuf::uint64 value);

  // optional uint64 arenaScore = 9;
  inline bool has_arenascore() const;
  inline void clear_arenascore();
  static const int kArenaScoreFieldNumber = 9;
  inline ::google::protobuf::uint64 arenascore() const;
  inline void set_arenascore(::google::protobuf::uint64 value);

  // optional uint64 magiccrystal = 10;
  inline bool has_magiccrystal() const;
  inline void clear_magiccrystal();
  static const int kMagiccrystalFieldNumber = 10;
  inline ::google::protobuf::uint64 magiccrystal() const;
  inline void set_magiccrystal(::google::protobuf::uint64 value);

  // optional uint64 prestige = 11;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 11;
  inline ::google::protobuf::uint64 prestige() const;
  inline void set_prestige(::google::protobuf::uint64 value);

  // repeated .proto_ff.WebMailItemProto itemList = 12;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 12;
  inline const ::proto_ff::WebMailItemProto& itemlist(int index) const;
  inline ::proto_ff::WebMailItemProto* mutable_itemlist(int index);
  inline ::proto_ff::WebMailItemProto* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:proto_ff.WebMailDataProto)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_topic();
  inline void clear_has_topic();
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_binddiamond();
  inline void clear_has_binddiamond();
  inline void set_has_arenascore();
  inline void clear_has_arenascore();
  inline void set_has_magiccrystal();
  inline void clear_has_magiccrystal();
  inline void set_has_prestige();
  inline void clear_has_prestige();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::uint64 createtime_;
  ::proto_ff::MailStrProto* topic_;
  ::proto_ff::MailStrProto* content_;
  ::google::protobuf::uint64 gold_;
  ::google::protobuf::uint64 diamond_;
  ::google::protobuf::uint64 binddiamond_;
  ::google::protobuf::uint64 arenascore_;
  ::google::protobuf::uint64 magiccrystal_;
  ::google::protobuf::uint64 prestige_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto > itemlist_;
  ::google::protobuf::int32 fetch_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WebMailDataProto* default_instance_;
};
// -------------------------------------------------------------------

class UseItemArgProto : public ::google::protobuf::Message {
 public:
  UseItemArgProto();
  virtual ~UseItemArgProto();

  UseItemArgProto(const UseItemArgProto& from);

  inline UseItemArgProto& operator=(const UseItemArgProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseItemArgProto& default_instance();

  void Swap(UseItemArgProto* other);

  // implements Message ----------------------------------------------

  UseItemArgProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseItemArgProto& from);
  void MergeFrom(const UseItemArgProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 int_param = 1;
  inline bool has_int_param() const;
  inline void clear_int_param();
  static const int kIntParamFieldNumber = 1;
  inline ::google::protobuf::int64 int_param() const;
  inline void set_int_param(::google::protobuf::int64 value);

  // optional bytes str_param = 2;
  inline bool has_str_param() const;
  inline void clear_str_param();
  static const int kStrParamFieldNumber = 2;
  inline const ::std::string& str_param() const;
  inline void set_str_param(const ::std::string& value);
  inline void set_str_param(const char* value);
  inline void set_str_param(const void* value, size_t size);
  inline ::std::string* mutable_str_param();
  inline ::std::string* release_str_param();
  inline void set_allocated_str_param(::std::string* str_param);

  // repeated uint64 item_lst = 3;
  inline int item_lst_size() const;
  inline void clear_item_lst();
  static const int kItemLstFieldNumber = 3;
  inline ::google::protobuf::uint64 item_lst(int index) const;
  inline void set_item_lst(int index, ::google::protobuf::uint64 value);
  inline void add_item_lst(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      item_lst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_item_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.UseItemArgProto)
 private:
  inline void set_has_int_param();
  inline void clear_has_int_param();
  inline void set_has_str_param();
  inline void clear_has_str_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 int_param_;
  ::std::string* str_param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > item_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static UseItemArgProto* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRoleFacadeCastRsp : public ::google::protobuf::Message {
 public:
  NotifyRoleFacadeCastRsp();
  virtual ~NotifyRoleFacadeCastRsp();

  NotifyRoleFacadeCastRsp(const NotifyRoleFacadeCastRsp& from);

  inline NotifyRoleFacadeCastRsp& operator=(const NotifyRoleFacadeCastRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRoleFacadeCastRsp& default_instance();

  void Swap(NotifyRoleFacadeCastRsp* other);

  // implements Message ----------------------------------------------

  NotifyRoleFacadeCastRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRoleFacadeCastRsp& from);
  void MergeFrom(const NotifyRoleFacadeCastRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 2;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 2;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyRoleFacadeCastRsp)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_facade();
  inline void clear_has_facade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::proto_ff::RoleFacadeProto* facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyRoleFacadeCastRsp* default_instance_;
};
// -------------------------------------------------------------------

class ArenaChallResult : public ::google::protobuf::Message {
 public:
  ArenaChallResult();
  virtual ~ArenaChallResult();

  ArenaChallResult(const ArenaChallResult& from);

  inline ArenaChallResult& operator=(const ArenaChallResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaChallResult& default_instance();

  void Swap(ArenaChallResult* other);

  // implements Message ----------------------------------------------

  ArenaChallResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaChallResult& from);
  void MergeFrom(const ArenaChallResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bool chall = 2;
  inline bool has_chall() const;
  inline void clear_chall();
  static const int kChallFieldNumber = 2;
  inline bool chall() const;
  inline void set_chall(bool value);

  // optional int64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // optional bytes dst_name = 4;
  inline bool has_dst_name() const;
  inline void clear_dst_name();
  static const int kDstNameFieldNumber = 4;
  inline const ::std::string& dst_name() const;
  inline void set_dst_name(const ::std::string& value);
  inline void set_dst_name(const char* value);
  inline void set_dst_name(const void* value, size_t size);
  inline ::std::string* mutable_dst_name();
  inline ::std::string* release_dst_name();
  inline void set_allocated_dst_name(::std::string* dst_name);

  // optional int32 src_rank_id = 5;
  inline bool has_src_rank_id() const;
  inline void clear_src_rank_id();
  static const int kSrcRankIdFieldNumber = 5;
  inline ::google::protobuf::int32 src_rank_id() const;
  inline void set_src_rank_id(::google::protobuf::int32 value);

  // optional int32 dst_rank_id = 6;
  inline bool has_dst_rank_id() const;
  inline void clear_dst_rank_id();
  static const int kDstRankIdFieldNumber = 6;
  inline ::google::protobuf::int32 dst_rank_id() const;
  inline void set_dst_rank_id(::google::protobuf::int32 value);

  // repeated .proto_ff.ComItem items = 7;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 7;
  inline const ::proto_ff::ComItem& items(int index) const;
  inline ::proto_ff::ComItem* mutable_items(int index);
  inline ::proto_ff::ComItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
      mutable_items();

  // optional int64 dup_id = 8;
  inline bool has_dup_id() const;
  inline void clear_dup_id();
  static const int kDupIdFieldNumber = 8;
  inline ::google::protobuf::int64 dup_id() const;
  inline void set_dup_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ArenaChallResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_chall();
  inline void clear_has_chall();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_dst_name();
  inline void clear_has_dst_name();
  inline void set_has_src_rank_id();
  inline void clear_has_src_rank_id();
  inline void set_has_dst_rank_id();
  inline void clear_has_dst_rank_id();
  inline void set_has_dup_id();
  inline void clear_has_dup_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  bool chall_;
  ::google::protobuf::int64 time_;
  ::std::string* dst_name_;
  ::google::protobuf::int32 src_rank_id_;
  ::google::protobuf::int32 dst_rank_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem > items_;
  ::google::protobuf::int64 dup_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ArenaChallResult* default_instance_;
};
// -------------------------------------------------------------------

class FunctionUnlockInfoData : public ::google::protobuf::Message {
 public:
  FunctionUnlockInfoData();
  virtual ~FunctionUnlockInfoData();

  FunctionUnlockInfoData(const FunctionUnlockInfoData& from);

  inline FunctionUnlockInfoData& operator=(const FunctionUnlockInfoData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockInfoData& default_instance();

  void Swap(FunctionUnlockInfoData* other);

  // implements Message ----------------------------------------------

  FunctionUnlockInfoData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockInfoData& from);
  void MergeFrom(const FunctionUnlockInfoData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 unlockId = 1;
  inline bool has_unlockid() const;
  inline void clear_unlockid();
  static const int kUnlockIdFieldNumber = 1;
  inline ::google::protobuf::uint64 unlockid() const;
  inline void set_unlockid(::google::protobuf::uint64 value);

  // optional bool get_reward = 2;
  inline bool has_get_reward() const;
  inline void clear_get_reward();
  static const int kGetRewardFieldNumber = 2;
  inline bool get_reward() const;
  inline void set_get_reward(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockInfoData)
 private:
  inline void set_has_unlockid();
  inline void clear_has_unlockid();
  inline void set_has_get_reward();
  inline void clear_has_get_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 unlockid_;
  bool get_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockInfoData* default_instance_;
};
// -------------------------------------------------------------------

class FunctionUnlockInfo : public ::google::protobuf::Message {
 public:
  FunctionUnlockInfo();
  virtual ~FunctionUnlockInfo();

  FunctionUnlockInfo(const FunctionUnlockInfo& from);

  inline FunctionUnlockInfo& operator=(const FunctionUnlockInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockInfo& default_instance();

  void Swap(FunctionUnlockInfo* other);

  // implements Message ----------------------------------------------

  FunctionUnlockInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockInfo& from);
  void MergeFrom(const FunctionUnlockInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FunctionUnlockInfoData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::FunctionUnlockInfoData& data(int index) const;
  inline ::proto_ff::FunctionUnlockInfoData* mutable_data(int index);
  inline ::proto_ff::FunctionUnlockInfoData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockInfo* default_instance_;
};
// -------------------------------------------------------------------

class RolePlayerMiniInfo : public ::google::protobuf::Message {
 public:
  RolePlayerMiniInfo();
  virtual ~RolePlayerMiniInfo();

  RolePlayerMiniInfo(const RolePlayerMiniInfo& from);

  inline RolePlayerMiniInfo& operator=(const RolePlayerMiniInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RolePlayerMiniInfo& default_instance();

  void Swap(RolePlayerMiniInfo* other);

  // implements Message ----------------------------------------------

  RolePlayerMiniInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RolePlayerMiniInfo& from);
  void MergeFrom(const RolePlayerMiniInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional bytes playerName = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const void* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional uint32 zid = 3;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 3;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 closeness = 6;
  inline bool has_closeness() const;
  inline void clear_closeness();
  static const int kClosenessFieldNumber = 6;
  inline ::google::protobuf::uint32 closeness() const;
  inline void set_closeness(::google::protobuf::uint32 value);

  // optional uint32 recentType = 7;
  inline bool has_recenttype() const;
  inline void clear_recenttype();
  static const int kRecentTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 recenttype() const;
  inline void set_recenttype(::google::protobuf::uint32 value);

  // optional uint64 recentTime = 8;
  inline bool has_recenttime() const;
  inline void clear_recenttime();
  static const int kRecentTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 recenttime() const;
  inline void set_recenttime(::google::protobuf::uint64 value);

  // optional uint32 prof = 9;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 9;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 teamId = 10;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 10;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint32 unionId = 11;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIdFieldNumber = 11;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);

  // optional uint64 fightPower = 12;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightPowerFieldNumber = 12;
  inline ::google::protobuf::uint64 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint64 value);

  // optional uint32 killMeTimes = 13;
  inline bool has_killmetimes() const;
  inline void clear_killmetimes();
  static const int kKillMeTimesFieldNumber = 13;
  inline ::google::protobuf::uint32 killmetimes() const;
  inline void set_killmetimes(::google::protobuf::uint32 value);

  // optional uint64 offlineTime = 14;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflineTimeFieldNumber = 14;
  inline ::google::protobuf::uint64 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint64 value);

  // optional bytes connect = 15;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 15;
  inline const ::std::string& connect() const;
  inline void set_connect(const ::std::string& value);
  inline void set_connect(const char* value);
  inline void set_connect(const void* value, size_t size);
  inline ::std::string* mutable_connect();
  inline ::std::string* release_connect();
  inline void set_allocated_connect(::std::string* connect);

  // optional bool online = 16;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 16;
  inline bool online() const;
  inline void set_online(bool value);

  // optional uint32 vipLevel = 17;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 17;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleFacadeProto facade = 18;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 18;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint32 marry = 19;
  inline bool has_marry() const;
  inline void clear_marry();
  static const int kMarryFieldNumber = 19;
  inline ::google::protobuf::uint32 marry() const;
  inline void set_marry(::google::protobuf::uint32 value);

  // optional uint64 clan3_id = 20;
  inline bool has_clan3_id() const;
  inline void clear_clan3_id();
  static const int kClan3IdFieldNumber = 20;
  inline ::google::protobuf::uint64 clan3_id() const;
  inline void set_clan3_id(::google::protobuf::uint64 value);

  // optional uint64 clan5_id = 21;
  inline bool has_clan5_id() const;
  inline void clear_clan5_id();
  static const int kClan5IdFieldNumber = 21;
  inline ::google::protobuf::uint64 clan5_id() const;
  inline void set_clan5_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RolePlayerMiniInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_closeness();
  inline void clear_has_closeness();
  inline void set_has_recenttype();
  inline void clear_has_recenttype();
  inline void set_has_recenttime();
  inline void clear_has_recenttime();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_unionid();
  inline void clear_has_unionid();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_killmetimes();
  inline void clear_has_killmetimes();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_connect();
  inline void clear_has_connect();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_marry();
  inline void clear_has_marry();
  inline void set_has_clan3_id();
  inline void clear_has_clan3_id();
  inline void set_has_clan5_id();
  inline void clear_has_clan5_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::std::string* playername_;
  ::google::protobuf::uint32 zid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 closeness_;
  ::google::protobuf::uint32 recenttype_;
  ::google::protobuf::uint64 recenttime_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint64 fightpower_;
  ::google::protobuf::uint32 unionid_;
  ::google::protobuf::uint32 killmetimes_;
  ::google::protobuf::uint64 offlinetime_;
  ::std::string* connect_;
  bool online_;
  ::google::protobuf::uint32 viplevel_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint64 clan3_id_;
  ::google::protobuf::uint64 clan5_id_;
  ::google::protobuf::uint32 marry_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RolePlayerMiniInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendInfo : public ::google::protobuf::Message {
 public:
  FriendInfo();
  virtual ~FriendInfo();

  FriendInfo(const FriendInfo& from);

  inline FriendInfo& operator=(const FriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInfo& default_instance();

  void Swap(FriendInfo* other);

  // implements Message ----------------------------------------------

  FriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendInfo& from);
  void MergeFrom(const FriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 closeness = 2;
  inline bool has_closeness() const;
  inline void clear_closeness();
  static const int kClosenessFieldNumber = 2;
  inline ::google::protobuf::uint32 closeness() const;
  inline void set_closeness(::google::protobuf::uint32 value);

  // optional uint32 todayCloseness = 3;
  inline bool has_todaycloseness() const;
  inline void clear_todaycloseness();
  static const int kTodayClosenessFieldNumber = 3;
  inline ::google::protobuf::uint32 todaycloseness() const;
  inline void set_todaycloseness(::google::protobuf::uint32 value);

  // optional uint64 updateTime = 4;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 updatetime() const;
  inline void set_updatetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FriendInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_closeness();
  inline void clear_has_closeness();
  inline void set_has_todaycloseness();
  inline void clear_has_todaycloseness();
  inline void set_has_updatetime();
  inline void clear_has_updatetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 closeness_;
  ::google::protobuf::uint32 todaycloseness_;
  ::google::protobuf::uint64 updatetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendApplyInfo : public ::google::protobuf::Message {
 public:
  FriendApplyInfo();
  virtual ~FriendApplyInfo();

  FriendApplyInfo(const FriendApplyInfo& from);

  inline FriendApplyInfo& operator=(const FriendApplyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendApplyInfo& default_instance();

  void Swap(FriendApplyInfo* other);

  // implements Message ----------------------------------------------

  FriendApplyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendApplyInfo& from);
  void MergeFrom(const FriendApplyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional bytes connect = 2;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 2;
  inline const ::std::string& connect() const;
  inline void set_connect(const ::std::string& value);
  inline void set_connect(const char* value);
  inline void set_connect(const void* value, size_t size);
  inline ::std::string* mutable_connect();
  inline ::std::string* release_connect();
  inline void set_allocated_connect(::std::string* connect);

  // @@protoc_insertion_point(class_scope:proto_ff.FriendApplyInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_connect();
  inline void clear_has_connect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::std::string* connect_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FriendApplyInfo* default_instance_;
};
// -------------------------------------------------------------------

class RelationHateInfo : public ::google::protobuf::Message {
 public:
  RelationHateInfo();
  virtual ~RelationHateInfo();

  RelationHateInfo(const RelationHateInfo& from);

  inline RelationHateInfo& operator=(const RelationHateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelationHateInfo& default_instance();

  void Swap(RelationHateInfo* other);

  // implements Message ----------------------------------------------

  RelationHateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelationHateInfo& from);
  void MergeFrom(const RelationHateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 killMeTimes = 2;
  inline bool has_killmetimes() const;
  inline void clear_killmetimes();
  static const int kKillMeTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 killmetimes() const;
  inline void set_killmetimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RelationHateInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_killmetimes();
  inline void clear_has_killmetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 killmetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RelationHateInfo* default_instance_;
};
// -------------------------------------------------------------------

class RelationGiftRecord : public ::google::protobuf::Message {
 public:
  RelationGiftRecord();
  virtual ~RelationGiftRecord();

  RelationGiftRecord(const RelationGiftRecord& from);

  inline RelationGiftRecord& operator=(const RelationGiftRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelationGiftRecord& default_instance();

  void Swap(RelationGiftRecord* other);

  // implements Message ----------------------------------------------

  RelationGiftRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelationGiftRecord& from);
  void MergeFrom(const RelationGiftRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friendId = 1;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friendid() const;
  inline void set_friendid(::google::protobuf::uint64 value);

  // optional uint64 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 isThanks = 3;
  inline bool has_isthanks() const;
  inline void clear_isthanks();
  static const int kIsThanksFieldNumber = 3;
  inline ::google::protobuf::uint32 isthanks() const;
  inline void set_isthanks(::google::protobuf::uint32 value);

  // optional uint32 itemNum = 4;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 4;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RelationGiftRecord)
 private:
  inline void set_has_friendid();
  inline void clear_has_friendid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_isthanks();
  inline void clear_has_isthanks();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friendid_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 isthanks_;
  ::google::protobuf::uint32 itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RelationGiftRecord* default_instance_;
};
// -------------------------------------------------------------------

class RelationDBInfo : public ::google::protobuf::Message {
 public:
  RelationDBInfo();
  virtual ~RelationDBInfo();

  RelationDBInfo(const RelationDBInfo& from);

  inline RelationDBInfo& operator=(const RelationDBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelationDBInfo& default_instance();

  void Swap(RelationDBInfo* other);

  // implements Message ----------------------------------------------

  RelationDBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelationDBInfo& from);
  void MergeFrom(const RelationDBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FriendInfo friendList = 1;
  inline int friendlist_size() const;
  inline void clear_friendlist();
  static const int kFriendListFieldNumber = 1;
  inline const ::proto_ff::FriendInfo& friendlist(int index) const;
  inline ::proto_ff::FriendInfo* mutable_friendlist(int index);
  inline ::proto_ff::FriendInfo* add_friendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >&
      friendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >*
      mutable_friendlist();

  // repeated uint64 blackList = 2;
  inline int blacklist_size() const;
  inline void clear_blacklist();
  static const int kBlackListFieldNumber = 2;
  inline ::google::protobuf::uint64 blacklist(int index) const;
  inline void set_blacklist(int index, ::google::protobuf::uint64 value);
  inline void add_blacklist(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      blacklist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_blacklist();

  // repeated .proto_ff.RelationHateInfo hateList = 3;
  inline int hatelist_size() const;
  inline void clear_hatelist();
  static const int kHateListFieldNumber = 3;
  inline const ::proto_ff::RelationHateInfo& hatelist(int index) const;
  inline ::proto_ff::RelationHateInfo* mutable_hatelist(int index);
  inline ::proto_ff::RelationHateInfo* add_hatelist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >&
      hatelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >*
      mutable_hatelist();

  // repeated .proto_ff.FriendApplyInfo applyList = 4;
  inline int applylist_size() const;
  inline void clear_applylist();
  static const int kApplyListFieldNumber = 4;
  inline const ::proto_ff::FriendApplyInfo& applylist(int index) const;
  inline ::proto_ff::FriendApplyInfo* mutable_applylist(int index);
  inline ::proto_ff::FriendApplyInfo* add_applylist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >&
      applylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >*
      mutable_applylist();

  // optional uint32 friends_add = 5;
  inline bool has_friends_add() const;
  inline void clear_friends_add();
  static const int kFriendsAddFieldNumber = 5;
  inline ::google::protobuf::uint32 friends_add() const;
  inline void set_friends_add(::google::protobuf::uint32 value);

  // repeated .proto_ff.RelationGiftRecord giftRecords = 6;
  inline int giftrecords_size() const;
  inline void clear_giftrecords();
  static const int kGiftRecordsFieldNumber = 6;
  inline const ::proto_ff::RelationGiftRecord& giftrecords(int index) const;
  inline ::proto_ff::RelationGiftRecord* mutable_giftrecords(int index);
  inline ::proto_ff::RelationGiftRecord* add_giftrecords();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >&
      giftrecords() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >*
      mutable_giftrecords();

  // repeated .proto_ff.ArenaChallResult arena_result = 7;
  inline int arena_result_size() const;
  inline void clear_arena_result();
  static const int kArenaResultFieldNumber = 7;
  inline const ::proto_ff::ArenaChallResult& arena_result(int index) const;
  inline ::proto_ff::ArenaChallResult* mutable_arena_result(int index);
  inline ::proto_ff::ArenaChallResult* add_arena_result();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaChallResult >&
      arena_result() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaChallResult >*
      mutable_arena_result();

  // optional uint32 charm_value = 8;
  inline bool has_charm_value() const;
  inline void clear_charm_value();
  static const int kCharmValueFieldNumber = 8;
  inline ::google::protobuf::uint32 charm_value() const;
  inline void set_charm_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RelationDBInfo)
 private:
  inline void set_has_friends_add();
  inline void clear_has_friends_add();
  inline void set_has_charm_value();
  inline void clear_has_charm_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo > friendlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > blacklist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo > hatelist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo > applylist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord > giftrecords_;
  ::google::protobuf::uint32 friends_add_;
  ::google::protobuf::uint32 charm_value_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaChallResult > arena_result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RelationDBInfo* default_instance_;
};
// -------------------------------------------------------------------

class DigPerfor : public ::google::protobuf::Message {
 public:
  DigPerfor();
  virtual ~DigPerfor();

  DigPerfor(const DigPerfor& from);

  inline DigPerfor& operator=(const DigPerfor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DigPerfor& default_instance();

  void Swap(DigPerfor* other);

  // implements Message ----------------------------------------------

  DigPerfor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DigPerfor& from);
  void MergeFrom(const DigPerfor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DigPerfor)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DigPerfor* default_instance_;
};
// -------------------------------------------------------------------

class BuffProto : public ::google::protobuf::Message {
 public:
  BuffProto();
  virtual ~BuffProto();

  BuffProto(const BuffProto& from);

  inline BuffProto& operator=(const BuffProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffProto& default_instance();

  void Swap(BuffProto* other);

  // implements Message ----------------------------------------------

  BuffProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffProto& from);
  void MergeFrom(const BuffProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 buff_index = 1;
  inline bool has_buff_index() const;
  inline void clear_buff_index();
  static const int kBuffIndexFieldNumber = 1;
  inline ::google::protobuf::uint64 buff_index() const;
  inline void set_buff_index(::google::protobuf::uint64 value);

  // required uint64 buff_id = 2;
  inline bool has_buff_id() const;
  inline void clear_buff_id();
  static const int kBuffIdFieldNumber = 2;
  inline ::google::protobuf::uint64 buff_id() const;
  inline void set_buff_id(::google::protobuf::uint64 value);

  // optional uint64 recver_cid = 3;
  inline bool has_recver_cid() const;
  inline void clear_recver_cid();
  static const int kRecverCidFieldNumber = 3;
  inline ::google::protobuf::uint64 recver_cid() const;
  inline void set_recver_cid(::google::protobuf::uint64 value);

  // optional int64 left_msec = 4;
  inline bool has_left_msec() const;
  inline void clear_left_msec();
  static const int kLeftMsecFieldNumber = 4;
  inline ::google::protobuf::int64 left_msec() const;
  inline void set_left_msec(::google::protobuf::int64 value);

  // optional uint64 skill_id = 5;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 5;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional int32 skill_lev = 6;
  inline bool has_skill_lev() const;
  inline void clear_skill_lev();
  static const int kSkillLevFieldNumber = 6;
  inline ::google::protobuf::int32 skill_lev() const;
  inline void set_skill_lev(::google::protobuf::int32 value);

  // optional int32 is_effect = 7;
  inline bool has_is_effect() const;
  inline void clear_is_effect();
  static const int kIsEffectFieldNumber = 7;
  inline ::google::protobuf::int32 is_effect() const;
  inline void set_is_effect(::google::protobuf::int32 value);

  // optional int64 param1 = 8;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 8;
  inline ::google::protobuf::int64 param1() const;
  inline void set_param1(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuffProto)
 private:
  inline void set_has_buff_index();
  inline void clear_has_buff_index();
  inline void set_has_buff_id();
  inline void clear_has_buff_id();
  inline void set_has_recver_cid();
  inline void clear_has_recver_cid();
  inline void set_has_left_msec();
  inline void clear_has_left_msec();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_lev();
  inline void clear_has_skill_lev();
  inline void set_has_is_effect();
  inline void clear_has_is_effect();
  inline void set_has_param1();
  inline void clear_has_param1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 buff_index_;
  ::google::protobuf::uint64 buff_id_;
  ::google::protobuf::uint64 recver_cid_;
  ::google::protobuf::int64 left_msec_;
  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::int32 skill_lev_;
  ::google::protobuf::int32 is_effect_;
  ::google::protobuf::int64 param1_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BuffProto* default_instance_;
};
// -------------------------------------------------------------------

class BuffListProto : public ::google::protobuf::Message {
 public:
  BuffListProto();
  virtual ~BuffListProto();

  BuffListProto(const BuffListProto& from);

  inline BuffListProto& operator=(const BuffListProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffListProto& default_instance();

  void Swap(BuffListProto* other);

  // implements Message ----------------------------------------------

  BuffListProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffListProto& from);
  void MergeFrom(const BuffListProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // repeated .proto_ff.BuffProto info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::BuffProto& info(int index) const;
  inline ::proto_ff::BuffProto* mutable_info(int index);
  inline ::proto_ff::BuffProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.BuffListProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BuffListProto* default_instance_;
};
// -------------------------------------------------------------------

class SkillPosProto : public ::google::protobuf::Message {
 public:
  SkillPosProto();
  virtual ~SkillPosProto();

  SkillPosProto(const SkillPosProto& from);

  inline SkillPosProto& operator=(const SkillPosProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillPosProto& default_instance();

  void Swap(SkillPosProto* other);

  // implements Message ----------------------------------------------

  SkillPosProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillPosProto& from);
  void MergeFrom(const SkillPosProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional int32 cd = 3;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 3;
  inline ::google::protobuf::int32 cd() const;
  inline void set_cd(::google::protobuf::int32 value);

  // optional int32 use = 4;
  inline bool has_use() const;
  inline void clear_use();
  static const int kUseFieldNumber = 4;
  inline ::google::protobuf::int32 use() const;
  inline void set_use(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SkillPosProto)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_use();
  inline void clear_has_use();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::int32 cd_;
  ::google::protobuf::int32 use_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SkillPosProto* default_instance_;
};
// -------------------------------------------------------------------

class SkillGroupProto : public ::google::protobuf::Message {
 public:
  SkillGroupProto();
  virtual ~SkillGroupProto();

  SkillGroupProto(const SkillGroupProto& from);

  inline SkillGroupProto& operator=(const SkillGroupProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillGroupProto& default_instance();

  void Swap(SkillGroupProto* other);

  // implements Message ----------------------------------------------

  SkillGroupProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillGroupProto& from);
  void MergeFrom(const SkillGroupProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::uint32 group() const;
  inline void set_group(::google::protobuf::uint32 value);

  // repeated .proto_ff.SkillPosProto lst = 2;
  inline int lst_size() const;
  inline void clear_lst();
  static const int kLstFieldNumber = 2;
  inline const ::proto_ff::SkillPosProto& lst(int index) const;
  inline ::proto_ff::SkillPosProto* mutable_lst(int index);
  inline ::proto_ff::SkillPosProto* add_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >&
      lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >*
      mutable_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.SkillGroupProto)
 private:
  inline void set_has_group();
  inline void clear_has_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto > lst_;
  ::google::protobuf::uint32 group_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SkillGroupProto* default_instance_;
};
// -------------------------------------------------------------------

class SkillGroupListProto : public ::google::protobuf::Message {
 public:
  SkillGroupListProto();
  virtual ~SkillGroupListProto();

  SkillGroupListProto(const SkillGroupListProto& from);

  inline SkillGroupListProto& operator=(const SkillGroupListProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillGroupListProto& default_instance();

  void Swap(SkillGroupListProto* other);

  // implements Message ----------------------------------------------

  SkillGroupListProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillGroupListProto& from);
  void MergeFrom(const SkillGroupListProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.SkillGroupProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::SkillGroupProto& info(int index) const;
  inline ::proto_ff::SkillGroupProto* mutable_info(int index);
  inline ::proto_ff::SkillGroupProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >*
      mutable_info();

  // optional uint32 cur_skill_group = 2;
  inline bool has_cur_skill_group() const;
  inline void clear_cur_skill_group();
  static const int kCurSkillGroupFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_skill_group() const;
  inline void set_cur_skill_group(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SkillGroupListProto)
 private:
  inline void set_has_cur_skill_group();
  inline void clear_has_cur_skill_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto > info_;
  ::google::protobuf::uint32 cur_skill_group_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SkillGroupListProto* default_instance_;
};
// -------------------------------------------------------------------

class GodEvilTaskProto : public ::google::protobuf::Message {
 public:
  GodEvilTaskProto();
  virtual ~GodEvilTaskProto();

  GodEvilTaskProto(const GodEvilTaskProto& from);

  inline GodEvilTaskProto& operator=(const GodEvilTaskProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodEvilTaskProto& default_instance();

  void Swap(GodEvilTaskProto* other);

  // implements Message ----------------------------------------------

  GodEvilTaskProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodEvilTaskProto& from);
  void MergeFrom(const GodEvilTaskProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 cur = 2;
  inline bool has_cur() const;
  inline void clear_cur();
  static const int kCurFieldNumber = 2;
  inline ::google::protobuf::int32 cur() const;
  inline void set_cur(::google::protobuf::int32 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodEvilTaskProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cur();
  inline void clear_has_cur();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cur_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodEvilTaskProto* default_instance_;
};
// -------------------------------------------------------------------

class GodEvilTaskListProto : public ::google::protobuf::Message {
 public:
  GodEvilTaskListProto();
  virtual ~GodEvilTaskListProto();

  GodEvilTaskListProto(const GodEvilTaskListProto& from);

  inline GodEvilTaskListProto& operator=(const GodEvilTaskListProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodEvilTaskListProto& default_instance();

  void Swap(GodEvilTaskListProto* other);

  // implements Message ----------------------------------------------

  GodEvilTaskListProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodEvilTaskListProto& from);
  void MergeFrom(const GodEvilTaskListProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GodEvilTaskProto lst = 1;
  inline int lst_size() const;
  inline void clear_lst();
  static const int kLstFieldNumber = 1;
  inline const ::proto_ff::GodEvilTaskProto& lst(int index) const;
  inline ::proto_ff::GodEvilTaskProto* mutable_lst(int index);
  inline ::proto_ff::GodEvilTaskProto* add_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodEvilTaskProto >&
      lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodEvilTaskProto >*
      mutable_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.GodEvilTaskListProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GodEvilTaskProto > lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodEvilTaskListProto* default_instance_;
};
// -------------------------------------------------------------------

class GodEvilStageProto : public ::google::protobuf::Message {
 public:
  GodEvilStageProto();
  virtual ~GodEvilStageProto();

  GodEvilStageProto(const GodEvilStageProto& from);

  inline GodEvilStageProto& operator=(const GodEvilStageProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodEvilStageProto& default_instance();

  void Swap(GodEvilStageProto* other);

  // implements Message ----------------------------------------------

  GodEvilStageProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodEvilStageProto& from);
  void MergeFrom(const GodEvilStageProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stage = 1;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // optional .proto_ff.GodEvilTaskListProto task = 2;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 2;
  inline const ::proto_ff::GodEvilTaskListProto& task() const;
  inline ::proto_ff::GodEvilTaskListProto* mutable_task();
  inline ::proto_ff::GodEvilTaskListProto* release_task();
  inline void set_allocated_task(::proto_ff::GodEvilTaskListProto* task);

  // optional int32 finish = 3;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 3;
  inline ::google::protobuf::int32 finish() const;
  inline void set_finish(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodEvilStageProto)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_task();
  inline void clear_has_task();
  inline void set_has_finish();
  inline void clear_has_finish();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GodEvilTaskListProto* task_;
  ::google::protobuf::int32 stage_;
  ::google::protobuf::int32 finish_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodEvilStageProto* default_instance_;
};
// -------------------------------------------------------------------

class GodEvilProto : public ::google::protobuf::Message {
 public:
  GodEvilProto();
  virtual ~GodEvilProto();

  GodEvilProto(const GodEvilProto& from);

  inline GodEvilProto& operator=(const GodEvilProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodEvilProto& default_instance();

  void Swap(GodEvilProto* other);

  // implements Message ----------------------------------------------

  GodEvilProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodEvilProto& from);
  void MergeFrom(const GodEvilProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fetch = 1;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 1;
  inline ::google::protobuf::int32 fetch() const;
  inline void set_fetch(::google::protobuf::int32 value);

  // optional .proto_ff.GodEvilStageProto stage = 2;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  inline const ::proto_ff::GodEvilStageProto& stage() const;
  inline ::proto_ff::GodEvilStageProto* mutable_stage();
  inline ::proto_ff::GodEvilStageProto* release_stage();
  inline void set_allocated_stage(::proto_ff::GodEvilStageProto* stage);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 cd = 4;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 4;
  inline ::google::protobuf::int32 cd() const;
  inline void set_cd(::google::protobuf::int32 value);

  // optional int32 vessel_lev = 5;
  inline bool has_vessel_lev() const;
  inline void clear_vessel_lev();
  static const int kVesselLevFieldNumber = 5;
  inline ::google::protobuf::int32 vessel_lev() const;
  inline void set_vessel_lev(::google::protobuf::int32 value);

  // optional int32 mirror_lev = 6;
  inline bool has_mirror_lev() const;
  inline void clear_mirror_lev();
  static const int kMirrorLevFieldNumber = 6;
  inline ::google::protobuf::int32 mirror_lev() const;
  inline void set_mirror_lev(::google::protobuf::int32 value);

  // required int64 extra_exp = 7;
  inline bool has_extra_exp() const;
  inline void clear_extra_exp();
  static const int kExtraExpFieldNumber = 7;
  inline ::google::protobuf::int64 extra_exp() const;
  inline void set_extra_exp(::google::protobuf::int64 value);

  // repeated .proto_ff.ItemProtoInfo equip = 8;
  inline int equip_size() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 8;
  inline const ::proto_ff::ItemProtoInfo& equip(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_equip(int index);
  inline ::proto_ff::ItemProtoInfo* add_equip();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      equip() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_equip();

  // @@protoc_insertion_point(class_scope:proto_ff.GodEvilProto)
 private:
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_vessel_lev();
  inline void clear_has_vessel_lev();
  inline void set_has_mirror_lev();
  inline void clear_has_mirror_lev();
  inline void set_has_extra_exp();
  inline void clear_has_extra_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GodEvilStageProto* stage_;
  ::google::protobuf::int32 fetch_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 cd_;
  ::google::protobuf::int32 vessel_lev_;
  ::google::protobuf::int64 extra_exp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > equip_;
  ::google::protobuf::int32 mirror_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodEvilProto* default_instance_;
};
// -------------------------------------------------------------------

class RechargeProto : public ::google::protobuf::Message {
 public:
  RechargeProto();
  virtual ~RechargeProto();

  RechargeProto(const RechargeProto& from);

  inline RechargeProto& operator=(const RechargeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeProto& default_instance();

  void Swap(RechargeProto* other);

  // implements Message ----------------------------------------------

  RechargeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeProto& from);
  void MergeFrom(const RechargeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes product = 1;
  inline int product_size() const;
  inline void clear_product();
  static const int kProductFieldNumber = 1;
  inline const ::std::string& product(int index) const;
  inline ::std::string* mutable_product(int index);
  inline void set_product(int index, const ::std::string& value);
  inline void set_product(int index, const char* value);
  inline void set_product(int index, const void* value, size_t size);
  inline ::std::string* add_product();
  inline void add_product(const ::std::string& value);
  inline void add_product(const char* value);
  inline void add_product(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& product() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_product();

  // @@protoc_insertion_point(class_scope:proto_ff.RechargeProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> product_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RechargeProto* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFantasyData : public ::google::protobuf::Message {
 public:
  FacadeFantasyData();
  virtual ~FacadeFantasyData();

  FacadeFantasyData(const FacadeFantasyData& from);

  inline FacadeFantasyData& operator=(const FacadeFantasyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFantasyData& default_instance();

  void Swap(FacadeFantasyData* other);

  // implements Message ----------------------------------------------

  FacadeFantasyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFantasyData& from);
  void MergeFrom(const FacadeFantasyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fantasy_id = 1;
  inline bool has_fantasy_id() const;
  inline void clear_fantasy_id();
  static const int kFantasyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fantasy_id() const;
  inline void set_fantasy_id(::google::protobuf::uint64 value);

  // optional uint32 fantasy_lev = 2;
  inline bool has_fantasy_lev() const;
  inline void clear_fantasy_lev();
  static const int kFantasyLevFieldNumber = 2;
  inline ::google::protobuf::uint32 fantasy_lev() const;
  inline void set_fantasy_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFantasyData)
 private:
  inline void set_has_fantasy_id();
  inline void clear_has_fantasy_id();
  inline void set_has_fantasy_lev();
  inline void clear_has_fantasy_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fantasy_id_;
  ::google::protobuf::uint32 fantasy_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeFantasyData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFragmentData : public ::google::protobuf::Message {
 public:
  FacadeFragmentData();
  virtual ~FacadeFragmentData();

  FacadeFragmentData(const FacadeFragmentData& from);

  inline FacadeFragmentData& operator=(const FacadeFragmentData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFragmentData& default_instance();

  void Swap(FacadeFragmentData* other);

  // implements Message ----------------------------------------------

  FacadeFragmentData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFragmentData& from);
  void MergeFrom(const FacadeFragmentData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fragment_id = 1;
  inline bool has_fragment_id() const;
  inline void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fragment_id() const;
  inline void set_fragment_id(::google::protobuf::uint64 value);

  // optional uint32 use_times = 2;
  inline bool has_use_times() const;
  inline void clear_use_times();
  static const int kUseTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 use_times() const;
  inline void set_use_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFragmentData)
 private:
  inline void set_has_fragment_id();
  inline void clear_has_fragment_id();
  inline void set_has_use_times();
  inline void clear_has_use_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fragment_id_;
  ::google::protobuf::uint32 use_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeFragmentData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSkillData : public ::google::protobuf::Message {
 public:
  FacadeSkillData();
  virtual ~FacadeSkillData();

  FacadeSkillData(const FacadeSkillData& from);

  inline FacadeSkillData& operator=(const FacadeSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSkillData& default_instance();

  void Swap(FacadeSkillData* other);

  // implements Message ----------------------------------------------

  FacadeSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSkillData& from);
  void MergeFrom(const FacadeSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 skill_lev = 2;
  inline bool has_skill_lev() const;
  inline void clear_skill_lev();
  static const int kSkillLevFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_lev() const;
  inline void set_skill_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_lev();
  inline void clear_has_skill_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 skill_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeSkillData* default_instance_;
};
// -------------------------------------------------------------------

class MountFantasyData : public ::google::protobuf::Message {
 public:
  MountFantasyData();
  virtual ~MountFantasyData();

  MountFantasyData(const MountFantasyData& from);

  inline MountFantasyData& operator=(const MountFantasyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountFantasyData& default_instance();

  void Swap(MountFantasyData* other);

  // implements Message ----------------------------------------------

  MountFantasyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountFantasyData& from);
  void MergeFrom(const MountFantasyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fantasy_id = 1;
  inline bool has_fantasy_id() const;
  inline void clear_fantasy_id();
  static const int kFantasyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fantasy_id() const;
  inline void set_fantasy_id(::google::protobuf::uint64 value);

  // optional uint32 fantasy_lev = 2;
  inline bool has_fantasy_lev() const;
  inline void clear_fantasy_lev();
  static const int kFantasyLevFieldNumber = 2;
  inline ::google::protobuf::uint32 fantasy_lev() const;
  inline void set_fantasy_lev(::google::protobuf::uint32 value);

  // optional uint64 fantasy_lev_exp = 3;
  inline bool has_fantasy_lev_exp() const;
  inline void clear_fantasy_lev_exp();
  static const int kFantasyLevExpFieldNumber = 3;
  inline ::google::protobuf::uint64 fantasy_lev_exp() const;
  inline void set_fantasy_lev_exp(::google::protobuf::uint64 value);

  // optional uint32 fantasy_star = 4;
  inline bool has_fantasy_star() const;
  inline void clear_fantasy_star();
  static const int kFantasyStarFieldNumber = 4;
  inline ::google::protobuf::uint32 fantasy_star() const;
  inline void set_fantasy_star(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountFantasyData)
 private:
  inline void set_has_fantasy_id();
  inline void clear_has_fantasy_id();
  inline void set_has_fantasy_lev();
  inline void clear_has_fantasy_lev();
  inline void set_has_fantasy_lev_exp();
  inline void clear_has_fantasy_lev_exp();
  inline void set_has_fantasy_star();
  inline void clear_has_fantasy_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fantasy_id_;
  ::google::protobuf::uint64 fantasy_lev_exp_;
  ::google::protobuf::uint32 fantasy_lev_;
  ::google::protobuf::uint32 fantasy_star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountFantasyData* default_instance_;
};
// -------------------------------------------------------------------

class MountFragmentData : public ::google::protobuf::Message {
 public:
  MountFragmentData();
  virtual ~MountFragmentData();

  MountFragmentData(const MountFragmentData& from);

  inline MountFragmentData& operator=(const MountFragmentData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountFragmentData& default_instance();

  void Swap(MountFragmentData* other);

  // implements Message ----------------------------------------------

  MountFragmentData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountFragmentData& from);
  void MergeFrom(const MountFragmentData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fragment_id = 1;
  inline bool has_fragment_id() const;
  inline void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fragment_id() const;
  inline void set_fragment_id(::google::protobuf::uint64 value);

  // optional uint32 use_times = 2;
  inline bool has_use_times() const;
  inline void clear_use_times();
  static const int kUseTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 use_times() const;
  inline void set_use_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountFragmentData)
 private:
  inline void set_has_fragment_id();
  inline void clear_has_fragment_id();
  inline void set_has_use_times();
  inline void clear_has_use_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fragment_id_;
  ::google::protobuf::uint32 use_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountFragmentData* default_instance_;
};
// -------------------------------------------------------------------

class MountSkillData : public ::google::protobuf::Message {
 public:
  MountSkillData();
  virtual ~MountSkillData();

  MountSkillData(const MountSkillData& from);

  inline MountSkillData& operator=(const MountSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountSkillData& default_instance();

  void Swap(MountSkillData* other);

  // implements Message ----------------------------------------------

  MountSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountSkillData& from);
  void MergeFrom(const MountSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 skill_lev = 2;
  inline bool has_skill_lev() const;
  inline void clear_skill_lev();
  static const int kSkillLevFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_lev() const;
  inline void set_skill_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountSkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_lev();
  inline void clear_has_skill_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 skill_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountSkillData* default_instance_;
};
// -------------------------------------------------------------------

class MountKunEquipData : public ::google::protobuf::Message {
 public:
  MountKunEquipData();
  virtual ~MountKunEquipData();

  MountKunEquipData(const MountKunEquipData& from);

  inline MountKunEquipData& operator=(const MountKunEquipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountKunEquipData& default_instance();

  void Swap(MountKunEquipData* other);

  // implements Message ----------------------------------------------

  MountKunEquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountKunEquipData& from);
  void MergeFrom(const MountKunEquipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.EquipInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::EquipInfo& infos(int index) const;
  inline ::proto_ff::EquipInfo* mutable_infos(int index);
  inline ::proto_ff::EquipInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >*
      mutable_infos();

  // repeated uint32 slot_status = 2;
  inline int slot_status_size() const;
  inline void clear_slot_status();
  static const int kSlotStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 slot_status(int index) const;
  inline void set_slot_status(int index, ::google::protobuf::uint32 value);
  inline void add_slot_status(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      slot_status() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_slot_status();

  // @@protoc_insertion_point(class_scope:proto_ff.MountKunEquipData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo > infos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slot_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountKunEquipData* default_instance_;
};
// -------------------------------------------------------------------

class MountKunEquipSuitData : public ::google::protobuf::Message {
 public:
  MountKunEquipSuitData();
  virtual ~MountKunEquipSuitData();

  MountKunEquipSuitData(const MountKunEquipSuitData& from);

  inline MountKunEquipSuitData& operator=(const MountKunEquipSuitData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountKunEquipSuitData& default_instance();

  void Swap(MountKunEquipSuitData* other);

  // implements Message ----------------------------------------------

  MountKunEquipSuitData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountKunEquipSuitData& from);
  void MergeFrom(const MountKunEquipSuitData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountKunEquipSuitData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountKunEquipSuitData* default_instance_;
};
// -------------------------------------------------------------------

class MountKunData : public ::google::protobuf::Message {
 public:
  MountKunData();
  virtual ~MountKunData();

  MountKunData(const MountKunData& from);

  inline MountKunData& operator=(const MountKunData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountKunData& default_instance();

  void Swap(MountKunData* other);

  // implements Message ----------------------------------------------

  MountKunData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountKunData& from);
  void MergeFrom(const MountKunData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 kun_id = 1;
  inline bool has_kun_id() const;
  inline void clear_kun_id();
  static const int kKunIdFieldNumber = 1;
  inline ::google::protobuf::uint64 kun_id() const;
  inline void set_kun_id(::google::protobuf::uint64 value);

  // optional uint32 kun_lev = 2;
  inline bool has_kun_lev() const;
  inline void clear_kun_lev();
  static const int kKunLevFieldNumber = 2;
  inline ::google::protobuf::uint32 kun_lev() const;
  inline void set_kun_lev(::google::protobuf::uint32 value);

  // optional uint64 kun_lev_exp = 3;
  inline bool has_kun_lev_exp() const;
  inline void clear_kun_lev_exp();
  static const int kKunLevExpFieldNumber = 3;
  inline ::google::protobuf::uint64 kun_lev_exp() const;
  inline void set_kun_lev_exp(::google::protobuf::uint64 value);

  // optional uint32 kun_star = 4;
  inline bool has_kun_star() const;
  inline void clear_kun_star();
  static const int kKunStarFieldNumber = 4;
  inline ::google::protobuf::uint32 kun_star() const;
  inline void set_kun_star(::google::protobuf::uint32 value);

  // optional uint32 kun_advance_lev = 5;
  inline bool has_kun_advance_lev() const;
  inline void clear_kun_advance_lev();
  static const int kKunAdvanceLevFieldNumber = 5;
  inline ::google::protobuf::uint32 kun_advance_lev() const;
  inline void set_kun_advance_lev(::google::protobuf::uint32 value);

  // optional uint64 fight = 6;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 6;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional .proto_ff.MountKunEquipData equip_data = 7;
  inline bool has_equip_data() const;
  inline void clear_equip_data();
  static const int kEquipDataFieldNumber = 7;
  inline const ::proto_ff::MountKunEquipData& equip_data() const;
  inline ::proto_ff::MountKunEquipData* mutable_equip_data();
  inline ::proto_ff::MountKunEquipData* release_equip_data();
  inline void set_allocated_equip_data(::proto_ff::MountKunEquipData* equip_data);

  // repeated .proto_ff.MountKunEquipSuitData equip_suit_data = 8;
  inline int equip_suit_data_size() const;
  inline void clear_equip_suit_data();
  static const int kEquipSuitDataFieldNumber = 8;
  inline const ::proto_ff::MountKunEquipSuitData& equip_suit_data(int index) const;
  inline ::proto_ff::MountKunEquipSuitData* mutable_equip_suit_data(int index);
  inline ::proto_ff::MountKunEquipSuitData* add_equip_suit_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MountKunEquipSuitData >&
      equip_suit_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MountKunEquipSuitData >*
      mutable_equip_suit_data();

  // optional bool kun_tiwu_quality = 9;
  inline bool has_kun_tiwu_quality() const;
  inline void clear_kun_tiwu_quality();
  static const int kKunTiwuQualityFieldNumber = 9;
  inline bool kun_tiwu_quality() const;
  inline void set_kun_tiwu_quality(bool value);

  // optional uint32 kun_tiwu_level = 10;
  inline bool has_kun_tiwu_level() const;
  inline void clear_kun_tiwu_level();
  static const int kKunTiwuLevelFieldNumber = 10;
  inline ::google::protobuf::uint32 kun_tiwu_level() const;
  inline void set_kun_tiwu_level(::google::protobuf::uint32 value);

  // optional uint32 kun_change_id = 11;
  inline bool has_kun_change_id() const;
  inline void clear_kun_change_id();
  static const int kKunChangeIdFieldNumber = 11;
  inline ::google::protobuf::uint32 kun_change_id() const;
  inline void set_kun_change_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountKunData)
 private:
  inline void set_has_kun_id();
  inline void clear_has_kun_id();
  inline void set_has_kun_lev();
  inline void clear_has_kun_lev();
  inline void set_has_kun_lev_exp();
  inline void clear_has_kun_lev_exp();
  inline void set_has_kun_star();
  inline void clear_has_kun_star();
  inline void set_has_kun_advance_lev();
  inline void clear_has_kun_advance_lev();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_equip_data();
  inline void clear_has_equip_data();
  inline void set_has_kun_tiwu_quality();
  inline void clear_has_kun_tiwu_quality();
  inline void set_has_kun_tiwu_level();
  inline void clear_has_kun_tiwu_level();
  inline void set_has_kun_change_id();
  inline void clear_has_kun_change_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 kun_id_;
  ::google::protobuf::uint64 kun_lev_exp_;
  ::google::protobuf::uint32 kun_lev_;
  ::google::protobuf::uint32 kun_star_;
  ::google::protobuf::uint64 fight_;
  ::proto_ff::MountKunEquipData* equip_data_;
  ::google::protobuf::uint32 kun_advance_lev_;
  bool kun_tiwu_quality_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::MountKunEquipSuitData > equip_suit_data_;
  ::google::protobuf::uint32 kun_tiwu_level_;
  ::google::protobuf::uint32 kun_change_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountKunData* default_instance_;
};
// -------------------------------------------------------------------

class MountKunChangeData : public ::google::protobuf::Message {
 public:
  MountKunChangeData();
  virtual ~MountKunChangeData();

  MountKunChangeData(const MountKunChangeData& from);

  inline MountKunChangeData& operator=(const MountKunChangeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountKunChangeData& default_instance();

  void Swap(MountKunChangeData* other);

  // implements Message ----------------------------------------------

  MountKunChangeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountKunChangeData& from);
  void MergeFrom(const MountKunChangeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 kun_change_id = 1;
  inline bool has_kun_change_id() const;
  inline void clear_kun_change_id();
  static const int kKunChangeIdFieldNumber = 1;
  inline ::google::protobuf::uint64 kun_change_id() const;
  inline void set_kun_change_id(::google::protobuf::uint64 value);

  // optional uint32 kun_change_star = 2;
  inline bool has_kun_change_star() const;
  inline void clear_kun_change_star();
  static const int kKunChangeStarFieldNumber = 2;
  inline ::google::protobuf::uint32 kun_change_star() const;
  inline void set_kun_change_star(::google::protobuf::uint32 value);

  // optional bool kun_change_quality = 3;
  inline bool has_kun_change_quality() const;
  inline void clear_kun_change_quality();
  static const int kKunChangeQualityFieldNumber = 3;
  inline bool kun_change_quality() const;
  inline void set_kun_change_quality(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountKunChangeData)
 private:
  inline void set_has_kun_change_id();
  inline void clear_has_kun_change_id();
  inline void set_has_kun_change_star();
  inline void clear_has_kun_change_star();
  inline void set_has_kun_change_quality();
  inline void clear_has_kun_change_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 kun_change_id_;
  ::google::protobuf::uint32 kun_change_star_;
  bool kun_change_quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountKunChangeData* default_instance_;
};
// -------------------------------------------------------------------

class MountBloodData : public ::google::protobuf::Message {
 public:
  MountBloodData();
  virtual ~MountBloodData();

  MountBloodData(const MountBloodData& from);

  inline MountBloodData& operator=(const MountBloodData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountBloodData& default_instance();

  void Swap(MountBloodData* other);

  // implements Message ----------------------------------------------

  MountBloodData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountBloodData& from);
  void MergeFrom(const MountBloodData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 blood_id = 1;
  inline bool has_blood_id() const;
  inline void clear_blood_id();
  static const int kBloodIdFieldNumber = 1;
  inline ::google::protobuf::uint64 blood_id() const;
  inline void set_blood_id(::google::protobuf::uint64 value);

  // optional uint32 blood_state = 2;
  inline bool has_blood_state() const;
  inline void clear_blood_state();
  static const int kBloodStateFieldNumber = 2;
  inline ::google::protobuf::uint32 blood_state() const;
  inline void set_blood_state(::google::protobuf::uint32 value);

  // optional .proto_ff.ComPair64 select_attr = 3;
  inline bool has_select_attr() const;
  inline void clear_select_attr();
  static const int kSelectAttrFieldNumber = 3;
  inline const ::proto_ff::ComPair64& select_attr() const;
  inline ::proto_ff::ComPair64* mutable_select_attr();
  inline ::proto_ff::ComPair64* release_select_attr();
  inline void set_allocated_select_attr(::proto_ff::ComPair64* select_attr);

  // @@protoc_insertion_point(class_scope:proto_ff.MountBloodData)
 private:
  inline void set_has_blood_id();
  inline void clear_has_blood_id();
  inline void set_has_blood_state();
  inline void clear_has_blood_state();
  inline void set_has_select_attr();
  inline void clear_has_select_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 blood_id_;
  ::proto_ff::ComPair64* select_attr_;
  ::google::protobuf::uint32 blood_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountBloodData* default_instance_;
};
// -------------------------------------------------------------------

class MountBabySlotData : public ::google::protobuf::Message {
 public:
  MountBabySlotData();
  virtual ~MountBabySlotData();

  MountBabySlotData(const MountBabySlotData& from);

  inline MountBabySlotData& operator=(const MountBabySlotData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountBabySlotData& default_instance();

  void Swap(MountBabySlotData* other);

  // implements Message ----------------------------------------------

  MountBabySlotData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountBabySlotData& from);
  void MergeFrom(const MountBabySlotData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // optional uint32 cur_state = 2;
  inline bool has_cur_state() const;
  inline void clear_cur_state();
  static const int kCurStateFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_state() const;
  inline void set_cur_state(::google::protobuf::uint32 value);

  // optional int64 cur_baby_eggid = 3;
  inline bool has_cur_baby_eggid() const;
  inline void clear_cur_baby_eggid();
  static const int kCurBabyEggidFieldNumber = 3;
  inline ::google::protobuf::int64 cur_baby_eggid() const;
  inline void set_cur_baby_eggid(::google::protobuf::int64 value);

  // optional int64 cur_baby_create_time = 4;
  inline bool has_cur_baby_create_time() const;
  inline void clear_cur_baby_create_time();
  static const int kCurBabyCreateTimeFieldNumber = 4;
  inline ::google::protobuf::int64 cur_baby_create_time() const;
  inline void set_cur_baby_create_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountBabySlotData)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_cur_state();
  inline void clear_has_cur_state();
  inline void set_has_cur_baby_eggid();
  inline void clear_has_cur_baby_eggid();
  inline void set_has_cur_baby_create_time();
  inline void clear_has_cur_baby_create_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 slot_;
  ::google::protobuf::uint32 cur_state_;
  ::google::protobuf::int64 cur_baby_eggid_;
  ::google::protobuf::int64 cur_baby_create_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountBabySlotData* default_instance_;
};
// -------------------------------------------------------------------

class MountFairyLandTour : public ::google::protobuf::Message {
 public:
  MountFairyLandTour();
  virtual ~MountFairyLandTour();

  MountFairyLandTour(const MountFairyLandTour& from);

  inline MountFairyLandTour& operator=(const MountFairyLandTour& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountFairyLandTour& default_instance();

  void Swap(MountFairyLandTour* other);

  // implements Message ----------------------------------------------

  MountFairyLandTour* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountFairyLandTour& from);
  void MergeFrom(const MountFairyLandTour& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 tour_id = 1;
  inline bool has_tour_id() const;
  inline void clear_tour_id();
  static const int kTourIdFieldNumber = 1;
  inline ::google::protobuf::int64 tour_id() const;
  inline void set_tour_id(::google::protobuf::int64 value);

  // optional uint32 active_state = 2;
  inline bool has_active_state() const;
  inline void clear_active_state();
  static const int kActiveStateFieldNumber = 2;
  inline ::google::protobuf::uint32 active_state() const;
  inline void set_active_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountFairyLandTour)
 private:
  inline void set_has_tour_id();
  inline void clear_has_tour_id();
  inline void set_has_active_state();
  inline void clear_has_active_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 tour_id_;
  ::google::protobuf::uint32 active_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountFairyLandTour* default_instance_;
};
// -------------------------------------------------------------------

class MountFairyLand : public ::google::protobuf::Message {
 public:
  MountFairyLand();
  virtual ~MountFairyLand();

  MountFairyLand(const MountFairyLand& from);

  inline MountFairyLand& operator=(const MountFairyLand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountFairyLand& default_instance();

  void Swap(MountFairyLand* other);

  // implements Message ----------------------------------------------

  MountFairyLand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountFairyLand& from);
  void MergeFrom(const MountFairyLand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 fairy_id = 1;
  inline bool has_fairy_id() const;
  inline void clear_fairy_id();
  static const int kFairyIdFieldNumber = 1;
  inline ::google::protobuf::int64 fairy_id() const;
  inline void set_fairy_id(::google::protobuf::int64 value);

  // repeated .proto_ff.MountFairyLandTour tour = 2;
  inline int tour_size() const;
  inline void clear_tour();
  static const int kTourFieldNumber = 2;
  inline const ::proto_ff::MountFairyLandTour& tour(int index) const;
  inline ::proto_ff::MountFairyLandTour* mutable_tour(int index);
  inline ::proto_ff::MountFairyLandTour* add_tour();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MountFairyLandTour >&
      tour() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MountFairyLandTour >*
      mutable_tour();

  // optional bool active = 3;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 3;
  inline bool active() const;
  inline void set_active(bool value);

  // optional int64 cur_active_tour_id = 4;
  inline bool has_cur_active_tour_id() const;
  inline void clear_cur_active_tour_id();
  static const int kCurActiveTourIdFieldNumber = 4;
  inline ::google::protobuf::int64 cur_active_tour_id() const;
  inline void set_cur_active_tour_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountFairyLand)
 private:
  inline void set_has_fairy_id();
  inline void clear_has_fairy_id();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_cur_active_tour_id();
  inline void clear_has_cur_active_tour_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 fairy_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::MountFairyLandTour > tour_;
  ::google::protobuf::int64 cur_active_tour_id_;
  bool active_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountFairyLand* default_instance_;
};
// -------------------------------------------------------------------

class MountFairySlotRecord : public ::google::protobuf::Message {
 public:
  MountFairySlotRecord();
  virtual ~MountFairySlotRecord();

  MountFairySlotRecord(const MountFairySlotRecord& from);

  inline MountFairySlotRecord& operator=(const MountFairySlotRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountFairySlotRecord& default_instance();

  void Swap(MountFairySlotRecord* other);

  // implements Message ----------------------------------------------

  MountFairySlotRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountFairySlotRecord& from);
  void MergeFrom(const MountFairySlotRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 cur_fairy_id = 1;
  inline bool has_cur_fairy_id() const;
  inline void clear_cur_fairy_id();
  static const int kCurFairyIdFieldNumber = 1;
  inline ::google::protobuf::int64 cur_fairy_id() const;
  inline void set_cur_fairy_id(::google::protobuf::int64 value);

  // optional int64 event_id = 2;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  inline ::google::protobuf::int64 event_id() const;
  inline void set_event_id(::google::protobuf::int64 value);

  // optional int64 create_time = 3;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 3;
  inline ::google::protobuf::int64 create_time() const;
  inline void set_create_time(::google::protobuf::int64 value);

  // optional bool finish = 4;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 4;
  inline bool finish() const;
  inline void set_finish(bool value);

  // optional .proto_ff.ComItem reward_item = 5;
  inline bool has_reward_item() const;
  inline void clear_reward_item();
  static const int kRewardItemFieldNumber = 5;
  inline const ::proto_ff::ComItem& reward_item() const;
  inline ::proto_ff::ComItem* mutable_reward_item();
  inline ::proto_ff::ComItem* release_reward_item();
  inline void set_allocated_reward_item(::proto_ff::ComItem* reward_item);

  // @@protoc_insertion_point(class_scope:proto_ff.MountFairySlotRecord)
 private:
  inline void set_has_cur_fairy_id();
  inline void clear_has_cur_fairy_id();
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_finish();
  inline void clear_has_finish();
  inline void set_has_reward_item();
  inline void clear_has_reward_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cur_fairy_id_;
  ::google::protobuf::int64 event_id_;
  ::google::protobuf::int64 create_time_;
  ::proto_ff::ComItem* reward_item_;
  bool finish_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountFairySlotRecord* default_instance_;
};
// -------------------------------------------------------------------

class MountFairySlot : public ::google::protobuf::Message {
 public:
  MountFairySlot();
  virtual ~MountFairySlot();

  MountFairySlot(const MountFairySlot& from);

  inline MountFairySlot& operator=(const MountFairySlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountFairySlot& default_instance();

  void Swap(MountFairySlot* other);

  // implements Message ----------------------------------------------

  MountFairySlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountFairySlot& from);
  void MergeFrom(const MountFairySlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 slot_id = 1;
  inline bool has_slot_id() const;
  inline void clear_slot_id();
  static const int kSlotIdFieldNumber = 1;
  inline ::google::protobuf::int64 slot_id() const;
  inline void set_slot_id(::google::protobuf::int64 value);

  // optional uint32 cur_kun_id = 2;
  inline bool has_cur_kun_id() const;
  inline void clear_cur_kun_id();
  static const int kCurKunIdFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_kun_id() const;
  inline void set_cur_kun_id(::google::protobuf::uint32 value);

  // optional uint32 cur_dissociate_level = 3;
  inline bool has_cur_dissociate_level() const;
  inline void clear_cur_dissociate_level();
  static const int kCurDissociateLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 cur_dissociate_level() const;
  inline void set_cur_dissociate_level(::google::protobuf::uint32 value);

  // optional uint32 cur_dissociate_time = 4;
  inline bool has_cur_dissociate_time() const;
  inline void clear_cur_dissociate_time();
  static const int kCurDissociateTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 cur_dissociate_time() const;
  inline void set_cur_dissociate_time(::google::protobuf::uint32 value);

  // optional uint32 cur_end_time = 6;
  inline bool has_cur_end_time() const;
  inline void clear_cur_end_time();
  static const int kCurEndTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 cur_end_time() const;
  inline void set_cur_end_time(::google::protobuf::uint32 value);

  // optional uint32 status = 7;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 7;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional bool can_get_reward = 8;
  inline bool has_can_get_reward() const;
  inline void clear_can_get_reward();
  static const int kCanGetRewardFieldNumber = 8;
  inline bool can_get_reward() const;
  inline void set_can_get_reward(bool value);

  // repeated .proto_ff.ComItem reward_item = 9;
  inline int reward_item_size() const;
  inline void clear_reward_item();
  static const int kRewardItemFieldNumber = 9;
  inline const ::proto_ff::ComItem& reward_item(int index) const;
  inline ::proto_ff::ComItem* mutable_reward_item(int index);
  inline ::proto_ff::ComItem* add_reward_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
      reward_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
      mutable_reward_item();

  // optional uint64 reward_gold = 10;
  inline bool has_reward_gold() const;
  inline void clear_reward_gold();
  static const int kRewardGoldFieldNumber = 10;
  inline ::google::protobuf::uint64 reward_gold() const;
  inline void set_reward_gold(::google::protobuf::uint64 value);

  // optional uint64 reward_dia = 11;
  inline bool has_reward_dia() const;
  inline void clear_reward_dia();
  static const int kRewardDiaFieldNumber = 11;
  inline ::google::protobuf::uint64 reward_dia() const;
  inline void set_reward_dia(::google::protobuf::uint64 value);

  // optional uint64 reward_bdia = 12;
  inline bool has_reward_bdia() const;
  inline void clear_reward_bdia();
  static const int kRewardBdiaFieldNumber = 12;
  inline ::google::protobuf::uint64 reward_bdia() const;
  inline void set_reward_bdia(::google::protobuf::uint64 value);

  // repeated .proto_ff.MountFairySlotRecord record = 13;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 13;
  inline const ::proto_ff::MountFairySlotRecord& record(int index) const;
  inline ::proto_ff::MountFairySlotRecord* mutable_record(int index);
  inline ::proto_ff::MountFairySlotRecord* add_record();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MountFairySlotRecord >&
      record() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MountFairySlotRecord >*
      mutable_record();

  // @@protoc_insertion_point(class_scope:proto_ff.MountFairySlot)
 private:
  inline void set_has_slot_id();
  inline void clear_has_slot_id();
  inline void set_has_cur_kun_id();
  inline void clear_has_cur_kun_id();
  inline void set_has_cur_dissociate_level();
  inline void clear_has_cur_dissociate_level();
  inline void set_has_cur_dissociate_time();
  inline void clear_has_cur_dissociate_time();
  inline void set_has_cur_end_time();
  inline void clear_has_cur_end_time();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_can_get_reward();
  inline void clear_has_can_get_reward();
  inline void set_has_reward_gold();
  inline void clear_has_reward_gold();
  inline void set_has_reward_dia();
  inline void clear_has_reward_dia();
  inline void set_has_reward_bdia();
  inline void clear_has_reward_bdia();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 slot_id_;
  ::google::protobuf::uint32 cur_kun_id_;
  ::google::protobuf::uint32 cur_dissociate_level_;
  ::google::protobuf::uint32 cur_dissociate_time_;
  ::google::protobuf::uint32 cur_end_time_;
  ::google::protobuf::uint32 status_;
  bool can_get_reward_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem > reward_item_;
  ::google::protobuf::uint64 reward_gold_;
  ::google::protobuf::uint64 reward_dia_;
  ::google::protobuf::uint64 reward_bdia_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::MountFairySlotRecord > record_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountFairySlot* default_instance_;
};
// -------------------------------------------------------------------

class StatisticDataProto : public ::google::protobuf::Message {
 public:
  StatisticDataProto();
  virtual ~StatisticDataProto();

  StatisticDataProto(const StatisticDataProto& from);

  inline StatisticDataProto& operator=(const StatisticDataProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatisticDataProto& default_instance();

  void Swap(StatisticDataProto* other);

  // implements Message ----------------------------------------------

  StatisticDataProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatisticDataProto& from);
  void MergeFrom(const StatisticDataProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional uint32 total_login_day = 2;
  inline bool has_total_login_day() const;
  inline void clear_total_login_day();
  static const int kTotalLoginDayFieldNumber = 2;
  inline ::google::protobuf::uint32 total_login_day() const;
  inline void set_total_login_day(::google::protobuf::uint32 value);

  // optional uint32 total_rmb = 3;
  inline bool has_total_rmb() const;
  inline void clear_total_rmb();
  static const int kTotalRmbFieldNumber = 3;
  inline ::google::protobuf::uint32 total_rmb() const;
  inline void set_total_rmb(::google::protobuf::uint32 value);

  // optional uint32 today_rmb = 4;
  inline bool has_today_rmb() const;
  inline void clear_today_rmb();
  static const int kTodayRmbFieldNumber = 4;
  inline ::google::protobuf::uint32 today_rmb() const;
  inline void set_today_rmb(::google::protobuf::uint32 value);

  // optional uint32 total_activityCount = 5;
  inline bool has_total_activitycount() const;
  inline void clear_total_activitycount();
  static const int kTotalActivityCountFieldNumber = 5;
  inline ::google::protobuf::uint32 total_activitycount() const;
  inline void set_total_activitycount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StatisticDataProto)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_total_login_day();
  inline void clear_has_total_login_day();
  inline void set_has_total_rmb();
  inline void clear_has_total_rmb();
  inline void set_has_today_rmb();
  inline void clear_has_today_rmb();
  inline void set_has_total_activitycount();
  inline void clear_has_total_activitycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;
  ::google::protobuf::uint32 total_login_day_;
  ::google::protobuf::uint32 total_rmb_;
  ::google::protobuf::uint32 today_rmb_;
  ::google::protobuf::uint32 total_activitycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StatisticDataProto* default_instance_;
};
// -------------------------------------------------------------------

class GodRelicsTaskEntry : public ::google::protobuf::Message {
 public:
  GodRelicsTaskEntry();
  virtual ~GodRelicsTaskEntry();

  GodRelicsTaskEntry(const GodRelicsTaskEntry& from);

  inline GodRelicsTaskEntry& operator=(const GodRelicsTaskEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodRelicsTaskEntry& default_instance();

  void Swap(GodRelicsTaskEntry* other);

  // implements Message ----------------------------------------------

  GodRelicsTaskEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodRelicsTaskEntry& from);
  void MergeFrom(const GodRelicsTaskEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // optional int32 all_num = 4;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 4;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodRelicsTaskEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_all_num();
  inline void clear_has_all_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::int32 all_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodRelicsTaskEntry* default_instance_;
};
// -------------------------------------------------------------------

class GodRelicsTaskGroupEntry : public ::google::protobuf::Message {
 public:
  GodRelicsTaskGroupEntry();
  virtual ~GodRelicsTaskGroupEntry();

  GodRelicsTaskGroupEntry(const GodRelicsTaskGroupEntry& from);

  inline GodRelicsTaskGroupEntry& operator=(const GodRelicsTaskGroupEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodRelicsTaskGroupEntry& default_instance();

  void Swap(GodRelicsTaskGroupEntry* other);

  // implements Message ----------------------------------------------

  GodRelicsTaskGroupEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodRelicsTaskGroupEntry& from);
  void MergeFrom(const GodRelicsTaskGroupEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_cfg_id = 1;
  inline bool has_group_cfg_id() const;
  inline void clear_group_cfg_id();
  static const int kGroupCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_cfg_id() const;
  inline void set_group_cfg_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.GodRelicsTaskEntry entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::GodRelicsTaskEntry& entrys(int index) const;
  inline ::proto_ff::GodRelicsTaskEntry* mutable_entrys(int index);
  inline ::proto_ff::GodRelicsTaskEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >*
      mutable_entrys();

  // optional int32 normal_reward_state = 3;
  inline bool has_normal_reward_state() const;
  inline void clear_normal_reward_state();
  static const int kNormalRewardStateFieldNumber = 3;
  inline ::google::protobuf::int32 normal_reward_state() const;
  inline void set_normal_reward_state(::google::protobuf::int32 value);

  // optional uint64 create_time = 5;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 create_time() const;
  inline void set_create_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodRelicsTaskGroupEntry)
 private:
  inline void set_has_group_cfg_id();
  inline void clear_has_group_cfg_id();
  inline void set_has_normal_reward_state();
  inline void clear_has_normal_reward_state();
  inline void set_has_create_time();
  inline void clear_has_create_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 group_cfg_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry > entrys_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::int32 normal_reward_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodRelicsTaskGroupEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskEntry : public ::google::protobuf::Message {
 public:
  DailyTaskEntry();
  virtual ~DailyTaskEntry();

  DailyTaskEntry(const DailyTaskEntry& from);

  inline DailyTaskEntry& operator=(const DailyTaskEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskEntry& default_instance();

  void Swap(DailyTaskEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskEntry& from);
  void MergeFrom(const DailyTaskEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // optional uint64 last_time = 4;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // optional int32 buy_num = 5;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 5;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::uint64 last_time_;
  ::google::protobuf::int32 buy_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskLimitEntry : public ::google::protobuf::Message {
 public:
  DailyTaskLimitEntry();
  virtual ~DailyTaskLimitEntry();

  DailyTaskLimitEntry(const DailyTaskLimitEntry& from);

  inline DailyTaskLimitEntry& operator=(const DailyTaskLimitEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskLimitEntry& default_instance();

  void Swap(DailyTaskLimitEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskLimitEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskLimitEntry& from);
  void MergeFrom(const DailyTaskLimitEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // optional uint64 last_time = 4;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // optional int32 buy_num = 5;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 5;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // optional bool ready_add = 6;
  inline bool has_ready_add() const;
  inline void clear_ready_add();
  static const int kReadyAddFieldNumber = 6;
  inline bool ready_add() const;
  inline void set_ready_add(bool value);

  // optional bool is_open = 7;
  inline bool has_is_open() const;
  inline void clear_is_open();
  static const int kIsOpenFieldNumber = 7;
  inline bool is_open() const;
  inline void set_is_open(bool value);

  // optional uint64 ready_add_time = 8;
  inline bool has_ready_add_time() const;
  inline void clear_ready_add_time();
  static const int kReadyAddTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 ready_add_time() const;
  inline void set_ready_add_time(::google::protobuf::uint64 value);

  // optional bool is_fest_open = 9;
  inline bool has_is_fest_open() const;
  inline void clear_is_fest_open();
  static const int kIsFestOpenFieldNumber = 9;
  inline bool is_fest_open() const;
  inline void set_is_fest_open(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskLimitEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();
  inline void set_has_ready_add();
  inline void clear_has_ready_add();
  inline void set_has_is_open();
  inline void clear_has_is_open();
  inline void set_has_ready_add_time();
  inline void clear_has_ready_add_time();
  inline void set_has_is_fest_open();
  inline void clear_has_is_fest_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::uint64 last_time_;
  ::google::protobuf::int32 buy_num_;
  bool ready_add_;
  bool is_open_;
  bool is_fest_open_;
  ::google::protobuf::uint64 ready_add_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskLimitEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskBackDayEntry : public ::google::protobuf::Message {
 public:
  DailyTaskBackDayEntry();
  virtual ~DailyTaskBackDayEntry();

  DailyTaskBackDayEntry(const DailyTaskBackDayEntry& from);

  inline DailyTaskBackDayEntry& operator=(const DailyTaskBackDayEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskBackDayEntry& default_instance();

  void Swap(DailyTaskBackDayEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskBackDayEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskBackDayEntry& from);
  void MergeFrom(const DailyTaskBackDayEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 left_num = 1;
  inline bool has_left_num() const;
  inline void clear_left_num();
  static const int kLeftNumFieldNumber = 1;
  inline ::google::protobuf::int32 left_num() const;
  inline void set_left_num(::google::protobuf::int32 value);

  // optional int32 external_left_num = 2;
  inline bool has_external_left_num() const;
  inline void clear_external_left_num();
  static const int kExternalLeftNumFieldNumber = 2;
  inline ::google::protobuf::int32 external_left_num() const;
  inline void set_external_left_num(::google::protobuf::int32 value);

  // optional int64 last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline ::google::protobuf::int64 last_time() const;
  inline void set_last_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskBackDayEntry)
 private:
  inline void set_has_left_num();
  inline void clear_has_left_num();
  inline void set_has_external_left_num();
  inline void clear_has_external_left_num();
  inline void set_has_last_time();
  inline void clear_has_last_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 left_num_;
  ::google::protobuf::int32 external_left_num_;
  ::google::protobuf::int64 last_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskBackDayEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskBackEntry : public ::google::protobuf::Message {
 public:
  DailyTaskBackEntry();
  virtual ~DailyTaskBackEntry();

  DailyTaskBackEntry(const DailyTaskBackEntry& from);

  inline DailyTaskBackEntry& operator=(const DailyTaskBackEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskBackEntry& default_instance();

  void Swap(DailyTaskBackEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskBackEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskBackEntry& from);
  void MergeFrom(const DailyTaskBackEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // repeated .proto_ff.DailyTaskBackDayEntry day_data = 4;
  inline int day_data_size() const;
  inline void clear_day_data();
  static const int kDayDataFieldNumber = 4;
  inline const ::proto_ff::DailyTaskBackDayEntry& day_data(int index) const;
  inline ::proto_ff::DailyTaskBackDayEntry* mutable_day_data(int index);
  inline ::proto_ff::DailyTaskBackDayEntry* add_day_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >&
      day_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >*
      mutable_day_data();

  // optional int32 left_num = 5;
  inline bool has_left_num() const;
  inline void clear_left_num();
  static const int kLeftNumFieldNumber = 5;
  inline ::google::protobuf::int32 left_num() const;
  inline void set_left_num(::google::protobuf::int32 value);

  // optional int32 external_left_num = 6;
  inline bool has_external_left_num() const;
  inline void clear_external_left_num();
  static const int kExternalLeftNumFieldNumber = 6;
  inline ::google::protobuf::int32 external_left_num() const;
  inline void set_external_left_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskBackEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_left_num();
  inline void clear_has_left_num();
  inline void set_has_external_left_num();
  inline void clear_has_external_left_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry > day_data_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::int32 left_num_;
  ::google::protobuf::int32 external_left_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskBackEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskRewardEntry : public ::google::protobuf::Message {
 public:
  DailyTaskRewardEntry();
  virtual ~DailyTaskRewardEntry();

  DailyTaskRewardEntry(const DailyTaskRewardEntry& from);

  inline DailyTaskRewardEntry& operator=(const DailyTaskRewardEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskRewardEntry& default_instance();

  void Swap(DailyTaskRewardEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskRewardEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskRewardEntry& from);
  void MergeFrom(const DailyTaskRewardEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 reward_id = 1;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 1;
  inline ::google::protobuf::uint64 reward_id() const;
  inline void set_reward_id(::google::protobuf::uint64 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskRewardEntry)
 private:
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 reward_id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskRewardEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskAllData : public ::google::protobuf::Message {
 public:
  DailyTaskAllData();
  virtual ~DailyTaskAllData();

  DailyTaskAllData(const DailyTaskAllData& from);

  inline DailyTaskAllData& operator=(const DailyTaskAllData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskAllData& default_instance();

  void Swap(DailyTaskAllData* other);

  // implements Message ----------------------------------------------

  DailyTaskAllData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskAllData& from);
  void MergeFrom(const DailyTaskAllData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DailyTaskEntry task_data = 1;
  inline int task_data_size() const;
  inline void clear_task_data();
  static const int kTaskDataFieldNumber = 1;
  inline const ::proto_ff::DailyTaskEntry& task_data(int index) const;
  inline ::proto_ff::DailyTaskEntry* mutable_task_data(int index);
  inline ::proto_ff::DailyTaskEntry* add_task_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >&
      task_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >*
      mutable_task_data();

  // repeated .proto_ff.DailyTaskLimitEntry task_limit_data = 2;
  inline int task_limit_data_size() const;
  inline void clear_task_limit_data();
  static const int kTaskLimitDataFieldNumber = 2;
  inline const ::proto_ff::DailyTaskLimitEntry& task_limit_data(int index) const;
  inline ::proto_ff::DailyTaskLimitEntry* mutable_task_limit_data(int index);
  inline ::proto_ff::DailyTaskLimitEntry* add_task_limit_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >&
      task_limit_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >*
      mutable_task_limit_data();

  // repeated .proto_ff.DailyTaskBackEntry back_data = 3;
  inline int back_data_size() const;
  inline void clear_back_data();
  static const int kBackDataFieldNumber = 3;
  inline const ::proto_ff::DailyTaskBackEntry& back_data(int index) const;
  inline ::proto_ff::DailyTaskBackEntry* mutable_back_data(int index);
  inline ::proto_ff::DailyTaskBackEntry* add_back_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >&
      back_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >*
      mutable_back_data();

  // repeated .proto_ff.DailyTaskRewardEntry reward_data = 4;
  inline int reward_data_size() const;
  inline void clear_reward_data();
  static const int kRewardDataFieldNumber = 4;
  inline const ::proto_ff::DailyTaskRewardEntry& reward_data(int index) const;
  inline ::proto_ff::DailyTaskRewardEntry* mutable_reward_data(int index);
  inline ::proto_ff::DailyTaskRewardEntry* add_reward_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >&
      reward_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >*
      mutable_reward_data();

  // optional uint32 daily_score = 5;
  inline bool has_daily_score() const;
  inline void clear_daily_score();
  static const int kDailyScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 daily_score() const;
  inline void set_daily_score(::google::protobuf::uint32 value);

  // optional uint32 daily_level = 6;
  inline bool has_daily_level() const;
  inline void clear_daily_level();
  static const int kDailyLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 daily_level() const;
  inline void set_daily_level(::google::protobuf::uint32 value);

  // optional uint64 create_time = 7;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 create_time() const;
  inline void set_create_time(::google::protobuf::uint64 value);

  // optional uint64 daily_exp = 8;
  inline bool has_daily_exp() const;
  inline void clear_daily_exp();
  static const int kDailyExpFieldNumber = 8;
  inline ::google::protobuf::uint64 daily_exp() const;
  inline void set_daily_exp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskAllData)
 private:
  inline void set_has_daily_score();
  inline void clear_has_daily_score();
  inline void set_has_daily_level();
  inline void clear_has_daily_level();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_daily_exp();
  inline void clear_has_daily_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry > task_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry > task_limit_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry > back_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry > reward_data_;
  ::google::protobuf::uint32 daily_score_;
  ::google::protobuf::uint32 daily_level_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::uint64 daily_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskAllData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBRecentSubmitMission : public ::google::protobuf::Message {
 public:
  CharacterDBRecentSubmitMission();
  virtual ~CharacterDBRecentSubmitMission();

  CharacterDBRecentSubmitMission(const CharacterDBRecentSubmitMission& from);

  inline CharacterDBRecentSubmitMission& operator=(const CharacterDBRecentSubmitMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBRecentSubmitMission& default_instance();

  void Swap(CharacterDBRecentSubmitMission* other);

  // implements Message ----------------------------------------------

  CharacterDBRecentSubmitMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBRecentSubmitMission& from);
  void MergeFrom(const CharacterDBRecentSubmitMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 mission_type() const;
  inline void set_mission_type(::google::protobuf::int32 value);

  // optional uint64 mission_id = 2;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mission_id() const;
  inline void set_mission_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBRecentSubmitMission)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_mission_id();
  inline void clear_has_mission_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mission_id_;
  ::google::protobuf::int32 mission_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBRecentSubmitMission* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMissionItemInfo : public ::google::protobuf::Message {
 public:
  CharacterDBMissionItemInfo();
  virtual ~CharacterDBMissionItemInfo();

  CharacterDBMissionItemInfo(const CharacterDBMissionItemInfo& from);

  inline CharacterDBMissionItemInfo& operator=(const CharacterDBMissionItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMissionItemInfo& default_instance();

  void Swap(CharacterDBMissionItemInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBMissionItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMissionItemInfo& from);
  void MergeFrom(const CharacterDBMissionItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 currentValue = 3;
  inline bool has_currentvalue() const;
  inline void clear_currentvalue();
  static const int kCurrentValueFieldNumber = 3;
  inline ::google::protobuf::uint32 currentvalue() const;
  inline void set_currentvalue(::google::protobuf::uint32 value);

  // optional uint32 finalValue = 4;
  inline bool has_finalvalue() const;
  inline void clear_finalvalue();
  static const int kFinalValueFieldNumber = 4;
  inline ::google::protobuf::uint32 finalvalue() const;
  inline void set_finalvalue(::google::protobuf::uint32 value);

  // optional bool completedFlag = 5;
  inline bool has_completedflag() const;
  inline void clear_completedflag();
  static const int kCompletedFlagFieldNumber = 5;
  inline bool completedflag() const;
  inline void set_completedflag(bool value);

  // optional uint64 parma1 = 6;
  inline bool has_parma1() const;
  inline void clear_parma1();
  static const int kParma1FieldNumber = 6;
  inline ::google::protobuf::uint64 parma1() const;
  inline void set_parma1(::google::protobuf::uint64 value);

  // optional uint64 parma2 = 7;
  inline bool has_parma2() const;
  inline void clear_parma2();
  static const int kParma2FieldNumber = 7;
  inline ::google::protobuf::uint64 parma2() const;
  inline void set_parma2(::google::protobuf::uint64 value);

  // optional uint64 parma3 = 8;
  inline bool has_parma3() const;
  inline void clear_parma3();
  static const int kParma3FieldNumber = 8;
  inline ::google::protobuf::uint64 parma3() const;
  inline void set_parma3(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMissionItemInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_currentvalue();
  inline void clear_has_currentvalue();
  inline void set_has_finalvalue();
  inline void clear_has_finalvalue();
  inline void set_has_completedflag();
  inline void clear_has_completedflag();
  inline void set_has_parma1();
  inline void clear_has_parma1();
  inline void set_has_parma2();
  inline void clear_has_parma2();
  inline void set_has_parma3();
  inline void clear_has_parma3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 currentvalue_;
  ::google::protobuf::uint32 finalvalue_;
  bool completedflag_;
  ::google::protobuf::uint64 parma1_;
  ::google::protobuf::uint64 parma2_;
  ::google::protobuf::uint64 parma3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMissionItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMissionTrack : public ::google::protobuf::Message {
 public:
  CharacterDBMissionTrack();
  virtual ~CharacterDBMissionTrack();

  CharacterDBMissionTrack(const CharacterDBMissionTrack& from);

  inline CharacterDBMissionTrack& operator=(const CharacterDBMissionTrack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMissionTrack& default_instance();

  void Swap(CharacterDBMissionTrack* other);

  // implements Message ----------------------------------------------

  CharacterDBMissionTrack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMissionTrack& from);
  void MergeFrom(const CharacterDBMissionTrack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 missionid() const;
  inline void set_missionid(::google::protobuf::uint64 value);

  // optional uint64 dynamicid = 2;
  inline bool has_dynamicid() const;
  inline void clear_dynamicid();
  static const int kDynamicidFieldNumber = 2;
  inline ::google::protobuf::uint64 dynamicid() const;
  inline void set_dynamicid(::google::protobuf::uint64 value);

  // optional uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint64 acceptMissionTime = 4;
  inline bool has_acceptmissiontime() const;
  inline void clear_acceptmissiontime();
  static const int kAcceptMissionTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 acceptmissiontime() const;
  inline void set_acceptmissiontime(::google::protobuf::uint64 value);

  // repeated .proto_ff.CharacterDBMissionItemInfo itemInfo = 5;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 5;
  inline const ::proto_ff::CharacterDBMissionItemInfo& iteminfo(int index) const;
  inline ::proto_ff::CharacterDBMissionItemInfo* mutable_iteminfo(int index);
  inline ::proto_ff::CharacterDBMissionItemInfo* add_iteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >&
      iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >*
      mutable_iteminfo();

  // optional uint64 textid = 6;
  inline bool has_textid() const;
  inline void clear_textid();
  static const int kTextidFieldNumber = 6;
  inline ::google::protobuf::uint64 textid() const;
  inline void set_textid(::google::protobuf::uint64 value);

  // optional uint32 missiontype = 7;
  inline bool has_missiontype() const;
  inline void clear_missiontype();
  static const int kMissiontypeFieldNumber = 7;
  inline ::google::protobuf::uint32 missiontype() const;
  inline void set_missiontype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMissionTrack)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_dynamicid();
  inline void clear_has_dynamicid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_acceptmissiontime();
  inline void clear_has_acceptmissiontime();
  inline void set_has_textid();
  inline void clear_has_textid();
  inline void set_has_missiontype();
  inline void clear_has_missiontype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 missionid_;
  ::google::protobuf::uint64 dynamicid_;
  ::google::protobuf::uint64 acceptmissiontime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo > iteminfo_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 missiontype_;
  ::google::protobuf::uint64 textid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMissionTrack* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBDyMissionBountyParam : public ::google::protobuf::Message {
 public:
  CharacterDBDyMissionBountyParam();
  virtual ~CharacterDBDyMissionBountyParam();

  CharacterDBDyMissionBountyParam(const CharacterDBDyMissionBountyParam& from);

  inline CharacterDBDyMissionBountyParam& operator=(const CharacterDBDyMissionBountyParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBDyMissionBountyParam& default_instance();

  void Swap(CharacterDBDyMissionBountyParam* other);

  // implements Message ----------------------------------------------

  CharacterDBDyMissionBountyParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBDyMissionBountyParam& from);
  void MergeFrom(const CharacterDBDyMissionBountyParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ten_state = 1;
  inline bool has_ten_state() const;
  inline void clear_ten_state();
  static const int kTenStateFieldNumber = 1;
  inline ::google::protobuf::uint32 ten_state() const;
  inline void set_ten_state(::google::protobuf::uint32 value);

  // optional uint32 twenty_state = 2;
  inline bool has_twenty_state() const;
  inline void clear_twenty_state();
  static const int kTwentyStateFieldNumber = 2;
  inline ::google::protobuf::uint32 twenty_state() const;
  inline void set_twenty_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBDyMissionBountyParam)
 private:
  inline void set_has_ten_state();
  inline void clear_has_ten_state();
  inline void set_has_twenty_state();
  inline void clear_has_twenty_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ten_state_;
  ::google::protobuf::uint32 twenty_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBDyMissionBountyParam* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBDyMissionInfo : public ::google::protobuf::Message {
 public:
  CharacterDBDyMissionInfo();
  virtual ~CharacterDBDyMissionInfo();

  CharacterDBDyMissionInfo(const CharacterDBDyMissionInfo& from);

  inline CharacterDBDyMissionInfo& operator=(const CharacterDBDyMissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBDyMissionInfo& default_instance();

  void Swap(CharacterDBDyMissionInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBDyMissionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBDyMissionInfo& from);
  void MergeFrom(const CharacterDBDyMissionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 mission_type() const;
  inline void set_mission_type(::google::protobuf::int32 value);

  // optional uint64 lastfresh = 2;
  inline bool has_lastfresh() const;
  inline void clear_lastfresh();
  static const int kLastfreshFieldNumber = 2;
  inline ::google::protobuf::uint64 lastfresh() const;
  inline void set_lastfresh(::google::protobuf::uint64 value);

  // optional int32 accept_num = 3;
  inline bool has_accept_num() const;
  inline void clear_accept_num();
  static const int kAcceptNumFieldNumber = 3;
  inline ::google::protobuf::int32 accept_num() const;
  inline void set_accept_num(::google::protobuf::int32 value);

  // optional .proto_ff.CharacterDBDyMissionBountyParam bounty_param = 4;
  inline bool has_bounty_param() const;
  inline void clear_bounty_param();
  static const int kBountyParamFieldNumber = 4;
  inline const ::proto_ff::CharacterDBDyMissionBountyParam& bounty_param() const;
  inline ::proto_ff::CharacterDBDyMissionBountyParam* mutable_bounty_param();
  inline ::proto_ff::CharacterDBDyMissionBountyParam* release_bounty_param();
  inline void set_allocated_bounty_param(::proto_ff::CharacterDBDyMissionBountyParam* bounty_param);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBDyMissionInfo)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_lastfresh();
  inline void clear_has_lastfresh();
  inline void set_has_accept_num();
  inline void clear_has_accept_num();
  inline void set_has_bounty_param();
  inline void clear_has_bounty_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 lastfresh_;
  ::google::protobuf::int32 mission_type_;
  ::google::protobuf::int32 accept_num_;
  ::proto_ff::CharacterDBDyMissionBountyParam* bounty_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBDyMissionInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildPrestigeMissionDBData : public ::google::protobuf::Message {
 public:
  GuildPrestigeMissionDBData();
  virtual ~GuildPrestigeMissionDBData();

  GuildPrestigeMissionDBData(const GuildPrestigeMissionDBData& from);

  inline GuildPrestigeMissionDBData& operator=(const GuildPrestigeMissionDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildPrestigeMissionDBData& default_instance();

  void Swap(GuildPrestigeMissionDBData* other);

  // implements Message ----------------------------------------------

  GuildPrestigeMissionDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildPrestigeMissionDBData& from);
  void MergeFrom(const GuildPrestigeMissionDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 prestige_id = 1;
  inline bool has_prestige_id() const;
  inline void clear_prestige_id();
  static const int kPrestigeIdFieldNumber = 1;
  inline ::google::protobuf::int64 prestige_id() const;
  inline void set_prestige_id(::google::protobuf::int64 value);

  // optional int64 task_id = 2;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  inline ::google::protobuf::int64 task_id() const;
  inline void set_task_id(::google::protobuf::int64 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // optional int32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional .proto_ff.CharacterDBMissionTrack track = 5;
  inline bool has_track() const;
  inline void clear_track();
  static const int kTrackFieldNumber = 5;
  inline const ::proto_ff::CharacterDBMissionTrack& track() const;
  inline ::proto_ff::CharacterDBMissionTrack* mutable_track();
  inline ::proto_ff::CharacterDBMissionTrack* release_track();
  inline void set_allocated_track(::proto_ff::CharacterDBMissionTrack* track);

  // @@protoc_insertion_point(class_scope:proto_ff.GuildPrestigeMissionDBData)
 private:
  inline void set_has_prestige_id();
  inline void clear_has_prestige_id();
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_track();
  inline void clear_has_track();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 prestige_id_;
  ::google::protobuf::int64 task_id_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::int32 index_;
  ::proto_ff::CharacterDBMissionTrack* track_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GuildPrestigeMissionDBData* default_instance_;
};
// -------------------------------------------------------------------

class GuildPrestigeMissionDB : public ::google::protobuf::Message {
 public:
  GuildPrestigeMissionDB();
  virtual ~GuildPrestigeMissionDB();

  GuildPrestigeMissionDB(const GuildPrestigeMissionDB& from);

  inline GuildPrestigeMissionDB& operator=(const GuildPrestigeMissionDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildPrestigeMissionDB& default_instance();

  void Swap(GuildPrestigeMissionDB* other);

  // implements Message ----------------------------------------------

  GuildPrestigeMissionDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildPrestigeMissionDB& from);
  void MergeFrom(const GuildPrestigeMissionDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 refresh_num = 1;
  inline bool has_refresh_num() const;
  inline void clear_refresh_num();
  static const int kRefreshNumFieldNumber = 1;
  inline ::google::protobuf::int32 refresh_num() const;
  inline void set_refresh_num(::google::protobuf::int32 value);

  // optional int32 all_refresh_num = 2;
  inline bool has_all_refresh_num() const;
  inline void clear_all_refresh_num();
  static const int kAllRefreshNumFieldNumber = 2;
  inline ::google::protobuf::int32 all_refresh_num() const;
  inline void set_all_refresh_num(::google::protobuf::int32 value);

  // optional int32 accept_num = 3;
  inline bool has_accept_num() const;
  inline void clear_accept_num();
  static const int kAcceptNumFieldNumber = 3;
  inline ::google::protobuf::int32 accept_num() const;
  inline void set_accept_num(::google::protobuf::int32 value);

  // optional int32 all_accept_num = 4;
  inline bool has_all_accept_num() const;
  inline void clear_all_accept_num();
  static const int kAllAcceptNumFieldNumber = 4;
  inline ::google::protobuf::int32 all_accept_num() const;
  inline void set_all_accept_num(::google::protobuf::int32 value);

  // repeated .proto_ff.GuildPrestigeMissionDBData task_pool = 5;
  inline int task_pool_size() const;
  inline void clear_task_pool();
  static const int kTaskPoolFieldNumber = 5;
  inline const ::proto_ff::GuildPrestigeMissionDBData& task_pool(int index) const;
  inline ::proto_ff::GuildPrestigeMissionDBData* mutable_task_pool(int index);
  inline ::proto_ff::GuildPrestigeMissionDBData* add_task_pool();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GuildPrestigeMissionDBData >&
      task_pool() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GuildPrestigeMissionDBData >*
      mutable_task_pool();

  // optional int64 last_refresh_time = 7;
  inline bool has_last_refresh_time() const;
  inline void clear_last_refresh_time();
  static const int kLastRefreshTimeFieldNumber = 7;
  inline ::google::protobuf::int64 last_refresh_time() const;
  inline void set_last_refresh_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GuildPrestigeMissionDB)
 private:
  inline void set_has_refresh_num();
  inline void clear_has_refresh_num();
  inline void set_has_all_refresh_num();
  inline void clear_has_all_refresh_num();
  inline void set_has_accept_num();
  inline void clear_has_accept_num();
  inline void set_has_all_accept_num();
  inline void clear_has_all_accept_num();
  inline void set_has_last_refresh_time();
  inline void clear_has_last_refresh_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 refresh_num_;
  ::google::protobuf::int32 all_refresh_num_;
  ::google::protobuf::int32 accept_num_;
  ::google::protobuf::int32 all_accept_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::GuildPrestigeMissionDBData > task_pool_;
  ::google::protobuf::int64 last_refresh_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GuildPrestigeMissionDB* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBTaskData : public ::google::protobuf::Message {
 public:
  CharacterDBTaskData();
  virtual ~CharacterDBTaskData();

  CharacterDBTaskData(const CharacterDBTaskData& from);

  inline CharacterDBTaskData& operator=(const CharacterDBTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBTaskData& default_instance();

  void Swap(CharacterDBTaskData* other);

  // implements Message ----------------------------------------------

  CharacterDBTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBTaskData& from);
  void MergeFrom(const CharacterDBTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterDBMissionTrack missionTrack = 1;
  inline int missiontrack_size() const;
  inline void clear_missiontrack();
  static const int kMissionTrackFieldNumber = 1;
  inline const ::proto_ff::CharacterDBMissionTrack& missiontrack(int index) const;
  inline ::proto_ff::CharacterDBMissionTrack* mutable_missiontrack(int index);
  inline ::proto_ff::CharacterDBMissionTrack* add_missiontrack();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >&
      missiontrack() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >*
      mutable_missiontrack();

  // repeated .proto_ff.CharacterDBDyMissionInfo dyinfo = 2;
  inline int dyinfo_size() const;
  inline void clear_dyinfo();
  static const int kDyinfoFieldNumber = 2;
  inline const ::proto_ff::CharacterDBDyMissionInfo& dyinfo(int index) const;
  inline ::proto_ff::CharacterDBDyMissionInfo* mutable_dyinfo(int index);
  inline ::proto_ff::CharacterDBDyMissionInfo* add_dyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >&
      dyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >*
      mutable_dyinfo();

  // repeated uint64 already_submit = 3;
  inline int already_submit_size() const;
  inline void clear_already_submit();
  static const int kAlreadySubmitFieldNumber = 3;
  inline ::google::protobuf::uint64 already_submit(int index) const;
  inline void set_already_submit(int index, ::google::protobuf::uint64 value);
  inline void add_already_submit(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      already_submit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_already_submit();

  // repeated .proto_ff.CharacterDBRecentSubmitMission recent_submit = 4;
  inline int recent_submit_size() const;
  inline void clear_recent_submit();
  static const int kRecentSubmitFieldNumber = 4;
  inline const ::proto_ff::CharacterDBRecentSubmitMission& recent_submit(int index) const;
  inline ::proto_ff::CharacterDBRecentSubmitMission* mutable_recent_submit(int index);
  inline ::proto_ff::CharacterDBRecentSubmitMission* add_recent_submit();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >&
      recent_submit() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >*
      mutable_recent_submit();

  // optional .proto_ff.GuildPrestigeMissionDB prestige_mission = 5;
  inline bool has_prestige_mission() const;
  inline void clear_prestige_mission();
  static const int kPrestigeMissionFieldNumber = 5;
  inline const ::proto_ff::GuildPrestigeMissionDB& prestige_mission() const;
  inline ::proto_ff::GuildPrestigeMissionDB* mutable_prestige_mission();
  inline ::proto_ff::GuildPrestigeMissionDB* release_prestige_mission();
  inline void set_allocated_prestige_mission(::proto_ff::GuildPrestigeMissionDB* prestige_mission);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBTaskData)
 private:
  inline void set_has_prestige_mission();
  inline void clear_has_prestige_mission();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack > missiontrack_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo > dyinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > already_submit_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission > recent_submit_;
  ::proto_ff::GuildPrestigeMissionDB* prestige_mission_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBTaskData* default_instance_;
};
// -------------------------------------------------------------------

class NotifyVipDataRsp : public ::google::protobuf::Message {
 public:
  NotifyVipDataRsp();
  virtual ~NotifyVipDataRsp();

  NotifyVipDataRsp(const NotifyVipDataRsp& from);

  inline NotifyVipDataRsp& operator=(const NotifyVipDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyVipDataRsp& default_instance();

  void Swap(NotifyVipDataRsp* other);

  // implements Message ----------------------------------------------

  NotifyVipDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyVipDataRsp& from);
  void MergeFrom(const NotifyVipDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // repeated int32 ids = 2;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 2;
  inline ::google::protobuf::int32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int32 value);
  inline void add_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // optional int32 vip_hide = 3;
  inline bool has_vip_hide() const;
  inline void clear_vip_hide();
  static const int kVipHideFieldNumber = 3;
  inline ::google::protobuf::int32 vip_hide() const;
  inline void set_vip_hide(::google::protobuf::int32 value);

  // optional int32 active_type = 4;
  inline bool has_active_type() const;
  inline void clear_active_type();
  static const int kActiveTypeFieldNumber = 4;
  inline ::google::protobuf::int32 active_type() const;
  inline void set_active_type(::google::protobuf::int32 value);

  // optional uint64 outtime = 5;
  inline bool has_outtime() const;
  inline void clear_outtime();
  static const int kOuttimeFieldNumber = 5;
  inline ::google::protobuf::uint64 outtime() const;
  inline void set_outtime(::google::protobuf::uint64 value);

  // optional int32 can_recv_day_gift = 6;
  inline bool has_can_recv_day_gift() const;
  inline void clear_can_recv_day_gift();
  static const int kCanRecvDayGiftFieldNumber = 6;
  inline ::google::protobuf::int32 can_recv_day_gift() const;
  inline void set_can_recv_day_gift(::google::protobuf::int32 value);

  // optional int32 day_recv = 7;
  inline bool has_day_recv() const;
  inline void clear_day_recv();
  static const int kDayRecvFieldNumber = 7;
  inline ::google::protobuf::int32 day_recv() const;
  inline void set_day_recv(::google::protobuf::int32 value);

  // repeated int32 lv_gift = 8;
  inline int lv_gift_size() const;
  inline void clear_lv_gift();
  static const int kLvGiftFieldNumber = 8;
  inline ::google::protobuf::int32 lv_gift(int index) const;
  inline void set_lv_gift(int index, ::google::protobuf::int32 value);
  inline void add_lv_gift(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lv_gift() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lv_gift();

  // optional int32 zero_state = 9;
  inline bool has_zero_state() const;
  inline void clear_zero_state();
  static const int kZeroStateFieldNumber = 9;
  inline ::google::protobuf::int32 zero_state() const;
  inline void set_zero_state(::google::protobuf::int32 value);

  // optional int32 recv_zero = 10;
  inline bool has_recv_zero() const;
  inline void clear_recv_zero();
  static const int kRecvZeroFieldNumber = 10;
  inline ::google::protobuf::int32 recv_zero() const;
  inline void set_recv_zero(::google::protobuf::int32 value);

  // optional uint64 add_exp = 11;
  inline bool has_add_exp() const;
  inline void clear_add_exp();
  static const int kAddExpFieldNumber = 11;
  inline ::google::protobuf::uint64 add_exp() const;
  inline void set_add_exp(::google::protobuf::uint64 value);

  // optional int32 recv_exp = 12;
  inline bool has_recv_exp() const;
  inline void clear_recv_exp();
  static const int kRecvExpFieldNumber = 12;
  inline ::google::protobuf::int32 recv_exp() const;
  inline void set_recv_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyVipDataRsp)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_vip_hide();
  inline void clear_has_vip_hide();
  inline void set_has_active_type();
  inline void clear_has_active_type();
  inline void set_has_outtime();
  inline void clear_has_outtime();
  inline void set_has_can_recv_day_gift();
  inline void clear_has_can_recv_day_gift();
  inline void set_has_day_recv();
  inline void clear_has_day_recv();
  inline void set_has_zero_state();
  inline void clear_has_zero_state();
  inline void set_has_recv_zero();
  inline void clear_has_recv_zero();
  inline void set_has_add_exp();
  inline void clear_has_add_exp();
  inline void set_has_recv_exp();
  inline void clear_has_recv_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 vip_hide_;
  ::google::protobuf::uint64 outtime_;
  ::google::protobuf::int32 active_type_;
  ::google::protobuf::int32 can_recv_day_gift_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lv_gift_;
  ::google::protobuf::int32 day_recv_;
  ::google::protobuf::int32 zero_state_;
  ::google::protobuf::uint64 add_exp_;
  ::google::protobuf::int32 recv_zero_;
  ::google::protobuf::int32 recv_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyVipDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyPrivilegeOpt : public ::google::protobuf::Message {
 public:
  NotifyPrivilegeOpt();
  virtual ~NotifyPrivilegeOpt();

  NotifyPrivilegeOpt(const NotifyPrivilegeOpt& from);

  inline NotifyPrivilegeOpt& operator=(const NotifyPrivilegeOpt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyPrivilegeOpt& default_instance();

  void Swap(NotifyPrivilegeOpt* other);

  // implements Message ----------------------------------------------

  NotifyPrivilegeOpt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyPrivilegeOpt& from);
  void MergeFrom(const NotifyPrivilegeOpt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // repeated int32 ids = 2;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 2;
  inline ::google::protobuf::int32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int32 value);
  inline void add_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyPrivilegeOpt)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;
  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyPrivilegeOpt* default_instance_;
};
// -------------------------------------------------------------------

class BuyVipGiftReq : public ::google::protobuf::Message {
 public:
  BuyVipGiftReq();
  virtual ~BuyVipGiftReq();

  BuyVipGiftReq(const BuyVipGiftReq& from);

  inline BuyVipGiftReq& operator=(const BuyVipGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyVipGiftReq& default_instance();

  void Swap(BuyVipGiftReq* other);

  // implements Message ----------------------------------------------

  BuyVipGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyVipGiftReq& from);
  void MergeFrom(const BuyVipGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuyVipGiftReq)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opt_;
  ::google::protobuf::int32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BuyVipGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyVipGiftRsp : public ::google::protobuf::Message {
 public:
  BuyVipGiftRsp();
  virtual ~BuyVipGiftRsp();

  BuyVipGiftRsp(const BuyVipGiftRsp& from);

  inline BuyVipGiftRsp& operator=(const BuyVipGiftRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyVipGiftRsp& default_instance();

  void Swap(BuyVipGiftRsp* other);

  // implements Message ----------------------------------------------

  BuyVipGiftRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyVipGiftRsp& from);
  void MergeFrom(const BuyVipGiftRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuyVipGiftRsp)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opt_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BuyVipGiftRsp* default_instance_;
};
// -------------------------------------------------------------------

class RcveVipRewardReq : public ::google::protobuf::Message {
 public:
  RcveVipRewardReq();
  virtual ~RcveVipRewardReq();

  RcveVipRewardReq(const RcveVipRewardReq& from);

  inline RcveVipRewardReq& operator=(const RcveVipRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcveVipRewardReq& default_instance();

  void Swap(RcveVipRewardReq* other);

  // implements Message ----------------------------------------------

  RcveVipRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RcveVipRewardReq& from);
  void MergeFrom(const RcveVipRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RcveVipRewardReq)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RcveVipRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class RcveVipRewardRsp : public ::google::protobuf::Message {
 public:
  RcveVipRewardRsp();
  virtual ~RcveVipRewardRsp();

  RcveVipRewardRsp(const RcveVipRewardRsp& from);

  inline RcveVipRewardRsp& operator=(const RcveVipRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcveVipRewardRsp& default_instance();

  void Swap(RcveVipRewardRsp* other);

  // implements Message ----------------------------------------------

  RcveVipRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RcveVipRewardRsp& from);
  void MergeFrom(const RcveVipRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RcveVipRewardRsp)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opt_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RcveVipRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class VipHideReq : public ::google::protobuf::Message {
 public:
  VipHideReq();
  virtual ~VipHideReq();

  VipHideReq(const VipHideReq& from);

  inline VipHideReq& operator=(const VipHideReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipHideReq& default_instance();

  void Swap(VipHideReq* other);

  // implements Message ----------------------------------------------

  VipHideReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipHideReq& from);
  void MergeFrom(const VipHideReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hide = 1;
  inline bool has_hide() const;
  inline void clear_hide();
  static const int kHideFieldNumber = 1;
  inline ::google::protobuf::int32 hide() const;
  inline void set_hide(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.VipHideReq)
 private:
  inline void set_has_hide();
  inline void clear_has_hide();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 hide_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static VipHideReq* default_instance_;
};
// -------------------------------------------------------------------

class VipHideRsp : public ::google::protobuf::Message {
 public:
  VipHideRsp();
  virtual ~VipHideRsp();

  VipHideRsp(const VipHideRsp& from);

  inline VipHideRsp& operator=(const VipHideRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipHideRsp& default_instance();

  void Swap(VipHideRsp* other);

  // implements Message ----------------------------------------------

  VipHideRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipHideRsp& from);
  void MergeFrom(const VipHideRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hide = 1;
  inline bool has_hide() const;
  inline void clear_hide();
  static const int kHideFieldNumber = 1;
  inline ::google::protobuf::int32 hide() const;
  inline void set_hide(::google::protobuf::int32 value);

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.VipHideRsp)
 private:
  inline void set_has_hide();
  inline void clear_has_hide();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 hide_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static VipHideRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyVipEvent : public ::google::protobuf::Message {
 public:
  NotifyVipEvent();
  virtual ~NotifyVipEvent();

  NotifyVipEvent(const NotifyVipEvent& from);

  inline NotifyVipEvent& operator=(const NotifyVipEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyVipEvent& default_instance();

  void Swap(NotifyVipEvent* other);

  // implements Message ----------------------------------------------

  NotifyVipEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyVipEvent& from);
  void MergeFrom(const NotifyVipEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyVipEvent)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyVipEvent* default_instance_;
};
// -------------------------------------------------------------------

class RecvVipCacheExpReq : public ::google::protobuf::Message {
 public:
  RecvVipCacheExpReq();
  virtual ~RecvVipCacheExpReq();

  RecvVipCacheExpReq(const RecvVipCacheExpReq& from);

  inline RecvVipCacheExpReq& operator=(const RecvVipCacheExpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvVipCacheExpReq& default_instance();

  void Swap(RecvVipCacheExpReq* other);

  // implements Message ----------------------------------------------

  RecvVipCacheExpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecvVipCacheExpReq& from);
  void MergeFrom(const RecvVipCacheExpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.RecvVipCacheExpReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RecvVipCacheExpReq* default_instance_;
};
// -------------------------------------------------------------------

class RecvVipCacheExpRsp : public ::google::protobuf::Message {
 public:
  RecvVipCacheExpRsp();
  virtual ~RecvVipCacheExpRsp();

  RecvVipCacheExpRsp(const RecvVipCacheExpRsp& from);

  inline RecvVipCacheExpRsp& operator=(const RecvVipCacheExpRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvVipCacheExpRsp& default_instance();

  void Swap(RecvVipCacheExpRsp* other);

  // implements Message ----------------------------------------------

  RecvVipCacheExpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecvVipCacheExpRsp& from);
  void MergeFrom(const RecvVipCacheExpRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RecvVipCacheExpRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RecvVipCacheExpRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyArenaReward : public ::google::protobuf::Message {
 public:
  DailyArenaReward();
  virtual ~DailyArenaReward();

  DailyArenaReward(const DailyArenaReward& from);

  inline DailyArenaReward& operator=(const DailyArenaReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyArenaReward& default_instance();

  void Swap(DailyArenaReward* other);

  // implements Message ----------------------------------------------

  DailyArenaReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyArenaReward& from);
  void MergeFrom(const DailyArenaReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cfg_id = 1;
  inline bool has_cfg_id() const;
  inline void clear_cfg_id();
  static const int kCfgIdFieldNumber = 1;
  inline ::google::protobuf::int32 cfg_id() const;
  inline void set_cfg_id(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyArenaReward)
 private:
  inline void set_has_cfg_id();
  inline void clear_has_cfg_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cfg_id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyArenaReward* default_instance_;
};
// -------------------------------------------------------------------

class ChallArenaReward : public ::google::protobuf::Message {
 public:
  ChallArenaReward();
  virtual ~ChallArenaReward();

  ChallArenaReward(const ChallArenaReward& from);

  inline ChallArenaReward& operator=(const ChallArenaReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChallArenaReward& default_instance();

  void Swap(ChallArenaReward* other);

  // implements Message ----------------------------------------------

  ChallArenaReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChallArenaReward& from);
  void MergeFrom(const ChallArenaReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cfg_id = 1;
  inline bool has_cfg_id() const;
  inline void clear_cfg_id();
  static const int kCfgIdFieldNumber = 1;
  inline ::google::protobuf::int32 cfg_id() const;
  inline void set_cfg_id(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ChallArenaReward)
 private:
  inline void set_has_cfg_id();
  inline void clear_has_cfg_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cfg_id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ChallArenaReward* default_instance_;
};
// -------------------------------------------------------------------

class NotifyServerFlag : public ::google::protobuf::Message {
 public:
  NotifyServerFlag();
  virtual ~NotifyServerFlag();

  NotifyServerFlag(const NotifyServerFlag& from);

  inline NotifyServerFlag& operator=(const NotifyServerFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyServerFlag& default_instance();

  void Swap(NotifyServerFlag* other);

  // implements Message ----------------------------------------------

  NotifyServerFlag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyServerFlag& from);
  void MergeFrom(const NotifyServerFlag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bt_dup = 1;
  inline bool has_bt_dup() const;
  inline void clear_bt_dup();
  static const int kBtDupFieldNumber = 1;
  inline ::google::protobuf::int32 bt_dup() const;
  inline void set_bt_dup(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyServerFlag)
 private:
  inline void set_has_bt_dup();
  inline void clear_has_bt_dup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bt_dup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyServerFlag* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSoulSkillData : public ::google::protobuf::Message {
 public:
  FacadeSoulSkillData();
  virtual ~FacadeSoulSkillData();

  FacadeSoulSkillData(const FacadeSoulSkillData& from);

  inline FacadeSoulSkillData& operator=(const FacadeSoulSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSoulSkillData& default_instance();

  void Swap(FacadeSoulSkillData* other);

  // implements Message ----------------------------------------------

  FacadeSoulSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSoulSkillData& from);
  void MergeFrom(const FacadeSoulSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int64 skill_id() const;
  inline void set_skill_id(::google::protobuf::int64 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSoulSkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 skill_id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeSoulSkillData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSoulActivityData : public ::google::protobuf::Message {
 public:
  FacadeSoulActivityData();
  virtual ~FacadeSoulActivityData();

  FacadeSoulActivityData(const FacadeSoulActivityData& from);

  inline FacadeSoulActivityData& operator=(const FacadeSoulActivityData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSoulActivityData& default_instance();

  void Swap(FacadeSoulActivityData* other);

  // implements Message ----------------------------------------------

  FacadeSoulActivityData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSoulActivityData& from);
  void MergeFrom(const FacadeSoulActivityData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::int64 activity_id() const;
  inline void set_activity_id(::google::protobuf::int64 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSoulActivityData)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 activity_id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeSoulActivityData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSoulData : public ::google::protobuf::Message {
 public:
  FacadeSoulData();
  virtual ~FacadeSoulData();

  FacadeSoulData(const FacadeSoulData& from);

  inline FacadeSoulData& operator=(const FacadeSoulData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSoulData& default_instance();

  void Swap(FacadeSoulData* other);

  // implements Message ----------------------------------------------

  FacadeSoulData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSoulData& from);
  void MergeFrom(const FacadeSoulData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 soul_id = 1;
  inline bool has_soul_id() const;
  inline void clear_soul_id();
  static const int kSoulIdFieldNumber = 1;
  inline ::google::protobuf::uint32 soul_id() const;
  inline void set_soul_id(::google::protobuf::uint32 value);

  // optional bool soul_active = 2;
  inline bool has_soul_active() const;
  inline void clear_soul_active();
  static const int kSoulActiveFieldNumber = 2;
  inline bool soul_active() const;
  inline void set_soul_active(bool value);

  // optional uint32 soul_level = 3;
  inline bool has_soul_level() const;
  inline void clear_soul_level();
  static const int kSoulLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 soul_level() const;
  inline void set_soul_level(::google::protobuf::uint32 value);

  // repeated .proto_ff.FacadeSoulSkillData skill_data = 5;
  inline int skill_data_size() const;
  inline void clear_skill_data();
  static const int kSkillDataFieldNumber = 5;
  inline const ::proto_ff::FacadeSoulSkillData& skill_data(int index) const;
  inline ::proto_ff::FacadeSoulSkillData* mutable_skill_data(int index);
  inline ::proto_ff::FacadeSoulSkillData* add_skill_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulSkillData >&
      skill_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulSkillData >*
      mutable_skill_data();

  // repeated .proto_ff.FacadeSoulActivityData acviity_data = 6;
  inline int acviity_data_size() const;
  inline void clear_acviity_data();
  static const int kAcviityDataFieldNumber = 6;
  inline const ::proto_ff::FacadeSoulActivityData& acviity_data(int index) const;
  inline ::proto_ff::FacadeSoulActivityData* mutable_acviity_data(int index);
  inline ::proto_ff::FacadeSoulActivityData* add_acviity_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulActivityData >&
      acviity_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulActivityData >*
      mutable_acviity_data();

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSoulData)
 private:
  inline void set_has_soul_id();
  inline void clear_has_soul_id();
  inline void set_has_soul_active();
  inline void clear_has_soul_active();
  inline void set_has_soul_level();
  inline void clear_has_soul_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 soul_id_;
  bool soul_active_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulSkillData > skill_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulActivityData > acviity_data_;
  ::google::protobuf::uint32 soul_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeSoulData* default_instance_;
};
// -------------------------------------------------------------------

class ItemSellProto : public ::google::protobuf::Message {
 public:
  ItemSellProto();
  virtual ~ItemSellProto();

  ItemSellProto(const ItemSellProto& from);

  inline ItemSellProto& operator=(const ItemSellProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemSellProto& default_instance();

  void Swap(ItemSellProto* other);

  // implements Message ----------------------------------------------

  ItemSellProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemSellProto& from);
  void MergeFrom(const ItemSellProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemSellProto)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ItemSellProto* default_instance_;
};
// -------------------------------------------------------------------

class DeityFantasySkillData : public ::google::protobuf::Message {
 public:
  DeityFantasySkillData();
  virtual ~DeityFantasySkillData();

  DeityFantasySkillData(const DeityFantasySkillData& from);

  inline DeityFantasySkillData& operator=(const DeityFantasySkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityFantasySkillData& default_instance();

  void Swap(DeityFantasySkillData* other);

  // implements Message ----------------------------------------------

  DeityFantasySkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityFantasySkillData& from);
  void MergeFrom(const DeityFantasySkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 skill_state = 2;
  inline bool has_skill_state() const;
  inline void clear_skill_state();
  static const int kSkillStateFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_state() const;
  inline void set_skill_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityFantasySkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_state();
  inline void clear_has_skill_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 skill_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityFantasySkillData* default_instance_;
};
// -------------------------------------------------------------------

class DeityEquipData : public ::google::protobuf::Message {
 public:
  DeityEquipData();
  virtual ~DeityEquipData();

  DeityEquipData(const DeityEquipData& from);

  inline DeityEquipData& operator=(const DeityEquipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityEquipData& default_instance();

  void Swap(DeityEquipData* other);

  // implements Message ----------------------------------------------

  DeityEquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityEquipData& from);
  void MergeFrom(const DeityEquipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.EquipInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::EquipInfo& infos(int index) const;
  inline ::proto_ff::EquipInfo* mutable_infos(int index);
  inline ::proto_ff::EquipInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >*
      mutable_infos();

  // repeated .proto_ff.EquipLvAttrInfo lv_attr = 2;
  inline int lv_attr_size() const;
  inline void clear_lv_attr();
  static const int kLvAttrFieldNumber = 2;
  inline const ::proto_ff::EquipLvAttrInfo& lv_attr(int index) const;
  inline ::proto_ff::EquipLvAttrInfo* mutable_lv_attr(int index);
  inline ::proto_ff::EquipLvAttrInfo* add_lv_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >&
      lv_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >*
      mutable_lv_attr();

  // @@protoc_insertion_point(class_scope:proto_ff.DeityEquipData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo > infos_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo > lv_attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityEquipData* default_instance_;
};
// -------------------------------------------------------------------

class DeityEquipSuitData : public ::google::protobuf::Message {
 public:
  DeityEquipSuitData();
  virtual ~DeityEquipSuitData();

  DeityEquipSuitData(const DeityEquipSuitData& from);

  inline DeityEquipSuitData& operator=(const DeityEquipSuitData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityEquipSuitData& default_instance();

  void Swap(DeityEquipSuitData* other);

  // implements Message ----------------------------------------------

  DeityEquipSuitData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityEquipSuitData& from);
  void MergeFrom(const DeityEquipSuitData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityEquipSuitData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityEquipSuitData* default_instance_;
};
// -------------------------------------------------------------------

class DeityGodHoodEquipData : public ::google::protobuf::Message {
 public:
  DeityGodHoodEquipData();
  virtual ~DeityGodHoodEquipData();

  DeityGodHoodEquipData(const DeityGodHoodEquipData& from);

  inline DeityGodHoodEquipData& operator=(const DeityGodHoodEquipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityGodHoodEquipData& default_instance();

  void Swap(DeityGodHoodEquipData* other);

  // implements Message ----------------------------------------------

  DeityGodHoodEquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityGodHoodEquipData& from);
  void MergeFrom(const DeityGodHoodEquipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional int64 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityGodHoodEquipData)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityGodHoodEquipData* default_instance_;
};
// -------------------------------------------------------------------

class DeityGodHoodEquip : public ::google::protobuf::Message {
 public:
  DeityGodHoodEquip();
  virtual ~DeityGodHoodEquip();

  DeityGodHoodEquip(const DeityGodHoodEquip& from);

  inline DeityGodHoodEquip& operator=(const DeityGodHoodEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityGodHoodEquip& default_instance();

  void Swap(DeityGodHoodEquip* other);

  // implements Message ----------------------------------------------

  DeityGodHoodEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityGodHoodEquip& from);
  void MergeFrom(const DeityGodHoodEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DeityGodHoodEquipData infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::DeityGodHoodEquipData& infos(int index) const;
  inline ::proto_ff::DeityGodHoodEquipData* mutable_infos(int index);
  inline ::proto_ff::DeityGodHoodEquipData* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityGodHoodEquipData >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityGodHoodEquipData >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.DeityGodHoodEquip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityGodHoodEquipData > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityGodHoodEquip* default_instance_;
};
// -------------------------------------------------------------------

class DeityGodHoodData : public ::google::protobuf::Message {
 public:
  DeityGodHoodData();
  virtual ~DeityGodHoodData();

  DeityGodHoodData(const DeityGodHoodData& from);

  inline DeityGodHoodData& operator=(const DeityGodHoodData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityGodHoodData& default_instance();

  void Swap(DeityGodHoodData* other);

  // implements Message ----------------------------------------------

  DeityGodHoodData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityGodHoodData& from);
  void MergeFrom(const DeityGodHoodData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional uint32 stage = 3;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 3;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);

  // optional .proto_ff.DeityGodHoodEquip equip = 4;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 4;
  inline const ::proto_ff::DeityGodHoodEquip& equip() const;
  inline ::proto_ff::DeityGodHoodEquip* mutable_equip();
  inline ::proto_ff::DeityGodHoodEquip* release_equip();
  inline void set_allocated_equip(::proto_ff::DeityGodHoodEquip* equip);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityGodHoodData)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_equip();
  inline void clear_has_equip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 star_;
  ::proto_ff::DeityGodHoodEquip* equip_;
  ::google::protobuf::uint32 stage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityGodHoodData* default_instance_;
};
// -------------------------------------------------------------------

class DeityFantasyData : public ::google::protobuf::Message {
 public:
  DeityFantasyData();
  virtual ~DeityFantasyData();

  DeityFantasyData(const DeityFantasyData& from);

  inline DeityFantasyData& operator=(const DeityFantasyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityFantasyData& default_instance();

  void Swap(DeityFantasyData* other);

  // implements Message ----------------------------------------------

  DeityFantasyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityFantasyData& from);
  void MergeFrom(const DeityFantasyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fantasy_id = 1;
  inline bool has_fantasy_id() const;
  inline void clear_fantasy_id();
  static const int kFantasyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fantasy_id() const;
  inline void set_fantasy_id(::google::protobuf::uint64 value);

  // optional uint32 fantasy_lev = 2;
  inline bool has_fantasy_lev() const;
  inline void clear_fantasy_lev();
  static const int kFantasyLevFieldNumber = 2;
  inline ::google::protobuf::uint32 fantasy_lev() const;
  inline void set_fantasy_lev(::google::protobuf::uint32 value);

  // optional uint64 fantasy_lev_exp = 3;
  inline bool has_fantasy_lev_exp() const;
  inline void clear_fantasy_lev_exp();
  static const int kFantasyLevExpFieldNumber = 3;
  inline ::google::protobuf::uint64 fantasy_lev_exp() const;
  inline void set_fantasy_lev_exp(::google::protobuf::uint64 value);

  // optional uint32 fantasy_star = 4;
  inline bool has_fantasy_star() const;
  inline void clear_fantasy_star();
  static const int kFantasyStarFieldNumber = 4;
  inline ::google::protobuf::uint32 fantasy_star() const;
  inline void set_fantasy_star(::google::protobuf::uint32 value);

  // repeated .proto_ff.DeityFantasySkillData skill_data = 5;
  inline int skill_data_size() const;
  inline void clear_skill_data();
  static const int kSkillDataFieldNumber = 5;
  inline const ::proto_ff::DeityFantasySkillData& skill_data(int index) const;
  inline ::proto_ff::DeityFantasySkillData* mutable_skill_data(int index);
  inline ::proto_ff::DeityFantasySkillData* add_skill_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityFantasySkillData >&
      skill_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityFantasySkillData >*
      mutable_skill_data();

  // optional uint64 fantasy_fight = 6;
  inline bool has_fantasy_fight() const;
  inline void clear_fantasy_fight();
  static const int kFantasyFightFieldNumber = 6;
  inline ::google::protobuf::uint64 fantasy_fight() const;
  inline void set_fantasy_fight(::google::protobuf::uint64 value);

  // optional .proto_ff.DeityEquipData equip_data = 7;
  inline bool has_equip_data() const;
  inline void clear_equip_data();
  static const int kEquipDataFieldNumber = 7;
  inline const ::proto_ff::DeityEquipData& equip_data() const;
  inline ::proto_ff::DeityEquipData* mutable_equip_data();
  inline ::proto_ff::DeityEquipData* release_equip_data();
  inline void set_allocated_equip_data(::proto_ff::DeityEquipData* equip_data);

  // repeated .proto_ff.DeityEquipSuitData equip_suit_data = 8;
  inline int equip_suit_data_size() const;
  inline void clear_equip_suit_data();
  static const int kEquipSuitDataFieldNumber = 8;
  inline const ::proto_ff::DeityEquipSuitData& equip_suit_data(int index) const;
  inline ::proto_ff::DeityEquipSuitData* mutable_equip_suit_data(int index);
  inline ::proto_ff::DeityEquipSuitData* add_equip_suit_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityEquipSuitData >&
      equip_suit_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityEquipSuitData >*
      mutable_equip_suit_data();

  // optional .proto_ff.DeityGodHoodData godhood_data = 9;
  inline bool has_godhood_data() const;
  inline void clear_godhood_data();
  static const int kGodhoodDataFieldNumber = 9;
  inline const ::proto_ff::DeityGodHoodData& godhood_data() const;
  inline ::proto_ff::DeityGodHoodData* mutable_godhood_data();
  inline ::proto_ff::DeityGodHoodData* release_godhood_data();
  inline void set_allocated_godhood_data(::proto_ff::DeityGodHoodData* godhood_data);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityFantasyData)
 private:
  inline void set_has_fantasy_id();
  inline void clear_has_fantasy_id();
  inline void set_has_fantasy_lev();
  inline void clear_has_fantasy_lev();
  inline void set_has_fantasy_lev_exp();
  inline void clear_has_fantasy_lev_exp();
  inline void set_has_fantasy_star();
  inline void clear_has_fantasy_star();
  inline void set_has_fantasy_fight();
  inline void clear_has_fantasy_fight();
  inline void set_has_equip_data();
  inline void clear_has_equip_data();
  inline void set_has_godhood_data();
  inline void clear_has_godhood_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fantasy_id_;
  ::google::protobuf::uint64 fantasy_lev_exp_;
  ::google::protobuf::uint32 fantasy_lev_;
  ::google::protobuf::uint32 fantasy_star_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityFantasySkillData > skill_data_;
  ::google::protobuf::uint64 fantasy_fight_;
  ::proto_ff::DeityEquipData* equip_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityEquipSuitData > equip_suit_data_;
  ::proto_ff::DeityGodHoodData* godhood_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityFantasyData* default_instance_;
};
// -------------------------------------------------------------------

class DeityFragmentData : public ::google::protobuf::Message {
 public:
  DeityFragmentData();
  virtual ~DeityFragmentData();

  DeityFragmentData(const DeityFragmentData& from);

  inline DeityFragmentData& operator=(const DeityFragmentData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityFragmentData& default_instance();

  void Swap(DeityFragmentData* other);

  // implements Message ----------------------------------------------

  DeityFragmentData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityFragmentData& from);
  void MergeFrom(const DeityFragmentData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fragment_id = 1;
  inline bool has_fragment_id() const;
  inline void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fragment_id() const;
  inline void set_fragment_id(::google::protobuf::uint64 value);

  // optional uint32 use_times = 2;
  inline bool has_use_times() const;
  inline void clear_use_times();
  static const int kUseTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 use_times() const;
  inline void set_use_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityFragmentData)
 private:
  inline void set_has_fragment_id();
  inline void clear_has_fragment_id();
  inline void set_has_use_times();
  inline void clear_has_use_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fragment_id_;
  ::google::protobuf::uint32 use_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityFragmentData* default_instance_;
};
// -------------------------------------------------------------------

class DeitySkillData : public ::google::protobuf::Message {
 public:
  DeitySkillData();
  virtual ~DeitySkillData();

  DeitySkillData(const DeitySkillData& from);

  inline DeitySkillData& operator=(const DeitySkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeitySkillData& default_instance();

  void Swap(DeitySkillData* other);

  // implements Message ----------------------------------------------

  DeitySkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeitySkillData& from);
  void MergeFrom(const DeitySkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 skill_lev = 2;
  inline bool has_skill_lev() const;
  inline void clear_skill_lev();
  static const int kSkillLevFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_lev() const;
  inline void set_skill_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeitySkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_lev();
  inline void clear_has_skill_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 skill_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeitySkillData* default_instance_;
};
// -------------------------------------------------------------------

class DeityBattleSlotData : public ::google::protobuf::Message {
 public:
  DeityBattleSlotData();
  virtual ~DeityBattleSlotData();

  DeityBattleSlotData(const DeityBattleSlotData& from);

  inline DeityBattleSlotData& operator=(const DeityBattleSlotData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityBattleSlotData& default_instance();

  void Swap(DeityBattleSlotData* other);

  // implements Message ----------------------------------------------

  DeityBattleSlotData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityBattleSlotData& from);
  void MergeFrom(const DeityBattleSlotData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 cur_state = 2;
  inline bool has_cur_state() const;
  inline void clear_cur_state();
  static const int kCurStateFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_state() const;
  inline void set_cur_state(::google::protobuf::uint32 value);

  // optional int64 deity_id = 3;
  inline bool has_deity_id() const;
  inline void clear_deity_id();
  static const int kDeityIdFieldNumber = 3;
  inline ::google::protobuf::int64 deity_id() const;
  inline void set_deity_id(::google::protobuf::int64 value);

  // optional int64 enter_war_time = 4;
  inline bool has_enter_war_time() const;
  inline void clear_enter_war_time();
  static const int kEnterWarTimeFieldNumber = 4;
  inline ::google::protobuf::int64 enter_war_time() const;
  inline void set_enter_war_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityBattleSlotData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cur_state();
  inline void clear_has_cur_state();
  inline void set_has_deity_id();
  inline void clear_has_deity_id();
  inline void set_has_enter_war_time();
  inline void clear_has_enter_war_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cur_state_;
  ::google::protobuf::int64 deity_id_;
  ::google::protobuf::int64 enter_war_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityBattleSlotData* default_instance_;
};
// -------------------------------------------------------------------

class ArmorSuitState : public ::google::protobuf::Message {
 public:
  ArmorSuitState();
  virtual ~ArmorSuitState();

  ArmorSuitState(const ArmorSuitState& from);

  inline ArmorSuitState& operator=(const ArmorSuitState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmorSuitState& default_instance();

  void Swap(ArmorSuitState* other);

  // implements Message ----------------------------------------------

  ArmorSuitState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArmorSuitState& from);
  void MergeFrom(const ArmorSuitState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ArmorSuitState)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ArmorSuitState* default_instance_;
};
// -------------------------------------------------------------------

class ArmorInfo : public ::google::protobuf::Message {
 public:
  ArmorInfo();
  virtual ~ArmorInfo();

  ArmorInfo(const ArmorInfo& from);

  inline ArmorInfo& operator=(const ArmorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmorInfo& default_instance();

  void Swap(ArmorInfo* other);

  // implements Message ----------------------------------------------

  ArmorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArmorInfo& from);
  void MergeFrom(const ArmorInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .proto_ff.ArmorSuitState suits = 2;
  inline int suits_size() const;
  inline void clear_suits();
  static const int kSuitsFieldNumber = 2;
  inline const ::proto_ff::ArmorSuitState& suits(int index) const;
  inline ::proto_ff::ArmorSuitState* mutable_suits(int index);
  inline ::proto_ff::ArmorSuitState* add_suits();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArmorSuitState >&
      suits() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArmorSuitState >*
      mutable_suits();

  // optional int32 allstate = 3;
  inline bool has_allstate() const;
  inline void clear_allstate();
  static const int kAllstateFieldNumber = 3;
  inline ::google::protobuf::int32 allstate() const;
  inline void set_allstate(::google::protobuf::int32 value);

  // repeated int32 pos = 4;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline ::google::protobuf::int32 pos(int index) const;
  inline void set_pos(int index, ::google::protobuf::int32 value);
  inline void add_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:proto_ff.ArmorInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_allstate();
  inline void clear_has_allstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ArmorSuitState > suits_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 allstate_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ArmorInfo* default_instance_;
};
// -------------------------------------------------------------------

class TitleInfo : public ::google::protobuf::Message {
 public:
  TitleInfo();
  virtual ~TitleInfo();

  TitleInfo(const TitleInfo& from);

  inline TitleInfo& operator=(const TitleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleInfo& default_instance();

  void Swap(TitleInfo* other);

  // implements Message ----------------------------------------------

  TitleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleInfo& from);
  void MergeFrom(const TitleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 title_id = 1;
  inline bool has_title_id() const;
  inline void clear_title_id();
  static const int kTitleIdFieldNumber = 1;
  inline ::google::protobuf::int64 title_id() const;
  inline void set_title_id(::google::protobuf::int64 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int64 start_time = 3;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // optional int64 end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // optional int32 star = 5;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 5;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TitleInfo)
 private:
  inline void set_has_title_id();
  inline void clear_has_title_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 title_id_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int64 end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TitleInfo* default_instance_;
};
// -------------------------------------------------------------------

class OccupationMissionSoulData : public ::google::protobuf::Message {
 public:
  OccupationMissionSoulData();
  virtual ~OccupationMissionSoulData();

  OccupationMissionSoulData(const OccupationMissionSoulData& from);

  inline OccupationMissionSoulData& operator=(const OccupationMissionSoulData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupationMissionSoulData& default_instance();

  void Swap(OccupationMissionSoulData* other);

  // implements Message ----------------------------------------------

  OccupationMissionSoulData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupationMissionSoulData& from);
  void MergeFrom(const OccupationMissionSoulData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 soul_type = 1;
  inline bool has_soul_type() const;
  inline void clear_soul_type();
  static const int kSoulTypeFieldNumber = 1;
  inline ::google::protobuf::int32 soul_type() const;
  inline void set_soul_type(::google::protobuf::int32 value);

  // optional int32 soul_pos = 2;
  inline bool has_soul_pos() const;
  inline void clear_soul_pos();
  static const int kSoulPosFieldNumber = 2;
  inline ::google::protobuf::int32 soul_pos() const;
  inline void set_soul_pos(::google::protobuf::int32 value);

  // optional int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OccupationMissionSoulData)
 private:
  inline void set_has_soul_type();
  inline void clear_has_soul_type();
  inline void set_has_soul_pos();
  inline void clear_has_soul_pos();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 soul_type_;
  ::google::protobuf::int32 soul_pos_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OccupationMissionSoulData* default_instance_;
};
// -------------------------------------------------------------------

class OccupationMissionStageData : public ::google::protobuf::Message {
 public:
  OccupationMissionStageData();
  virtual ~OccupationMissionStageData();

  OccupationMissionStageData(const OccupationMissionStageData& from);

  inline OccupationMissionStageData& operator=(const OccupationMissionStageData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupationMissionStageData& default_instance();

  void Swap(OccupationMissionStageData* other);

  // implements Message ----------------------------------------------

  OccupationMissionStageData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupationMissionStageData& from);
  void MergeFrom(const OccupationMissionStageData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stage = 1;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .proto_ff.OccupationMissionSoulData soul_data = 3;
  inline int soul_data_size() const;
  inline void clear_soul_data();
  static const int kSoulDataFieldNumber = 3;
  inline const ::proto_ff::OccupationMissionSoulData& soul_data(int index) const;
  inline ::proto_ff::OccupationMissionSoulData* mutable_soul_data(int index);
  inline ::proto_ff::OccupationMissionSoulData* add_soul_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionSoulData >&
      soul_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionSoulData >*
      mutable_soul_data();

  // @@protoc_insertion_point(class_scope:proto_ff.OccupationMissionStageData)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stage_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionSoulData > soul_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OccupationMissionStageData* default_instance_;
};
// -------------------------------------------------------------------

class OccupationMissionGradeData : public ::google::protobuf::Message {
 public:
  OccupationMissionGradeData();
  virtual ~OccupationMissionGradeData();

  OccupationMissionGradeData(const OccupationMissionGradeData& from);

  inline OccupationMissionGradeData& operator=(const OccupationMissionGradeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupationMissionGradeData& default_instance();

  void Swap(OccupationMissionGradeData* other);

  // implements Message ----------------------------------------------

  OccupationMissionGradeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupationMissionGradeData& from);
  void MergeFrom(const OccupationMissionGradeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .proto_ff.OccupationMissionStageData stage_data = 3;
  inline int stage_data_size() const;
  inline void clear_stage_data();
  static const int kStageDataFieldNumber = 3;
  inline const ::proto_ff::OccupationMissionStageData& stage_data(int index) const;
  inline ::proto_ff::OccupationMissionStageData* mutable_stage_data(int index);
  inline ::proto_ff::OccupationMissionStageData* add_stage_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionStageData >&
      stage_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionStageData >*
      mutable_stage_data();

  // @@protoc_insertion_point(class_scope:proto_ff.OccupationMissionGradeData)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionStageData > stage_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OccupationMissionGradeData* default_instance_;
};
// -------------------------------------------------------------------

class OccupationMissionData : public ::google::protobuf::Message {
 public:
  OccupationMissionData();
  virtual ~OccupationMissionData();

  OccupationMissionData(const OccupationMissionData& from);

  inline OccupationMissionData& operator=(const OccupationMissionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupationMissionData& default_instance();

  void Swap(OccupationMissionData* other);

  // implements Message ----------------------------------------------

  OccupationMissionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupationMissionData& from);
  void MergeFrom(const OccupationMissionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.OccupationMissionGradeData grade_data = 1;
  inline int grade_data_size() const;
  inline void clear_grade_data();
  static const int kGradeDataFieldNumber = 1;
  inline const ::proto_ff::OccupationMissionGradeData& grade_data(int index) const;
  inline ::proto_ff::OccupationMissionGradeData* mutable_grade_data(int index);
  inline ::proto_ff::OccupationMissionGradeData* add_grade_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionGradeData >&
      grade_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionGradeData >*
      mutable_grade_data();

  // @@protoc_insertion_point(class_scope:proto_ff.OccupationMissionData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionGradeData > grade_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OccupationMissionData* default_instance_;
};
// -------------------------------------------------------------------

class BestEQEquipInfo : public ::google::protobuf::Message {
 public:
  BestEQEquipInfo();
  virtual ~BestEQEquipInfo();

  BestEQEquipInfo(const BestEQEquipInfo& from);

  inline BestEQEquipInfo& operator=(const BestEQEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BestEQEquipInfo& default_instance();

  void Swap(BestEQEquipInfo* other);

  // implements Message ----------------------------------------------

  BestEQEquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BestEQEquipInfo& from);
  void MergeFrom(const BestEQEquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.BestEQEquipInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BestEQEquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class BestEQBreak : public ::google::protobuf::Message {
 public:
  BestEQBreak();
  virtual ~BestEQBreak();

  BestEQBreak(const BestEQBreak& from);

  inline BestEQBreak& operator=(const BestEQBreak& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BestEQBreak& default_instance();

  void Swap(BestEQBreak* other);

  // implements Message ----------------------------------------------

  BestEQBreak* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BestEQBreak& from);
  void MergeFrom(const BestEQBreak& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // repeated int32 exps = 2;
  inline int exps_size() const;
  inline void clear_exps();
  static const int kExpsFieldNumber = 2;
  inline ::google::protobuf::int32 exps(int index) const;
  inline void set_exps(int index, ::google::protobuf::int32 value);
  inline void add_exps(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      exps() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_exps();

  // repeated .proto_ff.ComPair genAttr = 3;
  inline int genattr_size() const;
  inline void clear_genattr();
  static const int kGenAttrFieldNumber = 3;
  inline const ::proto_ff::ComPair& genattr(int index) const;
  inline ::proto_ff::ComPair* mutable_genattr(int index);
  inline ::proto_ff::ComPair* add_genattr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      genattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_genattr();

  // @@protoc_insertion_point(class_scope:proto_ff.BestEQBreak)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > exps_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > genattr_;
  ::google::protobuf::int32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BestEQBreak* default_instance_;
};
// -------------------------------------------------------------------

class BestEQSlotInfo : public ::google::protobuf::Message {
 public:
  BestEQSlotInfo();
  virtual ~BestEQSlotInfo();

  BestEQSlotInfo(const BestEQSlotInfo& from);

  inline BestEQSlotInfo& operator=(const BestEQSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BestEQSlotInfo& default_instance();

  void Swap(BestEQSlotInfo* other);

  // implements Message ----------------------------------------------

  BestEQSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BestEQSlotInfo& from);
  void MergeFrom(const BestEQSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 pourId = 2;
  inline bool has_pourid() const;
  inline void clear_pourid();
  static const int kPourIdFieldNumber = 2;
  inline ::google::protobuf::int32 pourid() const;
  inline void set_pourid(::google::protobuf::int32 value);

  // optional int32 pourExp = 3;
  inline bool has_pourexp() const;
  inline void clear_pourexp();
  static const int kPourExpFieldNumber = 3;
  inline ::google::protobuf::int32 pourexp() const;
  inline void set_pourexp(::google::protobuf::int32 value);

  // optional int32 pourUnLock = 4;
  inline bool has_pourunlock() const;
  inline void clear_pourunlock();
  static const int kPourUnLockFieldNumber = 4;
  inline ::google::protobuf::int32 pourunlock() const;
  inline void set_pourunlock(::google::protobuf::int32 value);

  // optional .proto_ff.BestEQBreak breakInfo = 5;
  inline bool has_breakinfo() const;
  inline void clear_breakinfo();
  static const int kBreakInfoFieldNumber = 5;
  inline const ::proto_ff::BestEQBreak& breakinfo() const;
  inline ::proto_ff::BestEQBreak* mutable_breakinfo();
  inline ::proto_ff::BestEQBreak* release_breakinfo();
  inline void set_allocated_breakinfo(::proto_ff::BestEQBreak* breakinfo);

  // optional int32 awakenLv = 6;
  inline bool has_awakenlv() const;
  inline void clear_awakenlv();
  static const int kAwakenLvFieldNumber = 6;
  inline ::google::protobuf::int32 awakenlv() const;
  inline void set_awakenlv(::google::protobuf::int32 value);

  // optional .proto_ff.ItemProtoInfo dressEquip = 7;
  inline bool has_dressequip() const;
  inline void clear_dressequip();
  static const int kDressEquipFieldNumber = 7;
  inline const ::proto_ff::ItemProtoInfo& dressequip() const;
  inline ::proto_ff::ItemProtoInfo* mutable_dressequip();
  inline ::proto_ff::ItemProtoInfo* release_dressequip();
  inline void set_allocated_dressequip(::proto_ff::ItemProtoInfo* dressequip);

  // @@protoc_insertion_point(class_scope:proto_ff.BestEQSlotInfo)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_pourid();
  inline void clear_has_pourid();
  inline void set_has_pourexp();
  inline void clear_has_pourexp();
  inline void set_has_pourunlock();
  inline void clear_has_pourunlock();
  inline void set_has_breakinfo();
  inline void clear_has_breakinfo();
  inline void set_has_awakenlv();
  inline void clear_has_awakenlv();
  inline void set_has_dressequip();
  inline void clear_has_dressequip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 pourid_;
  ::google::protobuf::int32 pourexp_;
  ::google::protobuf::int32 pourunlock_;
  ::proto_ff::BestEQBreak* breakinfo_;
  ::proto_ff::ItemProtoInfo* dressequip_;
  ::google::protobuf::int32 awakenlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BestEQSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class BestEQTask : public ::google::protobuf::Message {
 public:
  BestEQTask();
  virtual ~BestEQTask();

  BestEQTask(const BestEQTask& from);

  inline BestEQTask& operator=(const BestEQTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BestEQTask& default_instance();

  void Swap(BestEQTask* other);

  // implements Message ----------------------------------------------

  BestEQTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BestEQTask& from);
  void MergeFrom(const BestEQTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BestEQTask)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BestEQTask* default_instance_;
};
// -------------------------------------------------------------------

class OneAchievementData : public ::google::protobuf::Message {
 public:
  OneAchievementData();
  virtual ~OneAchievementData();

  OneAchievementData(const OneAchievementData& from);

  inline OneAchievementData& operator=(const OneAchievementData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneAchievementData& default_instance();

  void Swap(OneAchievementData* other);

  // implements Message ----------------------------------------------

  OneAchievementData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneAchievementData& from);
  void MergeFrom(const OneAchievementData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 all_num = 3;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 3;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // optional int32 cur_num = 4;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 4;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OneAchievementData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_all_num();
  inline void clear_has_all_num();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 all_num_;
  ::google::protobuf::int32 cur_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneAchievementData* default_instance_;
};
// -------------------------------------------------------------------

class OneXiuZhenRoadTaskData : public ::google::protobuf::Message {
 public:
  OneXiuZhenRoadTaskData();
  virtual ~OneXiuZhenRoadTaskData();

  OneXiuZhenRoadTaskData(const OneXiuZhenRoadTaskData& from);

  inline OneXiuZhenRoadTaskData& operator=(const OneXiuZhenRoadTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneXiuZhenRoadTaskData& default_instance();

  void Swap(OneXiuZhenRoadTaskData* other);

  // implements Message ----------------------------------------------

  OneXiuZhenRoadTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneXiuZhenRoadTaskData& from);
  void MergeFrom(const OneXiuZhenRoadTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 all_num = 3;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 3;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // optional int32 cur_num = 4;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 4;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OneXiuZhenRoadTaskData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_all_num();
  inline void clear_has_all_num();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 all_num_;
  ::google::protobuf::int32 cur_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneXiuZhenRoadTaskData* default_instance_;
};
// -------------------------------------------------------------------

class OneXiuZhenRoadPointsData : public ::google::protobuf::Message {
 public:
  OneXiuZhenRoadPointsData();
  virtual ~OneXiuZhenRoadPointsData();

  OneXiuZhenRoadPointsData(const OneXiuZhenRoadPointsData& from);

  inline OneXiuZhenRoadPointsData& operator=(const OneXiuZhenRoadPointsData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneXiuZhenRoadPointsData& default_instance();

  void Swap(OneXiuZhenRoadPointsData* other);

  // implements Message ----------------------------------------------

  OneXiuZhenRoadPointsData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneXiuZhenRoadPointsData& from);
  void MergeFrom(const OneXiuZhenRoadPointsData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OneXiuZhenRoadPointsData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneXiuZhenRoadPointsData* default_instance_;
};
// -------------------------------------------------------------------

class OneXiuZhenRoadRechargeData : public ::google::protobuf::Message {
 public:
  OneXiuZhenRoadRechargeData();
  virtual ~OneXiuZhenRoadRechargeData();

  OneXiuZhenRoadRechargeData(const OneXiuZhenRoadRechargeData& from);

  inline OneXiuZhenRoadRechargeData& operator=(const OneXiuZhenRoadRechargeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneXiuZhenRoadRechargeData& default_instance();

  void Swap(OneXiuZhenRoadRechargeData* other);

  // implements Message ----------------------------------------------

  OneXiuZhenRoadRechargeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneXiuZhenRoadRechargeData& from);
  void MergeFrom(const OneXiuZhenRoadRechargeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OneXiuZhenRoadRechargeData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneXiuZhenRoadRechargeData* default_instance_;
};
// -------------------------------------------------------------------

class OneGoalTaskData : public ::google::protobuf::Message {
 public:
  OneGoalTaskData();
  virtual ~OneGoalTaskData();

  OneGoalTaskData(const OneGoalTaskData& from);

  inline OneGoalTaskData& operator=(const OneGoalTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneGoalTaskData& default_instance();

  void Swap(OneGoalTaskData* other);

  // implements Message ----------------------------------------------

  OneGoalTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneGoalTaskData& from);
  void MergeFrom(const OneGoalTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int64 task_id() const;
  inline void set_task_id(::google::protobuf::int64 value);

  // optional int32 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 group_id() const;
  inline void set_group_id(::google::protobuf::int32 value);

  // optional int32 task_status = 3;
  inline bool has_task_status() const;
  inline void clear_task_status();
  static const int kTaskStatusFieldNumber = 3;
  inline ::google::protobuf::int32 task_status() const;
  inline void set_task_status(::google::protobuf::int32 value);

  // optional int32 all_num = 4;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 4;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // optional int32 cur_num = 5;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 5;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OneGoalTaskData)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_task_status();
  inline void clear_has_task_status();
  inline void set_has_all_num();
  inline void clear_has_all_num();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 task_id_;
  ::google::protobuf::int32 group_id_;
  ::google::protobuf::int32 task_status_;
  ::google::protobuf::int32 all_num_;
  ::google::protobuf::int32 cur_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneGoalTaskData* default_instance_;
};
// -------------------------------------------------------------------

class OneGoalData : public ::google::protobuf::Message {
 public:
  OneGoalData();
  virtual ~OneGoalData();

  OneGoalData(const OneGoalData& from);

  inline OneGoalData& operator=(const OneGoalData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneGoalData& default_instance();

  void Swap(OneGoalData* other);

  // implements Message ----------------------------------------------

  OneGoalData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneGoalData& from);
  void MergeFrom(const OneGoalData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::int64 group_id() const;
  inline void set_group_id(::google::protobuf::int64 value);

  // optional int32 group_status = 2;
  inline bool has_group_status() const;
  inline void clear_group_status();
  static const int kGroupStatusFieldNumber = 2;
  inline ::google::protobuf::int32 group_status() const;
  inline void set_group_status(::google::protobuf::int32 value);

  // repeated .proto_ff.OneGoalTaskData data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::proto_ff::OneGoalTaskData& data(int index) const;
  inline ::proto_ff::OneGoalTaskData* mutable_data(int index);
  inline ::proto_ff::OneGoalTaskData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneGoalTaskData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneGoalTaskData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.OneGoalData)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_status();
  inline void clear_has_group_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 group_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneGoalTaskData > data_;
  ::google::protobuf::int32 group_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneGoalData* default_instance_;
};
// -------------------------------------------------------------------

class OneBattlePassRewardData : public ::google::protobuf::Message {
 public:
  OneBattlePassRewardData();
  virtual ~OneBattlePassRewardData();

  OneBattlePassRewardData(const OneBattlePassRewardData& from);

  inline OneBattlePassRewardData& operator=(const OneBattlePassRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneBattlePassRewardData& default_instance();

  void Swap(OneBattlePassRewardData* other);

  // implements Message ----------------------------------------------

  OneBattlePassRewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneBattlePassRewardData& from);
  void MergeFrom(const OneBattlePassRewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 super_status = 3;
  inline bool has_super_status() const;
  inline void clear_super_status();
  static const int kSuperStatusFieldNumber = 3;
  inline ::google::protobuf::int32 super_status() const;
  inline void set_super_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OneBattlePassRewardData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_super_status();
  inline void clear_has_super_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 super_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneBattlePassRewardData* default_instance_;
};
// -------------------------------------------------------------------

class OneBattlePassTaskData : public ::google::protobuf::Message {
 public:
  OneBattlePassTaskData();
  virtual ~OneBattlePassTaskData();

  OneBattlePassTaskData(const OneBattlePassTaskData& from);

  inline OneBattlePassTaskData& operator=(const OneBattlePassTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneBattlePassTaskData& default_instance();

  void Swap(OneBattlePassTaskData* other);

  // implements Message ----------------------------------------------

  OneBattlePassTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneBattlePassTaskData& from);
  void MergeFrom(const OneBattlePassTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int64 task_id() const;
  inline void set_task_id(::google::protobuf::int64 value);

  // optional int32 task_status = 2;
  inline bool has_task_status() const;
  inline void clear_task_status();
  static const int kTaskStatusFieldNumber = 2;
  inline ::google::protobuf::int32 task_status() const;
  inline void set_task_status(::google::protobuf::int32 value);

  // optional int32 cur_num = 3;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 3;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 all_num = 4;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 4;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OneBattlePassTaskData)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_task_status();
  inline void clear_has_task_status();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_all_num();
  inline void clear_has_all_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 task_id_;
  ::google::protobuf::int32 task_status_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 all_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneBattlePassTaskData* default_instance_;
};
// -------------------------------------------------------------------

class OneBattlePassShopData : public ::google::protobuf::Message {
 public:
  OneBattlePassShopData();
  virtual ~OneBattlePassShopData();

  OneBattlePassShopData(const OneBattlePassShopData& from);

  inline OneBattlePassShopData& operator=(const OneBattlePassShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneBattlePassShopData& default_instance();

  void Swap(OneBattlePassShopData* other);

  // implements Message ----------------------------------------------

  OneBattlePassShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneBattlePassShopData& from);
  void MergeFrom(const OneBattlePassShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 cur_num = 3;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 3;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 all_num = 4;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 4;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OneBattlePassShopData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_all_num();
  inline void clear_has_all_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 all_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneBattlePassShopData* default_instance_;
};
// -------------------------------------------------------------------

class OneBattlePassData : public ::google::protobuf::Message {
 public:
  OneBattlePassData();
  virtual ~OneBattlePassData();

  OneBattlePassData(const OneBattlePassData& from);

  inline OneBattlePassData& operator=(const OneBattlePassData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneBattlePassData& default_instance();

  void Swap(OneBattlePassData* other);

  // implements Message ----------------------------------------------

  OneBattlePassData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneBattlePassData& from);
  void MergeFrom(const OneBattlePassData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 buy_status = 2;
  inline bool has_buy_status() const;
  inline void clear_buy_status();
  static const int kBuyStatusFieldNumber = 2;
  inline ::google::protobuf::int32 buy_status() const;
  inline void set_buy_status(::google::protobuf::int32 value);

  // optional int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 lv = 4;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 4;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // repeated .proto_ff.OneBattlePassRewardData reward = 5;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 5;
  inline const ::proto_ff::OneBattlePassRewardData& reward(int index) const;
  inline ::proto_ff::OneBattlePassRewardData* mutable_reward(int index);
  inline ::proto_ff::OneBattlePassRewardData* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassRewardData >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassRewardData >*
      mutable_reward();

  // repeated .proto_ff.OneBattlePassTaskData task = 6;
  inline int task_size() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 6;
  inline const ::proto_ff::OneBattlePassTaskData& task(int index) const;
  inline ::proto_ff::OneBattlePassTaskData* mutable_task(int index);
  inline ::proto_ff::OneBattlePassTaskData* add_task();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassTaskData >&
      task() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassTaskData >*
      mutable_task();

  // repeated .proto_ff.OneBattlePassShopData shop = 7;
  inline int shop_size() const;
  inline void clear_shop();
  static const int kShopFieldNumber = 7;
  inline const ::proto_ff::OneBattlePassShopData& shop(int index) const;
  inline ::proto_ff::OneBattlePassShopData* mutable_shop(int index);
  inline ::proto_ff::OneBattlePassShopData* add_shop();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassShopData >&
      shop() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassShopData >*
      mutable_shop();

  // @@protoc_insertion_point(class_scope:proto_ff.OneBattlePassData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_buy_status();
  inline void clear_has_buy_status();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 buy_status_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassRewardData > reward_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassTaskData > task_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassShopData > shop_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneBattlePassData* default_instance_;
};
// -------------------------------------------------------------------

class BattlePassData : public ::google::protobuf::Message {
 public:
  BattlePassData();
  virtual ~BattlePassData();

  BattlePassData(const BattlePassData& from);

  inline BattlePassData& operator=(const BattlePassData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattlePassData& default_instance();

  void Swap(BattlePassData* other);

  // implements Message ----------------------------------------------

  BattlePassData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattlePassData& from);
  void MergeFrom(const BattlePassData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.OneBattlePassData xian_ce = 1;
  inline bool has_xian_ce() const;
  inline void clear_xian_ce();
  static const int kXianCeFieldNumber = 1;
  inline const ::proto_ff::OneBattlePassData& xian_ce() const;
  inline ::proto_ff::OneBattlePassData* mutable_xian_ce();
  inline ::proto_ff::OneBattlePassData* release_xian_ce();
  inline void set_allocated_xian_ce(::proto_ff::OneBattlePassData* xian_ce);

  // optional .proto_ff.OneBattlePassData bao_ding = 2;
  inline bool has_bao_ding() const;
  inline void clear_bao_ding();
  static const int kBaoDingFieldNumber = 2;
  inline const ::proto_ff::OneBattlePassData& bao_ding() const;
  inline ::proto_ff::OneBattlePassData* mutable_bao_ding();
  inline ::proto_ff::OneBattlePassData* release_bao_ding();
  inline void set_allocated_bao_ding(::proto_ff::OneBattlePassData* bao_ding);

  // optional uint64 flush_time = 3;
  inline bool has_flush_time() const;
  inline void clear_flush_time();
  static const int kFlushTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 flush_time() const;
  inline void set_flush_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BattlePassData)
 private:
  inline void set_has_xian_ce();
  inline void clear_has_xian_ce();
  inline void set_has_bao_ding();
  inline void clear_has_bao_ding();
  inline void set_has_flush_time();
  inline void clear_has_flush_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::OneBattlePassData* xian_ce_;
  ::proto_ff::OneBattlePassData* bao_ding_;
  ::google::protobuf::uint64 flush_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BattlePassData* default_instance_;
};
// -------------------------------------------------------------------

class AchievementData : public ::google::protobuf::Message {
 public:
  AchievementData();
  virtual ~AchievementData();

  AchievementData(const AchievementData& from);

  inline AchievementData& operator=(const AchievementData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AchievementData& default_instance();

  void Swap(AchievementData* other);

  // implements Message ----------------------------------------------

  AchievementData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AchievementData& from);
  void MergeFrom(const AchievementData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ach_point = 1;
  inline bool has_ach_point() const;
  inline void clear_ach_point();
  static const int kAchPointFieldNumber = 1;
  inline ::google::protobuf::uint64 ach_point() const;
  inline void set_ach_point(::google::protobuf::uint64 value);

  // repeated .proto_ff.OneAchievementData ach_data = 2;
  inline int ach_data_size() const;
  inline void clear_ach_data();
  static const int kAchDataFieldNumber = 2;
  inline const ::proto_ff::OneAchievementData& ach_data(int index) const;
  inline ::proto_ff::OneAchievementData* mutable_ach_data(int index);
  inline ::proto_ff::OneAchievementData* add_ach_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneAchievementData >&
      ach_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneAchievementData >*
      mutable_ach_data();

  // repeated .proto_ff.OneAchievementData ach_total_data = 3;
  inline int ach_total_data_size() const;
  inline void clear_ach_total_data();
  static const int kAchTotalDataFieldNumber = 3;
  inline const ::proto_ff::OneAchievementData& ach_total_data(int index) const;
  inline ::proto_ff::OneAchievementData* mutable_ach_total_data(int index);
  inline ::proto_ff::OneAchievementData* add_ach_total_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneAchievementData >&
      ach_total_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneAchievementData >*
      mutable_ach_total_data();

  // repeated .proto_ff.OneXiuZhenRoadTaskData xiuzhenroad_data = 4;
  inline int xiuzhenroad_data_size() const;
  inline void clear_xiuzhenroad_data();
  static const int kXiuzhenroadDataFieldNumber = 4;
  inline const ::proto_ff::OneXiuZhenRoadTaskData& xiuzhenroad_data(int index) const;
  inline ::proto_ff::OneXiuZhenRoadTaskData* mutable_xiuzhenroad_data(int index);
  inline ::proto_ff::OneXiuZhenRoadTaskData* add_xiuzhenroad_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadTaskData >&
      xiuzhenroad_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadTaskData >*
      mutable_xiuzhenroad_data();

  // optional uint64 xiuezhenroad_point = 5;
  inline bool has_xiuezhenroad_point() const;
  inline void clear_xiuezhenroad_point();
  static const int kXiuezhenroadPointFieldNumber = 5;
  inline ::google::protobuf::uint64 xiuezhenroad_point() const;
  inline void set_xiuezhenroad_point(::google::protobuf::uint64 value);

  // repeated .proto_ff.OneXiuZhenRoadPointsData xiuzhenroad_points_data = 6;
  inline int xiuzhenroad_points_data_size() const;
  inline void clear_xiuzhenroad_points_data();
  static const int kXiuzhenroadPointsDataFieldNumber = 6;
  inline const ::proto_ff::OneXiuZhenRoadPointsData& xiuzhenroad_points_data(int index) const;
  inline ::proto_ff::OneXiuZhenRoadPointsData* mutable_xiuzhenroad_points_data(int index);
  inline ::proto_ff::OneXiuZhenRoadPointsData* add_xiuzhenroad_points_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadPointsData >&
      xiuzhenroad_points_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadPointsData >*
      mutable_xiuzhenroad_points_data();

  // repeated .proto_ff.OneXiuZhenRoadRechargeData xiuzheroad_recharge_data = 7;
  inline int xiuzheroad_recharge_data_size() const;
  inline void clear_xiuzheroad_recharge_data();
  static const int kXiuzheroadRechargeDataFieldNumber = 7;
  inline const ::proto_ff::OneXiuZhenRoadRechargeData& xiuzheroad_recharge_data(int index) const;
  inline ::proto_ff::OneXiuZhenRoadRechargeData* mutable_xiuzheroad_recharge_data(int index);
  inline ::proto_ff::OneXiuZhenRoadRechargeData* add_xiuzheroad_recharge_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadRechargeData >&
      xiuzheroad_recharge_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadRechargeData >*
      mutable_xiuzheroad_recharge_data();

  // optional uint64 xiuzhenroad_open_time = 8;
  inline bool has_xiuzhenroad_open_time() const;
  inline void clear_xiuzhenroad_open_time();
  static const int kXiuzhenroadOpenTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 xiuzhenroad_open_time() const;
  inline void set_xiuzhenroad_open_time(::google::protobuf::uint64 value);

  // optional uint32 xiuzhenroad_back_status = 9;
  inline bool has_xiuzhenroad_back_status() const;
  inline void clear_xiuzhenroad_back_status();
  static const int kXiuzhenroadBackStatusFieldNumber = 9;
  inline ::google::protobuf::uint32 xiuzhenroad_back_status() const;
  inline void set_xiuzhenroad_back_status(::google::protobuf::uint32 value);

  // repeated .proto_ff.OneGoalData goal_data = 10;
  inline int goal_data_size() const;
  inline void clear_goal_data();
  static const int kGoalDataFieldNumber = 10;
  inline const ::proto_ff::OneGoalData& goal_data(int index) const;
  inline ::proto_ff::OneGoalData* mutable_goal_data(int index);
  inline ::proto_ff::OneGoalData* add_goal_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneGoalData >&
      goal_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneGoalData >*
      mutable_goal_data();

  // optional .proto_ff.BattlePassData battle_pass = 11;
  inline bool has_battle_pass() const;
  inline void clear_battle_pass();
  static const int kBattlePassFieldNumber = 11;
  inline const ::proto_ff::BattlePassData& battle_pass() const;
  inline ::proto_ff::BattlePassData* mutable_battle_pass();
  inline ::proto_ff::BattlePassData* release_battle_pass();
  inline void set_allocated_battle_pass(::proto_ff::BattlePassData* battle_pass);

  // @@protoc_insertion_point(class_scope:proto_ff.AchievementData)
 private:
  inline void set_has_ach_point();
  inline void clear_has_ach_point();
  inline void set_has_xiuezhenroad_point();
  inline void clear_has_xiuezhenroad_point();
  inline void set_has_xiuzhenroad_open_time();
  inline void clear_has_xiuzhenroad_open_time();
  inline void set_has_xiuzhenroad_back_status();
  inline void clear_has_xiuzhenroad_back_status();
  inline void set_has_battle_pass();
  inline void clear_has_battle_pass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 ach_point_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneAchievementData > ach_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneAchievementData > ach_total_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadTaskData > xiuzhenroad_data_;
  ::google::protobuf::uint64 xiuezhenroad_point_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadPointsData > xiuzhenroad_points_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadRechargeData > xiuzheroad_recharge_data_;
  ::google::protobuf::uint64 xiuzhenroad_open_time_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneGoalData > goal_data_;
  ::proto_ff::BattlePassData* battle_pass_;
  ::google::protobuf::uint32 xiuzhenroad_back_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static AchievementData* default_instance_;
};
// -------------------------------------------------------------------

class PTGBEventItem : public ::google::protobuf::Message {
 public:
  PTGBEventItem();
  virtual ~PTGBEventItem();

  PTGBEventItem(const PTGBEventItem& from);

  inline PTGBEventItem& operator=(const PTGBEventItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PTGBEventItem& default_instance();

  void Swap(PTGBEventItem* other);

  // implements Message ----------------------------------------------

  PTGBEventItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PTGBEventItem& from);
  void MergeFrom(const PTGBEventItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // required uint64 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint64 num() const;
  inline void set_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PTGBEventItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PTGBEventItem* default_instance_;
};
// -------------------------------------------------------------------

class PTGBEventLog : public ::google::protobuf::Message {
 public:
  PTGBEventLog();
  virtual ~PTGBEventLog();

  PTGBEventLog(const PTGBEventLog& from);

  inline PTGBEventLog& operator=(const PTGBEventLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PTGBEventLog& default_instance();

  void Swap(PTGBEventLog* other);

  // implements Message ----------------------------------------------

  PTGBEventLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PTGBEventLog& from);
  void MergeFrom(const PTGBEventLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 evtId = 1;
  inline bool has_evtid() const;
  inline void clear_evtid();
  static const int kEvtIdFieldNumber = 1;
  inline ::google::protobuf::uint64 evtid() const;
  inline void set_evtid(::google::protobuf::uint64 value);

  // required uint64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // required uint64 energyAdd = 3;
  inline bool has_energyadd() const;
  inline void clear_energyadd();
  static const int kEnergyAddFieldNumber = 3;
  inline ::google::protobuf::uint64 energyadd() const;
  inline void set_energyadd(::google::protobuf::uint64 value);

  // repeated .proto_ff.PTGBEventItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::proto_ff::PTGBEventItem& items(int index) const;
  inline ::proto_ff::PTGBEventItem* mutable_items(int index);
  inline ::proto_ff::PTGBEventItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:proto_ff.PTGBEventLog)
 private:
  inline void set_has_evtid();
  inline void clear_has_evtid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_energyadd();
  inline void clear_has_energyadd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 evtid_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 energyadd_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PTGBEventLog* default_instance_;
};
// -------------------------------------------------------------------

class PTFuncMagic : public ::google::protobuf::Message {
 public:
  PTFuncMagic();
  virtual ~PTFuncMagic();

  PTFuncMagic(const PTFuncMagic& from);

  inline PTFuncMagic& operator=(const PTFuncMagic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PTFuncMagic& default_instance();

  void Swap(PTFuncMagic* other);

  // implements Message ----------------------------------------------

  PTFuncMagic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PTFuncMagic& from);
  void MergeFrom(const PTFuncMagic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool actived = 1;
  inline bool has_actived() const;
  inline void clear_actived();
  static const int kActivedFieldNumber = 1;
  inline bool actived() const;
  inline void set_actived(bool value);

  // required uint32 lvl = 2;
  inline bool has_lvl() const;
  inline void clear_lvl();
  static const int kLvlFieldNumber = 2;
  inline ::google::protobuf::uint32 lvl() const;
  inline void set_lvl(::google::protobuf::uint32 value);

  // required uint32 stage = 3;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 3;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PTFuncMagic)
 private:
  inline void set_has_actived();
  inline void clear_has_actived();
  inline void set_has_lvl();
  inline void clear_has_lvl();
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool actived_;
  ::google::protobuf::uint32 lvl_;
  ::google::protobuf::uint32 stage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PTFuncMagic* default_instance_;
};
// -------------------------------------------------------------------

class PTlg : public ::google::protobuf::Message {
 public:
  PTlg();
  virtual ~PTlg();

  PTlg(const PTlg& from);

  inline PTlg& operator=(const PTlg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PTlg& default_instance();

  void Swap(PTlg* other);

  // implements Message ----------------------------------------------

  PTlg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PTlg& from);
  void MergeFrom(const PTlg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 lvl = 1;
  inline bool has_lvl() const;
  inline void clear_lvl();
  static const int kLvlFieldNumber = 1;
  inline ::google::protobuf::uint32 lvl() const;
  inline void set_lvl(::google::protobuf::uint32 value);

  // required uint32 points = 2;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 2;
  inline ::google::protobuf::uint32 points() const;
  inline void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PTlg)
 private:
  inline void set_has_lvl();
  inline void clear_has_lvl();
  inline void set_has_points();
  inline void clear_has_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 lvl_;
  ::google::protobuf::uint32 points_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PTlg* default_instance_;
};
// -------------------------------------------------------------------

class PTlgPotion : public ::google::protobuf::Message {
 public:
  PTlgPotion();
  virtual ~PTlgPotion();

  PTlgPotion(const PTlgPotion& from);

  inline PTlgPotion& operator=(const PTlgPotion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PTlgPotion& default_instance();

  void Swap(PTlgPotion* other);

  // implements Message ----------------------------------------------

  PTlgPotion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PTlgPotion& from);
  void MergeFrom(const PTlgPotion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 eatCount = 2;
  inline bool has_eatcount() const;
  inline void clear_eatcount();
  static const int kEatCountFieldNumber = 2;
  inline ::google::protobuf::uint32 eatcount() const;
  inline void set_eatcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PTlgPotion)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_eatcount();
  inline void clear_has_eatcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 eatcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PTlgPotion* default_instance_;
};
// -------------------------------------------------------------------

class PTjm : public ::google::protobuf::Message {
 public:
  PTjm();
  virtual ~PTjm();

  PTjm(const PTjm& from);

  inline PTjm& operator=(const PTjm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PTjm& default_instance();

  void Swap(PTjm* other);

  // implements Message ----------------------------------------------

  PTjm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PTjm& from);
  void MergeFrom(const PTjm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 lvl = 1;
  inline bool has_lvl() const;
  inline void clear_lvl();
  static const int kLvlFieldNumber = 1;
  inline ::google::protobuf::uint32 lvl() const;
  inline void set_lvl(::google::protobuf::uint32 value);

  // required uint32 stage = 2;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PTjm)
 private:
  inline void set_has_lvl();
  inline void clear_has_lvl();
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 lvl_;
  ::google::protobuf::uint32 stage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PTjm* default_instance_;
};
// -------------------------------------------------------------------

class PTPurchaseRecord : public ::google::protobuf::Message {
 public:
  PTPurchaseRecord();
  virtual ~PTPurchaseRecord();

  PTPurchaseRecord(const PTPurchaseRecord& from);

  inline PTPurchaseRecord& operator=(const PTPurchaseRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PTPurchaseRecord& default_instance();

  void Swap(PTPurchaseRecord* other);

  // implements Message ----------------------------------------------

  PTPurchaseRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PTPurchaseRecord& from);
  void MergeFrom(const PTPurchaseRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PTPurchaseRecord)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PTPurchaseRecord* default_instance_;
};
// -------------------------------------------------------------------

class PracticeTrueDBData : public ::google::protobuf::Message {
 public:
  PracticeTrueDBData();
  virtual ~PracticeTrueDBData();

  PracticeTrueDBData(const PracticeTrueDBData& from);

  inline PracticeTrueDBData& operator=(const PracticeTrueDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PracticeTrueDBData& default_instance();

  void Swap(PracticeTrueDBData* other);

  // implements Message ----------------------------------------------

  PracticeTrueDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PracticeTrueDBData& from);
  void MergeFrom(const PracticeTrueDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 djRateAdd = 2;
  inline bool has_djrateadd() const;
  inline void clear_djrateadd();
  static const int kDjRateAddFieldNumber = 2;
  inline ::google::protobuf::uint32 djrateadd() const;
  inline void set_djrateadd(::google::protobuf::uint32 value);

  // optional uint32 djFailInvigoration = 3;
  inline bool has_djfailinvigoration() const;
  inline void clear_djfailinvigoration();
  static const int kDjFailInvigorationFieldNumber = 3;
  inline ::google::protobuf::uint32 djfailinvigoration() const;
  inline void set_djfailinvigoration(::google::protobuf::uint32 value);

  // optional uint64 gbEnergy = 4;
  inline bool has_gbenergy() const;
  inline void clear_gbenergy();
  static const int kGbEnergyFieldNumber = 4;
  inline ::google::protobuf::uint64 gbenergy() const;
  inline void set_gbenergy(::google::protobuf::uint64 value);

  // optional uint32 gbEventRate = 5;
  inline bool has_gbeventrate() const;
  inline void clear_gbeventrate();
  static const int kGbEventRateFieldNumber = 5;
  inline ::google::protobuf::uint32 gbeventrate() const;
  inline void set_gbeventrate(::google::protobuf::uint32 value);

  // optional uint32 gbEnergyCritRate = 6;
  inline bool has_gbenergycritrate() const;
  inline void clear_gbenergycritrate();
  static const int kGbEnergyCritRateFieldNumber = 6;
  inline ::google::protobuf::uint32 gbenergycritrate() const;
  inline void set_gbenergycritrate(::google::protobuf::uint32 value);

  // optional uint32 gbLevel = 7;
  inline bool has_gblevel() const;
  inline void clear_gblevel();
  static const int kGbLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 gblevel() const;
  inline void set_gblevel(::google::protobuf::uint32 value);

  // optional uint32 gbArea = 8;
  inline bool has_gbarea() const;
  inline void clear_gbarea();
  static const int kGbAreaFieldNumber = 8;
  inline ::google::protobuf::uint32 gbarea() const;
  inline void set_gbarea(::google::protobuf::uint32 value);

  // repeated .proto_ff.PTGBEventLog gbEventsLog = 9;
  inline int gbeventslog_size() const;
  inline void clear_gbeventslog();
  static const int kGbEventsLogFieldNumber = 9;
  inline const ::proto_ff::PTGBEventLog& gbeventslog(int index) const;
  inline ::proto_ff::PTGBEventLog* mutable_gbeventslog(int index);
  inline ::proto_ff::PTGBEventLog* add_gbeventslog();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventLog >&
      gbeventslog() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventLog >*
      mutable_gbeventslog();

  // repeated .proto_ff.PTGBEventItem gbEventItems = 10;
  inline int gbeventitems_size() const;
  inline void clear_gbeventitems();
  static const int kGbEventItemsFieldNumber = 10;
  inline const ::proto_ff::PTGBEventItem& gbeventitems(int index) const;
  inline ::proto_ff::PTGBEventItem* mutable_gbeventitems(int index);
  inline ::proto_ff::PTGBEventItem* add_gbeventitems();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventItem >&
      gbeventitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventItem >*
      mutable_gbeventitems();

  // optional uint64 gbXLRemainTime = 11;
  inline bool has_gbxlremaintime() const;
  inline void clear_gbxlremaintime();
  static const int kGbXLRemainTimeFieldNumber = 11;
  inline ::google::protobuf::uint64 gbxlremaintime() const;
  inline void set_gbxlremaintime(::google::protobuf::uint64 value);

  // optional uint32 ebLevel = 12;
  inline bool has_eblevel() const;
  inline void clear_eblevel();
  static const int kEbLevelFieldNumber = 12;
  inline ::google::protobuf::uint32 eblevel() const;
  inline void set_eblevel(::google::protobuf::uint32 value);

  // optional uint32 ebLvlUpRate = 13;
  inline bool has_eblvluprate() const;
  inline void clear_eblvluprate();
  static const int kEbLvlUpRateFieldNumber = 13;
  inline ::google::protobuf::uint32 eblvluprate() const;
  inline void set_eblvluprate(::google::protobuf::uint32 value);

  // repeated .proto_ff.PTFuncMagic gfList = 14;
  inline int gflist_size() const;
  inline void clear_gflist();
  static const int kGfListFieldNumber = 14;
  inline const ::proto_ff::PTFuncMagic& gflist(int index) const;
  inline ::proto_ff::PTFuncMagic* mutable_gflist(int index);
  inline ::proto_ff::PTFuncMagic* add_gflist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTFuncMagic >&
      gflist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTFuncMagic >*
      mutable_gflist();

  // optional uint32 ebFlyRateAdd = 15;
  inline bool has_ebflyrateadd() const;
  inline void clear_ebflyrateadd();
  static const int kEbFlyRateAddFieldNumber = 15;
  inline ::google::protobuf::uint32 ebflyrateadd() const;
  inline void set_ebflyrateadd(::google::protobuf::uint32 value);

  // optional uint32 ebFlyFailInvigoration = 16;
  inline bool has_ebflyfailinvigoration() const;
  inline void clear_ebflyfailinvigoration();
  static const int kEbFlyFailInvigorationFieldNumber = 16;
  inline ::google::protobuf::uint32 ebflyfailinvigoration() const;
  inline void set_ebflyfailinvigoration(::google::protobuf::uint32 value);

  // repeated .proto_ff.PTlg lgList = 17;
  inline int lglist_size() const;
  inline void clear_lglist();
  static const int kLgListFieldNumber = 17;
  inline const ::proto_ff::PTlg& lglist(int index) const;
  inline ::proto_ff::PTlg* mutable_lglist(int index);
  inline ::proto_ff::PTlg* add_lglist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTlg >&
      lglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTlg >*
      mutable_lglist();

  // repeated .proto_ff.PTlgPotion lgPotions = 18;
  inline int lgpotions_size() const;
  inline void clear_lgpotions();
  static const int kLgPotionsFieldNumber = 18;
  inline const ::proto_ff::PTlgPotion& lgpotions(int index) const;
  inline ::proto_ff::PTlgPotion* mutable_lgpotions(int index);
  inline ::proto_ff::PTlgPotion* add_lgpotions();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTlgPotion >&
      lgpotions() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTlgPotion >*
      mutable_lgpotions();

  // repeated .proto_ff.PTjm jmList = 19;
  inline int jmlist_size() const;
  inline void clear_jmlist();
  static const int kJmListFieldNumber = 19;
  inline const ::proto_ff::PTjm& jmlist(int index) const;
  inline ::proto_ff::PTjm* mutable_jmlist(int index);
  inline ::proto_ff::PTjm* add_jmlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTjm >&
      jmlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTjm >*
      mutable_jmlist();

  // optional uint32 jmLvlUpRateAdd = 20;
  inline bool has_jmlvluprateadd() const;
  inline void clear_jmlvluprateadd();
  static const int kJmLvlUpRateAddFieldNumber = 20;
  inline ::google::protobuf::uint32 jmlvluprateadd() const;
  inline void set_jmlvluprateadd(::google::protobuf::uint32 value);

  // optional uint32 jmStageUpRateAdd = 21;
  inline bool has_jmstageuprateadd() const;
  inline void clear_jmstageuprateadd();
  static const int kJmStageUpRateAddFieldNumber = 21;
  inline ::google::protobuf::uint32 jmstageuprateadd() const;
  inline void set_jmstageuprateadd(::google::protobuf::uint32 value);

  // optional uint32 jmStageUpFailInvigoration = 22;
  inline bool has_jmstageupfailinvigoration() const;
  inline void clear_jmstageupfailinvigoration();
  static const int kJmStageUpFailInvigorationFieldNumber = 22;
  inline ::google::protobuf::uint32 jmstageupfailinvigoration() const;
  inline void set_jmstageupfailinvigoration(::google::protobuf::uint32 value);

  // optional uint32 jmMergeLvl = 23;
  inline bool has_jmmergelvl() const;
  inline void clear_jmmergelvl();
  static const int kJmMergeLvlFieldNumber = 23;
  inline ::google::protobuf::uint32 jmmergelvl() const;
  inline void set_jmmergelvl(::google::protobuf::uint32 value);

  // repeated .proto_ff.PTPurchaseRecord purchasedList = 24;
  inline int purchasedlist_size() const;
  inline void clear_purchasedlist();
  static const int kPurchasedListFieldNumber = 24;
  inline const ::proto_ff::PTPurchaseRecord& purchasedlist(int index) const;
  inline ::proto_ff::PTPurchaseRecord* mutable_purchasedlist(int index);
  inline ::proto_ff::PTPurchaseRecord* add_purchasedlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTPurchaseRecord >&
      purchasedlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTPurchaseRecord >*
      mutable_purchasedlist();

  // optional uint32 gbXLForever = 25;
  inline bool has_gbxlforever() const;
  inline void clear_gbxlforever();
  static const int kGbXLForeverFieldNumber = 25;
  inline ::google::protobuf::uint32 gbxlforever() const;
  inline void set_gbxlforever(::google::protobuf::uint32 value);

  // optional uint32 gbXWPAdd = 26;
  inline bool has_gbxwpadd() const;
  inline void clear_gbxwpadd();
  static const int kGbXWPAddFieldNumber = 26;
  inline ::google::protobuf::uint32 gbxwpadd() const;
  inline void set_gbxwpadd(::google::protobuf::uint32 value);

  // optional uint32 gbXLEventGetItemRate = 27;
  inline bool has_gbxleventgetitemrate() const;
  inline void clear_gbxleventgetitemrate();
  static const int kGbXLEventGetItemRateFieldNumber = 27;
  inline ::google::protobuf::uint32 gbxleventgetitemrate() const;
  inline void set_gbxleventgetitemrate(::google::protobuf::uint32 value);

  // optional uint32 gbXLEventXWPAdd = 28;
  inline bool has_gbxleventxwpadd() const;
  inline void clear_gbxleventxwpadd();
  static const int kGbXLEventXWPAddFieldNumber = 28;
  inline ::google::protobuf::uint32 gbxleventxwpadd() const;
  inline void set_gbxleventxwpadd(::google::protobuf::uint32 value);

  // optional uint32 ebFlyFailInvigorationAdd = 29;
  inline bool has_ebflyfailinvigorationadd() const;
  inline void clear_ebflyfailinvigorationadd();
  static const int kEbFlyFailInvigorationAddFieldNumber = 29;
  inline ::google::protobuf::uint32 ebflyfailinvigorationadd() const;
  inline void set_ebflyfailinvigorationadd(::google::protobuf::uint32 value);

  // repeated .proto_ff.PTPurchaseRecord gfBookPurchasedList = 30;
  inline int gfbookpurchasedlist_size() const;
  inline void clear_gfbookpurchasedlist();
  static const int kGfBookPurchasedListFieldNumber = 30;
  inline const ::proto_ff::PTPurchaseRecord& gfbookpurchasedlist(int index) const;
  inline ::proto_ff::PTPurchaseRecord* mutable_gfbookpurchasedlist(int index);
  inline ::proto_ff::PTPurchaseRecord* add_gfbookpurchasedlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTPurchaseRecord >&
      gfbookpurchasedlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTPurchaseRecord >*
      mutable_gfbookpurchasedlist();

  // @@protoc_insertion_point(class_scope:proto_ff.PracticeTrueDBData)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_djrateadd();
  inline void clear_has_djrateadd();
  inline void set_has_djfailinvigoration();
  inline void clear_has_djfailinvigoration();
  inline void set_has_gbenergy();
  inline void clear_has_gbenergy();
  inline void set_has_gbeventrate();
  inline void clear_has_gbeventrate();
  inline void set_has_gbenergycritrate();
  inline void clear_has_gbenergycritrate();
  inline void set_has_gblevel();
  inline void clear_has_gblevel();
  inline void set_has_gbarea();
  inline void clear_has_gbarea();
  inline void set_has_gbxlremaintime();
  inline void clear_has_gbxlremaintime();
  inline void set_has_eblevel();
  inline void clear_has_eblevel();
  inline void set_has_eblvluprate();
  inline void clear_has_eblvluprate();
  inline void set_has_ebflyrateadd();
  inline void clear_has_ebflyrateadd();
  inline void set_has_ebflyfailinvigoration();
  inline void clear_has_ebflyfailinvigoration();
  inline void set_has_jmlvluprateadd();
  inline void clear_has_jmlvluprateadd();
  inline void set_has_jmstageuprateadd();
  inline void clear_has_jmstageuprateadd();
  inline void set_has_jmstageupfailinvigoration();
  inline void clear_has_jmstageupfailinvigoration();
  inline void set_has_jmmergelvl();
  inline void clear_has_jmmergelvl();
  inline void set_has_gbxlforever();
  inline void clear_has_gbxlforever();
  inline void set_has_gbxwpadd();
  inline void clear_has_gbxwpadd();
  inline void set_has_gbxleventgetitemrate();
  inline void clear_has_gbxleventgetitemrate();
  inline void set_has_gbxleventxwpadd();
  inline void clear_has_gbxleventxwpadd();
  inline void set_has_ebflyfailinvigorationadd();
  inline void clear_has_ebflyfailinvigorationadd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 djrateadd_;
  ::google::protobuf::uint64 gbenergy_;
  ::google::protobuf::uint32 djfailinvigoration_;
  ::google::protobuf::uint32 gbeventrate_;
  ::google::protobuf::uint32 gbenergycritrate_;
  ::google::protobuf::uint32 gblevel_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventLog > gbeventslog_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventItem > gbeventitems_;
  ::google::protobuf::uint32 gbarea_;
  ::google::protobuf::uint32 eblevel_;
  ::google::protobuf::uint64 gbxlremaintime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PTFuncMagic > gflist_;
  ::google::protobuf::uint32 eblvluprate_;
  ::google::protobuf::uint32 ebflyrateadd_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PTlg > lglist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PTlgPotion > lgpotions_;
  ::google::protobuf::uint32 ebflyfailinvigoration_;
  ::google::protobuf::uint32 jmlvluprateadd_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PTjm > jmlist_;
  ::google::protobuf::uint32 jmstageuprateadd_;
  ::google::protobuf::uint32 jmstageupfailinvigoration_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PTPurchaseRecord > purchasedlist_;
  ::google::protobuf::uint32 jmmergelvl_;
  ::google::protobuf::uint32 gbxlforever_;
  ::google::protobuf::uint32 gbxwpadd_;
  ::google::protobuf::uint32 gbxleventgetitemrate_;
  ::google::protobuf::uint32 gbxleventxwpadd_;
  ::google::protobuf::uint32 ebflyfailinvigorationadd_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PTPurchaseRecord > gfbookpurchasedlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PracticeTrueDBData* default_instance_;
};
// -------------------------------------------------------------------

class AncientSlotInfo : public ::google::protobuf::Message {
 public:
  AncientSlotInfo();
  virtual ~AncientSlotInfo();

  AncientSlotInfo(const AncientSlotInfo& from);

  inline AncientSlotInfo& operator=(const AncientSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AncientSlotInfo& default_instance();

  void Swap(AncientSlotInfo* other);

  // implements Message ----------------------------------------------

  AncientSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AncientSlotInfo& from);
  void MergeFrom(const AncientSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 step = 2;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 2;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // optional int32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::int32 step_value() const;
  inline void set_step_value(::google::protobuf::int32 value);

  // optional int32 bless = 4;
  inline bool has_bless() const;
  inline void clear_bless();
  static const int kBlessFieldNumber = 4;
  inline ::google::protobuf::int32 bless() const;
  inline void set_bless(::google::protobuf::int32 value);

  // repeated int32 attr_index = 5;
  inline int attr_index_size() const;
  inline void clear_attr_index();
  static const int kAttrIndexFieldNumber = 5;
  inline ::google::protobuf::int32 attr_index(int index) const;
  inline void set_attr_index(int index, ::google::protobuf::int32 value);
  inline void add_attr_index(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attr_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attr_index();

  // @@protoc_insertion_point(class_scope:proto_ff.AncientSlotInfo)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_step_value();
  inline void clear_has_step_value();
  inline void set_has_bless();
  inline void clear_has_bless();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 step_value_;
  ::google::protobuf::int32 bless_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attr_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static AncientSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class AncientInfo : public ::google::protobuf::Message {
 public:
  AncientInfo();
  virtual ~AncientInfo();

  AncientInfo(const AncientInfo& from);

  inline AncientInfo& operator=(const AncientInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AncientInfo& default_instance();

  void Swap(AncientInfo* other);

  // implements Message ----------------------------------------------

  AncientInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AncientInfo& from);
  void MergeFrom(const AncientInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated int32 unlock_num = 2;
  inline int unlock_num_size() const;
  inline void clear_unlock_num();
  static const int kUnlockNumFieldNumber = 2;
  inline ::google::protobuf::int32 unlock_num(int index) const;
  inline void set_unlock_num(int index, ::google::protobuf::int32 value);
  inline void add_unlock_num(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unlock_num() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unlock_num();

  // optional int32 lock = 3;
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 3;
  inline ::google::protobuf::int32 lock() const;
  inline void set_lock(::google::protobuf::int32 value);

  // repeated .proto_ff.AncientSlotInfo slots = 4;
  inline int slots_size() const;
  inline void clear_slots();
  static const int kSlotsFieldNumber = 4;
  inline const ::proto_ff::AncientSlotInfo& slots(int index) const;
  inline ::proto_ff::AncientSlotInfo* mutable_slots(int index);
  inline ::proto_ff::AncientSlotInfo* add_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::AncientSlotInfo >&
      slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::AncientSlotInfo >*
      mutable_slots();

  // @@protoc_insertion_point(class_scope:proto_ff.AncientInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lock();
  inline void clear_has_lock();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unlock_num_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 lock_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::AncientSlotInfo > slots_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static AncientInfo* default_instance_;
};
// -------------------------------------------------------------------

class MarryChild : public ::google::protobuf::Message {
 public:
  MarryChild();
  virtual ~MarryChild();

  MarryChild(const MarryChild& from);

  inline MarryChild& operator=(const MarryChild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryChild& default_instance();

  void Swap(MarryChild* other);

  // implements Message ----------------------------------------------

  MarryChild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryChild& from);
  void MergeFrom(const MarryChild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 star = 4;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 4;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryChild)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MarryChild* default_instance_;
};
// -------------------------------------------------------------------

class MarrySelfInfo : public ::google::protobuf::Message {
 public:
  MarrySelfInfo();
  virtual ~MarrySelfInfo();

  MarrySelfInfo(const MarrySelfInfo& from);

  inline MarrySelfInfo& operator=(const MarrySelfInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarrySelfInfo& default_instance();

  void Swap(MarrySelfInfo* other);

  // implements Message ----------------------------------------------

  MarrySelfInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarrySelfInfo& from);
  void MergeFrom(const MarrySelfInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 marry_flag = 1;
  inline bool has_marry_flag() const;
  inline void clear_marry_flag();
  static const int kMarryFlagFieldNumber = 1;
  inline ::google::protobuf::int32 marry_flag() const;
  inline void set_marry_flag(::google::protobuf::int32 value);

  // optional int32 lock_lv = 2;
  inline bool has_lock_lv() const;
  inline void clear_lock_lv();
  static const int kLockLvFieldNumber = 2;
  inline ::google::protobuf::int32 lock_lv() const;
  inline void set_lock_lv(::google::protobuf::int32 value);

  // optional int32 lock_exp = 3;
  inline bool has_lock_exp() const;
  inline void clear_lock_exp();
  static const int kLockExpFieldNumber = 3;
  inline ::google::protobuf::int32 lock_exp() const;
  inline void set_lock_exp(::google::protobuf::int32 value);

  // optional uint64 card_buy_time = 4;
  inline bool has_card_buy_time() const;
  inline void clear_card_buy_time();
  static const int kCardBuyTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 card_buy_time() const;
  inline void set_card_buy_time(::google::protobuf::uint64 value);

  // optional int32 child_id = 5;
  inline bool has_child_id() const;
  inline void clear_child_id();
  static const int kChildIdFieldNumber = 5;
  inline ::google::protobuf::int32 child_id() const;
  inline void set_child_id(::google::protobuf::int32 value);

  // repeated .proto_ff.MarryChild childs = 6;
  inline int childs_size() const;
  inline void clear_childs();
  static const int kChildsFieldNumber = 6;
  inline const ::proto_ff::MarryChild& childs(int index) const;
  inline ::proto_ff::MarryChild* mutable_childs(int index);
  inline ::proto_ff::MarryChild* add_childs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MarryChild >&
      childs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MarryChild >*
      mutable_childs();

  // optional int32 express_lv = 7;
  inline bool has_express_lv() const;
  inline void clear_express_lv();
  static const int kExpressLvFieldNumber = 7;
  inline ::google::protobuf::int32 express_lv() const;
  inline void set_express_lv(::google::protobuf::int32 value);

  // optional int32 express_exp = 8;
  inline bool has_express_exp() const;
  inline void clear_express_exp();
  static const int kExpressExpFieldNumber = 8;
  inline ::google::protobuf::int32 express_exp() const;
  inline void set_express_exp(::google::protobuf::int32 value);

  // repeated int32 gears = 9;
  inline int gears_size() const;
  inline void clear_gears();
  static const int kGearsFieldNumber = 9;
  inline ::google::protobuf::int32 gears(int index) const;
  inline void set_gears(int index, ::google::protobuf::int32 value);
  inline void add_gears(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gears() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gears();

  // optional uint64 child_hatch_time = 10;
  inline bool has_child_hatch_time() const;
  inline void clear_child_hatch_time();
  static const int kChildHatchTimeFieldNumber = 10;
  inline ::google::protobuf::uint64 child_hatch_time() const;
  inline void set_child_hatch_time(::google::protobuf::uint64 value);

  // optional int32 buy_dup_num = 11;
  inline bool has_buy_dup_num() const;
  inline void clear_buy_dup_num();
  static const int kBuyDupNumFieldNumber = 11;
  inline ::google::protobuf::int32 buy_dup_num() const;
  inline void set_buy_dup_num(::google::protobuf::int32 value);

  // optional int32 dst_give_dup_num = 12;
  inline bool has_dst_give_dup_num() const;
  inline void clear_dst_give_dup_num();
  static const int kDstGiveDupNumFieldNumber = 12;
  inline ::google::protobuf::int32 dst_give_dup_num() const;
  inline void set_dst_give_dup_num(::google::protobuf::int32 value);

  // optional int32 enter_marry_dup_num = 13;
  inline bool has_enter_marry_dup_num() const;
  inline void clear_enter_marry_dup_num();
  static const int kEnterMarryDupNumFieldNumber = 13;
  inline ::google::protobuf::int32 enter_marry_dup_num() const;
  inline void set_enter_marry_dup_num(::google::protobuf::int32 value);

  // optional int32 marry_id = 14;
  inline bool has_marry_id() const;
  inline void clear_marry_id();
  static const int kMarryIdFieldNumber = 14;
  inline ::google::protobuf::int32 marry_id() const;
  inline void set_marry_id(::google::protobuf::int32 value);

  // repeated int32 recved_gears = 15;
  inline int recved_gears_size() const;
  inline void clear_recved_gears();
  static const int kRecvedGearsFieldNumber = 15;
  inline ::google::protobuf::int32 recved_gears(int index) const;
  inline void set_recved_gears(int index, ::google::protobuf::int32 value);
  inline void add_recved_gears(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      recved_gears() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_recved_gears();

  // optional int32 cur_can_recv_gear = 16;
  inline bool has_cur_can_recv_gear() const;
  inline void clear_cur_can_recv_gear();
  static const int kCurCanRecvGearFieldNumber = 16;
  inline ::google::protobuf::int32 cur_can_recv_gear() const;
  inline void set_cur_can_recv_gear(::google::protobuf::int32 value);

  // optional int32 recv_child = 17;
  inline bool has_recv_child() const;
  inline void clear_recv_child();
  static const int kRecvChildFieldNumber = 17;
  inline ::google::protobuf::int32 recv_child() const;
  inline void set_recv_child(::google::protobuf::int32 value);

  // optional int32 buy_card_reward_state = 18;
  inline bool has_buy_card_reward_state() const;
  inline void clear_buy_card_reward_state();
  static const int kBuyCardRewardStateFieldNumber = 18;
  inline ::google::protobuf::int32 buy_card_reward_state() const;
  inline void set_buy_card_reward_state(::google::protobuf::int32 value);

  // optional int32 card_reward_state = 19;
  inline bool has_card_reward_state() const;
  inline void clear_card_reward_state();
  static const int kCardRewardStateFieldNumber = 19;
  inline ::google::protobuf::int32 card_reward_state() const;
  inline void set_card_reward_state(::google::protobuf::int32 value);

  // optional int32 dst_card_reward_state = 20;
  inline bool has_dst_card_reward_state() const;
  inline void clear_dst_card_reward_state();
  static const int kDstCardRewardStateFieldNumber = 20;
  inline ::google::protobuf::int32 dst_card_reward_state() const;
  inline void set_dst_card_reward_state(::google::protobuf::int32 value);

  // optional int32 card_surplus_day = 21;
  inline bool has_card_surplus_day() const;
  inline void clear_card_surplus_day();
  static const int kCardSurplusDayFieldNumber = 21;
  inline ::google::protobuf::int32 card_surplus_day() const;
  inline void set_card_surplus_day(::google::protobuf::int32 value);

  // optional int32 recv_self_box_days = 22;
  inline bool has_recv_self_box_days() const;
  inline void clear_recv_self_box_days();
  static const int kRecvSelfBoxDaysFieldNumber = 22;
  inline ::google::protobuf::int32 recv_self_box_days() const;
  inline void set_recv_self_box_days(::google::protobuf::int32 value);

  // optional int32 task_state = 23;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 23;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // optional int32 express_exp_sum = 24;
  inline bool has_express_exp_sum() const;
  inline void clear_express_exp_sum();
  static const int kExpressExpSumFieldNumber = 24;
  inline ::google::protobuf::int32 express_exp_sum() const;
  inline void set_express_exp_sum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarrySelfInfo)
 private:
  inline void set_has_marry_flag();
  inline void clear_has_marry_flag();
  inline void set_has_lock_lv();
  inline void clear_has_lock_lv();
  inline void set_has_lock_exp();
  inline void clear_has_lock_exp();
  inline void set_has_card_buy_time();
  inline void clear_has_card_buy_time();
  inline void set_has_child_id();
  inline void clear_has_child_id();
  inline void set_has_express_lv();
  inline void clear_has_express_lv();
  inline void set_has_express_exp();
  inline void clear_has_express_exp();
  inline void set_has_child_hatch_time();
  inline void clear_has_child_hatch_time();
  inline void set_has_buy_dup_num();
  inline void clear_has_buy_dup_num();
  inline void set_has_dst_give_dup_num();
  inline void clear_has_dst_give_dup_num();
  inline void set_has_enter_marry_dup_num();
  inline void clear_has_enter_marry_dup_num();
  inline void set_has_marry_id();
  inline void clear_has_marry_id();
  inline void set_has_cur_can_recv_gear();
  inline void clear_has_cur_can_recv_gear();
  inline void set_has_recv_child();
  inline void clear_has_recv_child();
  inline void set_has_buy_card_reward_state();
  inline void clear_has_buy_card_reward_state();
  inline void set_has_card_reward_state();
  inline void clear_has_card_reward_state();
  inline void set_has_dst_card_reward_state();
  inline void clear_has_dst_card_reward_state();
  inline void set_has_card_surplus_day();
  inline void clear_has_card_surplus_day();
  inline void set_has_recv_self_box_days();
  inline void clear_has_recv_self_box_days();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_express_exp_sum();
  inline void clear_has_express_exp_sum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 marry_flag_;
  ::google::protobuf::int32 lock_lv_;
  ::google::protobuf::uint64 card_buy_time_;
  ::google::protobuf::int32 lock_exp_;
  ::google::protobuf::int32 child_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::MarryChild > childs_;
  ::google::protobuf::int32 express_lv_;
  ::google::protobuf::int32 express_exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gears_;
  ::google::protobuf::uint64 child_hatch_time_;
  ::google::protobuf::int32 buy_dup_num_;
  ::google::protobuf::int32 dst_give_dup_num_;
  ::google::protobuf::int32 enter_marry_dup_num_;
  ::google::protobuf::int32 marry_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > recved_gears_;
  ::google::protobuf::int32 cur_can_recv_gear_;
  ::google::protobuf::int32 recv_child_;
  ::google::protobuf::int32 buy_card_reward_state_;
  ::google::protobuf::int32 card_reward_state_;
  ::google::protobuf::int32 dst_card_reward_state_;
  ::google::protobuf::int32 card_surplus_day_;
  ::google::protobuf::int32 recv_self_box_days_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::int32 express_exp_sum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(24 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MarrySelfInfo* default_instance_;
};
// -------------------------------------------------------------------

class MarryWeddingInfo : public ::google::protobuf::Message {
 public:
  MarryWeddingInfo();
  virtual ~MarryWeddingInfo();

  MarryWeddingInfo(const MarryWeddingInfo& from);

  inline MarryWeddingInfo& operator=(const MarryWeddingInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryWeddingInfo& default_instance();

  void Swap(MarryWeddingInfo* other);

  // implements Message ----------------------------------------------

  MarryWeddingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryWeddingInfo& from);
  void MergeFrom(const MarryWeddingInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional uint64 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 start_time() const;
  inline void set_start_time(::google::protobuf::uint64 value);

  // optional uint64 end_time = 3;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // repeated .proto_ff.RolePlayerMiniInfo mini = 4;
  inline int mini_size() const;
  inline void clear_mini();
  static const int kMiniFieldNumber = 4;
  inline const ::proto_ff::RolePlayerMiniInfo& mini(int index) const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_mini(int index);
  inline ::proto_ff::RolePlayerMiniInfo* add_mini();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
      mini() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
      mutable_mini();

  // repeated uint64 invite_list = 5;
  inline int invite_list_size() const;
  inline void clear_invite_list();
  static const int kInviteListFieldNumber = 5;
  inline ::google::protobuf::uint64 invite_list(int index) const;
  inline void set_invite_list(int index, ::google::protobuf::uint64 value);
  inline void add_invite_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      invite_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_invite_list();

  // @@protoc_insertion_point(class_scope:proto_ff.MarryWeddingInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::uint64 end_time_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo > mini_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > invite_list_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MarryWeddingInfo* default_instance_;
};
// -------------------------------------------------------------------

class ExpressLog : public ::google::protobuf::Message {
 public:
  ExpressLog();
  virtual ~ExpressLog();

  ExpressLog(const ExpressLog& from);

  inline ExpressLog& operator=(const ExpressLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpressLog& default_instance();

  void Swap(ExpressLog* other);

  // implements Message ----------------------------------------------

  ExpressLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExpressLog& from);
  void MergeFrom(const ExpressLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes src_name = 1;
  inline bool has_src_name() const;
  inline void clear_src_name();
  static const int kSrcNameFieldNumber = 1;
  inline const ::std::string& src_name() const;
  inline void set_src_name(const ::std::string& value);
  inline void set_src_name(const char* value);
  inline void set_src_name(const void* value, size_t size);
  inline ::std::string* mutable_src_name();
  inline ::std::string* release_src_name();
  inline void set_allocated_src_name(::std::string* src_name);

  // optional uint64 src_id = 2;
  inline bool has_src_id() const;
  inline void clear_src_id();
  static const int kSrcIdFieldNumber = 2;
  inline ::google::protobuf::uint64 src_id() const;
  inline void set_src_id(::google::protobuf::uint64 value);

  // optional bytes dst_name = 3;
  inline bool has_dst_name() const;
  inline void clear_dst_name();
  static const int kDstNameFieldNumber = 3;
  inline const ::std::string& dst_name() const;
  inline void set_dst_name(const ::std::string& value);
  inline void set_dst_name(const char* value);
  inline void set_dst_name(const void* value, size_t size);
  inline ::std::string* mutable_dst_name();
  inline ::std::string* release_dst_name();
  inline void set_allocated_dst_name(::std::string* dst_name);

  // optional uint64 dst_id = 4;
  inline bool has_dst_id() const;
  inline void clear_dst_id();
  static const int kDstIdFieldNumber = 4;
  inline ::google::protobuf::uint64 dst_id() const;
  inline void set_dst_id(::google::protobuf::uint64 value);

  // optional int32 text_id = 5;
  inline bool has_text_id() const;
  inline void clear_text_id();
  static const int kTextIdFieldNumber = 5;
  inline ::google::protobuf::int32 text_id() const;
  inline void set_text_id(::google::protobuf::int32 value);

  // optional uint64 item = 6;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 6;
  inline ::google::protobuf::uint64 item() const;
  inline void set_item(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ExpressLog)
 private:
  inline void set_has_src_name();
  inline void clear_has_src_name();
  inline void set_has_src_id();
  inline void clear_has_src_id();
  inline void set_has_dst_name();
  inline void clear_has_dst_name();
  inline void set_has_dst_id();
  inline void clear_has_dst_id();
  inline void set_has_text_id();
  inline void clear_has_text_id();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* src_name_;
  ::google::protobuf::uint64 src_id_;
  ::std::string* dst_name_;
  ::google::protobuf::uint64 dst_id_;
  ::google::protobuf::uint64 item_;
  ::google::protobuf::int32 text_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ExpressLog* default_instance_;
};
// -------------------------------------------------------------------

class WeddingDBInfo : public ::google::protobuf::Message {
 public:
  WeddingDBInfo();
  virtual ~WeddingDBInfo();

  WeddingDBInfo(const WeddingDBInfo& from);

  inline WeddingDBInfo& operator=(const WeddingDBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingDBInfo& default_instance();

  void Swap(WeddingDBInfo* other);

  // implements Message ----------------------------------------------

  WeddingDBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingDBInfo& from);
  void MergeFrom(const WeddingDBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // optional int32 wedding_gear = 2;
  inline bool has_wedding_gear() const;
  inline void clear_wedding_gear();
  static const int kWeddingGearFieldNumber = 2;
  inline ::google::protobuf::int32 wedding_gear() const;
  inline void set_wedding_gear(::google::protobuf::int32 value);

  // optional uint64 src_cid = 3;
  inline bool has_src_cid() const;
  inline void clear_src_cid();
  static const int kSrcCidFieldNumber = 3;
  inline ::google::protobuf::uint64 src_cid() const;
  inline void set_src_cid(::google::protobuf::uint64 value);

  // optional uint64 dst_cid = 4;
  inline bool has_dst_cid() const;
  inline void clear_dst_cid();
  static const int kDstCidFieldNumber = 4;
  inline ::google::protobuf::uint64 dst_cid() const;
  inline void set_dst_cid(::google::protobuf::uint64 value);

  // optional int32 marry_id = 5;
  inline bool has_marry_id() const;
  inline void clear_marry_id();
  static const int kMarryIdFieldNumber = 5;
  inline ::google::protobuf::int32 marry_id() const;
  inline void set_marry_id(::google::protobuf::int32 value);

  // repeated int32 invite_list = 6;
  inline int invite_list_size() const;
  inline void clear_invite_list();
  static const int kInviteListFieldNumber = 6;
  inline ::google::protobuf::int32 invite_list(int index) const;
  inline void set_invite_list(int index, ::google::protobuf::int32 value);
  inline void add_invite_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      invite_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_invite_list();

  // repeated int32 apply_list = 7;
  inline int apply_list_size() const;
  inline void clear_apply_list();
  static const int kApplyListFieldNumber = 7;
  inline ::google::protobuf::int32 apply_list(int index) const;
  inline void set_apply_list(int index, ::google::protobuf::int32 value);
  inline void add_apply_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      apply_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_apply_list();

  // optional int32 add_num = 8;
  inline bool has_add_num() const;
  inline void clear_add_num();
  static const int kAddNumFieldNumber = 8;
  inline ::google::protobuf::int32 add_num() const;
  inline void set_add_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingDBInfo)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();
  inline void set_has_wedding_gear();
  inline void clear_has_wedding_gear();
  inline void set_has_src_cid();
  inline void clear_has_src_cid();
  inline void set_has_dst_cid();
  inline void clear_has_dst_cid();
  inline void set_has_marry_id();
  inline void clear_has_marry_id();
  inline void set_has_add_num();
  inline void clear_has_add_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wedding_id_;
  ::google::protobuf::int32 wedding_gear_;
  ::google::protobuf::uint64 src_cid_;
  ::google::protobuf::uint64 dst_cid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > invite_list_;
  ::google::protobuf::int32 marry_id_;
  ::google::protobuf::int32 add_num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > apply_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WeddingDBInfo* default_instance_;
};
// -------------------------------------------------------------------

class WeddingDBList : public ::google::protobuf::Message {
 public:
  WeddingDBList();
  virtual ~WeddingDBList();

  WeddingDBList(const WeddingDBList& from);

  inline WeddingDBList& operator=(const WeddingDBList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingDBList& default_instance();

  void Swap(WeddingDBList* other);

  // implements Message ----------------------------------------------

  WeddingDBList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingDBList& from);
  void MergeFrom(const WeddingDBList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.WeddingDBInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::WeddingDBInfo& infos(int index) const;
  inline ::proto_ff::WeddingDBInfo* mutable_infos(int index);
  inline ::proto_ff::WeddingDBInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingDBInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingDBInfo >*
      mutable_infos();

  // optional uint64 last_times = 2;
  inline bool has_last_times() const;
  inline void clear_last_times();
  static const int kLastTimesFieldNumber = 2;
  inline ::google::protobuf::uint64 last_times() const;
  inline void set_last_times(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingDBList)
 private:
  inline void set_has_last_times();
  inline void clear_has_last_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingDBInfo > infos_;
  ::google::protobuf::uint64 last_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WeddingDBList* default_instance_;
};
// -------------------------------------------------------------------

class WeddingSimpleInfo : public ::google::protobuf::Message {
 public:
  WeddingSimpleInfo();
  virtual ~WeddingSimpleInfo();

  WeddingSimpleInfo(const WeddingSimpleInfo& from);

  inline WeddingSimpleInfo& operator=(const WeddingSimpleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingSimpleInfo& default_instance();

  void Swap(WeddingSimpleInfo* other);

  // implements Message ----------------------------------------------

  WeddingSimpleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingSimpleInfo& from);
  void MergeFrom(const WeddingSimpleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // optional int32 wedding_gear = 2;
  inline bool has_wedding_gear() const;
  inline void clear_wedding_gear();
  static const int kWeddingGearFieldNumber = 2;
  inline ::google::protobuf::int32 wedding_gear() const;
  inline void set_wedding_gear(::google::protobuf::int32 value);

  // optional .proto_ff.RolePlayerMiniInfo src = 3;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 3;
  inline const ::proto_ff::RolePlayerMiniInfo& src() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_src();
  inline ::proto_ff::RolePlayerMiniInfo* release_src();
  inline void set_allocated_src(::proto_ff::RolePlayerMiniInfo* src);

  // optional .proto_ff.RolePlayerMiniInfo dst = 4;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 4;
  inline const ::proto_ff::RolePlayerMiniInfo& dst() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_dst();
  inline ::proto_ff::RolePlayerMiniInfo* release_dst();
  inline void set_allocated_dst(::proto_ff::RolePlayerMiniInfo* dst);

  // optional int32 marry_id = 5;
  inline bool has_marry_id() const;
  inline void clear_marry_id();
  static const int kMarryIdFieldNumber = 5;
  inline ::google::protobuf::int32 marry_id() const;
  inline void set_marry_id(::google::protobuf::int32 value);

  // optional uint64 apply_end_time = 6;
  inline bool has_apply_end_time() const;
  inline void clear_apply_end_time();
  static const int kApplyEndTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 apply_end_time() const;
  inline void set_apply_end_time(::google::protobuf::uint64 value);

  // optional uint64 tour_start_time = 7;
  inline bool has_tour_start_time() const;
  inline void clear_tour_start_time();
  static const int kTourStartTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 tour_start_time() const;
  inline void set_tour_start_time(::google::protobuf::uint64 value);

  // optional uint64 start_time = 8;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 start_time() const;
  inline void set_start_time(::google::protobuf::uint64 value);

  // optional uint64 end_time = 9;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 9;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // optional int32 step = 10;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 10;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingSimpleInfo)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();
  inline void set_has_wedding_gear();
  inline void clear_has_wedding_gear();
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_dst();
  inline void clear_has_dst();
  inline void set_has_marry_id();
  inline void clear_has_marry_id();
  inline void set_has_apply_end_time();
  inline void clear_has_apply_end_time();
  inline void set_has_tour_start_time();
  inline void clear_has_tour_start_time();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_step();
  inline void clear_has_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wedding_id_;
  ::google::protobuf::int32 wedding_gear_;
  ::proto_ff::RolePlayerMiniInfo* src_;
  ::proto_ff::RolePlayerMiniInfo* dst_;
  ::google::protobuf::uint64 apply_end_time_;
  ::google::protobuf::uint64 tour_start_time_;
  ::google::protobuf::int32 marry_id_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::uint64 end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WeddingSimpleInfo* default_instance_;
};
// -------------------------------------------------------------------

class WeddingDetail : public ::google::protobuf::Message {
 public:
  WeddingDetail();
  virtual ~WeddingDetail();

  WeddingDetail(const WeddingDetail& from);

  inline WeddingDetail& operator=(const WeddingDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingDetail& default_instance();

  void Swap(WeddingDetail* other);

  // implements Message ----------------------------------------------

  WeddingDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingDetail& from);
  void MergeFrom(const WeddingDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // optional int32 wedding_gear = 2;
  inline bool has_wedding_gear() const;
  inline void clear_wedding_gear();
  static const int kWeddingGearFieldNumber = 2;
  inline ::google::protobuf::int32 wedding_gear() const;
  inline void set_wedding_gear(::google::protobuf::int32 value);

  // repeated .proto_ff.RolePlayerMiniInfo invite_list = 3;
  inline int invite_list_size() const;
  inline void clear_invite_list();
  static const int kInviteListFieldNumber = 3;
  inline const ::proto_ff::RolePlayerMiniInfo& invite_list(int index) const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_invite_list(int index);
  inline ::proto_ff::RolePlayerMiniInfo* add_invite_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
      invite_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
      mutable_invite_list();

  // repeated .proto_ff.RolePlayerMiniInfo apply_list = 4;
  inline int apply_list_size() const;
  inline void clear_apply_list();
  static const int kApplyListFieldNumber = 4;
  inline const ::proto_ff::RolePlayerMiniInfo& apply_list(int index) const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_apply_list(int index);
  inline ::proto_ff::RolePlayerMiniInfo* add_apply_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
      apply_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
      mutable_apply_list();

  // optional int32 add_num = 5;
  inline bool has_add_num() const;
  inline void clear_add_num();
  static const int kAddNumFieldNumber = 5;
  inline ::google::protobuf::int32 add_num() const;
  inline void set_add_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingDetail)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();
  inline void set_has_wedding_gear();
  inline void clear_has_wedding_gear();
  inline void set_has_add_num();
  inline void clear_has_add_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wedding_id_;
  ::google::protobuf::int32 wedding_gear_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo > invite_list_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo > apply_list_;
  ::google::protobuf::int32 add_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WeddingDetail* default_instance_;
};
// -------------------------------------------------------------------

class WeddingDupRoleInfo : public ::google::protobuf::Message {
 public:
  WeddingDupRoleInfo();
  virtual ~WeddingDupRoleInfo();

  WeddingDupRoleInfo(const WeddingDupRoleInfo& from);

  inline WeddingDupRoleInfo& operator=(const WeddingDupRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingDupRoleInfo& default_instance();

  void Swap(WeddingDupRoleInfo* other);

  // implements Message ----------------------------------------------

  WeddingDupRoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingDupRoleInfo& from);
  void MergeFrom(const WeddingDupRoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sign_num = 1;
  inline bool has_sign_num() const;
  inline void clear_sign_num();
  static const int kSignNumFieldNumber = 1;
  inline ::google::protobuf::int32 sign_num() const;
  inline void set_sign_num(::google::protobuf::int32 value);

  // optional int32 cake_reward_num = 2;
  inline bool has_cake_reward_num() const;
  inline void clear_cake_reward_num();
  static const int kCakeRewardNumFieldNumber = 2;
  inline ::google::protobuf::int32 cake_reward_num() const;
  inline void set_cake_reward_num(::google::protobuf::int32 value);

  // optional int32 kill_monster_reward_num = 3;
  inline bool has_kill_monster_reward_num() const;
  inline void clear_kill_monster_reward_num();
  static const int kKillMonsterRewardNumFieldNumber = 3;
  inline ::google::protobuf::int32 kill_monster_reward_num() const;
  inline void set_kill_monster_reward_num(::google::protobuf::int32 value);

  // optional uint64 add_exp = 4;
  inline bool has_add_exp() const;
  inline void clear_add_exp();
  static const int kAddExpFieldNumber = 4;
  inline ::google::protobuf::uint64 add_exp() const;
  inline void set_add_exp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingDupRoleInfo)
 private:
  inline void set_has_sign_num();
  inline void clear_has_sign_num();
  inline void set_has_cake_reward_num();
  inline void clear_has_cake_reward_num();
  inline void set_has_kill_monster_reward_num();
  inline void clear_has_kill_monster_reward_num();
  inline void set_has_add_exp();
  inline void clear_has_add_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 sign_num_;
  ::google::protobuf::int32 cake_reward_num_;
  ::google::protobuf::uint64 add_exp_;
  ::google::protobuf::int32 kill_monster_reward_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WeddingDupRoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class GlobalExpressLog : public ::google::protobuf::Message {
 public:
  GlobalExpressLog();
  virtual ~GlobalExpressLog();

  GlobalExpressLog(const GlobalExpressLog& from);

  inline GlobalExpressLog& operator=(const GlobalExpressLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalExpressLog& default_instance();

  void Swap(GlobalExpressLog* other);

  // implements Message ----------------------------------------------

  GlobalExpressLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalExpressLog& from);
  void MergeFrom(const GlobalExpressLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ExpressLog logs = 1;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 1;
  inline const ::proto_ff::ExpressLog& logs(int index) const;
  inline ::proto_ff::ExpressLog* mutable_logs(int index);
  inline ::proto_ff::ExpressLog* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ExpressLog >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ExpressLog >*
      mutable_logs();

  // @@protoc_insertion_point(class_scope:proto_ff.GlobalExpressLog)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ExpressLog > logs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GlobalExpressLog* default_instance_;
};
// -------------------------------------------------------------------

class SceneProto : public ::google::protobuf::Message {
 public:
  SceneProto();
  virtual ~SceneProto();

  SceneProto(const SceneProto& from);

  inline SceneProto& operator=(const SceneProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneProto& default_instance();

  void Swap(SceneProto* other);

  // implements Message ----------------------------------------------

  SceneProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneProto& from);
  void MergeFrom(const SceneProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zid = 1;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 1;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint64 sceneid = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 2;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SceneProto)
 private:
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 mapid_;
  ::google::protobuf::uint32 zid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SceneProto* default_instance_;
};
// -------------------------------------------------------------------

class HandBookPBInfo : public ::google::protobuf::Message {
 public:
  HandBookPBInfo();
  virtual ~HandBookPBInfo();

  HandBookPBInfo(const HandBookPBInfo& from);

  inline HandBookPBInfo& operator=(const HandBookPBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandBookPBInfo& default_instance();

  void Swap(HandBookPBInfo* other);

  // implements Message ----------------------------------------------

  HandBookPBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandBookPBInfo& from);
  void MergeFrom(const HandBookPBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // repeated uint64 skills = 4;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 4;
  inline ::google::protobuf::uint64 skills(int index) const;
  inline void set_skills(int index, ::google::protobuf::uint64 value);
  inline void add_skills(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      skills() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:proto_ff.HandBookPBInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > skills_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static HandBookPBInfo* default_instance_;
};
// -------------------------------------------------------------------

class HandBookEmployPBInfo : public ::google::protobuf::Message {
 public:
  HandBookEmployPBInfo();
  virtual ~HandBookEmployPBInfo();

  HandBookEmployPBInfo(const HandBookEmployPBInfo& from);

  inline HandBookEmployPBInfo& operator=(const HandBookEmployPBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandBookEmployPBInfo& default_instance();

  void Swap(HandBookEmployPBInfo* other);

  // implements Message ----------------------------------------------

  HandBookEmployPBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandBookEmployPBInfo& from);
  void MergeFrom(const HandBookEmployPBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.HandBookEmployPBInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static HandBookEmployPBInfo* default_instance_;
};
// -------------------------------------------------------------------

class HandBookTablePBInfo : public ::google::protobuf::Message {
 public:
  HandBookTablePBInfo();
  virtual ~HandBookTablePBInfo();

  HandBookTablePBInfo(const HandBookTablePBInfo& from);

  inline HandBookTablePBInfo& operator=(const HandBookTablePBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandBookTablePBInfo& default_instance();

  void Swap(HandBookTablePBInfo* other);

  // implements Message ----------------------------------------------

  HandBookTablePBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandBookTablePBInfo& from);
  void MergeFrom(const HandBookTablePBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.HandBookTablePBInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static HandBookTablePBInfo* default_instance_;
};
// -------------------------------------------------------------------

class HandBookBeastEquipData : public ::google::protobuf::Message {
 public:
  HandBookBeastEquipData();
  virtual ~HandBookBeastEquipData();

  HandBookBeastEquipData(const HandBookBeastEquipData& from);

  inline HandBookBeastEquipData& operator=(const HandBookBeastEquipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandBookBeastEquipData& default_instance();

  void Swap(HandBookBeastEquipData* other);

  // implements Message ----------------------------------------------

  HandBookBeastEquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandBookBeastEquipData& from);
  void MergeFrom(const HandBookBeastEquipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.EquipInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::EquipInfo& infos(int index) const;
  inline ::proto_ff::EquipInfo* mutable_infos(int index);
  inline ::proto_ff::EquipInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >*
      mutable_infos();

  // repeated .proto_ff.EquipLvAttrInfo lv_attr = 2;
  inline int lv_attr_size() const;
  inline void clear_lv_attr();
  static const int kLvAttrFieldNumber = 2;
  inline const ::proto_ff::EquipLvAttrInfo& lv_attr(int index) const;
  inline ::proto_ff::EquipLvAttrInfo* mutable_lv_attr(int index);
  inline ::proto_ff::EquipLvAttrInfo* add_lv_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >&
      lv_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >*
      mutable_lv_attr();

  // @@protoc_insertion_point(class_scope:proto_ff.HandBookBeastEquipData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo > infos_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo > lv_attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static HandBookBeastEquipData* default_instance_;
};
// -------------------------------------------------------------------

class HandBookBeastPBData : public ::google::protobuf::Message {
 public:
  HandBookBeastPBData();
  virtual ~HandBookBeastPBData();

  HandBookBeastPBData(const HandBookBeastPBData& from);

  inline HandBookBeastPBData& operator=(const HandBookBeastPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandBookBeastPBData& default_instance();

  void Swap(HandBookBeastPBData* other);

  // implements Message ----------------------------------------------

  HandBookBeastPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandBookBeastPBData& from);
  void MergeFrom(const HandBookBeastPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional .proto_ff.HandBookBeastEquipData equip_data = 3;
  inline bool has_equip_data() const;
  inline void clear_equip_data();
  static const int kEquipDataFieldNumber = 3;
  inline const ::proto_ff::HandBookBeastEquipData& equip_data() const;
  inline ::proto_ff::HandBookBeastEquipData* mutable_equip_data();
  inline ::proto_ff::HandBookBeastEquipData* release_equip_data();
  inline void set_allocated_equip_data(::proto_ff::HandBookBeastEquipData* equip_data);

  // @@protoc_insertion_point(class_scope:proto_ff.HandBookBeastPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_equip_data();
  inline void clear_has_equip_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::proto_ff::HandBookBeastEquipData* equip_data_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static HandBookBeastPBData* default_instance_;
};
// -------------------------------------------------------------------

class HandBookBeastBattleSlotData : public ::google::protobuf::Message {
 public:
  HandBookBeastBattleSlotData();
  virtual ~HandBookBeastBattleSlotData();

  HandBookBeastBattleSlotData(const HandBookBeastBattleSlotData& from);

  inline HandBookBeastBattleSlotData& operator=(const HandBookBeastBattleSlotData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandBookBeastBattleSlotData& default_instance();

  void Swap(HandBookBeastBattleSlotData* other);

  // implements Message ----------------------------------------------

  HandBookBeastBattleSlotData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandBookBeastBattleSlotData& from);
  void MergeFrom(const HandBookBeastBattleSlotData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 cur_state = 2;
  inline bool has_cur_state() const;
  inline void clear_cur_state();
  static const int kCurStateFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_state() const;
  inline void set_cur_state(::google::protobuf::uint32 value);

  // optional int64 beast_id = 3;
  inline bool has_beast_id() const;
  inline void clear_beast_id();
  static const int kBeastIdFieldNumber = 3;
  inline ::google::protobuf::int64 beast_id() const;
  inline void set_beast_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.HandBookBeastBattleSlotData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cur_state();
  inline void clear_has_cur_state();
  inline void set_has_beast_id();
  inline void clear_has_beast_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cur_state_;
  ::google::protobuf::int64 beast_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static HandBookBeastBattleSlotData* default_instance_;
};
// -------------------------------------------------------------------

class HandBookPBData : public ::google::protobuf::Message {
 public:
  HandBookPBData();
  virtual ~HandBookPBData();

  HandBookPBData(const HandBookPBData& from);

  inline HandBookPBData& operator=(const HandBookPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandBookPBData& default_instance();

  void Swap(HandBookPBData* other);

  // implements Message ----------------------------------------------

  HandBookPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandBookPBData& from);
  void MergeFrom(const HandBookPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.HandBookPBInfo data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::HandBookPBInfo& data(int index) const;
  inline ::proto_ff::HandBookPBInfo* mutable_data(int index);
  inline ::proto_ff::HandBookPBInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookPBInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookPBInfo >*
      mutable_data();

  // repeated uint64 fetters = 2;
  inline int fetters_size() const;
  inline void clear_fetters();
  static const int kFettersFieldNumber = 2;
  inline ::google::protobuf::uint64 fetters(int index) const;
  inline void set_fetters(int index, ::google::protobuf::uint64 value);
  inline void add_fetters(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      fetters() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_fetters();

  // repeated .proto_ff.HandBookEmployPBInfo employs = 3;
  inline int employs_size() const;
  inline void clear_employs();
  static const int kEmploysFieldNumber = 3;
  inline const ::proto_ff::HandBookEmployPBInfo& employs(int index) const;
  inline ::proto_ff::HandBookEmployPBInfo* mutable_employs(int index);
  inline ::proto_ff::HandBookEmployPBInfo* add_employs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookEmployPBInfo >&
      employs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookEmployPBInfo >*
      mutable_employs();

  // repeated .proto_ff.HandBookTablePBInfo tables = 4;
  inline int tables_size() const;
  inline void clear_tables();
  static const int kTablesFieldNumber = 4;
  inline const ::proto_ff::HandBookTablePBInfo& tables(int index) const;
  inline ::proto_ff::HandBookTablePBInfo* mutable_tables(int index);
  inline ::proto_ff::HandBookTablePBInfo* add_tables();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookTablePBInfo >&
      tables() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookTablePBInfo >*
      mutable_tables();

  // repeated .proto_ff.HandBookBeastPBData beasts = 5;
  inline int beasts_size() const;
  inline void clear_beasts();
  static const int kBeastsFieldNumber = 5;
  inline const ::proto_ff::HandBookBeastPBData& beasts(int index) const;
  inline ::proto_ff::HandBookBeastPBData* mutable_beasts(int index);
  inline ::proto_ff::HandBookBeastPBData* add_beasts();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookBeastPBData >&
      beasts() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookBeastPBData >*
      mutable_beasts();

  // repeated .proto_ff.HandBookBeastBattleSlotData slots = 6;
  inline int slots_size() const;
  inline void clear_slots();
  static const int kSlotsFieldNumber = 6;
  inline const ::proto_ff::HandBookBeastBattleSlotData& slots(int index) const;
  inline ::proto_ff::HandBookBeastBattleSlotData* mutable_slots(int index);
  inline ::proto_ff::HandBookBeastBattleSlotData* add_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookBeastBattleSlotData >&
      slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookBeastBattleSlotData >*
      mutable_slots();

  // optional uint64 beast_priv_id = 7;
  inline bool has_beast_priv_id() const;
  inline void clear_beast_priv_id();
  static const int kBeastPrivIdFieldNumber = 7;
  inline ::google::protobuf::uint64 beast_priv_id() const;
  inline void set_beast_priv_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.HandBookPBData)
 private:
  inline void set_has_beast_priv_id();
  inline void clear_has_beast_priv_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookPBInfo > data_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > fetters_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookEmployPBInfo > employs_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookTablePBInfo > tables_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookBeastPBData > beasts_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookBeastBattleSlotData > slots_;
  ::google::protobuf::uint64 beast_priv_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static HandBookPBData* default_instance_;
};
// -------------------------------------------------------------------

class RankNodeDBData : public ::google::protobuf::Message {
 public:
  RankNodeDBData();
  virtual ~RankNodeDBData();

  RankNodeDBData(const RankNodeDBData& from);

  inline RankNodeDBData& operator=(const RankNodeDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankNodeDBData& default_instance();

  void Swap(RankNodeDBData* other);

  // implements Message ----------------------------------------------

  RankNodeDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankNodeDBData& from);
  void MergeFrom(const RankNodeDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required uint64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // repeated int64 paramInt = 3;
  inline int paramint_size() const;
  inline void clear_paramint();
  static const int kParamIntFieldNumber = 3;
  inline ::google::protobuf::int64 paramint(int index) const;
  inline void set_paramint(int index, ::google::protobuf::int64 value);
  inline void add_paramint(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      paramint() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_paramint();

  // repeated string paramStr = 4;
  inline int paramstr_size() const;
  inline void clear_paramstr();
  static const int kParamStrFieldNumber = 4;
  inline const ::std::string& paramstr(int index) const;
  inline ::std::string* mutable_paramstr(int index);
  inline void set_paramstr(int index, const ::std::string& value);
  inline void set_paramstr(int index, const char* value);
  inline void set_paramstr(int index, const char* value, size_t size);
  inline ::std::string* add_paramstr();
  inline void add_paramstr(const ::std::string& value);
  inline void add_paramstr(const char* value);
  inline void add_paramstr(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& paramstr() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_paramstr();

  // @@protoc_insertion_point(class_scope:proto_ff.RankNodeDBData)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > paramint_;
  ::google::protobuf::RepeatedPtrField< ::std::string> paramstr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RankNodeDBData* default_instance_;
};
// -------------------------------------------------------------------

class RankTypeDBData : public ::google::protobuf::Message {
 public:
  RankTypeDBData();
  virtual ~RankTypeDBData();

  RankTypeDBData(const RankTypeDBData& from);

  inline RankTypeDBData& operator=(const RankTypeDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankTypeDBData& default_instance();

  void Swap(RankTypeDBData* other);

  // implements Message ----------------------------------------------

  RankTypeDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankTypeDBData& from);
  void MergeFrom(const RankTypeDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ranktype() const;
  inline void set_ranktype(::google::protobuf::int32 value);

  // repeated .proto_ff.RankNodeDBData nodeList = 2;
  inline int nodelist_size() const;
  inline void clear_nodelist();
  static const int kNodeListFieldNumber = 2;
  inline const ::proto_ff::RankNodeDBData& nodelist(int index) const;
  inline ::proto_ff::RankNodeDBData* mutable_nodelist(int index);
  inline ::proto_ff::RankNodeDBData* add_nodelist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RankNodeDBData >&
      nodelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RankNodeDBData >*
      mutable_nodelist();

  // optional int64 lastTime = 3;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 3;
  inline ::google::protobuf::int64 lasttime() const;
  inline void set_lasttime(::google::protobuf::int64 value);

  // optional int64 lastKillTopCid = 4;
  inline bool has_lastkilltopcid() const;
  inline void clear_lastkilltopcid();
  static const int kLastKillTopCidFieldNumber = 4;
  inline ::google::protobuf::int64 lastkilltopcid() const;
  inline void set_lastkilltopcid(::google::protobuf::int64 value);

  // optional int64 newKillTopCid = 5;
  inline bool has_newkilltopcid() const;
  inline void clear_newkilltopcid();
  static const int kNewKillTopCidFieldNumber = 5;
  inline ::google::protobuf::int64 newkilltopcid() const;
  inline void set_newkilltopcid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RankTypeDBData)
 private:
  inline void set_has_ranktype();
  inline void clear_has_ranktype();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_lastkilltopcid();
  inline void clear_has_lastkilltopcid();
  inline void set_has_newkilltopcid();
  inline void clear_has_newkilltopcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::RankNodeDBData > nodelist_;
  ::google::protobuf::int64 lasttime_;
  ::google::protobuf::int64 lastkilltopcid_;
  ::google::protobuf::int64 newkilltopcid_;
  ::google::protobuf::int32 ranktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RankTypeDBData* default_instance_;
};
// -------------------------------------------------------------------

class RankNodeData : public ::google::protobuf::Message {
 public:
  RankNodeData();
  virtual ~RankNodeData();

  RankNodeData(const RankNodeData& from);

  inline RankNodeData& operator=(const RankNodeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankNodeData& default_instance();

  void Swap(RankNodeData* other);

  // implements Message ----------------------------------------------

  RankNodeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankNodeData& from);
  void MergeFrom(const RankNodeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 vipLevel = 2;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // repeated string sParam = 3;
  inline int sparam_size() const;
  inline void clear_sparam();
  static const int kSParamFieldNumber = 3;
  inline const ::std::string& sparam(int index) const;
  inline ::std::string* mutable_sparam(int index);
  inline void set_sparam(int index, const ::std::string& value);
  inline void set_sparam(int index, const char* value);
  inline void set_sparam(int index, const char* value, size_t size);
  inline ::std::string* add_sparam();
  inline void add_sparam(const ::std::string& value);
  inline void add_sparam(const char* value);
  inline void add_sparam(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& sparam() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_sparam();

  // optional bool online = 4;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 4;
  inline bool online() const;
  inline void set_online(bool value);

  // optional uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional bytes name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .proto_ff.RoleFacadeProto facade = 7;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 7;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // @@protoc_insertion_point(class_scope:proto_ff.RankNodeData)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_facade();
  inline void clear_has_facade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> sparam_;
  ::google::protobuf::uint32 viplevel_;
  bool online_;
  ::google::protobuf::uint64 fight_;
  ::std::string* name_;
  ::proto_ff::RoleFacadeProto* facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RankNodeData* default_instance_;
};
// -------------------------------------------------------------------

class RankDataInfo : public ::google::protobuf::Message {
 public:
  RankDataInfo();
  virtual ~RankDataInfo();

  RankDataInfo(const RankDataInfo& from);

  inline RankDataInfo& operator=(const RankDataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankDataInfo& default_instance();

  void Swap(RankDataInfo* other);

  // implements Message ----------------------------------------------

  RankDataInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankDataInfo& from);
  void MergeFrom(const RankDataInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);

  // required uint32 selfRank = 2;
  inline bool has_selfrank() const;
  inline void clear_selfrank();
  static const int kSelfRankFieldNumber = 2;
  inline ::google::protobuf::uint32 selfrank() const;
  inline void set_selfrank(::google::protobuf::uint32 value);

  // required .proto_ff.RankNodeData selfData = 3;
  inline bool has_selfdata() const;
  inline void clear_selfdata();
  static const int kSelfDataFieldNumber = 3;
  inline const ::proto_ff::RankNodeData& selfdata() const;
  inline ::proto_ff::RankNodeData* mutable_selfdata();
  inline ::proto_ff::RankNodeData* release_selfdata();
  inline void set_allocated_selfdata(::proto_ff::RankNodeData* selfdata);

  // repeated .proto_ff.RankNodeData rankList = 4;
  inline int ranklist_size() const;
  inline void clear_ranklist();
  static const int kRankListFieldNumber = 4;
  inline const ::proto_ff::RankNodeData& ranklist(int index) const;
  inline ::proto_ff::RankNodeData* mutable_ranklist(int index);
  inline ::proto_ff::RankNodeData* add_ranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RankNodeData >&
      ranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RankNodeData >*
      mutable_ranklist();

  // @@protoc_insertion_point(class_scope:proto_ff.RankDataInfo)
 private:
  inline void set_has_ranktype();
  inline void clear_has_ranktype();
  inline void set_has_selfrank();
  inline void clear_has_selfrank();
  inline void set_has_selfdata();
  inline void clear_has_selfdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ranktype_;
  ::google::protobuf::uint32 selfrank_;
  ::proto_ff::RankNodeData* selfdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RankNodeData > ranklist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RankDataInfo* default_instance_;
};
// -------------------------------------------------------------------

class MergeReq : public ::google::protobuf::Message {
 public:
  MergeReq();
  virtual ~MergeReq();

  MergeReq(const MergeReq& from);

  inline MergeReq& operator=(const MergeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MergeReq& default_instance();

  void Swap(MergeReq* other);

  // implements Message ----------------------------------------------

  MergeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MergeReq& from);
  void MergeFrom(const MergeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated int32 index_list = 3;
  inline int index_list_size() const;
  inline void clear_index_list();
  static const int kIndexListFieldNumber = 3;
  inline ::google::protobuf::int32 index_list(int index) const;
  inline void set_index_list(int index, ::google::protobuf::int32 value);
  inline void add_index_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      index_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_index_list();

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 target_pos = 5;
  inline bool has_target_pos() const;
  inline void clear_target_pos();
  static const int kTargetPosFieldNumber = 5;
  inline ::google::protobuf::int32 target_pos() const;
  inline void set_target_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MergeReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_target_pos();
  inline void clear_has_target_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > index_list_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 target_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MergeReq* default_instance_;
};
// -------------------------------------------------------------------

class MergeRsp : public ::google::protobuf::Message {
 public:
  MergeRsp();
  virtual ~MergeRsp();

  MergeRsp(const MergeRsp& from);

  inline MergeRsp& operator=(const MergeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MergeRsp& default_instance();

  void Swap(MergeRsp* other);

  // implements Message ----------------------------------------------

  MergeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MergeRsp& from);
  void MergeFrom(const MergeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 itemId = 4;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 4;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // optional int32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 result = 6;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 6;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MergeRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MergeRsp* default_instance_;
};
// -------------------------------------------------------------------

class PSDGoods : public ::google::protobuf::Message {
 public:
  PSDGoods();
  virtual ~PSDGoods();

  PSDGoods(const PSDGoods& from);

  inline PSDGoods& operator=(const PSDGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PSDGoods& default_instance();

  void Swap(PSDGoods* other);

  // implements Message ----------------------------------------------

  PSDGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PSDGoods& from);
  void MergeFrom(const PSDGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::uint32 amount() const;
  inline void set_amount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PSDGoods)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 amount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PSDGoods* default_instance_;
};
// -------------------------------------------------------------------

class PSDPurchaseRecord : public ::google::protobuf::Message {
 public:
  PSDPurchaseRecord();
  virtual ~PSDPurchaseRecord();

  PSDPurchaseRecord(const PSDPurchaseRecord& from);

  inline PSDPurchaseRecord& operator=(const PSDPurchaseRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PSDPurchaseRecord& default_instance();

  void Swap(PSDPurchaseRecord* other);

  // implements Message ----------------------------------------------

  PSDPurchaseRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PSDPurchaseRecord& from);
  void MergeFrom(const PSDPurchaseRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 goodsId = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // required uint64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PSDPurchaseRecord)
 private:
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint32 goodsid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PSDPurchaseRecord* default_instance_;
};
// -------------------------------------------------------------------

class PSDShop : public ::google::protobuf::Message {
 public:
  PSDShop();
  virtual ~PSDShop();

  PSDShop(const PSDShop& from);

  inline PSDShop& operator=(const PSDShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PSDShop& default_instance();

  void Swap(PSDShop* other);

  // implements Message ----------------------------------------------

  PSDShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PSDShop& from);
  void MergeFrom(const PSDShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 shopId = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // required uint32 freeRefreshCount = 2;
  inline bool has_freerefreshcount() const;
  inline void clear_freerefreshcount();
  static const int kFreeRefreshCountFieldNumber = 2;
  inline ::google::protobuf::uint32 freerefreshcount() const;
  inline void set_freerefreshcount(::google::protobuf::uint32 value);

  // required uint64 openTime = 3;
  inline bool has_opentime() const;
  inline void clear_opentime();
  static const int kOpenTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 opentime() const;
  inline void set_opentime(::google::protobuf::uint64 value);

  // repeated .proto_ff.PSDGoods saleList = 4;
  inline int salelist_size() const;
  inline void clear_salelist();
  static const int kSaleListFieldNumber = 4;
  inline const ::proto_ff::PSDGoods& salelist(int index) const;
  inline ::proto_ff::PSDGoods* mutable_salelist(int index);
  inline ::proto_ff::PSDGoods* add_salelist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDGoods >&
      salelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDGoods >*
      mutable_salelist();

  // repeated .proto_ff.PSDPurchaseRecord purchasedList = 5;
  inline int purchasedlist_size() const;
  inline void clear_purchasedlist();
  static const int kPurchasedListFieldNumber = 5;
  inline const ::proto_ff::PSDPurchaseRecord& purchasedlist(int index) const;
  inline ::proto_ff::PSDPurchaseRecord* mutable_purchasedlist(int index);
  inline ::proto_ff::PSDPurchaseRecord* add_purchasedlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDPurchaseRecord >&
      purchasedlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDPurchaseRecord >*
      mutable_purchasedlist();

  // @@protoc_insertion_point(class_scope:proto_ff.PSDShop)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_freerefreshcount();
  inline void clear_has_freerefreshcount();
  inline void set_has_opentime();
  inline void clear_has_opentime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 freerefreshcount_;
  ::google::protobuf::uint64 opentime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDGoods > salelist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDPurchaseRecord > purchasedlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PSDShop* default_instance_;
};
// -------------------------------------------------------------------

class PSDatas : public ::google::protobuf::Message {
 public:
  PSDatas();
  virtual ~PSDatas();

  PSDatas(const PSDatas& from);

  inline PSDatas& operator=(const PSDatas& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PSDatas& default_instance();

  void Swap(PSDatas* other);

  // implements Message ----------------------------------------------

  PSDatas* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PSDatas& from);
  void MergeFrom(const PSDatas& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.PSDShop shopList = 1;
  inline int shoplist_size() const;
  inline void clear_shoplist();
  static const int kShopListFieldNumber = 1;
  inline const ::proto_ff::PSDShop& shoplist(int index) const;
  inline ::proto_ff::PSDShop* mutable_shoplist(int index);
  inline ::proto_ff::PSDShop* add_shoplist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDShop >&
      shoplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDShop >*
      mutable_shoplist();

  // @@protoc_insertion_point(class_scope:proto_ff.PSDatas)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDShop > shoplist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PSDatas* default_instance_;
};
// -------------------------------------------------------------------

class DragonSoulHoleData : public ::google::protobuf::Message {
 public:
  DragonSoulHoleData();
  virtual ~DragonSoulHoleData();

  DragonSoulHoleData(const DragonSoulHoleData& from);

  inline DragonSoulHoleData& operator=(const DragonSoulHoleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DragonSoulHoleData& default_instance();

  void Swap(DragonSoulHoleData* other);

  // implements Message ----------------------------------------------

  DragonSoulHoleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DragonSoulHoleData& from);
  void MergeFrom(const DragonSoulHoleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.EquipInfo equip_info = 1;
  inline bool has_equip_info() const;
  inline void clear_equip_info();
  static const int kEquipInfoFieldNumber = 1;
  inline const ::proto_ff::EquipInfo& equip_info() const;
  inline ::proto_ff::EquipInfo* mutable_equip_info();
  inline ::proto_ff::EquipInfo* release_equip_info();
  inline void set_allocated_equip_info(::proto_ff::EquipInfo* equip_info);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 wake_lv = 4;
  inline bool has_wake_lv() const;
  inline void clear_wake_lv();
  static const int kWakeLvFieldNumber = 4;
  inline ::google::protobuf::int32 wake_lv() const;
  inline void set_wake_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DragonSoulHoleData)
 private:
  inline void set_has_equip_info();
  inline void clear_has_equip_info();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_wake_lv();
  inline void clear_has_wake_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::EquipInfo* equip_info_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 wake_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DragonSoulHoleData* default_instance_;
};
// -------------------------------------------------------------------

class DragonSoulStar : public ::google::protobuf::Message {
 public:
  DragonSoulStar();
  virtual ~DragonSoulStar();

  DragonSoulStar(const DragonSoulStar& from);

  inline DragonSoulStar& operator=(const DragonSoulStar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DragonSoulStar& default_instance();

  void Swap(DragonSoulStar* other);

  // implements Message ----------------------------------------------

  DragonSoulStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DragonSoulStar& from);
  void MergeFrom(const DragonSoulStar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DragonSoulStar)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DragonSoulStar* default_instance_;
};
// -------------------------------------------------------------------

class DragonSoulData : public ::google::protobuf::Message {
 public:
  DragonSoulData();
  virtual ~DragonSoulData();

  DragonSoulData(const DragonSoulData& from);

  inline DragonSoulData& operator=(const DragonSoulData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DragonSoulData& default_instance();

  void Swap(DragonSoulData* other);

  // implements Message ----------------------------------------------

  DragonSoulData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DragonSoulData& from);
  void MergeFrom(const DragonSoulData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DragonSoulHoleData hole_data = 1;
  inline int hole_data_size() const;
  inline void clear_hole_data();
  static const int kHoleDataFieldNumber = 1;
  inline const ::proto_ff::DragonSoulHoleData& hole_data(int index) const;
  inline ::proto_ff::DragonSoulHoleData* mutable_hole_data(int index);
  inline ::proto_ff::DragonSoulHoleData* add_hole_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DragonSoulHoleData >&
      hole_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DragonSoulHoleData >*
      mutable_hole_data();

  // repeated .proto_ff.DragonSoulStar star = 2;
  inline int star_size() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline const ::proto_ff::DragonSoulStar& star(int index) const;
  inline ::proto_ff::DragonSoulStar* mutable_star(int index);
  inline ::proto_ff::DragonSoulStar* add_star();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DragonSoulStar >&
      star() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DragonSoulStar >*
      mutable_star();

  // @@protoc_insertion_point(class_scope:proto_ff.DragonSoulData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DragonSoulHoleData > hole_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DragonSoulStar > star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DragonSoulData* default_instance_;
};
// -------------------------------------------------------------------

class EnterQyActReq : public ::google::protobuf::Message {
 public:
  EnterQyActReq();
  virtual ~EnterQyActReq();

  EnterQyActReq(const EnterQyActReq& from);

  inline EnterQyActReq& operator=(const EnterQyActReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterQyActReq& default_instance();

  void Swap(EnterQyActReq* other);

  // implements Message ----------------------------------------------

  EnterQyActReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterQyActReq& from);
  void MergeFrom(const EnterQyActReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.EnterQyActReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EnterQyActReq* default_instance_;
};
// -------------------------------------------------------------------

class EnterQyActRsp : public ::google::protobuf::Message {
 public:
  EnterQyActRsp();
  virtual ~EnterQyActRsp();

  EnterQyActRsp(const EnterQyActRsp& from);

  inline EnterQyActRsp& operator=(const EnterQyActRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterQyActRsp& default_instance();

  void Swap(EnterQyActRsp* other);

  // implements Message ----------------------------------------------

  EnterQyActRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterQyActRsp& from);
  void MergeFrom(const EnterQyActRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterQyActRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EnterQyActRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyQyActDupData : public ::google::protobuf::Message {
 public:
  NotifyQyActDupData();
  virtual ~NotifyQyActDupData();

  NotifyQyActDupData(const NotifyQyActDupData& from);

  inline NotifyQyActDupData& operator=(const NotifyQyActDupData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyQyActDupData& default_instance();

  void Swap(NotifyQyActDupData* other);

  // implements Message ----------------------------------------------

  NotifyQyActDupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyQyActDupData& from);
  void MergeFrom(const NotifyQyActDupData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 layer = 1;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyQyActDupData)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyQyActDupData* default_instance_;
};
// -------------------------------------------------------------------

class QyRankInfo : public ::google::protobuf::Message {
 public:
  QyRankInfo();
  virtual ~QyRankInfo();

  QyRankInfo(const QyRankInfo& from);

  inline QyRankInfo& operator=(const QyRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QyRankInfo& default_instance();

  void Swap(QyRankInfo* other);

  // implements Message ----------------------------------------------

  QyRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QyRankInfo& from);
  void MergeFrom(const QyRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 layer = 3;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 3;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // optional int32 zid = 4;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 4;
  inline ::google::protobuf::int32 zid() const;
  inline void set_zid(::google::protobuf::int32 value);

  // optional int32 rank = 5;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 5;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional int32 passtime = 6;
  inline bool has_passtime() const;
  inline void clear_passtime();
  static const int kPasstimeFieldNumber = 6;
  inline ::google::protobuf::int32 passtime() const;
  inline void set_passtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.QyRankInfo)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_passtime();
  inline void clear_has_passtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 zid_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 passtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static QyRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyQyPassLayer : public ::google::protobuf::Message {
 public:
  NotifyQyPassLayer();
  virtual ~NotifyQyPassLayer();

  NotifyQyPassLayer(const NotifyQyPassLayer& from);

  inline NotifyQyPassLayer& operator=(const NotifyQyPassLayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyQyPassLayer& default_instance();

  void Swap(NotifyQyPassLayer* other);

  // implements Message ----------------------------------------------

  NotifyQyPassLayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyQyPassLayer& from);
  void MergeFrom(const NotifyQyPassLayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 layer = 1;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyQyPassLayer)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 layer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyQyPassLayer* default_instance_;
};
// -------------------------------------------------------------------

class NotifyQyActRank : public ::google::protobuf::Message {
 public:
  NotifyQyActRank();
  virtual ~NotifyQyActRank();

  NotifyQyActRank(const NotifyQyActRank& from);

  inline NotifyQyActRank& operator=(const NotifyQyActRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyQyActRank& default_instance();

  void Swap(NotifyQyActRank* other);

  // implements Message ----------------------------------------------

  NotifyQyActRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyQyActRank& from);
  void MergeFrom(const NotifyQyActRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.QyRankInfo rank = 1;
  inline int rank_size() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline const ::proto_ff::QyRankInfo& rank(int index) const;
  inline ::proto_ff::QyRankInfo* mutable_rank(int index);
  inline ::proto_ff::QyRankInfo* add_rank();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::QyRankInfo >&
      rank() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::QyRankInfo >*
      mutable_rank();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyQyActRank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::QyRankInfo > rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyQyActRank* default_instance_;
};
// -------------------------------------------------------------------

class L2CEnterActReq : public ::google::protobuf::Message {
 public:
  L2CEnterActReq();
  virtual ~L2CEnterActReq();

  L2CEnterActReq(const L2CEnterActReq& from);

  inline L2CEnterActReq& operator=(const L2CEnterActReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CEnterActReq& default_instance();

  void Swap(L2CEnterActReq* other);

  // implements Message ----------------------------------------------

  L2CEnterActReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CEnterActReq& from);
  void MergeFrom(const L2CEnterActReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 zid = 2;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 2;
  inline ::google::protobuf::int32 zid() const;
  inline void set_zid(::google::protobuf::int32 value);

  // optional int32 acttype = 3;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActtypeFieldNumber = 3;
  inline ::google::protobuf::int32 acttype() const;
  inline void set_acttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CEnterActReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_acttype();
  inline void clear_has_acttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 zid_;
  ::google::protobuf::int32 acttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static L2CEnterActReq* default_instance_;
};
// -------------------------------------------------------------------

class C2LEnterActReq : public ::google::protobuf::Message {
 public:
  C2LEnterActReq();
  virtual ~C2LEnterActReq();

  C2LEnterActReq(const C2LEnterActReq& from);

  inline C2LEnterActReq& operator=(const C2LEnterActReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LEnterActReq& default_instance();

  void Swap(C2LEnterActReq* other);

  // implements Message ----------------------------------------------

  C2LEnterActReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LEnterActReq& from);
  void MergeFrom(const C2LEnterActReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 zid = 2;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 2;
  inline ::google::protobuf::int32 zid() const;
  inline void set_zid(::google::protobuf::int32 value);

  // optional int32 acttype = 3;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActtypeFieldNumber = 3;
  inline ::google::protobuf::int32 acttype() const;
  inline void set_acttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LEnterActReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_acttype();
  inline void clear_has_acttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 zid_;
  ::google::protobuf::int32 acttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static C2LEnterActReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CEnterActRsp : public ::google::protobuf::Message {
 public:
  L2CEnterActRsp();
  virtual ~L2CEnterActRsp();

  L2CEnterActRsp(const L2CEnterActRsp& from);

  inline L2CEnterActRsp& operator=(const L2CEnterActRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CEnterActRsp& default_instance();

  void Swap(L2CEnterActRsp* other);

  // implements Message ----------------------------------------------

  L2CEnterActRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CEnterActRsp& from);
  void MergeFrom(const L2CEnterActRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 zid = 3;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 3;
  inline ::google::protobuf::int32 zid() const;
  inline void set_zid(::google::protobuf::int32 value);

  // optional int32 acttype = 4;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActtypeFieldNumber = 4;
  inline ::google::protobuf::int32 acttype() const;
  inline void set_acttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CEnterActRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_acttype();
  inline void clear_has_acttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 zid_;
  ::google::protobuf::int32 acttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static L2CEnterActRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyEnterActRsp : public ::google::protobuf::Message {
 public:
  NotifyEnterActRsp();
  virtual ~NotifyEnterActRsp();

  NotifyEnterActRsp(const NotifyEnterActRsp& from);

  inline NotifyEnterActRsp& operator=(const NotifyEnterActRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyEnterActRsp& default_instance();

  void Swap(NotifyEnterActRsp* other);

  // implements Message ----------------------------------------------

  NotifyEnterActRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyEnterActRsp& from);
  void MergeFrom(const NotifyEnterActRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 zid = 3;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 3;
  inline ::google::protobuf::uint64 zid() const;
  inline void set_zid(::google::protobuf::uint64 value);

  // optional int32 acttype = 4;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActtypeFieldNumber = 4;
  inline ::google::protobuf::int32 acttype() const;
  inline void set_acttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyEnterActRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_acttype();
  inline void clear_has_acttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 acttype_;
  ::google::protobuf::uint64 zid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyEnterActRsp* default_instance_;
};
// -------------------------------------------------------------------

class WelfareSignPBData : public ::google::protobuf::Message {
 public:
  WelfareSignPBData();
  virtual ~WelfareSignPBData();

  WelfareSignPBData(const WelfareSignPBData& from);

  inline WelfareSignPBData& operator=(const WelfareSignPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareSignPBData& default_instance();

  void Swap(WelfareSignPBData* other);

  // implements Message ----------------------------------------------

  WelfareSignPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareSignPBData& from);
  void MergeFrom(const WelfareSignPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareSignPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WelfareSignPBData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareAccrueRewardPBData : public ::google::protobuf::Message {
 public:
  WelfareAccrueRewardPBData();
  virtual ~WelfareAccrueRewardPBData();

  WelfareAccrueRewardPBData(const WelfareAccrueRewardPBData& from);

  inline WelfareAccrueRewardPBData& operator=(const WelfareAccrueRewardPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareAccrueRewardPBData& default_instance();

  void Swap(WelfareAccrueRewardPBData* other);

  // implements Message ----------------------------------------------

  WelfareAccrueRewardPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareAccrueRewardPBData& from);
  void MergeFrom(const WelfareAccrueRewardPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareAccrueRewardPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WelfareAccrueRewardPBData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareLvRewardPBData : public ::google::protobuf::Message {
 public:
  WelfareLvRewardPBData();
  virtual ~WelfareLvRewardPBData();

  WelfareLvRewardPBData(const WelfareLvRewardPBData& from);

  inline WelfareLvRewardPBData& operator=(const WelfareLvRewardPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareLvRewardPBData& default_instance();

  void Swap(WelfareLvRewardPBData* other);

  // implements Message ----------------------------------------------

  WelfareLvRewardPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareLvRewardPBData& from);
  void MergeFrom(const WelfareLvRewardPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 vip_status = 3;
  inline bool has_vip_status() const;
  inline void clear_vip_status();
  static const int kVipStatusFieldNumber = 3;
  inline ::google::protobuf::int32 vip_status() const;
  inline void set_vip_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareLvRewardPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_vip_status();
  inline void clear_has_vip_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 vip_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WelfareLvRewardPBData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareOnlineRewardPBData : public ::google::protobuf::Message {
 public:
  WelfareOnlineRewardPBData();
  virtual ~WelfareOnlineRewardPBData();

  WelfareOnlineRewardPBData(const WelfareOnlineRewardPBData& from);

  inline WelfareOnlineRewardPBData& operator=(const WelfareOnlineRewardPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareOnlineRewardPBData& default_instance();

  void Swap(WelfareOnlineRewardPBData* other);

  // implements Message ----------------------------------------------

  WelfareOnlineRewardPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareOnlineRewardPBData& from);
  void MergeFrom(const WelfareOnlineRewardPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareOnlineRewardPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WelfareOnlineRewardPBData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareFraudRewardPBData : public ::google::protobuf::Message {
 public:
  WelfareFraudRewardPBData();
  virtual ~WelfareFraudRewardPBData();

  WelfareFraudRewardPBData(const WelfareFraudRewardPBData& from);

  inline WelfareFraudRewardPBData& operator=(const WelfareFraudRewardPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareFraudRewardPBData& default_instance();

  void Swap(WelfareFraudRewardPBData* other);

  // implements Message ----------------------------------------------

  WelfareFraudRewardPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareFraudRewardPBData& from);
  void MergeFrom(const WelfareFraudRewardPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated int32 id = 2;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::int32 value);
  inline void add_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareFraudRewardPBData)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WelfareFraudRewardPBData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareNotifyRewardPBData : public ::google::protobuf::Message {
 public:
  WelfareNotifyRewardPBData();
  virtual ~WelfareNotifyRewardPBData();

  WelfareNotifyRewardPBData(const WelfareNotifyRewardPBData& from);

  inline WelfareNotifyRewardPBData& operator=(const WelfareNotifyRewardPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareNotifyRewardPBData& default_instance();

  void Swap(WelfareNotifyRewardPBData* other);

  // implements Message ----------------------------------------------

  WelfareNotifyRewardPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareNotifyRewardPBData& from);
  void MergeFrom(const WelfareNotifyRewardPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 version_id = 2;
  inline bool has_version_id() const;
  inline void clear_version_id();
  static const int kVersionIdFieldNumber = 2;
  inline ::google::protobuf::int32 version_id() const;
  inline void set_version_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareNotifyRewardPBData)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_version_id();
  inline void clear_has_version_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 version_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WelfareNotifyRewardPBData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareWeekEndRewardPBData : public ::google::protobuf::Message {
 public:
  WelfareWeekEndRewardPBData();
  virtual ~WelfareWeekEndRewardPBData();

  WelfareWeekEndRewardPBData(const WelfareWeekEndRewardPBData& from);

  inline WelfareWeekEndRewardPBData& operator=(const WelfareWeekEndRewardPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareWeekEndRewardPBData& default_instance();

  void Swap(WelfareWeekEndRewardPBData* other);

  // implements Message ----------------------------------------------

  WelfareWeekEndRewardPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareWeekEndRewardPBData& from);
  void MergeFrom(const WelfareWeekEndRewardPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareWeekEndRewardPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WelfareWeekEndRewardPBData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareQiFuData : public ::google::protobuf::Message {
 public:
  WelfareQiFuData();
  virtual ~WelfareQiFuData();

  WelfareQiFuData(const WelfareQiFuData& from);

  inline WelfareQiFuData& operator=(const WelfareQiFuData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareQiFuData& default_instance();

  void Swap(WelfareQiFuData* other);

  // implements Message ----------------------------------------------

  WelfareQiFuData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareQiFuData& from);
  void MergeFrom(const WelfareQiFuData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 last_free_qifu_time = 1;
  inline bool has_last_free_qifu_time() const;
  inline void clear_last_free_qifu_time();
  static const int kLastFreeQifuTimeFieldNumber = 1;
  inline ::google::protobuf::int64 last_free_qifu_time() const;
  inline void set_last_free_qifu_time(::google::protobuf::int64 value);

  // optional int32 free_qifu_status = 2;
  inline bool has_free_qifu_status() const;
  inline void clear_free_qifu_status();
  static const int kFreeQifuStatusFieldNumber = 2;
  inline ::google::protobuf::int32 free_qifu_status() const;
  inline void set_free_qifu_status(::google::protobuf::int32 value);

  // optional int32 max_gold_qifu_buy_num = 3;
  inline bool has_max_gold_qifu_buy_num() const;
  inline void clear_max_gold_qifu_buy_num();
  static const int kMaxGoldQifuBuyNumFieldNumber = 3;
  inline ::google::protobuf::int32 max_gold_qifu_buy_num() const;
  inline void set_max_gold_qifu_buy_num(::google::protobuf::int32 value);

  // optional int32 left_gold_qifu_buy_num = 4;
  inline bool has_left_gold_qifu_buy_num() const;
  inline void clear_left_gold_qifu_buy_num();
  static const int kLeftGoldQifuBuyNumFieldNumber = 4;
  inline ::google::protobuf::int32 left_gold_qifu_buy_num() const;
  inline void set_left_gold_qifu_buy_num(::google::protobuf::int32 value);

  // optional int32 max_exp_qifu_buy_num = 5;
  inline bool has_max_exp_qifu_buy_num() const;
  inline void clear_max_exp_qifu_buy_num();
  static const int kMaxExpQifuBuyNumFieldNumber = 5;
  inline ::google::protobuf::int32 max_exp_qifu_buy_num() const;
  inline void set_max_exp_qifu_buy_num(::google::protobuf::int32 value);

  // optional int32 left_exp_qifu_buy_num = 6;
  inline bool has_left_exp_qifu_buy_num() const;
  inline void clear_left_exp_qifu_buy_num();
  static const int kLeftExpQifuBuyNumFieldNumber = 6;
  inline ::google::protobuf::int32 left_exp_qifu_buy_num() const;
  inline void set_left_exp_qifu_buy_num(::google::protobuf::int32 value);

  // optional int32 save_money = 7;
  inline bool has_save_money() const;
  inline void clear_save_money();
  static const int kSaveMoneyFieldNumber = 7;
  inline ::google::protobuf::int32 save_money() const;
  inline void set_save_money(::google::protobuf::int32 value);

  // optional int32 last_save_money_time = 8;
  inline bool has_last_save_money_time() const;
  inline void clear_last_save_money_time();
  static const int kLastSaveMoneyTimeFieldNumber = 8;
  inline ::google::protobuf::int32 last_save_money_time() const;
  inline void set_last_save_money_time(::google::protobuf::int32 value);

  // optional int32 last_get_money_time = 9;
  inline bool has_last_get_money_time() const;
  inline void clear_last_get_money_time();
  static const int kLastGetMoneyTimeFieldNumber = 9;
  inline ::google::protobuf::int32 last_get_money_time() const;
  inline void set_last_get_money_time(::google::protobuf::int32 value);

  // optional int32 get_money_day = 10;
  inline bool has_get_money_day() const;
  inline void clear_get_money_day();
  static const int kGetMoneyDayFieldNumber = 10;
  inline ::google::protobuf::int32 get_money_day() const;
  inline void set_get_money_day(::google::protobuf::int32 value);

  // optional int32 all_get_money = 11;
  inline bool has_all_get_money() const;
  inline void clear_all_get_money();
  static const int kAllGetMoneyFieldNumber = 11;
  inline ::google::protobuf::int32 all_get_money() const;
  inline void set_all_get_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareQiFuData)
 private:
  inline void set_has_last_free_qifu_time();
  inline void clear_has_last_free_qifu_time();
  inline void set_has_free_qifu_status();
  inline void clear_has_free_qifu_status();
  inline void set_has_max_gold_qifu_buy_num();
  inline void clear_has_max_gold_qifu_buy_num();
  inline void set_has_left_gold_qifu_buy_num();
  inline void clear_has_left_gold_qifu_buy_num();
  inline void set_has_max_exp_qifu_buy_num();
  inline void clear_has_max_exp_qifu_buy_num();
  inline void set_has_left_exp_qifu_buy_num();
  inline void clear_has_left_exp_qifu_buy_num();
  inline void set_has_save_money();
  inline void clear_has_save_money();
  inline void set_has_last_save_money_time();
  inline void clear_has_last_save_money_time();
  inline void set_has_last_get_money_time();
  inline void clear_has_last_get_money_time();
  inline void set_has_get_money_day();
  inline void clear_has_get_money_day();
  inline void set_has_all_get_money();
  inline void clear_has_all_get_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 last_free_qifu_time_;
  ::google::protobuf::int32 free_qifu_status_;
  ::google::protobuf::int32 max_gold_qifu_buy_num_;
  ::google::protobuf::int32 left_gold_qifu_buy_num_;
  ::google::protobuf::int32 max_exp_qifu_buy_num_;
  ::google::protobuf::int32 left_exp_qifu_buy_num_;
  ::google::protobuf::int32 save_money_;
  ::google::protobuf::int32 last_save_money_time_;
  ::google::protobuf::int32 last_get_money_time_;
  ::google::protobuf::int32 get_money_day_;
  ::google::protobuf::int32 all_get_money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WelfareQiFuData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareLogonData : public ::google::protobuf::Message {
 public:
  WelfareLogonData();
  virtual ~WelfareLogonData();

  WelfareLogonData(const WelfareLogonData& from);

  inline WelfareLogonData& operator=(const WelfareLogonData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareLogonData& default_instance();

  void Swap(WelfareLogonData* other);

  // implements Message ----------------------------------------------

  WelfareLogonData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareLogonData& from);
  void MergeFrom(const WelfareLogonData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareLogonData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WelfareLogonData* default_instance_;
};
// -------------------------------------------------------------------

class WelfarePBData : public ::google::protobuf::Message {
 public:
  WelfarePBData();
  virtual ~WelfarePBData();

  WelfarePBData(const WelfarePBData& from);

  inline WelfarePBData& operator=(const WelfarePBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfarePBData& default_instance();

  void Swap(WelfarePBData* other);

  // implements Message ----------------------------------------------

  WelfarePBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfarePBData& from);
  void MergeFrom(const WelfarePBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 create_time = 1;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 1;
  inline ::google::protobuf::int64 create_time() const;
  inline void set_create_time(::google::protobuf::int64 value);

  // optional int64 flush_time = 2;
  inline bool has_flush_time() const;
  inline void clear_flush_time();
  static const int kFlushTimeFieldNumber = 2;
  inline ::google::protobuf::int64 flush_time() const;
  inline void set_flush_time(::google::protobuf::int64 value);

  // optional int64 online_time = 3;
  inline bool has_online_time() const;
  inline void clear_online_time();
  static const int kOnlineTimeFieldNumber = 3;
  inline ::google::protobuf::int64 online_time() const;
  inline void set_online_time(::google::protobuf::int64 value);

  // repeated .proto_ff.WelfareSignPBData sign = 4;
  inline int sign_size() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 4;
  inline const ::proto_ff::WelfareSignPBData& sign(int index) const;
  inline ::proto_ff::WelfareSignPBData* mutable_sign(int index);
  inline ::proto_ff::WelfareSignPBData* add_sign();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareSignPBData >&
      sign() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareSignPBData >*
      mutable_sign();

  // repeated .proto_ff.WelfareAccrueRewardPBData accure = 5;
  inline int accure_size() const;
  inline void clear_accure();
  static const int kAccureFieldNumber = 5;
  inline const ::proto_ff::WelfareAccrueRewardPBData& accure(int index) const;
  inline ::proto_ff::WelfareAccrueRewardPBData* mutable_accure(int index);
  inline ::proto_ff::WelfareAccrueRewardPBData* add_accure();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareAccrueRewardPBData >&
      accure() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareAccrueRewardPBData >*
      mutable_accure();

  // repeated .proto_ff.WelfareLvRewardPBData lv = 6;
  inline int lv_size() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 6;
  inline const ::proto_ff::WelfareLvRewardPBData& lv(int index) const;
  inline ::proto_ff::WelfareLvRewardPBData* mutable_lv(int index);
  inline ::proto_ff::WelfareLvRewardPBData* add_lv();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLvRewardPBData >&
      lv() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLvRewardPBData >*
      mutable_lv();

  // repeated .proto_ff.WelfareOnlineRewardPBData online = 7;
  inline int online_size() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 7;
  inline const ::proto_ff::WelfareOnlineRewardPBData& online(int index) const;
  inline ::proto_ff::WelfareOnlineRewardPBData* mutable_online(int index);
  inline ::proto_ff::WelfareOnlineRewardPBData* add_online();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareOnlineRewardPBData >&
      online() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareOnlineRewardPBData >*
      mutable_online();

  // optional .proto_ff.WelfareNotifyRewardPBData notify = 8;
  inline bool has_notify() const;
  inline void clear_notify();
  static const int kNotifyFieldNumber = 8;
  inline const ::proto_ff::WelfareNotifyRewardPBData& notify() const;
  inline ::proto_ff::WelfareNotifyRewardPBData* mutable_notify();
  inline ::proto_ff::WelfareNotifyRewardPBData* release_notify();
  inline void set_allocated_notify(::proto_ff::WelfareNotifyRewardPBData* notify);

  // optional .proto_ff.WelfareFraudRewardPBData fraud = 9;
  inline bool has_fraud() const;
  inline void clear_fraud();
  static const int kFraudFieldNumber = 9;
  inline const ::proto_ff::WelfareFraudRewardPBData& fraud() const;
  inline ::proto_ff::WelfareFraudRewardPBData* mutable_fraud();
  inline ::proto_ff::WelfareFraudRewardPBData* release_fraud();
  inline void set_allocated_fraud(::proto_ff::WelfareFraudRewardPBData* fraud);

  // repeated .proto_ff.WelfareWeekEndRewardPBData weekend = 10;
  inline int weekend_size() const;
  inline void clear_weekend();
  static const int kWeekendFieldNumber = 10;
  inline const ::proto_ff::WelfareWeekEndRewardPBData& weekend(int index) const;
  inline ::proto_ff::WelfareWeekEndRewardPBData* mutable_weekend(int index);
  inline ::proto_ff::WelfareWeekEndRewardPBData* add_weekend();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareWeekEndRewardPBData >&
      weekend() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareWeekEndRewardPBData >*
      mutable_weekend();

  // optional int64 last_week_end_flush_time = 11;
  inline bool has_last_week_end_flush_time() const;
  inline void clear_last_week_end_flush_time();
  static const int kLastWeekEndFlushTimeFieldNumber = 11;
  inline ::google::protobuf::int64 last_week_end_flush_time() const;
  inline void set_last_week_end_flush_time(::google::protobuf::int64 value);

  // optional .proto_ff.WelfareQiFuData pray = 12;
  inline bool has_pray() const;
  inline void clear_pray();
  static const int kPrayFieldNumber = 12;
  inline const ::proto_ff::WelfareQiFuData& pray() const;
  inline ::proto_ff::WelfareQiFuData* mutable_pray();
  inline ::proto_ff::WelfareQiFuData* release_pray();
  inline void set_allocated_pray(::proto_ff::WelfareQiFuData* pray);

  // repeated .proto_ff.WelfareLogonData logon = 13;
  inline int logon_size() const;
  inline void clear_logon();
  static const int kLogonFieldNumber = 13;
  inline const ::proto_ff::WelfareLogonData& logon(int index) const;
  inline ::proto_ff::WelfareLogonData* mutable_logon(int index);
  inline ::proto_ff::WelfareLogonData* add_logon();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLogonData >&
      logon() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLogonData >*
      mutable_logon();

  // optional int32 cur_logon_day = 14;
  inline bool has_cur_logon_day() const;
  inline void clear_cur_logon_day();
  static const int kCurLogonDayFieldNumber = 14;
  inline ::google::protobuf::int32 cur_logon_day() const;
  inline void set_cur_logon_day(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfarePBData)
 private:
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_flush_time();
  inline void clear_has_flush_time();
  inline void set_has_online_time();
  inline void clear_has_online_time();
  inline void set_has_notify();
  inline void clear_has_notify();
  inline void set_has_fraud();
  inline void clear_has_fraud();
  inline void set_has_last_week_end_flush_time();
  inline void clear_has_last_week_end_flush_time();
  inline void set_has_pray();
  inline void clear_has_pray();
  inline void set_has_cur_logon_day();
  inline void clear_has_cur_logon_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 create_time_;
  ::google::protobuf::int64 flush_time_;
  ::google::protobuf::int64 online_time_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareSignPBData > sign_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareAccrueRewardPBData > accure_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLvRewardPBData > lv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareOnlineRewardPBData > online_;
  ::proto_ff::WelfareNotifyRewardPBData* notify_;
  ::proto_ff::WelfareFraudRewardPBData* fraud_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareWeekEndRewardPBData > weekend_;
  ::google::protobuf::int64 last_week_end_flush_time_;
  ::proto_ff::WelfareQiFuData* pray_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLogonData > logon_;
  ::google::protobuf::int32 cur_logon_day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WelfarePBData* default_instance_;
};
// -------------------------------------------------------------------

class WPPState : public ::google::protobuf::Message {
 public:
  WPPState();
  virtual ~WPPState();

  WPPState(const WPPState& from);

  inline WPPState& operator=(const WPPState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPState& default_instance();

  void Swap(WPPState* other);

  // implements Message ----------------------------------------------

  WPPState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPState& from);
  void MergeFrom(const WPPState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required .proto_ff.Vector3PB dir = 2;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 2;
  inline const ::proto_ff::Vector3PB& dir() const;
  inline ::proto_ff::Vector3PB* mutable_dir();
  inline ::proto_ff::Vector3PB* release_dir();
  inline void set_allocated_dir(::proto_ff::Vector3PB* dir);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPState)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::Vector3PB* dir_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WPPState* default_instance_;
};
// -------------------------------------------------------------------

class XingYunMiShiPBData : public ::google::protobuf::Message {
 public:
  XingYunMiShiPBData();
  virtual ~XingYunMiShiPBData();

  XingYunMiShiPBData(const XingYunMiShiPBData& from);

  inline XingYunMiShiPBData& operator=(const XingYunMiShiPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XingYunMiShiPBData& default_instance();

  void Swap(XingYunMiShiPBData* other);

  // implements Message ----------------------------------------------

  XingYunMiShiPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XingYunMiShiPBData& from);
  void MergeFrom(const XingYunMiShiPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.XingYunMiShiPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static XingYunMiShiPBData* default_instance_;
};
// -------------------------------------------------------------------

class XingYunMiShiPBRecord : public ::google::protobuf::Message {
 public:
  XingYunMiShiPBRecord();
  virtual ~XingYunMiShiPBRecord();

  XingYunMiShiPBRecord(const XingYunMiShiPBRecord& from);

  inline XingYunMiShiPBRecord& operator=(const XingYunMiShiPBRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XingYunMiShiPBRecord& default_instance();

  void Swap(XingYunMiShiPBRecord* other);

  // implements Message ----------------------------------------------

  XingYunMiShiPBRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XingYunMiShiPBRecord& from);
  void MergeFrom(const XingYunMiShiPBRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.XingYunMiShiPBRecord)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static XingYunMiShiPBRecord* default_instance_;
};
// -------------------------------------------------------------------

class DailyGiftPBData : public ::google::protobuf::Message {
 public:
  DailyGiftPBData();
  virtual ~DailyGiftPBData();

  DailyGiftPBData(const DailyGiftPBData& from);

  inline DailyGiftPBData& operator=(const DailyGiftPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyGiftPBData& default_instance();

  void Swap(DailyGiftPBData* other);

  // implements Message ----------------------------------------------

  DailyGiftPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyGiftPBData& from);
  void MergeFrom(const DailyGiftPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyGiftPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyGiftPBData* default_instance_;
};
// -------------------------------------------------------------------

class DailyGiftPBDataRecord : public ::google::protobuf::Message {
 public:
  DailyGiftPBDataRecord();
  virtual ~DailyGiftPBDataRecord();

  DailyGiftPBDataRecord(const DailyGiftPBDataRecord& from);

  inline DailyGiftPBDataRecord& operator=(const DailyGiftPBDataRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyGiftPBDataRecord& default_instance();

  void Swap(DailyGiftPBDataRecord* other);

  // implements Message ----------------------------------------------

  DailyGiftPBDataRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyGiftPBDataRecord& from);
  void MergeFrom(const DailyGiftPBDataRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyGiftPBDataRecord)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyGiftPBDataRecord* default_instance_;
};
// -------------------------------------------------------------------

class LianChongTodayPBData : public ::google::protobuf::Message {
 public:
  LianChongTodayPBData();
  virtual ~LianChongTodayPBData();

  LianChongTodayPBData(const LianChongTodayPBData& from);

  inline LianChongTodayPBData& operator=(const LianChongTodayPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LianChongTodayPBData& default_instance();

  void Swap(LianChongTodayPBData* other);

  // implements Message ----------------------------------------------

  LianChongTodayPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LianChongTodayPBData& from);
  void MergeFrom(const LianChongTodayPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LianChongTodayPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LianChongTodayPBData* default_instance_;
};
// -------------------------------------------------------------------

class LianChongTodayPBDataRecord : public ::google::protobuf::Message {
 public:
  LianChongTodayPBDataRecord();
  virtual ~LianChongTodayPBDataRecord();

  LianChongTodayPBDataRecord(const LianChongTodayPBDataRecord& from);

  inline LianChongTodayPBDataRecord& operator=(const LianChongTodayPBDataRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LianChongTodayPBDataRecord& default_instance();

  void Swap(LianChongTodayPBDataRecord* other);

  // implements Message ----------------------------------------------

  LianChongTodayPBDataRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LianChongTodayPBDataRecord& from);
  void MergeFrom(const LianChongTodayPBDataRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LianChongTodayPBDataRecord)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LianChongTodayPBDataRecord* default_instance_;
};
// -------------------------------------------------------------------

class LianChongAccPBData : public ::google::protobuf::Message {
 public:
  LianChongAccPBData();
  virtual ~LianChongAccPBData();

  LianChongAccPBData(const LianChongAccPBData& from);

  inline LianChongAccPBData& operator=(const LianChongAccPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LianChongAccPBData& default_instance();

  void Swap(LianChongAccPBData* other);

  // implements Message ----------------------------------------------

  LianChongAccPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LianChongAccPBData& from);
  void MergeFrom(const LianChongAccPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 days = 3;
  inline bool has_days() const;
  inline void clear_days();
  static const int kDaysFieldNumber = 3;
  inline ::google::protobuf::int32 days() const;
  inline void set_days(::google::protobuf::int32 value);

  // optional bool cur_flag = 4;
  inline bool has_cur_flag() const;
  inline void clear_cur_flag();
  static const int kCurFlagFieldNumber = 4;
  inline bool cur_flag() const;
  inline void set_cur_flag(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.LianChongAccPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_days();
  inline void clear_has_days();
  inline void set_has_cur_flag();
  inline void clear_has_cur_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 days_;
  bool cur_flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LianChongAccPBData* default_instance_;
};
// -------------------------------------------------------------------

class LianChongAccPBDataRecord : public ::google::protobuf::Message {
 public:
  LianChongAccPBDataRecord();
  virtual ~LianChongAccPBDataRecord();

  LianChongAccPBDataRecord(const LianChongAccPBDataRecord& from);

  inline LianChongAccPBDataRecord& operator=(const LianChongAccPBDataRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LianChongAccPBDataRecord& default_instance();

  void Swap(LianChongAccPBDataRecord* other);

  // implements Message ----------------------------------------------

  LianChongAccPBDataRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LianChongAccPBDataRecord& from);
  void MergeFrom(const LianChongAccPBDataRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LianChongAccPBDataRecord)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LianChongAccPBDataRecord* default_instance_;
};
// -------------------------------------------------------------------

class MonthCardPBData : public ::google::protobuf::Message {
 public:
  MonthCardPBData();
  virtual ~MonthCardPBData();

  MonthCardPBData(const MonthCardPBData& from);

  inline MonthCardPBData& operator=(const MonthCardPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonthCardPBData& default_instance();

  void Swap(MonthCardPBData* other);

  // implements Message ----------------------------------------------

  MonthCardPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonthCardPBData& from);
  void MergeFrom(const MonthCardPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional uint64 buy_time = 3;
  inline bool has_buy_time() const;
  inline void clear_buy_time();
  static const int kBuyTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 buy_time() const;
  inline void set_buy_time(::google::protobuf::uint64 value);

  // optional uint64 last_get_reward = 4;
  inline bool has_last_get_reward() const;
  inline void clear_last_get_reward();
  static const int kLastGetRewardFieldNumber = 4;
  inline ::google::protobuf::uint64 last_get_reward() const;
  inline void set_last_get_reward(::google::protobuf::uint64 value);

  // optional uint64 last_buy_time = 5;
  inline bool has_last_buy_time() const;
  inline void clear_last_buy_time();
  static const int kLastBuyTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 last_buy_time() const;
  inline void set_last_buy_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MonthCardPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_buy_time();
  inline void clear_has_buy_time();
  inline void set_has_last_get_reward();
  inline void clear_has_last_get_reward();
  inline void set_has_last_buy_time();
  inline void clear_has_last_buy_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint64 buy_time_;
  ::google::protobuf::uint64 last_get_reward_;
  ::google::protobuf::uint64 last_buy_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MonthCardPBData* default_instance_;
};
// -------------------------------------------------------------------

class MonthCardPBDataRecord : public ::google::protobuf::Message {
 public:
  MonthCardPBDataRecord();
  virtual ~MonthCardPBDataRecord();

  MonthCardPBDataRecord(const MonthCardPBDataRecord& from);

  inline MonthCardPBDataRecord& operator=(const MonthCardPBDataRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonthCardPBDataRecord& default_instance();

  void Swap(MonthCardPBDataRecord* other);

  // implements Message ----------------------------------------------

  MonthCardPBDataRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonthCardPBDataRecord& from);
  void MergeFrom(const MonthCardPBDataRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MonthCardPBDataRecord)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MonthCardPBDataRecord* default_instance_;
};
// -------------------------------------------------------------------

class TurntableAccPBData : public ::google::protobuf::Message {
 public:
  TurntableAccPBData();
  virtual ~TurntableAccPBData();

  TurntableAccPBData(const TurntableAccPBData& from);

  inline TurntableAccPBData& operator=(const TurntableAccPBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurntableAccPBData& default_instance();

  void Swap(TurntableAccPBData* other);

  // implements Message ----------------------------------------------

  TurntableAccPBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurntableAccPBData& from);
  void MergeFrom(const TurntableAccPBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 cur_num = 3;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 3;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurntableAccPBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 cur_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TurntableAccPBData* default_instance_;
};
// -------------------------------------------------------------------

class TurntablePBData : public ::google::protobuf::Message {
 public:
  TurntablePBData();
  virtual ~TurntablePBData();

  TurntablePBData(const TurntablePBData& from);

  inline TurntablePBData& operator=(const TurntablePBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurntablePBData& default_instance();

  void Swap(TurntablePBData* other);

  // implements Message ----------------------------------------------

  TurntablePBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurntablePBData& from);
  void MergeFrom(const TurntablePBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 acc_num = 3;
  inline bool has_acc_num() const;
  inline void clear_acc_num();
  static const int kAccNumFieldNumber = 3;
  inline ::google::protobuf::int32 acc_num() const;
  inline void set_acc_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurntablePBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_acc_num();
  inline void clear_has_acc_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 acc_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TurntablePBData* default_instance_;
};
// -------------------------------------------------------------------

class TurntablePBDataRecord : public ::google::protobuf::Message {
 public:
  TurntablePBDataRecord();
  virtual ~TurntablePBDataRecord();

  TurntablePBDataRecord(const TurntablePBDataRecord& from);

  inline TurntablePBDataRecord& operator=(const TurntablePBDataRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurntablePBDataRecord& default_instance();

  void Swap(TurntablePBDataRecord* other);

  // implements Message ----------------------------------------------

  TurntablePBDataRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurntablePBDataRecord& from);
  void MergeFrom(const TurntablePBDataRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurntablePBDataRecord)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TurntablePBDataRecord* default_instance_;
};
// -------------------------------------------------------------------

class OneSuperGiftBuy : public ::google::protobuf::Message {
 public:
  OneSuperGiftBuy();
  virtual ~OneSuperGiftBuy();

  OneSuperGiftBuy(const OneSuperGiftBuy& from);

  inline OneSuperGiftBuy& operator=(const OneSuperGiftBuy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneSuperGiftBuy& default_instance();

  void Swap(OneSuperGiftBuy* other);

  // implements Message ----------------------------------------------

  OneSuperGiftBuy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneSuperGiftBuy& from);
  void MergeFrom(const OneSuperGiftBuy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 max_num = 3;
  inline bool has_max_num() const;
  inline void clear_max_num();
  static const int kMaxNumFieldNumber = 3;
  inline ::google::protobuf::int32 max_num() const;
  inline void set_max_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OneSuperGiftBuy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_max_num();
  inline void clear_has_max_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 max_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneSuperGiftBuy* default_instance_;
};
// -------------------------------------------------------------------

class OnWelfareInvestRewardData : public ::google::protobuf::Message {
 public:
  OnWelfareInvestRewardData();
  virtual ~OnWelfareInvestRewardData();

  OnWelfareInvestRewardData(const OnWelfareInvestRewardData& from);

  inline OnWelfareInvestRewardData& operator=(const OnWelfareInvestRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnWelfareInvestRewardData& default_instance();

  void Swap(OnWelfareInvestRewardData* other);

  // implements Message ----------------------------------------------

  OnWelfareInvestRewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnWelfareInvestRewardData& from);
  void MergeFrom(const OnWelfareInvestRewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OnWelfareInvestRewardData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OnWelfareInvestRewardData* default_instance_;
};
// -------------------------------------------------------------------

class OneWelfareInvestData : public ::google::protobuf::Message {
 public:
  OneWelfareInvestData();
  virtual ~OneWelfareInvestData();

  OneWelfareInvestData(const OneWelfareInvestData& from);

  inline OneWelfareInvestData& operator=(const OneWelfareInvestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneWelfareInvestData& default_instance();

  void Swap(OneWelfareInvestData* other);

  // implements Message ----------------------------------------------

  OneWelfareInvestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneWelfareInvestData& from);
  void MergeFrom(const OneWelfareInvestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 invest_id = 1;
  inline bool has_invest_id() const;
  inline void clear_invest_id();
  static const int kInvestIdFieldNumber = 1;
  inline ::google::protobuf::int32 invest_id() const;
  inline void set_invest_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .proto_ff.OnWelfareInvestRewardData data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::proto_ff::OnWelfareInvestRewardData& data(int index) const;
  inline ::proto_ff::OnWelfareInvestRewardData* mutable_data(int index);
  inline ::proto_ff::OnWelfareInvestRewardData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OnWelfareInvestRewardData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OnWelfareInvestRewardData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.OneWelfareInvestData)
 private:
  inline void set_has_invest_id();
  inline void clear_has_invest_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 invest_id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OnWelfareInvestRewardData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneWelfareInvestData* default_instance_;
};
// -------------------------------------------------------------------

class OneYTTLGift : public ::google::protobuf::Message {
 public:
  OneYTTLGift();
  virtual ~OneYTTLGift();

  OneYTTLGift(const OneYTTLGift& from);

  inline OneYTTLGift& operator=(const OneYTTLGift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneYTTLGift& default_instance();

  void Swap(OneYTTLGift* other);

  // implements Message ----------------------------------------------

  OneYTTLGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneYTTLGift& from);
  void MergeFrom(const OneYTTLGift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 buyed = 2;
  inline bool has_buyed() const;
  inline void clear_buyed();
  static const int kBuyedFieldNumber = 2;
  inline ::google::protobuf::int32 buyed() const;
  inline void set_buyed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OneYTTLGift)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_buyed();
  inline void clear_has_buyed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 buyed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OneYTTLGift* default_instance_;
};
// -------------------------------------------------------------------

class DailyWelfarePBData : public ::google::protobuf::Message {
 public:
  DailyWelfarePBData();
  virtual ~DailyWelfarePBData();

  DailyWelfarePBData(const DailyWelfarePBData& from);

  inline DailyWelfarePBData& operator=(const DailyWelfarePBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyWelfarePBData& default_instance();

  void Swap(DailyWelfarePBData* other);

  // implements Message ----------------------------------------------

  DailyWelfarePBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyWelfarePBData& from);
  void MergeFrom(const DailyWelfarePBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 flush_time = 1;
  inline bool has_flush_time() const;
  inline void clear_flush_time();
  static const int kFlushTimeFieldNumber = 1;
  inline ::google::protobuf::int64 flush_time() const;
  inline void set_flush_time(::google::protobuf::int64 value);

  // repeated .proto_ff.XingYunMiShiPBData xing_yun_mi_shi = 2;
  inline int xing_yun_mi_shi_size() const;
  inline void clear_xing_yun_mi_shi();
  static const int kXingYunMiShiFieldNumber = 2;
  inline const ::proto_ff::XingYunMiShiPBData& xing_yun_mi_shi(int index) const;
  inline ::proto_ff::XingYunMiShiPBData* mutable_xing_yun_mi_shi(int index);
  inline ::proto_ff::XingYunMiShiPBData* add_xing_yun_mi_shi();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::XingYunMiShiPBData >&
      xing_yun_mi_shi() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::XingYunMiShiPBData >*
      mutable_xing_yun_mi_shi();

  // optional int32 xing_yun_super_gift_status = 3;
  inline bool has_xing_yun_super_gift_status() const;
  inline void clear_xing_yun_super_gift_status();
  static const int kXingYunSuperGiftStatusFieldNumber = 3;
  inline ::google::protobuf::int32 xing_yun_super_gift_status() const;
  inline void set_xing_yun_super_gift_status(::google::protobuf::int32 value);

  // repeated .proto_ff.DailyGiftPBData daily_gift = 4;
  inline int daily_gift_size() const;
  inline void clear_daily_gift();
  static const int kDailyGiftFieldNumber = 4;
  inline const ::proto_ff::DailyGiftPBData& daily_gift(int index) const;
  inline ::proto_ff::DailyGiftPBData* mutable_daily_gift(int index);
  inline ::proto_ff::DailyGiftPBData* add_daily_gift();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyGiftPBData >&
      daily_gift() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyGiftPBData >*
      mutable_daily_gift();

  // repeated .proto_ff.LianChongTodayPBData today_recharge = 5;
  inline int today_recharge_size() const;
  inline void clear_today_recharge();
  static const int kTodayRechargeFieldNumber = 5;
  inline const ::proto_ff::LianChongTodayPBData& today_recharge(int index) const;
  inline ::proto_ff::LianChongTodayPBData* mutable_today_recharge(int index);
  inline ::proto_ff::LianChongTodayPBData* add_today_recharge();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LianChongTodayPBData >&
      today_recharge() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LianChongTodayPBData >*
      mutable_today_recharge();

  // repeated .proto_ff.LianChongAccPBData acc_recharge = 6;
  inline int acc_recharge_size() const;
  inline void clear_acc_recharge();
  static const int kAccRechargeFieldNumber = 6;
  inline const ::proto_ff::LianChongAccPBData& acc_recharge(int index) const;
  inline ::proto_ff::LianChongAccPBData* mutable_acc_recharge(int index);
  inline ::proto_ff::LianChongAccPBData* add_acc_recharge();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LianChongAccPBData >&
      acc_recharge() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LianChongAccPBData >*
      mutable_acc_recharge();

  // optional int32 cur_recharge_num = 7;
  inline bool has_cur_recharge_num() const;
  inline void clear_cur_recharge_num();
  static const int kCurRechargeNumFieldNumber = 7;
  inline ::google::protobuf::int32 cur_recharge_num() const;
  inline void set_cur_recharge_num(::google::protobuf::int32 value);

  // repeated .proto_ff.MonthCardPBData month_card = 8;
  inline int month_card_size() const;
  inline void clear_month_card();
  static const int kMonthCardFieldNumber = 8;
  inline const ::proto_ff::MonthCardPBData& month_card(int index) const;
  inline ::proto_ff::MonthCardPBData* mutable_month_card(int index);
  inline ::proto_ff::MonthCardPBData* add_month_card();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MonthCardPBData >&
      month_card() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MonthCardPBData >*
      mutable_month_card();

  // repeated .proto_ff.TurntableAccPBData turntable_acc = 9;
  inline int turntable_acc_size() const;
  inline void clear_turntable_acc();
  static const int kTurntableAccFieldNumber = 9;
  inline const ::proto_ff::TurntableAccPBData& turntable_acc(int index) const;
  inline ::proto_ff::TurntableAccPBData* mutable_turntable_acc(int index);
  inline ::proto_ff::TurntableAccPBData* add_turntable_acc();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntableAccPBData >&
      turntable_acc() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntableAccPBData >*
      mutable_turntable_acc();

  // repeated .proto_ff.TurntablePBData turntable = 10;
  inline int turntable_size() const;
  inline void clear_turntable();
  static const int kTurntableFieldNumber = 10;
  inline const ::proto_ff::TurntablePBData& turntable(int index) const;
  inline ::proto_ff::TurntablePBData* mutable_turntable(int index);
  inline ::proto_ff::TurntablePBData* add_turntable();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntablePBData >&
      turntable() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntablePBData >*
      mutable_turntable();

  // repeated .proto_ff.TurntablePBDataRecord turntable_record = 11;
  inline int turntable_record_size() const;
  inline void clear_turntable_record();
  static const int kTurntableRecordFieldNumber = 11;
  inline const ::proto_ff::TurntablePBDataRecord& turntable_record(int index) const;
  inline ::proto_ff::TurntablePBDataRecord* mutable_turntable_record(int index);
  inline ::proto_ff::TurntablePBDataRecord* add_turntable_record();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntablePBDataRecord >&
      turntable_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntablePBDataRecord >*
      mutable_turntable_record();

  // repeated .proto_ff.OneSuperGiftBuy super_buy = 12;
  inline int super_buy_size() const;
  inline void clear_super_buy();
  static const int kSuperBuyFieldNumber = 12;
  inline const ::proto_ff::OneSuperGiftBuy& super_buy(int index) const;
  inline ::proto_ff::OneSuperGiftBuy* mutable_super_buy(int index);
  inline ::proto_ff::OneSuperGiftBuy* add_super_buy();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneSuperGiftBuy >&
      super_buy() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneSuperGiftBuy >*
      mutable_super_buy();

  // repeated .proto_ff.OneWelfareInvestData invest = 13;
  inline int invest_size() const;
  inline void clear_invest();
  static const int kInvestFieldNumber = 13;
  inline const ::proto_ff::OneWelfareInvestData& invest(int index) const;
  inline ::proto_ff::OneWelfareInvestData* mutable_invest(int index);
  inline ::proto_ff::OneWelfareInvestData* add_invest();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneWelfareInvestData >&
      invest() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneWelfareInvestData >*
      mutable_invest();

  // repeated .proto_ff.OneYTTLGift yttl_gift = 14;
  inline int yttl_gift_size() const;
  inline void clear_yttl_gift();
  static const int kYttlGiftFieldNumber = 14;
  inline const ::proto_ff::OneYTTLGift& yttl_gift(int index) const;
  inline ::proto_ff::OneYTTLGift* mutable_yttl_gift(int index);
  inline ::proto_ff::OneYTTLGift* add_yttl_gift();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneYTTLGift >&
      yttl_gift() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneYTTLGift >*
      mutable_yttl_gift();

  // @@protoc_insertion_point(class_scope:proto_ff.DailyWelfarePBData)
 private:
  inline void set_has_flush_time();
  inline void clear_has_flush_time();
  inline void set_has_xing_yun_super_gift_status();
  inline void clear_has_xing_yun_super_gift_status();
  inline void set_has_cur_recharge_num();
  inline void clear_has_cur_recharge_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 flush_time_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::XingYunMiShiPBData > xing_yun_mi_shi_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyGiftPBData > daily_gift_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::LianChongTodayPBData > today_recharge_;
  ::google::protobuf::int32 xing_yun_super_gift_status_;
  ::google::protobuf::int32 cur_recharge_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::LianChongAccPBData > acc_recharge_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::MonthCardPBData > month_card_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntableAccPBData > turntable_acc_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntablePBData > turntable_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntablePBDataRecord > turntable_record_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneSuperGiftBuy > super_buy_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneWelfareInvestData > invest_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OneYTTLGift > yttl_gift_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyWelfarePBData* default_instance_;
};
// -------------------------------------------------------------------

class SynRankEntry : public ::google::protobuf::Message {
 public:
  SynRankEntry();
  virtual ~SynRankEntry();

  SynRankEntry(const SynRankEntry& from);

  inline SynRankEntry& operator=(const SynRankEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynRankEntry& default_instance();

  void Swap(SynRankEntry* other);

  // implements Message ----------------------------------------------

  SynRankEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynRankEntry& from);
  void MergeFrom(const SynRankEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 fight = 2;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 2;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional int32 zid = 3;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 3;
  inline ::google::protobuf::int32 zid() const;
  inline void set_zid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SynRankEntry)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_zid();
  inline void clear_has_zid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::int32 zid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SynRankEntry* default_instance_;
};
// -------------------------------------------------------------------

class C2SSynInitRankReq : public ::google::protobuf::Message {
 public:
  C2SSynInitRankReq();
  virtual ~C2SSynInitRankReq();

  C2SSynInitRankReq(const C2SSynInitRankReq& from);

  inline C2SSynInitRankReq& operator=(const C2SSynInitRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SSynInitRankReq& default_instance();

  void Swap(C2SSynInitRankReq* other);

  // implements Message ----------------------------------------------

  C2SSynInitRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SSynInitRankReq& from);
  void MergeFrom(const C2SSynInitRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.SynRankEntry infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::SynRankEntry& infos(int index) const;
  inline ::proto_ff::SynRankEntry* mutable_infos(int index);
  inline ::proto_ff::SynRankEntry* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SynRankEntry >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SynRankEntry >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.C2SSynInitRankReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::SynRankEntry > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static C2SSynInitRankReq* default_instance_;
};
// -------------------------------------------------------------------

class FindTreasureRewardRecord : public ::google::protobuf::Message {
 public:
  FindTreasureRewardRecord();
  virtual ~FindTreasureRewardRecord();

  FindTreasureRewardRecord(const FindTreasureRewardRecord& from);

  inline FindTreasureRewardRecord& operator=(const FindTreasureRewardRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindTreasureRewardRecord& default_instance();

  void Swap(FindTreasureRewardRecord* other);

  // implements Message ----------------------------------------------

  FindTreasureRewardRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindTreasureRewardRecord& from);
  void MergeFrom(const FindTreasureRewardRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FindTreasureRewardRecord)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FindTreasureRewardRecord* default_instance_;
};
// -------------------------------------------------------------------

class FindTreasureRewardRecordDBData : public ::google::protobuf::Message {
 public:
  FindTreasureRewardRecordDBData();
  virtual ~FindTreasureRewardRecordDBData();

  FindTreasureRewardRecordDBData(const FindTreasureRewardRecordDBData& from);

  inline FindTreasureRewardRecordDBData& operator=(const FindTreasureRewardRecordDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindTreasureRewardRecordDBData& default_instance();

  void Swap(FindTreasureRewardRecordDBData* other);

  // implements Message ----------------------------------------------

  FindTreasureRewardRecordDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindTreasureRewardRecordDBData& from);
  void MergeFrom(const FindTreasureRewardRecordDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // repeated .proto_ff.FindTreasureRewardRecord record = 3;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 3;
  inline const ::proto_ff::FindTreasureRewardRecord& record(int index) const;
  inline ::proto_ff::FindTreasureRewardRecord* mutable_record(int index);
  inline ::proto_ff::FindTreasureRewardRecord* add_record();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >&
      record() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >*
      mutable_record();

  // @@protoc_insertion_point(class_scope:proto_ff.FindTreasureRewardRecordDBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord > record_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FindTreasureRewardRecordDBData* default_instance_;
};
// -------------------------------------------------------------------

class FindTreasureBigDragonRewardData : public ::google::protobuf::Message {
 public:
  FindTreasureBigDragonRewardData();
  virtual ~FindTreasureBigDragonRewardData();

  FindTreasureBigDragonRewardData(const FindTreasureBigDragonRewardData& from);

  inline FindTreasureBigDragonRewardData& operator=(const FindTreasureBigDragonRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindTreasureBigDragonRewardData& default_instance();

  void Swap(FindTreasureBigDragonRewardData* other);

  // implements Message ----------------------------------------------

  FindTreasureBigDragonRewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindTreasureBigDragonRewardData& from);
  void MergeFrom(const FindTreasureBigDragonRewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FindTreasureBigDragonRewardData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FindTreasureBigDragonRewardData* default_instance_;
};
// -------------------------------------------------------------------

class FindTreasureBigDragonData : public ::google::protobuf::Message {
 public:
  FindTreasureBigDragonData();
  virtual ~FindTreasureBigDragonData();

  FindTreasureBigDragonData(const FindTreasureBigDragonData& from);

  inline FindTreasureBigDragonData& operator=(const FindTreasureBigDragonData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindTreasureBigDragonData& default_instance();

  void Swap(FindTreasureBigDragonData* other);

  // implements Message ----------------------------------------------

  FindTreasureBigDragonData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindTreasureBigDragonData& from);
  void MergeFrom(const FindTreasureBigDragonData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 all_num = 2;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 2;
  inline ::google::protobuf::uint32 all_num() const;
  inline void set_all_num(::google::protobuf::uint32 value);

  // repeated .proto_ff.FindTreasureBigDragonRewardData reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::proto_ff::FindTreasureBigDragonRewardData& reward(int index) const;
  inline ::proto_ff::FindTreasureBigDragonRewardData* mutable_reward(int index);
  inline ::proto_ff::FindTreasureBigDragonRewardData* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBigDragonRewardData >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBigDragonRewardData >*
      mutable_reward();

  // optional uint32 pool_id = 4;
  inline bool has_pool_id() const;
  inline void clear_pool_id();
  static const int kPoolIdFieldNumber = 4;
  inline ::google::protobuf::uint32 pool_id() const;
  inline void set_pool_id(::google::protobuf::uint32 value);

  // optional uint64 pool_time = 5;
  inline bool has_pool_time() const;
  inline void clear_pool_time();
  static const int kPoolTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 pool_time() const;
  inline void set_pool_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FindTreasureBigDragonData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_all_num();
  inline void clear_has_all_num();
  inline void set_has_pool_id();
  inline void clear_has_pool_id();
  inline void set_has_pool_time();
  inline void clear_has_pool_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 all_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBigDragonRewardData > reward_;
  ::google::protobuf::uint64 pool_time_;
  ::google::protobuf::uint32 pool_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FindTreasureBigDragonData* default_instance_;
};
// -------------------------------------------------------------------

class FindTreasureBaiLianShopData : public ::google::protobuf::Message {
 public:
  FindTreasureBaiLianShopData();
  virtual ~FindTreasureBaiLianShopData();

  FindTreasureBaiLianShopData(const FindTreasureBaiLianShopData& from);

  inline FindTreasureBaiLianShopData& operator=(const FindTreasureBaiLianShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindTreasureBaiLianShopData& default_instance();

  void Swap(FindTreasureBaiLianShopData* other);

  // implements Message ----------------------------------------------

  FindTreasureBaiLianShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindTreasureBaiLianShopData& from);
  void MergeFrom(const FindTreasureBaiLianShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 left_num = 2;
  inline bool has_left_num() const;
  inline void clear_left_num();
  static const int kLeftNumFieldNumber = 2;
  inline ::google::protobuf::uint32 left_num() const;
  inline void set_left_num(::google::protobuf::uint32 value);

  // optional uint32 all_num = 3;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 3;
  inline ::google::protobuf::uint32 all_num() const;
  inline void set_all_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FindTreasureBaiLianShopData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_left_num();
  inline void clear_has_left_num();
  inline void set_has_all_num();
  inline void clear_has_all_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 left_num_;
  ::google::protobuf::uint32 all_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FindTreasureBaiLianShopData* default_instance_;
};
// -------------------------------------------------------------------

class FindTreasureBaiLianActiveData : public ::google::protobuf::Message {
 public:
  FindTreasureBaiLianActiveData();
  virtual ~FindTreasureBaiLianActiveData();

  FindTreasureBaiLianActiveData(const FindTreasureBaiLianActiveData& from);

  inline FindTreasureBaiLianActiveData& operator=(const FindTreasureBaiLianActiveData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindTreasureBaiLianActiveData& default_instance();

  void Swap(FindTreasureBaiLianActiveData* other);

  // implements Message ----------------------------------------------

  FindTreasureBaiLianActiveData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindTreasureBaiLianActiveData& from);
  void MergeFrom(const FindTreasureBaiLianActiveData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 buy_status = 3;
  inline bool has_buy_status() const;
  inline void clear_buy_status();
  static const int kBuyStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 buy_status() const;
  inline void set_buy_status(::google::protobuf::uint32 value);

  // repeated .proto_ff.FindTreasureBaiLianShopData shop_data = 4;
  inline int shop_data_size() const;
  inline void clear_shop_data();
  static const int kShopDataFieldNumber = 4;
  inline const ::proto_ff::FindTreasureBaiLianShopData& shop_data(int index) const;
  inline ::proto_ff::FindTreasureBaiLianShopData* mutable_shop_data(int index);
  inline ::proto_ff::FindTreasureBaiLianShopData* add_shop_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianShopData >&
      shop_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianShopData >*
      mutable_shop_data();

  // optional int32 open_status = 5;
  inline bool has_open_status() const;
  inline void clear_open_status();
  static const int kOpenStatusFieldNumber = 5;
  inline ::google::protobuf::int32 open_status() const;
  inline void set_open_status(::google::protobuf::int32 value);

  // optional uint64 last_time = 6;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FindTreasureBaiLianActiveData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_buy_status();
  inline void clear_has_buy_status();
  inline void set_has_open_status();
  inline void clear_has_open_status();
  inline void set_has_last_time();
  inline void clear_has_last_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianShopData > shop_data_;
  ::google::protobuf::uint32 buy_status_;
  ::google::protobuf::int32 open_status_;
  ::google::protobuf::uint64 last_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FindTreasureBaiLianActiveData* default_instance_;
};
// -------------------------------------------------------------------

class FindTreasureBaiLianData : public ::google::protobuf::Message {
 public:
  FindTreasureBaiLianData();
  virtual ~FindTreasureBaiLianData();

  FindTreasureBaiLianData(const FindTreasureBaiLianData& from);

  inline FindTreasureBaiLianData& operator=(const FindTreasureBaiLianData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindTreasureBaiLianData& default_instance();

  void Swap(FindTreasureBaiLianData* other);

  // implements Message ----------------------------------------------

  FindTreasureBaiLianData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindTreasureBaiLianData& from);
  void MergeFrom(const FindTreasureBaiLianData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .proto_ff.FindTreasureRewardRecord record = 2;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 2;
  inline const ::proto_ff::FindTreasureRewardRecord& record(int index) const;
  inline ::proto_ff::FindTreasureRewardRecord* mutable_record(int index);
  inline ::proto_ff::FindTreasureRewardRecord* add_record();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >&
      record() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >*
      mutable_record();

  // repeated .proto_ff.FindTreasureBaiLianActiveData active = 3;
  inline int active_size() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 3;
  inline const ::proto_ff::FindTreasureBaiLianActiveData& active(int index) const;
  inline ::proto_ff::FindTreasureBaiLianActiveData* mutable_active(int index);
  inline ::proto_ff::FindTreasureBaiLianActiveData* add_active();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianActiveData >&
      active() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianActiveData >*
      mutable_active();

  // optional uint32 pool_id = 4;
  inline bool has_pool_id() const;
  inline void clear_pool_id();
  static const int kPoolIdFieldNumber = 4;
  inline ::google::protobuf::uint32 pool_id() const;
  inline void set_pool_id(::google::protobuf::uint32 value);

  // optional uint64 pool_time = 5;
  inline bool has_pool_time() const;
  inline void clear_pool_time();
  static const int kPoolTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 pool_time() const;
  inline void set_pool_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FindTreasureBaiLianData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pool_id();
  inline void clear_has_pool_id();
  inline void set_has_pool_time();
  inline void clear_has_pool_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord > record_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 pool_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianActiveData > active_;
  ::google::protobuf::uint64 pool_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FindTreasureBaiLianData* default_instance_;
};
// -------------------------------------------------------------------

class FindTreasureSiShengRewardData : public ::google::protobuf::Message {
 public:
  FindTreasureSiShengRewardData();
  virtual ~FindTreasureSiShengRewardData();

  FindTreasureSiShengRewardData(const FindTreasureSiShengRewardData& from);

  inline FindTreasureSiShengRewardData& operator=(const FindTreasureSiShengRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindTreasureSiShengRewardData& default_instance();

  void Swap(FindTreasureSiShengRewardData* other);

  // implements Message ----------------------------------------------

  FindTreasureSiShengRewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindTreasureSiShengRewardData& from);
  void MergeFrom(const FindTreasureSiShengRewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FindTreasureSiShengRewardData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FindTreasureSiShengRewardData* default_instance_;
};
// -------------------------------------------------------------------

class FindTreasureSiShengData : public ::google::protobuf::Message {
 public:
  FindTreasureSiShengData();
  virtual ~FindTreasureSiShengData();

  FindTreasureSiShengData(const FindTreasureSiShengData& from);

  inline FindTreasureSiShengData& operator=(const FindTreasureSiShengData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindTreasureSiShengData& default_instance();

  void Swap(FindTreasureSiShengData* other);

  // implements Message ----------------------------------------------

  FindTreasureSiShengData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindTreasureSiShengData& from);
  void MergeFrom(const FindTreasureSiShengData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .proto_ff.FindTreasureSiShengRewardData person_total_reward = 2;
  inline int person_total_reward_size() const;
  inline void clear_person_total_reward();
  static const int kPersonTotalRewardFieldNumber = 2;
  inline const ::proto_ff::FindTreasureSiShengRewardData& person_total_reward(int index) const;
  inline ::proto_ff::FindTreasureSiShengRewardData* mutable_person_total_reward(int index);
  inline ::proto_ff::FindTreasureSiShengRewardData* add_person_total_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengRewardData >&
      person_total_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengRewardData >*
      mutable_person_total_reward();

  // repeated .proto_ff.FindTreasureSiShengRewardData server_total_reward = 3;
  inline int server_total_reward_size() const;
  inline void clear_server_total_reward();
  static const int kServerTotalRewardFieldNumber = 3;
  inline const ::proto_ff::FindTreasureSiShengRewardData& server_total_reward(int index) const;
  inline ::proto_ff::FindTreasureSiShengRewardData* mutable_server_total_reward(int index);
  inline ::proto_ff::FindTreasureSiShengRewardData* add_server_total_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengRewardData >&
      server_total_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengRewardData >*
      mutable_server_total_reward();

  // optional uint32 all_num = 4;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 4;
  inline ::google::protobuf::uint32 all_num() const;
  inline void set_all_num(::google::protobuf::uint32 value);

  // repeated .proto_ff.FindTreasureRewardRecord record = 5;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 5;
  inline const ::proto_ff::FindTreasureRewardRecord& record(int index) const;
  inline ::proto_ff::FindTreasureRewardRecord* mutable_record(int index);
  inline ::proto_ff::FindTreasureRewardRecord* add_record();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >&
      record() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >*
      mutable_record();

  // optional uint32 pool_id = 6;
  inline bool has_pool_id() const;
  inline void clear_pool_id();
  static const int kPoolIdFieldNumber = 6;
  inline ::google::protobuf::uint32 pool_id() const;
  inline void set_pool_id(::google::protobuf::uint32 value);

  // optional uint64 pool_time = 7;
  inline bool has_pool_time() const;
  inline void clear_pool_time();
  static const int kPoolTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 pool_time() const;
  inline void set_pool_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FindTreasureSiShengData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_all_num();
  inline void clear_has_all_num();
  inline void set_has_pool_id();
  inline void clear_has_pool_id();
  inline void set_has_pool_time();
  inline void clear_has_pool_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengRewardData > person_total_reward_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 all_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengRewardData > server_total_reward_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord > record_;
  ::google::protobuf::uint64 pool_time_;
  ::google::protobuf::uint32 pool_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FindTreasureSiShengData* default_instance_;
};
// -------------------------------------------------------------------

class FindTreatureDBData : public ::google::protobuf::Message {
 public:
  FindTreatureDBData();
  virtual ~FindTreatureDBData();

  FindTreatureDBData(const FindTreatureDBData& from);

  inline FindTreatureDBData& operator=(const FindTreatureDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindTreatureDBData& default_instance();

  void Swap(FindTreatureDBData* other);

  // implements Message ----------------------------------------------

  FindTreatureDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindTreatureDBData& from);
  void MergeFrom(const FindTreatureDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FindTreasureBigDragonData big_dragon = 1;
  inline int big_dragon_size() const;
  inline void clear_big_dragon();
  static const int kBigDragonFieldNumber = 1;
  inline const ::proto_ff::FindTreasureBigDragonData& big_dragon(int index) const;
  inline ::proto_ff::FindTreasureBigDragonData* mutable_big_dragon(int index);
  inline ::proto_ff::FindTreasureBigDragonData* add_big_dragon();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBigDragonData >&
      big_dragon() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBigDragonData >*
      mutable_big_dragon();

  // repeated .proto_ff.FindTreasureBaiLianData bai_lian = 2;
  inline int bai_lian_size() const;
  inline void clear_bai_lian();
  static const int kBaiLianFieldNumber = 2;
  inline const ::proto_ff::FindTreasureBaiLianData& bai_lian(int index) const;
  inline ::proto_ff::FindTreasureBaiLianData* mutable_bai_lian(int index);
  inline ::proto_ff::FindTreasureBaiLianData* add_bai_lian();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianData >&
      bai_lian() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianData >*
      mutable_bai_lian();

  // repeated .proto_ff.FindTreasureSiShengData si_sheng = 3;
  inline int si_sheng_size() const;
  inline void clear_si_sheng();
  static const int kSiShengFieldNumber = 3;
  inline const ::proto_ff::FindTreasureSiShengData& si_sheng(int index) const;
  inline ::proto_ff::FindTreasureSiShengData* mutable_si_sheng(int index);
  inline ::proto_ff::FindTreasureSiShengData* add_si_sheng();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengData >&
      si_sheng() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengData >*
      mutable_si_sheng();

  // @@protoc_insertion_point(class_scope:proto_ff.FindTreatureDBData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBigDragonData > big_dragon_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianData > bai_lian_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengData > si_sheng_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FindTreatureDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestDailyTotalRechargeOneProto : public ::google::protobuf::Message {
 public:
  FestDailyTotalRechargeOneProto();
  virtual ~FestDailyTotalRechargeOneProto();

  FestDailyTotalRechargeOneProto(const FestDailyTotalRechargeOneProto& from);

  inline FestDailyTotalRechargeOneProto& operator=(const FestDailyTotalRechargeOneProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestDailyTotalRechargeOneProto& default_instance();

  void Swap(FestDailyTotalRechargeOneProto* other);

  // implements Message ----------------------------------------------

  FestDailyTotalRechargeOneProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestDailyTotalRechargeOneProto& from);
  void MergeFrom(const FestDailyTotalRechargeOneProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestDailyTotalRechargeOneProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestDailyTotalRechargeOneProto* default_instance_;
};
// -------------------------------------------------------------------

class FestRTurnableRechargeOneProto : public ::google::protobuf::Message {
 public:
  FestRTurnableRechargeOneProto();
  virtual ~FestRTurnableRechargeOneProto();

  FestRTurnableRechargeOneProto(const FestRTurnableRechargeOneProto& from);

  inline FestRTurnableRechargeOneProto& operator=(const FestRTurnableRechargeOneProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestRTurnableRechargeOneProto& default_instance();

  void Swap(FestRTurnableRechargeOneProto* other);

  // implements Message ----------------------------------------------

  FestRTurnableRechargeOneProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestRTurnableRechargeOneProto& from);
  void MergeFrom(const FestRTurnableRechargeOneProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 all_num = 3;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 3;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // optional int32 turable_num = 4;
  inline bool has_turable_num() const;
  inline void clear_turable_num();
  static const int kTurableNumFieldNumber = 4;
  inline ::google::protobuf::int32 turable_num() const;
  inline void set_turable_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestRTurnableRechargeOneProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_all_num();
  inline void clear_has_all_num();
  inline void set_has_turable_num();
  inline void clear_has_turable_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 all_num_;
  ::google::protobuf::int32 turable_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestRTurnableRechargeOneProto* default_instance_;
};
// -------------------------------------------------------------------

class RTurnableLogDBProto : public ::google::protobuf::Message {
 public:
  RTurnableLogDBProto();
  virtual ~RTurnableLogDBProto();

  RTurnableLogDBProto(const RTurnableLogDBProto& from);

  inline RTurnableLogDBProto& operator=(const RTurnableLogDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RTurnableLogDBProto& default_instance();

  void Swap(RTurnableLogDBProto* other);

  // implements Message ----------------------------------------------

  RTurnableLogDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RTurnableLogDBProto& from);
  void MergeFrom(const RTurnableLogDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 diamod = 3;
  inline bool has_diamod() const;
  inline void clear_diamod();
  static const int kDiamodFieldNumber = 3;
  inline ::google::protobuf::int32 diamod() const;
  inline void set_diamod(::google::protobuf::int32 value);

  // optional uint64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RTurnableLogDBProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_diamod();
  inline void clear_has_diamod();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 diamod_;
  ::google::protobuf::uint64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RTurnableLogDBProto* default_instance_;
};
// -------------------------------------------------------------------

class FestRTurnableLogDBProto : public ::google::protobuf::Message {
 public:
  FestRTurnableLogDBProto();
  virtual ~FestRTurnableLogDBProto();

  FestRTurnableLogDBProto(const FestRTurnableLogDBProto& from);

  inline FestRTurnableLogDBProto& operator=(const FestRTurnableLogDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestRTurnableLogDBProto& default_instance();

  void Swap(FestRTurnableLogDBProto* other);

  // implements Message ----------------------------------------------

  FestRTurnableLogDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestRTurnableLogDBProto& from);
  void MergeFrom(const FestRTurnableLogDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 template_id = 1;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // repeated .proto_ff.RTurnableLogDBProto info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::RTurnableLogDBProto& info(int index) const;
  inline ::proto_ff::RTurnableLogDBProto* mutable_info(int index);
  inline ::proto_ff::RTurnableLogDBProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RTurnableLogDBProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RTurnableLogDBProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.FestRTurnableLogDBProto)
 private:
  inline void set_has_template_id();
  inline void clear_has_template_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::RTurnableLogDBProto > info_;
  ::google::protobuf::int32 template_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestRTurnableLogDBProto* default_instance_;
};
// -------------------------------------------------------------------

class FestTurnableTaskProto : public ::google::protobuf::Message {
 public:
  FestTurnableTaskProto();
  virtual ~FestTurnableTaskProto();

  FestTurnableTaskProto(const FestTurnableTaskProto& from);

  inline FestTurnableTaskProto& operator=(const FestTurnableTaskProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestTurnableTaskProto& default_instance();

  void Swap(FestTurnableTaskProto* other);

  // implements Message ----------------------------------------------

  FestTurnableTaskProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestTurnableTaskProto& from);
  void MergeFrom(const FestTurnableTaskProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 cur_num = 3;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 3;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 all_num = 4;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 4;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestTurnableTaskProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_all_num();
  inline void clear_has_all_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 all_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestTurnableTaskProto* default_instance_;
};
// -------------------------------------------------------------------

class FestDonateTaskProto : public ::google::protobuf::Message {
 public:
  FestDonateTaskProto();
  virtual ~FestDonateTaskProto();

  FestDonateTaskProto(const FestDonateTaskProto& from);

  inline FestDonateTaskProto& operator=(const FestDonateTaskProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestDonateTaskProto& default_instance();

  void Swap(FestDonateTaskProto* other);

  // implements Message ----------------------------------------------

  FestDonateTaskProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestDonateTaskProto& from);
  void MergeFrom(const FestDonateTaskProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 cur_num = 3;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 3;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 all_num = 4;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 4;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestDonateTaskProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_all_num();
  inline void clear_has_all_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 all_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestDonateTaskProto* default_instance_;
};
// -------------------------------------------------------------------

class FestDonateSingleProto : public ::google::protobuf::Message {
 public:
  FestDonateSingleProto();
  virtual ~FestDonateSingleProto();

  FestDonateSingleProto(const FestDonateSingleProto& from);

  inline FestDonateSingleProto& operator=(const FestDonateSingleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestDonateSingleProto& default_instance();

  void Swap(FestDonateSingleProto* other);

  // implements Message ----------------------------------------------

  FestDonateSingleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestDonateSingleProto& from);
  void MergeFrom(const FestDonateSingleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestDonateSingleProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestDonateSingleProto* default_instance_;
};
// -------------------------------------------------------------------

class FestDonateServerProto : public ::google::protobuf::Message {
 public:
  FestDonateServerProto();
  virtual ~FestDonateServerProto();

  FestDonateServerProto(const FestDonateServerProto& from);

  inline FestDonateServerProto& operator=(const FestDonateServerProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestDonateServerProto& default_instance();

  void Swap(FestDonateServerProto* other);

  // implements Message ----------------------------------------------

  FestDonateServerProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestDonateServerProto& from);
  void MergeFrom(const FestDonateServerProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestDonateServerProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestDonateServerProto* default_instance_;
};
// -------------------------------------------------------------------

class FestOnlineOneProto : public ::google::protobuf::Message {
 public:
  FestOnlineOneProto();
  virtual ~FestOnlineOneProto();

  FestOnlineOneProto(const FestOnlineOneProto& from);

  inline FestOnlineOneProto& operator=(const FestOnlineOneProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestOnlineOneProto& default_instance();

  void Swap(FestOnlineOneProto* other);

  // implements Message ----------------------------------------------

  FestOnlineOneProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestOnlineOneProto& from);
  void MergeFrom(const FestOnlineOneProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional uint64 start_time = 3;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 start_time() const;
  inline void set_start_time(::google::protobuf::uint64 value);

  // optional uint64 end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestOnlineOneProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::uint64 end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestOnlineOneProto* default_instance_;
};
// -------------------------------------------------------------------

class FestCollectWordOneProto : public ::google::protobuf::Message {
 public:
  FestCollectWordOneProto();
  virtual ~FestCollectWordOneProto();

  FestCollectWordOneProto(const FestCollectWordOneProto& from);

  inline FestCollectWordOneProto& operator=(const FestCollectWordOneProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestCollectWordOneProto& default_instance();

  void Swap(FestCollectWordOneProto* other);

  // implements Message ----------------------------------------------

  FestCollectWordOneProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestCollectWordOneProto& from);
  void MergeFrom(const FestCollectWordOneProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional uint32 left_num = 2;
  inline bool has_left_num() const;
  inline void clear_left_num();
  static const int kLeftNumFieldNumber = 2;
  inline ::google::protobuf::uint32 left_num() const;
  inline void set_left_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestCollectWordOneProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_left_num();
  inline void clear_has_left_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::uint32 left_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestCollectWordOneProto* default_instance_;
};
// -------------------------------------------------------------------

class DonateServerDBProto : public ::google::protobuf::Message {
 public:
  DonateServerDBProto();
  virtual ~DonateServerDBProto();

  DonateServerDBProto(const DonateServerDBProto& from);

  inline DonateServerDBProto& operator=(const DonateServerDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DonateServerDBProto& default_instance();

  void Swap(DonateServerDBProto* other);

  // implements Message ----------------------------------------------

  DonateServerDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DonateServerDBProto& from);
  void MergeFrom(const DonateServerDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 template_id = 1;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // optional uint32 server_num = 2;
  inline bool has_server_num() const;
  inline void clear_server_num();
  static const int kServerNumFieldNumber = 2;
  inline ::google::protobuf::uint32 server_num() const;
  inline void set_server_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DonateServerDBProto)
 private:
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_server_num();
  inline void clear_has_server_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 template_id_;
  ::google::protobuf::uint32 server_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DonateServerDBProto* default_instance_;
};
// -------------------------------------------------------------------

class DrawPizeTaskProto : public ::google::protobuf::Message {
 public:
  DrawPizeTaskProto();
  virtual ~DrawPizeTaskProto();

  DrawPizeTaskProto(const DrawPizeTaskProto& from);

  inline DrawPizeTaskProto& operator=(const DrawPizeTaskProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DrawPizeTaskProto& default_instance();

  void Swap(DrawPizeTaskProto* other);

  // implements Message ----------------------------------------------

  DrawPizeTaskProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DrawPizeTaskProto& from);
  void MergeFrom(const DrawPizeTaskProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DrawPizeTaskProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DrawPizeTaskProto* default_instance_;
};
// -------------------------------------------------------------------

class DrawPizeProto : public ::google::protobuf::Message {
 public:
  DrawPizeProto();
  virtual ~DrawPizeProto();

  DrawPizeProto(const DrawPizeProto& from);

  inline DrawPizeProto& operator=(const DrawPizeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DrawPizeProto& default_instance();

  void Swap(DrawPizeProto* other);

  // implements Message ----------------------------------------------

  DrawPizeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DrawPizeProto& from);
  void MergeFrom(const DrawPizeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DrawPizeTaskProto task = 1;
  inline int task_size() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::proto_ff::DrawPizeTaskProto& task(int index) const;
  inline ::proto_ff::DrawPizeTaskProto* mutable_task(int index);
  inline ::proto_ff::DrawPizeTaskProto* add_task();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DrawPizeTaskProto >&
      task() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DrawPizeTaskProto >*
      mutable_task();

  // optional uint32 choujiang_num = 2;
  inline bool has_choujiang_num() const;
  inline void clear_choujiang_num();
  static const int kChoujiangNumFieldNumber = 2;
  inline ::google::protobuf::uint32 choujiang_num() const;
  inline void set_choujiang_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DrawPizeProto)
 private:
  inline void set_has_choujiang_num();
  inline void clear_has_choujiang_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DrawPizeTaskProto > task_;
  ::google::protobuf::uint32 choujiang_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DrawPizeProto* default_instance_;
};
// -------------------------------------------------------------------

class DrawPizeLogDBProto : public ::google::protobuf::Message {
 public:
  DrawPizeLogDBProto();
  virtual ~DrawPizeLogDBProto();

  DrawPizeLogDBProto(const DrawPizeLogDBProto& from);

  inline DrawPizeLogDBProto& operator=(const DrawPizeLogDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DrawPizeLogDBProto& default_instance();

  void Swap(DrawPizeLogDBProto* other);

  // implements Message ----------------------------------------------

  DrawPizeLogDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DrawPizeLogDBProto& from);
  void MergeFrom(const DrawPizeLogDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional uint64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DrawPizeLogDBProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DrawPizeLogDBProto* default_instance_;
};
// -------------------------------------------------------------------

class FestDrawPizeLogDBProto : public ::google::protobuf::Message {
 public:
  FestDrawPizeLogDBProto();
  virtual ~FestDrawPizeLogDBProto();

  FestDrawPizeLogDBProto(const FestDrawPizeLogDBProto& from);

  inline FestDrawPizeLogDBProto& operator=(const FestDrawPizeLogDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestDrawPizeLogDBProto& default_instance();

  void Swap(FestDrawPizeLogDBProto* other);

  // implements Message ----------------------------------------------

  FestDrawPizeLogDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestDrawPizeLogDBProto& from);
  void MergeFrom(const FestDrawPizeLogDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 template_id = 1;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // repeated .proto_ff.DrawPizeLogDBProto info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::DrawPizeLogDBProto& info(int index) const;
  inline ::proto_ff::DrawPizeLogDBProto* mutable_info(int index);
  inline ::proto_ff::DrawPizeLogDBProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DrawPizeLogDBProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DrawPizeLogDBProto >*
      mutable_info();

  // optional uint32 server_num = 3;
  inline bool has_server_num() const;
  inline void clear_server_num();
  static const int kServerNumFieldNumber = 3;
  inline ::google::protobuf::uint32 server_num() const;
  inline void set_server_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestDrawPizeLogDBProto)
 private:
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_server_num();
  inline void clear_has_server_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DrawPizeLogDBProto > info_;
  ::google::protobuf::int32 template_id_;
  ::google::protobuf::uint32 server_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestDrawPizeLogDBProto* default_instance_;
};
// -------------------------------------------------------------------

class FestRankRewardData : public ::google::protobuf::Message {
 public:
  FestRankRewardData();
  virtual ~FestRankRewardData();

  FestRankRewardData(const FestRankRewardData& from);

  inline FestRankRewardData& operator=(const FestRankRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestRankRewardData& default_instance();

  void Swap(FestRankRewardData* other);

  // implements Message ----------------------------------------------

  FestRankRewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestRankRewardData& from);
  void MergeFrom(const FestRankRewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestRankRewardData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestRankRewardData* default_instance_;
};
// -------------------------------------------------------------------

class FestRankData : public ::google::protobuf::Message {
 public:
  FestRankData();
  virtual ~FestRankData();

  FestRankData(const FestRankData& from);

  inline FestRankData& operator=(const FestRankData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestRankData& default_instance();

  void Swap(FestRankData* other);

  // implements Message ----------------------------------------------

  FestRankData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestRankData& from);
  void MergeFrom(const FestRankData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rank_id = 1;
  inline bool has_rank_id() const;
  inline void clear_rank_id();
  static const int kRankIdFieldNumber = 1;
  inline ::google::protobuf::int32 rank_id() const;
  inline void set_rank_id(::google::protobuf::int32 value);

  // repeated .proto_ff.FestRankRewardData data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto_ff::FestRankRewardData& data(int index) const;
  inline ::proto_ff::FestRankRewardData* mutable_data(int index);
  inline ::proto_ff::FestRankRewardData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRankRewardData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRankRewardData >*
      mutable_data();

  // optional uint32 active_status = 3;
  inline bool has_active_status() const;
  inline void clear_active_status();
  static const int kActiveStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 active_status() const;
  inline void set_active_status(::google::protobuf::uint32 value);

  // optional uint32 red_point_status = 4;
  inline bool has_red_point_status() const;
  inline void clear_red_point_status();
  static const int kRedPointStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 red_point_status() const;
  inline void set_red_point_status(::google::protobuf::uint32 value);

  // optional uint32 gift_status = 5;
  inline bool has_gift_status() const;
  inline void clear_gift_status();
  static const int kGiftStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 gift_status() const;
  inline void set_gift_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestRankData)
 private:
  inline void set_has_rank_id();
  inline void clear_has_rank_id();
  inline void set_has_active_status();
  inline void clear_has_active_status();
  inline void set_has_red_point_status();
  inline void clear_has_red_point_status();
  inline void set_has_gift_status();
  inline void clear_has_gift_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRankRewardData > data_;
  ::google::protobuf::int32 rank_id_;
  ::google::protobuf::uint32 active_status_;
  ::google::protobuf::uint32 red_point_status_;
  ::google::protobuf::uint32 gift_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestRankData* default_instance_;
};
// -------------------------------------------------------------------

class FestRankDBData : public ::google::protobuf::Message {
 public:
  FestRankDBData();
  virtual ~FestRankDBData();

  FestRankDBData(const FestRankDBData& from);

  inline FestRankDBData& operator=(const FestRankDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestRankDBData& default_instance();

  void Swap(FestRankDBData* other);

  // implements Message ----------------------------------------------

  FestRankDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestRankDBData& from);
  void MergeFrom(const FestRankDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FestRankData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::FestRankData& data(int index) const;
  inline ::proto_ff::FestRankData* mutable_data(int index);
  inline ::proto_ff::FestRankData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRankData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRankData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.FestRankDBData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRankData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestRankDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestRechargePrizeTaskData : public ::google::protobuf::Message {
 public:
  FestRechargePrizeTaskData();
  virtual ~FestRechargePrizeTaskData();

  FestRechargePrizeTaskData(const FestRechargePrizeTaskData& from);

  inline FestRechargePrizeTaskData& operator=(const FestRechargePrizeTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestRechargePrizeTaskData& default_instance();

  void Swap(FestRechargePrizeTaskData* other);

  // implements Message ----------------------------------------------

  FestRechargePrizeTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestRechargePrizeTaskData& from);
  void MergeFrom(const FestRechargePrizeTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);

  // optional int32 task_status = 2;
  inline bool has_task_status() const;
  inline void clear_task_status();
  static const int kTaskStatusFieldNumber = 2;
  inline ::google::protobuf::int32 task_status() const;
  inline void set_task_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestRechargePrizeTaskData)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_task_status();
  inline void clear_has_task_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 task_id_;
  ::google::protobuf::int32 task_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestRechargePrizeTaskData* default_instance_;
};
// -------------------------------------------------------------------

class FestRechargePrizeRecord : public ::google::protobuf::Message {
 public:
  FestRechargePrizeRecord();
  virtual ~FestRechargePrizeRecord();

  FestRechargePrizeRecord(const FestRechargePrizeRecord& from);

  inline FestRechargePrizeRecord& operator=(const FestRechargePrizeRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestRechargePrizeRecord& default_instance();

  void Swap(FestRechargePrizeRecord* other);

  // implements Message ----------------------------------------------

  FestRechargePrizeRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestRechargePrizeRecord& from);
  void MergeFrom(const FestRechargePrizeRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 jiang_num = 1;
  inline bool has_jiang_num() const;
  inline void clear_jiang_num();
  static const int kJiangNumFieldNumber = 1;
  inline ::google::protobuf::int32 jiang_num() const;
  inline void set_jiang_num(::google::protobuf::int32 value);

  // optional int64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestRechargePrizeRecord)
 private:
  inline void set_has_jiang_num();
  inline void clear_has_jiang_num();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 jiang_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestRechargePrizeRecord* default_instance_;
};
// -------------------------------------------------------------------

class FestRechargePrizeData : public ::google::protobuf::Message {
 public:
  FestRechargePrizeData();
  virtual ~FestRechargePrizeData();

  FestRechargePrizeData(const FestRechargePrizeData& from);

  inline FestRechargePrizeData& operator=(const FestRechargePrizeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestRechargePrizeData& default_instance();

  void Swap(FestRechargePrizeData* other);

  // implements Message ----------------------------------------------

  FestRechargePrizeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestRechargePrizeData& from);
  void MergeFrom(const FestRechargePrizeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 left_pool_num = 1;
  inline bool has_left_pool_num() const;
  inline void clear_left_pool_num();
  static const int kLeftPoolNumFieldNumber = 1;
  inline ::google::protobuf::uint32 left_pool_num() const;
  inline void set_left_pool_num(::google::protobuf::uint32 value);

  // optional uint32 left_prize = 2;
  inline bool has_left_prize() const;
  inline void clear_left_prize();
  static const int kLeftPrizeFieldNumber = 2;
  inline ::google::protobuf::uint32 left_prize() const;
  inline void set_left_prize(::google::protobuf::uint32 value);

  // optional uint32 free_status = 3;
  inline bool has_free_status() const;
  inline void clear_free_status();
  static const int kFreeStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 free_status() const;
  inline void set_free_status(::google::protobuf::uint32 value);

  // repeated .proto_ff.FestRechargePrizeTaskData task = 4;
  inline int task_size() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 4;
  inline const ::proto_ff::FestRechargePrizeTaskData& task(int index) const;
  inline ::proto_ff::FestRechargePrizeTaskData* mutable_task(int index);
  inline ::proto_ff::FestRechargePrizeTaskData* add_task();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeTaskData >&
      task() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeTaskData >*
      mutable_task();

  // @@protoc_insertion_point(class_scope:proto_ff.FestRechargePrizeData)
 private:
  inline void set_has_left_pool_num();
  inline void clear_has_left_pool_num();
  inline void set_has_left_prize();
  inline void clear_has_left_prize();
  inline void set_has_free_status();
  inline void clear_has_free_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 left_pool_num_;
  ::google::protobuf::uint32 left_prize_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeTaskData > task_;
  ::google::protobuf::uint32 free_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestRechargePrizeData* default_instance_;
};
// -------------------------------------------------------------------

class FestRechargePrizeDBData : public ::google::protobuf::Message {
 public:
  FestRechargePrizeDBData();
  virtual ~FestRechargePrizeDBData();

  FestRechargePrizeDBData(const FestRechargePrizeDBData& from);

  inline FestRechargePrizeDBData& operator=(const FestRechargePrizeDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestRechargePrizeDBData& default_instance();

  void Swap(FestRechargePrizeDBData* other);

  // implements Message ----------------------------------------------

  FestRechargePrizeDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestRechargePrizeDBData& from);
  void MergeFrom(const FestRechargePrizeDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 left_pool_num = 1;
  inline bool has_left_pool_num() const;
  inline void clear_left_pool_num();
  static const int kLeftPoolNumFieldNumber = 1;
  inline ::google::protobuf::uint32 left_pool_num() const;
  inline void set_left_pool_num(::google::protobuf::uint32 value);

  // optional uint32 left_prize = 2;
  inline bool has_left_prize() const;
  inline void clear_left_prize();
  static const int kLeftPrizeFieldNumber = 2;
  inline ::google::protobuf::uint32 left_prize() const;
  inline void set_left_prize(::google::protobuf::uint32 value);

  // optional uint32 free_status = 3;
  inline bool has_free_status() const;
  inline void clear_free_status();
  static const int kFreeStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 free_status() const;
  inline void set_free_status(::google::protobuf::uint32 value);

  // repeated .proto_ff.FestRechargePrizeTaskData task = 4;
  inline int task_size() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 4;
  inline const ::proto_ff::FestRechargePrizeTaskData& task(int index) const;
  inline ::proto_ff::FestRechargePrizeTaskData* mutable_task(int index);
  inline ::proto_ff::FestRechargePrizeTaskData* add_task();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeTaskData >&
      task() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeTaskData >*
      mutable_task();

  // repeated .proto_ff.FestRechargePrizeRecord record = 5;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 5;
  inline const ::proto_ff::FestRechargePrizeRecord& record(int index) const;
  inline ::proto_ff::FestRechargePrizeRecord* mutable_record(int index);
  inline ::proto_ff::FestRechargePrizeRecord* add_record();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeRecord >&
      record() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeRecord >*
      mutable_record();

  // optional uint64 flush_time = 6;
  inline bool has_flush_time() const;
  inline void clear_flush_time();
  static const int kFlushTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 flush_time() const;
  inline void set_flush_time(::google::protobuf::uint64 value);

  // optional uint32 cur_choujiang_num = 7;
  inline bool has_cur_choujiang_num() const;
  inline void clear_cur_choujiang_num();
  static const int kCurChoujiangNumFieldNumber = 7;
  inline ::google::protobuf::uint32 cur_choujiang_num() const;
  inline void set_cur_choujiang_num(::google::protobuf::uint32 value);

  // optional uint32 acc_recharge_num = 8;
  inline bool has_acc_recharge_num() const;
  inline void clear_acc_recharge_num();
  static const int kAccRechargeNumFieldNumber = 8;
  inline ::google::protobuf::uint32 acc_recharge_num() const;
  inline void set_acc_recharge_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestRechargePrizeDBData)
 private:
  inline void set_has_left_pool_num();
  inline void clear_has_left_pool_num();
  inline void set_has_left_prize();
  inline void clear_has_left_prize();
  inline void set_has_free_status();
  inline void clear_has_free_status();
  inline void set_has_flush_time();
  inline void clear_has_flush_time();
  inline void set_has_cur_choujiang_num();
  inline void clear_has_cur_choujiang_num();
  inline void set_has_acc_recharge_num();
  inline void clear_has_acc_recharge_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 left_pool_num_;
  ::google::protobuf::uint32 left_prize_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeTaskData > task_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeRecord > record_;
  ::google::protobuf::uint32 free_status_;
  ::google::protobuf::uint32 cur_choujiang_num_;
  ::google::protobuf::uint64 flush_time_;
  ::google::protobuf::uint32 acc_recharge_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestRechargePrizeDBData* default_instance_;
};
// -------------------------------------------------------------------

class NotifyWorldInfo : public ::google::protobuf::Message {
 public:
  NotifyWorldInfo();
  virtual ~NotifyWorldInfo();

  NotifyWorldInfo(const NotifyWorldInfo& from);

  inline NotifyWorldInfo& operator=(const NotifyWorldInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyWorldInfo& default_instance();

  void Swap(NotifyWorldInfo* other);

  // implements Message ----------------------------------------------

  NotifyWorldInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyWorldInfo& from);
  void MergeFrom(const NotifyWorldInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 world_lv = 1;
  inline bool has_world_lv() const;
  inline void clear_world_lv();
  static const int kWorldLvFieldNumber = 1;
  inline ::google::protobuf::int32 world_lv() const;
  inline void set_world_lv(::google::protobuf::int32 value);

  // optional int32 world_lv_4 = 2;
  inline bool has_world_lv_4() const;
  inline void clear_world_lv_4();
  static const int kWorldLv4FieldNumber = 2;
  inline ::google::protobuf::int32 world_lv_4() const;
  inline void set_world_lv_4(::google::protobuf::int32 value);

  // optional int32 world_lv_8 = 3;
  inline bool has_world_lv_8() const;
  inline void clear_world_lv_8();
  static const int kWorldLv8FieldNumber = 3;
  inline ::google::protobuf::int32 world_lv_8() const;
  inline void set_world_lv_8(::google::protobuf::int32 value);

  // optional int32 world_lv_16 = 4;
  inline bool has_world_lv_16() const;
  inline void clear_world_lv_16();
  static const int kWorldLv16FieldNumber = 4;
  inline ::google::protobuf::int32 world_lv_16() const;
  inline void set_world_lv_16(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyWorldInfo)
 private:
  inline void set_has_world_lv();
  inline void clear_has_world_lv();
  inline void set_has_world_lv_4();
  inline void clear_has_world_lv_4();
  inline void set_has_world_lv_8();
  inline void clear_has_world_lv_8();
  inline void set_has_world_lv_16();
  inline void clear_has_world_lv_16();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 world_lv_;
  ::google::protobuf::int32 world_lv_4_;
  ::google::protobuf::int32 world_lv_8_;
  ::google::protobuf::int32 world_lv_16_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyWorldInfo* default_instance_;
};
// -------------------------------------------------------------------

class SynWorldInfoReq : public ::google::protobuf::Message {
 public:
  SynWorldInfoReq();
  virtual ~SynWorldInfoReq();

  SynWorldInfoReq(const SynWorldInfoReq& from);

  inline SynWorldInfoReq& operator=(const SynWorldInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynWorldInfoReq& default_instance();

  void Swap(SynWorldInfoReq* other);

  // implements Message ----------------------------------------------

  SynWorldInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynWorldInfoReq& from);
  void MergeFrom(const SynWorldInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ComPair infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::ComPair& infos(int index) const;
  inline ::proto_ff::ComPair* mutable_infos(int index);
  inline ::proto_ff::ComPair* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.SynWorldInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SynWorldInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class SceneTransParam : public ::google::protobuf::Message {
 public:
  SceneTransParam();
  virtual ~SceneTransParam();

  SceneTransParam(const SceneTransParam& from);

  inline SceneTransParam& operator=(const SceneTransParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTransParam& default_instance();

  void Swap(SceneTransParam* other);

  // implements Message ----------------------------------------------

  SceneTransParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneTransParam& from);
  void MergeFrom(const SceneTransParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 src_map = 1;
  inline bool has_src_map() const;
  inline void clear_src_map();
  static const int kSrcMapFieldNumber = 1;
  inline ::google::protobuf::uint64 src_map() const;
  inline void set_src_map(::google::protobuf::uint64 value);

  // optional bytes src_param = 2;
  inline bool has_src_param() const;
  inline void clear_src_param();
  static const int kSrcParamFieldNumber = 2;
  inline const ::std::string& src_param() const;
  inline void set_src_param(const ::std::string& value);
  inline void set_src_param(const char* value);
  inline void set_src_param(const void* value, size_t size);
  inline ::std::string* mutable_src_param();
  inline ::std::string* release_src_param();
  inline void set_allocated_src_param(::std::string* src_param);

  // optional int32 trans_type = 3;
  inline bool has_trans_type() const;
  inline void clear_trans_type();
  static const int kTransTypeFieldNumber = 3;
  inline ::google::protobuf::int32 trans_type() const;
  inline void set_trans_type(::google::protobuf::int32 value);

  // optional int64 param1 = 4;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 4;
  inline ::google::protobuf::int64 param1() const;
  inline void set_param1(::google::protobuf::int64 value);

  // optional int64 param2 = 5;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 5;
  inline ::google::protobuf::int64 param2() const;
  inline void set_param2(::google::protobuf::int64 value);

  // optional int64 param3 = 6;
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 6;
  inline ::google::protobuf::int64 param3() const;
  inline void set_param3(::google::protobuf::int64 value);

  // optional bytes str_param = 7;
  inline bool has_str_param() const;
  inline void clear_str_param();
  static const int kStrParamFieldNumber = 7;
  inline const ::std::string& str_param() const;
  inline void set_str_param(const ::std::string& value);
  inline void set_str_param(const char* value);
  inline void set_str_param(const void* value, size_t size);
  inline ::std::string* mutable_str_param();
  inline ::std::string* release_str_param();
  inline void set_allocated_str_param(::std::string* str_param);

  // optional bool forceTP = 8;
  inline bool has_forcetp() const;
  inline void clear_forcetp();
  static const int kForceTPFieldNumber = 8;
  inline bool forcetp() const;
  inline void set_forcetp(bool value);

  // optional int32 ret = 9;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 9;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SceneTransParam)
 private:
  inline void set_has_src_map();
  inline void clear_has_src_map();
  inline void set_has_src_param();
  inline void clear_has_src_param();
  inline void set_has_trans_type();
  inline void clear_has_trans_type();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_param3();
  inline void clear_has_param3();
  inline void set_has_str_param();
  inline void clear_has_str_param();
  inline void set_has_forcetp();
  inline void clear_has_forcetp();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 src_map_;
  ::std::string* src_param_;
  ::google::protobuf::int64 param1_;
  ::google::protobuf::int64 param2_;
  ::google::protobuf::int32 trans_type_;
  bool forcetp_;
  ::google::protobuf::int64 param3_;
  ::std::string* str_param_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SceneTransParam* default_instance_;
};
// -------------------------------------------------------------------

class FestHuiMengXiYouReward : public ::google::protobuf::Message {
 public:
  FestHuiMengXiYouReward();
  virtual ~FestHuiMengXiYouReward();

  FestHuiMengXiYouReward(const FestHuiMengXiYouReward& from);

  inline FestHuiMengXiYouReward& operator=(const FestHuiMengXiYouReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestHuiMengXiYouReward& default_instance();

  void Swap(FestHuiMengXiYouReward* other);

  // implements Message ----------------------------------------------

  FestHuiMengXiYouReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestHuiMengXiYouReward& from);
  void MergeFrom(const FestHuiMengXiYouReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestHuiMengXiYouReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestHuiMengXiYouReward* default_instance_;
};
// -------------------------------------------------------------------

class FestHuiMengXiYouGame : public ::google::protobuf::Message {
 public:
  FestHuiMengXiYouGame();
  virtual ~FestHuiMengXiYouGame();

  FestHuiMengXiYouGame(const FestHuiMengXiYouGame& from);

  inline FestHuiMengXiYouGame& operator=(const FestHuiMengXiYouGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestHuiMengXiYouGame& default_instance();

  void Swap(FestHuiMengXiYouGame* other);

  // implements Message ----------------------------------------------

  FestHuiMengXiYouGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestHuiMengXiYouGame& from);
  void MergeFrom(const FestHuiMengXiYouGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 cur_points = 2;
  inline bool has_cur_points() const;
  inline void clear_cur_points();
  static const int kCurPointsFieldNumber = 2;
  inline ::google::protobuf::int32 cur_points() const;
  inline void set_cur_points(::google::protobuf::int32 value);

  // optional bool finish = 3;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 3;
  inline bool finish() const;
  inline void set_finish(bool value);

  // optional int32 cur_prestige = 4;
  inline bool has_cur_prestige() const;
  inline void clear_cur_prestige();
  static const int kCurPrestigeFieldNumber = 4;
  inline ::google::protobuf::int32 cur_prestige() const;
  inline void set_cur_prestige(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestHuiMengXiYouGame)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cur_points();
  inline void clear_has_cur_points();
  inline void set_has_finish();
  inline void clear_has_finish();
  inline void set_has_cur_prestige();
  inline void clear_has_cur_prestige();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cur_points_;
  bool finish_;
  ::google::protobuf::int32 cur_prestige_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestHuiMengXiYouGame* default_instance_;
};
// -------------------------------------------------------------------

class FestHuiMengXiYouData : public ::google::protobuf::Message {
 public:
  FestHuiMengXiYouData();
  virtual ~FestHuiMengXiYouData();

  FestHuiMengXiYouData(const FestHuiMengXiYouData& from);

  inline FestHuiMengXiYouData& operator=(const FestHuiMengXiYouData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestHuiMengXiYouData& default_instance();

  void Swap(FestHuiMengXiYouData* other);

  // implements Message ----------------------------------------------

  FestHuiMengXiYouData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestHuiMengXiYouData& from);
  void MergeFrom(const FestHuiMengXiYouData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FestHuiMengXiYouReward reward = 1;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::proto_ff::FestHuiMengXiYouReward& reward(int index) const;
  inline ::proto_ff::FestHuiMengXiYouReward* mutable_reward(int index);
  inline ::proto_ff::FestHuiMengXiYouReward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestHuiMengXiYouReward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestHuiMengXiYouReward >*
      mutable_reward();

  // optional int32 cur_points = 2;
  inline bool has_cur_points() const;
  inline void clear_cur_points();
  static const int kCurPointsFieldNumber = 2;
  inline ::google::protobuf::int32 cur_points() const;
  inline void set_cur_points(::google::protobuf::int32 value);

  // repeated .proto_ff.FestHuiMengXiYouGame game = 3;
  inline int game_size() const;
  inline void clear_game();
  static const int kGameFieldNumber = 3;
  inline const ::proto_ff::FestHuiMengXiYouGame& game(int index) const;
  inline ::proto_ff::FestHuiMengXiYouGame* mutable_game(int index);
  inline ::proto_ff::FestHuiMengXiYouGame* add_game();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestHuiMengXiYouGame >&
      game() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestHuiMengXiYouGame >*
      mutable_game();

  // optional int32 prestige = 4;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 4;
  inline ::google::protobuf::int32 prestige() const;
  inline void set_prestige(::google::protobuf::int32 value);

  // optional uint64 flush_time = 5;
  inline bool has_flush_time() const;
  inline void clear_flush_time();
  static const int kFlushTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 flush_time() const;
  inline void set_flush_time(::google::protobuf::uint64 value);

  // optional int32 cur_game_id = 6;
  inline bool has_cur_game_id() const;
  inline void clear_cur_game_id();
  static const int kCurGameIdFieldNumber = 6;
  inline ::google::protobuf::int32 cur_game_id() const;
  inline void set_cur_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestHuiMengXiYouData)
 private:
  inline void set_has_cur_points();
  inline void clear_has_cur_points();
  inline void set_has_prestige();
  inline void clear_has_prestige();
  inline void set_has_flush_time();
  inline void clear_has_flush_time();
  inline void set_has_cur_game_id();
  inline void clear_has_cur_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestHuiMengXiYouReward > reward_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestHuiMengXiYouGame > game_;
  ::google::protobuf::int32 cur_points_;
  ::google::protobuf::int32 prestige_;
  ::google::protobuf::uint64 flush_time_;
  ::google::protobuf::int32 cur_game_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestHuiMengXiYouData* default_instance_;
};
// -------------------------------------------------------------------

class GHostDupRankInfo : public ::google::protobuf::Message {
 public:
  GHostDupRankInfo();
  virtual ~GHostDupRankInfo();

  GHostDupRankInfo(const GHostDupRankInfo& from);

  inline GHostDupRankInfo& operator=(const GHostDupRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GHostDupRankInfo& default_instance();

  void Swap(GHostDupRankInfo* other);

  // implements Message ----------------------------------------------

  GHostDupRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GHostDupRankInfo& from);
  void MergeFrom(const GHostDupRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 wave = 4;
  inline bool has_wave() const;
  inline void clear_wave();
  static const int kWaveFieldNumber = 4;
  inline ::google::protobuf::int32 wave() const;
  inline void set_wave(::google::protobuf::int32 value);

  // optional int32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional uint64 update_time = 6;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 update_time() const;
  inline void set_update_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GHostDupRankInfo)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_wave();
  inline void clear_has_wave();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_update_time();
  inline void clear_has_update_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 wave_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 update_time_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GHostDupRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class StarFantasyData : public ::google::protobuf::Message {
 public:
  StarFantasyData();
  virtual ~StarFantasyData();

  StarFantasyData(const StarFantasyData& from);

  inline StarFantasyData& operator=(const StarFantasyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StarFantasyData& default_instance();

  void Swap(StarFantasyData* other);

  // implements Message ----------------------------------------------

  StarFantasyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StarFantasyData& from);
  void MergeFrom(const StarFantasyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 advance_level = 4;
  inline bool has_advance_level() const;
  inline void clear_advance_level();
  static const int kAdvanceLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 advance_level() const;
  inline void set_advance_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StarFantasyData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_advance_level();
  inline void clear_has_advance_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 advance_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StarFantasyData* default_instance_;
};
// -------------------------------------------------------------------

class StarSetupHoleData : public ::google::protobuf::Message {
 public:
  StarSetupHoleData();
  virtual ~StarSetupHoleData();

  StarSetupHoleData(const StarSetupHoleData& from);

  inline StarSetupHoleData& operator=(const StarSetupHoleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StarSetupHoleData& default_instance();

  void Swap(StarSetupHoleData* other);

  // implements Message ----------------------------------------------

  StarSetupHoleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StarSetupHoleData& from);
  void MergeFrom(const StarSetupHoleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.EquipInfo equip_info = 1;
  inline bool has_equip_info() const;
  inline void clear_equip_info();
  static const int kEquipInfoFieldNumber = 1;
  inline const ::proto_ff::EquipInfo& equip_info() const;
  inline ::proto_ff::EquipInfo* mutable_equip_info();
  inline ::proto_ff::EquipInfo* release_equip_info();
  inline void set_allocated_equip_info(::proto_ff::EquipInfo* equip_info);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StarSetupHoleData)
 private:
  inline void set_has_equip_info();
  inline void clear_has_equip_info();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::EquipInfo* equip_info_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StarSetupHoleData* default_instance_;
};
// -------------------------------------------------------------------

class StarSetupStarAttrData : public ::google::protobuf::Message {
 public:
  StarSetupStarAttrData();
  virtual ~StarSetupStarAttrData();

  StarSetupStarAttrData(const StarSetupStarAttrData& from);

  inline StarSetupStarAttrData& operator=(const StarSetupStarAttrData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StarSetupStarAttrData& default_instance();

  void Swap(StarSetupStarAttrData* other);

  // implements Message ----------------------------------------------

  StarSetupStarAttrData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StarSetupStarAttrData& from);
  void MergeFrom(const StarSetupStarAttrData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StarSetupStarAttrData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StarSetupStarAttrData* default_instance_;
};
// -------------------------------------------------------------------

class StarSetupData : public ::google::protobuf::Message {
 public:
  StarSetupData();
  virtual ~StarSetupData();

  StarSetupData(const StarSetupData& from);

  inline StarSetupData& operator=(const StarSetupData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StarSetupData& default_instance();

  void Swap(StarSetupData* other);

  // implements Message ----------------------------------------------

  StarSetupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StarSetupData& from);
  void MergeFrom(const StarSetupData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint64 unlock_time = 3;
  inline bool has_unlock_time() const;
  inline void clear_unlock_time();
  static const int kUnlockTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 unlock_time() const;
  inline void set_unlock_time(::google::protobuf::uint64 value);

  // repeated .proto_ff.StarSetupHoleData hole_data = 5;
  inline int hole_data_size() const;
  inline void clear_hole_data();
  static const int kHoleDataFieldNumber = 5;
  inline const ::proto_ff::StarSetupHoleData& hole_data(int index) const;
  inline ::proto_ff::StarSetupHoleData* mutable_hole_data(int index);
  inline ::proto_ff::StarSetupHoleData* add_hole_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupHoleData >&
      hole_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupHoleData >*
      mutable_hole_data();

  // optional uint32 guizhen_id = 6;
  inline bool has_guizhen_id() const;
  inline void clear_guizhen_id();
  static const int kGuizhenIdFieldNumber = 6;
  inline ::google::protobuf::uint32 guizhen_id() const;
  inline void set_guizhen_id(::google::protobuf::uint32 value);

  // optional uint32 guizhen_status = 7;
  inline bool has_guizhen_status() const;
  inline void clear_guizhen_status();
  static const int kGuizhenStatusFieldNumber = 7;
  inline ::google::protobuf::uint32 guizhen_status() const;
  inline void set_guizhen_status(::google::protobuf::uint32 value);

  // optional uint32 star_num = 8;
  inline bool has_star_num() const;
  inline void clear_star_num();
  static const int kStarNumFieldNumber = 8;
  inline ::google::protobuf::uint32 star_num() const;
  inline void set_star_num(::google::protobuf::uint32 value);

  // repeated .proto_ff.StarSetupStarAttrData star_attr = 9;
  inline int star_attr_size() const;
  inline void clear_star_attr();
  static const int kStarAttrFieldNumber = 9;
  inline const ::proto_ff::StarSetupStarAttrData& star_attr(int index) const;
  inline ::proto_ff::StarSetupStarAttrData* mutable_star_attr(int index);
  inline ::proto_ff::StarSetupStarAttrData* add_star_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupStarAttrData >&
      star_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupStarAttrData >*
      mutable_star_attr();

  // @@protoc_insertion_point(class_scope:proto_ff.StarSetupData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_unlock_time();
  inline void clear_has_unlock_time();
  inline void set_has_guizhen_id();
  inline void clear_has_guizhen_id();
  inline void set_has_guizhen_status();
  inline void clear_has_guizhen_status();
  inline void set_has_star_num();
  inline void clear_has_star_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint64 unlock_time_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupHoleData > hole_data_;
  ::google::protobuf::uint32 guizhen_id_;
  ::google::protobuf::uint32 guizhen_status_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupStarAttrData > star_attr_;
  ::google::protobuf::uint32 star_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StarSetupData* default_instance_;
};
// -------------------------------------------------------------------

class StarSkillData : public ::google::protobuf::Message {
 public:
  StarSkillData();
  virtual ~StarSkillData();

  StarSkillData(const StarSkillData& from);

  inline StarSkillData& operator=(const StarSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StarSkillData& default_instance();

  void Swap(StarSkillData* other);

  // implements Message ----------------------------------------------

  StarSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StarSkillData& from);
  void MergeFrom(const StarSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional bool finish = 4;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 4;
  inline bool finish() const;
  inline void set_finish(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.StarSkillData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_finish();
  inline void clear_has_finish();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  bool finish_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StarSkillData* default_instance_;
};
// -------------------------------------------------------------------

class StarSkillSlotData : public ::google::protobuf::Message {
 public:
  StarSkillSlotData();
  virtual ~StarSkillSlotData();

  StarSkillSlotData(const StarSkillSlotData& from);

  inline StarSkillSlotData& operator=(const StarSkillSlotData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StarSkillSlotData& default_instance();

  void Swap(StarSkillSlotData* other);

  // implements Message ----------------------------------------------

  StarSkillSlotData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StarSkillSlotData& from);
  void MergeFrom(const StarSkillSlotData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot_id = 1;
  inline bool has_slot_id() const;
  inline void clear_slot_id();
  static const int kSlotIdFieldNumber = 1;
  inline ::google::protobuf::uint32 slot_id() const;
  inline void set_slot_id(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 cur_id = 3;
  inline bool has_cur_id() const;
  inline void clear_cur_id();
  static const int kCurIdFieldNumber = 3;
  inline ::google::protobuf::uint32 cur_id() const;
  inline void set_cur_id(::google::protobuf::uint32 value);

  // optional uint32 cur_end_time = 4;
  inline bool has_cur_end_time() const;
  inline void clear_cur_end_time();
  static const int kCurEndTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 cur_end_time() const;
  inline void set_cur_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StarSkillSlotData)
 private:
  inline void set_has_slot_id();
  inline void clear_has_slot_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_cur_id();
  inline void clear_has_cur_id();
  inline void set_has_cur_end_time();
  inline void clear_has_cur_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 slot_id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 cur_id_;
  ::google::protobuf::uint32 cur_end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StarSkillSlotData* default_instance_;
};
// -------------------------------------------------------------------

class StarShopData : public ::google::protobuf::Message {
 public:
  StarShopData();
  virtual ~StarShopData();

  StarShopData(const StarShopData& from);

  inline StarShopData& operator=(const StarShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StarShopData& default_instance();

  void Swap(StarShopData* other);

  // implements Message ----------------------------------------------

  StarShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StarShopData& from);
  void MergeFrom(const StarShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 buy_num = 2;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 2;
  inline ::google::protobuf::uint32 buy_num() const;
  inline void set_buy_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StarShopData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 buy_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StarShopData* default_instance_;
};
// -------------------------------------------------------------------

class StarData : public ::google::protobuf::Message {
 public:
  StarData();
  virtual ~StarData();

  StarData(const StarData& from);

  inline StarData& operator=(const StarData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StarData& default_instance();

  void Swap(StarData* other);

  // implements Message ----------------------------------------------

  StarData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StarData& from);
  void MergeFrom(const StarData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.StarSetupData setup_data = 1;
  inline int setup_data_size() const;
  inline void clear_setup_data();
  static const int kSetupDataFieldNumber = 1;
  inline const ::proto_ff::StarSetupData& setup_data(int index) const;
  inline ::proto_ff::StarSetupData* mutable_setup_data(int index);
  inline ::proto_ff::StarSetupData* add_setup_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupData >&
      setup_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupData >*
      mutable_setup_data();

  // repeated .proto_ff.StarFantasyData fantasy_data = 2;
  inline int fantasy_data_size() const;
  inline void clear_fantasy_data();
  static const int kFantasyDataFieldNumber = 2;
  inline const ::proto_ff::StarFantasyData& fantasy_data(int index) const;
  inline ::proto_ff::StarFantasyData* mutable_fantasy_data(int index);
  inline ::proto_ff::StarFantasyData* add_fantasy_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarFantasyData >&
      fantasy_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarFantasyData >*
      mutable_fantasy_data();

  // optional uint32 cur_fantasy_id = 3;
  inline bool has_cur_fantasy_id() const;
  inline void clear_cur_fantasy_id();
  static const int kCurFantasyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 cur_fantasy_id() const;
  inline void set_cur_fantasy_id(::google::protobuf::uint32 value);

  // repeated .proto_ff.StarSkillData skill_data = 4;
  inline int skill_data_size() const;
  inline void clear_skill_data();
  static const int kSkillDataFieldNumber = 4;
  inline const ::proto_ff::StarSkillData& skill_data(int index) const;
  inline ::proto_ff::StarSkillData* mutable_skill_data(int index);
  inline ::proto_ff::StarSkillData* add_skill_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSkillData >&
      skill_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSkillData >*
      mutable_skill_data();

  // repeated .proto_ff.StarSkillSlotData skill_slot_data = 5;
  inline int skill_slot_data_size() const;
  inline void clear_skill_slot_data();
  static const int kSkillSlotDataFieldNumber = 5;
  inline const ::proto_ff::StarSkillSlotData& skill_slot_data(int index) const;
  inline ::proto_ff::StarSkillSlotData* mutable_skill_slot_data(int index);
  inline ::proto_ff::StarSkillSlotData* add_skill_slot_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSkillSlotData >&
      skill_slot_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSkillSlotData >*
      mutable_skill_slot_data();

  // repeated .proto_ff.StarShopData shop_data = 6;
  inline int shop_data_size() const;
  inline void clear_shop_data();
  static const int kShopDataFieldNumber = 6;
  inline const ::proto_ff::StarShopData& shop_data(int index) const;
  inline ::proto_ff::StarShopData* mutable_shop_data(int index);
  inline ::proto_ff::StarShopData* add_shop_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarShopData >&
      shop_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarShopData >*
      mutable_shop_data();

  // optional uint64 last_shop_refresh_time = 7;
  inline bool has_last_shop_refresh_time() const;
  inline void clear_last_shop_refresh_time();
  static const int kLastShopRefreshTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 last_shop_refresh_time() const;
  inline void set_last_shop_refresh_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StarData)
 private:
  inline void set_has_cur_fantasy_id();
  inline void clear_has_cur_fantasy_id();
  inline void set_has_last_shop_refresh_time();
  inline void clear_has_last_shop_refresh_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupData > setup_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::StarFantasyData > fantasy_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSkillData > skill_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSkillSlotData > skill_slot_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::StarShopData > shop_data_;
  ::google::protobuf::uint64 last_shop_refresh_time_;
  ::google::protobuf::uint32 cur_fantasy_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StarData* default_instance_;
};
// -------------------------------------------------------------------

class TurnSlot : public ::google::protobuf::Message {
 public:
  TurnSlot();
  virtual ~TurnSlot();

  TurnSlot(const TurnSlot& from);

  inline TurnSlot& operator=(const TurnSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnSlot& default_instance();

  void Swap(TurnSlot* other);

  // implements Message ----------------------------------------------

  TurnSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnSlot& from);
  void MergeFrom(const TurnSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stronglv = 1;
  inline bool has_stronglv() const;
  inline void clear_stronglv();
  static const int kStronglvFieldNumber = 1;
  inline ::google::protobuf::int32 stronglv() const;
  inline void set_stronglv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnSlot)
 private:
  inline void set_has_stronglv();
  inline void clear_has_stronglv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stronglv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TurnSlot* default_instance_;
};
// -------------------------------------------------------------------

class TurnGrow : public ::google::protobuf::Message {
 public:
  TurnGrow();
  virtual ~TurnGrow();

  TurnGrow(const TurnGrow& from);

  inline TurnGrow& operator=(const TurnGrow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnGrow& default_instance();

  void Swap(TurnGrow* other);

  // implements Message ----------------------------------------------

  TurnGrow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnGrow& from);
  void MergeFrom(const TurnGrow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional .proto_ff.ItemProtoInfo equip = 2;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 2;
  inline const ::proto_ff::ItemProtoInfo& equip() const;
  inline ::proto_ff::ItemProtoInfo* mutable_equip();
  inline ::proto_ff::ItemProtoInfo* release_equip();
  inline void set_allocated_equip(::proto_ff::ItemProtoInfo* equip);

  // optional .proto_ff.TurnSlot slot = 3;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 3;
  inline const ::proto_ff::TurnSlot& slot() const;
  inline ::proto_ff::TurnSlot* mutable_slot();
  inline ::proto_ff::TurnSlot* release_slot();
  inline void set_allocated_slot(::proto_ff::TurnSlot* slot);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnGrow)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_equip();
  inline void clear_has_equip();
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::ItemProtoInfo* equip_;
  ::proto_ff::TurnSlot* slot_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TurnGrow* default_instance_;
};
// -------------------------------------------------------------------

class TurnEntry : public ::google::protobuf::Message {
 public:
  TurnEntry();
  virtual ~TurnEntry();

  TurnEntry(const TurnEntry& from);

  inline TurnEntry& operator=(const TurnEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnEntry& default_instance();

  void Swap(TurnEntry* other);

  // implements Message ----------------------------------------------

  TurnEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnEntry& from);
  void MergeFrom(const TurnEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // repeated .proto_ff.TurnGrow infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::proto_ff::TurnGrow& infos(int index) const;
  inline ::proto_ff::TurnGrow* mutable_infos(int index);
  inline ::proto_ff::TurnGrow* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnGrow >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnGrow >*
      mutable_infos();

  // repeated int32 strong_ids = 3;
  inline int strong_ids_size() const;
  inline void clear_strong_ids();
  static const int kStrongIdsFieldNumber = 3;
  inline ::google::protobuf::int32 strong_ids(int index) const;
  inline void set_strong_ids(int index, ::google::protobuf::int32 value);
  inline void add_strong_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      strong_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_strong_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.TurnEntry)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnGrow > infos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > strong_ids_;
  ::google::protobuf::int32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TurnEntry* default_instance_;
};
// -------------------------------------------------------------------

class TurnSimple : public ::google::protobuf::Message {
 public:
  TurnSimple();
  virtual ~TurnSimple();

  TurnSimple(const TurnSimple& from);

  inline TurnSimple& operator=(const TurnSimple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnSimple& default_instance();

  void Swap(TurnSimple* other);

  // implements Message ----------------------------------------------

  TurnSimple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnSimple& from);
  void MergeFrom(const TurnSimple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 turn_lv = 1;
  inline bool has_turn_lv() const;
  inline void clear_turn_lv();
  static const int kTurnLvFieldNumber = 1;
  inline ::google::protobuf::int32 turn_lv() const;
  inline void set_turn_lv(::google::protobuf::int32 value);

  // optional int32 cur_lv = 2;
  inline bool has_cur_lv() const;
  inline void clear_cur_lv();
  static const int kCurLvFieldNumber = 2;
  inline ::google::protobuf::int32 cur_lv() const;
  inline void set_cur_lv(::google::protobuf::int32 value);

  // optional uint64 cur_exp = 3;
  inline bool has_cur_exp() const;
  inline void clear_cur_exp();
  static const int kCurExpFieldNumber = 3;
  inline ::google::protobuf::uint64 cur_exp() const;
  inline void set_cur_exp(::google::protobuf::uint64 value);

  // optional int32 failed_add = 4;
  inline bool has_failed_add() const;
  inline void clear_failed_add();
  static const int kFailedAddFieldNumber = 4;
  inline ::google::protobuf::int32 failed_add() const;
  inline void set_failed_add(::google::protobuf::int32 value);

  // optional int32 day_turn_num = 5;
  inline bool has_day_turn_num() const;
  inline void clear_day_turn_num();
  static const int kDayTurnNumFieldNumber = 5;
  inline ::google::protobuf::int32 day_turn_num() const;
  inline void set_day_turn_num(::google::protobuf::int32 value);

  // optional int32 active_all_star_id = 6;
  inline bool has_active_all_star_id() const;
  inline void clear_active_all_star_id();
  static const int kActiveAllStarIdFieldNumber = 6;
  inline ::google::protobuf::int32 active_all_star_id() const;
  inline void set_active_all_star_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnSimple)
 private:
  inline void set_has_turn_lv();
  inline void clear_has_turn_lv();
  inline void set_has_cur_lv();
  inline void clear_has_cur_lv();
  inline void set_has_cur_exp();
  inline void clear_has_cur_exp();
  inline void set_has_failed_add();
  inline void clear_has_failed_add();
  inline void set_has_day_turn_num();
  inline void clear_has_day_turn_num();
  inline void set_has_active_all_star_id();
  inline void clear_has_active_all_star_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 turn_lv_;
  ::google::protobuf::int32 cur_lv_;
  ::google::protobuf::uint64 cur_exp_;
  ::google::protobuf::int32 failed_add_;
  ::google::protobuf::int32 day_turn_num_;
  ::google::protobuf::int32 active_all_star_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TurnSimple* default_instance_;
};
// -------------------------------------------------------------------

class TurnHelper : public ::google::protobuf::Message {
 public:
  TurnHelper();
  virtual ~TurnHelper();

  TurnHelper(const TurnHelper& from);

  inline TurnHelper& operator=(const TurnHelper& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnHelper& default_instance();

  void Swap(TurnHelper* other);

  // implements Message ----------------------------------------------

  TurnHelper* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnHelper& from);
  void MergeFrom(const TurnHelper& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnHelper)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TurnHelper* default_instance_;
};
// -------------------------------------------------------------------

class TurnTask : public ::google::protobuf::Message {
 public:
  TurnTask();
  virtual ~TurnTask();

  TurnTask(const TurnTask& from);

  inline TurnTask& operator=(const TurnTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnTask& default_instance();

  void Swap(TurnTask* other);

  // implements Message ----------------------------------------------

  TurnTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnTask& from);
  void MergeFrom(const TurnTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnTask)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TurnTask* default_instance_;
};
// -------------------------------------------------------------------

class FMarryTask : public ::google::protobuf::Message {
 public:
  FMarryTask();
  virtual ~FMarryTask();

  FMarryTask(const FMarryTask& from);

  inline FMarryTask& operator=(const FMarryTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FMarryTask& default_instance();

  void Swap(FMarryTask* other);

  // implements Message ----------------------------------------------

  FMarryTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FMarryTask& from);
  void MergeFrom(const FMarryTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::int32 val() const;
  inline void set_val(::google::protobuf::int32 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FMarryTask)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_val();
  inline void clear_has_val();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 val_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FMarryTask* default_instance_;
};
// -------------------------------------------------------------------

class SoulEntry : public ::google::protobuf::Message {
 public:
  SoulEntry();
  virtual ~SoulEntry();

  SoulEntry(const SoulEntry& from);

  inline SoulEntry& operator=(const SoulEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulEntry& default_instance();

  void Swap(SoulEntry* other);

  // implements Message ----------------------------------------------

  SoulEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulEntry& from);
  void MergeFrom(const SoulEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 steplv = 3;
  inline bool has_steplv() const;
  inline void clear_steplv();
  static const int kSteplvFieldNumber = 3;
  inline ::google::protobuf::int32 steplv() const;
  inline void set_steplv(::google::protobuf::int32 value);

  // optional int32 auto_skill = 4;
  inline bool has_auto_skill() const;
  inline void clear_auto_skill();
  static const int kAutoSkillFieldNumber = 4;
  inline ::google::protobuf::int32 auto_skill() const;
  inline void set_auto_skill(::google::protobuf::int32 value);

  // optional int32 quality_prot = 5;
  inline bool has_quality_prot() const;
  inline void clear_quality_prot();
  static const int kQualityProtFieldNumber = 5;
  inline ::google::protobuf::int32 quality_prot() const;
  inline void set_quality_prot(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulEntry)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_steplv();
  inline void clear_has_steplv();
  inline void set_has_auto_skill();
  inline void clear_has_auto_skill();
  inline void set_has_quality_prot();
  inline void clear_has_quality_prot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 steplv_;
  ::google::protobuf::int32 auto_skill_;
  ::google::protobuf::int32 quality_prot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SoulEntry* default_instance_;
};
// -------------------------------------------------------------------

class SoulSpirit : public ::google::protobuf::Message {
 public:
  SoulSpirit();
  virtual ~SoulSpirit();

  SoulSpirit(const SoulSpirit& from);

  inline SoulSpirit& operator=(const SoulSpirit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulSpirit& default_instance();

  void Swap(SoulSpirit* other);

  // implements Message ----------------------------------------------

  SoulSpirit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulSpirit& from);
  void MergeFrom(const SoulSpirit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot_pos = 1;
  inline bool has_slot_pos() const;
  inline void clear_slot_pos();
  static const int kSlotPosFieldNumber = 1;
  inline ::google::protobuf::int32 slot_pos() const;
  inline void set_slot_pos(::google::protobuf::int32 value);

  // optional int32 bag_pos = 2;
  inline bool has_bag_pos() const;
  inline void clear_bag_pos();
  static const int kBagPosFieldNumber = 2;
  inline ::google::protobuf::int32 bag_pos() const;
  inline void set_bag_pos(::google::protobuf::int32 value);

  // optional int32 strong_lv = 3;
  inline bool has_strong_lv() const;
  inline void clear_strong_lv();
  static const int kStrongLvFieldNumber = 3;
  inline ::google::protobuf::int32 strong_lv() const;
  inline void set_strong_lv(::google::protobuf::int32 value);

  // optional int32 break_lv = 4;
  inline bool has_break_lv() const;
  inline void clear_break_lv();
  static const int kBreakLvFieldNumber = 4;
  inline ::google::protobuf::int32 break_lv() const;
  inline void set_break_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulSpirit)
 private:
  inline void set_has_slot_pos();
  inline void clear_has_slot_pos();
  inline void set_has_bag_pos();
  inline void clear_has_bag_pos();
  inline void set_has_strong_lv();
  inline void clear_has_strong_lv();
  inline void set_has_break_lv();
  inline void clear_has_break_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_pos_;
  ::google::protobuf::int32 bag_pos_;
  ::google::protobuf::int32 strong_lv_;
  ::google::protobuf::int32 break_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SoulSpirit* default_instance_;
};
// -------------------------------------------------------------------

class SoulBone : public ::google::protobuf::Message {
 public:
  SoulBone();
  virtual ~SoulBone();

  SoulBone(const SoulBone& from);

  inline SoulBone& operator=(const SoulBone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulBone& default_instance();

  void Swap(SoulBone* other);

  // implements Message ----------------------------------------------

  SoulBone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulBone& from);
  void MergeFrom(const SoulBone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot_pos = 1;
  inline bool has_slot_pos() const;
  inline void clear_slot_pos();
  static const int kSlotPosFieldNumber = 1;
  inline ::google::protobuf::int32 slot_pos() const;
  inline void set_slot_pos(::google::protobuf::int32 value);

  // optional int32 bag_pos = 2;
  inline bool has_bag_pos() const;
  inline void clear_bag_pos();
  static const int kBagPosFieldNumber = 2;
  inline ::google::protobuf::int32 bag_pos() const;
  inline void set_bag_pos(::google::protobuf::int32 value);

  // optional int32 is_wake = 3;
  inline bool has_is_wake() const;
  inline void clear_is_wake();
  static const int kIsWakeFieldNumber = 3;
  inline ::google::protobuf::int32 is_wake() const;
  inline void set_is_wake(::google::protobuf::int32 value);

  // optional int32 progress = 4;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 4;
  inline ::google::protobuf::int32 progress() const;
  inline void set_progress(::google::protobuf::int32 value);

  // optional int32 wake_lv = 5;
  inline bool has_wake_lv() const;
  inline void clear_wake_lv();
  static const int kWakeLvFieldNumber = 5;
  inline ::google::protobuf::int32 wake_lv() const;
  inline void set_wake_lv(::google::protobuf::int32 value);

  // optional int32 fix_id = 6;
  inline bool has_fix_id() const;
  inline void clear_fix_id();
  static const int kFixIdFieldNumber = 6;
  inline ::google::protobuf::int32 fix_id() const;
  inline void set_fix_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulBone)
 private:
  inline void set_has_slot_pos();
  inline void clear_has_slot_pos();
  inline void set_has_bag_pos();
  inline void clear_has_bag_pos();
  inline void set_has_is_wake();
  inline void clear_has_is_wake();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_wake_lv();
  inline void clear_has_wake_lv();
  inline void set_has_fix_id();
  inline void clear_has_fix_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_pos_;
  ::google::protobuf::int32 bag_pos_;
  ::google::protobuf::int32 is_wake_;
  ::google::protobuf::int32 progress_;
  ::google::protobuf::int32 wake_lv_;
  ::google::protobuf::int32 fix_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SoulBone* default_instance_;
};
// -------------------------------------------------------------------

class SoulGuwen : public ::google::protobuf::Message {
 public:
  SoulGuwen();
  virtual ~SoulGuwen();

  SoulGuwen(const SoulGuwen& from);

  inline SoulGuwen& operator=(const SoulGuwen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulGuwen& default_instance();

  void Swap(SoulGuwen* other);

  // implements Message ----------------------------------------------

  SoulGuwen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulGuwen& from);
  void MergeFrom(const SoulGuwen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 suit_id = 1;
  inline bool has_suit_id() const;
  inline void clear_suit_id();
  static const int kSuitIdFieldNumber = 1;
  inline ::google::protobuf::int32 suit_id() const;
  inline void set_suit_id(::google::protobuf::int32 value);

  // optional int32 bone_pos = 2;
  inline bool has_bone_pos() const;
  inline void clear_bone_pos();
  static const int kBonePosFieldNumber = 2;
  inline ::google::protobuf::int32 bone_pos() const;
  inline void set_bone_pos(::google::protobuf::int32 value);

  // optional int32 slot_pos = 3;
  inline bool has_slot_pos() const;
  inline void clear_slot_pos();
  static const int kSlotPosFieldNumber = 3;
  inline ::google::protobuf::int32 slot_pos() const;
  inline void set_slot_pos(::google::protobuf::int32 value);

  // optional int32 bag_pos = 4;
  inline bool has_bag_pos() const;
  inline void clear_bag_pos();
  static const int kBagPosFieldNumber = 4;
  inline ::google::protobuf::int32 bag_pos() const;
  inline void set_bag_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulGuwen)
 private:
  inline void set_has_suit_id();
  inline void clear_has_suit_id();
  inline void set_has_bone_pos();
  inline void clear_has_bone_pos();
  inline void set_has_slot_pos();
  inline void clear_has_slot_pos();
  inline void set_has_bag_pos();
  inline void clear_has_bag_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 suit_id_;
  ::google::protobuf::int32 bone_pos_;
  ::google::protobuf::int32 slot_pos_;
  ::google::protobuf::int32 bag_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SoulGuwen* default_instance_;
};
// -------------------------------------------------------------------

class SoulPool : public ::google::protobuf::Message {
 public:
  SoulPool();
  virtual ~SoulPool();

  SoulPool(const SoulPool& from);

  inline SoulPool& operator=(const SoulPool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulPool& default_instance();

  void Swap(SoulPool* other);

  // implements Message ----------------------------------------------

  SoulPool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulPool& from);
  void MergeFrom(const SoulPool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 poolBlessLv = 1;
  inline bool has_poolblesslv() const;
  inline void clear_poolblesslv();
  static const int kPoolBlessLvFieldNumber = 1;
  inline ::google::protobuf::int32 poolblesslv() const;
  inline void set_poolblesslv(::google::protobuf::int32 value);

  // optional int32 poolPgLv = 2;
  inline bool has_poolpglv() const;
  inline void clear_poolpglv();
  static const int kPoolPgLvFieldNumber = 2;
  inline ::google::protobuf::int32 poolpglv() const;
  inline void set_poolpglv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulPool)
 private:
  inline void set_has_poolblesslv();
  inline void clear_has_poolblesslv();
  inline void set_has_poolpglv();
  inline void clear_has_poolpglv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 poolblesslv_;
  ::google::protobuf::int32 poolpglv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SoulPool* default_instance_;
};
// -------------------------------------------------------------------

class MoFaEquipProtoInfo : public ::google::protobuf::Message {
 public:
  MoFaEquipProtoInfo();
  virtual ~MoFaEquipProtoInfo();

  MoFaEquipProtoInfo(const MoFaEquipProtoInfo& from);

  inline MoFaEquipProtoInfo& operator=(const MoFaEquipProtoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoFaEquipProtoInfo& default_instance();

  void Swap(MoFaEquipProtoInfo* other);

  // implements Message ----------------------------------------------

  MoFaEquipProtoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoFaEquipProtoInfo& from);
  void MergeFrom(const MoFaEquipProtoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.ItemProtoInfo equip = 1;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 1;
  inline const ::proto_ff::ItemProtoInfo& equip() const;
  inline ::proto_ff::ItemProtoInfo* mutable_equip();
  inline ::proto_ff::ItemProtoInfo* release_equip();
  inline void set_allocated_equip(::proto_ff::ItemProtoInfo* equip);

  // optional uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MoFaEquipProtoInfo)
 private:
  inline void set_has_equip();
  inline void clear_has_equip();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::ItemProtoInfo* equip_;
  ::google::protobuf::uint32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MoFaEquipProtoInfo* default_instance_;
};
// -------------------------------------------------------------------

class MoFaEquipInfo : public ::google::protobuf::Message {
 public:
  MoFaEquipInfo();
  virtual ~MoFaEquipInfo();

  MoFaEquipInfo(const MoFaEquipInfo& from);

  inline MoFaEquipInfo& operator=(const MoFaEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoFaEquipInfo& default_instance();

  void Swap(MoFaEquipInfo* other);

  // implements Message ----------------------------------------------

  MoFaEquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoFaEquipInfo& from);
  void MergeFrom(const MoFaEquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // repeated .proto_ff.MoFaEquipProtoInfo equip = 2;
  inline int equip_size() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 2;
  inline const ::proto_ff::MoFaEquipProtoInfo& equip(int index) const;
  inline ::proto_ff::MoFaEquipProtoInfo* mutable_equip(int index);
  inline ::proto_ff::MoFaEquipProtoInfo* add_equip();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MoFaEquipProtoInfo >&
      equip() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MoFaEquipProtoInfo >*
      mutable_equip();

  // optional .proto_ff.EquipSlotInfo slot = 3;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 3;
  inline const ::proto_ff::EquipSlotInfo& slot() const;
  inline ::proto_ff::EquipSlotInfo* mutable_slot();
  inline ::proto_ff::EquipSlotInfo* release_slot();
  inline void set_allocated_slot(::proto_ff::EquipSlotInfo* slot);

  // optional uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional bool is_zufu = 5;
  inline bool has_is_zufu() const;
  inline void clear_is_zufu();
  static const int kIsZufuFieldNumber = 5;
  inline bool is_zufu() const;
  inline void set_is_zufu(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.MoFaEquipInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_is_zufu();
  inline void clear_has_is_zufu();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::MoFaEquipProtoInfo > equip_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::uint32 status_;
  ::proto_ff::EquipSlotInfo* slot_;
  bool is_zufu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MoFaEquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class RuneWordInfo : public ::google::protobuf::Message {
 public:
  RuneWordInfo();
  virtual ~RuneWordInfo();

  RuneWordInfo(const RuneWordInfo& from);

  inline RuneWordInfo& operator=(const RuneWordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RuneWordInfo& default_instance();

  void Swap(RuneWordInfo* other);

  // implements Message ----------------------------------------------

  RuneWordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RuneWordInfo& from);
  void MergeFrom(const RuneWordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 word_pos = 1;
  inline bool has_word_pos() const;
  inline void clear_word_pos();
  static const int kWordPosFieldNumber = 1;
  inline ::google::protobuf::int32 word_pos() const;
  inline void set_word_pos(::google::protobuf::int32 value);

  // optional int32 fengyin_flag = 2;
  inline bool has_fengyin_flag() const;
  inline void clear_fengyin_flag();
  static const int kFengyinFlagFieldNumber = 2;
  inline ::google::protobuf::int32 fengyin_flag() const;
  inline void set_fengyin_flag(::google::protobuf::int32 value);

  // optional int32 word_item = 3;
  inline bool has_word_item() const;
  inline void clear_word_item();
  static const int kWordItemFieldNumber = 3;
  inline ::google::protobuf::int32 word_item() const;
  inline void set_word_item(::google::protobuf::int32 value);

  // optional int32 word_star = 4;
  inline bool has_word_star() const;
  inline void clear_word_star();
  static const int kWordStarFieldNumber = 4;
  inline ::google::protobuf::int32 word_star() const;
  inline void set_word_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RuneWordInfo)
 private:
  inline void set_has_word_pos();
  inline void clear_has_word_pos();
  inline void set_has_fengyin_flag();
  inline void clear_has_fengyin_flag();
  inline void set_has_word_item();
  inline void clear_has_word_item();
  inline void set_has_word_star();
  inline void clear_has_word_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 word_pos_;
  ::google::protobuf::int32 fengyin_flag_;
  ::google::protobuf::int32 word_item_;
  ::google::protobuf::int32 word_star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RuneWordInfo* default_instance_;
};
// -------------------------------------------------------------------

class RuneSlot : public ::google::protobuf::Message {
 public:
  RuneSlot();
  virtual ~RuneSlot();

  RuneSlot(const RuneSlot& from);

  inline RuneSlot& operator=(const RuneSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RuneSlot& default_instance();

  void Swap(RuneSlot* other);

  // implements Message ----------------------------------------------

  RuneSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RuneSlot& from);
  void MergeFrom(const RuneSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot_pos = 1;
  inline bool has_slot_pos() const;
  inline void clear_slot_pos();
  static const int kSlotPosFieldNumber = 1;
  inline ::google::protobuf::int32 slot_pos() const;
  inline void set_slot_pos(::google::protobuf::int32 value);

  // optional .proto_ff.ItemProtoInfo rune = 2;
  inline bool has_rune() const;
  inline void clear_rune();
  static const int kRuneFieldNumber = 2;
  inline const ::proto_ff::ItemProtoInfo& rune() const;
  inline ::proto_ff::ItemProtoInfo* mutable_rune();
  inline ::proto_ff::ItemProtoInfo* release_rune();
  inline void set_allocated_rune(::proto_ff::ItemProtoInfo* rune);

  // repeated .proto_ff.RuneWordInfo words = 3;
  inline int words_size() const;
  inline void clear_words();
  static const int kWordsFieldNumber = 3;
  inline const ::proto_ff::RuneWordInfo& words(int index) const;
  inline ::proto_ff::RuneWordInfo* mutable_words(int index);
  inline ::proto_ff::RuneWordInfo* add_words();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RuneWordInfo >&
      words() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RuneWordInfo >*
      mutable_words();

  // @@protoc_insertion_point(class_scope:proto_ff.RuneSlot)
 private:
  inline void set_has_slot_pos();
  inline void clear_has_slot_pos();
  inline void set_has_rune();
  inline void clear_has_rune();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::ItemProtoInfo* rune_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RuneWordInfo > words_;
  ::google::protobuf::int32 slot_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RuneSlot* default_instance_;
};
// -------------------------------------------------------------------

class RuneEntry : public ::google::protobuf::Message {
 public:
  RuneEntry();
  virtual ~RuneEntry();

  RuneEntry(const RuneEntry& from);

  inline RuneEntry& operator=(const RuneEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RuneEntry& default_instance();

  void Swap(RuneEntry* other);

  // implements Message ----------------------------------------------

  RuneEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RuneEntry& from);
  void MergeFrom(const RuneEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 equip_pos = 1;
  inline bool has_equip_pos() const;
  inline void clear_equip_pos();
  static const int kEquipPosFieldNumber = 1;
  inline ::google::protobuf::int32 equip_pos() const;
  inline void set_equip_pos(::google::protobuf::int32 value);

  // repeated .proto_ff.RuneSlot slots = 2;
  inline int slots_size() const;
  inline void clear_slots();
  static const int kSlotsFieldNumber = 2;
  inline const ::proto_ff::RuneSlot& slots(int index) const;
  inline ::proto_ff::RuneSlot* mutable_slots(int index);
  inline ::proto_ff::RuneSlot* add_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RuneSlot >&
      slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RuneSlot >*
      mutable_slots();

  // optional int32 bd_id = 3;
  inline bool has_bd_id() const;
  inline void clear_bd_id();
  static const int kBdIdFieldNumber = 3;
  inline ::google::protobuf::int32 bd_id() const;
  inline void set_bd_id(::google::protobuf::int32 value);

  // optional int32 jueji_id = 4;
  inline bool has_jueji_id() const;
  inline void clear_jueji_id();
  static const int kJuejiIdFieldNumber = 4;
  inline ::google::protobuf::int32 jueji_id() const;
  inline void set_jueji_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RuneEntry)
 private:
  inline void set_has_equip_pos();
  inline void clear_has_equip_pos();
  inline void set_has_bd_id();
  inline void clear_has_bd_id();
  inline void set_has_jueji_id();
  inline void clear_has_jueji_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::RuneSlot > slots_;
  ::google::protobuf::int32 equip_pos_;
  ::google::protobuf::int32 bd_id_;
  ::google::protobuf::int32 jueji_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RuneEntry* default_instance_;
};
// -------------------------------------------------------------------

class FestBossProto : public ::google::protobuf::Message {
 public:
  FestBossProto();
  virtual ~FestBossProto();

  FestBossProto(const FestBossProto& from);

  inline FestBossProto& operator=(const FestBossProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestBossProto& default_instance();

  void Swap(FestBossProto* other);

  // implements Message ----------------------------------------------

  FestBossProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestBossProto& from);
  void MergeFrom(const FestBossProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tplid = 1;
  inline bool has_tplid() const;
  inline void clear_tplid();
  static const int kTplidFieldNumber = 1;
  inline ::google::protobuf::int32 tplid() const;
  inline void set_tplid(::google::protobuf::int32 value);

  // optional uint64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestBossProto)
 private:
  inline void set_has_tplid();
  inline void clear_has_tplid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 tplid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FestBossProto* default_instance_;
};
// -------------------------------------------------------------------

class NGTBoxOpened : public ::google::protobuf::Message {
 public:
  NGTBoxOpened();
  virtual ~NGTBoxOpened();

  NGTBoxOpened(const NGTBoxOpened& from);

  inline NGTBoxOpened& operator=(const NGTBoxOpened& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NGTBoxOpened& default_instance();

  void Swap(NGTBoxOpened* other);

  // implements Message ----------------------------------------------

  NGTBoxOpened* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NGTBoxOpened& from);
  void MergeFrom(const NGTBoxOpened& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // required uint32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 itemIdx = 3;
  inline bool has_itemidx() const;
  inline void clear_itemidx();
  static const int kItemIdxFieldNumber = 3;
  inline ::google::protobuf::uint32 itemidx() const;
  inline void set_itemidx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NGTBoxOpened)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemidx();
  inline void clear_has_itemidx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 idx_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemidx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NGTBoxOpened* default_instance_;
};
// -------------------------------------------------------------------

class NGTBoxItem : public ::google::protobuf::Message {
 public:
  NGTBoxItem();
  virtual ~NGTBoxItem();

  NGTBoxItem(const NGTBoxItem& from);

  inline NGTBoxItem& operator=(const NGTBoxItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NGTBoxItem& default_instance();

  void Swap(NGTBoxItem* other);

  // implements Message ----------------------------------------------

  NGTBoxItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NGTBoxItem& from);
  void MergeFrom(const NGTBoxItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // required uint32 itemCount = 2;
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemCountFieldNumber = 2;
  inline ::google::protobuf::uint32 itemcount() const;
  inline void set_itemcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NGTBoxItem)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemcount();
  inline void clear_has_itemcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NGTBoxItem* default_instance_;
};
// -------------------------------------------------------------------

class NGStorePurchaseLog : public ::google::protobuf::Message {
 public:
  NGStorePurchaseLog();
  virtual ~NGStorePurchaseLog();

  NGStorePurchaseLog(const NGStorePurchaseLog& from);

  inline NGStorePurchaseLog& operator=(const NGStorePurchaseLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NGStorePurchaseLog& default_instance();

  void Swap(NGStorePurchaseLog* other);

  // implements Message ----------------------------------------------

  NGStorePurchaseLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NGStorePurchaseLog& from);
  void MergeFrom(const NGStorePurchaseLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cfgId = 1;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cfgid() const;
  inline void set_cfgid(::google::protobuf::uint32 value);

  // required uint32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NGStorePurchaseLog)
 private:
  inline void set_has_cfgid();
  inline void clear_has_cfgid();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cfgid_;
  ::google::protobuf::uint32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NGStorePurchaseLog* default_instance_;
};
// -------------------------------------------------------------------

class NGDbDatas : public ::google::protobuf::Message {
 public:
  NGDbDatas();
  virtual ~NGDbDatas();

  NGDbDatas(const NGDbDatas& from);

  inline NGDbDatas& operator=(const NGDbDatas& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NGDbDatas& default_instance();

  void Swap(NGDbDatas* other);

  // implements Message ----------------------------------------------

  NGDbDatas* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NGDbDatas& from);
  void MergeFrom(const NGDbDatas& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 layers = 1;
  inline bool has_layers() const;
  inline void clear_layers();
  static const int kLayersFieldNumber = 1;
  inline ::google::protobuf::uint32 layers() const;
  inline void set_layers(::google::protobuf::uint32 value);

  // repeated .proto_ff.NGTBoxOpened openedList = 2;
  inline int openedlist_size() const;
  inline void clear_openedlist();
  static const int kOpenedListFieldNumber = 2;
  inline const ::proto_ff::NGTBoxOpened& openedlist(int index) const;
  inline ::proto_ff::NGTBoxOpened* mutable_openedlist(int index);
  inline ::proto_ff::NGTBoxOpened* add_openedlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::NGTBoxOpened >&
      openedlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::NGTBoxOpened >*
      mutable_openedlist();

  // optional uint64 weekTime = 3;
  inline bool has_weektime() const;
  inline void clear_weektime();
  static const int kWeekTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 weektime() const;
  inline void set_weektime(::google::protobuf::uint64 value);

  // optional uint32 battleWeekTimes = 4;
  inline bool has_battleweektimes() const;
  inline void clear_battleweektimes();
  static const int kBattleWeekTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 battleweektimes() const;
  inline void set_battleweektimes(::google::protobuf::uint32 value);

  // optional uint64 battleId = 5;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIdFieldNumber = 5;
  inline ::google::protobuf::uint64 battleid() const;
  inline void set_battleid(::google::protobuf::uint64 value);

  // repeated .proto_ff.NGTBoxItem itemsLog = 6;
  inline int itemslog_size() const;
  inline void clear_itemslog();
  static const int kItemsLogFieldNumber = 6;
  inline const ::proto_ff::NGTBoxItem& itemslog(int index) const;
  inline ::proto_ff::NGTBoxItem* mutable_itemslog(int index);
  inline ::proto_ff::NGTBoxItem* add_itemslog();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::NGTBoxItem >&
      itemslog() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::NGTBoxItem >*
      mutable_itemslog();

  // optional uint32 privilege = 7;
  inline bool has_privilege() const;
  inline void clear_privilege();
  static const int kPrivilegeFieldNumber = 7;
  inline ::google::protobuf::uint32 privilege() const;
  inline void set_privilege(::google::protobuf::uint32 value);

  // repeated uint32 privilegeRecvLog = 8;
  inline int privilegerecvlog_size() const;
  inline void clear_privilegerecvlog();
  static const int kPrivilegeRecvLogFieldNumber = 8;
  inline ::google::protobuf::uint32 privilegerecvlog(int index) const;
  inline void set_privilegerecvlog(int index, ::google::protobuf::uint32 value);
  inline void add_privilegerecvlog(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      privilegerecvlog() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_privilegerecvlog();

  // repeated .proto_ff.NGStorePurchaseLog storePurchaseLog = 9;
  inline int storepurchaselog_size() const;
  inline void clear_storepurchaselog();
  static const int kStorePurchaseLogFieldNumber = 9;
  inline const ::proto_ff::NGStorePurchaseLog& storepurchaselog(int index) const;
  inline ::proto_ff::NGStorePurchaseLog* mutable_storepurchaselog(int index);
  inline ::proto_ff::NGStorePurchaseLog* add_storepurchaselog();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::NGStorePurchaseLog >&
      storepurchaselog() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::NGStorePurchaseLog >*
      mutable_storepurchaselog();

  // optional uint32 payAcc = 10;
  inline bool has_payacc() const;
  inline void clear_payacc();
  static const int kPayAccFieldNumber = 10;
  inline ::google::protobuf::uint32 payacc() const;
  inline void set_payacc(::google::protobuf::uint32 value);

  // repeated uint32 payAccRecvLog = 11;
  inline int payaccrecvlog_size() const;
  inline void clear_payaccrecvlog();
  static const int kPayAccRecvLogFieldNumber = 11;
  inline ::google::protobuf::uint32 payaccrecvlog(int index) const;
  inline void set_payaccrecvlog(int index, ::google::protobuf::uint32 value);
  inline void add_payaccrecvlog(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      payaccrecvlog() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_payaccrecvlog();

  // @@protoc_insertion_point(class_scope:proto_ff.NGDbDatas)
 private:
  inline void set_has_layers();
  inline void clear_has_layers();
  inline void set_has_weektime();
  inline void clear_has_weektime();
  inline void set_has_battleweektimes();
  inline void clear_has_battleweektimes();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_privilege();
  inline void clear_has_privilege();
  inline void set_has_payacc();
  inline void clear_has_payacc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::NGTBoxOpened > openedlist_;
  ::google::protobuf::uint32 layers_;
  ::google::protobuf::uint32 battleweektimes_;
  ::google::protobuf::uint64 weektime_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::NGTBoxItem > itemslog_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > privilegerecvlog_;
  ::google::protobuf::uint32 privilege_;
  ::google::protobuf::uint32 payacc_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::NGStorePurchaseLog > storepurchaselog_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > payaccrecvlog_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NGDbDatas* default_instance_;
};
// ===================================================================


// ===================================================================

// EmptyMessage

// -------------------------------------------------------------------

// ComPair

// optional uint32 key = 1;
inline bool ComPair::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComPair::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComPair::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComPair::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ComPair::key() const {
  return key_;
}
inline void ComPair::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// optional uint32 value = 2;
inline bool ComPair::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComPair::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComPair::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComPair::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ComPair::value() const {
  return value_;
}
inline void ComPair::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ComPair64

// optional uint64 key = 1;
inline bool ComPair64::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComPair64::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComPair64::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComPair64::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::uint64 ComPair64::key() const {
  return key_;
}
inline void ComPair64::set_key(::google::protobuf::uint64 value) {
  set_has_key();
  key_ = value;
}

// optional uint64 value = 2;
inline bool ComPair64::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComPair64::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComPair64::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComPair64::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 ComPair64::value() const {
  return value_;
}
inline void ComPair64::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ComPairBool

// optional uint32 key = 1;
inline bool ComPairBool::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComPairBool::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComPairBool::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComPairBool::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ComPairBool::key() const {
  return key_;
}
inline void ComPairBool::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// optional bool value = 2;
inline bool ComPairBool::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComPairBool::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComPairBool::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComPairBool::clear_value() {
  value_ = false;
  clear_has_value();
}
inline bool ComPairBool::value() const {
  return value_;
}
inline void ComPairBool::set_value(bool value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ComItem

// optional uint64 item_id = 1;
inline bool ComItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 ComItem::item_id() const {
  return item_id_;
}
inline void ComItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint64 item_num = 2;
inline bool ComItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComItem::clear_item_num() {
  item_num_ = GOOGLE_ULONGLONG(0);
  clear_has_item_num();
}
inline ::google::protobuf::uint64 ComItem::item_num() const {
  return item_num_;
}
inline void ComItem::set_item_num(::google::protobuf::uint64 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// ComItemBind

// optional uint64 item_id = 1;
inline bool ComItemBind::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComItemBind::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComItemBind::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComItemBind::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 ComItemBind::item_id() const {
  return item_id_;
}
inline void ComItemBind::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint64 item_num = 2;
inline bool ComItemBind::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComItemBind::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComItemBind::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComItemBind::clear_item_num() {
  item_num_ = GOOGLE_ULONGLONG(0);
  clear_has_item_num();
}
inline ::google::protobuf::uint64 ComItemBind::item_num() const {
  return item_num_;
}
inline void ComItemBind::set_item_num(::google::protobuf::uint64 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional int32 bind = 3;
inline bool ComItemBind::has_bind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComItemBind::set_has_bind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComItemBind::clear_has_bind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComItemBind::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 ComItemBind::bind() const {
  return bind_;
}
inline void ComItemBind::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
}

// -------------------------------------------------------------------

// Vector3PB

// required float x = 1;
inline bool Vector3PB::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vector3PB::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vector3PB::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vector3PB::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Vector3PB::x() const {
  return x_;
}
inline void Vector3PB::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Vector3PB::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vector3PB::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vector3PB::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vector3PB::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Vector3PB::y() const {
  return y_;
}
inline void Vector3PB::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float z = 3;
inline bool Vector3PB::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Vector3PB::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Vector3PB::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Vector3PB::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Vector3PB::z() const {
  return z_;
}
inline void Vector3PB::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// Vector2PB

// required float x = 1;
inline bool Vector2PB::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vector2PB::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vector2PB::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vector2PB::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Vector2PB::x() const {
  return x_;
}
inline void Vector2PB::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Vector2PB::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vector2PB::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vector2PB::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vector2PB::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Vector2PB::y() const {
  return y_;
}
inline void Vector2PB::set_y(float value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// Attr64

// required uint32 id = 1;
inline bool Attr64::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attr64::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attr64::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attr64::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Attr64::id() const {
  return id_;
}
inline void Attr64::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required int64 value = 2;
inline bool Attr64::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attr64::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attr64::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attr64::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 Attr64::value() const {
  return value_;
}
inline void Attr64::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// RoleFacadeProto

// repeated .proto_ff.Attr64 growFacade = 1;
inline int RoleFacadeProto::growfacade_size() const {
  return growfacade_.size();
}
inline void RoleFacadeProto::clear_growfacade() {
  growfacade_.Clear();
}
inline const ::proto_ff::Attr64& RoleFacadeProto::growfacade(int index) const {
  return growfacade_.Get(index);
}
inline ::proto_ff::Attr64* RoleFacadeProto::mutable_growfacade(int index) {
  return growfacade_.Mutable(index);
}
inline ::proto_ff::Attr64* RoleFacadeProto::add_growfacade() {
  return growfacade_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >&
RoleFacadeProto::growfacade() const {
  return growfacade_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >*
RoleFacadeProto::mutable_growfacade() {
  return &growfacade_;
}

// optional int32 color = 2;
inline bool RoleFacadeProto::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleFacadeProto::set_has_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleFacadeProto::clear_has_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleFacadeProto::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 RoleFacadeProto::color() const {
  return color_;
}
inline void RoleFacadeProto::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}

// optional int32 prof = 3;
inline bool RoleFacadeProto::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleFacadeProto::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleFacadeProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleFacadeProto::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 RoleFacadeProto::prof() const {
  return prof_;
}
inline void RoleFacadeProto::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
}

// -------------------------------------------------------------------

// RoleHeadPicProto

// optional int32 prof = 1;
inline bool RoleHeadPicProto::has_prof() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleHeadPicProto::set_has_prof() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleHeadPicProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleHeadPicProto::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 RoleHeadPicProto::prof() const {
  return prof_;
}
inline void RoleHeadPicProto::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
}

// optional int64 frame = 2;
inline bool RoleHeadPicProto::has_frame() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleHeadPicProto::set_has_frame() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleHeadPicProto::clear_has_frame() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleHeadPicProto::clear_frame() {
  frame_ = GOOGLE_LONGLONG(0);
  clear_has_frame();
}
inline ::google::protobuf::int64 RoleHeadPicProto::frame() const {
  return frame_;
}
inline void RoleHeadPicProto::set_frame(::google::protobuf::int64 value) {
  set_has_frame();
  frame_ = value;
}

// optional int64 head = 3;
inline bool RoleHeadPicProto::has_head() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleHeadPicProto::set_has_head() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleHeadPicProto::clear_has_head() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleHeadPicProto::clear_head() {
  head_ = GOOGLE_LONGLONG(0);
  clear_has_head();
}
inline ::google::protobuf::int64 RoleHeadPicProto::head() const {
  return head_;
}
inline void RoleHeadPicProto::set_head(::google::protobuf::int64 value) {
  set_has_head();
  head_ = value;
}

// -------------------------------------------------------------------

// RoleListDBProto

// required uint64 cid = 1;
inline bool RoleListDBProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleListDBProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleListDBProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleListDBProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RoleListDBProto::cid() const {
  return cid_;
}
inline void RoleListDBProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required bytes name = 2;
inline bool RoleListDBProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleListDBProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleListDBProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleListDBProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleListDBProto::name() const {
  return *name_;
}
inline void RoleListDBProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleListDBProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleListDBProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleListDBProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleListDBProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleListDBProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 prof = 3;
inline bool RoleListDBProto::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleListDBProto::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleListDBProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleListDBProto::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 RoleListDBProto::prof() const {
  return prof_;
}
inline void RoleListDBProto::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// required uint32 level = 4;
inline bool RoleListDBProto::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleListDBProto::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleListDBProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleListDBProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoleListDBProto::level() const {
  return level_;
}
inline void RoleListDBProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint64 fight = 5;
inline bool RoleListDBProto::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleListDBProto::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleListDBProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleListDBProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 RoleListDBProto::fight() const {
  return fight_;
}
inline void RoleListDBProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 createtime = 6;
inline bool RoleListDBProto::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleListDBProto::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleListDBProto::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleListDBProto::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 RoleListDBProto::createtime() const {
  return createtime_;
}
inline void RoleListDBProto::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 7;
inline bool RoleListDBProto::has_facade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleListDBProto::set_has_facade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleListDBProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleListDBProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& RoleListDBProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* RoleListDBProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* RoleListDBProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void RoleListDBProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint64 sceneid = 8;
inline bool RoleListDBProto::has_sceneid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleListDBProto::set_has_sceneid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleListDBProto::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleListDBProto::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 RoleListDBProto::sceneid() const {
  return sceneid_;
}
inline void RoleListDBProto::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 mapid = 9;
inline bool RoleListDBProto::has_mapid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleListDBProto::set_has_mapid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleListDBProto::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleListDBProto::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 RoleListDBProto::mapid() const {
  return mapid_;
}
inline void RoleListDBProto::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional .proto_ff.Vector3PB pos = 10;
inline bool RoleListDBProto::has_pos() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleListDBProto::set_has_pos() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleListDBProto::clear_has_pos() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleListDBProto::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& RoleListDBProto::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RoleListDBProto::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional uint64 lastsceneid = 11;
inline bool RoleListDBProto::has_lastsceneid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleListDBProto::set_has_lastsceneid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleListDBProto::clear_has_lastsceneid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleListDBProto::clear_lastsceneid() {
  lastsceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastsceneid();
}
inline ::google::protobuf::uint64 RoleListDBProto::lastsceneid() const {
  return lastsceneid_;
}
inline void RoleListDBProto::set_lastsceneid(::google::protobuf::uint64 value) {
  set_has_lastsceneid();
  lastsceneid_ = value;
}

// optional uint64 lastmapid = 12;
inline bool RoleListDBProto::has_lastmapid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleListDBProto::set_has_lastmapid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleListDBProto::clear_has_lastmapid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleListDBProto::clear_lastmapid() {
  lastmapid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastmapid();
}
inline ::google::protobuf::uint64 RoleListDBProto::lastmapid() const {
  return lastmapid_;
}
inline void RoleListDBProto::set_lastmapid(::google::protobuf::uint64 value) {
  set_has_lastmapid();
  lastmapid_ = value;
}

// optional .proto_ff.Vector3PB lastpos = 13;
inline bool RoleListDBProto::has_lastpos() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleListDBProto::set_has_lastpos() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleListDBProto::clear_has_lastpos() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleListDBProto::clear_lastpos() {
  if (lastpos_ != NULL) lastpos_->::proto_ff::Vector3PB::Clear();
  clear_has_lastpos();
}
inline const ::proto_ff::Vector3PB& RoleListDBProto::lastpos() const {
  return lastpos_ != NULL ? *lastpos_ : *default_instance_->lastpos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::mutable_lastpos() {
  set_has_lastpos();
  if (lastpos_ == NULL) lastpos_ = new ::proto_ff::Vector3PB;
  return lastpos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::release_lastpos() {
  clear_has_lastpos();
  ::proto_ff::Vector3PB* temp = lastpos_;
  lastpos_ = NULL;
  return temp;
}
inline void RoleListDBProto::set_allocated_lastpos(::proto_ff::Vector3PB* lastpos) {
  delete lastpos_;
  lastpos_ = lastpos;
  if (lastpos) {
    set_has_lastpos();
  } else {
    clear_has_lastpos();
  }
}

// -------------------------------------------------------------------

// LoginRoleProto

// required uint64 cid = 1;
inline bool LoginRoleProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRoleProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRoleProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRoleProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 LoginRoleProto::cid() const {
  return cid_;
}
inline void LoginRoleProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required bytes name = 2;
inline bool LoginRoleProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRoleProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRoleProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRoleProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& LoginRoleProto::name() const {
  return *name_;
}
inline void LoginRoleProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LoginRoleProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LoginRoleProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginRoleProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* LoginRoleProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginRoleProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 prof = 3;
inline bool LoginRoleProto::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRoleProto::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRoleProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRoleProto::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 LoginRoleProto::prof() const {
  return prof_;
}
inline void LoginRoleProto::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// required uint32 level = 4;
inline bool LoginRoleProto::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRoleProto::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRoleProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRoleProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LoginRoleProto::level() const {
  return level_;
}
inline void LoginRoleProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 fight = 5;
inline bool LoginRoleProto::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginRoleProto::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginRoleProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginRoleProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 LoginRoleProto::fight() const {
  return fight_;
}
inline void LoginRoleProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 createtime = 6;
inline bool LoginRoleProto::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginRoleProto::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginRoleProto::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginRoleProto::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 LoginRoleProto::createtime() const {
  return createtime_;
}
inline void LoginRoleProto::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 7;
inline bool LoginRoleProto::has_facade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginRoleProto::set_has_facade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginRoleProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginRoleProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& LoginRoleProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* LoginRoleProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* LoginRoleProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void LoginRoleProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// -------------------------------------------------------------------

// MarryBrief

// optional uint64 cid = 1;
inline bool MarryBrief::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryBrief::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryBrief::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryBrief::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 MarryBrief::cid() const {
  return cid_;
}
inline void MarryBrief::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 child_id = 2;
inline bool MarryBrief::has_child_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryBrief::set_has_child_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryBrief::clear_has_child_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryBrief::clear_child_id() {
  child_id_ = 0;
  clear_has_child_id();
}
inline ::google::protobuf::int32 MarryBrief::child_id() const {
  return child_id_;
}
inline void MarryBrief::set_child_id(::google::protobuf::int32 value) {
  set_has_child_id();
  child_id_ = value;
}

// optional uint64 card_buy_time = 3;
inline bool MarryBrief::has_card_buy_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarryBrief::set_has_card_buy_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarryBrief::clear_has_card_buy_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarryBrief::clear_card_buy_time() {
  card_buy_time_ = GOOGLE_ULONGLONG(0);
  clear_has_card_buy_time();
}
inline ::google::protobuf::uint64 MarryBrief::card_buy_time() const {
  return card_buy_time_;
}
inline void MarryBrief::set_card_buy_time(::google::protobuf::uint64 value) {
  set_has_card_buy_time();
  card_buy_time_ = value;
}

// optional int32 express_lv = 4;
inline bool MarryBrief::has_express_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarryBrief::set_has_express_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarryBrief::clear_has_express_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarryBrief::clear_express_lv() {
  express_lv_ = 0;
  clear_has_express_lv();
}
inline ::google::protobuf::int32 MarryBrief::express_lv() const {
  return express_lv_;
}
inline void MarryBrief::set_express_lv(::google::protobuf::int32 value) {
  set_has_express_lv();
  express_lv_ = value;
}

// repeated int32 gears = 5;
inline int MarryBrief::gears_size() const {
  return gears_.size();
}
inline void MarryBrief::clear_gears() {
  gears_.Clear();
}
inline ::google::protobuf::int32 MarryBrief::gears(int index) const {
  return gears_.Get(index);
}
inline void MarryBrief::set_gears(int index, ::google::protobuf::int32 value) {
  gears_.Set(index, value);
}
inline void MarryBrief::add_gears(::google::protobuf::int32 value) {
  gears_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MarryBrief::gears() const {
  return gears_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MarryBrief::mutable_gears() {
  return &gears_;
}

// optional int32 buy_dup_num = 6;
inline bool MarryBrief::has_buy_dup_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MarryBrief::set_has_buy_dup_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MarryBrief::clear_has_buy_dup_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MarryBrief::clear_buy_dup_num() {
  buy_dup_num_ = 0;
  clear_has_buy_dup_num();
}
inline ::google::protobuf::int32 MarryBrief::buy_dup_num() const {
  return buy_dup_num_;
}
inline void MarryBrief::set_buy_dup_num(::google::protobuf::int32 value) {
  set_has_buy_dup_num();
  buy_dup_num_ = value;
}

// optional int32 marry_flag = 7;
inline bool MarryBrief::has_marry_flag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MarryBrief::set_has_marry_flag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MarryBrief::clear_has_marry_flag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MarryBrief::clear_marry_flag() {
  marry_flag_ = 0;
  clear_has_marry_flag();
}
inline ::google::protobuf::int32 MarryBrief::marry_flag() const {
  return marry_flag_;
}
inline void MarryBrief::set_marry_flag(::google::protobuf::int32 value) {
  set_has_marry_flag();
  marry_flag_ = value;
}

// repeated int32 recved_gears = 8;
inline int MarryBrief::recved_gears_size() const {
  return recved_gears_.size();
}
inline void MarryBrief::clear_recved_gears() {
  recved_gears_.Clear();
}
inline ::google::protobuf::int32 MarryBrief::recved_gears(int index) const {
  return recved_gears_.Get(index);
}
inline void MarryBrief::set_recved_gears(int index, ::google::protobuf::int32 value) {
  recved_gears_.Set(index, value);
}
inline void MarryBrief::add_recved_gears(::google::protobuf::int32 value) {
  recved_gears_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MarryBrief::recved_gears() const {
  return recved_gears_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MarryBrief::mutable_recved_gears() {
  return &recved_gears_;
}

// optional int32 dst_recv_day = 9;
inline bool MarryBrief::has_dst_recv_day() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MarryBrief::set_has_dst_recv_day() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MarryBrief::clear_has_dst_recv_day() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MarryBrief::clear_dst_recv_day() {
  dst_recv_day_ = 0;
  clear_has_dst_recv_day();
}
inline ::google::protobuf::int32 MarryBrief::dst_recv_day() const {
  return dst_recv_day_;
}
inline void MarryBrief::set_dst_recv_day(::google::protobuf::int32 value) {
  set_has_dst_recv_day();
  dst_recv_day_ = value;
}

// optional int32 dst_give_dup_num = 10;
inline bool MarryBrief::has_dst_give_dup_num() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MarryBrief::set_has_dst_give_dup_num() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MarryBrief::clear_has_dst_give_dup_num() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MarryBrief::clear_dst_give_dup_num() {
  dst_give_dup_num_ = 0;
  clear_has_dst_give_dup_num();
}
inline ::google::protobuf::int32 MarryBrief::dst_give_dup_num() const {
  return dst_give_dup_num_;
}
inline void MarryBrief::set_dst_give_dup_num(::google::protobuf::int32 value) {
  set_has_dst_give_dup_num();
  dst_give_dup_num_ = value;
}

// optional int32 card_surplus_day = 11;
inline bool MarryBrief::has_card_surplus_day() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MarryBrief::set_has_card_surplus_day() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MarryBrief::clear_has_card_surplus_day() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MarryBrief::clear_card_surplus_day() {
  card_surplus_day_ = 0;
  clear_has_card_surplus_day();
}
inline ::google::protobuf::int32 MarryBrief::card_surplus_day() const {
  return card_surplus_day_;
}
inline void MarryBrief::set_card_surplus_day(::google::protobuf::int32 value) {
  set_has_card_surplus_day();
  card_surplus_day_ = value;
}

// -------------------------------------------------------------------

// LoginSynMarry

// optional int32 my_dst_recv_day = 1;
inline bool LoginSynMarry::has_my_dst_recv_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginSynMarry::set_has_my_dst_recv_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginSynMarry::clear_has_my_dst_recv_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginSynMarry::clear_my_dst_recv_day() {
  my_dst_recv_day_ = 0;
  clear_has_my_dst_recv_day();
}
inline ::google::protobuf::int32 LoginSynMarry::my_dst_recv_day() const {
  return my_dst_recv_day_;
}
inline void LoginSynMarry::set_my_dst_recv_day(::google::protobuf::int32 value) {
  set_has_my_dst_recv_day();
  my_dst_recv_day_ = value;
}

// optional int32 dst_give_dup_num = 2;
inline bool LoginSynMarry::has_dst_give_dup_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginSynMarry::set_has_dst_give_dup_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginSynMarry::clear_has_dst_give_dup_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginSynMarry::clear_dst_give_dup_num() {
  dst_give_dup_num_ = 0;
  clear_has_dst_give_dup_num();
}
inline ::google::protobuf::int32 LoginSynMarry::dst_give_dup_num() const {
  return dst_give_dup_num_;
}
inline void LoginSynMarry::set_dst_give_dup_num(::google::protobuf::int32 value) {
  set_has_dst_give_dup_num();
  dst_give_dup_num_ = value;
}

// optional int32 marry_id = 3;
inline bool LoginSynMarry::has_marry_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginSynMarry::set_has_marry_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginSynMarry::clear_has_marry_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginSynMarry::clear_marry_id() {
  marry_id_ = 0;
  clear_has_marry_id();
}
inline ::google::protobuf::int32 LoginSynMarry::marry_id() const {
  return marry_id_;
}
inline void LoginSynMarry::set_marry_id(::google::protobuf::int32 value) {
  set_has_marry_id();
  marry_id_ = value;
}

// optional .proto_ff.MarryBrief brief = 4;
inline bool LoginSynMarry::has_brief() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginSynMarry::set_has_brief() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginSynMarry::clear_has_brief() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginSynMarry::clear_brief() {
  if (brief_ != NULL) brief_->::proto_ff::MarryBrief::Clear();
  clear_has_brief();
}
inline const ::proto_ff::MarryBrief& LoginSynMarry::brief() const {
  return brief_ != NULL ? *brief_ : *default_instance_->brief_;
}
inline ::proto_ff::MarryBrief* LoginSynMarry::mutable_brief() {
  set_has_brief();
  if (brief_ == NULL) brief_ = new ::proto_ff::MarryBrief;
  return brief_;
}
inline ::proto_ff::MarryBrief* LoginSynMarry::release_brief() {
  clear_has_brief();
  ::proto_ff::MarryBrief* temp = brief_;
  brief_ = NULL;
  return temp;
}
inline void LoginSynMarry::set_allocated_brief(::proto_ff::MarryBrief* brief) {
  delete brief_;
  brief_ = brief;
  if (brief) {
    set_has_brief();
  } else {
    clear_has_brief();
  }
}

// optional bytes dst_name = 5;
inline bool LoginSynMarry::has_dst_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginSynMarry::set_has_dst_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginSynMarry::clear_has_dst_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginSynMarry::clear_dst_name() {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    dst_name_->clear();
  }
  clear_has_dst_name();
}
inline const ::std::string& LoginSynMarry::dst_name() const {
  return *dst_name_;
}
inline void LoginSynMarry::set_dst_name(const ::std::string& value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void LoginSynMarry::set_dst_name(const char* value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void LoginSynMarry::set_dst_name(const void* value, size_t size) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginSynMarry::mutable_dst_name() {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  return dst_name_;
}
inline ::std::string* LoginSynMarry::release_dst_name() {
  clear_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dst_name_;
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginSynMarry::set_allocated_dst_name(::std::string* dst_name) {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_name_;
  }
  if (dst_name) {
    set_has_dst_name();
    dst_name_ = dst_name;
  } else {
    clear_has_dst_name();
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AoPlatProto

// optional bytes udid = 1;
inline bool AoPlatProto::has_udid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AoPlatProto::set_has_udid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AoPlatProto::clear_has_udid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AoPlatProto::clear_udid() {
  if (udid_ != &::google::protobuf::internal::kEmptyString) {
    udid_->clear();
  }
  clear_has_udid();
}
inline const ::std::string& AoPlatProto::udid() const {
  return *udid_;
}
inline void AoPlatProto::set_udid(const ::std::string& value) {
  set_has_udid();
  if (udid_ == &::google::protobuf::internal::kEmptyString) {
    udid_ = new ::std::string;
  }
  udid_->assign(value);
}
inline void AoPlatProto::set_udid(const char* value) {
  set_has_udid();
  if (udid_ == &::google::protobuf::internal::kEmptyString) {
    udid_ = new ::std::string;
  }
  udid_->assign(value);
}
inline void AoPlatProto::set_udid(const void* value, size_t size) {
  set_has_udid();
  if (udid_ == &::google::protobuf::internal::kEmptyString) {
    udid_ = new ::std::string;
  }
  udid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_udid() {
  set_has_udid();
  if (udid_ == &::google::protobuf::internal::kEmptyString) {
    udid_ = new ::std::string;
  }
  return udid_;
}
inline ::std::string* AoPlatProto::release_udid() {
  clear_has_udid();
  if (udid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = udid_;
    udid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_udid(::std::string* udid) {
  if (udid_ != &::google::protobuf::internal::kEmptyString) {
    delete udid_;
  }
  if (udid) {
    set_has_udid();
    udid_ = udid;
  } else {
    clear_has_udid();
    udid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes imei = 2;
inline bool AoPlatProto::has_imei() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AoPlatProto::set_has_imei() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AoPlatProto::clear_has_imei() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AoPlatProto::clear_imei() {
  if (imei_ != &::google::protobuf::internal::kEmptyString) {
    imei_->clear();
  }
  clear_has_imei();
}
inline const ::std::string& AoPlatProto::imei() const {
  return *imei_;
}
inline void AoPlatProto::set_imei(const ::std::string& value) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::kEmptyString) {
    imei_ = new ::std::string;
  }
  imei_->assign(value);
}
inline void AoPlatProto::set_imei(const char* value) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::kEmptyString) {
    imei_ = new ::std::string;
  }
  imei_->assign(value);
}
inline void AoPlatProto::set_imei(const void* value, size_t size) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::kEmptyString) {
    imei_ = new ::std::string;
  }
  imei_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_imei() {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::kEmptyString) {
    imei_ = new ::std::string;
  }
  return imei_;
}
inline ::std::string* AoPlatProto::release_imei() {
  clear_has_imei();
  if (imei_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = imei_;
    imei_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_imei(::std::string* imei) {
  if (imei_ != &::google::protobuf::internal::kEmptyString) {
    delete imei_;
  }
  if (imei) {
    set_has_imei();
    imei_ = imei;
  } else {
    clear_has_imei();
    imei_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes idfa = 3;
inline bool AoPlatProto::has_idfa() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AoPlatProto::set_has_idfa() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AoPlatProto::clear_has_idfa() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AoPlatProto::clear_idfa() {
  if (idfa_ != &::google::protobuf::internal::kEmptyString) {
    idfa_->clear();
  }
  clear_has_idfa();
}
inline const ::std::string& AoPlatProto::idfa() const {
  return *idfa_;
}
inline void AoPlatProto::set_idfa(const ::std::string& value) {
  set_has_idfa();
  if (idfa_ == &::google::protobuf::internal::kEmptyString) {
    idfa_ = new ::std::string;
  }
  idfa_->assign(value);
}
inline void AoPlatProto::set_idfa(const char* value) {
  set_has_idfa();
  if (idfa_ == &::google::protobuf::internal::kEmptyString) {
    idfa_ = new ::std::string;
  }
  idfa_->assign(value);
}
inline void AoPlatProto::set_idfa(const void* value, size_t size) {
  set_has_idfa();
  if (idfa_ == &::google::protobuf::internal::kEmptyString) {
    idfa_ = new ::std::string;
  }
  idfa_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_idfa() {
  set_has_idfa();
  if (idfa_ == &::google::protobuf::internal::kEmptyString) {
    idfa_ = new ::std::string;
  }
  return idfa_;
}
inline ::std::string* AoPlatProto::release_idfa() {
  clear_has_idfa();
  if (idfa_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = idfa_;
    idfa_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_idfa(::std::string* idfa) {
  if (idfa_ != &::google::protobuf::internal::kEmptyString) {
    delete idfa_;
  }
  if (idfa) {
    set_has_idfa();
    idfa_ = idfa;
  } else {
    clear_has_idfa();
    idfa_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes oaid = 4;
inline bool AoPlatProto::has_oaid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AoPlatProto::set_has_oaid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AoPlatProto::clear_has_oaid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AoPlatProto::clear_oaid() {
  if (oaid_ != &::google::protobuf::internal::kEmptyString) {
    oaid_->clear();
  }
  clear_has_oaid();
}
inline const ::std::string& AoPlatProto::oaid() const {
  return *oaid_;
}
inline void AoPlatProto::set_oaid(const ::std::string& value) {
  set_has_oaid();
  if (oaid_ == &::google::protobuf::internal::kEmptyString) {
    oaid_ = new ::std::string;
  }
  oaid_->assign(value);
}
inline void AoPlatProto::set_oaid(const char* value) {
  set_has_oaid();
  if (oaid_ == &::google::protobuf::internal::kEmptyString) {
    oaid_ = new ::std::string;
  }
  oaid_->assign(value);
}
inline void AoPlatProto::set_oaid(const void* value, size_t size) {
  set_has_oaid();
  if (oaid_ == &::google::protobuf::internal::kEmptyString) {
    oaid_ = new ::std::string;
  }
  oaid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_oaid() {
  set_has_oaid();
  if (oaid_ == &::google::protobuf::internal::kEmptyString) {
    oaid_ = new ::std::string;
  }
  return oaid_;
}
inline ::std::string* AoPlatProto::release_oaid() {
  clear_has_oaid();
  if (oaid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = oaid_;
    oaid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_oaid(::std::string* oaid) {
  if (oaid_ != &::google::protobuf::internal::kEmptyString) {
    delete oaid_;
  }
  if (oaid) {
    set_has_oaid();
    oaid_ = oaid;
  } else {
    clear_has_oaid();
    oaid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes caid = 5;
inline bool AoPlatProto::has_caid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AoPlatProto::set_has_caid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AoPlatProto::clear_has_caid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AoPlatProto::clear_caid() {
  if (caid_ != &::google::protobuf::internal::kEmptyString) {
    caid_->clear();
  }
  clear_has_caid();
}
inline const ::std::string& AoPlatProto::caid() const {
  return *caid_;
}
inline void AoPlatProto::set_caid(const ::std::string& value) {
  set_has_caid();
  if (caid_ == &::google::protobuf::internal::kEmptyString) {
    caid_ = new ::std::string;
  }
  caid_->assign(value);
}
inline void AoPlatProto::set_caid(const char* value) {
  set_has_caid();
  if (caid_ == &::google::protobuf::internal::kEmptyString) {
    caid_ = new ::std::string;
  }
  caid_->assign(value);
}
inline void AoPlatProto::set_caid(const void* value, size_t size) {
  set_has_caid();
  if (caid_ == &::google::protobuf::internal::kEmptyString) {
    caid_ = new ::std::string;
  }
  caid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_caid() {
  set_has_caid();
  if (caid_ == &::google::protobuf::internal::kEmptyString) {
    caid_ = new ::std::string;
  }
  return caid_;
}
inline ::std::string* AoPlatProto::release_caid() {
  clear_has_caid();
  if (caid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = caid_;
    caid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_caid(::std::string* caid) {
  if (caid_ != &::google::protobuf::internal::kEmptyString) {
    delete caid_;
  }
  if (caid) {
    set_has_caid();
    caid_ = caid;
  } else {
    clear_has_caid();
    caid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes android_id = 6;
inline bool AoPlatProto::has_android_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AoPlatProto::set_has_android_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AoPlatProto::clear_has_android_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AoPlatProto::clear_android_id() {
  if (android_id_ != &::google::protobuf::internal::kEmptyString) {
    android_id_->clear();
  }
  clear_has_android_id();
}
inline const ::std::string& AoPlatProto::android_id() const {
  return *android_id_;
}
inline void AoPlatProto::set_android_id(const ::std::string& value) {
  set_has_android_id();
  if (android_id_ == &::google::protobuf::internal::kEmptyString) {
    android_id_ = new ::std::string;
  }
  android_id_->assign(value);
}
inline void AoPlatProto::set_android_id(const char* value) {
  set_has_android_id();
  if (android_id_ == &::google::protobuf::internal::kEmptyString) {
    android_id_ = new ::std::string;
  }
  android_id_->assign(value);
}
inline void AoPlatProto::set_android_id(const void* value, size_t size) {
  set_has_android_id();
  if (android_id_ == &::google::protobuf::internal::kEmptyString) {
    android_id_ = new ::std::string;
  }
  android_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_android_id() {
  set_has_android_id();
  if (android_id_ == &::google::protobuf::internal::kEmptyString) {
    android_id_ = new ::std::string;
  }
  return android_id_;
}
inline ::std::string* AoPlatProto::release_android_id() {
  clear_has_android_id();
  if (android_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = android_id_;
    android_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_android_id(::std::string* android_id) {
  if (android_id_ != &::google::protobuf::internal::kEmptyString) {
    delete android_id_;
  }
  if (android_id) {
    set_has_android_id();
    android_id_ = android_id;
  } else {
    clear_has_android_id();
    android_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 group_id = 7;
inline bool AoPlatProto::has_group_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AoPlatProto::set_has_group_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AoPlatProto::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AoPlatProto::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
}
inline ::google::protobuf::int32 AoPlatProto::group_id() const {
  return group_id_;
}
inline void AoPlatProto::set_group_id(::google::protobuf::int32 value) {
  set_has_group_id();
  group_id_ = value;
}

// optional bytes brand = 8;
inline bool AoPlatProto::has_brand() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AoPlatProto::set_has_brand() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AoPlatProto::clear_has_brand() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AoPlatProto::clear_brand() {
  if (brand_ != &::google::protobuf::internal::kEmptyString) {
    brand_->clear();
  }
  clear_has_brand();
}
inline const ::std::string& AoPlatProto::brand() const {
  return *brand_;
}
inline void AoPlatProto::set_brand(const ::std::string& value) {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::kEmptyString) {
    brand_ = new ::std::string;
  }
  brand_->assign(value);
}
inline void AoPlatProto::set_brand(const char* value) {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::kEmptyString) {
    brand_ = new ::std::string;
  }
  brand_->assign(value);
}
inline void AoPlatProto::set_brand(const void* value, size_t size) {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::kEmptyString) {
    brand_ = new ::std::string;
  }
  brand_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_brand() {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::kEmptyString) {
    brand_ = new ::std::string;
  }
  return brand_;
}
inline ::std::string* AoPlatProto::release_brand() {
  clear_has_brand();
  if (brand_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = brand_;
    brand_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_brand(::std::string* brand) {
  if (brand_ != &::google::protobuf::internal::kEmptyString) {
    delete brand_;
  }
  if (brand) {
    set_has_brand();
    brand_ = brand;
  } else {
    clear_has_brand();
    brand_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes device_model = 9;
inline bool AoPlatProto::has_device_model() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AoPlatProto::set_has_device_model() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AoPlatProto::clear_has_device_model() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AoPlatProto::clear_device_model() {
  if (device_model_ != &::google::protobuf::internal::kEmptyString) {
    device_model_->clear();
  }
  clear_has_device_model();
}
inline const ::std::string& AoPlatProto::device_model() const {
  return *device_model_;
}
inline void AoPlatProto::set_device_model(const ::std::string& value) {
  set_has_device_model();
  if (device_model_ == &::google::protobuf::internal::kEmptyString) {
    device_model_ = new ::std::string;
  }
  device_model_->assign(value);
}
inline void AoPlatProto::set_device_model(const char* value) {
  set_has_device_model();
  if (device_model_ == &::google::protobuf::internal::kEmptyString) {
    device_model_ = new ::std::string;
  }
  device_model_->assign(value);
}
inline void AoPlatProto::set_device_model(const void* value, size_t size) {
  set_has_device_model();
  if (device_model_ == &::google::protobuf::internal::kEmptyString) {
    device_model_ = new ::std::string;
  }
  device_model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_device_model() {
  set_has_device_model();
  if (device_model_ == &::google::protobuf::internal::kEmptyString) {
    device_model_ = new ::std::string;
  }
  return device_model_;
}
inline ::std::string* AoPlatProto::release_device_model() {
  clear_has_device_model();
  if (device_model_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_model_;
    device_model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_device_model(::std::string* device_model) {
  if (device_model_ != &::google::protobuf::internal::kEmptyString) {
    delete device_model_;
  }
  if (device_model) {
    set_has_device_model();
    device_model_ = device_model;
  } else {
    clear_has_device_model();
    device_model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 is_emulator = 10;
inline bool AoPlatProto::has_is_emulator() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AoPlatProto::set_has_is_emulator() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AoPlatProto::clear_has_is_emulator() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AoPlatProto::clear_is_emulator() {
  is_emulator_ = 0;
  clear_has_is_emulator();
}
inline ::google::protobuf::int32 AoPlatProto::is_emulator() const {
  return is_emulator_;
}
inline void AoPlatProto::set_is_emulator(::google::protobuf::int32 value) {
  set_has_is_emulator();
  is_emulator_ = value;
}

// optional int32 screen_length = 11;
inline bool AoPlatProto::has_screen_length() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AoPlatProto::set_has_screen_length() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AoPlatProto::clear_has_screen_length() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AoPlatProto::clear_screen_length() {
  screen_length_ = 0;
  clear_has_screen_length();
}
inline ::google::protobuf::int32 AoPlatProto::screen_length() const {
  return screen_length_;
}
inline void AoPlatProto::set_screen_length(::google::protobuf::int32 value) {
  set_has_screen_length();
  screen_length_ = value;
}

// optional int32 screen_width = 12;
inline bool AoPlatProto::has_screen_width() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AoPlatProto::set_has_screen_width() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AoPlatProto::clear_has_screen_width() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AoPlatProto::clear_screen_width() {
  screen_width_ = 0;
  clear_has_screen_width();
}
inline ::google::protobuf::int32 AoPlatProto::screen_width() const {
  return screen_width_;
}
inline void AoPlatProto::set_screen_width(::google::protobuf::int32 value) {
  set_has_screen_width();
  screen_width_ = value;
}

// optional bytes os_version = 13;
inline bool AoPlatProto::has_os_version() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AoPlatProto::set_has_os_version() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AoPlatProto::clear_has_os_version() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AoPlatProto::clear_os_version() {
  if (os_version_ != &::google::protobuf::internal::kEmptyString) {
    os_version_->clear();
  }
  clear_has_os_version();
}
inline const ::std::string& AoPlatProto::os_version() const {
  return *os_version_;
}
inline void AoPlatProto::set_os_version(const ::std::string& value) {
  set_has_os_version();
  if (os_version_ == &::google::protobuf::internal::kEmptyString) {
    os_version_ = new ::std::string;
  }
  os_version_->assign(value);
}
inline void AoPlatProto::set_os_version(const char* value) {
  set_has_os_version();
  if (os_version_ == &::google::protobuf::internal::kEmptyString) {
    os_version_ = new ::std::string;
  }
  os_version_->assign(value);
}
inline void AoPlatProto::set_os_version(const void* value, size_t size) {
  set_has_os_version();
  if (os_version_ == &::google::protobuf::internal::kEmptyString) {
    os_version_ = new ::std::string;
  }
  os_version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_os_version() {
  set_has_os_version();
  if (os_version_ == &::google::protobuf::internal::kEmptyString) {
    os_version_ = new ::std::string;
  }
  return os_version_;
}
inline ::std::string* AoPlatProto::release_os_version() {
  clear_has_os_version();
  if (os_version_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = os_version_;
    os_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_os_version(::std::string* os_version) {
  if (os_version_ != &::google::protobuf::internal::kEmptyString) {
    delete os_version_;
  }
  if (os_version) {
    set_has_os_version();
    os_version_ = os_version;
  } else {
    clear_has_os_version();
    os_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes network_type = 14;
inline bool AoPlatProto::has_network_type() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AoPlatProto::set_has_network_type() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AoPlatProto::clear_has_network_type() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AoPlatProto::clear_network_type() {
  if (network_type_ != &::google::protobuf::internal::kEmptyString) {
    network_type_->clear();
  }
  clear_has_network_type();
}
inline const ::std::string& AoPlatProto::network_type() const {
  return *network_type_;
}
inline void AoPlatProto::set_network_type(const ::std::string& value) {
  set_has_network_type();
  if (network_type_ == &::google::protobuf::internal::kEmptyString) {
    network_type_ = new ::std::string;
  }
  network_type_->assign(value);
}
inline void AoPlatProto::set_network_type(const char* value) {
  set_has_network_type();
  if (network_type_ == &::google::protobuf::internal::kEmptyString) {
    network_type_ = new ::std::string;
  }
  network_type_->assign(value);
}
inline void AoPlatProto::set_network_type(const void* value, size_t size) {
  set_has_network_type();
  if (network_type_ == &::google::protobuf::internal::kEmptyString) {
    network_type_ = new ::std::string;
  }
  network_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_network_type() {
  set_has_network_type();
  if (network_type_ == &::google::protobuf::internal::kEmptyString) {
    network_type_ = new ::std::string;
  }
  return network_type_;
}
inline ::std::string* AoPlatProto::release_network_type() {
  clear_has_network_type();
  if (network_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = network_type_;
    network_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_network_type(::std::string* network_type) {
  if (network_type_ != &::google::protobuf::internal::kEmptyString) {
    delete network_type_;
  }
  if (network_type) {
    set_has_network_type();
    network_type_ = network_type;
  } else {
    clear_has_network_type();
    network_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes app_channel = 15;
inline bool AoPlatProto::has_app_channel() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AoPlatProto::set_has_app_channel() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AoPlatProto::clear_has_app_channel() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AoPlatProto::clear_app_channel() {
  if (app_channel_ != &::google::protobuf::internal::kEmptyString) {
    app_channel_->clear();
  }
  clear_has_app_channel();
}
inline const ::std::string& AoPlatProto::app_channel() const {
  return *app_channel_;
}
inline void AoPlatProto::set_app_channel(const ::std::string& value) {
  set_has_app_channel();
  if (app_channel_ == &::google::protobuf::internal::kEmptyString) {
    app_channel_ = new ::std::string;
  }
  app_channel_->assign(value);
}
inline void AoPlatProto::set_app_channel(const char* value) {
  set_has_app_channel();
  if (app_channel_ == &::google::protobuf::internal::kEmptyString) {
    app_channel_ = new ::std::string;
  }
  app_channel_->assign(value);
}
inline void AoPlatProto::set_app_channel(const void* value, size_t size) {
  set_has_app_channel();
  if (app_channel_ == &::google::protobuf::internal::kEmptyString) {
    app_channel_ = new ::std::string;
  }
  app_channel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_app_channel() {
  set_has_app_channel();
  if (app_channel_ == &::google::protobuf::internal::kEmptyString) {
    app_channel_ = new ::std::string;
  }
  return app_channel_;
}
inline ::std::string* AoPlatProto::release_app_channel() {
  clear_has_app_channel();
  if (app_channel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = app_channel_;
    app_channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_app_channel(::std::string* app_channel) {
  if (app_channel_ != &::google::protobuf::internal::kEmptyString) {
    delete app_channel_;
  }
  if (app_channel) {
    set_has_app_channel();
    app_channel_ = app_channel;
  } else {
    clear_has_app_channel();
    app_channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes app_version = 16;
inline bool AoPlatProto::has_app_version() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AoPlatProto::set_has_app_version() {
  _has_bits_[0] |= 0x00008000u;
}
inline void AoPlatProto::clear_has_app_version() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void AoPlatProto::clear_app_version() {
  if (app_version_ != &::google::protobuf::internal::kEmptyString) {
    app_version_->clear();
  }
  clear_has_app_version();
}
inline const ::std::string& AoPlatProto::app_version() const {
  return *app_version_;
}
inline void AoPlatProto::set_app_version(const ::std::string& value) {
  set_has_app_version();
  if (app_version_ == &::google::protobuf::internal::kEmptyString) {
    app_version_ = new ::std::string;
  }
  app_version_->assign(value);
}
inline void AoPlatProto::set_app_version(const char* value) {
  set_has_app_version();
  if (app_version_ == &::google::protobuf::internal::kEmptyString) {
    app_version_ = new ::std::string;
  }
  app_version_->assign(value);
}
inline void AoPlatProto::set_app_version(const void* value, size_t size) {
  set_has_app_version();
  if (app_version_ == &::google::protobuf::internal::kEmptyString) {
    app_version_ = new ::std::string;
  }
  app_version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_app_version() {
  set_has_app_version();
  if (app_version_ == &::google::protobuf::internal::kEmptyString) {
    app_version_ = new ::std::string;
  }
  return app_version_;
}
inline ::std::string* AoPlatProto::release_app_version() {
  clear_has_app_version();
  if (app_version_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = app_version_;
    app_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_app_version(::std::string* app_version) {
  if (app_version_ != &::google::protobuf::internal::kEmptyString) {
    delete app_version_;
  }
  if (app_version) {
    set_has_app_version();
    app_version_ = app_version;
  } else {
    clear_has_app_version();
    app_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 channel_id = 17;
inline bool AoPlatProto::has_channel_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void AoPlatProto::set_has_channel_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void AoPlatProto::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void AoPlatProto::clear_channel_id() {
  channel_id_ = 0;
  clear_has_channel_id();
}
inline ::google::protobuf::int32 AoPlatProto::channel_id() const {
  return channel_id_;
}
inline void AoPlatProto::set_channel_id(::google::protobuf::int32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional int32 sub_channel_id = 18;
inline bool AoPlatProto::has_sub_channel_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void AoPlatProto::set_has_sub_channel_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void AoPlatProto::clear_has_sub_channel_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void AoPlatProto::clear_sub_channel_id() {
  sub_channel_id_ = 0;
  clear_has_sub_channel_id();
}
inline ::google::protobuf::int32 AoPlatProto::sub_channel_id() const {
  return sub_channel_id_;
}
inline void AoPlatProto::set_sub_channel_id(::google::protobuf::int32 value) {
  set_has_sub_channel_id();
  sub_channel_id_ = value;
}

// optional bytes account_id = 19;
inline bool AoPlatProto::has_account_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void AoPlatProto::set_has_account_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void AoPlatProto::clear_has_account_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void AoPlatProto::clear_account_id() {
  if (account_id_ != &::google::protobuf::internal::kEmptyString) {
    account_id_->clear();
  }
  clear_has_account_id();
}
inline const ::std::string& AoPlatProto::account_id() const {
  return *account_id_;
}
inline void AoPlatProto::set_account_id(const ::std::string& value) {
  set_has_account_id();
  if (account_id_ == &::google::protobuf::internal::kEmptyString) {
    account_id_ = new ::std::string;
  }
  account_id_->assign(value);
}
inline void AoPlatProto::set_account_id(const char* value) {
  set_has_account_id();
  if (account_id_ == &::google::protobuf::internal::kEmptyString) {
    account_id_ = new ::std::string;
  }
  account_id_->assign(value);
}
inline void AoPlatProto::set_account_id(const void* value, size_t size) {
  set_has_account_id();
  if (account_id_ == &::google::protobuf::internal::kEmptyString) {
    account_id_ = new ::std::string;
  }
  account_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_account_id() {
  set_has_account_id();
  if (account_id_ == &::google::protobuf::internal::kEmptyString) {
    account_id_ = new ::std::string;
  }
  return account_id_;
}
inline ::std::string* AoPlatProto::release_account_id() {
  clear_has_account_id();
  if (account_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_id_;
    account_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_account_id(::std::string* account_id) {
  if (account_id_ != &::google::protobuf::internal::kEmptyString) {
    delete account_id_;
  }
  if (account_id) {
    set_has_account_id();
    account_id_ = account_id;
  } else {
    clear_has_account_id();
    account_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes ip = 20;
inline bool AoPlatProto::has_ip() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void AoPlatProto::set_has_ip() {
  _has_bits_[0] |= 0x00080000u;
}
inline void AoPlatProto::clear_has_ip() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void AoPlatProto::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& AoPlatProto::ip() const {
  return *ip_;
}
inline void AoPlatProto::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void AoPlatProto::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void AoPlatProto::set_ip(const void* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* AoPlatProto::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 port = 21;
inline bool AoPlatProto::has_port() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void AoPlatProto::set_has_port() {
  _has_bits_[0] |= 0x00100000u;
}
inline void AoPlatProto::clear_has_port() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void AoPlatProto::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 AoPlatProto::port() const {
  return port_;
}
inline void AoPlatProto::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
}

// optional int32 timezone_offset = 22;
inline bool AoPlatProto::has_timezone_offset() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void AoPlatProto::set_has_timezone_offset() {
  _has_bits_[0] |= 0x00200000u;
}
inline void AoPlatProto::clear_has_timezone_offset() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void AoPlatProto::clear_timezone_offset() {
  timezone_offset_ = 0;
  clear_has_timezone_offset();
}
inline ::google::protobuf::int32 AoPlatProto::timezone_offset() const {
  return timezone_offset_;
}
inline void AoPlatProto::set_timezone_offset(::google::protobuf::int32 value) {
  set_has_timezone_offset();
  timezone_offset_ = value;
}

// optional bytes platform_tag = 23;
inline bool AoPlatProto::has_platform_tag() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void AoPlatProto::set_has_platform_tag() {
  _has_bits_[0] |= 0x00400000u;
}
inline void AoPlatProto::clear_has_platform_tag() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void AoPlatProto::clear_platform_tag() {
  if (platform_tag_ != &::google::protobuf::internal::kEmptyString) {
    platform_tag_->clear();
  }
  clear_has_platform_tag();
}
inline const ::std::string& AoPlatProto::platform_tag() const {
  return *platform_tag_;
}
inline void AoPlatProto::set_platform_tag(const ::std::string& value) {
  set_has_platform_tag();
  if (platform_tag_ == &::google::protobuf::internal::kEmptyString) {
    platform_tag_ = new ::std::string;
  }
  platform_tag_->assign(value);
}
inline void AoPlatProto::set_platform_tag(const char* value) {
  set_has_platform_tag();
  if (platform_tag_ == &::google::protobuf::internal::kEmptyString) {
    platform_tag_ = new ::std::string;
  }
  platform_tag_->assign(value);
}
inline void AoPlatProto::set_platform_tag(const void* value, size_t size) {
  set_has_platform_tag();
  if (platform_tag_ == &::google::protobuf::internal::kEmptyString) {
    platform_tag_ = new ::std::string;
  }
  platform_tag_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AoPlatProto::mutable_platform_tag() {
  set_has_platform_tag();
  if (platform_tag_ == &::google::protobuf::internal::kEmptyString) {
    platform_tag_ = new ::std::string;
  }
  return platform_tag_;
}
inline ::std::string* AoPlatProto::release_platform_tag() {
  clear_has_platform_tag();
  if (platform_tag_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_tag_;
    platform_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AoPlatProto::set_allocated_platform_tag(::std::string* platform_tag) {
  if (platform_tag_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_tag_;
  }
  if (platform_tag) {
    set_has_platform_tag();
    platform_tag_ = platform_tag;
  } else {
    clear_has_platform_tag();
    platform_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// FactionMagRecordProto

// optional int32 mag_id = 1;
inline bool FactionMagRecordProto::has_mag_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactionMagRecordProto::set_has_mag_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactionMagRecordProto::clear_has_mag_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactionMagRecordProto::clear_mag_id() {
  mag_id_ = 0;
  clear_has_mag_id();
}
inline ::google::protobuf::int32 FactionMagRecordProto::mag_id() const {
  return mag_id_;
}
inline void FactionMagRecordProto::set_mag_id(::google::protobuf::int32 value) {
  set_has_mag_id();
  mag_id_ = value;
}

// optional int32 lamp_id = 2;
inline bool FactionMagRecordProto::has_lamp_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FactionMagRecordProto::set_has_lamp_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FactionMagRecordProto::clear_has_lamp_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FactionMagRecordProto::clear_lamp_id() {
  lamp_id_ = 0;
  clear_has_lamp_id();
}
inline ::google::protobuf::int32 FactionMagRecordProto::lamp_id() const {
  return lamp_id_;
}
inline void FactionMagRecordProto::set_lamp_id(::google::protobuf::int32 value) {
  set_has_lamp_id();
  lamp_id_ = value;
}

// optional int32 guard_id = 3;
inline bool FactionMagRecordProto::has_guard_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FactionMagRecordProto::set_has_guard_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FactionMagRecordProto::clear_has_guard_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FactionMagRecordProto::clear_guard_id() {
  guard_id_ = 0;
  clear_has_guard_id();
}
inline ::google::protobuf::int32 FactionMagRecordProto::guard_id() const {
  return guard_id_;
}
inline void FactionMagRecordProto::set_guard_id(::google::protobuf::int32 value) {
  set_has_guard_id();
  guard_id_ = value;
}

// optional int32 reel_id = 4;
inline bool FactionMagRecordProto::has_reel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FactionMagRecordProto::set_has_reel_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FactionMagRecordProto::clear_has_reel_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FactionMagRecordProto::clear_reel_id() {
  reel_id_ = 0;
  clear_has_reel_id();
}
inline ::google::protobuf::int32 FactionMagRecordProto::reel_id() const {
  return reel_id_;
}
inline void FactionMagRecordProto::set_reel_id(::google::protobuf::int32 value) {
  set_has_reel_id();
  reel_id_ = value;
}

// optional int32 point = 5;
inline bool FactionMagRecordProto::has_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FactionMagRecordProto::set_has_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FactionMagRecordProto::clear_has_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FactionMagRecordProto::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 FactionMagRecordProto::point() const {
  return point_;
}
inline void FactionMagRecordProto::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
}

// -------------------------------------------------------------------

// LoginSyncProto

// optional uint32 faction_id = 1;
inline bool LoginSyncProto::has_faction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginSyncProto::set_has_faction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginSyncProto::clear_has_faction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginSyncProto::clear_faction_id() {
  faction_id_ = 0u;
  clear_has_faction_id();
}
inline ::google::protobuf::uint32 LoginSyncProto::faction_id() const {
  return faction_id_;
}
inline void LoginSyncProto::set_faction_id(::google::protobuf::uint32 value) {
  set_has_faction_id();
  faction_id_ = value;
}

// optional bytes faction_name = 2;
inline bool LoginSyncProto::has_faction_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginSyncProto::set_has_faction_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginSyncProto::clear_has_faction_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginSyncProto::clear_faction_name() {
  if (faction_name_ != &::google::protobuf::internal::kEmptyString) {
    faction_name_->clear();
  }
  clear_has_faction_name();
}
inline const ::std::string& LoginSyncProto::faction_name() const {
  return *faction_name_;
}
inline void LoginSyncProto::set_faction_name(const ::std::string& value) {
  set_has_faction_name();
  if (faction_name_ == &::google::protobuf::internal::kEmptyString) {
    faction_name_ = new ::std::string;
  }
  faction_name_->assign(value);
}
inline void LoginSyncProto::set_faction_name(const char* value) {
  set_has_faction_name();
  if (faction_name_ == &::google::protobuf::internal::kEmptyString) {
    faction_name_ = new ::std::string;
  }
  faction_name_->assign(value);
}
inline void LoginSyncProto::set_faction_name(const void* value, size_t size) {
  set_has_faction_name();
  if (faction_name_ == &::google::protobuf::internal::kEmptyString) {
    faction_name_ = new ::std::string;
  }
  faction_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginSyncProto::mutable_faction_name() {
  set_has_faction_name();
  if (faction_name_ == &::google::protobuf::internal::kEmptyString) {
    faction_name_ = new ::std::string;
  }
  return faction_name_;
}
inline ::std::string* LoginSyncProto::release_faction_name() {
  clear_has_faction_name();
  if (faction_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = faction_name_;
    faction_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginSyncProto::set_allocated_faction_name(::std::string* faction_name) {
  if (faction_name_ != &::google::protobuf::internal::kEmptyString) {
    delete faction_name_;
  }
  if (faction_name) {
    set_has_faction_name();
    faction_name_ = faction_name;
  } else {
    clear_has_faction_name();
    faction_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 duty = 3;
inline bool LoginSyncProto::has_duty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginSyncProto::set_has_duty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginSyncProto::clear_has_duty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginSyncProto::clear_duty() {
  duty_ = 0;
  clear_has_duty();
}
inline ::google::protobuf::int32 LoginSyncProto::duty() const {
  return duty_;
}
inline void LoginSyncProto::set_duty(::google::protobuf::int32 value) {
  set_has_duty();
  duty_ = value;
}

// optional uint64 faction_leader = 4;
inline bool LoginSyncProto::has_faction_leader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginSyncProto::set_has_faction_leader() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginSyncProto::clear_has_faction_leader() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginSyncProto::clear_faction_leader() {
  faction_leader_ = GOOGLE_ULONGLONG(0);
  clear_has_faction_leader();
}
inline ::google::protobuf::uint64 LoginSyncProto::faction_leader() const {
  return faction_leader_;
}
inline void LoginSyncProto::set_faction_leader(::google::protobuf::uint64 value) {
  set_has_faction_leader();
  faction_leader_ = value;
}

// optional int32 faction_level = 5;
inline bool LoginSyncProto::has_faction_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginSyncProto::set_has_faction_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginSyncProto::clear_has_faction_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginSyncProto::clear_faction_level() {
  faction_level_ = 0;
  clear_has_faction_level();
}
inline ::google::protobuf::int32 LoginSyncProto::faction_level() const {
  return faction_level_;
}
inline void LoginSyncProto::set_faction_level(::google::protobuf::int32 value) {
  set_has_faction_level();
  faction_level_ = value;
}

// optional uint32 team_id = 6;
inline bool LoginSyncProto::has_team_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginSyncProto::set_has_team_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginSyncProto::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginSyncProto::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 LoginSyncProto::team_id() const {
  return team_id_;
}
inline void LoginSyncProto::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
}

// optional uint64 leader = 7;
inline bool LoginSyncProto::has_leader() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginSyncProto::set_has_leader() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginSyncProto::clear_has_leader() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginSyncProto::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
inline ::google::protobuf::uint64 LoginSyncProto::leader() const {
  return leader_;
}
inline void LoginSyncProto::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
}

// optional int32 mem_count = 8;
inline bool LoginSyncProto::has_mem_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoginSyncProto::set_has_mem_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoginSyncProto::clear_has_mem_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoginSyncProto::clear_mem_count() {
  mem_count_ = 0;
  clear_has_mem_count();
}
inline ::google::protobuf::int32 LoginSyncProto::mem_count() const {
  return mem_count_;
}
inline void LoginSyncProto::set_mem_count(::google::protobuf::int32 value) {
  set_has_mem_count();
  mem_count_ = value;
}

// optional int32 cloness_lev = 9;
inline bool LoginSyncProto::has_cloness_lev() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LoginSyncProto::set_has_cloness_lev() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LoginSyncProto::clear_has_cloness_lev() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LoginSyncProto::clear_cloness_lev() {
  cloness_lev_ = 0;
  clear_has_cloness_lev();
}
inline ::google::protobuf::int32 LoginSyncProto::cloness_lev() const {
  return cloness_lev_;
}
inline void LoginSyncProto::set_cloness_lev(::google::protobuf::int32 value) {
  set_has_cloness_lev();
  cloness_lev_ = value;
}

// optional .proto_ff.LoginSynMarry marry = 10;
inline bool LoginSyncProto::has_marry() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LoginSyncProto::set_has_marry() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LoginSyncProto::clear_has_marry() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LoginSyncProto::clear_marry() {
  if (marry_ != NULL) marry_->::proto_ff::LoginSynMarry::Clear();
  clear_has_marry();
}
inline const ::proto_ff::LoginSynMarry& LoginSyncProto::marry() const {
  return marry_ != NULL ? *marry_ : *default_instance_->marry_;
}
inline ::proto_ff::LoginSynMarry* LoginSyncProto::mutable_marry() {
  set_has_marry();
  if (marry_ == NULL) marry_ = new ::proto_ff::LoginSynMarry;
  return marry_;
}
inline ::proto_ff::LoginSynMarry* LoginSyncProto::release_marry() {
  clear_has_marry();
  ::proto_ff::LoginSynMarry* temp = marry_;
  marry_ = NULL;
  return temp;
}
inline void LoginSyncProto::set_allocated_marry(::proto_ff::LoginSynMarry* marry) {
  delete marry_;
  marry_ = marry;
  if (marry) {
    set_has_marry();
  } else {
    clear_has_marry();
  }
}

// optional .proto_ff.AoPlatProto plat = 11;
inline bool LoginSyncProto::has_plat() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LoginSyncProto::set_has_plat() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LoginSyncProto::clear_has_plat() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LoginSyncProto::clear_plat() {
  if (plat_ != NULL) plat_->::proto_ff::AoPlatProto::Clear();
  clear_has_plat();
}
inline const ::proto_ff::AoPlatProto& LoginSyncProto::plat() const {
  return plat_ != NULL ? *plat_ : *default_instance_->plat_;
}
inline ::proto_ff::AoPlatProto* LoginSyncProto::mutable_plat() {
  set_has_plat();
  if (plat_ == NULL) plat_ = new ::proto_ff::AoPlatProto;
  return plat_;
}
inline ::proto_ff::AoPlatProto* LoginSyncProto::release_plat() {
  clear_has_plat();
  ::proto_ff::AoPlatProto* temp = plat_;
  plat_ = NULL;
  return temp;
}
inline void LoginSyncProto::set_allocated_plat(::proto_ff::AoPlatProto* plat) {
  delete plat_;
  plat_ = plat;
  if (plat) {
    set_has_plat();
  } else {
    clear_has_plat();
  }
}

// optional .proto_ff.FactionMagRecordProto mag = 12;
inline bool LoginSyncProto::has_mag() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LoginSyncProto::set_has_mag() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LoginSyncProto::clear_has_mag() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LoginSyncProto::clear_mag() {
  if (mag_ != NULL) mag_->::proto_ff::FactionMagRecordProto::Clear();
  clear_has_mag();
}
inline const ::proto_ff::FactionMagRecordProto& LoginSyncProto::mag() const {
  return mag_ != NULL ? *mag_ : *default_instance_->mag_;
}
inline ::proto_ff::FactionMagRecordProto* LoginSyncProto::mutable_mag() {
  set_has_mag();
  if (mag_ == NULL) mag_ = new ::proto_ff::FactionMagRecordProto;
  return mag_;
}
inline ::proto_ff::FactionMagRecordProto* LoginSyncProto::release_mag() {
  clear_has_mag();
  ::proto_ff::FactionMagRecordProto* temp = mag_;
  mag_ = NULL;
  return temp;
}
inline void LoginSyncProto::set_allocated_mag(::proto_ff::FactionMagRecordProto* mag) {
  delete mag_;
  mag_ = mag;
  if (mag) {
    set_has_mag();
  } else {
    clear_has_mag();
  }
}

// -------------------------------------------------------------------

// CenterRoleProto

// optional uint64 cid = 1;
inline bool CenterRoleProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterRoleProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterRoleProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterRoleProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CenterRoleProto::cid() const {
  return cid_;
}
inline void CenterRoleProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 uid = 2;
inline bool CenterRoleProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterRoleProto::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterRoleProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterRoleProto::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CenterRoleProto::uid() const {
  return uid_;
}
inline void CenterRoleProto::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional bytes name = 3;
inline bool CenterRoleProto::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterRoleProto::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterRoleProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterRoleProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CenterRoleProto::name() const {
  return *name_;
}
inline void CenterRoleProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CenterRoleProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CenterRoleProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CenterRoleProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CenterRoleProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CenterRoleProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 level = 4;
inline bool CenterRoleProto::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CenterRoleProto::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CenterRoleProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CenterRoleProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CenterRoleProto::level() const {
  return level_;
}
inline void CenterRoleProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 fight = 5;
inline bool CenterRoleProto::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CenterRoleProto::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CenterRoleProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CenterRoleProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 CenterRoleProto::fight() const {
  return fight_;
}
inline void CenterRoleProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 lastlogout = 6;
inline bool CenterRoleProto::has_lastlogout() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CenterRoleProto::set_has_lastlogout() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CenterRoleProto::clear_has_lastlogout() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CenterRoleProto::clear_lastlogout() {
  lastlogout_ = GOOGLE_ULONGLONG(0);
  clear_has_lastlogout();
}
inline ::google::protobuf::uint64 CenterRoleProto::lastlogout() const {
  return lastlogout_;
}
inline void CenterRoleProto::set_lastlogout(::google::protobuf::uint64 value) {
  set_has_lastlogout();
  lastlogout_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 7;
inline bool CenterRoleProto::has_facade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CenterRoleProto::set_has_facade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CenterRoleProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CenterRoleProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& CenterRoleProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* CenterRoleProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* CenterRoleProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void CenterRoleProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint32 vip_level = 8;
inline bool CenterRoleProto::has_vip_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CenterRoleProto::set_has_vip_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CenterRoleProto::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CenterRoleProto::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 CenterRoleProto::vip_level() const {
  return vip_level_;
}
inline void CenterRoleProto::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional int64 hp = 9;
inline bool CenterRoleProto::has_hp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CenterRoleProto::set_has_hp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CenterRoleProto::clear_has_hp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CenterRoleProto::clear_hp() {
  hp_ = GOOGLE_LONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::int64 CenterRoleProto::hp() const {
  return hp_;
}
inline void CenterRoleProto::set_hp(::google::protobuf::int64 value) {
  set_has_hp();
  hp_ = value;
}

// optional int64 max_hp = 10;
inline bool CenterRoleProto::has_max_hp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CenterRoleProto::set_has_max_hp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CenterRoleProto::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CenterRoleProto::clear_max_hp() {
  max_hp_ = GOOGLE_LONGLONG(0);
  clear_has_max_hp();
}
inline ::google::protobuf::int64 CenterRoleProto::max_hp() const {
  return max_hp_;
}
inline void CenterRoleProto::set_max_hp(::google::protobuf::int64 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// optional uint32 pt_stage = 11;
inline bool CenterRoleProto::has_pt_stage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CenterRoleProto::set_has_pt_stage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CenterRoleProto::clear_has_pt_stage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CenterRoleProto::clear_pt_stage() {
  pt_stage_ = 0u;
  clear_has_pt_stage();
}
inline ::google::protobuf::uint32 CenterRoleProto::pt_stage() const {
  return pt_stage_;
}
inline void CenterRoleProto::set_pt_stage(::google::protobuf::uint32 value) {
  set_has_pt_stage();
  pt_stage_ = value;
}

// optional uint32 active = 12;
inline bool CenterRoleProto::has_active() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CenterRoleProto::set_has_active() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CenterRoleProto::clear_has_active() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CenterRoleProto::clear_active() {
  active_ = 0u;
  clear_has_active();
}
inline ::google::protobuf::uint32 CenterRoleProto::active() const {
  return active_;
}
inline void CenterRoleProto::set_active(::google::protobuf::uint32 value) {
  set_has_active();
  active_ = value;
}

// optional uint64 create_time = 13;
inline bool CenterRoleProto::has_create_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CenterRoleProto::set_has_create_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CenterRoleProto::clear_has_create_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CenterRoleProto::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 CenterRoleProto::create_time() const {
  return create_time_;
}
inline void CenterRoleProto::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
}

// optional uint32 sdkrmb = 14;
inline bool CenterRoleProto::has_sdkrmb() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CenterRoleProto::set_has_sdkrmb() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CenterRoleProto::clear_has_sdkrmb() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CenterRoleProto::clear_sdkrmb() {
  sdkrmb_ = 0u;
  clear_has_sdkrmb();
}
inline ::google::protobuf::uint32 CenterRoleProto::sdkrmb() const {
  return sdkrmb_;
}
inline void CenterRoleProto::set_sdkrmb(::google::protobuf::uint32 value) {
  set_has_sdkrmb();
  sdkrmb_ = value;
}

// optional int32 yaota_dupid = 15;
inline bool CenterRoleProto::has_yaota_dupid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CenterRoleProto::set_has_yaota_dupid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CenterRoleProto::clear_has_yaota_dupid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CenterRoleProto::clear_yaota_dupid() {
  yaota_dupid_ = 0;
  clear_has_yaota_dupid();
}
inline ::google::protobuf::int32 CenterRoleProto::yaota_dupid() const {
  return yaota_dupid_;
}
inline void CenterRoleProto::set_yaota_dupid(::google::protobuf::int32 value) {
  set_has_yaota_dupid();
  yaota_dupid_ = value;
}

// -------------------------------------------------------------------

// SocialRoleProto

// optional uint64 cid = 1;
inline bool SocialRoleProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialRoleProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialRoleProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialRoleProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 SocialRoleProto::cid() const {
  return cid_;
}
inline void SocialRoleProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 uid = 2;
inline bool SocialRoleProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialRoleProto::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialRoleProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialRoleProto::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 SocialRoleProto::uid() const {
  return uid_;
}
inline void SocialRoleProto::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional bytes name = 3;
inline bool SocialRoleProto::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialRoleProto::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialRoleProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialRoleProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SocialRoleProto::name() const {
  return *name_;
}
inline void SocialRoleProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SocialRoleProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SocialRoleProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SocialRoleProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* SocialRoleProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SocialRoleProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 prof = 4;
inline bool SocialRoleProto::has_prof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SocialRoleProto::set_has_prof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SocialRoleProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SocialRoleProto::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 SocialRoleProto::prof() const {
  return prof_;
}
inline void SocialRoleProto::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 5;
inline bool SocialRoleProto::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SocialRoleProto::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SocialRoleProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SocialRoleProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SocialRoleProto::level() const {
  return level_;
}
inline void SocialRoleProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 fight = 6;
inline bool SocialRoleProto::has_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SocialRoleProto::set_has_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SocialRoleProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SocialRoleProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 SocialRoleProto::fight() const {
  return fight_;
}
inline void SocialRoleProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 lastlogout = 7;
inline bool SocialRoleProto::has_lastlogout() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SocialRoleProto::set_has_lastlogout() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SocialRoleProto::clear_has_lastlogout() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SocialRoleProto::clear_lastlogout() {
  lastlogout_ = GOOGLE_ULONGLONG(0);
  clear_has_lastlogout();
}
inline ::google::protobuf::uint64 SocialRoleProto::lastlogout() const {
  return lastlogout_;
}
inline void SocialRoleProto::set_lastlogout(::google::protobuf::uint64 value) {
  set_has_lastlogout();
  lastlogout_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 8;
inline bool SocialRoleProto::has_facade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SocialRoleProto::set_has_facade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SocialRoleProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SocialRoleProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& SocialRoleProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* SocialRoleProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* SocialRoleProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void SocialRoleProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint32 vip_level = 9;
inline bool SocialRoleProto::has_vip_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SocialRoleProto::set_has_vip_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SocialRoleProto::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SocialRoleProto::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 SocialRoleProto::vip_level() const {
  return vip_level_;
}
inline void SocialRoleProto::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional uint32 zid = 10;
inline bool SocialRoleProto::has_zid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SocialRoleProto::set_has_zid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SocialRoleProto::clear_has_zid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SocialRoleProto::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 SocialRoleProto::zid() const {
  return zid_;
}
inline void SocialRoleProto::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional bool isonline = 11;
inline bool SocialRoleProto::has_isonline() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SocialRoleProto::set_has_isonline() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SocialRoleProto::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SocialRoleProto::clear_isonline() {
  isonline_ = false;
  clear_has_isonline();
}
inline bool SocialRoleProto::isonline() const {
  return isonline_;
}
inline void SocialRoleProto::set_isonline(bool value) {
  set_has_isonline();
  isonline_ = value;
}

// optional int64 hp = 12;
inline bool SocialRoleProto::has_hp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SocialRoleProto::set_has_hp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SocialRoleProto::clear_has_hp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SocialRoleProto::clear_hp() {
  hp_ = GOOGLE_LONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::int64 SocialRoleProto::hp() const {
  return hp_;
}
inline void SocialRoleProto::set_hp(::google::protobuf::int64 value) {
  set_has_hp();
  hp_ = value;
}

// optional int64 max_hp = 13;
inline bool SocialRoleProto::has_max_hp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SocialRoleProto::set_has_max_hp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SocialRoleProto::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SocialRoleProto::clear_max_hp() {
  max_hp_ = GOOGLE_LONGLONG(0);
  clear_has_max_hp();
}
inline ::google::protobuf::int64 SocialRoleProto::max_hp() const {
  return max_hp_;
}
inline void SocialRoleProto::set_max_hp(::google::protobuf::int64 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// optional uint64 sceneid = 14;
inline bool SocialRoleProto::has_sceneid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SocialRoleProto::set_has_sceneid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SocialRoleProto::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SocialRoleProto::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 SocialRoleProto::sceneid() const {
  return sceneid_;
}
inline void SocialRoleProto::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 mapid = 15;
inline bool SocialRoleProto::has_mapid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SocialRoleProto::set_has_mapid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SocialRoleProto::clear_has_mapid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SocialRoleProto::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 SocialRoleProto::mapid() const {
  return mapid_;
}
inline void SocialRoleProto::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional uint32 scenezid = 16;
inline bool SocialRoleProto::has_scenezid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SocialRoleProto::set_has_scenezid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SocialRoleProto::clear_has_scenezid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SocialRoleProto::clear_scenezid() {
  scenezid_ = 0u;
  clear_has_scenezid();
}
inline ::google::protobuf::uint32 SocialRoleProto::scenezid() const {
  return scenezid_;
}
inline void SocialRoleProto::set_scenezid(::google::protobuf::uint32 value) {
  set_has_scenezid();
  scenezid_ = value;
}

// optional uint32 factionid = 17;
inline bool SocialRoleProto::has_factionid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SocialRoleProto::set_has_factionid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SocialRoleProto::clear_has_factionid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SocialRoleProto::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 SocialRoleProto::factionid() const {
  return factionid_;
}
inline void SocialRoleProto::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional int32 yaota_dupid = 18;
inline bool SocialRoleProto::has_yaota_dupid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SocialRoleProto::set_has_yaota_dupid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SocialRoleProto::clear_has_yaota_dupid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SocialRoleProto::clear_yaota_dupid() {
  yaota_dupid_ = 0;
  clear_has_yaota_dupid();
}
inline ::google::protobuf::int32 SocialRoleProto::yaota_dupid() const {
  return yaota_dupid_;
}
inline void SocialRoleProto::set_yaota_dupid(::google::protobuf::int32 value) {
  set_has_yaota_dupid();
  yaota_dupid_ = value;
}

// -------------------------------------------------------------------

// ClanView

// optional uint64 clan_id = 1;
inline bool ClanView::has_clan_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClanView::set_has_clan_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClanView::clear_has_clan_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClanView::clear_clan_id() {
  clan_id_ = GOOGLE_ULONGLONG(0);
  clear_has_clan_id();
}
inline ::google::protobuf::uint64 ClanView::clan_id() const {
  return clan_id_;
}
inline void ClanView::set_clan_id(::google::protobuf::uint64 value) {
  set_has_clan_id();
  clan_id_ = value;
}

// optional uint64 cid = 2;
inline bool ClanView::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClanView::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClanView::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClanView::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 ClanView::cid() const {
  return cid_;
}
inline void ClanView::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 clan_type = 3;
inline bool ClanView::has_clan_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClanView::set_has_clan_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClanView::clear_has_clan_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClanView::clear_clan_type() {
  clan_type_ = 0;
  clear_has_clan_type();
}
inline ::google::protobuf::int32 ClanView::clan_type() const {
  return clan_type_;
}
inline void ClanView::set_clan_type(::google::protobuf::int32 value) {
  set_has_clan_type();
  clan_type_ = value;
}

// optional bytes clan_name = 4;
inline bool ClanView::has_clan_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClanView::set_has_clan_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClanView::clear_has_clan_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClanView::clear_clan_name() {
  if (clan_name_ != &::google::protobuf::internal::kEmptyString) {
    clan_name_->clear();
  }
  clear_has_clan_name();
}
inline const ::std::string& ClanView::clan_name() const {
  return *clan_name_;
}
inline void ClanView::set_clan_name(const ::std::string& value) {
  set_has_clan_name();
  if (clan_name_ == &::google::protobuf::internal::kEmptyString) {
    clan_name_ = new ::std::string;
  }
  clan_name_->assign(value);
}
inline void ClanView::set_clan_name(const char* value) {
  set_has_clan_name();
  if (clan_name_ == &::google::protobuf::internal::kEmptyString) {
    clan_name_ = new ::std::string;
  }
  clan_name_->assign(value);
}
inline void ClanView::set_clan_name(const void* value, size_t size) {
  set_has_clan_name();
  if (clan_name_ == &::google::protobuf::internal::kEmptyString) {
    clan_name_ = new ::std::string;
  }
  clan_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClanView::mutable_clan_name() {
  set_has_clan_name();
  if (clan_name_ == &::google::protobuf::internal::kEmptyString) {
    clan_name_ = new ::std::string;
  }
  return clan_name_;
}
inline ::std::string* ClanView::release_clan_name() {
  clear_has_clan_name();
  if (clan_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = clan_name_;
    clan_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClanView::set_allocated_clan_name(::std::string* clan_name) {
  if (clan_name_ != &::google::protobuf::internal::kEmptyString) {
    delete clan_name_;
  }
  if (clan_name) {
    set_has_clan_name();
    clan_name_ = clan_name;
  } else {
    clear_has_clan_name();
    clan_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 badge_id = 5;
inline bool ClanView::has_badge_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClanView::set_has_badge_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClanView::clear_has_badge_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClanView::clear_badge_id() {
  badge_id_ = 0;
  clear_has_badge_id();
}
inline ::google::protobuf::int32 ClanView::badge_id() const {
  return badge_id_;
}
inline void ClanView::set_badge_id(::google::protobuf::int32 value) {
  set_has_badge_id();
  badge_id_ = value;
}

// optional bytes badge_name = 6;
inline bool ClanView::has_badge_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClanView::set_has_badge_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClanView::clear_has_badge_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClanView::clear_badge_name() {
  if (badge_name_ != &::google::protobuf::internal::kEmptyString) {
    badge_name_->clear();
  }
  clear_has_badge_name();
}
inline const ::std::string& ClanView::badge_name() const {
  return *badge_name_;
}
inline void ClanView::set_badge_name(const ::std::string& value) {
  set_has_badge_name();
  if (badge_name_ == &::google::protobuf::internal::kEmptyString) {
    badge_name_ = new ::std::string;
  }
  badge_name_->assign(value);
}
inline void ClanView::set_badge_name(const char* value) {
  set_has_badge_name();
  if (badge_name_ == &::google::protobuf::internal::kEmptyString) {
    badge_name_ = new ::std::string;
  }
  badge_name_->assign(value);
}
inline void ClanView::set_badge_name(const void* value, size_t size) {
  set_has_badge_name();
  if (badge_name_ == &::google::protobuf::internal::kEmptyString) {
    badge_name_ = new ::std::string;
  }
  badge_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClanView::mutable_badge_name() {
  set_has_badge_name();
  if (badge_name_ == &::google::protobuf::internal::kEmptyString) {
    badge_name_ = new ::std::string;
  }
  return badge_name_;
}
inline ::std::string* ClanView::release_badge_name() {
  clear_has_badge_name();
  if (badge_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = badge_name_;
    badge_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClanView::set_allocated_badge_name(::std::string* badge_name) {
  if (badge_name_ != &::google::protobuf::internal::kEmptyString) {
    delete badge_name_;
  }
  if (badge_name) {
    set_has_badge_name();
    badge_name_ = badge_name;
  } else {
    clear_has_badge_name();
    badge_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Attr

// required uint32 id = 1;
inline bool Attr::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attr::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attr::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attr::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Attr::id() const {
  return id_;
}
inline void Attr::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 value = 2;
inline bool Attr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attr::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 Attr::value() const {
  return value_;
}
inline void Attr::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// BlueStarAttr

// optional uint32 id = 1;
inline bool BlueStarAttr::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlueStarAttr::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlueStarAttr::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlueStarAttr::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BlueStarAttr::id() const {
  return id_;
}
inline void BlueStarAttr::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 value = 2;
inline bool BlueStarAttr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlueStarAttr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BlueStarAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BlueStarAttr::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 BlueStarAttr::value() const {
  return value_;
}
inline void BlueStarAttr::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// optional int32 lv_part = 3;
inline bool BlueStarAttr::has_lv_part() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlueStarAttr::set_has_lv_part() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlueStarAttr::clear_has_lv_part() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlueStarAttr::clear_lv_part() {
  lv_part_ = 0;
  clear_has_lv_part();
}
inline ::google::protobuf::int32 BlueStarAttr::lv_part() const {
  return lv_part_;
}
inline void BlueStarAttr::set_lv_part(::google::protobuf::int32 value) {
  set_has_lv_part();
  lv_part_ = value;
}

// -------------------------------------------------------------------

// TurnAttr

// repeated int32 com_pos = 1;
inline int TurnAttr::com_pos_size() const {
  return com_pos_.size();
}
inline void TurnAttr::clear_com_pos() {
  com_pos_.Clear();
}
inline ::google::protobuf::int32 TurnAttr::com_pos(int index) const {
  return com_pos_.Get(index);
}
inline void TurnAttr::set_com_pos(int index, ::google::protobuf::int32 value) {
  com_pos_.Set(index, value);
}
inline void TurnAttr::add_com_pos(::google::protobuf::int32 value) {
  com_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TurnAttr::com_pos() const {
  return com_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TurnAttr::mutable_com_pos() {
  return &com_pos_;
}

// repeated int32 star_pos = 2;
inline int TurnAttr::star_pos_size() const {
  return star_pos_.size();
}
inline void TurnAttr::clear_star_pos() {
  star_pos_.Clear();
}
inline ::google::protobuf::int32 TurnAttr::star_pos(int index) const {
  return star_pos_.Get(index);
}
inline void TurnAttr::set_star_pos(int index, ::google::protobuf::int32 value) {
  star_pos_.Set(index, value);
}
inline void TurnAttr::add_star_pos(::google::protobuf::int32 value) {
  star_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TurnAttr::star_pos() const {
  return star_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TurnAttr::mutable_star_pos() {
  return &star_pos_;
}

// -------------------------------------------------------------------

// ItemProtoInfo

// optional int32 index = 1;
inline bool ItemProtoInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemProtoInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemProtoInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemProtoInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ItemProtoInfo::index() const {
  return index_;
}
inline void ItemProtoInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional uint64 item_id = 2;
inline bool ItemProtoInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemProtoInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemProtoInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemProtoInfo::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 ItemProtoInfo::item_id() const {
  return item_id_;
}
inline void ItemProtoInfo::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional int64 item_num = 3;
inline bool ItemProtoInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemProtoInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemProtoInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemProtoInfo::clear_item_num() {
  item_num_ = GOOGLE_LONGLONG(0);
  clear_has_item_num();
}
inline ::google::protobuf::int64 ItemProtoInfo::item_num() const {
  return item_num_;
}
inline void ItemProtoInfo::set_item_num(::google::protobuf::int64 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional int32 bind = 4;
inline bool ItemProtoInfo::has_bind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemProtoInfo::set_has_bind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemProtoInfo::clear_has_bind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemProtoInfo::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 ItemProtoInfo::bind() const {
  return bind_;
}
inline void ItemProtoInfo::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
}

// optional int32 level = 5;
inline bool ItemProtoInfo::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemProtoInfo::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemProtoInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemProtoInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ItemProtoInfo::level() const {
  return level_;
}
inline void ItemProtoInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// repeated .proto_ff.Attr base = 6;
inline int ItemProtoInfo::base_size() const {
  return base_.size();
}
inline void ItemProtoInfo::clear_base() {
  base_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::base(int index) const {
  return base_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_base(int index) {
  return base_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_base() {
  return base_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::base() const {
  return base_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_base() {
  return &base_;
}

// repeated .proto_ff.Attr refine = 7;
inline int ItemProtoInfo::refine_size() const {
  return refine_.size();
}
inline void ItemProtoInfo::clear_refine() {
  refine_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::refine(int index) const {
  return refine_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_refine(int index) {
  return refine_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_refine() {
  return refine_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::refine() const {
  return refine_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_refine() {
  return &refine_;
}

// repeated .proto_ff.BlueStarAttr blue = 8;
inline int ItemProtoInfo::blue_size() const {
  return blue_.size();
}
inline void ItemProtoInfo::clear_blue() {
  blue_.Clear();
}
inline const ::proto_ff::BlueStarAttr& ItemProtoInfo::blue(int index) const {
  return blue_.Get(index);
}
inline ::proto_ff::BlueStarAttr* ItemProtoInfo::mutable_blue(int index) {
  return blue_.Mutable(index);
}
inline ::proto_ff::BlueStarAttr* ItemProtoInfo::add_blue() {
  return blue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >&
ItemProtoInfo::blue() const {
  return blue_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >*
ItemProtoInfo::mutable_blue() {
  return &blue_;
}

// repeated .proto_ff.Attr god = 9;
inline int ItemProtoInfo::god_size() const {
  return god_.size();
}
inline void ItemProtoInfo::clear_god() {
  god_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::god(int index) const {
  return god_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_god(int index) {
  return god_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_god() {
  return god_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::god() const {
  return god_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_god() {
  return &god_;
}

// optional uint64 expireTime = 10;
inline bool ItemProtoInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemProtoInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemProtoInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemProtoInfo::clear_expiretime() {
  expiretime_ = GOOGLE_ULONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::uint64 ItemProtoInfo::expiretime() const {
  return expiretime_;
}
inline void ItemProtoInfo::set_expiretime(::google::protobuf::uint64 value) {
  set_has_expiretime();
  expiretime_ = value;
}

// optional int32 strong_lv = 11;
inline bool ItemProtoInfo::has_strong_lv() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemProtoInfo::set_has_strong_lv() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemProtoInfo::clear_has_strong_lv() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemProtoInfo::clear_strong_lv() {
  strong_lv_ = 0;
  clear_has_strong_lv();
}
inline ::google::protobuf::int32 ItemProtoInfo::strong_lv() const {
  return strong_lv_;
}
inline void ItemProtoInfo::set_strong_lv(::google::protobuf::int32 value) {
  set_has_strong_lv();
  strong_lv_ = value;
}

// optional int32 strong_wear_quality = 12;
inline bool ItemProtoInfo::has_strong_wear_quality() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemProtoInfo::set_has_strong_wear_quality() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemProtoInfo::clear_has_strong_wear_quality() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemProtoInfo::clear_strong_wear_quality() {
  strong_wear_quality_ = 0;
  clear_has_strong_wear_quality();
}
inline ::google::protobuf::int32 ItemProtoInfo::strong_wear_quality() const {
  return strong_wear_quality_;
}
inline void ItemProtoInfo::set_strong_wear_quality(::google::protobuf::int32 value) {
  set_has_strong_wear_quality();
  strong_wear_quality_ = value;
}

// optional int32 strong_exp = 13;
inline bool ItemProtoInfo::has_strong_exp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemProtoInfo::set_has_strong_exp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemProtoInfo::clear_has_strong_exp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemProtoInfo::clear_strong_exp() {
  strong_exp_ = 0;
  clear_has_strong_exp();
}
inline ::google::protobuf::int32 ItemProtoInfo::strong_exp() const {
  return strong_exp_;
}
inline void ItemProtoInfo::set_strong_exp(::google::protobuf::int32 value) {
  set_has_strong_exp();
  strong_exp_ = value;
}

// optional int32 spec_lv = 14;
inline bool ItemProtoInfo::has_spec_lv() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ItemProtoInfo::set_has_spec_lv() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ItemProtoInfo::clear_has_spec_lv() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ItemProtoInfo::clear_spec_lv() {
  spec_lv_ = 0;
  clear_has_spec_lv();
}
inline ::google::protobuf::int32 ItemProtoInfo::spec_lv() const {
  return spec_lv_;
}
inline void ItemProtoInfo::set_spec_lv(::google::protobuf::int32 value) {
  set_has_spec_lv();
  spec_lv_ = value;
}

// optional int32 strong_wear_quality_exp = 15;
inline bool ItemProtoInfo::has_strong_wear_quality_exp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ItemProtoInfo::set_has_strong_wear_quality_exp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ItemProtoInfo::clear_has_strong_wear_quality_exp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ItemProtoInfo::clear_strong_wear_quality_exp() {
  strong_wear_quality_exp_ = 0;
  clear_has_strong_wear_quality_exp();
}
inline ::google::protobuf::int32 ItemProtoInfo::strong_wear_quality_exp() const {
  return strong_wear_quality_exp_;
}
inline void ItemProtoInfo::set_strong_wear_quality_exp(::google::protobuf::int32 value) {
  set_has_strong_wear_quality_exp();
  strong_wear_quality_exp_ = value;
}

// repeated .proto_ff.Attr misc = 16;
inline int ItemProtoInfo::misc_size() const {
  return misc_.size();
}
inline void ItemProtoInfo::clear_misc() {
  misc_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::misc(int index) const {
  return misc_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_misc(int index) {
  return misc_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_misc() {
  return misc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::misc() const {
  return misc_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_misc() {
  return &misc_;
}

// optional int32 makeId = 17;
inline bool ItemProtoInfo::has_makeid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ItemProtoInfo::set_has_makeid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ItemProtoInfo::clear_has_makeid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ItemProtoInfo::clear_makeid() {
  makeid_ = 0;
  clear_has_makeid();
}
inline ::google::protobuf::int32 ItemProtoInfo::makeid() const {
  return makeid_;
}
inline void ItemProtoInfo::set_makeid(::google::protobuf::int32 value) {
  set_has_makeid();
  makeid_ = value;
}

// optional int32 state = 18;
inline bool ItemProtoInfo::has_state() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ItemProtoInfo::set_has_state() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ItemProtoInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ItemProtoInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ItemProtoInfo::state() const {
  return state_;
}
inline void ItemProtoInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// repeated int32 gold_star = 19;
inline int ItemProtoInfo::gold_star_size() const {
  return gold_star_.size();
}
inline void ItemProtoInfo::clear_gold_star() {
  gold_star_.Clear();
}
inline ::google::protobuf::int32 ItemProtoInfo::gold_star(int index) const {
  return gold_star_.Get(index);
}
inline void ItemProtoInfo::set_gold_star(int index, ::google::protobuf::int32 value) {
  gold_star_.Set(index, value);
}
inline void ItemProtoInfo::add_gold_star(::google::protobuf::int32 value) {
  gold_star_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ItemProtoInfo::gold_star() const {
  return gold_star_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ItemProtoInfo::mutable_gold_star() {
  return &gold_star_;
}

// repeated int32 silver_star = 20;
inline int ItemProtoInfo::silver_star_size() const {
  return silver_star_.size();
}
inline void ItemProtoInfo::clear_silver_star() {
  silver_star_.Clear();
}
inline ::google::protobuf::int32 ItemProtoInfo::silver_star(int index) const {
  return silver_star_.Get(index);
}
inline void ItemProtoInfo::set_silver_star(int index, ::google::protobuf::int32 value) {
  silver_star_.Set(index, value);
}
inline void ItemProtoInfo::add_silver_star(::google::protobuf::int32 value) {
  silver_star_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ItemProtoInfo::silver_star() const {
  return silver_star_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ItemProtoInfo::mutable_silver_star() {
  return &silver_star_;
}

// optional uint64 make_time = 21;
inline bool ItemProtoInfo::has_make_time() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ItemProtoInfo::set_has_make_time() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ItemProtoInfo::clear_has_make_time() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ItemProtoInfo::clear_make_time() {
  make_time_ = GOOGLE_ULONGLONG(0);
  clear_has_make_time();
}
inline ::google::protobuf::uint64 ItemProtoInfo::make_time() const {
  return make_time_;
}
inline void ItemProtoInfo::set_make_time(::google::protobuf::uint64 value) {
  set_has_make_time();
  make_time_ = value;
}

// optional bytes make_name = 22;
inline bool ItemProtoInfo::has_make_name() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ItemProtoInfo::set_has_make_name() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ItemProtoInfo::clear_has_make_name() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ItemProtoInfo::clear_make_name() {
  if (make_name_ != &::google::protobuf::internal::kEmptyString) {
    make_name_->clear();
  }
  clear_has_make_name();
}
inline const ::std::string& ItemProtoInfo::make_name() const {
  return *make_name_;
}
inline void ItemProtoInfo::set_make_name(const ::std::string& value) {
  set_has_make_name();
  if (make_name_ == &::google::protobuf::internal::kEmptyString) {
    make_name_ = new ::std::string;
  }
  make_name_->assign(value);
}
inline void ItemProtoInfo::set_make_name(const char* value) {
  set_has_make_name();
  if (make_name_ == &::google::protobuf::internal::kEmptyString) {
    make_name_ = new ::std::string;
  }
  make_name_->assign(value);
}
inline void ItemProtoInfo::set_make_name(const void* value, size_t size) {
  set_has_make_name();
  if (make_name_ == &::google::protobuf::internal::kEmptyString) {
    make_name_ = new ::std::string;
  }
  make_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ItemProtoInfo::mutable_make_name() {
  set_has_make_name();
  if (make_name_ == &::google::protobuf::internal::kEmptyString) {
    make_name_ = new ::std::string;
  }
  return make_name_;
}
inline ::std::string* ItemProtoInfo::release_make_name() {
  clear_has_make_name();
  if (make_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = make_name_;
    make_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ItemProtoInfo::set_allocated_make_name(::std::string* make_name) {
  if (make_name_ != &::google::protobuf::internal::kEmptyString) {
    delete make_name_;
  }
  if (make_name) {
    set_has_make_name();
    make_name_ = make_name;
  } else {
    clear_has_make_name();
    make_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 savvy = 23;
inline bool ItemProtoInfo::has_savvy() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ItemProtoInfo::set_has_savvy() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ItemProtoInfo::clear_has_savvy() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ItemProtoInfo::clear_savvy() {
  savvy_ = 0;
  clear_has_savvy();
}
inline ::google::protobuf::int32 ItemProtoInfo::savvy() const {
  return savvy_;
}
inline void ItemProtoInfo::set_savvy(::google::protobuf::int32 value) {
  set_has_savvy();
  savvy_ = value;
}

// repeated .proto_ff.ComPair64 skill = 24;
inline int ItemProtoInfo::skill_size() const {
  return skill_.size();
}
inline void ItemProtoInfo::clear_skill() {
  skill_.Clear();
}
inline const ::proto_ff::ComPair64& ItemProtoInfo::skill(int index) const {
  return skill_.Get(index);
}
inline ::proto_ff::ComPair64* ItemProtoInfo::mutable_skill(int index) {
  return skill_.Mutable(index);
}
inline ::proto_ff::ComPair64* ItemProtoInfo::add_skill() {
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
ItemProtoInfo::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
ItemProtoInfo::mutable_skill() {
  return &skill_;
}

// optional int32 evolve_lv = 25;
inline bool ItemProtoInfo::has_evolve_lv() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ItemProtoInfo::set_has_evolve_lv() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ItemProtoInfo::clear_has_evolve_lv() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ItemProtoInfo::clear_evolve_lv() {
  evolve_lv_ = 0;
  clear_has_evolve_lv();
}
inline ::google::protobuf::int32 ItemProtoInfo::evolve_lv() const {
  return evolve_lv_;
}
inline void ItemProtoInfo::set_evolve_lv(::google::protobuf::int32 value) {
  set_has_evolve_lv();
  evolve_lv_ = value;
}

// optional int32 awaken_lv = 26;
inline bool ItemProtoInfo::has_awaken_lv() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ItemProtoInfo::set_has_awaken_lv() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ItemProtoInfo::clear_has_awaken_lv() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ItemProtoInfo::clear_awaken_lv() {
  awaken_lv_ = 0;
  clear_has_awaken_lv();
}
inline ::google::protobuf::int32 ItemProtoInfo::awaken_lv() const {
  return awaken_lv_;
}
inline void ItemProtoInfo::set_awaken_lv(::google::protobuf::int32 value) {
  set_has_awaken_lv();
  awaken_lv_ = value;
}

// optional .proto_ff.TurnAttr turn_attr = 27;
inline bool ItemProtoInfo::has_turn_attr() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ItemProtoInfo::set_has_turn_attr() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ItemProtoInfo::clear_has_turn_attr() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ItemProtoInfo::clear_turn_attr() {
  if (turn_attr_ != NULL) turn_attr_->::proto_ff::TurnAttr::Clear();
  clear_has_turn_attr();
}
inline const ::proto_ff::TurnAttr& ItemProtoInfo::turn_attr() const {
  return turn_attr_ != NULL ? *turn_attr_ : *default_instance_->turn_attr_;
}
inline ::proto_ff::TurnAttr* ItemProtoInfo::mutable_turn_attr() {
  set_has_turn_attr();
  if (turn_attr_ == NULL) turn_attr_ = new ::proto_ff::TurnAttr;
  return turn_attr_;
}
inline ::proto_ff::TurnAttr* ItemProtoInfo::release_turn_attr() {
  clear_has_turn_attr();
  ::proto_ff::TurnAttr* temp = turn_attr_;
  turn_attr_ = NULL;
  return temp;
}
inline void ItemProtoInfo::set_allocated_turn_attr(::proto_ff::TurnAttr* turn_attr) {
  delete turn_attr_;
  turn_attr_ = turn_attr;
  if (turn_attr) {
    set_has_turn_attr();
  } else {
    clear_has_turn_attr();
  }
}

// optional int64 item_chg_count = 28;
inline bool ItemProtoInfo::has_item_chg_count() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ItemProtoInfo::set_has_item_chg_count() {
  _has_bits_[0] |= 0x08000000u;
}
inline void ItemProtoInfo::clear_has_item_chg_count() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void ItemProtoInfo::clear_item_chg_count() {
  item_chg_count_ = GOOGLE_LONGLONG(0);
  clear_has_item_chg_count();
}
inline ::google::protobuf::int64 ItemProtoInfo::item_chg_count() const {
  return item_chg_count_;
}
inline void ItemProtoInfo::set_item_chg_count(::google::protobuf::int64 value) {
  set_has_item_chg_count();
  item_chg_count_ = value;
}

// repeated int32 unlock_attr_index = 29;
inline int ItemProtoInfo::unlock_attr_index_size() const {
  return unlock_attr_index_.size();
}
inline void ItemProtoInfo::clear_unlock_attr_index() {
  unlock_attr_index_.Clear();
}
inline ::google::protobuf::int32 ItemProtoInfo::unlock_attr_index(int index) const {
  return unlock_attr_index_.Get(index);
}
inline void ItemProtoInfo::set_unlock_attr_index(int index, ::google::protobuf::int32 value) {
  unlock_attr_index_.Set(index, value);
}
inline void ItemProtoInfo::add_unlock_attr_index(::google::protobuf::int32 value) {
  unlock_attr_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ItemProtoInfo::unlock_attr_index() const {
  return unlock_attr_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ItemProtoInfo::mutable_unlock_attr_index() {
  return &unlock_attr_index_;
}

// optional uint32 base_attr_percent = 50;
inline bool ItemProtoInfo::has_base_attr_percent() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ItemProtoInfo::set_has_base_attr_percent() {
  _has_bits_[0] |= 0x20000000u;
}
inline void ItemProtoInfo::clear_has_base_attr_percent() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void ItemProtoInfo::clear_base_attr_percent() {
  base_attr_percent_ = 0u;
  clear_has_base_attr_percent();
}
inline ::google::protobuf::uint32 ItemProtoInfo::base_attr_percent() const {
  return base_attr_percent_;
}
inline void ItemProtoInfo::set_base_attr_percent(::google::protobuf::uint32 value) {
  set_has_base_attr_percent();
  base_attr_percent_ = value;
}

// optional uint32 star_attr_percent = 51;
inline bool ItemProtoInfo::has_star_attr_percent() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ItemProtoInfo::set_has_star_attr_percent() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ItemProtoInfo::clear_has_star_attr_percent() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ItemProtoInfo::clear_star_attr_percent() {
  star_attr_percent_ = 0u;
  clear_has_star_attr_percent();
}
inline ::google::protobuf::uint32 ItemProtoInfo::star_attr_percent() const {
  return star_attr_percent_;
}
inline void ItemProtoInfo::set_star_attr_percent(::google::protobuf::uint32 value) {
  set_has_star_attr_percent();
  star_attr_percent_ = value;
}

// optional uint32 god_attr_percent = 52;
inline bool ItemProtoInfo::has_god_attr_percent() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void ItemProtoInfo::set_has_god_attr_percent() {
  _has_bits_[0] |= 0x80000000u;
}
inline void ItemProtoInfo::clear_has_god_attr_percent() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void ItemProtoInfo::clear_god_attr_percent() {
  god_attr_percent_ = 0u;
  clear_has_god_attr_percent();
}
inline ::google::protobuf::uint32 ItemProtoInfo::god_attr_percent() const {
  return god_attr_percent_;
}
inline void ItemProtoInfo::set_god_attr_percent(::google::protobuf::uint32 value) {
  set_has_god_attr_percent();
  god_attr_percent_ = value;
}

// -------------------------------------------------------------------

// StoneSlotInfo

// optional int32 stone_pos = 1;
inline bool StoneSlotInfo::has_stone_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoneSlotInfo::set_has_stone_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoneSlotInfo::clear_has_stone_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoneSlotInfo::clear_stone_pos() {
  stone_pos_ = 0;
  clear_has_stone_pos();
}
inline ::google::protobuf::int32 StoneSlotInfo::stone_pos() const {
  return stone_pos_;
}
inline void StoneSlotInfo::set_stone_pos(::google::protobuf::int32 value) {
  set_has_stone_pos();
  stone_pos_ = value;
}

// optional int64 stoneid = 2;
inline bool StoneSlotInfo::has_stoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoneSlotInfo::set_has_stoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoneSlotInfo::clear_has_stoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoneSlotInfo::clear_stoneid() {
  stoneid_ = GOOGLE_LONGLONG(0);
  clear_has_stoneid();
}
inline ::google::protobuf::int64 StoneSlotInfo::stoneid() const {
  return stoneid_;
}
inline void StoneSlotInfo::set_stoneid(::google::protobuf::int64 value) {
  set_has_stoneid();
  stoneid_ = value;
}

// -------------------------------------------------------------------

// WashSlotInfo

// optional int32 slot = 1;
inline bool WashSlotInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WashSlotInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WashSlotInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WashSlotInfo::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 WashSlotInfo::slot() const {
  return slot_;
}
inline void WashSlotInfo::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// optional int32 quality = 2;
inline bool WashSlotInfo::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WashSlotInfo::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WashSlotInfo::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WashSlotInfo::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 WashSlotInfo::quality() const {
  return quality_;
}
inline void WashSlotInfo::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 lock = 3;
inline bool WashSlotInfo::has_lock() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WashSlotInfo::set_has_lock() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WashSlotInfo::clear_has_lock() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WashSlotInfo::clear_lock() {
  lock_ = 0;
  clear_has_lock();
}
inline ::google::protobuf::int32 WashSlotInfo::lock() const {
  return lock_;
}
inline void WashSlotInfo::set_lock(::google::protobuf::int32 value) {
  set_has_lock();
  lock_ = value;
}

// optional int32 id = 4;
inline bool WashSlotInfo::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WashSlotInfo::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WashSlotInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WashSlotInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WashSlotInfo::id() const {
  return id_;
}
inline void WashSlotInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 value = 5;
inline bool WashSlotInfo::has_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WashSlotInfo::set_has_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WashSlotInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WashSlotInfo::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 WashSlotInfo::value() const {
  return value_;
}
inline void WashSlotInfo::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// RefineSlotInfo

// optional int32 refine_lv = 1;
inline bool RefineSlotInfo::has_refine_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefineSlotInfo::set_has_refine_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefineSlotInfo::clear_has_refine_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefineSlotInfo::clear_refine_lv() {
  refine_lv_ = 0;
  clear_has_refine_lv();
}
inline ::google::protobuf::int32 RefineSlotInfo::refine_lv() const {
  return refine_lv_;
}
inline void RefineSlotInfo::set_refine_lv(::google::protobuf::int32 value) {
  set_has_refine_lv();
  refine_lv_ = value;
}

// repeated .proto_ff.ComPair unlocks = 2;
inline int RefineSlotInfo::unlocks_size() const {
  return unlocks_.size();
}
inline void RefineSlotInfo::clear_unlocks() {
  unlocks_.Clear();
}
inline const ::proto_ff::ComPair& RefineSlotInfo::unlocks(int index) const {
  return unlocks_.Get(index);
}
inline ::proto_ff::ComPair* RefineSlotInfo::mutable_unlocks(int index) {
  return unlocks_.Mutable(index);
}
inline ::proto_ff::ComPair* RefineSlotInfo::add_unlocks() {
  return unlocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
RefineSlotInfo::unlocks() const {
  return unlocks_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
RefineSlotInfo::mutable_unlocks() {
  return &unlocks_;
}

// optional int32 gm_lv = 3;
inline bool RefineSlotInfo::has_gm_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RefineSlotInfo::set_has_gm_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RefineSlotInfo::clear_has_gm_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RefineSlotInfo::clear_gm_lv() {
  gm_lv_ = 0;
  clear_has_gm_lv();
}
inline ::google::protobuf::int32 RefineSlotInfo::gm_lv() const {
  return gm_lv_;
}
inline void RefineSlotInfo::set_gm_lv(::google::protobuf::int32 value) {
  set_has_gm_lv();
  gm_lv_ = value;
}

// repeated int32 lock_pos = 4;
inline int RefineSlotInfo::lock_pos_size() const {
  return lock_pos_.size();
}
inline void RefineSlotInfo::clear_lock_pos() {
  lock_pos_.Clear();
}
inline ::google::protobuf::int32 RefineSlotInfo::lock_pos(int index) const {
  return lock_pos_.Get(index);
}
inline void RefineSlotInfo::set_lock_pos(int index, ::google::protobuf::int32 value) {
  lock_pos_.Set(index, value);
}
inline void RefineSlotInfo::add_lock_pos(::google::protobuf::int32 value) {
  lock_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RefineSlotInfo::lock_pos() const {
  return lock_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RefineSlotInfo::mutable_lock_pos() {
  return &lock_pos_;
}

// -------------------------------------------------------------------

// SealSlotInfo

// optional int32 slot = 1;
inline bool SealSlotInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SealSlotInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SealSlotInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SealSlotInfo::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 SealSlotInfo::slot() const {
  return slot_;
}
inline void SealSlotInfo::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// optional int32 itemid = 2;
inline bool SealSlotInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SealSlotInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SealSlotInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SealSlotInfo::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 SealSlotInfo::itemid() const {
  return itemid_;
}
inline void SealSlotInfo::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// -------------------------------------------------------------------

// EquipSlotInfo

// optional int32 slot_pos = 1;
inline bool EquipSlotInfo::has_slot_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSlotInfo::set_has_slot_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSlotInfo::clear_has_slot_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSlotInfo::clear_slot_pos() {
  slot_pos_ = 0;
  clear_has_slot_pos();
}
inline ::google::protobuf::int32 EquipSlotInfo::slot_pos() const {
  return slot_pos_;
}
inline void EquipSlotInfo::set_slot_pos(::google::protobuf::int32 value) {
  set_has_slot_pos();
  slot_pos_ = value;
}

// optional int64 total_score = 2;
inline bool EquipSlotInfo::has_total_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSlotInfo::set_has_total_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSlotInfo::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSlotInfo::clear_total_score() {
  total_score_ = GOOGLE_LONGLONG(0);
  clear_has_total_score();
}
inline ::google::protobuf::int64 EquipSlotInfo::total_score() const {
  return total_score_;
}
inline void EquipSlotInfo::set_total_score(::google::protobuf::int64 value) {
  set_has_total_score();
  total_score_ = value;
}

// optional int32 stronglv = 3;
inline bool EquipSlotInfo::has_stronglv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipSlotInfo::set_has_stronglv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipSlotInfo::clear_has_stronglv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipSlotInfo::clear_stronglv() {
  stronglv_ = 0;
  clear_has_stronglv();
}
inline ::google::protobuf::int32 EquipSlotInfo::stronglv() const {
  return stronglv_;
}
inline void EquipSlotInfo::set_stronglv(::google::protobuf::int32 value) {
  set_has_stronglv();
  stronglv_ = value;
}

// repeated .proto_ff.StoneSlotInfo stones = 4;
inline int EquipSlotInfo::stones_size() const {
  return stones_.size();
}
inline void EquipSlotInfo::clear_stones() {
  stones_.Clear();
}
inline const ::proto_ff::StoneSlotInfo& EquipSlotInfo::stones(int index) const {
  return stones_.Get(index);
}
inline ::proto_ff::StoneSlotInfo* EquipSlotInfo::mutable_stones(int index) {
  return stones_.Mutable(index);
}
inline ::proto_ff::StoneSlotInfo* EquipSlotInfo::add_stones() {
  return stones_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StoneSlotInfo >&
EquipSlotInfo::stones() const {
  return stones_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StoneSlotInfo >*
EquipSlotInfo::mutable_stones() {
  return &stones_;
}

// optional int32 stone_pay_slot_open = 5;
inline bool EquipSlotInfo::has_stone_pay_slot_open() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipSlotInfo::set_has_stone_pay_slot_open() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipSlotInfo::clear_has_stone_pay_slot_open() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipSlotInfo::clear_stone_pay_slot_open() {
  stone_pay_slot_open_ = 0;
  clear_has_stone_pay_slot_open();
}
inline ::google::protobuf::int32 EquipSlotInfo::stone_pay_slot_open() const {
  return stone_pay_slot_open_;
}
inline void EquipSlotInfo::set_stone_pay_slot_open(::google::protobuf::int32 value) {
  set_has_stone_pay_slot_open();
  stone_pay_slot_open_ = value;
}

// repeated .proto_ff.WashSlotInfo washs = 6;
inline int EquipSlotInfo::washs_size() const {
  return washs_.size();
}
inline void EquipSlotInfo::clear_washs() {
  washs_.Clear();
}
inline const ::proto_ff::WashSlotInfo& EquipSlotInfo::washs(int index) const {
  return washs_.Get(index);
}
inline ::proto_ff::WashSlotInfo* EquipSlotInfo::mutable_washs(int index) {
  return washs_.Mutable(index);
}
inline ::proto_ff::WashSlotInfo* EquipSlotInfo::add_washs() {
  return washs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WashSlotInfo >&
EquipSlotInfo::washs() const {
  return washs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WashSlotInfo >*
EquipSlotInfo::mutable_washs() {
  return &washs_;
}

// optional int32 suitlv = 7;
inline bool EquipSlotInfo::has_suitlv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EquipSlotInfo::set_has_suitlv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EquipSlotInfo::clear_has_suitlv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EquipSlotInfo::clear_suitlv() {
  suitlv_ = 0;
  clear_has_suitlv();
}
inline ::google::protobuf::int32 EquipSlotInfo::suitlv() const {
  return suitlv_;
}
inline void EquipSlotInfo::set_suitlv(::google::protobuf::int32 value) {
  set_has_suitlv();
  suitlv_ = value;
}

// optional .proto_ff.RefineSlotInfo refine = 8;
inline bool EquipSlotInfo::has_refine() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EquipSlotInfo::set_has_refine() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EquipSlotInfo::clear_has_refine() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EquipSlotInfo::clear_refine() {
  if (refine_ != NULL) refine_->::proto_ff::RefineSlotInfo::Clear();
  clear_has_refine();
}
inline const ::proto_ff::RefineSlotInfo& EquipSlotInfo::refine() const {
  return refine_ != NULL ? *refine_ : *default_instance_->refine_;
}
inline ::proto_ff::RefineSlotInfo* EquipSlotInfo::mutable_refine() {
  set_has_refine();
  if (refine_ == NULL) refine_ = new ::proto_ff::RefineSlotInfo;
  return refine_;
}
inline ::proto_ff::RefineSlotInfo* EquipSlotInfo::release_refine() {
  clear_has_refine();
  ::proto_ff::RefineSlotInfo* temp = refine_;
  refine_ = NULL;
  return temp;
}
inline void EquipSlotInfo::set_allocated_refine(::proto_ff::RefineSlotInfo* refine) {
  delete refine_;
  refine_ = refine;
  if (refine) {
    set_has_refine();
  } else {
    clear_has_refine();
  }
}

// optional int32 awaken_lv = 9;
inline bool EquipSlotInfo::has_awaken_lv() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EquipSlotInfo::set_has_awaken_lv() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EquipSlotInfo::clear_has_awaken_lv() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EquipSlotInfo::clear_awaken_lv() {
  awaken_lv_ = 0;
  clear_has_awaken_lv();
}
inline ::google::protobuf::int32 EquipSlotInfo::awaken_lv() const {
  return awaken_lv_;
}
inline void EquipSlotInfo::set_awaken_lv(::google::protobuf::int32 value) {
  set_has_awaken_lv();
  awaken_lv_ = value;
}

// optional int32 awaken_break_flag = 10;
inline bool EquipSlotInfo::has_awaken_break_flag() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EquipSlotInfo::set_has_awaken_break_flag() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EquipSlotInfo::clear_has_awaken_break_flag() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EquipSlotInfo::clear_awaken_break_flag() {
  awaken_break_flag_ = 0;
  clear_has_awaken_break_flag();
}
inline ::google::protobuf::int32 EquipSlotInfo::awaken_break_flag() const {
  return awaken_break_flag_;
}
inline void EquipSlotInfo::set_awaken_break_flag(::google::protobuf::int32 value) {
  set_has_awaken_break_flag();
  awaken_break_flag_ = value;
}

// optional int32 soaring_lv = 11;
inline bool EquipSlotInfo::has_soaring_lv() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EquipSlotInfo::set_has_soaring_lv() {
  _has_bits_[0] |= 0x00000400u;
}
inline void EquipSlotInfo::clear_has_soaring_lv() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void EquipSlotInfo::clear_soaring_lv() {
  soaring_lv_ = 0;
  clear_has_soaring_lv();
}
inline ::google::protobuf::int32 EquipSlotInfo::soaring_lv() const {
  return soaring_lv_;
}
inline void EquipSlotInfo::set_soaring_lv(::google::protobuf::int32 value) {
  set_has_soaring_lv();
  soaring_lv_ = value;
}

// optional int32 quality_lv = 12;
inline bool EquipSlotInfo::has_quality_lv() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void EquipSlotInfo::set_has_quality_lv() {
  _has_bits_[0] |= 0x00000800u;
}
inline void EquipSlotInfo::clear_has_quality_lv() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void EquipSlotInfo::clear_quality_lv() {
  quality_lv_ = 0;
  clear_has_quality_lv();
}
inline ::google::protobuf::int32 EquipSlotInfo::quality_lv() const {
  return quality_lv_;
}
inline void EquipSlotInfo::set_quality_lv(::google::protobuf::int32 value) {
  set_has_quality_lv();
  quality_lv_ = value;
}

// repeated .proto_ff.SealSlotInfo seal_slots = 13;
inline int EquipSlotInfo::seal_slots_size() const {
  return seal_slots_.size();
}
inline void EquipSlotInfo::clear_seal_slots() {
  seal_slots_.Clear();
}
inline const ::proto_ff::SealSlotInfo& EquipSlotInfo::seal_slots(int index) const {
  return seal_slots_.Get(index);
}
inline ::proto_ff::SealSlotInfo* EquipSlotInfo::mutable_seal_slots(int index) {
  return seal_slots_.Mutable(index);
}
inline ::proto_ff::SealSlotInfo* EquipSlotInfo::add_seal_slots() {
  return seal_slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SealSlotInfo >&
EquipSlotInfo::seal_slots() const {
  return seal_slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SealSlotInfo >*
EquipSlotInfo::mutable_seal_slots() {
  return &seal_slots_;
}

// repeated int32 active_seal_ids = 14;
inline int EquipSlotInfo::active_seal_ids_size() const {
  return active_seal_ids_.size();
}
inline void EquipSlotInfo::clear_active_seal_ids() {
  active_seal_ids_.Clear();
}
inline ::google::protobuf::int32 EquipSlotInfo::active_seal_ids(int index) const {
  return active_seal_ids_.Get(index);
}
inline void EquipSlotInfo::set_active_seal_ids(int index, ::google::protobuf::int32 value) {
  active_seal_ids_.Set(index, value);
}
inline void EquipSlotInfo::add_active_seal_ids(::google::protobuf::int32 value) {
  active_seal_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EquipSlotInfo::active_seal_ids() const {
  return active_seal_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EquipSlotInfo::mutable_active_seal_ids() {
  return &active_seal_ids_;
}

// -------------------------------------------------------------------

// EquipInfo

// optional int32 pos = 1;
inline bool EquipInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 EquipInfo::pos() const {
  return pos_;
}
inline void EquipInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// optional .proto_ff.ItemProtoInfo equip = 2;
inline bool EquipInfo::has_equip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipInfo::set_has_equip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipInfo::clear_has_equip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipInfo::clear_equip() {
  if (equip_ != NULL) equip_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_equip();
}
inline const ::proto_ff::ItemProtoInfo& EquipInfo::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::proto_ff::ItemProtoInfo* EquipInfo::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::proto_ff::ItemProtoInfo;
  return equip_;
}
inline ::proto_ff::ItemProtoInfo* EquipInfo::release_equip() {
  clear_has_equip();
  ::proto_ff::ItemProtoInfo* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void EquipInfo::set_allocated_equip(::proto_ff::ItemProtoInfo* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
}

// optional .proto_ff.EquipSlotInfo slot = 3;
inline bool EquipInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipInfo::clear_slot() {
  if (slot_ != NULL) slot_->::proto_ff::EquipSlotInfo::Clear();
  clear_has_slot();
}
inline const ::proto_ff::EquipSlotInfo& EquipInfo::slot() const {
  return slot_ != NULL ? *slot_ : *default_instance_->slot_;
}
inline ::proto_ff::EquipSlotInfo* EquipInfo::mutable_slot() {
  set_has_slot();
  if (slot_ == NULL) slot_ = new ::proto_ff::EquipSlotInfo;
  return slot_;
}
inline ::proto_ff::EquipSlotInfo* EquipInfo::release_slot() {
  clear_has_slot();
  ::proto_ff::EquipSlotInfo* temp = slot_;
  slot_ = NULL;
  return temp;
}
inline void EquipInfo::set_allocated_slot(::proto_ff::EquipSlotInfo* slot) {
  delete slot_;
  slot_ = slot;
  if (slot) {
    set_has_slot();
  } else {
    clear_has_slot();
  }
}

// -------------------------------------------------------------------

// EquipLvAttrInfo

// optional int32 type = 1;
inline bool EquipLvAttrInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipLvAttrInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipLvAttrInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipLvAttrInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 EquipLvAttrInfo::type() const {
  return type_;
}
inline void EquipLvAttrInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 id = 2;
inline bool EquipLvAttrInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipLvAttrInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipLvAttrInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipLvAttrInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 EquipLvAttrInfo::id() const {
  return id_;
}
inline void EquipLvAttrInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ItemSimpleProto

// optional uint64 itemid = 1;
inline bool ItemSimpleProto::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemSimpleProto::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemSimpleProto::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemSimpleProto::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 ItemSimpleProto::itemid() const {
  return itemid_;
}
inline void ItemSimpleProto::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int64 num = 2;
inline bool ItemSimpleProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemSimpleProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemSimpleProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemSimpleProto::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::int64 ItemSimpleProto::num() const {
  return num_;
}
inline void ItemSimpleProto::set_num(::google::protobuf::int64 value) {
  set_has_num();
  num_ = value;
}

// optional int32 bind = 3;
inline bool ItemSimpleProto::has_bind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemSimpleProto::set_has_bind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemSimpleProto::clear_has_bind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemSimpleProto::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 ItemSimpleProto::bind() const {
  return bind_;
}
inline void ItemSimpleProto::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
}

// -------------------------------------------------------------------

// MultItemSimpleProto

// repeated .proto_ff.ItemSimpleProto info = 1;
inline int MultItemSimpleProto::info_size() const {
  return info_.size();
}
inline void MultItemSimpleProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::ItemSimpleProto& MultItemSimpleProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::ItemSimpleProto* MultItemSimpleProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::ItemSimpleProto* MultItemSimpleProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >&
MultItemSimpleProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >*
MultItemSimpleProto::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// PetInfo

// optional int32 instId = 1;
inline bool PetInfo::has_instid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetInfo::set_has_instid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetInfo::clear_has_instid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetInfo::clear_instid() {
  instid_ = 0;
  clear_has_instid();
}
inline ::google::protobuf::int32 PetInfo::instid() const {
  return instid_;
}
inline void PetInfo::set_instid(::google::protobuf::int32 value) {
  set_has_instid();
  instid_ = value;
}

// optional int64 cfgid = 2;
inline bool PetInfo::has_cfgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetInfo::set_has_cfgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetInfo::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetInfo::clear_cfgid() {
  cfgid_ = GOOGLE_LONGLONG(0);
  clear_has_cfgid();
}
inline ::google::protobuf::int64 PetInfo::cfgid() const {
  return cfgid_;
}
inline void PetInfo::set_cfgid(::google::protobuf::int64 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// optional int32 lv = 3;
inline bool PetInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetInfo::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 PetInfo::lv() const {
  return lv_;
}
inline void PetInfo::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 steplv = 4;
inline bool PetInfo::has_steplv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetInfo::set_has_steplv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetInfo::clear_has_steplv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetInfo::clear_steplv() {
  steplv_ = 0;
  clear_has_steplv();
}
inline ::google::protobuf::int32 PetInfo::steplv() const {
  return steplv_;
}
inline void PetInfo::set_steplv(::google::protobuf::int32 value) {
  set_has_steplv();
  steplv_ = value;
}

// optional int32 starlv = 5;
inline bool PetInfo::has_starlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetInfo::set_has_starlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetInfo::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetInfo::clear_starlv() {
  starlv_ = 0;
  clear_has_starlv();
}
inline ::google::protobuf::int32 PetInfo::starlv() const {
  return starlv_;
}
inline void PetInfo::set_starlv(::google::protobuf::int32 value) {
  set_has_starlv();
  starlv_ = value;
}

// optional int32 activeSkillLv = 6;
inline bool PetInfo::has_activeskilllv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PetInfo::set_has_activeskilllv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PetInfo::clear_has_activeskilllv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PetInfo::clear_activeskilllv() {
  activeskilllv_ = 0;
  clear_has_activeskilllv();
}
inline ::google::protobuf::int32 PetInfo::activeskilllv() const {
  return activeskilllv_;
}
inline void PetInfo::set_activeskilllv(::google::protobuf::int32 value) {
  set_has_activeskilllv();
  activeskilllv_ = value;
}

// repeated int32 exclusiveSkillLvVec = 7;
inline int PetInfo::exclusiveskilllvvec_size() const {
  return exclusiveskilllvvec_.size();
}
inline void PetInfo::clear_exclusiveskilllvvec() {
  exclusiveskilllvvec_.Clear();
}
inline ::google::protobuf::int32 PetInfo::exclusiveskilllvvec(int index) const {
  return exclusiveskilllvvec_.Get(index);
}
inline void PetInfo::set_exclusiveskilllvvec(int index, ::google::protobuf::int32 value) {
  exclusiveskilllvvec_.Set(index, value);
}
inline void PetInfo::add_exclusiveskilllvvec(::google::protobuf::int32 value) {
  exclusiveskilllvvec_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PetInfo::exclusiveskilllvvec() const {
  return exclusiveskilllvvec_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PetInfo::mutable_exclusiveskilllvvec() {
  return &exclusiveskilllvvec_;
}

// repeated int32 passiveSkillLvVec = 8;
inline int PetInfo::passiveskilllvvec_size() const {
  return passiveskilllvvec_.size();
}
inline void PetInfo::clear_passiveskilllvvec() {
  passiveskilllvvec_.Clear();
}
inline ::google::protobuf::int32 PetInfo::passiveskilllvvec(int index) const {
  return passiveskilllvvec_.Get(index);
}
inline void PetInfo::set_passiveskilllvvec(int index, ::google::protobuf::int32 value) {
  passiveskilllvvec_.Set(index, value);
}
inline void PetInfo::add_passiveskilllvvec(::google::protobuf::int32 value) {
  passiveskilllvvec_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PetInfo::passiveskilllvvec() const {
  return passiveskilllvvec_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PetInfo::mutable_passiveskilllvvec() {
  return &passiveskilllvvec_;
}

// optional float initgrow = 9;
inline bool PetInfo::has_initgrow() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PetInfo::set_has_initgrow() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PetInfo::clear_has_initgrow() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PetInfo::clear_initgrow() {
  initgrow_ = 0;
  clear_has_initgrow();
}
inline float PetInfo::initgrow() const {
  return initgrow_;
}
inline void PetInfo::set_initgrow(float value) {
  set_has_initgrow();
  initgrow_ = value;
}

// optional int32 slot = 10;
inline bool PetInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PetInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PetInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PetInfo::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 PetInfo::slot() const {
  return slot_;
}
inline void PetInfo::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// optional int32 lvexp = 11;
inline bool PetInfo::has_lvexp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PetInfo::set_has_lvexp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PetInfo::clear_has_lvexp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PetInfo::clear_lvexp() {
  lvexp_ = 0;
  clear_has_lvexp();
}
inline ::google::protobuf::int32 PetInfo::lvexp() const {
  return lvexp_;
}
inline void PetInfo::set_lvexp(::google::protobuf::int32 value) {
  set_has_lvexp();
  lvexp_ = value;
}

// -------------------------------------------------------------------

// PetHatchInfo

// optional int32 slot = 1;
inline bool PetHatchInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetHatchInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetHatchInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetHatchInfo::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 PetHatchInfo::slot() const {
  return slot_;
}
inline void PetHatchInfo::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// optional int32 unlock = 2;
inline bool PetHatchInfo::has_unlock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetHatchInfo::set_has_unlock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetHatchInfo::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetHatchInfo::clear_unlock() {
  unlock_ = 0;
  clear_has_unlock();
}
inline ::google::protobuf::int32 PetHatchInfo::unlock() const {
  return unlock_;
}
inline void PetHatchInfo::set_unlock(::google::protobuf::int32 value) {
  set_has_unlock();
  unlock_ = value;
}

// optional int64 eggid = 3;
inline bool PetHatchInfo::has_eggid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetHatchInfo::set_has_eggid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetHatchInfo::clear_has_eggid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetHatchInfo::clear_eggid() {
  eggid_ = GOOGLE_LONGLONG(0);
  clear_has_eggid();
}
inline ::google::protobuf::int64 PetHatchInfo::eggid() const {
  return eggid_;
}
inline void PetHatchInfo::set_eggid(::google::protobuf::int64 value) {
  set_has_eggid();
  eggid_ = value;
}

// optional int64 time = 4;
inline bool PetHatchInfo::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetHatchInfo::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetHatchInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetHatchInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 PetHatchInfo::time() const {
  return time_;
}
inline void PetHatchInfo::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PetGrow

// optional int32 cfgid = 1;
inline bool PetGrow::has_cfgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetGrow::set_has_cfgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetGrow::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetGrow::clear_cfgid() {
  cfgid_ = 0;
  clear_has_cfgid();
}
inline ::google::protobuf::int32 PetGrow::cfgid() const {
  return cfgid_;
}
inline void PetGrow::set_cfgid(::google::protobuf::int32 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// optional int32 stronglv = 2;
inline bool PetGrow::has_stronglv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetGrow::set_has_stronglv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetGrow::clear_has_stronglv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetGrow::clear_stronglv() {
  stronglv_ = 0;
  clear_has_stronglv();
}
inline ::google::protobuf::int32 PetGrow::stronglv() const {
  return stronglv_;
}
inline void PetGrow::set_stronglv(::google::protobuf::int32 value) {
  set_has_stronglv();
  stronglv_ = value;
}

// optional int32 starlv = 3;
inline bool PetGrow::has_starlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetGrow::set_has_starlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetGrow::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetGrow::clear_starlv() {
  starlv_ = 0;
  clear_has_starlv();
}
inline ::google::protobuf::int32 PetGrow::starlv() const {
  return starlv_;
}
inline void PetGrow::set_starlv(::google::protobuf::int32 value) {
  set_has_starlv();
  starlv_ = value;
}

// optional int32 starindex = 4;
inline bool PetGrow::has_starindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetGrow::set_has_starindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetGrow::clear_has_starindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetGrow::clear_starindex() {
  starindex_ = 0;
  clear_has_starindex();
}
inline ::google::protobuf::int32 PetGrow::starindex() const {
  return starindex_;
}
inline void PetGrow::set_starindex(::google::protobuf::int32 value) {
  set_has_starindex();
  starindex_ = value;
}

// -------------------------------------------------------------------

// PetYaoHunSlot

// optional int32 slot_pos = 1;
inline bool PetYaoHunSlot::has_slot_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetYaoHunSlot::set_has_slot_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetYaoHunSlot::clear_has_slot_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetYaoHunSlot::clear_slot_pos() {
  slot_pos_ = 0;
  clear_has_slot_pos();
}
inline ::google::protobuf::int32 PetYaoHunSlot::slot_pos() const {
  return slot_pos_;
}
inline void PetYaoHunSlot::set_slot_pos(::google::protobuf::int32 value) {
  set_has_slot_pos();
  slot_pos_ = value;
}

// optional int32 lv = 2;
inline bool PetYaoHunSlot::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetYaoHunSlot::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetYaoHunSlot::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetYaoHunSlot::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 PetYaoHunSlot::lv() const {
  return lv_;
}
inline void PetYaoHunSlot::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 exp = 3;
inline bool PetYaoHunSlot::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetYaoHunSlot::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetYaoHunSlot::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetYaoHunSlot::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 PetYaoHunSlot::exp() const {
  return exp_;
}
inline void PetYaoHunSlot::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 step = 4;
inline bool PetYaoHunSlot::has_step() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetYaoHunSlot::set_has_step() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetYaoHunSlot::clear_has_step() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetYaoHunSlot::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 PetYaoHunSlot::step() const {
  return step_;
}
inline void PetYaoHunSlot::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
}

// optional .proto_ff.ItemProtoInfo equip = 5;
inline bool PetYaoHunSlot::has_equip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetYaoHunSlot::set_has_equip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetYaoHunSlot::clear_has_equip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetYaoHunSlot::clear_equip() {
  if (equip_ != NULL) equip_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_equip();
}
inline const ::proto_ff::ItemProtoInfo& PetYaoHunSlot::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::proto_ff::ItemProtoInfo* PetYaoHunSlot::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::proto_ff::ItemProtoInfo;
  return equip_;
}
inline ::proto_ff::ItemProtoInfo* PetYaoHunSlot::release_equip() {
  clear_has_equip();
  ::proto_ff::ItemProtoInfo* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void PetYaoHunSlot::set_allocated_equip(::proto_ff::ItemProtoInfo* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
}

// -------------------------------------------------------------------

// PetYaoHunEntry

// optional int32 fight_pos = 1;
inline bool PetYaoHunEntry::has_fight_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetYaoHunEntry::set_has_fight_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetYaoHunEntry::clear_has_fight_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetYaoHunEntry::clear_fight_pos() {
  fight_pos_ = 0;
  clear_has_fight_pos();
}
inline ::google::protobuf::int32 PetYaoHunEntry::fight_pos() const {
  return fight_pos_;
}
inline void PetYaoHunEntry::set_fight_pos(::google::protobuf::int32 value) {
  set_has_fight_pos();
  fight_pos_ = value;
}

// optional int32 is_unlock = 2;
inline bool PetYaoHunEntry::has_is_unlock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetYaoHunEntry::set_has_is_unlock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetYaoHunEntry::clear_has_is_unlock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetYaoHunEntry::clear_is_unlock() {
  is_unlock_ = 0;
  clear_has_is_unlock();
}
inline ::google::protobuf::int32 PetYaoHunEntry::is_unlock() const {
  return is_unlock_;
}
inline void PetYaoHunEntry::set_is_unlock(::google::protobuf::int32 value) {
  set_has_is_unlock();
  is_unlock_ = value;
}

// repeated .proto_ff.PetYaoHunSlot infos = 3;
inline int PetYaoHunEntry::infos_size() const {
  return infos_.size();
}
inline void PetYaoHunEntry::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::PetYaoHunSlot& PetYaoHunEntry::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::PetYaoHunSlot* PetYaoHunEntry::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::PetYaoHunSlot* PetYaoHunEntry::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PetYaoHunSlot >&
PetYaoHunEntry::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PetYaoHunSlot >*
PetYaoHunEntry::mutable_infos() {
  return &infos_;
}

// repeated int32 suitids = 4;
inline int PetYaoHunEntry::suitids_size() const {
  return suitids_.size();
}
inline void PetYaoHunEntry::clear_suitids() {
  suitids_.Clear();
}
inline ::google::protobuf::int32 PetYaoHunEntry::suitids(int index) const {
  return suitids_.Get(index);
}
inline void PetYaoHunEntry::set_suitids(int index, ::google::protobuf::int32 value) {
  suitids_.Set(index, value);
}
inline void PetYaoHunEntry::add_suitids(::google::protobuf::int32 value) {
  suitids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PetYaoHunEntry::suitids() const {
  return suitids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PetYaoHunEntry::mutable_suitids() {
  return &suitids_;
}

// -------------------------------------------------------------------

// PetYaoHunModule

// repeated .proto_ff.PetYaoHunEntry entrys = 1;
inline int PetYaoHunModule::entrys_size() const {
  return entrys_.size();
}
inline void PetYaoHunModule::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::PetYaoHunEntry& PetYaoHunModule::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::PetYaoHunEntry* PetYaoHunModule::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::PetYaoHunEntry* PetYaoHunModule::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PetYaoHunEntry >&
PetYaoHunModule::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PetYaoHunEntry >*
PetYaoHunModule::mutable_entrys() {
  return &entrys_;
}

// optional int32 lianyao_tq_flag = 2;
inline bool PetYaoHunModule::has_lianyao_tq_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetYaoHunModule::set_has_lianyao_tq_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetYaoHunModule::clear_has_lianyao_tq_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetYaoHunModule::clear_lianyao_tq_flag() {
  lianyao_tq_flag_ = 0;
  clear_has_lianyao_tq_flag();
}
inline ::google::protobuf::int32 PetYaoHunModule::lianyao_tq_flag() const {
  return lianyao_tq_flag_;
}
inline void PetYaoHunModule::set_lianyao_tq_flag(::google::protobuf::int32 value) {
  set_has_lianyao_tq_flag();
  lianyao_tq_flag_ = value;
}

// optional int32 yaolu_lv = 3;
inline bool PetYaoHunModule::has_yaolu_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetYaoHunModule::set_has_yaolu_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetYaoHunModule::clear_has_yaolu_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetYaoHunModule::clear_yaolu_lv() {
  yaolu_lv_ = 0;
  clear_has_yaolu_lv();
}
inline ::google::protobuf::int32 PetYaoHunModule::yaolu_lv() const {
  return yaolu_lv_;
}
inline void PetYaoHunModule::set_yaolu_lv(::google::protobuf::int32 value) {
  set_has_yaolu_lv();
  yaolu_lv_ = value;
}

// optional int32 yaolu_exp = 4;
inline bool PetYaoHunModule::has_yaolu_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetYaoHunModule::set_has_yaolu_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetYaoHunModule::clear_has_yaolu_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetYaoHunModule::clear_yaolu_exp() {
  yaolu_exp_ = 0;
  clear_has_yaolu_exp();
}
inline ::google::protobuf::int32 PetYaoHunModule::yaolu_exp() const {
  return yaolu_exp_;
}
inline void PetYaoHunModule::set_yaolu_exp(::google::protobuf::int32 value) {
  set_has_yaolu_exp();
  yaolu_exp_ = value;
}

// optional int32 yaoqi = 5;
inline bool PetYaoHunModule::has_yaoqi() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetYaoHunModule::set_has_yaoqi() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetYaoHunModule::clear_has_yaoqi() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetYaoHunModule::clear_yaoqi() {
  yaoqi_ = 0;
  clear_has_yaoqi();
}
inline ::google::protobuf::int32 PetYaoHunModule::yaoqi() const {
  return yaoqi_;
}
inline void PetYaoHunModule::set_yaoqi(::google::protobuf::int32 value) {
  set_has_yaoqi();
  yaoqi_ = value;
}

// -------------------------------------------------------------------

// MailParamProto

// optional uint64 cfgid = 1;
inline bool MailParamProto::has_cfgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailParamProto::set_has_cfgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailParamProto::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailParamProto::clear_cfgid() {
  cfgid_ = GOOGLE_ULONGLONG(0);
  clear_has_cfgid();
}
inline ::google::protobuf::uint64 MailParamProto::cfgid() const {
  return cfgid_;
}
inline void MailParamProto::set_cfgid(::google::protobuf::uint64 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// repeated bytes str_param = 2;
inline int MailParamProto::str_param_size() const {
  return str_param_.size();
}
inline void MailParamProto::clear_str_param() {
  str_param_.Clear();
}
inline const ::std::string& MailParamProto::str_param(int index) const {
  return str_param_.Get(index);
}
inline ::std::string* MailParamProto::mutable_str_param(int index) {
  return str_param_.Mutable(index);
}
inline void MailParamProto::set_str_param(int index, const ::std::string& value) {
  str_param_.Mutable(index)->assign(value);
}
inline void MailParamProto::set_str_param(int index, const char* value) {
  str_param_.Mutable(index)->assign(value);
}
inline void MailParamProto::set_str_param(int index, const void* value, size_t size) {
  str_param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailParamProto::add_str_param() {
  return str_param_.Add();
}
inline void MailParamProto::add_str_param(const ::std::string& value) {
  str_param_.Add()->assign(value);
}
inline void MailParamProto::add_str_param(const char* value) {
  str_param_.Add()->assign(value);
}
inline void MailParamProto::add_str_param(const void* value, size_t size) {
  str_param_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MailParamProto::str_param() const {
  return str_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MailParamProto::mutable_str_param() {
  return &str_param_;
}

// repeated uint64 int_param = 3;
inline int MailParamProto::int_param_size() const {
  return int_param_.size();
}
inline void MailParamProto::clear_int_param() {
  int_param_.Clear();
}
inline ::google::protobuf::uint64 MailParamProto::int_param(int index) const {
  return int_param_.Get(index);
}
inline void MailParamProto::set_int_param(int index, ::google::protobuf::uint64 value) {
  int_param_.Set(index, value);
}
inline void MailParamProto::add_int_param(::google::protobuf::uint64 value) {
  int_param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MailParamProto::int_param() const {
  return int_param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MailParamProto::mutable_int_param() {
  return &int_param_;
}

// -------------------------------------------------------------------

// MailStrProto

// optional bytes str = 1;
inline bool MailStrProto::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailStrProto::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailStrProto::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailStrProto::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& MailStrProto::str() const {
  return *str_;
}
inline void MailStrProto::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void MailStrProto::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void MailStrProto::set_str(const void* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailStrProto::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* MailStrProto::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailStrProto::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_ff.MailParamProto param = 2;
inline bool MailStrProto::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailStrProto::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailStrProto::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailStrProto::clear_param() {
  if (param_ != NULL) param_->::proto_ff::MailParamProto::Clear();
  clear_has_param();
}
inline const ::proto_ff::MailParamProto& MailStrProto::param() const {
  return param_ != NULL ? *param_ : *default_instance_->param_;
}
inline ::proto_ff::MailParamProto* MailStrProto::mutable_param() {
  set_has_param();
  if (param_ == NULL) param_ = new ::proto_ff::MailParamProto;
  return param_;
}
inline ::proto_ff::MailParamProto* MailStrProto::release_param() {
  clear_has_param();
  ::proto_ff::MailParamProto* temp = param_;
  param_ = NULL;
  return temp;
}
inline void MailStrProto::set_allocated_param(::proto_ff::MailParamProto* param) {
  delete param_;
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
}

// -------------------------------------------------------------------

// MailAttachmentList

// repeated .proto_ff.ItemProtoInfo itemInfo = 1;
inline int MailAttachmentList::iteminfo_size() const {
  return iteminfo_.size();
}
inline void MailAttachmentList::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& MailAttachmentList::iteminfo(int index) const {
  return iteminfo_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* MailAttachmentList::mutable_iteminfo(int index) {
  return iteminfo_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* MailAttachmentList::add_iteminfo() {
  return iteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
MailAttachmentList::iteminfo() const {
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
MailAttachmentList::mutable_iteminfo() {
  return &iteminfo_;
}

// -------------------------------------------------------------------

// MailHead

// optional uint64 mailId = 1;
inline bool MailHead::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailHead::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailHead::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailHead::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 MailHead::mailid() const {
  return mailid_;
}
inline void MailHead::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional uint32 type = 2;
inline bool MailHead::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailHead::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailHead::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailHead::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MailHead::type() const {
  return type_;
}
inline void MailHead::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 sendPlayerId = 3;
inline bool MailHead::has_sendplayerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailHead::set_has_sendplayerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailHead::clear_has_sendplayerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailHead::clear_sendplayerid() {
  sendplayerid_ = GOOGLE_ULONGLONG(0);
  clear_has_sendplayerid();
}
inline ::google::protobuf::uint64 MailHead::sendplayerid() const {
  return sendplayerid_;
}
inline void MailHead::set_sendplayerid(::google::protobuf::uint64 value) {
  set_has_sendplayerid();
  sendplayerid_ = value;
}

// optional bytes sendPlayerName = 4;
inline bool MailHead::has_sendplayername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailHead::set_has_sendplayername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailHead::clear_has_sendplayername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailHead::clear_sendplayername() {
  if (sendplayername_ != &::google::protobuf::internal::kEmptyString) {
    sendplayername_->clear();
  }
  clear_has_sendplayername();
}
inline const ::std::string& MailHead::sendplayername() const {
  return *sendplayername_;
}
inline void MailHead::set_sendplayername(const ::std::string& value) {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  sendplayername_->assign(value);
}
inline void MailHead::set_sendplayername(const char* value) {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  sendplayername_->assign(value);
}
inline void MailHead::set_sendplayername(const void* value, size_t size) {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  sendplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailHead::mutable_sendplayername() {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  return sendplayername_;
}
inline ::std::string* MailHead::release_sendplayername() {
  clear_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sendplayername_;
    sendplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailHead::set_allocated_sendplayername(::std::string* sendplayername) {
  if (sendplayername_ != &::google::protobuf::internal::kEmptyString) {
    delete sendplayername_;
  }
  if (sendplayername) {
    set_has_sendplayername();
    sendplayername_ = sendplayername;
  } else {
    clear_has_sendplayername();
    sendplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 destPlayerId = 5;
inline bool MailHead::has_destplayerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailHead::set_has_destplayerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailHead::clear_has_destplayerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailHead::clear_destplayerid() {
  destplayerid_ = GOOGLE_ULONGLONG(0);
  clear_has_destplayerid();
}
inline ::google::protobuf::uint64 MailHead::destplayerid() const {
  return destplayerid_;
}
inline void MailHead::set_destplayerid(::google::protobuf::uint64 value) {
  set_has_destplayerid();
  destplayerid_ = value;
}

// optional .proto_ff.MailStrProto topic = 6;
inline bool MailHead::has_topic() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailHead::set_has_topic() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailHead::clear_has_topic() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailHead::clear_topic() {
  if (topic_ != NULL) topic_->::proto_ff::MailStrProto::Clear();
  clear_has_topic();
}
inline const ::proto_ff::MailStrProto& MailHead::topic() const {
  return topic_ != NULL ? *topic_ : *default_instance_->topic_;
}
inline ::proto_ff::MailStrProto* MailHead::mutable_topic() {
  set_has_topic();
  if (topic_ == NULL) topic_ = new ::proto_ff::MailStrProto;
  return topic_;
}
inline ::proto_ff::MailStrProto* MailHead::release_topic() {
  clear_has_topic();
  ::proto_ff::MailStrProto* temp = topic_;
  topic_ = NULL;
  return temp;
}
inline void MailHead::set_allocated_topic(::proto_ff::MailStrProto* topic) {
  delete topic_;
  topic_ = topic;
  if (topic) {
    set_has_topic();
  } else {
    clear_has_topic();
  }
}

// optional uint64 createTime = 7;
inline bool MailHead::has_createtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailHead::set_has_createtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailHead::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailHead::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 MailHead::createtime() const {
  return createtime_;
}
inline void MailHead::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional uint32 status = 8;
inline bool MailHead::has_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailHead::set_has_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailHead::clear_has_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailHead::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 MailHead::status() const {
  return status_;
}
inline void MailHead::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 fetch = 9;
inline bool MailHead::has_fetch() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailHead::set_has_fetch() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailHead::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailHead::clear_fetch() {
  fetch_ = 0;
  clear_has_fetch();
}
inline ::google::protobuf::int32 MailHead::fetch() const {
  return fetch_;
}
inline void MailHead::set_fetch(::google::protobuf::int32 value) {
  set_has_fetch();
  fetch_ = value;
}

// optional int32 has_attach = 10;
inline bool MailHead::has_has_attach() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailHead::set_has_has_attach() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailHead::clear_has_has_attach() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailHead::clear_has_attach() {
  has_attach_ = 0;
  clear_has_has_attach();
}
inline ::google::protobuf::int32 MailHead::has_attach() const {
  return has_attach_;
}
inline void MailHead::set_has_attach(::google::protobuf::int32 value) {
  set_has_has_attach();
  has_attach_ = value;
}

// optional uint64 begin_time = 11;
inline bool MailHead::has_begin_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MailHead::set_has_begin_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MailHead::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MailHead::clear_begin_time() {
  begin_time_ = GOOGLE_ULONGLONG(0);
  clear_has_begin_time();
}
inline ::google::protobuf::uint64 MailHead::begin_time() const {
  return begin_time_;
}
inline void MailHead::set_begin_time(::google::protobuf::uint64 value) {
  set_has_begin_time();
  begin_time_ = value;
}

// optional uint64 end_time = 12;
inline bool MailHead::has_end_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MailHead::set_has_end_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MailHead::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MailHead::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 MailHead::end_time() const {
  return end_time_;
}
inline void MailHead::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// -------------------------------------------------------------------

// MailInfo

// optional .proto_ff.MailHead mailHead = 1;
inline bool MailInfo::has_mailhead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailInfo::set_has_mailhead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailInfo::clear_has_mailhead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailInfo::clear_mailhead() {
  if (mailhead_ != NULL) mailhead_->::proto_ff::MailHead::Clear();
  clear_has_mailhead();
}
inline const ::proto_ff::MailHead& MailInfo::mailhead() const {
  return mailhead_ != NULL ? *mailhead_ : *default_instance_->mailhead_;
}
inline ::proto_ff::MailHead* MailInfo::mutable_mailhead() {
  set_has_mailhead();
  if (mailhead_ == NULL) mailhead_ = new ::proto_ff::MailHead;
  return mailhead_;
}
inline ::proto_ff::MailHead* MailInfo::release_mailhead() {
  clear_has_mailhead();
  ::proto_ff::MailHead* temp = mailhead_;
  mailhead_ = NULL;
  return temp;
}
inline void MailInfo::set_allocated_mailhead(::proto_ff::MailHead* mailhead) {
  delete mailhead_;
  mailhead_ = mailhead;
  if (mailhead) {
    set_has_mailhead();
  } else {
    clear_has_mailhead();
  }
}

// optional .proto_ff.MailStrProto content = 2;
inline bool MailInfo::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailInfo::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailInfo::clear_content() {
  if (content_ != NULL) content_->::proto_ff::MailStrProto::Clear();
  clear_has_content();
}
inline const ::proto_ff::MailStrProto& MailInfo::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::proto_ff::MailStrProto* MailInfo::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::proto_ff::MailStrProto;
  return content_;
}
inline ::proto_ff::MailStrProto* MailInfo::release_content() {
  clear_has_content();
  ::proto_ff::MailStrProto* temp = content_;
  content_ = NULL;
  return temp;
}
inline void MailInfo::set_allocated_content(::proto_ff::MailStrProto* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// optional uint64 gold = 3;
inline bool MailInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailInfo::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::uint64 MailInfo::gold() const {
  return gold_;
}
inline void MailInfo::set_gold(::google::protobuf::uint64 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint64 diamond = 4;
inline bool MailInfo::has_diamond() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailInfo::set_has_diamond() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailInfo::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailInfo::clear_diamond() {
  diamond_ = GOOGLE_ULONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::uint64 MailInfo::diamond() const {
  return diamond_;
}
inline void MailInfo::set_diamond(::google::protobuf::uint64 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint64 bindDiamond = 5;
inline bool MailInfo::has_binddiamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailInfo::set_has_binddiamond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailInfo::clear_has_binddiamond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailInfo::clear_binddiamond() {
  binddiamond_ = GOOGLE_ULONGLONG(0);
  clear_has_binddiamond();
}
inline ::google::protobuf::uint64 MailInfo::binddiamond() const {
  return binddiamond_;
}
inline void MailInfo::set_binddiamond(::google::protobuf::uint64 value) {
  set_has_binddiamond();
  binddiamond_ = value;
}

// optional uint64 magiccrystal = 6;
inline bool MailInfo::has_magiccrystal() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailInfo::set_has_magiccrystal() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailInfo::clear_has_magiccrystal() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailInfo::clear_magiccrystal() {
  magiccrystal_ = GOOGLE_ULONGLONG(0);
  clear_has_magiccrystal();
}
inline ::google::protobuf::uint64 MailInfo::magiccrystal() const {
  return magiccrystal_;
}
inline void MailInfo::set_magiccrystal(::google::protobuf::uint64 value) {
  set_has_magiccrystal();
  magiccrystal_ = value;
}

// optional uint64 prestige = 7;
inline bool MailInfo::has_prestige() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailInfo::set_has_prestige() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailInfo::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailInfo::clear_prestige() {
  prestige_ = GOOGLE_ULONGLONG(0);
  clear_has_prestige();
}
inline ::google::protobuf::uint64 MailInfo::prestige() const {
  return prestige_;
}
inline void MailInfo::set_prestige(::google::protobuf::uint64 value) {
  set_has_prestige();
  prestige_ = value;
}

// optional .proto_ff.MailAttachmentList attachmentList = 8;
inline bool MailInfo::has_attachmentlist() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailInfo::set_has_attachmentlist() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailInfo::clear_has_attachmentlist() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailInfo::clear_attachmentlist() {
  if (attachmentlist_ != NULL) attachmentlist_->::proto_ff::MailAttachmentList::Clear();
  clear_has_attachmentlist();
}
inline const ::proto_ff::MailAttachmentList& MailInfo::attachmentlist() const {
  return attachmentlist_ != NULL ? *attachmentlist_ : *default_instance_->attachmentlist_;
}
inline ::proto_ff::MailAttachmentList* MailInfo::mutable_attachmentlist() {
  set_has_attachmentlist();
  if (attachmentlist_ == NULL) attachmentlist_ = new ::proto_ff::MailAttachmentList;
  return attachmentlist_;
}
inline ::proto_ff::MailAttachmentList* MailInfo::release_attachmentlist() {
  clear_has_attachmentlist();
  ::proto_ff::MailAttachmentList* temp = attachmentlist_;
  attachmentlist_ = NULL;
  return temp;
}
inline void MailInfo::set_allocated_attachmentlist(::proto_ff::MailAttachmentList* attachmentlist) {
  delete attachmentlist_;
  attachmentlist_ = attachmentlist;
  if (attachmentlist) {
    set_has_attachmentlist();
  } else {
    clear_has_attachmentlist();
  }
}

// optional int32 source = 9;
inline bool MailInfo::has_source() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailInfo::set_has_source() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailInfo::clear_has_source() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailInfo::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::google::protobuf::int32 MailInfo::source() const {
  return source_;
}
inline void MailInfo::set_source(::google::protobuf::int32 value) {
  set_has_source();
  source_ = value;
}

// optional int64 sourceVal = 10;
inline bool MailInfo::has_sourceval() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailInfo::set_has_sourceval() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailInfo::clear_has_sourceval() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailInfo::clear_sourceval() {
  sourceval_ = GOOGLE_LONGLONG(0);
  clear_has_sourceval();
}
inline ::google::protobuf::int64 MailInfo::sourceval() const {
  return sourceval_;
}
inline void MailInfo::set_sourceval(::google::protobuf::int64 value) {
  set_has_sourceval();
  sourceval_ = value;
}

// -------------------------------------------------------------------

// WebMailItemProto

// optional uint64 id = 1;
inline bool WebMailItemProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebMailItemProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebMailItemProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebMailItemProto::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 WebMailItemProto::id() const {
  return id_;
}
inline void WebMailItemProto::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 num = 2;
inline bool WebMailItemProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebMailItemProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebMailItemProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebMailItemProto::clear_num() {
  num_ = GOOGLE_ULONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::uint64 WebMailItemProto::num() const {
  return num_;
}
inline void WebMailItemProto::set_num(::google::protobuf::uint64 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// WebMailDataProto

// optional uint64 mailId = 1;
inline bool WebMailDataProto::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebMailDataProto::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebMailDataProto::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebMailDataProto::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 WebMailDataProto::mailid() const {
  return mailid_;
}
inline void WebMailDataProto::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional uint64 createTime = 2;
inline bool WebMailDataProto::has_createtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebMailDataProto::set_has_createtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebMailDataProto::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebMailDataProto::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 WebMailDataProto::createtime() const {
  return createtime_;
}
inline void WebMailDataProto::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional .proto_ff.MailStrProto topic = 3;
inline bool WebMailDataProto::has_topic() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebMailDataProto::set_has_topic() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebMailDataProto::clear_has_topic() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebMailDataProto::clear_topic() {
  if (topic_ != NULL) topic_->::proto_ff::MailStrProto::Clear();
  clear_has_topic();
}
inline const ::proto_ff::MailStrProto& WebMailDataProto::topic() const {
  return topic_ != NULL ? *topic_ : *default_instance_->topic_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::mutable_topic() {
  set_has_topic();
  if (topic_ == NULL) topic_ = new ::proto_ff::MailStrProto;
  return topic_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::release_topic() {
  clear_has_topic();
  ::proto_ff::MailStrProto* temp = topic_;
  topic_ = NULL;
  return temp;
}
inline void WebMailDataProto::set_allocated_topic(::proto_ff::MailStrProto* topic) {
  delete topic_;
  topic_ = topic;
  if (topic) {
    set_has_topic();
  } else {
    clear_has_topic();
  }
}

// optional int32 fetch = 4;
inline bool WebMailDataProto::has_fetch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebMailDataProto::set_has_fetch() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebMailDataProto::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebMailDataProto::clear_fetch() {
  fetch_ = 0;
  clear_has_fetch();
}
inline ::google::protobuf::int32 WebMailDataProto::fetch() const {
  return fetch_;
}
inline void WebMailDataProto::set_fetch(::google::protobuf::int32 value) {
  set_has_fetch();
  fetch_ = value;
}

// optional .proto_ff.MailStrProto content = 5;
inline bool WebMailDataProto::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebMailDataProto::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebMailDataProto::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebMailDataProto::clear_content() {
  if (content_ != NULL) content_->::proto_ff::MailStrProto::Clear();
  clear_has_content();
}
inline const ::proto_ff::MailStrProto& WebMailDataProto::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::proto_ff::MailStrProto;
  return content_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::release_content() {
  clear_has_content();
  ::proto_ff::MailStrProto* temp = content_;
  content_ = NULL;
  return temp;
}
inline void WebMailDataProto::set_allocated_content(::proto_ff::MailStrProto* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// optional uint64 gold = 6;
inline bool WebMailDataProto::has_gold() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebMailDataProto::set_has_gold() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebMailDataProto::clear_has_gold() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebMailDataProto::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::uint64 WebMailDataProto::gold() const {
  return gold_;
}
inline void WebMailDataProto::set_gold(::google::protobuf::uint64 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint64 diamond = 7;
inline bool WebMailDataProto::has_diamond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebMailDataProto::set_has_diamond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebMailDataProto::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebMailDataProto::clear_diamond() {
  diamond_ = GOOGLE_ULONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::uint64 WebMailDataProto::diamond() const {
  return diamond_;
}
inline void WebMailDataProto::set_diamond(::google::protobuf::uint64 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint64 bindDiamond = 8;
inline bool WebMailDataProto::has_binddiamond() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WebMailDataProto::set_has_binddiamond() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WebMailDataProto::clear_has_binddiamond() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WebMailDataProto::clear_binddiamond() {
  binddiamond_ = GOOGLE_ULONGLONG(0);
  clear_has_binddiamond();
}
inline ::google::protobuf::uint64 WebMailDataProto::binddiamond() const {
  return binddiamond_;
}
inline void WebMailDataProto::set_binddiamond(::google::protobuf::uint64 value) {
  set_has_binddiamond();
  binddiamond_ = value;
}

// optional uint64 arenaScore = 9;
inline bool WebMailDataProto::has_arenascore() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WebMailDataProto::set_has_arenascore() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WebMailDataProto::clear_has_arenascore() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WebMailDataProto::clear_arenascore() {
  arenascore_ = GOOGLE_ULONGLONG(0);
  clear_has_arenascore();
}
inline ::google::protobuf::uint64 WebMailDataProto::arenascore() const {
  return arenascore_;
}
inline void WebMailDataProto::set_arenascore(::google::protobuf::uint64 value) {
  set_has_arenascore();
  arenascore_ = value;
}

// optional uint64 magiccrystal = 10;
inline bool WebMailDataProto::has_magiccrystal() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WebMailDataProto::set_has_magiccrystal() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WebMailDataProto::clear_has_magiccrystal() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WebMailDataProto::clear_magiccrystal() {
  magiccrystal_ = GOOGLE_ULONGLONG(0);
  clear_has_magiccrystal();
}
inline ::google::protobuf::uint64 WebMailDataProto::magiccrystal() const {
  return magiccrystal_;
}
inline void WebMailDataProto::set_magiccrystal(::google::protobuf::uint64 value) {
  set_has_magiccrystal();
  magiccrystal_ = value;
}

// optional uint64 prestige = 11;
inline bool WebMailDataProto::has_prestige() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WebMailDataProto::set_has_prestige() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WebMailDataProto::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WebMailDataProto::clear_prestige() {
  prestige_ = GOOGLE_ULONGLONG(0);
  clear_has_prestige();
}
inline ::google::protobuf::uint64 WebMailDataProto::prestige() const {
  return prestige_;
}
inline void WebMailDataProto::set_prestige(::google::protobuf::uint64 value) {
  set_has_prestige();
  prestige_ = value;
}

// repeated .proto_ff.WebMailItemProto itemList = 12;
inline int WebMailDataProto::itemlist_size() const {
  return itemlist_.size();
}
inline void WebMailDataProto::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::proto_ff::WebMailItemProto& WebMailDataProto::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::proto_ff::WebMailItemProto* WebMailDataProto::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::proto_ff::WebMailItemProto* WebMailDataProto::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >&
WebMailDataProto::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >*
WebMailDataProto::mutable_itemlist() {
  return &itemlist_;
}

// -------------------------------------------------------------------

// UseItemArgProto

// optional int64 int_param = 1;
inline bool UseItemArgProto::has_int_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseItemArgProto::set_has_int_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseItemArgProto::clear_has_int_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseItemArgProto::clear_int_param() {
  int_param_ = GOOGLE_LONGLONG(0);
  clear_has_int_param();
}
inline ::google::protobuf::int64 UseItemArgProto::int_param() const {
  return int_param_;
}
inline void UseItemArgProto::set_int_param(::google::protobuf::int64 value) {
  set_has_int_param();
  int_param_ = value;
}

// optional bytes str_param = 2;
inline bool UseItemArgProto::has_str_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseItemArgProto::set_has_str_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseItemArgProto::clear_has_str_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseItemArgProto::clear_str_param() {
  if (str_param_ != &::google::protobuf::internal::kEmptyString) {
    str_param_->clear();
  }
  clear_has_str_param();
}
inline const ::std::string& UseItemArgProto::str_param() const {
  return *str_param_;
}
inline void UseItemArgProto::set_str_param(const ::std::string& value) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(value);
}
inline void UseItemArgProto::set_str_param(const char* value) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(value);
}
inline void UseItemArgProto::set_str_param(const void* value, size_t size) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UseItemArgProto::mutable_str_param() {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  return str_param_;
}
inline ::std::string* UseItemArgProto::release_str_param() {
  clear_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_param_;
    str_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UseItemArgProto::set_allocated_str_param(::std::string* str_param) {
  if (str_param_ != &::google::protobuf::internal::kEmptyString) {
    delete str_param_;
  }
  if (str_param) {
    set_has_str_param();
    str_param_ = str_param;
  } else {
    clear_has_str_param();
    str_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated uint64 item_lst = 3;
inline int UseItemArgProto::item_lst_size() const {
  return item_lst_.size();
}
inline void UseItemArgProto::clear_item_lst() {
  item_lst_.Clear();
}
inline ::google::protobuf::uint64 UseItemArgProto::item_lst(int index) const {
  return item_lst_.Get(index);
}
inline void UseItemArgProto::set_item_lst(int index, ::google::protobuf::uint64 value) {
  item_lst_.Set(index, value);
}
inline void UseItemArgProto::add_item_lst(::google::protobuf::uint64 value) {
  item_lst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UseItemArgProto::item_lst() const {
  return item_lst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UseItemArgProto::mutable_item_lst() {
  return &item_lst_;
}

// -------------------------------------------------------------------

// NotifyRoleFacadeCastRsp

// required uint64 roleid = 1;
inline bool NotifyRoleFacadeCastRsp::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRoleFacadeCastRsp::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRoleFacadeCastRsp::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRoleFacadeCastRsp::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 NotifyRoleFacadeCastRsp::roleid() const {
  return roleid_;
}
inline void NotifyRoleFacadeCastRsp::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 2;
inline bool NotifyRoleFacadeCastRsp::has_facade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRoleFacadeCastRsp::set_has_facade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRoleFacadeCastRsp::clear_has_facade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRoleFacadeCastRsp::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& NotifyRoleFacadeCastRsp::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* NotifyRoleFacadeCastRsp::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* NotifyRoleFacadeCastRsp::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void NotifyRoleFacadeCastRsp::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// -------------------------------------------------------------------

// ArenaChallResult

// optional int32 result = 1;
inline bool ArenaChallResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaChallResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaChallResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaChallResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ArenaChallResult::result() const {
  return result_;
}
inline void ArenaChallResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional bool chall = 2;
inline bool ArenaChallResult::has_chall() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaChallResult::set_has_chall() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaChallResult::clear_has_chall() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaChallResult::clear_chall() {
  chall_ = false;
  clear_has_chall();
}
inline bool ArenaChallResult::chall() const {
  return chall_;
}
inline void ArenaChallResult::set_chall(bool value) {
  set_has_chall();
  chall_ = value;
}

// optional int64 time = 3;
inline bool ArenaChallResult::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaChallResult::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaChallResult::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaChallResult::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 ArenaChallResult::time() const {
  return time_;
}
inline void ArenaChallResult::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// optional bytes dst_name = 4;
inline bool ArenaChallResult::has_dst_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArenaChallResult::set_has_dst_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArenaChallResult::clear_has_dst_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArenaChallResult::clear_dst_name() {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    dst_name_->clear();
  }
  clear_has_dst_name();
}
inline const ::std::string& ArenaChallResult::dst_name() const {
  return *dst_name_;
}
inline void ArenaChallResult::set_dst_name(const ::std::string& value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void ArenaChallResult::set_dst_name(const char* value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void ArenaChallResult::set_dst_name(const void* value, size_t size) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaChallResult::mutable_dst_name() {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  return dst_name_;
}
inline ::std::string* ArenaChallResult::release_dst_name() {
  clear_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dst_name_;
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaChallResult::set_allocated_dst_name(::std::string* dst_name) {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_name_;
  }
  if (dst_name) {
    set_has_dst_name();
    dst_name_ = dst_name;
  } else {
    clear_has_dst_name();
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 src_rank_id = 5;
inline bool ArenaChallResult::has_src_rank_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArenaChallResult::set_has_src_rank_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArenaChallResult::clear_has_src_rank_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArenaChallResult::clear_src_rank_id() {
  src_rank_id_ = 0;
  clear_has_src_rank_id();
}
inline ::google::protobuf::int32 ArenaChallResult::src_rank_id() const {
  return src_rank_id_;
}
inline void ArenaChallResult::set_src_rank_id(::google::protobuf::int32 value) {
  set_has_src_rank_id();
  src_rank_id_ = value;
}

// optional int32 dst_rank_id = 6;
inline bool ArenaChallResult::has_dst_rank_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ArenaChallResult::set_has_dst_rank_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ArenaChallResult::clear_has_dst_rank_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ArenaChallResult::clear_dst_rank_id() {
  dst_rank_id_ = 0;
  clear_has_dst_rank_id();
}
inline ::google::protobuf::int32 ArenaChallResult::dst_rank_id() const {
  return dst_rank_id_;
}
inline void ArenaChallResult::set_dst_rank_id(::google::protobuf::int32 value) {
  set_has_dst_rank_id();
  dst_rank_id_ = value;
}

// repeated .proto_ff.ComItem items = 7;
inline int ArenaChallResult::items_size() const {
  return items_.size();
}
inline void ArenaChallResult::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ComItem& ArenaChallResult::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ComItem* ArenaChallResult::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ComItem* ArenaChallResult::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
ArenaChallResult::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
ArenaChallResult::mutable_items() {
  return &items_;
}

// optional int64 dup_id = 8;
inline bool ArenaChallResult::has_dup_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ArenaChallResult::set_has_dup_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ArenaChallResult::clear_has_dup_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ArenaChallResult::clear_dup_id() {
  dup_id_ = GOOGLE_LONGLONG(0);
  clear_has_dup_id();
}
inline ::google::protobuf::int64 ArenaChallResult::dup_id() const {
  return dup_id_;
}
inline void ArenaChallResult::set_dup_id(::google::protobuf::int64 value) {
  set_has_dup_id();
  dup_id_ = value;
}

// -------------------------------------------------------------------

// FunctionUnlockInfoData

// optional uint64 unlockId = 1;
inline bool FunctionUnlockInfoData::has_unlockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionUnlockInfoData::set_has_unlockid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionUnlockInfoData::clear_has_unlockid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionUnlockInfoData::clear_unlockid() {
  unlockid_ = GOOGLE_ULONGLONG(0);
  clear_has_unlockid();
}
inline ::google::protobuf::uint64 FunctionUnlockInfoData::unlockid() const {
  return unlockid_;
}
inline void FunctionUnlockInfoData::set_unlockid(::google::protobuf::uint64 value) {
  set_has_unlockid();
  unlockid_ = value;
}

// optional bool get_reward = 2;
inline bool FunctionUnlockInfoData::has_get_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionUnlockInfoData::set_has_get_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunctionUnlockInfoData::clear_has_get_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunctionUnlockInfoData::clear_get_reward() {
  get_reward_ = false;
  clear_has_get_reward();
}
inline bool FunctionUnlockInfoData::get_reward() const {
  return get_reward_;
}
inline void FunctionUnlockInfoData::set_get_reward(bool value) {
  set_has_get_reward();
  get_reward_ = value;
}

// -------------------------------------------------------------------

// FunctionUnlockInfo

// repeated .proto_ff.FunctionUnlockInfoData data = 1;
inline int FunctionUnlockInfo::data_size() const {
  return data_.size();
}
inline void FunctionUnlockInfo::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::FunctionUnlockInfoData& FunctionUnlockInfo::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::FunctionUnlockInfoData* FunctionUnlockInfo::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::FunctionUnlockInfoData* FunctionUnlockInfo::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >&
FunctionUnlockInfo::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >*
FunctionUnlockInfo::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// RolePlayerMiniInfo

// optional uint64 playerId = 1;
inline bool RolePlayerMiniInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RolePlayerMiniInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RolePlayerMiniInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RolePlayerMiniInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::playerid() const {
  return playerid_;
}
inline void RolePlayerMiniInfo::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional bytes playerName = 2;
inline bool RolePlayerMiniInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RolePlayerMiniInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RolePlayerMiniInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RolePlayerMiniInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& RolePlayerMiniInfo::playername() const {
  return *playername_;
}
inline void RolePlayerMiniInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void RolePlayerMiniInfo::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void RolePlayerMiniInfo::set_playername(const void* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RolePlayerMiniInfo::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* RolePlayerMiniInfo::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RolePlayerMiniInfo::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 zid = 3;
inline bool RolePlayerMiniInfo::has_zid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RolePlayerMiniInfo::set_has_zid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RolePlayerMiniInfo::clear_has_zid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RolePlayerMiniInfo::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::zid() const {
  return zid_;
}
inline void RolePlayerMiniInfo::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint32 level = 5;
inline bool RolePlayerMiniInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RolePlayerMiniInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RolePlayerMiniInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RolePlayerMiniInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::level() const {
  return level_;
}
inline void RolePlayerMiniInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 closeness = 6;
inline bool RolePlayerMiniInfo::has_closeness() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RolePlayerMiniInfo::set_has_closeness() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RolePlayerMiniInfo::clear_has_closeness() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RolePlayerMiniInfo::clear_closeness() {
  closeness_ = 0u;
  clear_has_closeness();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::closeness() const {
  return closeness_;
}
inline void RolePlayerMiniInfo::set_closeness(::google::protobuf::uint32 value) {
  set_has_closeness();
  closeness_ = value;
}

// optional uint32 recentType = 7;
inline bool RolePlayerMiniInfo::has_recenttype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RolePlayerMiniInfo::set_has_recenttype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RolePlayerMiniInfo::clear_has_recenttype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RolePlayerMiniInfo::clear_recenttype() {
  recenttype_ = 0u;
  clear_has_recenttype();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::recenttype() const {
  return recenttype_;
}
inline void RolePlayerMiniInfo::set_recenttype(::google::protobuf::uint32 value) {
  set_has_recenttype();
  recenttype_ = value;
}

// optional uint64 recentTime = 8;
inline bool RolePlayerMiniInfo::has_recenttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RolePlayerMiniInfo::set_has_recenttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RolePlayerMiniInfo::clear_has_recenttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RolePlayerMiniInfo::clear_recenttime() {
  recenttime_ = GOOGLE_ULONGLONG(0);
  clear_has_recenttime();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::recenttime() const {
  return recenttime_;
}
inline void RolePlayerMiniInfo::set_recenttime(::google::protobuf::uint64 value) {
  set_has_recenttime();
  recenttime_ = value;
}

// optional uint32 prof = 9;
inline bool RolePlayerMiniInfo::has_prof() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RolePlayerMiniInfo::set_has_prof() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RolePlayerMiniInfo::clear_has_prof() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RolePlayerMiniInfo::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::prof() const {
  return prof_;
}
inline void RolePlayerMiniInfo::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 teamId = 10;
inline bool RolePlayerMiniInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RolePlayerMiniInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RolePlayerMiniInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RolePlayerMiniInfo::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::teamid() const {
  return teamid_;
}
inline void RolePlayerMiniInfo::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint32 unionId = 11;
inline bool RolePlayerMiniInfo::has_unionid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RolePlayerMiniInfo::set_has_unionid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RolePlayerMiniInfo::clear_has_unionid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RolePlayerMiniInfo::clear_unionid() {
  unionid_ = 0u;
  clear_has_unionid();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::unionid() const {
  return unionid_;
}
inline void RolePlayerMiniInfo::set_unionid(::google::protobuf::uint32 value) {
  set_has_unionid();
  unionid_ = value;
}

// optional uint64 fightPower = 12;
inline bool RolePlayerMiniInfo::has_fightpower() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RolePlayerMiniInfo::set_has_fightpower() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RolePlayerMiniInfo::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RolePlayerMiniInfo::clear_fightpower() {
  fightpower_ = GOOGLE_ULONGLONG(0);
  clear_has_fightpower();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::fightpower() const {
  return fightpower_;
}
inline void RolePlayerMiniInfo::set_fightpower(::google::protobuf::uint64 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional uint32 killMeTimes = 13;
inline bool RolePlayerMiniInfo::has_killmetimes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RolePlayerMiniInfo::set_has_killmetimes() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RolePlayerMiniInfo::clear_has_killmetimes() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RolePlayerMiniInfo::clear_killmetimes() {
  killmetimes_ = 0u;
  clear_has_killmetimes();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::killmetimes() const {
  return killmetimes_;
}
inline void RolePlayerMiniInfo::set_killmetimes(::google::protobuf::uint32 value) {
  set_has_killmetimes();
  killmetimes_ = value;
}

// optional uint64 offlineTime = 14;
inline bool RolePlayerMiniInfo::has_offlinetime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_offlinetime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RolePlayerMiniInfo::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RolePlayerMiniInfo::clear_offlinetime() {
  offlinetime_ = GOOGLE_ULONGLONG(0);
  clear_has_offlinetime();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::offlinetime() const {
  return offlinetime_;
}
inline void RolePlayerMiniInfo::set_offlinetime(::google::protobuf::uint64 value) {
  set_has_offlinetime();
  offlinetime_ = value;
}

// optional bytes connect = 15;
inline bool RolePlayerMiniInfo::has_connect() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_connect() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RolePlayerMiniInfo::clear_has_connect() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RolePlayerMiniInfo::clear_connect() {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    connect_->clear();
  }
  clear_has_connect();
}
inline const ::std::string& RolePlayerMiniInfo::connect() const {
  return *connect_;
}
inline void RolePlayerMiniInfo::set_connect(const ::std::string& value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void RolePlayerMiniInfo::set_connect(const char* value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void RolePlayerMiniInfo::set_connect(const void* value, size_t size) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RolePlayerMiniInfo::mutable_connect() {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  return connect_;
}
inline ::std::string* RolePlayerMiniInfo::release_connect() {
  clear_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = connect_;
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RolePlayerMiniInfo::set_allocated_connect(::std::string* connect) {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    delete connect_;
  }
  if (connect) {
    set_has_connect();
    connect_ = connect;
  } else {
    clear_has_connect();
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool online = 16;
inline bool RolePlayerMiniInfo::has_online() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_online() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RolePlayerMiniInfo::clear_has_online() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RolePlayerMiniInfo::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool RolePlayerMiniInfo::online() const {
  return online_;
}
inline void RolePlayerMiniInfo::set_online(bool value) {
  set_has_online();
  online_ = value;
}

// optional uint32 vipLevel = 17;
inline bool RolePlayerMiniInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RolePlayerMiniInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RolePlayerMiniInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::viplevel() const {
  return viplevel_;
}
inline void RolePlayerMiniInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 18;
inline bool RolePlayerMiniInfo::has_facade() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_facade() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RolePlayerMiniInfo::clear_has_facade() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RolePlayerMiniInfo::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& RolePlayerMiniInfo::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* RolePlayerMiniInfo::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* RolePlayerMiniInfo::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void RolePlayerMiniInfo::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint32 marry = 19;
inline bool RolePlayerMiniInfo::has_marry() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_marry() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RolePlayerMiniInfo::clear_has_marry() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RolePlayerMiniInfo::clear_marry() {
  marry_ = 0u;
  clear_has_marry();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::marry() const {
  return marry_;
}
inline void RolePlayerMiniInfo::set_marry(::google::protobuf::uint32 value) {
  set_has_marry();
  marry_ = value;
}

// optional uint64 clan3_id = 20;
inline bool RolePlayerMiniInfo::has_clan3_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_clan3_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void RolePlayerMiniInfo::clear_has_clan3_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void RolePlayerMiniInfo::clear_clan3_id() {
  clan3_id_ = GOOGLE_ULONGLONG(0);
  clear_has_clan3_id();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::clan3_id() const {
  return clan3_id_;
}
inline void RolePlayerMiniInfo::set_clan3_id(::google::protobuf::uint64 value) {
  set_has_clan3_id();
  clan3_id_ = value;
}

// optional uint64 clan5_id = 21;
inline bool RolePlayerMiniInfo::has_clan5_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_clan5_id() {
  _has_bits_[0] |= 0x00080000u;
}
inline void RolePlayerMiniInfo::clear_has_clan5_id() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void RolePlayerMiniInfo::clear_clan5_id() {
  clan5_id_ = GOOGLE_ULONGLONG(0);
  clear_has_clan5_id();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::clan5_id() const {
  return clan5_id_;
}
inline void RolePlayerMiniInfo::set_clan5_id(::google::protobuf::uint64 value) {
  set_has_clan5_id();
  clan5_id_ = value;
}

// -------------------------------------------------------------------

// FriendInfo

// optional uint64 id = 1;
inline bool FriendInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 FriendInfo::id() const {
  return id_;
}
inline void FriendInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 closeness = 2;
inline bool FriendInfo::has_closeness() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendInfo::set_has_closeness() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendInfo::clear_has_closeness() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendInfo::clear_closeness() {
  closeness_ = 0u;
  clear_has_closeness();
}
inline ::google::protobuf::uint32 FriendInfo::closeness() const {
  return closeness_;
}
inline void FriendInfo::set_closeness(::google::protobuf::uint32 value) {
  set_has_closeness();
  closeness_ = value;
}

// optional uint32 todayCloseness = 3;
inline bool FriendInfo::has_todaycloseness() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendInfo::set_has_todaycloseness() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendInfo::clear_has_todaycloseness() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendInfo::clear_todaycloseness() {
  todaycloseness_ = 0u;
  clear_has_todaycloseness();
}
inline ::google::protobuf::uint32 FriendInfo::todaycloseness() const {
  return todaycloseness_;
}
inline void FriendInfo::set_todaycloseness(::google::protobuf::uint32 value) {
  set_has_todaycloseness();
  todaycloseness_ = value;
}

// optional uint64 updateTime = 4;
inline bool FriendInfo::has_updatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendInfo::set_has_updatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendInfo::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendInfo::clear_updatetime() {
  updatetime_ = GOOGLE_ULONGLONG(0);
  clear_has_updatetime();
}
inline ::google::protobuf::uint64 FriendInfo::updatetime() const {
  return updatetime_;
}
inline void FriendInfo::set_updatetime(::google::protobuf::uint64 value) {
  set_has_updatetime();
  updatetime_ = value;
}

// -------------------------------------------------------------------

// FriendApplyInfo

// optional uint64 id = 1;
inline bool FriendApplyInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendApplyInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendApplyInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendApplyInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 FriendApplyInfo::id() const {
  return id_;
}
inline void FriendApplyInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional bytes connect = 2;
inline bool FriendApplyInfo::has_connect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendApplyInfo::set_has_connect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendApplyInfo::clear_has_connect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendApplyInfo::clear_connect() {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    connect_->clear();
  }
  clear_has_connect();
}
inline const ::std::string& FriendApplyInfo::connect() const {
  return *connect_;
}
inline void FriendApplyInfo::set_connect(const ::std::string& value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void FriendApplyInfo::set_connect(const char* value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void FriendApplyInfo::set_connect(const void* value, size_t size) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendApplyInfo::mutable_connect() {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  return connect_;
}
inline ::std::string* FriendApplyInfo::release_connect() {
  clear_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = connect_;
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendApplyInfo::set_allocated_connect(::std::string* connect) {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    delete connect_;
  }
  if (connect) {
    set_has_connect();
    connect_ = connect;
  } else {
    clear_has_connect();
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RelationHateInfo

// optional uint64 id = 1;
inline bool RelationHateInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RelationHateInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RelationHateInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RelationHateInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RelationHateInfo::id() const {
  return id_;
}
inline void RelationHateInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 killMeTimes = 2;
inline bool RelationHateInfo::has_killmetimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RelationHateInfo::set_has_killmetimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RelationHateInfo::clear_has_killmetimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RelationHateInfo::clear_killmetimes() {
  killmetimes_ = 0u;
  clear_has_killmetimes();
}
inline ::google::protobuf::uint32 RelationHateInfo::killmetimes() const {
  return killmetimes_;
}
inline void RelationHateInfo::set_killmetimes(::google::protobuf::uint32 value) {
  set_has_killmetimes();
  killmetimes_ = value;
}

// -------------------------------------------------------------------

// RelationGiftRecord

// optional uint64 friendId = 1;
inline bool RelationGiftRecord::has_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RelationGiftRecord::set_has_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RelationGiftRecord::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RelationGiftRecord::clear_friendid() {
  friendid_ = GOOGLE_ULONGLONG(0);
  clear_has_friendid();
}
inline ::google::protobuf::uint64 RelationGiftRecord::friendid() const {
  return friendid_;
}
inline void RelationGiftRecord::set_friendid(::google::protobuf::uint64 value) {
  set_has_friendid();
  friendid_ = value;
}

// optional uint64 itemId = 2;
inline bool RelationGiftRecord::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RelationGiftRecord::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RelationGiftRecord::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RelationGiftRecord::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 RelationGiftRecord::itemid() const {
  return itemid_;
}
inline void RelationGiftRecord::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 isThanks = 3;
inline bool RelationGiftRecord::has_isthanks() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RelationGiftRecord::set_has_isthanks() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RelationGiftRecord::clear_has_isthanks() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RelationGiftRecord::clear_isthanks() {
  isthanks_ = 0u;
  clear_has_isthanks();
}
inline ::google::protobuf::uint32 RelationGiftRecord::isthanks() const {
  return isthanks_;
}
inline void RelationGiftRecord::set_isthanks(::google::protobuf::uint32 value) {
  set_has_isthanks();
  isthanks_ = value;
}

// optional uint32 itemNum = 4;
inline bool RelationGiftRecord::has_itemnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RelationGiftRecord::set_has_itemnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RelationGiftRecord::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RelationGiftRecord::clear_itemnum() {
  itemnum_ = 0u;
  clear_has_itemnum();
}
inline ::google::protobuf::uint32 RelationGiftRecord::itemnum() const {
  return itemnum_;
}
inline void RelationGiftRecord::set_itemnum(::google::protobuf::uint32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// -------------------------------------------------------------------

// RelationDBInfo

// repeated .proto_ff.FriendInfo friendList = 1;
inline int RelationDBInfo::friendlist_size() const {
  return friendlist_.size();
}
inline void RelationDBInfo::clear_friendlist() {
  friendlist_.Clear();
}
inline const ::proto_ff::FriendInfo& RelationDBInfo::friendlist(int index) const {
  return friendlist_.Get(index);
}
inline ::proto_ff::FriendInfo* RelationDBInfo::mutable_friendlist(int index) {
  return friendlist_.Mutable(index);
}
inline ::proto_ff::FriendInfo* RelationDBInfo::add_friendlist() {
  return friendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >&
RelationDBInfo::friendlist() const {
  return friendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >*
RelationDBInfo::mutable_friendlist() {
  return &friendlist_;
}

// repeated uint64 blackList = 2;
inline int RelationDBInfo::blacklist_size() const {
  return blacklist_.size();
}
inline void RelationDBInfo::clear_blacklist() {
  blacklist_.Clear();
}
inline ::google::protobuf::uint64 RelationDBInfo::blacklist(int index) const {
  return blacklist_.Get(index);
}
inline void RelationDBInfo::set_blacklist(int index, ::google::protobuf::uint64 value) {
  blacklist_.Set(index, value);
}
inline void RelationDBInfo::add_blacklist(::google::protobuf::uint64 value) {
  blacklist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RelationDBInfo::blacklist() const {
  return blacklist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RelationDBInfo::mutable_blacklist() {
  return &blacklist_;
}

// repeated .proto_ff.RelationHateInfo hateList = 3;
inline int RelationDBInfo::hatelist_size() const {
  return hatelist_.size();
}
inline void RelationDBInfo::clear_hatelist() {
  hatelist_.Clear();
}
inline const ::proto_ff::RelationHateInfo& RelationDBInfo::hatelist(int index) const {
  return hatelist_.Get(index);
}
inline ::proto_ff::RelationHateInfo* RelationDBInfo::mutable_hatelist(int index) {
  return hatelist_.Mutable(index);
}
inline ::proto_ff::RelationHateInfo* RelationDBInfo::add_hatelist() {
  return hatelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >&
RelationDBInfo::hatelist() const {
  return hatelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >*
RelationDBInfo::mutable_hatelist() {
  return &hatelist_;
}

// repeated .proto_ff.FriendApplyInfo applyList = 4;
inline int RelationDBInfo::applylist_size() const {
  return applylist_.size();
}
inline void RelationDBInfo::clear_applylist() {
  applylist_.Clear();
}
inline const ::proto_ff::FriendApplyInfo& RelationDBInfo::applylist(int index) const {
  return applylist_.Get(index);
}
inline ::proto_ff::FriendApplyInfo* RelationDBInfo::mutable_applylist(int index) {
  return applylist_.Mutable(index);
}
inline ::proto_ff::FriendApplyInfo* RelationDBInfo::add_applylist() {
  return applylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >&
RelationDBInfo::applylist() const {
  return applylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >*
RelationDBInfo::mutable_applylist() {
  return &applylist_;
}

// optional uint32 friends_add = 5;
inline bool RelationDBInfo::has_friends_add() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RelationDBInfo::set_has_friends_add() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RelationDBInfo::clear_has_friends_add() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RelationDBInfo::clear_friends_add() {
  friends_add_ = 0u;
  clear_has_friends_add();
}
inline ::google::protobuf::uint32 RelationDBInfo::friends_add() const {
  return friends_add_;
}
inline void RelationDBInfo::set_friends_add(::google::protobuf::uint32 value) {
  set_has_friends_add();
  friends_add_ = value;
}

// repeated .proto_ff.RelationGiftRecord giftRecords = 6;
inline int RelationDBInfo::giftrecords_size() const {
  return giftrecords_.size();
}
inline void RelationDBInfo::clear_giftrecords() {
  giftrecords_.Clear();
}
inline const ::proto_ff::RelationGiftRecord& RelationDBInfo::giftrecords(int index) const {
  return giftrecords_.Get(index);
}
inline ::proto_ff::RelationGiftRecord* RelationDBInfo::mutable_giftrecords(int index) {
  return giftrecords_.Mutable(index);
}
inline ::proto_ff::RelationGiftRecord* RelationDBInfo::add_giftrecords() {
  return giftrecords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >&
RelationDBInfo::giftrecords() const {
  return giftrecords_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >*
RelationDBInfo::mutable_giftrecords() {
  return &giftrecords_;
}

// repeated .proto_ff.ArenaChallResult arena_result = 7;
inline int RelationDBInfo::arena_result_size() const {
  return arena_result_.size();
}
inline void RelationDBInfo::clear_arena_result() {
  arena_result_.Clear();
}
inline const ::proto_ff::ArenaChallResult& RelationDBInfo::arena_result(int index) const {
  return arena_result_.Get(index);
}
inline ::proto_ff::ArenaChallResult* RelationDBInfo::mutable_arena_result(int index) {
  return arena_result_.Mutable(index);
}
inline ::proto_ff::ArenaChallResult* RelationDBInfo::add_arena_result() {
  return arena_result_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaChallResult >&
RelationDBInfo::arena_result() const {
  return arena_result_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaChallResult >*
RelationDBInfo::mutable_arena_result() {
  return &arena_result_;
}

// optional uint32 charm_value = 8;
inline bool RelationDBInfo::has_charm_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RelationDBInfo::set_has_charm_value() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RelationDBInfo::clear_has_charm_value() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RelationDBInfo::clear_charm_value() {
  charm_value_ = 0u;
  clear_has_charm_value();
}
inline ::google::protobuf::uint32 RelationDBInfo::charm_value() const {
  return charm_value_;
}
inline void RelationDBInfo::set_charm_value(::google::protobuf::uint32 value) {
  set_has_charm_value();
  charm_value_ = value;
}

// -------------------------------------------------------------------

// DigPerfor

// required uint32 type = 1;
inline bool DigPerfor::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DigPerfor::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DigPerfor::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DigPerfor::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 DigPerfor::type() const {
  return type_;
}
inline void DigPerfor::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 value = 2;
inline bool DigPerfor::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DigPerfor::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DigPerfor::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DigPerfor::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 DigPerfor::value() const {
  return value_;
}
inline void DigPerfor::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// BuffProto

// required uint64 buff_index = 1;
inline bool BuffProto::has_buff_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffProto::set_has_buff_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffProto::clear_has_buff_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffProto::clear_buff_index() {
  buff_index_ = GOOGLE_ULONGLONG(0);
  clear_has_buff_index();
}
inline ::google::protobuf::uint64 BuffProto::buff_index() const {
  return buff_index_;
}
inline void BuffProto::set_buff_index(::google::protobuf::uint64 value) {
  set_has_buff_index();
  buff_index_ = value;
}

// required uint64 buff_id = 2;
inline bool BuffProto::has_buff_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffProto::set_has_buff_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffProto::clear_has_buff_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffProto::clear_buff_id() {
  buff_id_ = GOOGLE_ULONGLONG(0);
  clear_has_buff_id();
}
inline ::google::protobuf::uint64 BuffProto::buff_id() const {
  return buff_id_;
}
inline void BuffProto::set_buff_id(::google::protobuf::uint64 value) {
  set_has_buff_id();
  buff_id_ = value;
}

// optional uint64 recver_cid = 3;
inline bool BuffProto::has_recver_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffProto::set_has_recver_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffProto::clear_has_recver_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffProto::clear_recver_cid() {
  recver_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_recver_cid();
}
inline ::google::protobuf::uint64 BuffProto::recver_cid() const {
  return recver_cid_;
}
inline void BuffProto::set_recver_cid(::google::protobuf::uint64 value) {
  set_has_recver_cid();
  recver_cid_ = value;
}

// optional int64 left_msec = 4;
inline bool BuffProto::has_left_msec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffProto::set_has_left_msec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffProto::clear_has_left_msec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffProto::clear_left_msec() {
  left_msec_ = GOOGLE_LONGLONG(0);
  clear_has_left_msec();
}
inline ::google::protobuf::int64 BuffProto::left_msec() const {
  return left_msec_;
}
inline void BuffProto::set_left_msec(::google::protobuf::int64 value) {
  set_has_left_msec();
  left_msec_ = value;
}

// optional uint64 skill_id = 5;
inline bool BuffProto::has_skill_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffProto::set_has_skill_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffProto::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffProto::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 BuffProto::skill_id() const {
  return skill_id_;
}
inline void BuffProto::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional int32 skill_lev = 6;
inline bool BuffProto::has_skill_lev() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuffProto::set_has_skill_lev() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuffProto::clear_has_skill_lev() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuffProto::clear_skill_lev() {
  skill_lev_ = 0;
  clear_has_skill_lev();
}
inline ::google::protobuf::int32 BuffProto::skill_lev() const {
  return skill_lev_;
}
inline void BuffProto::set_skill_lev(::google::protobuf::int32 value) {
  set_has_skill_lev();
  skill_lev_ = value;
}

// optional int32 is_effect = 7;
inline bool BuffProto::has_is_effect() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuffProto::set_has_is_effect() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuffProto::clear_has_is_effect() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuffProto::clear_is_effect() {
  is_effect_ = 0;
  clear_has_is_effect();
}
inline ::google::protobuf::int32 BuffProto::is_effect() const {
  return is_effect_;
}
inline void BuffProto::set_is_effect(::google::protobuf::int32 value) {
  set_has_is_effect();
  is_effect_ = value;
}

// optional int64 param1 = 8;
inline bool BuffProto::has_param1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BuffProto::set_has_param1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BuffProto::clear_has_param1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BuffProto::clear_param1() {
  param1_ = GOOGLE_LONGLONG(0);
  clear_has_param1();
}
inline ::google::protobuf::int64 BuffProto::param1() const {
  return param1_;
}
inline void BuffProto::set_param1(::google::protobuf::int64 value) {
  set_has_param1();
  param1_ = value;
}

// -------------------------------------------------------------------

// BuffListProto

// optional uint64 cid = 1;
inline bool BuffListProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffListProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffListProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffListProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 BuffListProto::cid() const {
  return cid_;
}
inline void BuffListProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// repeated .proto_ff.BuffProto info = 2;
inline int BuffListProto::info_size() const {
  return info_.size();
}
inline void BuffListProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::BuffProto& BuffListProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::BuffProto* BuffListProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::BuffProto* BuffListProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >&
BuffListProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >*
BuffListProto::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// SkillPosProto

// optional uint64 skill_id = 1;
inline bool SkillPosProto::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillPosProto::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillPosProto::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillPosProto::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 SkillPosProto::skill_id() const {
  return skill_id_;
}
inline void SkillPosProto::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 pos = 2;
inline bool SkillPosProto::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillPosProto::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillPosProto::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillPosProto::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 SkillPosProto::pos() const {
  return pos_;
}
inline void SkillPosProto::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// optional int32 cd = 3;
inline bool SkillPosProto::has_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillPosProto::set_has_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillPosProto::clear_has_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillPosProto::clear_cd() {
  cd_ = 0;
  clear_has_cd();
}
inline ::google::protobuf::int32 SkillPosProto::cd() const {
  return cd_;
}
inline void SkillPosProto::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
}

// optional int32 use = 4;
inline bool SkillPosProto::has_use() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillPosProto::set_has_use() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillPosProto::clear_has_use() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillPosProto::clear_use() {
  use_ = 0;
  clear_has_use();
}
inline ::google::protobuf::int32 SkillPosProto::use() const {
  return use_;
}
inline void SkillPosProto::set_use(::google::protobuf::int32 value) {
  set_has_use();
  use_ = value;
}

// -------------------------------------------------------------------

// SkillGroupProto

// optional uint32 group = 1;
inline bool SkillGroupProto::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillGroupProto::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillGroupProto::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillGroupProto::clear_group() {
  group_ = 0u;
  clear_has_group();
}
inline ::google::protobuf::uint32 SkillGroupProto::group() const {
  return group_;
}
inline void SkillGroupProto::set_group(::google::protobuf::uint32 value) {
  set_has_group();
  group_ = value;
}

// repeated .proto_ff.SkillPosProto lst = 2;
inline int SkillGroupProto::lst_size() const {
  return lst_.size();
}
inline void SkillGroupProto::clear_lst() {
  lst_.Clear();
}
inline const ::proto_ff::SkillPosProto& SkillGroupProto::lst(int index) const {
  return lst_.Get(index);
}
inline ::proto_ff::SkillPosProto* SkillGroupProto::mutable_lst(int index) {
  return lst_.Mutable(index);
}
inline ::proto_ff::SkillPosProto* SkillGroupProto::add_lst() {
  return lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >&
SkillGroupProto::lst() const {
  return lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >*
SkillGroupProto::mutable_lst() {
  return &lst_;
}

// -------------------------------------------------------------------

// SkillGroupListProto

// repeated .proto_ff.SkillGroupProto info = 1;
inline int SkillGroupListProto::info_size() const {
  return info_.size();
}
inline void SkillGroupListProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::SkillGroupProto& SkillGroupListProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::SkillGroupProto* SkillGroupListProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::SkillGroupProto* SkillGroupListProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >&
SkillGroupListProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >*
SkillGroupListProto::mutable_info() {
  return &info_;
}

// optional uint32 cur_skill_group = 2;
inline bool SkillGroupListProto::has_cur_skill_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillGroupListProto::set_has_cur_skill_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillGroupListProto::clear_has_cur_skill_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillGroupListProto::clear_cur_skill_group() {
  cur_skill_group_ = 0u;
  clear_has_cur_skill_group();
}
inline ::google::protobuf::uint32 SkillGroupListProto::cur_skill_group() const {
  return cur_skill_group_;
}
inline void SkillGroupListProto::set_cur_skill_group(::google::protobuf::uint32 value) {
  set_has_cur_skill_group();
  cur_skill_group_ = value;
}

// -------------------------------------------------------------------

// GodEvilTaskProto

// optional int32 id = 1;
inline bool GodEvilTaskProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodEvilTaskProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodEvilTaskProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodEvilTaskProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GodEvilTaskProto::id() const {
  return id_;
}
inline void GodEvilTaskProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 cur = 2;
inline bool GodEvilTaskProto::has_cur() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodEvilTaskProto::set_has_cur() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodEvilTaskProto::clear_has_cur() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodEvilTaskProto::clear_cur() {
  cur_ = 0;
  clear_has_cur();
}
inline ::google::protobuf::int32 GodEvilTaskProto::cur() const {
  return cur_;
}
inline void GodEvilTaskProto::set_cur(::google::protobuf::int32 value) {
  set_has_cur();
  cur_ = value;
}

// optional int32 state = 3;
inline bool GodEvilTaskProto::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodEvilTaskProto::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodEvilTaskProto::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodEvilTaskProto::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GodEvilTaskProto::state() const {
  return state_;
}
inline void GodEvilTaskProto::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// GodEvilTaskListProto

// repeated .proto_ff.GodEvilTaskProto lst = 1;
inline int GodEvilTaskListProto::lst_size() const {
  return lst_.size();
}
inline void GodEvilTaskListProto::clear_lst() {
  lst_.Clear();
}
inline const ::proto_ff::GodEvilTaskProto& GodEvilTaskListProto::lst(int index) const {
  return lst_.Get(index);
}
inline ::proto_ff::GodEvilTaskProto* GodEvilTaskListProto::mutable_lst(int index) {
  return lst_.Mutable(index);
}
inline ::proto_ff::GodEvilTaskProto* GodEvilTaskListProto::add_lst() {
  return lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodEvilTaskProto >&
GodEvilTaskListProto::lst() const {
  return lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodEvilTaskProto >*
GodEvilTaskListProto::mutable_lst() {
  return &lst_;
}

// -------------------------------------------------------------------

// GodEvilStageProto

// optional int32 stage = 1;
inline bool GodEvilStageProto::has_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodEvilStageProto::set_has_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodEvilStageProto::clear_has_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodEvilStageProto::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 GodEvilStageProto::stage() const {
  return stage_;
}
inline void GodEvilStageProto::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// optional .proto_ff.GodEvilTaskListProto task = 2;
inline bool GodEvilStageProto::has_task() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodEvilStageProto::set_has_task() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodEvilStageProto::clear_has_task() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodEvilStageProto::clear_task() {
  if (task_ != NULL) task_->::proto_ff::GodEvilTaskListProto::Clear();
  clear_has_task();
}
inline const ::proto_ff::GodEvilTaskListProto& GodEvilStageProto::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::proto_ff::GodEvilTaskListProto* GodEvilStageProto::mutable_task() {
  set_has_task();
  if (task_ == NULL) task_ = new ::proto_ff::GodEvilTaskListProto;
  return task_;
}
inline ::proto_ff::GodEvilTaskListProto* GodEvilStageProto::release_task() {
  clear_has_task();
  ::proto_ff::GodEvilTaskListProto* temp = task_;
  task_ = NULL;
  return temp;
}
inline void GodEvilStageProto::set_allocated_task(::proto_ff::GodEvilTaskListProto* task) {
  delete task_;
  task_ = task;
  if (task) {
    set_has_task();
  } else {
    clear_has_task();
  }
}

// optional int32 finish = 3;
inline bool GodEvilStageProto::has_finish() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodEvilStageProto::set_has_finish() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodEvilStageProto::clear_has_finish() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodEvilStageProto::clear_finish() {
  finish_ = 0;
  clear_has_finish();
}
inline ::google::protobuf::int32 GodEvilStageProto::finish() const {
  return finish_;
}
inline void GodEvilStageProto::set_finish(::google::protobuf::int32 value) {
  set_has_finish();
  finish_ = value;
}

// -------------------------------------------------------------------

// GodEvilProto

// optional int32 fetch = 1;
inline bool GodEvilProto::has_fetch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodEvilProto::set_has_fetch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodEvilProto::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodEvilProto::clear_fetch() {
  fetch_ = 0;
  clear_has_fetch();
}
inline ::google::protobuf::int32 GodEvilProto::fetch() const {
  return fetch_;
}
inline void GodEvilProto::set_fetch(::google::protobuf::int32 value) {
  set_has_fetch();
  fetch_ = value;
}

// optional .proto_ff.GodEvilStageProto stage = 2;
inline bool GodEvilProto::has_stage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodEvilProto::set_has_stage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodEvilProto::clear_has_stage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodEvilProto::clear_stage() {
  if (stage_ != NULL) stage_->::proto_ff::GodEvilStageProto::Clear();
  clear_has_stage();
}
inline const ::proto_ff::GodEvilStageProto& GodEvilProto::stage() const {
  return stage_ != NULL ? *stage_ : *default_instance_->stage_;
}
inline ::proto_ff::GodEvilStageProto* GodEvilProto::mutable_stage() {
  set_has_stage();
  if (stage_ == NULL) stage_ = new ::proto_ff::GodEvilStageProto;
  return stage_;
}
inline ::proto_ff::GodEvilStageProto* GodEvilProto::release_stage() {
  clear_has_stage();
  ::proto_ff::GodEvilStageProto* temp = stage_;
  stage_ = NULL;
  return temp;
}
inline void GodEvilProto::set_allocated_stage(::proto_ff::GodEvilStageProto* stage) {
  delete stage_;
  stage_ = stage;
  if (stage) {
    set_has_stage();
  } else {
    clear_has_stage();
  }
}

// optional int32 type = 3;
inline bool GodEvilProto::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodEvilProto::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodEvilProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodEvilProto::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GodEvilProto::type() const {
  return type_;
}
inline void GodEvilProto::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 cd = 4;
inline bool GodEvilProto::has_cd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GodEvilProto::set_has_cd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GodEvilProto::clear_has_cd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GodEvilProto::clear_cd() {
  cd_ = 0;
  clear_has_cd();
}
inline ::google::protobuf::int32 GodEvilProto::cd() const {
  return cd_;
}
inline void GodEvilProto::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
}

// optional int32 vessel_lev = 5;
inline bool GodEvilProto::has_vessel_lev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GodEvilProto::set_has_vessel_lev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GodEvilProto::clear_has_vessel_lev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GodEvilProto::clear_vessel_lev() {
  vessel_lev_ = 0;
  clear_has_vessel_lev();
}
inline ::google::protobuf::int32 GodEvilProto::vessel_lev() const {
  return vessel_lev_;
}
inline void GodEvilProto::set_vessel_lev(::google::protobuf::int32 value) {
  set_has_vessel_lev();
  vessel_lev_ = value;
}

// optional int32 mirror_lev = 6;
inline bool GodEvilProto::has_mirror_lev() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GodEvilProto::set_has_mirror_lev() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GodEvilProto::clear_has_mirror_lev() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GodEvilProto::clear_mirror_lev() {
  mirror_lev_ = 0;
  clear_has_mirror_lev();
}
inline ::google::protobuf::int32 GodEvilProto::mirror_lev() const {
  return mirror_lev_;
}
inline void GodEvilProto::set_mirror_lev(::google::protobuf::int32 value) {
  set_has_mirror_lev();
  mirror_lev_ = value;
}

// required int64 extra_exp = 7;
inline bool GodEvilProto::has_extra_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GodEvilProto::set_has_extra_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GodEvilProto::clear_has_extra_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GodEvilProto::clear_extra_exp() {
  extra_exp_ = GOOGLE_LONGLONG(0);
  clear_has_extra_exp();
}
inline ::google::protobuf::int64 GodEvilProto::extra_exp() const {
  return extra_exp_;
}
inline void GodEvilProto::set_extra_exp(::google::protobuf::int64 value) {
  set_has_extra_exp();
  extra_exp_ = value;
}

// repeated .proto_ff.ItemProtoInfo equip = 8;
inline int GodEvilProto::equip_size() const {
  return equip_.size();
}
inline void GodEvilProto::clear_equip() {
  equip_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& GodEvilProto::equip(int index) const {
  return equip_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* GodEvilProto::mutable_equip(int index) {
  return equip_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* GodEvilProto::add_equip() {
  return equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
GodEvilProto::equip() const {
  return equip_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
GodEvilProto::mutable_equip() {
  return &equip_;
}

// -------------------------------------------------------------------

// RechargeProto

// repeated bytes product = 1;
inline int RechargeProto::product_size() const {
  return product_.size();
}
inline void RechargeProto::clear_product() {
  product_.Clear();
}
inline const ::std::string& RechargeProto::product(int index) const {
  return product_.Get(index);
}
inline ::std::string* RechargeProto::mutable_product(int index) {
  return product_.Mutable(index);
}
inline void RechargeProto::set_product(int index, const ::std::string& value) {
  product_.Mutable(index)->assign(value);
}
inline void RechargeProto::set_product(int index, const char* value) {
  product_.Mutable(index)->assign(value);
}
inline void RechargeProto::set_product(int index, const void* value, size_t size) {
  product_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RechargeProto::add_product() {
  return product_.Add();
}
inline void RechargeProto::add_product(const ::std::string& value) {
  product_.Add()->assign(value);
}
inline void RechargeProto::add_product(const char* value) {
  product_.Add()->assign(value);
}
inline void RechargeProto::add_product(const void* value, size_t size) {
  product_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RechargeProto::product() const {
  return product_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RechargeProto::mutable_product() {
  return &product_;
}

// -------------------------------------------------------------------

// FacadeFantasyData

// optional uint64 fantasy_id = 1;
inline bool FacadeFantasyData::has_fantasy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFantasyData::set_has_fantasy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFantasyData::clear_has_fantasy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFantasyData::clear_fantasy_id() {
  fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_id();
}
inline ::google::protobuf::uint64 FacadeFantasyData::fantasy_id() const {
  return fantasy_id_;
}
inline void FacadeFantasyData::set_fantasy_id(::google::protobuf::uint64 value) {
  set_has_fantasy_id();
  fantasy_id_ = value;
}

// optional uint32 fantasy_lev = 2;
inline bool FacadeFantasyData::has_fantasy_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFantasyData::set_has_fantasy_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFantasyData::clear_has_fantasy_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFantasyData::clear_fantasy_lev() {
  fantasy_lev_ = 0u;
  clear_has_fantasy_lev();
}
inline ::google::protobuf::uint32 FacadeFantasyData::fantasy_lev() const {
  return fantasy_lev_;
}
inline void FacadeFantasyData::set_fantasy_lev(::google::protobuf::uint32 value) {
  set_has_fantasy_lev();
  fantasy_lev_ = value;
}

// -------------------------------------------------------------------

// FacadeFragmentData

// optional uint64 fragment_id = 1;
inline bool FacadeFragmentData::has_fragment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFragmentData::set_has_fragment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFragmentData::clear_has_fragment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFragmentData::clear_fragment_id() {
  fragment_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fragment_id();
}
inline ::google::protobuf::uint64 FacadeFragmentData::fragment_id() const {
  return fragment_id_;
}
inline void FacadeFragmentData::set_fragment_id(::google::protobuf::uint64 value) {
  set_has_fragment_id();
  fragment_id_ = value;
}

// optional uint32 use_times = 2;
inline bool FacadeFragmentData::has_use_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFragmentData::set_has_use_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFragmentData::clear_has_use_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFragmentData::clear_use_times() {
  use_times_ = 0u;
  clear_has_use_times();
}
inline ::google::protobuf::uint32 FacadeFragmentData::use_times() const {
  return use_times_;
}
inline void FacadeFragmentData::set_use_times(::google::protobuf::uint32 value) {
  set_has_use_times();
  use_times_ = value;
}

// -------------------------------------------------------------------

// FacadeSkillData

// optional uint64 skill_id = 1;
inline bool FacadeSkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSkillData::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 FacadeSkillData::skill_id() const {
  return skill_id_;
}
inline void FacadeSkillData::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 skill_lev = 2;
inline bool FacadeSkillData::has_skill_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSkillData::set_has_skill_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSkillData::clear_has_skill_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSkillData::clear_skill_lev() {
  skill_lev_ = 0u;
  clear_has_skill_lev();
}
inline ::google::protobuf::uint32 FacadeSkillData::skill_lev() const {
  return skill_lev_;
}
inline void FacadeSkillData::set_skill_lev(::google::protobuf::uint32 value) {
  set_has_skill_lev();
  skill_lev_ = value;
}

// -------------------------------------------------------------------

// MountFantasyData

// optional uint64 fantasy_id = 1;
inline bool MountFantasyData::has_fantasy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountFantasyData::set_has_fantasy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountFantasyData::clear_has_fantasy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountFantasyData::clear_fantasy_id() {
  fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_id();
}
inline ::google::protobuf::uint64 MountFantasyData::fantasy_id() const {
  return fantasy_id_;
}
inline void MountFantasyData::set_fantasy_id(::google::protobuf::uint64 value) {
  set_has_fantasy_id();
  fantasy_id_ = value;
}

// optional uint32 fantasy_lev = 2;
inline bool MountFantasyData::has_fantasy_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountFantasyData::set_has_fantasy_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountFantasyData::clear_has_fantasy_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountFantasyData::clear_fantasy_lev() {
  fantasy_lev_ = 0u;
  clear_has_fantasy_lev();
}
inline ::google::protobuf::uint32 MountFantasyData::fantasy_lev() const {
  return fantasy_lev_;
}
inline void MountFantasyData::set_fantasy_lev(::google::protobuf::uint32 value) {
  set_has_fantasy_lev();
  fantasy_lev_ = value;
}

// optional uint64 fantasy_lev_exp = 3;
inline bool MountFantasyData::has_fantasy_lev_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountFantasyData::set_has_fantasy_lev_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountFantasyData::clear_has_fantasy_lev_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountFantasyData::clear_fantasy_lev_exp() {
  fantasy_lev_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_lev_exp();
}
inline ::google::protobuf::uint64 MountFantasyData::fantasy_lev_exp() const {
  return fantasy_lev_exp_;
}
inline void MountFantasyData::set_fantasy_lev_exp(::google::protobuf::uint64 value) {
  set_has_fantasy_lev_exp();
  fantasy_lev_exp_ = value;
}

// optional uint32 fantasy_star = 4;
inline bool MountFantasyData::has_fantasy_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountFantasyData::set_has_fantasy_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountFantasyData::clear_has_fantasy_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountFantasyData::clear_fantasy_star() {
  fantasy_star_ = 0u;
  clear_has_fantasy_star();
}
inline ::google::protobuf::uint32 MountFantasyData::fantasy_star() const {
  return fantasy_star_;
}
inline void MountFantasyData::set_fantasy_star(::google::protobuf::uint32 value) {
  set_has_fantasy_star();
  fantasy_star_ = value;
}

// -------------------------------------------------------------------

// MountFragmentData

// optional uint64 fragment_id = 1;
inline bool MountFragmentData::has_fragment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountFragmentData::set_has_fragment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountFragmentData::clear_has_fragment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountFragmentData::clear_fragment_id() {
  fragment_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fragment_id();
}
inline ::google::protobuf::uint64 MountFragmentData::fragment_id() const {
  return fragment_id_;
}
inline void MountFragmentData::set_fragment_id(::google::protobuf::uint64 value) {
  set_has_fragment_id();
  fragment_id_ = value;
}

// optional uint32 use_times = 2;
inline bool MountFragmentData::has_use_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountFragmentData::set_has_use_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountFragmentData::clear_has_use_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountFragmentData::clear_use_times() {
  use_times_ = 0u;
  clear_has_use_times();
}
inline ::google::protobuf::uint32 MountFragmentData::use_times() const {
  return use_times_;
}
inline void MountFragmentData::set_use_times(::google::protobuf::uint32 value) {
  set_has_use_times();
  use_times_ = value;
}

// -------------------------------------------------------------------

// MountSkillData

// optional uint64 skill_id = 1;
inline bool MountSkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountSkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountSkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountSkillData::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 MountSkillData::skill_id() const {
  return skill_id_;
}
inline void MountSkillData::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 skill_lev = 2;
inline bool MountSkillData::has_skill_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountSkillData::set_has_skill_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountSkillData::clear_has_skill_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountSkillData::clear_skill_lev() {
  skill_lev_ = 0u;
  clear_has_skill_lev();
}
inline ::google::protobuf::uint32 MountSkillData::skill_lev() const {
  return skill_lev_;
}
inline void MountSkillData::set_skill_lev(::google::protobuf::uint32 value) {
  set_has_skill_lev();
  skill_lev_ = value;
}

// -------------------------------------------------------------------

// MountKunEquipData

// repeated .proto_ff.EquipInfo infos = 1;
inline int MountKunEquipData::infos_size() const {
  return infos_.size();
}
inline void MountKunEquipData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::EquipInfo& MountKunEquipData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::EquipInfo* MountKunEquipData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::EquipInfo* MountKunEquipData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >&
MountKunEquipData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >*
MountKunEquipData::mutable_infos() {
  return &infos_;
}

// repeated uint32 slot_status = 2;
inline int MountKunEquipData::slot_status_size() const {
  return slot_status_.size();
}
inline void MountKunEquipData::clear_slot_status() {
  slot_status_.Clear();
}
inline ::google::protobuf::uint32 MountKunEquipData::slot_status(int index) const {
  return slot_status_.Get(index);
}
inline void MountKunEquipData::set_slot_status(int index, ::google::protobuf::uint32 value) {
  slot_status_.Set(index, value);
}
inline void MountKunEquipData::add_slot_status(::google::protobuf::uint32 value) {
  slot_status_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MountKunEquipData::slot_status() const {
  return slot_status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MountKunEquipData::mutable_slot_status() {
  return &slot_status_;
}

// -------------------------------------------------------------------

// MountKunEquipSuitData

// optional int64 id = 1;
inline bool MountKunEquipSuitData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountKunEquipSuitData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountKunEquipSuitData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountKunEquipSuitData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 MountKunEquipSuitData::id() const {
  return id_;
}
inline void MountKunEquipSuitData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 state = 2;
inline bool MountKunEquipSuitData::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountKunEquipSuitData::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountKunEquipSuitData::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountKunEquipSuitData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 MountKunEquipSuitData::state() const {
  return state_;
}
inline void MountKunEquipSuitData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// MountKunData

// optional uint64 kun_id = 1;
inline bool MountKunData::has_kun_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountKunData::set_has_kun_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountKunData::clear_has_kun_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountKunData::clear_kun_id() {
  kun_id_ = GOOGLE_ULONGLONG(0);
  clear_has_kun_id();
}
inline ::google::protobuf::uint64 MountKunData::kun_id() const {
  return kun_id_;
}
inline void MountKunData::set_kun_id(::google::protobuf::uint64 value) {
  set_has_kun_id();
  kun_id_ = value;
}

// optional uint32 kun_lev = 2;
inline bool MountKunData::has_kun_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountKunData::set_has_kun_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountKunData::clear_has_kun_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountKunData::clear_kun_lev() {
  kun_lev_ = 0u;
  clear_has_kun_lev();
}
inline ::google::protobuf::uint32 MountKunData::kun_lev() const {
  return kun_lev_;
}
inline void MountKunData::set_kun_lev(::google::protobuf::uint32 value) {
  set_has_kun_lev();
  kun_lev_ = value;
}

// optional uint64 kun_lev_exp = 3;
inline bool MountKunData::has_kun_lev_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountKunData::set_has_kun_lev_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountKunData::clear_has_kun_lev_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountKunData::clear_kun_lev_exp() {
  kun_lev_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_kun_lev_exp();
}
inline ::google::protobuf::uint64 MountKunData::kun_lev_exp() const {
  return kun_lev_exp_;
}
inline void MountKunData::set_kun_lev_exp(::google::protobuf::uint64 value) {
  set_has_kun_lev_exp();
  kun_lev_exp_ = value;
}

// optional uint32 kun_star = 4;
inline bool MountKunData::has_kun_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountKunData::set_has_kun_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountKunData::clear_has_kun_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountKunData::clear_kun_star() {
  kun_star_ = 0u;
  clear_has_kun_star();
}
inline ::google::protobuf::uint32 MountKunData::kun_star() const {
  return kun_star_;
}
inline void MountKunData::set_kun_star(::google::protobuf::uint32 value) {
  set_has_kun_star();
  kun_star_ = value;
}

// optional uint32 kun_advance_lev = 5;
inline bool MountKunData::has_kun_advance_lev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MountKunData::set_has_kun_advance_lev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MountKunData::clear_has_kun_advance_lev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MountKunData::clear_kun_advance_lev() {
  kun_advance_lev_ = 0u;
  clear_has_kun_advance_lev();
}
inline ::google::protobuf::uint32 MountKunData::kun_advance_lev() const {
  return kun_advance_lev_;
}
inline void MountKunData::set_kun_advance_lev(::google::protobuf::uint32 value) {
  set_has_kun_advance_lev();
  kun_advance_lev_ = value;
}

// optional uint64 fight = 6;
inline bool MountKunData::has_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MountKunData::set_has_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MountKunData::clear_has_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MountKunData::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 MountKunData::fight() const {
  return fight_;
}
inline void MountKunData::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional .proto_ff.MountKunEquipData equip_data = 7;
inline bool MountKunData::has_equip_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MountKunData::set_has_equip_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MountKunData::clear_has_equip_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MountKunData::clear_equip_data() {
  if (equip_data_ != NULL) equip_data_->::proto_ff::MountKunEquipData::Clear();
  clear_has_equip_data();
}
inline const ::proto_ff::MountKunEquipData& MountKunData::equip_data() const {
  return equip_data_ != NULL ? *equip_data_ : *default_instance_->equip_data_;
}
inline ::proto_ff::MountKunEquipData* MountKunData::mutable_equip_data() {
  set_has_equip_data();
  if (equip_data_ == NULL) equip_data_ = new ::proto_ff::MountKunEquipData;
  return equip_data_;
}
inline ::proto_ff::MountKunEquipData* MountKunData::release_equip_data() {
  clear_has_equip_data();
  ::proto_ff::MountKunEquipData* temp = equip_data_;
  equip_data_ = NULL;
  return temp;
}
inline void MountKunData::set_allocated_equip_data(::proto_ff::MountKunEquipData* equip_data) {
  delete equip_data_;
  equip_data_ = equip_data;
  if (equip_data) {
    set_has_equip_data();
  } else {
    clear_has_equip_data();
  }
}

// repeated .proto_ff.MountKunEquipSuitData equip_suit_data = 8;
inline int MountKunData::equip_suit_data_size() const {
  return equip_suit_data_.size();
}
inline void MountKunData::clear_equip_suit_data() {
  equip_suit_data_.Clear();
}
inline const ::proto_ff::MountKunEquipSuitData& MountKunData::equip_suit_data(int index) const {
  return equip_suit_data_.Get(index);
}
inline ::proto_ff::MountKunEquipSuitData* MountKunData::mutable_equip_suit_data(int index) {
  return equip_suit_data_.Mutable(index);
}
inline ::proto_ff::MountKunEquipSuitData* MountKunData::add_equip_suit_data() {
  return equip_suit_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MountKunEquipSuitData >&
MountKunData::equip_suit_data() const {
  return equip_suit_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MountKunEquipSuitData >*
MountKunData::mutable_equip_suit_data() {
  return &equip_suit_data_;
}

// optional bool kun_tiwu_quality = 9;
inline bool MountKunData::has_kun_tiwu_quality() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MountKunData::set_has_kun_tiwu_quality() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MountKunData::clear_has_kun_tiwu_quality() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MountKunData::clear_kun_tiwu_quality() {
  kun_tiwu_quality_ = false;
  clear_has_kun_tiwu_quality();
}
inline bool MountKunData::kun_tiwu_quality() const {
  return kun_tiwu_quality_;
}
inline void MountKunData::set_kun_tiwu_quality(bool value) {
  set_has_kun_tiwu_quality();
  kun_tiwu_quality_ = value;
}

// optional uint32 kun_tiwu_level = 10;
inline bool MountKunData::has_kun_tiwu_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MountKunData::set_has_kun_tiwu_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MountKunData::clear_has_kun_tiwu_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MountKunData::clear_kun_tiwu_level() {
  kun_tiwu_level_ = 0u;
  clear_has_kun_tiwu_level();
}
inline ::google::protobuf::uint32 MountKunData::kun_tiwu_level() const {
  return kun_tiwu_level_;
}
inline void MountKunData::set_kun_tiwu_level(::google::protobuf::uint32 value) {
  set_has_kun_tiwu_level();
  kun_tiwu_level_ = value;
}

// optional uint32 kun_change_id = 11;
inline bool MountKunData::has_kun_change_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MountKunData::set_has_kun_change_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MountKunData::clear_has_kun_change_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MountKunData::clear_kun_change_id() {
  kun_change_id_ = 0u;
  clear_has_kun_change_id();
}
inline ::google::protobuf::uint32 MountKunData::kun_change_id() const {
  return kun_change_id_;
}
inline void MountKunData::set_kun_change_id(::google::protobuf::uint32 value) {
  set_has_kun_change_id();
  kun_change_id_ = value;
}

// -------------------------------------------------------------------

// MountKunChangeData

// optional uint64 kun_change_id = 1;
inline bool MountKunChangeData::has_kun_change_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountKunChangeData::set_has_kun_change_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountKunChangeData::clear_has_kun_change_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountKunChangeData::clear_kun_change_id() {
  kun_change_id_ = GOOGLE_ULONGLONG(0);
  clear_has_kun_change_id();
}
inline ::google::protobuf::uint64 MountKunChangeData::kun_change_id() const {
  return kun_change_id_;
}
inline void MountKunChangeData::set_kun_change_id(::google::protobuf::uint64 value) {
  set_has_kun_change_id();
  kun_change_id_ = value;
}

// optional uint32 kun_change_star = 2;
inline bool MountKunChangeData::has_kun_change_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountKunChangeData::set_has_kun_change_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountKunChangeData::clear_has_kun_change_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountKunChangeData::clear_kun_change_star() {
  kun_change_star_ = 0u;
  clear_has_kun_change_star();
}
inline ::google::protobuf::uint32 MountKunChangeData::kun_change_star() const {
  return kun_change_star_;
}
inline void MountKunChangeData::set_kun_change_star(::google::protobuf::uint32 value) {
  set_has_kun_change_star();
  kun_change_star_ = value;
}

// optional bool kun_change_quality = 3;
inline bool MountKunChangeData::has_kun_change_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountKunChangeData::set_has_kun_change_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountKunChangeData::clear_has_kun_change_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountKunChangeData::clear_kun_change_quality() {
  kun_change_quality_ = false;
  clear_has_kun_change_quality();
}
inline bool MountKunChangeData::kun_change_quality() const {
  return kun_change_quality_;
}
inline void MountKunChangeData::set_kun_change_quality(bool value) {
  set_has_kun_change_quality();
  kun_change_quality_ = value;
}

// -------------------------------------------------------------------

// MountBloodData

// optional uint64 blood_id = 1;
inline bool MountBloodData::has_blood_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountBloodData::set_has_blood_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountBloodData::clear_has_blood_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountBloodData::clear_blood_id() {
  blood_id_ = GOOGLE_ULONGLONG(0);
  clear_has_blood_id();
}
inline ::google::protobuf::uint64 MountBloodData::blood_id() const {
  return blood_id_;
}
inline void MountBloodData::set_blood_id(::google::protobuf::uint64 value) {
  set_has_blood_id();
  blood_id_ = value;
}

// optional uint32 blood_state = 2;
inline bool MountBloodData::has_blood_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountBloodData::set_has_blood_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountBloodData::clear_has_blood_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountBloodData::clear_blood_state() {
  blood_state_ = 0u;
  clear_has_blood_state();
}
inline ::google::protobuf::uint32 MountBloodData::blood_state() const {
  return blood_state_;
}
inline void MountBloodData::set_blood_state(::google::protobuf::uint32 value) {
  set_has_blood_state();
  blood_state_ = value;
}

// optional .proto_ff.ComPair64 select_attr = 3;
inline bool MountBloodData::has_select_attr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountBloodData::set_has_select_attr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountBloodData::clear_has_select_attr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountBloodData::clear_select_attr() {
  if (select_attr_ != NULL) select_attr_->::proto_ff::ComPair64::Clear();
  clear_has_select_attr();
}
inline const ::proto_ff::ComPair64& MountBloodData::select_attr() const {
  return select_attr_ != NULL ? *select_attr_ : *default_instance_->select_attr_;
}
inline ::proto_ff::ComPair64* MountBloodData::mutable_select_attr() {
  set_has_select_attr();
  if (select_attr_ == NULL) select_attr_ = new ::proto_ff::ComPair64;
  return select_attr_;
}
inline ::proto_ff::ComPair64* MountBloodData::release_select_attr() {
  clear_has_select_attr();
  ::proto_ff::ComPair64* temp = select_attr_;
  select_attr_ = NULL;
  return temp;
}
inline void MountBloodData::set_allocated_select_attr(::proto_ff::ComPair64* select_attr) {
  delete select_attr_;
  select_attr_ = select_attr;
  if (select_attr) {
    set_has_select_attr();
  } else {
    clear_has_select_attr();
  }
}

// -------------------------------------------------------------------

// MountBabySlotData

// optional uint32 slot = 1;
inline bool MountBabySlotData::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountBabySlotData::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountBabySlotData::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountBabySlotData::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 MountBabySlotData::slot() const {
  return slot_;
}
inline void MountBabySlotData::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
}

// optional uint32 cur_state = 2;
inline bool MountBabySlotData::has_cur_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountBabySlotData::set_has_cur_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountBabySlotData::clear_has_cur_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountBabySlotData::clear_cur_state() {
  cur_state_ = 0u;
  clear_has_cur_state();
}
inline ::google::protobuf::uint32 MountBabySlotData::cur_state() const {
  return cur_state_;
}
inline void MountBabySlotData::set_cur_state(::google::protobuf::uint32 value) {
  set_has_cur_state();
  cur_state_ = value;
}

// optional int64 cur_baby_eggid = 3;
inline bool MountBabySlotData::has_cur_baby_eggid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountBabySlotData::set_has_cur_baby_eggid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountBabySlotData::clear_has_cur_baby_eggid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountBabySlotData::clear_cur_baby_eggid() {
  cur_baby_eggid_ = GOOGLE_LONGLONG(0);
  clear_has_cur_baby_eggid();
}
inline ::google::protobuf::int64 MountBabySlotData::cur_baby_eggid() const {
  return cur_baby_eggid_;
}
inline void MountBabySlotData::set_cur_baby_eggid(::google::protobuf::int64 value) {
  set_has_cur_baby_eggid();
  cur_baby_eggid_ = value;
}

// optional int64 cur_baby_create_time = 4;
inline bool MountBabySlotData::has_cur_baby_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountBabySlotData::set_has_cur_baby_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountBabySlotData::clear_has_cur_baby_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountBabySlotData::clear_cur_baby_create_time() {
  cur_baby_create_time_ = GOOGLE_LONGLONG(0);
  clear_has_cur_baby_create_time();
}
inline ::google::protobuf::int64 MountBabySlotData::cur_baby_create_time() const {
  return cur_baby_create_time_;
}
inline void MountBabySlotData::set_cur_baby_create_time(::google::protobuf::int64 value) {
  set_has_cur_baby_create_time();
  cur_baby_create_time_ = value;
}

// -------------------------------------------------------------------

// MountFairyLandTour

// optional int64 tour_id = 1;
inline bool MountFairyLandTour::has_tour_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountFairyLandTour::set_has_tour_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountFairyLandTour::clear_has_tour_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountFairyLandTour::clear_tour_id() {
  tour_id_ = GOOGLE_LONGLONG(0);
  clear_has_tour_id();
}
inline ::google::protobuf::int64 MountFairyLandTour::tour_id() const {
  return tour_id_;
}
inline void MountFairyLandTour::set_tour_id(::google::protobuf::int64 value) {
  set_has_tour_id();
  tour_id_ = value;
}

// optional uint32 active_state = 2;
inline bool MountFairyLandTour::has_active_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountFairyLandTour::set_has_active_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountFairyLandTour::clear_has_active_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountFairyLandTour::clear_active_state() {
  active_state_ = 0u;
  clear_has_active_state();
}
inline ::google::protobuf::uint32 MountFairyLandTour::active_state() const {
  return active_state_;
}
inline void MountFairyLandTour::set_active_state(::google::protobuf::uint32 value) {
  set_has_active_state();
  active_state_ = value;
}

// -------------------------------------------------------------------

// MountFairyLand

// optional int64 fairy_id = 1;
inline bool MountFairyLand::has_fairy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountFairyLand::set_has_fairy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountFairyLand::clear_has_fairy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountFairyLand::clear_fairy_id() {
  fairy_id_ = GOOGLE_LONGLONG(0);
  clear_has_fairy_id();
}
inline ::google::protobuf::int64 MountFairyLand::fairy_id() const {
  return fairy_id_;
}
inline void MountFairyLand::set_fairy_id(::google::protobuf::int64 value) {
  set_has_fairy_id();
  fairy_id_ = value;
}

// repeated .proto_ff.MountFairyLandTour tour = 2;
inline int MountFairyLand::tour_size() const {
  return tour_.size();
}
inline void MountFairyLand::clear_tour() {
  tour_.Clear();
}
inline const ::proto_ff::MountFairyLandTour& MountFairyLand::tour(int index) const {
  return tour_.Get(index);
}
inline ::proto_ff::MountFairyLandTour* MountFairyLand::mutable_tour(int index) {
  return tour_.Mutable(index);
}
inline ::proto_ff::MountFairyLandTour* MountFairyLand::add_tour() {
  return tour_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MountFairyLandTour >&
MountFairyLand::tour() const {
  return tour_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MountFairyLandTour >*
MountFairyLand::mutable_tour() {
  return &tour_;
}

// optional bool active = 3;
inline bool MountFairyLand::has_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountFairyLand::set_has_active() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountFairyLand::clear_has_active() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountFairyLand::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool MountFairyLand::active() const {
  return active_;
}
inline void MountFairyLand::set_active(bool value) {
  set_has_active();
  active_ = value;
}

// optional int64 cur_active_tour_id = 4;
inline bool MountFairyLand::has_cur_active_tour_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountFairyLand::set_has_cur_active_tour_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountFairyLand::clear_has_cur_active_tour_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountFairyLand::clear_cur_active_tour_id() {
  cur_active_tour_id_ = GOOGLE_LONGLONG(0);
  clear_has_cur_active_tour_id();
}
inline ::google::protobuf::int64 MountFairyLand::cur_active_tour_id() const {
  return cur_active_tour_id_;
}
inline void MountFairyLand::set_cur_active_tour_id(::google::protobuf::int64 value) {
  set_has_cur_active_tour_id();
  cur_active_tour_id_ = value;
}

// -------------------------------------------------------------------

// MountFairySlotRecord

// optional int64 cur_fairy_id = 1;
inline bool MountFairySlotRecord::has_cur_fairy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountFairySlotRecord::set_has_cur_fairy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountFairySlotRecord::clear_has_cur_fairy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountFairySlotRecord::clear_cur_fairy_id() {
  cur_fairy_id_ = GOOGLE_LONGLONG(0);
  clear_has_cur_fairy_id();
}
inline ::google::protobuf::int64 MountFairySlotRecord::cur_fairy_id() const {
  return cur_fairy_id_;
}
inline void MountFairySlotRecord::set_cur_fairy_id(::google::protobuf::int64 value) {
  set_has_cur_fairy_id();
  cur_fairy_id_ = value;
}

// optional int64 event_id = 2;
inline bool MountFairySlotRecord::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountFairySlotRecord::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountFairySlotRecord::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountFairySlotRecord::clear_event_id() {
  event_id_ = GOOGLE_LONGLONG(0);
  clear_has_event_id();
}
inline ::google::protobuf::int64 MountFairySlotRecord::event_id() const {
  return event_id_;
}
inline void MountFairySlotRecord::set_event_id(::google::protobuf::int64 value) {
  set_has_event_id();
  event_id_ = value;
}

// optional int64 create_time = 3;
inline bool MountFairySlotRecord::has_create_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountFairySlotRecord::set_has_create_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountFairySlotRecord::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountFairySlotRecord::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::int64 MountFairySlotRecord::create_time() const {
  return create_time_;
}
inline void MountFairySlotRecord::set_create_time(::google::protobuf::int64 value) {
  set_has_create_time();
  create_time_ = value;
}

// optional bool finish = 4;
inline bool MountFairySlotRecord::has_finish() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountFairySlotRecord::set_has_finish() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountFairySlotRecord::clear_has_finish() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountFairySlotRecord::clear_finish() {
  finish_ = false;
  clear_has_finish();
}
inline bool MountFairySlotRecord::finish() const {
  return finish_;
}
inline void MountFairySlotRecord::set_finish(bool value) {
  set_has_finish();
  finish_ = value;
}

// optional .proto_ff.ComItem reward_item = 5;
inline bool MountFairySlotRecord::has_reward_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MountFairySlotRecord::set_has_reward_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MountFairySlotRecord::clear_has_reward_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MountFairySlotRecord::clear_reward_item() {
  if (reward_item_ != NULL) reward_item_->::proto_ff::ComItem::Clear();
  clear_has_reward_item();
}
inline const ::proto_ff::ComItem& MountFairySlotRecord::reward_item() const {
  return reward_item_ != NULL ? *reward_item_ : *default_instance_->reward_item_;
}
inline ::proto_ff::ComItem* MountFairySlotRecord::mutable_reward_item() {
  set_has_reward_item();
  if (reward_item_ == NULL) reward_item_ = new ::proto_ff::ComItem;
  return reward_item_;
}
inline ::proto_ff::ComItem* MountFairySlotRecord::release_reward_item() {
  clear_has_reward_item();
  ::proto_ff::ComItem* temp = reward_item_;
  reward_item_ = NULL;
  return temp;
}
inline void MountFairySlotRecord::set_allocated_reward_item(::proto_ff::ComItem* reward_item) {
  delete reward_item_;
  reward_item_ = reward_item;
  if (reward_item) {
    set_has_reward_item();
  } else {
    clear_has_reward_item();
  }
}

// -------------------------------------------------------------------

// MountFairySlot

// optional int64 slot_id = 1;
inline bool MountFairySlot::has_slot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountFairySlot::set_has_slot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountFairySlot::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountFairySlot::clear_slot_id() {
  slot_id_ = GOOGLE_LONGLONG(0);
  clear_has_slot_id();
}
inline ::google::protobuf::int64 MountFairySlot::slot_id() const {
  return slot_id_;
}
inline void MountFairySlot::set_slot_id(::google::protobuf::int64 value) {
  set_has_slot_id();
  slot_id_ = value;
}

// optional uint32 cur_kun_id = 2;
inline bool MountFairySlot::has_cur_kun_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountFairySlot::set_has_cur_kun_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountFairySlot::clear_has_cur_kun_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountFairySlot::clear_cur_kun_id() {
  cur_kun_id_ = 0u;
  clear_has_cur_kun_id();
}
inline ::google::protobuf::uint32 MountFairySlot::cur_kun_id() const {
  return cur_kun_id_;
}
inline void MountFairySlot::set_cur_kun_id(::google::protobuf::uint32 value) {
  set_has_cur_kun_id();
  cur_kun_id_ = value;
}

// optional uint32 cur_dissociate_level = 3;
inline bool MountFairySlot::has_cur_dissociate_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountFairySlot::set_has_cur_dissociate_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountFairySlot::clear_has_cur_dissociate_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountFairySlot::clear_cur_dissociate_level() {
  cur_dissociate_level_ = 0u;
  clear_has_cur_dissociate_level();
}
inline ::google::protobuf::uint32 MountFairySlot::cur_dissociate_level() const {
  return cur_dissociate_level_;
}
inline void MountFairySlot::set_cur_dissociate_level(::google::protobuf::uint32 value) {
  set_has_cur_dissociate_level();
  cur_dissociate_level_ = value;
}

// optional uint32 cur_dissociate_time = 4;
inline bool MountFairySlot::has_cur_dissociate_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountFairySlot::set_has_cur_dissociate_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountFairySlot::clear_has_cur_dissociate_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountFairySlot::clear_cur_dissociate_time() {
  cur_dissociate_time_ = 0u;
  clear_has_cur_dissociate_time();
}
inline ::google::protobuf::uint32 MountFairySlot::cur_dissociate_time() const {
  return cur_dissociate_time_;
}
inline void MountFairySlot::set_cur_dissociate_time(::google::protobuf::uint32 value) {
  set_has_cur_dissociate_time();
  cur_dissociate_time_ = value;
}

// optional uint32 cur_end_time = 6;
inline bool MountFairySlot::has_cur_end_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MountFairySlot::set_has_cur_end_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MountFairySlot::clear_has_cur_end_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MountFairySlot::clear_cur_end_time() {
  cur_end_time_ = 0u;
  clear_has_cur_end_time();
}
inline ::google::protobuf::uint32 MountFairySlot::cur_end_time() const {
  return cur_end_time_;
}
inline void MountFairySlot::set_cur_end_time(::google::protobuf::uint32 value) {
  set_has_cur_end_time();
  cur_end_time_ = value;
}

// optional uint32 status = 7;
inline bool MountFairySlot::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MountFairySlot::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MountFairySlot::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MountFairySlot::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 MountFairySlot::status() const {
  return status_;
}
inline void MountFairySlot::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional bool can_get_reward = 8;
inline bool MountFairySlot::has_can_get_reward() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MountFairySlot::set_has_can_get_reward() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MountFairySlot::clear_has_can_get_reward() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MountFairySlot::clear_can_get_reward() {
  can_get_reward_ = false;
  clear_has_can_get_reward();
}
inline bool MountFairySlot::can_get_reward() const {
  return can_get_reward_;
}
inline void MountFairySlot::set_can_get_reward(bool value) {
  set_has_can_get_reward();
  can_get_reward_ = value;
}

// repeated .proto_ff.ComItem reward_item = 9;
inline int MountFairySlot::reward_item_size() const {
  return reward_item_.size();
}
inline void MountFairySlot::clear_reward_item() {
  reward_item_.Clear();
}
inline const ::proto_ff::ComItem& MountFairySlot::reward_item(int index) const {
  return reward_item_.Get(index);
}
inline ::proto_ff::ComItem* MountFairySlot::mutable_reward_item(int index) {
  return reward_item_.Mutable(index);
}
inline ::proto_ff::ComItem* MountFairySlot::add_reward_item() {
  return reward_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
MountFairySlot::reward_item() const {
  return reward_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
MountFairySlot::mutable_reward_item() {
  return &reward_item_;
}

// optional uint64 reward_gold = 10;
inline bool MountFairySlot::has_reward_gold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MountFairySlot::set_has_reward_gold() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MountFairySlot::clear_has_reward_gold() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MountFairySlot::clear_reward_gold() {
  reward_gold_ = GOOGLE_ULONGLONG(0);
  clear_has_reward_gold();
}
inline ::google::protobuf::uint64 MountFairySlot::reward_gold() const {
  return reward_gold_;
}
inline void MountFairySlot::set_reward_gold(::google::protobuf::uint64 value) {
  set_has_reward_gold();
  reward_gold_ = value;
}

// optional uint64 reward_dia = 11;
inline bool MountFairySlot::has_reward_dia() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MountFairySlot::set_has_reward_dia() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MountFairySlot::clear_has_reward_dia() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MountFairySlot::clear_reward_dia() {
  reward_dia_ = GOOGLE_ULONGLONG(0);
  clear_has_reward_dia();
}
inline ::google::protobuf::uint64 MountFairySlot::reward_dia() const {
  return reward_dia_;
}
inline void MountFairySlot::set_reward_dia(::google::protobuf::uint64 value) {
  set_has_reward_dia();
  reward_dia_ = value;
}

// optional uint64 reward_bdia = 12;
inline bool MountFairySlot::has_reward_bdia() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MountFairySlot::set_has_reward_bdia() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MountFairySlot::clear_has_reward_bdia() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MountFairySlot::clear_reward_bdia() {
  reward_bdia_ = GOOGLE_ULONGLONG(0);
  clear_has_reward_bdia();
}
inline ::google::protobuf::uint64 MountFairySlot::reward_bdia() const {
  return reward_bdia_;
}
inline void MountFairySlot::set_reward_bdia(::google::protobuf::uint64 value) {
  set_has_reward_bdia();
  reward_bdia_ = value;
}

// repeated .proto_ff.MountFairySlotRecord record = 13;
inline int MountFairySlot::record_size() const {
  return record_.size();
}
inline void MountFairySlot::clear_record() {
  record_.Clear();
}
inline const ::proto_ff::MountFairySlotRecord& MountFairySlot::record(int index) const {
  return record_.Get(index);
}
inline ::proto_ff::MountFairySlotRecord* MountFairySlot::mutable_record(int index) {
  return record_.Mutable(index);
}
inline ::proto_ff::MountFairySlotRecord* MountFairySlot::add_record() {
  return record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MountFairySlotRecord >&
MountFairySlot::record() const {
  return record_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MountFairySlotRecord >*
MountFairySlot::mutable_record() {
  return &record_;
}

// -------------------------------------------------------------------

// StatisticDataProto

// optional int32 level = 1;
inline bool StatisticDataProto::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatisticDataProto::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatisticDataProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatisticDataProto::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 StatisticDataProto::level() const {
  return level_;
}
inline void StatisticDataProto::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 total_login_day = 2;
inline bool StatisticDataProto::has_total_login_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatisticDataProto::set_has_total_login_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatisticDataProto::clear_has_total_login_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatisticDataProto::clear_total_login_day() {
  total_login_day_ = 0u;
  clear_has_total_login_day();
}
inline ::google::protobuf::uint32 StatisticDataProto::total_login_day() const {
  return total_login_day_;
}
inline void StatisticDataProto::set_total_login_day(::google::protobuf::uint32 value) {
  set_has_total_login_day();
  total_login_day_ = value;
}

// optional uint32 total_rmb = 3;
inline bool StatisticDataProto::has_total_rmb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatisticDataProto::set_has_total_rmb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatisticDataProto::clear_has_total_rmb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatisticDataProto::clear_total_rmb() {
  total_rmb_ = 0u;
  clear_has_total_rmb();
}
inline ::google::protobuf::uint32 StatisticDataProto::total_rmb() const {
  return total_rmb_;
}
inline void StatisticDataProto::set_total_rmb(::google::protobuf::uint32 value) {
  set_has_total_rmb();
  total_rmb_ = value;
}

// optional uint32 today_rmb = 4;
inline bool StatisticDataProto::has_today_rmb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatisticDataProto::set_has_today_rmb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatisticDataProto::clear_has_today_rmb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatisticDataProto::clear_today_rmb() {
  today_rmb_ = 0u;
  clear_has_today_rmb();
}
inline ::google::protobuf::uint32 StatisticDataProto::today_rmb() const {
  return today_rmb_;
}
inline void StatisticDataProto::set_today_rmb(::google::protobuf::uint32 value) {
  set_has_today_rmb();
  today_rmb_ = value;
}

// optional uint32 total_activityCount = 5;
inline bool StatisticDataProto::has_total_activitycount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StatisticDataProto::set_has_total_activitycount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StatisticDataProto::clear_has_total_activitycount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StatisticDataProto::clear_total_activitycount() {
  total_activitycount_ = 0u;
  clear_has_total_activitycount();
}
inline ::google::protobuf::uint32 StatisticDataProto::total_activitycount() const {
  return total_activitycount_;
}
inline void StatisticDataProto::set_total_activitycount(::google::protobuf::uint32 value) {
  set_has_total_activitycount();
  total_activitycount_ = value;
}

// -------------------------------------------------------------------

// GodRelicsTaskEntry

// optional uint64 task_cfg_id = 1;
inline bool GodRelicsTaskEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodRelicsTaskEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodRelicsTaskEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodRelicsTaskEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 GodRelicsTaskEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void GodRelicsTaskEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool GodRelicsTaskEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodRelicsTaskEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodRelicsTaskEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodRelicsTaskEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 GodRelicsTaskEntry::cur_num() const {
  return cur_num_;
}
inline void GodRelicsTaskEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool GodRelicsTaskEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodRelicsTaskEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodRelicsTaskEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodRelicsTaskEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 GodRelicsTaskEntry::task_state() const {
  return task_state_;
}
inline void GodRelicsTaskEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// optional int32 all_num = 4;
inline bool GodRelicsTaskEntry::has_all_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GodRelicsTaskEntry::set_has_all_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GodRelicsTaskEntry::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GodRelicsTaskEntry::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 GodRelicsTaskEntry::all_num() const {
  return all_num_;
}
inline void GodRelicsTaskEntry::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// -------------------------------------------------------------------

// GodRelicsTaskGroupEntry

// optional uint64 group_cfg_id = 1;
inline bool GodRelicsTaskGroupEntry::has_group_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodRelicsTaskGroupEntry::set_has_group_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodRelicsTaskGroupEntry::clear_has_group_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodRelicsTaskGroupEntry::clear_group_cfg_id() {
  group_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_cfg_id();
}
inline ::google::protobuf::uint64 GodRelicsTaskGroupEntry::group_cfg_id() const {
  return group_cfg_id_;
}
inline void GodRelicsTaskGroupEntry::set_group_cfg_id(::google::protobuf::uint64 value) {
  set_has_group_cfg_id();
  group_cfg_id_ = value;
}

// repeated .proto_ff.GodRelicsTaskEntry entrys = 2;
inline int GodRelicsTaskGroupEntry::entrys_size() const {
  return entrys_.size();
}
inline void GodRelicsTaskGroupEntry::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::GodRelicsTaskEntry& GodRelicsTaskGroupEntry::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::GodRelicsTaskEntry* GodRelicsTaskGroupEntry::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::GodRelicsTaskEntry* GodRelicsTaskGroupEntry::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >&
GodRelicsTaskGroupEntry::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >*
GodRelicsTaskGroupEntry::mutable_entrys() {
  return &entrys_;
}

// optional int32 normal_reward_state = 3;
inline bool GodRelicsTaskGroupEntry::has_normal_reward_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodRelicsTaskGroupEntry::set_has_normal_reward_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodRelicsTaskGroupEntry::clear_has_normal_reward_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodRelicsTaskGroupEntry::clear_normal_reward_state() {
  normal_reward_state_ = 0;
  clear_has_normal_reward_state();
}
inline ::google::protobuf::int32 GodRelicsTaskGroupEntry::normal_reward_state() const {
  return normal_reward_state_;
}
inline void GodRelicsTaskGroupEntry::set_normal_reward_state(::google::protobuf::int32 value) {
  set_has_normal_reward_state();
  normal_reward_state_ = value;
}

// optional uint64 create_time = 5;
inline bool GodRelicsTaskGroupEntry::has_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GodRelicsTaskGroupEntry::set_has_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GodRelicsTaskGroupEntry::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GodRelicsTaskGroupEntry::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 GodRelicsTaskGroupEntry::create_time() const {
  return create_time_;
}
inline void GodRelicsTaskGroupEntry::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
}

// -------------------------------------------------------------------

// DailyTaskEntry

// optional uint64 task_cfg_id = 1;
inline bool DailyTaskEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 DailyTaskEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void DailyTaskEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool DailyTaskEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 DailyTaskEntry::cur_num() const {
  return cur_num_;
}
inline void DailyTaskEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool DailyTaskEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 DailyTaskEntry::task_state() const {
  return task_state_;
}
inline void DailyTaskEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// optional uint64 last_time = 4;
inline bool DailyTaskEntry::has_last_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskEntry::set_has_last_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskEntry::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskEntry::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 DailyTaskEntry::last_time() const {
  return last_time_;
}
inline void DailyTaskEntry::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// optional int32 buy_num = 5;
inline bool DailyTaskEntry::has_buy_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskEntry::set_has_buy_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskEntry::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskEntry::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 DailyTaskEntry::buy_num() const {
  return buy_num_;
}
inline void DailyTaskEntry::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// -------------------------------------------------------------------

// DailyTaskLimitEntry

// optional uint64 task_cfg_id = 1;
inline bool DailyTaskLimitEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskLimitEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskLimitEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskLimitEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 DailyTaskLimitEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void DailyTaskLimitEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool DailyTaskLimitEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskLimitEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskLimitEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskLimitEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 DailyTaskLimitEntry::cur_num() const {
  return cur_num_;
}
inline void DailyTaskLimitEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool DailyTaskLimitEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskLimitEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskLimitEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskLimitEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 DailyTaskLimitEntry::task_state() const {
  return task_state_;
}
inline void DailyTaskLimitEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// optional uint64 last_time = 4;
inline bool DailyTaskLimitEntry::has_last_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskLimitEntry::set_has_last_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskLimitEntry::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskLimitEntry::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 DailyTaskLimitEntry::last_time() const {
  return last_time_;
}
inline void DailyTaskLimitEntry::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// optional int32 buy_num = 5;
inline bool DailyTaskLimitEntry::has_buy_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskLimitEntry::set_has_buy_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskLimitEntry::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskLimitEntry::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 DailyTaskLimitEntry::buy_num() const {
  return buy_num_;
}
inline void DailyTaskLimitEntry::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// optional bool ready_add = 6;
inline bool DailyTaskLimitEntry::has_ready_add() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyTaskLimitEntry::set_has_ready_add() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyTaskLimitEntry::clear_has_ready_add() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyTaskLimitEntry::clear_ready_add() {
  ready_add_ = false;
  clear_has_ready_add();
}
inline bool DailyTaskLimitEntry::ready_add() const {
  return ready_add_;
}
inline void DailyTaskLimitEntry::set_ready_add(bool value) {
  set_has_ready_add();
  ready_add_ = value;
}

// optional bool is_open = 7;
inline bool DailyTaskLimitEntry::has_is_open() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DailyTaskLimitEntry::set_has_is_open() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DailyTaskLimitEntry::clear_has_is_open() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DailyTaskLimitEntry::clear_is_open() {
  is_open_ = false;
  clear_has_is_open();
}
inline bool DailyTaskLimitEntry::is_open() const {
  return is_open_;
}
inline void DailyTaskLimitEntry::set_is_open(bool value) {
  set_has_is_open();
  is_open_ = value;
}

// optional uint64 ready_add_time = 8;
inline bool DailyTaskLimitEntry::has_ready_add_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DailyTaskLimitEntry::set_has_ready_add_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DailyTaskLimitEntry::clear_has_ready_add_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DailyTaskLimitEntry::clear_ready_add_time() {
  ready_add_time_ = GOOGLE_ULONGLONG(0);
  clear_has_ready_add_time();
}
inline ::google::protobuf::uint64 DailyTaskLimitEntry::ready_add_time() const {
  return ready_add_time_;
}
inline void DailyTaskLimitEntry::set_ready_add_time(::google::protobuf::uint64 value) {
  set_has_ready_add_time();
  ready_add_time_ = value;
}

// optional bool is_fest_open = 9;
inline bool DailyTaskLimitEntry::has_is_fest_open() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DailyTaskLimitEntry::set_has_is_fest_open() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DailyTaskLimitEntry::clear_has_is_fest_open() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DailyTaskLimitEntry::clear_is_fest_open() {
  is_fest_open_ = false;
  clear_has_is_fest_open();
}
inline bool DailyTaskLimitEntry::is_fest_open() const {
  return is_fest_open_;
}
inline void DailyTaskLimitEntry::set_is_fest_open(bool value) {
  set_has_is_fest_open();
  is_fest_open_ = value;
}

// -------------------------------------------------------------------

// DailyTaskBackDayEntry

// optional int32 left_num = 1;
inline bool DailyTaskBackDayEntry::has_left_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskBackDayEntry::set_has_left_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskBackDayEntry::clear_has_left_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskBackDayEntry::clear_left_num() {
  left_num_ = 0;
  clear_has_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackDayEntry::left_num() const {
  return left_num_;
}
inline void DailyTaskBackDayEntry::set_left_num(::google::protobuf::int32 value) {
  set_has_left_num();
  left_num_ = value;
}

// optional int32 external_left_num = 2;
inline bool DailyTaskBackDayEntry::has_external_left_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskBackDayEntry::set_has_external_left_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskBackDayEntry::clear_has_external_left_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskBackDayEntry::clear_external_left_num() {
  external_left_num_ = 0;
  clear_has_external_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackDayEntry::external_left_num() const {
  return external_left_num_;
}
inline void DailyTaskBackDayEntry::set_external_left_num(::google::protobuf::int32 value) {
  set_has_external_left_num();
  external_left_num_ = value;
}

// optional int64 last_time = 3;
inline bool DailyTaskBackDayEntry::has_last_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskBackDayEntry::set_has_last_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskBackDayEntry::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskBackDayEntry::clear_last_time() {
  last_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::int64 DailyTaskBackDayEntry::last_time() const {
  return last_time_;
}
inline void DailyTaskBackDayEntry::set_last_time(::google::protobuf::int64 value) {
  set_has_last_time();
  last_time_ = value;
}

// -------------------------------------------------------------------

// DailyTaskBackEntry

// optional uint64 task_cfg_id = 1;
inline bool DailyTaskBackEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskBackEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskBackEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskBackEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 DailyTaskBackEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void DailyTaskBackEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 task_state = 3;
inline bool DailyTaskBackEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskBackEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskBackEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskBackEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 DailyTaskBackEntry::task_state() const {
  return task_state_;
}
inline void DailyTaskBackEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// repeated .proto_ff.DailyTaskBackDayEntry day_data = 4;
inline int DailyTaskBackEntry::day_data_size() const {
  return day_data_.size();
}
inline void DailyTaskBackEntry::clear_day_data() {
  day_data_.Clear();
}
inline const ::proto_ff::DailyTaskBackDayEntry& DailyTaskBackEntry::day_data(int index) const {
  return day_data_.Get(index);
}
inline ::proto_ff::DailyTaskBackDayEntry* DailyTaskBackEntry::mutable_day_data(int index) {
  return day_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskBackDayEntry* DailyTaskBackEntry::add_day_data() {
  return day_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >&
DailyTaskBackEntry::day_data() const {
  return day_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >*
DailyTaskBackEntry::mutable_day_data() {
  return &day_data_;
}

// optional int32 left_num = 5;
inline bool DailyTaskBackEntry::has_left_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskBackEntry::set_has_left_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskBackEntry::clear_has_left_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskBackEntry::clear_left_num() {
  left_num_ = 0;
  clear_has_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackEntry::left_num() const {
  return left_num_;
}
inline void DailyTaskBackEntry::set_left_num(::google::protobuf::int32 value) {
  set_has_left_num();
  left_num_ = value;
}

// optional int32 external_left_num = 6;
inline bool DailyTaskBackEntry::has_external_left_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskBackEntry::set_has_external_left_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskBackEntry::clear_has_external_left_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskBackEntry::clear_external_left_num() {
  external_left_num_ = 0;
  clear_has_external_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackEntry::external_left_num() const {
  return external_left_num_;
}
inline void DailyTaskBackEntry::set_external_left_num(::google::protobuf::int32 value) {
  set_has_external_left_num();
  external_left_num_ = value;
}

// -------------------------------------------------------------------

// DailyTaskRewardEntry

// optional uint64 reward_id = 1;
inline bool DailyTaskRewardEntry::has_reward_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskRewardEntry::set_has_reward_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskRewardEntry::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskRewardEntry::clear_reward_id() {
  reward_id_ = GOOGLE_ULONGLONG(0);
  clear_has_reward_id();
}
inline ::google::protobuf::uint64 DailyTaskRewardEntry::reward_id() const {
  return reward_id_;
}
inline void DailyTaskRewardEntry::set_reward_id(::google::protobuf::uint64 value) {
  set_has_reward_id();
  reward_id_ = value;
}

// optional int32 state = 2;
inline bool DailyTaskRewardEntry::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskRewardEntry::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskRewardEntry::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskRewardEntry::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DailyTaskRewardEntry::state() const {
  return state_;
}
inline void DailyTaskRewardEntry::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// DailyTaskAllData

// repeated .proto_ff.DailyTaskEntry task_data = 1;
inline int DailyTaskAllData::task_data_size() const {
  return task_data_.size();
}
inline void DailyTaskAllData::clear_task_data() {
  task_data_.Clear();
}
inline const ::proto_ff::DailyTaskEntry& DailyTaskAllData::task_data(int index) const {
  return task_data_.Get(index);
}
inline ::proto_ff::DailyTaskEntry* DailyTaskAllData::mutable_task_data(int index) {
  return task_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskEntry* DailyTaskAllData::add_task_data() {
  return task_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >&
DailyTaskAllData::task_data() const {
  return task_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >*
DailyTaskAllData::mutable_task_data() {
  return &task_data_;
}

// repeated .proto_ff.DailyTaskLimitEntry task_limit_data = 2;
inline int DailyTaskAllData::task_limit_data_size() const {
  return task_limit_data_.size();
}
inline void DailyTaskAllData::clear_task_limit_data() {
  task_limit_data_.Clear();
}
inline const ::proto_ff::DailyTaskLimitEntry& DailyTaskAllData::task_limit_data(int index) const {
  return task_limit_data_.Get(index);
}
inline ::proto_ff::DailyTaskLimitEntry* DailyTaskAllData::mutable_task_limit_data(int index) {
  return task_limit_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskLimitEntry* DailyTaskAllData::add_task_limit_data() {
  return task_limit_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >&
DailyTaskAllData::task_limit_data() const {
  return task_limit_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >*
DailyTaskAllData::mutable_task_limit_data() {
  return &task_limit_data_;
}

// repeated .proto_ff.DailyTaskBackEntry back_data = 3;
inline int DailyTaskAllData::back_data_size() const {
  return back_data_.size();
}
inline void DailyTaskAllData::clear_back_data() {
  back_data_.Clear();
}
inline const ::proto_ff::DailyTaskBackEntry& DailyTaskAllData::back_data(int index) const {
  return back_data_.Get(index);
}
inline ::proto_ff::DailyTaskBackEntry* DailyTaskAllData::mutable_back_data(int index) {
  return back_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskBackEntry* DailyTaskAllData::add_back_data() {
  return back_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >&
DailyTaskAllData::back_data() const {
  return back_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >*
DailyTaskAllData::mutable_back_data() {
  return &back_data_;
}

// repeated .proto_ff.DailyTaskRewardEntry reward_data = 4;
inline int DailyTaskAllData::reward_data_size() const {
  return reward_data_.size();
}
inline void DailyTaskAllData::clear_reward_data() {
  reward_data_.Clear();
}
inline const ::proto_ff::DailyTaskRewardEntry& DailyTaskAllData::reward_data(int index) const {
  return reward_data_.Get(index);
}
inline ::proto_ff::DailyTaskRewardEntry* DailyTaskAllData::mutable_reward_data(int index) {
  return reward_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskRewardEntry* DailyTaskAllData::add_reward_data() {
  return reward_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >&
DailyTaskAllData::reward_data() const {
  return reward_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >*
DailyTaskAllData::mutable_reward_data() {
  return &reward_data_;
}

// optional uint32 daily_score = 5;
inline bool DailyTaskAllData::has_daily_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskAllData::set_has_daily_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskAllData::clear_has_daily_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskAllData::clear_daily_score() {
  daily_score_ = 0u;
  clear_has_daily_score();
}
inline ::google::protobuf::uint32 DailyTaskAllData::daily_score() const {
  return daily_score_;
}
inline void DailyTaskAllData::set_daily_score(::google::protobuf::uint32 value) {
  set_has_daily_score();
  daily_score_ = value;
}

// optional uint32 daily_level = 6;
inline bool DailyTaskAllData::has_daily_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyTaskAllData::set_has_daily_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyTaskAllData::clear_has_daily_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyTaskAllData::clear_daily_level() {
  daily_level_ = 0u;
  clear_has_daily_level();
}
inline ::google::protobuf::uint32 DailyTaskAllData::daily_level() const {
  return daily_level_;
}
inline void DailyTaskAllData::set_daily_level(::google::protobuf::uint32 value) {
  set_has_daily_level();
  daily_level_ = value;
}

// optional uint64 create_time = 7;
inline bool DailyTaskAllData::has_create_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DailyTaskAllData::set_has_create_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DailyTaskAllData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DailyTaskAllData::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 DailyTaskAllData::create_time() const {
  return create_time_;
}
inline void DailyTaskAllData::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
}

// optional uint64 daily_exp = 8;
inline bool DailyTaskAllData::has_daily_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DailyTaskAllData::set_has_daily_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DailyTaskAllData::clear_has_daily_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DailyTaskAllData::clear_daily_exp() {
  daily_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_daily_exp();
}
inline ::google::protobuf::uint64 DailyTaskAllData::daily_exp() const {
  return daily_exp_;
}
inline void DailyTaskAllData::set_daily_exp(::google::protobuf::uint64 value) {
  set_has_daily_exp();
  daily_exp_ = value;
}

// -------------------------------------------------------------------

// CharacterDBRecentSubmitMission

// optional int32 mission_type = 1;
inline bool CharacterDBRecentSubmitMission::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBRecentSubmitMission::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBRecentSubmitMission::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBRecentSubmitMission::clear_mission_type() {
  mission_type_ = 0;
  clear_has_mission_type();
}
inline ::google::protobuf::int32 CharacterDBRecentSubmitMission::mission_type() const {
  return mission_type_;
}
inline void CharacterDBRecentSubmitMission::set_mission_type(::google::protobuf::int32 value) {
  set_has_mission_type();
  mission_type_ = value;
}

// optional uint64 mission_id = 2;
inline bool CharacterDBRecentSubmitMission::has_mission_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBRecentSubmitMission::set_has_mission_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBRecentSubmitMission::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBRecentSubmitMission::clear_mission_id() {
  mission_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mission_id();
}
inline ::google::protobuf::uint64 CharacterDBRecentSubmitMission::mission_id() const {
  return mission_id_;
}
inline void CharacterDBRecentSubmitMission::set_mission_id(::google::protobuf::uint64 value) {
  set_has_mission_id();
  mission_id_ = value;
}

// -------------------------------------------------------------------

// CharacterDBMissionItemInfo

// optional uint32 type = 1;
inline bool CharacterDBMissionItemInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBMissionItemInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBMissionItemInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::type() const {
  return type_;
}
inline void CharacterDBMissionItemInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 id = 2;
inline bool CharacterDBMissionItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBMissionItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBMissionItemInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::id() const {
  return id_;
}
inline void CharacterDBMissionItemInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 currentValue = 3;
inline bool CharacterDBMissionItemInfo::has_currentvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_currentvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBMissionItemInfo::clear_has_currentvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBMissionItemInfo::clear_currentvalue() {
  currentvalue_ = 0u;
  clear_has_currentvalue();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::currentvalue() const {
  return currentvalue_;
}
inline void CharacterDBMissionItemInfo::set_currentvalue(::google::protobuf::uint32 value) {
  set_has_currentvalue();
  currentvalue_ = value;
}

// optional uint32 finalValue = 4;
inline bool CharacterDBMissionItemInfo::has_finalvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_finalvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBMissionItemInfo::clear_has_finalvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBMissionItemInfo::clear_finalvalue() {
  finalvalue_ = 0u;
  clear_has_finalvalue();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::finalvalue() const {
  return finalvalue_;
}
inline void CharacterDBMissionItemInfo::set_finalvalue(::google::protobuf::uint32 value) {
  set_has_finalvalue();
  finalvalue_ = value;
}

// optional bool completedFlag = 5;
inline bool CharacterDBMissionItemInfo::has_completedflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_completedflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBMissionItemInfo::clear_has_completedflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBMissionItemInfo::clear_completedflag() {
  completedflag_ = false;
  clear_has_completedflag();
}
inline bool CharacterDBMissionItemInfo::completedflag() const {
  return completedflag_;
}
inline void CharacterDBMissionItemInfo::set_completedflag(bool value) {
  set_has_completedflag();
  completedflag_ = value;
}

// optional uint64 parma1 = 6;
inline bool CharacterDBMissionItemInfo::has_parma1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBMissionItemInfo::clear_parma1() {
  parma1_ = GOOGLE_ULONGLONG(0);
  clear_has_parma1();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma1() const {
  return parma1_;
}
inline void CharacterDBMissionItemInfo::set_parma1(::google::protobuf::uint64 value) {
  set_has_parma1();
  parma1_ = value;
}

// optional uint64 parma2 = 7;
inline bool CharacterDBMissionItemInfo::has_parma2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBMissionItemInfo::clear_parma2() {
  parma2_ = GOOGLE_ULONGLONG(0);
  clear_has_parma2();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma2() const {
  return parma2_;
}
inline void CharacterDBMissionItemInfo::set_parma2(::google::protobuf::uint64 value) {
  set_has_parma2();
  parma2_ = value;
}

// optional uint64 parma3 = 8;
inline bool CharacterDBMissionItemInfo::has_parma3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBMissionItemInfo::clear_parma3() {
  parma3_ = GOOGLE_ULONGLONG(0);
  clear_has_parma3();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma3() const {
  return parma3_;
}
inline void CharacterDBMissionItemInfo::set_parma3(::google::protobuf::uint64 value) {
  set_has_parma3();
  parma3_ = value;
}

// -------------------------------------------------------------------

// CharacterDBMissionTrack

// optional uint64 missionId = 1;
inline bool CharacterDBMissionTrack::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBMissionTrack::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBMissionTrack::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBMissionTrack::clear_missionid() {
  missionid_ = GOOGLE_ULONGLONG(0);
  clear_has_missionid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::missionid() const {
  return missionid_;
}
inline void CharacterDBMissionTrack::set_missionid(::google::protobuf::uint64 value) {
  set_has_missionid();
  missionid_ = value;
}

// optional uint64 dynamicid = 2;
inline bool CharacterDBMissionTrack::has_dynamicid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBMissionTrack::set_has_dynamicid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBMissionTrack::clear_has_dynamicid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBMissionTrack::clear_dynamicid() {
  dynamicid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynamicid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::dynamicid() const {
  return dynamicid_;
}
inline void CharacterDBMissionTrack::set_dynamicid(::google::protobuf::uint64 value) {
  set_has_dynamicid();
  dynamicid_ = value;
}

// optional uint32 status = 3;
inline bool CharacterDBMissionTrack::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBMissionTrack::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBMissionTrack::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBMissionTrack::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CharacterDBMissionTrack::status() const {
  return status_;
}
inline void CharacterDBMissionTrack::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint64 acceptMissionTime = 4;
inline bool CharacterDBMissionTrack::has_acceptmissiontime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBMissionTrack::set_has_acceptmissiontime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBMissionTrack::clear_has_acceptmissiontime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBMissionTrack::clear_acceptmissiontime() {
  acceptmissiontime_ = GOOGLE_ULONGLONG(0);
  clear_has_acceptmissiontime();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::acceptmissiontime() const {
  return acceptmissiontime_;
}
inline void CharacterDBMissionTrack::set_acceptmissiontime(::google::protobuf::uint64 value) {
  set_has_acceptmissiontime();
  acceptmissiontime_ = value;
}

// repeated .proto_ff.CharacterDBMissionItemInfo itemInfo = 5;
inline int CharacterDBMissionTrack::iteminfo_size() const {
  return iteminfo_.size();
}
inline void CharacterDBMissionTrack::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::proto_ff::CharacterDBMissionItemInfo& CharacterDBMissionTrack::iteminfo(int index) const {
  return iteminfo_.Get(index);
}
inline ::proto_ff::CharacterDBMissionItemInfo* CharacterDBMissionTrack::mutable_iteminfo(int index) {
  return iteminfo_.Mutable(index);
}
inline ::proto_ff::CharacterDBMissionItemInfo* CharacterDBMissionTrack::add_iteminfo() {
  return iteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >&
CharacterDBMissionTrack::iteminfo() const {
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >*
CharacterDBMissionTrack::mutable_iteminfo() {
  return &iteminfo_;
}

// optional uint64 textid = 6;
inline bool CharacterDBMissionTrack::has_textid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBMissionTrack::set_has_textid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBMissionTrack::clear_has_textid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBMissionTrack::clear_textid() {
  textid_ = GOOGLE_ULONGLONG(0);
  clear_has_textid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::textid() const {
  return textid_;
}
inline void CharacterDBMissionTrack::set_textid(::google::protobuf::uint64 value) {
  set_has_textid();
  textid_ = value;
}

// optional uint32 missiontype = 7;
inline bool CharacterDBMissionTrack::has_missiontype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBMissionTrack::set_has_missiontype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBMissionTrack::clear_has_missiontype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBMissionTrack::clear_missiontype() {
  missiontype_ = 0u;
  clear_has_missiontype();
}
inline ::google::protobuf::uint32 CharacterDBMissionTrack::missiontype() const {
  return missiontype_;
}
inline void CharacterDBMissionTrack::set_missiontype(::google::protobuf::uint32 value) {
  set_has_missiontype();
  missiontype_ = value;
}

// -------------------------------------------------------------------

// CharacterDBDyMissionBountyParam

// optional uint32 ten_state = 1;
inline bool CharacterDBDyMissionBountyParam::has_ten_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBDyMissionBountyParam::set_has_ten_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBDyMissionBountyParam::clear_has_ten_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBDyMissionBountyParam::clear_ten_state() {
  ten_state_ = 0u;
  clear_has_ten_state();
}
inline ::google::protobuf::uint32 CharacterDBDyMissionBountyParam::ten_state() const {
  return ten_state_;
}
inline void CharacterDBDyMissionBountyParam::set_ten_state(::google::protobuf::uint32 value) {
  set_has_ten_state();
  ten_state_ = value;
}

// optional uint32 twenty_state = 2;
inline bool CharacterDBDyMissionBountyParam::has_twenty_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBDyMissionBountyParam::set_has_twenty_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBDyMissionBountyParam::clear_has_twenty_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBDyMissionBountyParam::clear_twenty_state() {
  twenty_state_ = 0u;
  clear_has_twenty_state();
}
inline ::google::protobuf::uint32 CharacterDBDyMissionBountyParam::twenty_state() const {
  return twenty_state_;
}
inline void CharacterDBDyMissionBountyParam::set_twenty_state(::google::protobuf::uint32 value) {
  set_has_twenty_state();
  twenty_state_ = value;
}

// -------------------------------------------------------------------

// CharacterDBDyMissionInfo

// optional int32 mission_type = 1;
inline bool CharacterDBDyMissionInfo::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBDyMissionInfo::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBDyMissionInfo::clear_mission_type() {
  mission_type_ = 0;
  clear_has_mission_type();
}
inline ::google::protobuf::int32 CharacterDBDyMissionInfo::mission_type() const {
  return mission_type_;
}
inline void CharacterDBDyMissionInfo::set_mission_type(::google::protobuf::int32 value) {
  set_has_mission_type();
  mission_type_ = value;
}

// optional uint64 lastfresh = 2;
inline bool CharacterDBDyMissionInfo::has_lastfresh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_lastfresh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBDyMissionInfo::clear_has_lastfresh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBDyMissionInfo::clear_lastfresh() {
  lastfresh_ = GOOGLE_ULONGLONG(0);
  clear_has_lastfresh();
}
inline ::google::protobuf::uint64 CharacterDBDyMissionInfo::lastfresh() const {
  return lastfresh_;
}
inline void CharacterDBDyMissionInfo::set_lastfresh(::google::protobuf::uint64 value) {
  set_has_lastfresh();
  lastfresh_ = value;
}

// optional int32 accept_num = 3;
inline bool CharacterDBDyMissionInfo::has_accept_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_accept_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBDyMissionInfo::clear_has_accept_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBDyMissionInfo::clear_accept_num() {
  accept_num_ = 0;
  clear_has_accept_num();
}
inline ::google::protobuf::int32 CharacterDBDyMissionInfo::accept_num() const {
  return accept_num_;
}
inline void CharacterDBDyMissionInfo::set_accept_num(::google::protobuf::int32 value) {
  set_has_accept_num();
  accept_num_ = value;
}

// optional .proto_ff.CharacterDBDyMissionBountyParam bounty_param = 4;
inline bool CharacterDBDyMissionInfo::has_bounty_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_bounty_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBDyMissionInfo::clear_has_bounty_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBDyMissionInfo::clear_bounty_param() {
  if (bounty_param_ != NULL) bounty_param_->::proto_ff::CharacterDBDyMissionBountyParam::Clear();
  clear_has_bounty_param();
}
inline const ::proto_ff::CharacterDBDyMissionBountyParam& CharacterDBDyMissionInfo::bounty_param() const {
  return bounty_param_ != NULL ? *bounty_param_ : *default_instance_->bounty_param_;
}
inline ::proto_ff::CharacterDBDyMissionBountyParam* CharacterDBDyMissionInfo::mutable_bounty_param() {
  set_has_bounty_param();
  if (bounty_param_ == NULL) bounty_param_ = new ::proto_ff::CharacterDBDyMissionBountyParam;
  return bounty_param_;
}
inline ::proto_ff::CharacterDBDyMissionBountyParam* CharacterDBDyMissionInfo::release_bounty_param() {
  clear_has_bounty_param();
  ::proto_ff::CharacterDBDyMissionBountyParam* temp = bounty_param_;
  bounty_param_ = NULL;
  return temp;
}
inline void CharacterDBDyMissionInfo::set_allocated_bounty_param(::proto_ff::CharacterDBDyMissionBountyParam* bounty_param) {
  delete bounty_param_;
  bounty_param_ = bounty_param;
  if (bounty_param) {
    set_has_bounty_param();
  } else {
    clear_has_bounty_param();
  }
}

// -------------------------------------------------------------------

// GuildPrestigeMissionDBData

// optional int64 prestige_id = 1;
inline bool GuildPrestigeMissionDBData::has_prestige_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildPrestigeMissionDBData::set_has_prestige_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildPrestigeMissionDBData::clear_has_prestige_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildPrestigeMissionDBData::clear_prestige_id() {
  prestige_id_ = GOOGLE_LONGLONG(0);
  clear_has_prestige_id();
}
inline ::google::protobuf::int64 GuildPrestigeMissionDBData::prestige_id() const {
  return prestige_id_;
}
inline void GuildPrestigeMissionDBData::set_prestige_id(::google::protobuf::int64 value) {
  set_has_prestige_id();
  prestige_id_ = value;
}

// optional int64 task_id = 2;
inline bool GuildPrestigeMissionDBData::has_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildPrestigeMissionDBData::set_has_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildPrestigeMissionDBData::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildPrestigeMissionDBData::clear_task_id() {
  task_id_ = GOOGLE_LONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::int64 GuildPrestigeMissionDBData::task_id() const {
  return task_id_;
}
inline void GuildPrestigeMissionDBData::set_task_id(::google::protobuf::int64 value) {
  set_has_task_id();
  task_id_ = value;
}

// optional int32 task_state = 3;
inline bool GuildPrestigeMissionDBData::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildPrestigeMissionDBData::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildPrestigeMissionDBData::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildPrestigeMissionDBData::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDBData::task_state() const {
  return task_state_;
}
inline void GuildPrestigeMissionDBData::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// optional int32 index = 4;
inline bool GuildPrestigeMissionDBData::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildPrestigeMissionDBData::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildPrestigeMissionDBData::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildPrestigeMissionDBData::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDBData::index() const {
  return index_;
}
inline void GuildPrestigeMissionDBData::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional .proto_ff.CharacterDBMissionTrack track = 5;
inline bool GuildPrestigeMissionDBData::has_track() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildPrestigeMissionDBData::set_has_track() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildPrestigeMissionDBData::clear_has_track() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildPrestigeMissionDBData::clear_track() {
  if (track_ != NULL) track_->::proto_ff::CharacterDBMissionTrack::Clear();
  clear_has_track();
}
inline const ::proto_ff::CharacterDBMissionTrack& GuildPrestigeMissionDBData::track() const {
  return track_ != NULL ? *track_ : *default_instance_->track_;
}
inline ::proto_ff::CharacterDBMissionTrack* GuildPrestigeMissionDBData::mutable_track() {
  set_has_track();
  if (track_ == NULL) track_ = new ::proto_ff::CharacterDBMissionTrack;
  return track_;
}
inline ::proto_ff::CharacterDBMissionTrack* GuildPrestigeMissionDBData::release_track() {
  clear_has_track();
  ::proto_ff::CharacterDBMissionTrack* temp = track_;
  track_ = NULL;
  return temp;
}
inline void GuildPrestigeMissionDBData::set_allocated_track(::proto_ff::CharacterDBMissionTrack* track) {
  delete track_;
  track_ = track;
  if (track) {
    set_has_track();
  } else {
    clear_has_track();
  }
}

// -------------------------------------------------------------------

// GuildPrestigeMissionDB

// optional int32 refresh_num = 1;
inline bool GuildPrestigeMissionDB::has_refresh_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildPrestigeMissionDB::set_has_refresh_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildPrestigeMissionDB::clear_has_refresh_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildPrestigeMissionDB::clear_refresh_num() {
  refresh_num_ = 0;
  clear_has_refresh_num();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDB::refresh_num() const {
  return refresh_num_;
}
inline void GuildPrestigeMissionDB::set_refresh_num(::google::protobuf::int32 value) {
  set_has_refresh_num();
  refresh_num_ = value;
}

// optional int32 all_refresh_num = 2;
inline bool GuildPrestigeMissionDB::has_all_refresh_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildPrestigeMissionDB::set_has_all_refresh_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildPrestigeMissionDB::clear_has_all_refresh_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildPrestigeMissionDB::clear_all_refresh_num() {
  all_refresh_num_ = 0;
  clear_has_all_refresh_num();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDB::all_refresh_num() const {
  return all_refresh_num_;
}
inline void GuildPrestigeMissionDB::set_all_refresh_num(::google::protobuf::int32 value) {
  set_has_all_refresh_num();
  all_refresh_num_ = value;
}

// optional int32 accept_num = 3;
inline bool GuildPrestigeMissionDB::has_accept_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildPrestigeMissionDB::set_has_accept_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildPrestigeMissionDB::clear_has_accept_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildPrestigeMissionDB::clear_accept_num() {
  accept_num_ = 0;
  clear_has_accept_num();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDB::accept_num() const {
  return accept_num_;
}
inline void GuildPrestigeMissionDB::set_accept_num(::google::protobuf::int32 value) {
  set_has_accept_num();
  accept_num_ = value;
}

// optional int32 all_accept_num = 4;
inline bool GuildPrestigeMissionDB::has_all_accept_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildPrestigeMissionDB::set_has_all_accept_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildPrestigeMissionDB::clear_has_all_accept_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildPrestigeMissionDB::clear_all_accept_num() {
  all_accept_num_ = 0;
  clear_has_all_accept_num();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDB::all_accept_num() const {
  return all_accept_num_;
}
inline void GuildPrestigeMissionDB::set_all_accept_num(::google::protobuf::int32 value) {
  set_has_all_accept_num();
  all_accept_num_ = value;
}

// repeated .proto_ff.GuildPrestigeMissionDBData task_pool = 5;
inline int GuildPrestigeMissionDB::task_pool_size() const {
  return task_pool_.size();
}
inline void GuildPrestigeMissionDB::clear_task_pool() {
  task_pool_.Clear();
}
inline const ::proto_ff::GuildPrestigeMissionDBData& GuildPrestigeMissionDB::task_pool(int index) const {
  return task_pool_.Get(index);
}
inline ::proto_ff::GuildPrestigeMissionDBData* GuildPrestigeMissionDB::mutable_task_pool(int index) {
  return task_pool_.Mutable(index);
}
inline ::proto_ff::GuildPrestigeMissionDBData* GuildPrestigeMissionDB::add_task_pool() {
  return task_pool_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GuildPrestigeMissionDBData >&
GuildPrestigeMissionDB::task_pool() const {
  return task_pool_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GuildPrestigeMissionDBData >*
GuildPrestigeMissionDB::mutable_task_pool() {
  return &task_pool_;
}

// optional int64 last_refresh_time = 7;
inline bool GuildPrestigeMissionDB::has_last_refresh_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildPrestigeMissionDB::set_has_last_refresh_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildPrestigeMissionDB::clear_has_last_refresh_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildPrestigeMissionDB::clear_last_refresh_time() {
  last_refresh_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_refresh_time();
}
inline ::google::protobuf::int64 GuildPrestigeMissionDB::last_refresh_time() const {
  return last_refresh_time_;
}
inline void GuildPrestigeMissionDB::set_last_refresh_time(::google::protobuf::int64 value) {
  set_has_last_refresh_time();
  last_refresh_time_ = value;
}

// -------------------------------------------------------------------

// CharacterDBTaskData

// repeated .proto_ff.CharacterDBMissionTrack missionTrack = 1;
inline int CharacterDBTaskData::missiontrack_size() const {
  return missiontrack_.size();
}
inline void CharacterDBTaskData::clear_missiontrack() {
  missiontrack_.Clear();
}
inline const ::proto_ff::CharacterDBMissionTrack& CharacterDBTaskData::missiontrack(int index) const {
  return missiontrack_.Get(index);
}
inline ::proto_ff::CharacterDBMissionTrack* CharacterDBTaskData::mutable_missiontrack(int index) {
  return missiontrack_.Mutable(index);
}
inline ::proto_ff::CharacterDBMissionTrack* CharacterDBTaskData::add_missiontrack() {
  return missiontrack_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >&
CharacterDBTaskData::missiontrack() const {
  return missiontrack_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >*
CharacterDBTaskData::mutable_missiontrack() {
  return &missiontrack_;
}

// repeated .proto_ff.CharacterDBDyMissionInfo dyinfo = 2;
inline int CharacterDBTaskData::dyinfo_size() const {
  return dyinfo_.size();
}
inline void CharacterDBTaskData::clear_dyinfo() {
  dyinfo_.Clear();
}
inline const ::proto_ff::CharacterDBDyMissionInfo& CharacterDBTaskData::dyinfo(int index) const {
  return dyinfo_.Get(index);
}
inline ::proto_ff::CharacterDBDyMissionInfo* CharacterDBTaskData::mutable_dyinfo(int index) {
  return dyinfo_.Mutable(index);
}
inline ::proto_ff::CharacterDBDyMissionInfo* CharacterDBTaskData::add_dyinfo() {
  return dyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >&
CharacterDBTaskData::dyinfo() const {
  return dyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >*
CharacterDBTaskData::mutable_dyinfo() {
  return &dyinfo_;
}

// repeated uint64 already_submit = 3;
inline int CharacterDBTaskData::already_submit_size() const {
  return already_submit_.size();
}
inline void CharacterDBTaskData::clear_already_submit() {
  already_submit_.Clear();
}
inline ::google::protobuf::uint64 CharacterDBTaskData::already_submit(int index) const {
  return already_submit_.Get(index);
}
inline void CharacterDBTaskData::set_already_submit(int index, ::google::protobuf::uint64 value) {
  already_submit_.Set(index, value);
}
inline void CharacterDBTaskData::add_already_submit(::google::protobuf::uint64 value) {
  already_submit_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CharacterDBTaskData::already_submit() const {
  return already_submit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CharacterDBTaskData::mutable_already_submit() {
  return &already_submit_;
}

// repeated .proto_ff.CharacterDBRecentSubmitMission recent_submit = 4;
inline int CharacterDBTaskData::recent_submit_size() const {
  return recent_submit_.size();
}
inline void CharacterDBTaskData::clear_recent_submit() {
  recent_submit_.Clear();
}
inline const ::proto_ff::CharacterDBRecentSubmitMission& CharacterDBTaskData::recent_submit(int index) const {
  return recent_submit_.Get(index);
}
inline ::proto_ff::CharacterDBRecentSubmitMission* CharacterDBTaskData::mutable_recent_submit(int index) {
  return recent_submit_.Mutable(index);
}
inline ::proto_ff::CharacterDBRecentSubmitMission* CharacterDBTaskData::add_recent_submit() {
  return recent_submit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >&
CharacterDBTaskData::recent_submit() const {
  return recent_submit_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >*
CharacterDBTaskData::mutable_recent_submit() {
  return &recent_submit_;
}

// optional .proto_ff.GuildPrestigeMissionDB prestige_mission = 5;
inline bool CharacterDBTaskData::has_prestige_mission() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBTaskData::set_has_prestige_mission() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBTaskData::clear_has_prestige_mission() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBTaskData::clear_prestige_mission() {
  if (prestige_mission_ != NULL) prestige_mission_->::proto_ff::GuildPrestigeMissionDB::Clear();
  clear_has_prestige_mission();
}
inline const ::proto_ff::GuildPrestigeMissionDB& CharacterDBTaskData::prestige_mission() const {
  return prestige_mission_ != NULL ? *prestige_mission_ : *default_instance_->prestige_mission_;
}
inline ::proto_ff::GuildPrestigeMissionDB* CharacterDBTaskData::mutable_prestige_mission() {
  set_has_prestige_mission();
  if (prestige_mission_ == NULL) prestige_mission_ = new ::proto_ff::GuildPrestigeMissionDB;
  return prestige_mission_;
}
inline ::proto_ff::GuildPrestigeMissionDB* CharacterDBTaskData::release_prestige_mission() {
  clear_has_prestige_mission();
  ::proto_ff::GuildPrestigeMissionDB* temp = prestige_mission_;
  prestige_mission_ = NULL;
  return temp;
}
inline void CharacterDBTaskData::set_allocated_prestige_mission(::proto_ff::GuildPrestigeMissionDB* prestige_mission) {
  delete prestige_mission_;
  prestige_mission_ = prestige_mission;
  if (prestige_mission) {
    set_has_prestige_mission();
  } else {
    clear_has_prestige_mission();
  }
}

// -------------------------------------------------------------------

// NotifyVipDataRsp

// optional int32 exp = 1;
inline bool NotifyVipDataRsp::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyVipDataRsp::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyVipDataRsp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyVipDataRsp::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::exp() const {
  return exp_;
}
inline void NotifyVipDataRsp::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// repeated int32 ids = 2;
inline int NotifyVipDataRsp::ids_size() const {
  return ids_.size();
}
inline void NotifyVipDataRsp::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::ids(int index) const {
  return ids_.Get(index);
}
inline void NotifyVipDataRsp::set_ids(int index, ::google::protobuf::int32 value) {
  ids_.Set(index, value);
}
inline void NotifyVipDataRsp::add_ids(::google::protobuf::int32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyVipDataRsp::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyVipDataRsp::mutable_ids() {
  return &ids_;
}

// optional int32 vip_hide = 3;
inline bool NotifyVipDataRsp::has_vip_hide() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyVipDataRsp::set_has_vip_hide() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyVipDataRsp::clear_has_vip_hide() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyVipDataRsp::clear_vip_hide() {
  vip_hide_ = 0;
  clear_has_vip_hide();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::vip_hide() const {
  return vip_hide_;
}
inline void NotifyVipDataRsp::set_vip_hide(::google::protobuf::int32 value) {
  set_has_vip_hide();
  vip_hide_ = value;
}

// optional int32 active_type = 4;
inline bool NotifyVipDataRsp::has_active_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyVipDataRsp::set_has_active_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyVipDataRsp::clear_has_active_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyVipDataRsp::clear_active_type() {
  active_type_ = 0;
  clear_has_active_type();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::active_type() const {
  return active_type_;
}
inline void NotifyVipDataRsp::set_active_type(::google::protobuf::int32 value) {
  set_has_active_type();
  active_type_ = value;
}

// optional uint64 outtime = 5;
inline bool NotifyVipDataRsp::has_outtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyVipDataRsp::set_has_outtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyVipDataRsp::clear_has_outtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyVipDataRsp::clear_outtime() {
  outtime_ = GOOGLE_ULONGLONG(0);
  clear_has_outtime();
}
inline ::google::protobuf::uint64 NotifyVipDataRsp::outtime() const {
  return outtime_;
}
inline void NotifyVipDataRsp::set_outtime(::google::protobuf::uint64 value) {
  set_has_outtime();
  outtime_ = value;
}

// optional int32 can_recv_day_gift = 6;
inline bool NotifyVipDataRsp::has_can_recv_day_gift() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyVipDataRsp::set_has_can_recv_day_gift() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyVipDataRsp::clear_has_can_recv_day_gift() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyVipDataRsp::clear_can_recv_day_gift() {
  can_recv_day_gift_ = 0;
  clear_has_can_recv_day_gift();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::can_recv_day_gift() const {
  return can_recv_day_gift_;
}
inline void NotifyVipDataRsp::set_can_recv_day_gift(::google::protobuf::int32 value) {
  set_has_can_recv_day_gift();
  can_recv_day_gift_ = value;
}

// optional int32 day_recv = 7;
inline bool NotifyVipDataRsp::has_day_recv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotifyVipDataRsp::set_has_day_recv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotifyVipDataRsp::clear_has_day_recv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotifyVipDataRsp::clear_day_recv() {
  day_recv_ = 0;
  clear_has_day_recv();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::day_recv() const {
  return day_recv_;
}
inline void NotifyVipDataRsp::set_day_recv(::google::protobuf::int32 value) {
  set_has_day_recv();
  day_recv_ = value;
}

// repeated int32 lv_gift = 8;
inline int NotifyVipDataRsp::lv_gift_size() const {
  return lv_gift_.size();
}
inline void NotifyVipDataRsp::clear_lv_gift() {
  lv_gift_.Clear();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::lv_gift(int index) const {
  return lv_gift_.Get(index);
}
inline void NotifyVipDataRsp::set_lv_gift(int index, ::google::protobuf::int32 value) {
  lv_gift_.Set(index, value);
}
inline void NotifyVipDataRsp::add_lv_gift(::google::protobuf::int32 value) {
  lv_gift_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyVipDataRsp::lv_gift() const {
  return lv_gift_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyVipDataRsp::mutable_lv_gift() {
  return &lv_gift_;
}

// optional int32 zero_state = 9;
inline bool NotifyVipDataRsp::has_zero_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NotifyVipDataRsp::set_has_zero_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NotifyVipDataRsp::clear_has_zero_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NotifyVipDataRsp::clear_zero_state() {
  zero_state_ = 0;
  clear_has_zero_state();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::zero_state() const {
  return zero_state_;
}
inline void NotifyVipDataRsp::set_zero_state(::google::protobuf::int32 value) {
  set_has_zero_state();
  zero_state_ = value;
}

// optional int32 recv_zero = 10;
inline bool NotifyVipDataRsp::has_recv_zero() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NotifyVipDataRsp::set_has_recv_zero() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NotifyVipDataRsp::clear_has_recv_zero() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NotifyVipDataRsp::clear_recv_zero() {
  recv_zero_ = 0;
  clear_has_recv_zero();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::recv_zero() const {
  return recv_zero_;
}
inline void NotifyVipDataRsp::set_recv_zero(::google::protobuf::int32 value) {
  set_has_recv_zero();
  recv_zero_ = value;
}

// optional uint64 add_exp = 11;
inline bool NotifyVipDataRsp::has_add_exp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void NotifyVipDataRsp::set_has_add_exp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void NotifyVipDataRsp::clear_has_add_exp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void NotifyVipDataRsp::clear_add_exp() {
  add_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_add_exp();
}
inline ::google::protobuf::uint64 NotifyVipDataRsp::add_exp() const {
  return add_exp_;
}
inline void NotifyVipDataRsp::set_add_exp(::google::protobuf::uint64 value) {
  set_has_add_exp();
  add_exp_ = value;
}

// optional int32 recv_exp = 12;
inline bool NotifyVipDataRsp::has_recv_exp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void NotifyVipDataRsp::set_has_recv_exp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void NotifyVipDataRsp::clear_has_recv_exp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void NotifyVipDataRsp::clear_recv_exp() {
  recv_exp_ = 0;
  clear_has_recv_exp();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::recv_exp() const {
  return recv_exp_;
}
inline void NotifyVipDataRsp::set_recv_exp(::google::protobuf::int32 value) {
  set_has_recv_exp();
  recv_exp_ = value;
}

// -------------------------------------------------------------------

// NotifyPrivilegeOpt

// optional int32 opt = 1;
inline bool NotifyPrivilegeOpt::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyPrivilegeOpt::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyPrivilegeOpt::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyPrivilegeOpt::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 NotifyPrivilegeOpt::opt() const {
  return opt_;
}
inline void NotifyPrivilegeOpt::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// repeated int32 ids = 2;
inline int NotifyPrivilegeOpt::ids_size() const {
  return ids_.size();
}
inline void NotifyPrivilegeOpt::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int32 NotifyPrivilegeOpt::ids(int index) const {
  return ids_.Get(index);
}
inline void NotifyPrivilegeOpt::set_ids(int index, ::google::protobuf::int32 value) {
  ids_.Set(index, value);
}
inline void NotifyPrivilegeOpt::add_ids(::google::protobuf::int32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyPrivilegeOpt::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyPrivilegeOpt::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// BuyVipGiftReq

// optional int32 opt = 1;
inline bool BuyVipGiftReq::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyVipGiftReq::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyVipGiftReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyVipGiftReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 BuyVipGiftReq::opt() const {
  return opt_;
}
inline void BuyVipGiftReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional int32 lv = 2;
inline bool BuyVipGiftReq::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyVipGiftReq::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyVipGiftReq::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyVipGiftReq::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 BuyVipGiftReq::lv() const {
  return lv_;
}
inline void BuyVipGiftReq::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// -------------------------------------------------------------------

// BuyVipGiftRsp

// optional int32 opt = 1;
inline bool BuyVipGiftRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyVipGiftRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyVipGiftRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyVipGiftRsp::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 BuyVipGiftRsp::opt() const {
  return opt_;
}
inline void BuyVipGiftRsp::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional int32 lv = 2;
inline bool BuyVipGiftRsp::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyVipGiftRsp::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyVipGiftRsp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyVipGiftRsp::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 BuyVipGiftRsp::lv() const {
  return lv_;
}
inline void BuyVipGiftRsp::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 ret = 3;
inline bool BuyVipGiftRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyVipGiftRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyVipGiftRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyVipGiftRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 BuyVipGiftRsp::ret() const {
  return ret_;
}
inline void BuyVipGiftRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// RcveVipRewardReq

// optional int32 opt = 1;
inline bool RcveVipRewardReq::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcveVipRewardReq::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcveVipRewardReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcveVipRewardReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 RcveVipRewardReq::opt() const {
  return opt_;
}
inline void RcveVipRewardReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// RcveVipRewardRsp

// optional int32 opt = 1;
inline bool RcveVipRewardRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcveVipRewardRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcveVipRewardRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcveVipRewardRsp::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 RcveVipRewardRsp::opt() const {
  return opt_;
}
inline void RcveVipRewardRsp::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional int32 ret = 2;
inline bool RcveVipRewardRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcveVipRewardRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcveVipRewardRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcveVipRewardRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RcveVipRewardRsp::ret() const {
  return ret_;
}
inline void RcveVipRewardRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// VipHideReq

// optional int32 hide = 1;
inline bool VipHideReq::has_hide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipHideReq::set_has_hide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipHideReq::clear_has_hide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipHideReq::clear_hide() {
  hide_ = 0;
  clear_has_hide();
}
inline ::google::protobuf::int32 VipHideReq::hide() const {
  return hide_;
}
inline void VipHideReq::set_hide(::google::protobuf::int32 value) {
  set_has_hide();
  hide_ = value;
}

// -------------------------------------------------------------------

// VipHideRsp

// optional int32 hide = 1;
inline bool VipHideRsp::has_hide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipHideRsp::set_has_hide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipHideRsp::clear_has_hide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipHideRsp::clear_hide() {
  hide_ = 0;
  clear_has_hide();
}
inline ::google::protobuf::int32 VipHideRsp::hide() const {
  return hide_;
}
inline void VipHideRsp::set_hide(::google::protobuf::int32 value) {
  set_has_hide();
  hide_ = value;
}

// optional int32 ret = 2;
inline bool VipHideRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipHideRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipHideRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipHideRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 VipHideRsp::ret() const {
  return ret_;
}
inline void VipHideRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// NotifyVipEvent

// optional int32 type = 1;
inline bool NotifyVipEvent::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyVipEvent::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyVipEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyVipEvent::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifyVipEvent::type() const {
  return type_;
}
inline void NotifyVipEvent::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// RecvVipCacheExpReq

// -------------------------------------------------------------------

// RecvVipCacheExpRsp

// optional int32 ret = 1;
inline bool RecvVipCacheExpRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvVipCacheExpRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvVipCacheExpRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvVipCacheExpRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RecvVipCacheExpRsp::ret() const {
  return ret_;
}
inline void RecvVipCacheExpRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// DailyArenaReward

// optional int32 cfg_id = 1;
inline bool DailyArenaReward::has_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyArenaReward::set_has_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyArenaReward::clear_has_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyArenaReward::clear_cfg_id() {
  cfg_id_ = 0;
  clear_has_cfg_id();
}
inline ::google::protobuf::int32 DailyArenaReward::cfg_id() const {
  return cfg_id_;
}
inline void DailyArenaReward::set_cfg_id(::google::protobuf::int32 value) {
  set_has_cfg_id();
  cfg_id_ = value;
}

// optional int32 state = 2;
inline bool DailyArenaReward::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyArenaReward::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyArenaReward::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyArenaReward::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DailyArenaReward::state() const {
  return state_;
}
inline void DailyArenaReward::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// ChallArenaReward

// optional int32 cfg_id = 1;
inline bool ChallArenaReward::has_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChallArenaReward::set_has_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChallArenaReward::clear_has_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChallArenaReward::clear_cfg_id() {
  cfg_id_ = 0;
  clear_has_cfg_id();
}
inline ::google::protobuf::int32 ChallArenaReward::cfg_id() const {
  return cfg_id_;
}
inline void ChallArenaReward::set_cfg_id(::google::protobuf::int32 value) {
  set_has_cfg_id();
  cfg_id_ = value;
}

// optional int32 state = 2;
inline bool ChallArenaReward::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChallArenaReward::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChallArenaReward::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChallArenaReward::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ChallArenaReward::state() const {
  return state_;
}
inline void ChallArenaReward::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// NotifyServerFlag

// optional int32 bt_dup = 1;
inline bool NotifyServerFlag::has_bt_dup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyServerFlag::set_has_bt_dup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyServerFlag::clear_has_bt_dup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyServerFlag::clear_bt_dup() {
  bt_dup_ = 0;
  clear_has_bt_dup();
}
inline ::google::protobuf::int32 NotifyServerFlag::bt_dup() const {
  return bt_dup_;
}
inline void NotifyServerFlag::set_bt_dup(::google::protobuf::int32 value) {
  set_has_bt_dup();
  bt_dup_ = value;
}

// -------------------------------------------------------------------

// FacadeSoulSkillData

// optional int64 skill_id = 1;
inline bool FacadeSoulSkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSoulSkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSoulSkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSoulSkillData::clear_skill_id() {
  skill_id_ = GOOGLE_LONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::int64 FacadeSoulSkillData::skill_id() const {
  return skill_id_;
}
inline void FacadeSoulSkillData::set_skill_id(::google::protobuf::int64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 status = 2;
inline bool FacadeSoulSkillData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSoulSkillData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSoulSkillData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSoulSkillData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FacadeSoulSkillData::status() const {
  return status_;
}
inline void FacadeSoulSkillData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FacadeSoulActivityData

// optional int64 activity_id = 1;
inline bool FacadeSoulActivityData::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSoulActivityData::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSoulActivityData::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSoulActivityData::clear_activity_id() {
  activity_id_ = GOOGLE_LONGLONG(0);
  clear_has_activity_id();
}
inline ::google::protobuf::int64 FacadeSoulActivityData::activity_id() const {
  return activity_id_;
}
inline void FacadeSoulActivityData::set_activity_id(::google::protobuf::int64 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// optional uint32 status = 2;
inline bool FacadeSoulActivityData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSoulActivityData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSoulActivityData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSoulActivityData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FacadeSoulActivityData::status() const {
  return status_;
}
inline void FacadeSoulActivityData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FacadeSoulData

// optional uint32 soul_id = 1;
inline bool FacadeSoulData::has_soul_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSoulData::set_has_soul_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSoulData::clear_has_soul_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSoulData::clear_soul_id() {
  soul_id_ = 0u;
  clear_has_soul_id();
}
inline ::google::protobuf::uint32 FacadeSoulData::soul_id() const {
  return soul_id_;
}
inline void FacadeSoulData::set_soul_id(::google::protobuf::uint32 value) {
  set_has_soul_id();
  soul_id_ = value;
}

// optional bool soul_active = 2;
inline bool FacadeSoulData::has_soul_active() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSoulData::set_has_soul_active() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSoulData::clear_has_soul_active() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSoulData::clear_soul_active() {
  soul_active_ = false;
  clear_has_soul_active();
}
inline bool FacadeSoulData::soul_active() const {
  return soul_active_;
}
inline void FacadeSoulData::set_soul_active(bool value) {
  set_has_soul_active();
  soul_active_ = value;
}

// optional uint32 soul_level = 3;
inline bool FacadeSoulData::has_soul_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeSoulData::set_has_soul_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeSoulData::clear_has_soul_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeSoulData::clear_soul_level() {
  soul_level_ = 0u;
  clear_has_soul_level();
}
inline ::google::protobuf::uint32 FacadeSoulData::soul_level() const {
  return soul_level_;
}
inline void FacadeSoulData::set_soul_level(::google::protobuf::uint32 value) {
  set_has_soul_level();
  soul_level_ = value;
}

// repeated .proto_ff.FacadeSoulSkillData skill_data = 5;
inline int FacadeSoulData::skill_data_size() const {
  return skill_data_.size();
}
inline void FacadeSoulData::clear_skill_data() {
  skill_data_.Clear();
}
inline const ::proto_ff::FacadeSoulSkillData& FacadeSoulData::skill_data(int index) const {
  return skill_data_.Get(index);
}
inline ::proto_ff::FacadeSoulSkillData* FacadeSoulData::mutable_skill_data(int index) {
  return skill_data_.Mutable(index);
}
inline ::proto_ff::FacadeSoulSkillData* FacadeSoulData::add_skill_data() {
  return skill_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulSkillData >&
FacadeSoulData::skill_data() const {
  return skill_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulSkillData >*
FacadeSoulData::mutable_skill_data() {
  return &skill_data_;
}

// repeated .proto_ff.FacadeSoulActivityData acviity_data = 6;
inline int FacadeSoulData::acviity_data_size() const {
  return acviity_data_.size();
}
inline void FacadeSoulData::clear_acviity_data() {
  acviity_data_.Clear();
}
inline const ::proto_ff::FacadeSoulActivityData& FacadeSoulData::acviity_data(int index) const {
  return acviity_data_.Get(index);
}
inline ::proto_ff::FacadeSoulActivityData* FacadeSoulData::mutable_acviity_data(int index) {
  return acviity_data_.Mutable(index);
}
inline ::proto_ff::FacadeSoulActivityData* FacadeSoulData::add_acviity_data() {
  return acviity_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulActivityData >&
FacadeSoulData::acviity_data() const {
  return acviity_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulActivityData >*
FacadeSoulData::mutable_acviity_data() {
  return &acviity_data_;
}

// -------------------------------------------------------------------

// ItemSellProto

// required uint32 index = 1;
inline bool ItemSellProto::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemSellProto::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemSellProto::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemSellProto::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ItemSellProto::index() const {
  return index_;
}
inline void ItemSellProto::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 num = 2;
inline bool ItemSellProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemSellProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemSellProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemSellProto::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ItemSellProto::num() const {
  return num_;
}
inline void ItemSellProto::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// DeityFantasySkillData

// optional uint64 skill_id = 1;
inline bool DeityFantasySkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityFantasySkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityFantasySkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityFantasySkillData::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 DeityFantasySkillData::skill_id() const {
  return skill_id_;
}
inline void DeityFantasySkillData::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 skill_state = 2;
inline bool DeityFantasySkillData::has_skill_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityFantasySkillData::set_has_skill_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityFantasySkillData::clear_has_skill_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityFantasySkillData::clear_skill_state() {
  skill_state_ = 0u;
  clear_has_skill_state();
}
inline ::google::protobuf::uint32 DeityFantasySkillData::skill_state() const {
  return skill_state_;
}
inline void DeityFantasySkillData::set_skill_state(::google::protobuf::uint32 value) {
  set_has_skill_state();
  skill_state_ = value;
}

// -------------------------------------------------------------------

// DeityEquipData

// repeated .proto_ff.EquipInfo infos = 1;
inline int DeityEquipData::infos_size() const {
  return infos_.size();
}
inline void DeityEquipData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::EquipInfo& DeityEquipData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::EquipInfo* DeityEquipData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::EquipInfo* DeityEquipData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >&
DeityEquipData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >*
DeityEquipData::mutable_infos() {
  return &infos_;
}

// repeated .proto_ff.EquipLvAttrInfo lv_attr = 2;
inline int DeityEquipData::lv_attr_size() const {
  return lv_attr_.size();
}
inline void DeityEquipData::clear_lv_attr() {
  lv_attr_.Clear();
}
inline const ::proto_ff::EquipLvAttrInfo& DeityEquipData::lv_attr(int index) const {
  return lv_attr_.Get(index);
}
inline ::proto_ff::EquipLvAttrInfo* DeityEquipData::mutable_lv_attr(int index) {
  return lv_attr_.Mutable(index);
}
inline ::proto_ff::EquipLvAttrInfo* DeityEquipData::add_lv_attr() {
  return lv_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >&
DeityEquipData::lv_attr() const {
  return lv_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >*
DeityEquipData::mutable_lv_attr() {
  return &lv_attr_;
}

// -------------------------------------------------------------------

// DeityEquipSuitData

// optional int64 id = 1;
inline bool DeityEquipSuitData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityEquipSuitData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityEquipSuitData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityEquipSuitData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 DeityEquipSuitData::id() const {
  return id_;
}
inline void DeityEquipSuitData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 state = 2;
inline bool DeityEquipSuitData::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityEquipSuitData::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityEquipSuitData::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityEquipSuitData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 DeityEquipSuitData::state() const {
  return state_;
}
inline void DeityEquipSuitData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// DeityGodHoodEquipData

// optional int32 pos = 1;
inline bool DeityGodHoodEquipData::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityGodHoodEquipData::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityGodHoodEquipData::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityGodHoodEquipData::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 DeityGodHoodEquipData::pos() const {
  return pos_;
}
inline void DeityGodHoodEquipData::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// optional int64 item_id = 2;
inline bool DeityGodHoodEquipData::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityGodHoodEquipData::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityGodHoodEquipData::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityGodHoodEquipData::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 DeityGodHoodEquipData::item_id() const {
  return item_id_;
}
inline void DeityGodHoodEquipData::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// DeityGodHoodEquip

// repeated .proto_ff.DeityGodHoodEquipData infos = 1;
inline int DeityGodHoodEquip::infos_size() const {
  return infos_.size();
}
inline void DeityGodHoodEquip::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::DeityGodHoodEquipData& DeityGodHoodEquip::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::DeityGodHoodEquipData* DeityGodHoodEquip::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::DeityGodHoodEquipData* DeityGodHoodEquip::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityGodHoodEquipData >&
DeityGodHoodEquip::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityGodHoodEquipData >*
DeityGodHoodEquip::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// DeityGodHoodData

// optional uint32 lv = 1;
inline bool DeityGodHoodData::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityGodHoodData::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityGodHoodData::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityGodHoodData::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 DeityGodHoodData::lv() const {
  return lv_;
}
inline void DeityGodHoodData::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// optional uint32 star = 2;
inline bool DeityGodHoodData::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityGodHoodData::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityGodHoodData::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityGodHoodData::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 DeityGodHoodData::star() const {
  return star_;
}
inline void DeityGodHoodData::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// optional uint32 stage = 3;
inline bool DeityGodHoodData::has_stage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeityGodHoodData::set_has_stage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeityGodHoodData::clear_has_stage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeityGodHoodData::clear_stage() {
  stage_ = 0u;
  clear_has_stage();
}
inline ::google::protobuf::uint32 DeityGodHoodData::stage() const {
  return stage_;
}
inline void DeityGodHoodData::set_stage(::google::protobuf::uint32 value) {
  set_has_stage();
  stage_ = value;
}

// optional .proto_ff.DeityGodHoodEquip equip = 4;
inline bool DeityGodHoodData::has_equip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeityGodHoodData::set_has_equip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeityGodHoodData::clear_has_equip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeityGodHoodData::clear_equip() {
  if (equip_ != NULL) equip_->::proto_ff::DeityGodHoodEquip::Clear();
  clear_has_equip();
}
inline const ::proto_ff::DeityGodHoodEquip& DeityGodHoodData::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::proto_ff::DeityGodHoodEquip* DeityGodHoodData::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::proto_ff::DeityGodHoodEquip;
  return equip_;
}
inline ::proto_ff::DeityGodHoodEquip* DeityGodHoodData::release_equip() {
  clear_has_equip();
  ::proto_ff::DeityGodHoodEquip* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void DeityGodHoodData::set_allocated_equip(::proto_ff::DeityGodHoodEquip* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
}

// -------------------------------------------------------------------

// DeityFantasyData

// optional uint64 fantasy_id = 1;
inline bool DeityFantasyData::has_fantasy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityFantasyData::set_has_fantasy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityFantasyData::clear_has_fantasy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityFantasyData::clear_fantasy_id() {
  fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_id();
}
inline ::google::protobuf::uint64 DeityFantasyData::fantasy_id() const {
  return fantasy_id_;
}
inline void DeityFantasyData::set_fantasy_id(::google::protobuf::uint64 value) {
  set_has_fantasy_id();
  fantasy_id_ = value;
}

// optional uint32 fantasy_lev = 2;
inline bool DeityFantasyData::has_fantasy_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityFantasyData::set_has_fantasy_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityFantasyData::clear_has_fantasy_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityFantasyData::clear_fantasy_lev() {
  fantasy_lev_ = 0u;
  clear_has_fantasy_lev();
}
inline ::google::protobuf::uint32 DeityFantasyData::fantasy_lev() const {
  return fantasy_lev_;
}
inline void DeityFantasyData::set_fantasy_lev(::google::protobuf::uint32 value) {
  set_has_fantasy_lev();
  fantasy_lev_ = value;
}

// optional uint64 fantasy_lev_exp = 3;
inline bool DeityFantasyData::has_fantasy_lev_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeityFantasyData::set_has_fantasy_lev_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeityFantasyData::clear_has_fantasy_lev_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeityFantasyData::clear_fantasy_lev_exp() {
  fantasy_lev_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_lev_exp();
}
inline ::google::protobuf::uint64 DeityFantasyData::fantasy_lev_exp() const {
  return fantasy_lev_exp_;
}
inline void DeityFantasyData::set_fantasy_lev_exp(::google::protobuf::uint64 value) {
  set_has_fantasy_lev_exp();
  fantasy_lev_exp_ = value;
}

// optional uint32 fantasy_star = 4;
inline bool DeityFantasyData::has_fantasy_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeityFantasyData::set_has_fantasy_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeityFantasyData::clear_has_fantasy_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeityFantasyData::clear_fantasy_star() {
  fantasy_star_ = 0u;
  clear_has_fantasy_star();
}
inline ::google::protobuf::uint32 DeityFantasyData::fantasy_star() const {
  return fantasy_star_;
}
inline void DeityFantasyData::set_fantasy_star(::google::protobuf::uint32 value) {
  set_has_fantasy_star();
  fantasy_star_ = value;
}

// repeated .proto_ff.DeityFantasySkillData skill_data = 5;
inline int DeityFantasyData::skill_data_size() const {
  return skill_data_.size();
}
inline void DeityFantasyData::clear_skill_data() {
  skill_data_.Clear();
}
inline const ::proto_ff::DeityFantasySkillData& DeityFantasyData::skill_data(int index) const {
  return skill_data_.Get(index);
}
inline ::proto_ff::DeityFantasySkillData* DeityFantasyData::mutable_skill_data(int index) {
  return skill_data_.Mutable(index);
}
inline ::proto_ff::DeityFantasySkillData* DeityFantasyData::add_skill_data() {
  return skill_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityFantasySkillData >&
DeityFantasyData::skill_data() const {
  return skill_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityFantasySkillData >*
DeityFantasyData::mutable_skill_data() {
  return &skill_data_;
}

// optional uint64 fantasy_fight = 6;
inline bool DeityFantasyData::has_fantasy_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DeityFantasyData::set_has_fantasy_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DeityFantasyData::clear_has_fantasy_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DeityFantasyData::clear_fantasy_fight() {
  fantasy_fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_fight();
}
inline ::google::protobuf::uint64 DeityFantasyData::fantasy_fight() const {
  return fantasy_fight_;
}
inline void DeityFantasyData::set_fantasy_fight(::google::protobuf::uint64 value) {
  set_has_fantasy_fight();
  fantasy_fight_ = value;
}

// optional .proto_ff.DeityEquipData equip_data = 7;
inline bool DeityFantasyData::has_equip_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DeityFantasyData::set_has_equip_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DeityFantasyData::clear_has_equip_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DeityFantasyData::clear_equip_data() {
  if (equip_data_ != NULL) equip_data_->::proto_ff::DeityEquipData::Clear();
  clear_has_equip_data();
}
inline const ::proto_ff::DeityEquipData& DeityFantasyData::equip_data() const {
  return equip_data_ != NULL ? *equip_data_ : *default_instance_->equip_data_;
}
inline ::proto_ff::DeityEquipData* DeityFantasyData::mutable_equip_data() {
  set_has_equip_data();
  if (equip_data_ == NULL) equip_data_ = new ::proto_ff::DeityEquipData;
  return equip_data_;
}
inline ::proto_ff::DeityEquipData* DeityFantasyData::release_equip_data() {
  clear_has_equip_data();
  ::proto_ff::DeityEquipData* temp = equip_data_;
  equip_data_ = NULL;
  return temp;
}
inline void DeityFantasyData::set_allocated_equip_data(::proto_ff::DeityEquipData* equip_data) {
  delete equip_data_;
  equip_data_ = equip_data;
  if (equip_data) {
    set_has_equip_data();
  } else {
    clear_has_equip_data();
  }
}

// repeated .proto_ff.DeityEquipSuitData equip_suit_data = 8;
inline int DeityFantasyData::equip_suit_data_size() const {
  return equip_suit_data_.size();
}
inline void DeityFantasyData::clear_equip_suit_data() {
  equip_suit_data_.Clear();
}
inline const ::proto_ff::DeityEquipSuitData& DeityFantasyData::equip_suit_data(int index) const {
  return equip_suit_data_.Get(index);
}
inline ::proto_ff::DeityEquipSuitData* DeityFantasyData::mutable_equip_suit_data(int index) {
  return equip_suit_data_.Mutable(index);
}
inline ::proto_ff::DeityEquipSuitData* DeityFantasyData::add_equip_suit_data() {
  return equip_suit_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityEquipSuitData >&
DeityFantasyData::equip_suit_data() const {
  return equip_suit_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityEquipSuitData >*
DeityFantasyData::mutable_equip_suit_data() {
  return &equip_suit_data_;
}

// optional .proto_ff.DeityGodHoodData godhood_data = 9;
inline bool DeityFantasyData::has_godhood_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DeityFantasyData::set_has_godhood_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DeityFantasyData::clear_has_godhood_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DeityFantasyData::clear_godhood_data() {
  if (godhood_data_ != NULL) godhood_data_->::proto_ff::DeityGodHoodData::Clear();
  clear_has_godhood_data();
}
inline const ::proto_ff::DeityGodHoodData& DeityFantasyData::godhood_data() const {
  return godhood_data_ != NULL ? *godhood_data_ : *default_instance_->godhood_data_;
}
inline ::proto_ff::DeityGodHoodData* DeityFantasyData::mutable_godhood_data() {
  set_has_godhood_data();
  if (godhood_data_ == NULL) godhood_data_ = new ::proto_ff::DeityGodHoodData;
  return godhood_data_;
}
inline ::proto_ff::DeityGodHoodData* DeityFantasyData::release_godhood_data() {
  clear_has_godhood_data();
  ::proto_ff::DeityGodHoodData* temp = godhood_data_;
  godhood_data_ = NULL;
  return temp;
}
inline void DeityFantasyData::set_allocated_godhood_data(::proto_ff::DeityGodHoodData* godhood_data) {
  delete godhood_data_;
  godhood_data_ = godhood_data;
  if (godhood_data) {
    set_has_godhood_data();
  } else {
    clear_has_godhood_data();
  }
}

// -------------------------------------------------------------------

// DeityFragmentData

// optional uint64 fragment_id = 1;
inline bool DeityFragmentData::has_fragment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityFragmentData::set_has_fragment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityFragmentData::clear_has_fragment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityFragmentData::clear_fragment_id() {
  fragment_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fragment_id();
}
inline ::google::protobuf::uint64 DeityFragmentData::fragment_id() const {
  return fragment_id_;
}
inline void DeityFragmentData::set_fragment_id(::google::protobuf::uint64 value) {
  set_has_fragment_id();
  fragment_id_ = value;
}

// optional uint32 use_times = 2;
inline bool DeityFragmentData::has_use_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityFragmentData::set_has_use_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityFragmentData::clear_has_use_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityFragmentData::clear_use_times() {
  use_times_ = 0u;
  clear_has_use_times();
}
inline ::google::protobuf::uint32 DeityFragmentData::use_times() const {
  return use_times_;
}
inline void DeityFragmentData::set_use_times(::google::protobuf::uint32 value) {
  set_has_use_times();
  use_times_ = value;
}

// -------------------------------------------------------------------

// DeitySkillData

// optional uint64 skill_id = 1;
inline bool DeitySkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeitySkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeitySkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeitySkillData::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 DeitySkillData::skill_id() const {
  return skill_id_;
}
inline void DeitySkillData::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 skill_lev = 2;
inline bool DeitySkillData::has_skill_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeitySkillData::set_has_skill_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeitySkillData::clear_has_skill_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeitySkillData::clear_skill_lev() {
  skill_lev_ = 0u;
  clear_has_skill_lev();
}
inline ::google::protobuf::uint32 DeitySkillData::skill_lev() const {
  return skill_lev_;
}
inline void DeitySkillData::set_skill_lev(::google::protobuf::uint32 value) {
  set_has_skill_lev();
  skill_lev_ = value;
}

// -------------------------------------------------------------------

// DeityBattleSlotData

// optional uint32 id = 1;
inline bool DeityBattleSlotData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityBattleSlotData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityBattleSlotData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityBattleSlotData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DeityBattleSlotData::id() const {
  return id_;
}
inline void DeityBattleSlotData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 cur_state = 2;
inline bool DeityBattleSlotData::has_cur_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityBattleSlotData::set_has_cur_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityBattleSlotData::clear_has_cur_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityBattleSlotData::clear_cur_state() {
  cur_state_ = 0u;
  clear_has_cur_state();
}
inline ::google::protobuf::uint32 DeityBattleSlotData::cur_state() const {
  return cur_state_;
}
inline void DeityBattleSlotData::set_cur_state(::google::protobuf::uint32 value) {
  set_has_cur_state();
  cur_state_ = value;
}

// optional int64 deity_id = 3;
inline bool DeityBattleSlotData::has_deity_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeityBattleSlotData::set_has_deity_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeityBattleSlotData::clear_has_deity_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeityBattleSlotData::clear_deity_id() {
  deity_id_ = GOOGLE_LONGLONG(0);
  clear_has_deity_id();
}
inline ::google::protobuf::int64 DeityBattleSlotData::deity_id() const {
  return deity_id_;
}
inline void DeityBattleSlotData::set_deity_id(::google::protobuf::int64 value) {
  set_has_deity_id();
  deity_id_ = value;
}

// optional int64 enter_war_time = 4;
inline bool DeityBattleSlotData::has_enter_war_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeityBattleSlotData::set_has_enter_war_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeityBattleSlotData::clear_has_enter_war_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeityBattleSlotData::clear_enter_war_time() {
  enter_war_time_ = GOOGLE_LONGLONG(0);
  clear_has_enter_war_time();
}
inline ::google::protobuf::int64 DeityBattleSlotData::enter_war_time() const {
  return enter_war_time_;
}
inline void DeityBattleSlotData::set_enter_war_time(::google::protobuf::int64 value) {
  set_has_enter_war_time();
  enter_war_time_ = value;
}

// -------------------------------------------------------------------

// ArmorSuitState

// optional int32 index = 1;
inline bool ArmorSuitState::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArmorSuitState::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArmorSuitState::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArmorSuitState::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ArmorSuitState::index() const {
  return index_;
}
inline void ArmorSuitState::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 state = 2;
inline bool ArmorSuitState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArmorSuitState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArmorSuitState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArmorSuitState::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ArmorSuitState::state() const {
  return state_;
}
inline void ArmorSuitState::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// ArmorInfo

// optional int32 id = 1;
inline bool ArmorInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArmorInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArmorInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArmorInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ArmorInfo::id() const {
  return id_;
}
inline void ArmorInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.ArmorSuitState suits = 2;
inline int ArmorInfo::suits_size() const {
  return suits_.size();
}
inline void ArmorInfo::clear_suits() {
  suits_.Clear();
}
inline const ::proto_ff::ArmorSuitState& ArmorInfo::suits(int index) const {
  return suits_.Get(index);
}
inline ::proto_ff::ArmorSuitState* ArmorInfo::mutable_suits(int index) {
  return suits_.Mutable(index);
}
inline ::proto_ff::ArmorSuitState* ArmorInfo::add_suits() {
  return suits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArmorSuitState >&
ArmorInfo::suits() const {
  return suits_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArmorSuitState >*
ArmorInfo::mutable_suits() {
  return &suits_;
}

// optional int32 allstate = 3;
inline bool ArmorInfo::has_allstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArmorInfo::set_has_allstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArmorInfo::clear_has_allstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArmorInfo::clear_allstate() {
  allstate_ = 0;
  clear_has_allstate();
}
inline ::google::protobuf::int32 ArmorInfo::allstate() const {
  return allstate_;
}
inline void ArmorInfo::set_allstate(::google::protobuf::int32 value) {
  set_has_allstate();
  allstate_ = value;
}

// repeated int32 pos = 4;
inline int ArmorInfo::pos_size() const {
  return pos_.size();
}
inline void ArmorInfo::clear_pos() {
  pos_.Clear();
}
inline ::google::protobuf::int32 ArmorInfo::pos(int index) const {
  return pos_.Get(index);
}
inline void ArmorInfo::set_pos(int index, ::google::protobuf::int32 value) {
  pos_.Set(index, value);
}
inline void ArmorInfo::add_pos(::google::protobuf::int32 value) {
  pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ArmorInfo::pos() const {
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ArmorInfo::mutable_pos() {
  return &pos_;
}

// -------------------------------------------------------------------

// TitleInfo

// optional int64 title_id = 1;
inline bool TitleInfo::has_title_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleInfo::set_has_title_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleInfo::clear_has_title_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleInfo::clear_title_id() {
  title_id_ = GOOGLE_LONGLONG(0);
  clear_has_title_id();
}
inline ::google::protobuf::int64 TitleInfo::title_id() const {
  return title_id_;
}
inline void TitleInfo::set_title_id(::google::protobuf::int64 value) {
  set_has_title_id();
  title_id_ = value;
}

// optional int32 status = 2;
inline bool TitleInfo::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleInfo::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 TitleInfo::status() const {
  return status_;
}
inline void TitleInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int64 start_time = 3;
inline bool TitleInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TitleInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TitleInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TitleInfo::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 TitleInfo::start_time() const {
  return start_time_;
}
inline void TitleInfo::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional int64 end_time = 4;
inline bool TitleInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TitleInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TitleInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TitleInfo::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 TitleInfo::end_time() const {
  return end_time_;
}
inline void TitleInfo::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional int32 star = 5;
inline bool TitleInfo::has_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TitleInfo::set_has_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TitleInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TitleInfo::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 TitleInfo::star() const {
  return star_;
}
inline void TitleInfo::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// OccupationMissionSoulData

// optional int32 soul_type = 1;
inline bool OccupationMissionSoulData::has_soul_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupationMissionSoulData::set_has_soul_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OccupationMissionSoulData::clear_has_soul_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OccupationMissionSoulData::clear_soul_type() {
  soul_type_ = 0;
  clear_has_soul_type();
}
inline ::google::protobuf::int32 OccupationMissionSoulData::soul_type() const {
  return soul_type_;
}
inline void OccupationMissionSoulData::set_soul_type(::google::protobuf::int32 value) {
  set_has_soul_type();
  soul_type_ = value;
}

// optional int32 soul_pos = 2;
inline bool OccupationMissionSoulData::has_soul_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupationMissionSoulData::set_has_soul_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OccupationMissionSoulData::clear_has_soul_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OccupationMissionSoulData::clear_soul_pos() {
  soul_pos_ = 0;
  clear_has_soul_pos();
}
inline ::google::protobuf::int32 OccupationMissionSoulData::soul_pos() const {
  return soul_pos_;
}
inline void OccupationMissionSoulData::set_soul_pos(::google::protobuf::int32 value) {
  set_has_soul_pos();
  soul_pos_ = value;
}

// optional int32 status = 3;
inline bool OccupationMissionSoulData::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OccupationMissionSoulData::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OccupationMissionSoulData::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OccupationMissionSoulData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OccupationMissionSoulData::status() const {
  return status_;
}
inline void OccupationMissionSoulData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// OccupationMissionStageData

// optional int32 stage = 1;
inline bool OccupationMissionStageData::has_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupationMissionStageData::set_has_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OccupationMissionStageData::clear_has_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OccupationMissionStageData::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 OccupationMissionStageData::stage() const {
  return stage_;
}
inline void OccupationMissionStageData::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// optional int32 status = 2;
inline bool OccupationMissionStageData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupationMissionStageData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OccupationMissionStageData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OccupationMissionStageData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OccupationMissionStageData::status() const {
  return status_;
}
inline void OccupationMissionStageData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated .proto_ff.OccupationMissionSoulData soul_data = 3;
inline int OccupationMissionStageData::soul_data_size() const {
  return soul_data_.size();
}
inline void OccupationMissionStageData::clear_soul_data() {
  soul_data_.Clear();
}
inline const ::proto_ff::OccupationMissionSoulData& OccupationMissionStageData::soul_data(int index) const {
  return soul_data_.Get(index);
}
inline ::proto_ff::OccupationMissionSoulData* OccupationMissionStageData::mutable_soul_data(int index) {
  return soul_data_.Mutable(index);
}
inline ::proto_ff::OccupationMissionSoulData* OccupationMissionStageData::add_soul_data() {
  return soul_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionSoulData >&
OccupationMissionStageData::soul_data() const {
  return soul_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionSoulData >*
OccupationMissionStageData::mutable_soul_data() {
  return &soul_data_;
}

// -------------------------------------------------------------------

// OccupationMissionGradeData

// optional int32 grade = 1;
inline bool OccupationMissionGradeData::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupationMissionGradeData::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OccupationMissionGradeData::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OccupationMissionGradeData::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 OccupationMissionGradeData::grade() const {
  return grade_;
}
inline void OccupationMissionGradeData::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
}

// optional int32 status = 2;
inline bool OccupationMissionGradeData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupationMissionGradeData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OccupationMissionGradeData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OccupationMissionGradeData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OccupationMissionGradeData::status() const {
  return status_;
}
inline void OccupationMissionGradeData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated .proto_ff.OccupationMissionStageData stage_data = 3;
inline int OccupationMissionGradeData::stage_data_size() const {
  return stage_data_.size();
}
inline void OccupationMissionGradeData::clear_stage_data() {
  stage_data_.Clear();
}
inline const ::proto_ff::OccupationMissionStageData& OccupationMissionGradeData::stage_data(int index) const {
  return stage_data_.Get(index);
}
inline ::proto_ff::OccupationMissionStageData* OccupationMissionGradeData::mutable_stage_data(int index) {
  return stage_data_.Mutable(index);
}
inline ::proto_ff::OccupationMissionStageData* OccupationMissionGradeData::add_stage_data() {
  return stage_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionStageData >&
OccupationMissionGradeData::stage_data() const {
  return stage_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionStageData >*
OccupationMissionGradeData::mutable_stage_data() {
  return &stage_data_;
}

// -------------------------------------------------------------------

// OccupationMissionData

// repeated .proto_ff.OccupationMissionGradeData grade_data = 1;
inline int OccupationMissionData::grade_data_size() const {
  return grade_data_.size();
}
inline void OccupationMissionData::clear_grade_data() {
  grade_data_.Clear();
}
inline const ::proto_ff::OccupationMissionGradeData& OccupationMissionData::grade_data(int index) const {
  return grade_data_.Get(index);
}
inline ::proto_ff::OccupationMissionGradeData* OccupationMissionData::mutable_grade_data(int index) {
  return grade_data_.Mutable(index);
}
inline ::proto_ff::OccupationMissionGradeData* OccupationMissionData::add_grade_data() {
  return grade_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionGradeData >&
OccupationMissionData::grade_data() const {
  return grade_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionGradeData >*
OccupationMissionData::mutable_grade_data() {
  return &grade_data_;
}

// -------------------------------------------------------------------

// BestEQEquipInfo

// -------------------------------------------------------------------

// BestEQBreak

// optional int32 lv = 1;
inline bool BestEQBreak::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BestEQBreak::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BestEQBreak::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BestEQBreak::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 BestEQBreak::lv() const {
  return lv_;
}
inline void BestEQBreak::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// repeated int32 exps = 2;
inline int BestEQBreak::exps_size() const {
  return exps_.size();
}
inline void BestEQBreak::clear_exps() {
  exps_.Clear();
}
inline ::google::protobuf::int32 BestEQBreak::exps(int index) const {
  return exps_.Get(index);
}
inline void BestEQBreak::set_exps(int index, ::google::protobuf::int32 value) {
  exps_.Set(index, value);
}
inline void BestEQBreak::add_exps(::google::protobuf::int32 value) {
  exps_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BestEQBreak::exps() const {
  return exps_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BestEQBreak::mutable_exps() {
  return &exps_;
}

// repeated .proto_ff.ComPair genAttr = 3;
inline int BestEQBreak::genattr_size() const {
  return genattr_.size();
}
inline void BestEQBreak::clear_genattr() {
  genattr_.Clear();
}
inline const ::proto_ff::ComPair& BestEQBreak::genattr(int index) const {
  return genattr_.Get(index);
}
inline ::proto_ff::ComPair* BestEQBreak::mutable_genattr(int index) {
  return genattr_.Mutable(index);
}
inline ::proto_ff::ComPair* BestEQBreak::add_genattr() {
  return genattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
BestEQBreak::genattr() const {
  return genattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
BestEQBreak::mutable_genattr() {
  return &genattr_;
}

// -------------------------------------------------------------------

// BestEQSlotInfo

// optional int32 slot = 1;
inline bool BestEQSlotInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BestEQSlotInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BestEQSlotInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BestEQSlotInfo::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 BestEQSlotInfo::slot() const {
  return slot_;
}
inline void BestEQSlotInfo::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// optional int32 pourId = 2;
inline bool BestEQSlotInfo::has_pourid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BestEQSlotInfo::set_has_pourid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BestEQSlotInfo::clear_has_pourid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BestEQSlotInfo::clear_pourid() {
  pourid_ = 0;
  clear_has_pourid();
}
inline ::google::protobuf::int32 BestEQSlotInfo::pourid() const {
  return pourid_;
}
inline void BestEQSlotInfo::set_pourid(::google::protobuf::int32 value) {
  set_has_pourid();
  pourid_ = value;
}

// optional int32 pourExp = 3;
inline bool BestEQSlotInfo::has_pourexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BestEQSlotInfo::set_has_pourexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BestEQSlotInfo::clear_has_pourexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BestEQSlotInfo::clear_pourexp() {
  pourexp_ = 0;
  clear_has_pourexp();
}
inline ::google::protobuf::int32 BestEQSlotInfo::pourexp() const {
  return pourexp_;
}
inline void BestEQSlotInfo::set_pourexp(::google::protobuf::int32 value) {
  set_has_pourexp();
  pourexp_ = value;
}

// optional int32 pourUnLock = 4;
inline bool BestEQSlotInfo::has_pourunlock() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BestEQSlotInfo::set_has_pourunlock() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BestEQSlotInfo::clear_has_pourunlock() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BestEQSlotInfo::clear_pourunlock() {
  pourunlock_ = 0;
  clear_has_pourunlock();
}
inline ::google::protobuf::int32 BestEQSlotInfo::pourunlock() const {
  return pourunlock_;
}
inline void BestEQSlotInfo::set_pourunlock(::google::protobuf::int32 value) {
  set_has_pourunlock();
  pourunlock_ = value;
}

// optional .proto_ff.BestEQBreak breakInfo = 5;
inline bool BestEQSlotInfo::has_breakinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BestEQSlotInfo::set_has_breakinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BestEQSlotInfo::clear_has_breakinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BestEQSlotInfo::clear_breakinfo() {
  if (breakinfo_ != NULL) breakinfo_->::proto_ff::BestEQBreak::Clear();
  clear_has_breakinfo();
}
inline const ::proto_ff::BestEQBreak& BestEQSlotInfo::breakinfo() const {
  return breakinfo_ != NULL ? *breakinfo_ : *default_instance_->breakinfo_;
}
inline ::proto_ff::BestEQBreak* BestEQSlotInfo::mutable_breakinfo() {
  set_has_breakinfo();
  if (breakinfo_ == NULL) breakinfo_ = new ::proto_ff::BestEQBreak;
  return breakinfo_;
}
inline ::proto_ff::BestEQBreak* BestEQSlotInfo::release_breakinfo() {
  clear_has_breakinfo();
  ::proto_ff::BestEQBreak* temp = breakinfo_;
  breakinfo_ = NULL;
  return temp;
}
inline void BestEQSlotInfo::set_allocated_breakinfo(::proto_ff::BestEQBreak* breakinfo) {
  delete breakinfo_;
  breakinfo_ = breakinfo;
  if (breakinfo) {
    set_has_breakinfo();
  } else {
    clear_has_breakinfo();
  }
}

// optional int32 awakenLv = 6;
inline bool BestEQSlotInfo::has_awakenlv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BestEQSlotInfo::set_has_awakenlv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BestEQSlotInfo::clear_has_awakenlv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BestEQSlotInfo::clear_awakenlv() {
  awakenlv_ = 0;
  clear_has_awakenlv();
}
inline ::google::protobuf::int32 BestEQSlotInfo::awakenlv() const {
  return awakenlv_;
}
inline void BestEQSlotInfo::set_awakenlv(::google::protobuf::int32 value) {
  set_has_awakenlv();
  awakenlv_ = value;
}

// optional .proto_ff.ItemProtoInfo dressEquip = 7;
inline bool BestEQSlotInfo::has_dressequip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BestEQSlotInfo::set_has_dressequip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BestEQSlotInfo::clear_has_dressequip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BestEQSlotInfo::clear_dressequip() {
  if (dressequip_ != NULL) dressequip_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_dressequip();
}
inline const ::proto_ff::ItemProtoInfo& BestEQSlotInfo::dressequip() const {
  return dressequip_ != NULL ? *dressequip_ : *default_instance_->dressequip_;
}
inline ::proto_ff::ItemProtoInfo* BestEQSlotInfo::mutable_dressequip() {
  set_has_dressequip();
  if (dressequip_ == NULL) dressequip_ = new ::proto_ff::ItemProtoInfo;
  return dressequip_;
}
inline ::proto_ff::ItemProtoInfo* BestEQSlotInfo::release_dressequip() {
  clear_has_dressequip();
  ::proto_ff::ItemProtoInfo* temp = dressequip_;
  dressequip_ = NULL;
  return temp;
}
inline void BestEQSlotInfo::set_allocated_dressequip(::proto_ff::ItemProtoInfo* dressequip) {
  delete dressequip_;
  dressequip_ = dressequip;
  if (dressequip) {
    set_has_dressequip();
  } else {
    clear_has_dressequip();
  }
}

// -------------------------------------------------------------------

// BestEQTask

// optional int32 id = 1;
inline bool BestEQTask::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BestEQTask::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BestEQTask::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BestEQTask::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BestEQTask::id() const {
  return id_;
}
inline void BestEQTask::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 state = 2;
inline bool BestEQTask::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BestEQTask::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BestEQTask::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BestEQTask::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 BestEQTask::state() const {
  return state_;
}
inline void BestEQTask::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// OneAchievementData

// optional int64 id = 1;
inline bool OneAchievementData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneAchievementData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneAchievementData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneAchievementData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 OneAchievementData::id() const {
  return id_;
}
inline void OneAchievementData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool OneAchievementData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneAchievementData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneAchievementData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneAchievementData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OneAchievementData::status() const {
  return status_;
}
inline void OneAchievementData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 all_num = 3;
inline bool OneAchievementData::has_all_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneAchievementData::set_has_all_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneAchievementData::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneAchievementData::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 OneAchievementData::all_num() const {
  return all_num_;
}
inline void OneAchievementData::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// optional int32 cur_num = 4;
inline bool OneAchievementData::has_cur_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneAchievementData::set_has_cur_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneAchievementData::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneAchievementData::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 OneAchievementData::cur_num() const {
  return cur_num_;
}
inline void OneAchievementData::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// -------------------------------------------------------------------

// OneXiuZhenRoadTaskData

// optional int64 id = 1;
inline bool OneXiuZhenRoadTaskData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneXiuZhenRoadTaskData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneXiuZhenRoadTaskData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneXiuZhenRoadTaskData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 OneXiuZhenRoadTaskData::id() const {
  return id_;
}
inline void OneXiuZhenRoadTaskData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool OneXiuZhenRoadTaskData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneXiuZhenRoadTaskData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneXiuZhenRoadTaskData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneXiuZhenRoadTaskData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OneXiuZhenRoadTaskData::status() const {
  return status_;
}
inline void OneXiuZhenRoadTaskData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 all_num = 3;
inline bool OneXiuZhenRoadTaskData::has_all_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneXiuZhenRoadTaskData::set_has_all_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneXiuZhenRoadTaskData::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneXiuZhenRoadTaskData::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 OneXiuZhenRoadTaskData::all_num() const {
  return all_num_;
}
inline void OneXiuZhenRoadTaskData::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// optional int32 cur_num = 4;
inline bool OneXiuZhenRoadTaskData::has_cur_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneXiuZhenRoadTaskData::set_has_cur_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneXiuZhenRoadTaskData::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneXiuZhenRoadTaskData::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 OneXiuZhenRoadTaskData::cur_num() const {
  return cur_num_;
}
inline void OneXiuZhenRoadTaskData::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// -------------------------------------------------------------------

// OneXiuZhenRoadPointsData

// optional int64 id = 1;
inline bool OneXiuZhenRoadPointsData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneXiuZhenRoadPointsData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneXiuZhenRoadPointsData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneXiuZhenRoadPointsData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 OneXiuZhenRoadPointsData::id() const {
  return id_;
}
inline void OneXiuZhenRoadPointsData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool OneXiuZhenRoadPointsData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneXiuZhenRoadPointsData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneXiuZhenRoadPointsData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneXiuZhenRoadPointsData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OneXiuZhenRoadPointsData::status() const {
  return status_;
}
inline void OneXiuZhenRoadPointsData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// OneXiuZhenRoadRechargeData

// optional int64 id = 1;
inline bool OneXiuZhenRoadRechargeData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneXiuZhenRoadRechargeData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneXiuZhenRoadRechargeData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneXiuZhenRoadRechargeData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 OneXiuZhenRoadRechargeData::id() const {
  return id_;
}
inline void OneXiuZhenRoadRechargeData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool OneXiuZhenRoadRechargeData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneXiuZhenRoadRechargeData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneXiuZhenRoadRechargeData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneXiuZhenRoadRechargeData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OneXiuZhenRoadRechargeData::status() const {
  return status_;
}
inline void OneXiuZhenRoadRechargeData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// OneGoalTaskData

// optional int64 task_id = 1;
inline bool OneGoalTaskData::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneGoalTaskData::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneGoalTaskData::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneGoalTaskData::clear_task_id() {
  task_id_ = GOOGLE_LONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::int64 OneGoalTaskData::task_id() const {
  return task_id_;
}
inline void OneGoalTaskData::set_task_id(::google::protobuf::int64 value) {
  set_has_task_id();
  task_id_ = value;
}

// optional int32 group_id = 2;
inline bool OneGoalTaskData::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneGoalTaskData::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneGoalTaskData::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneGoalTaskData::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
}
inline ::google::protobuf::int32 OneGoalTaskData::group_id() const {
  return group_id_;
}
inline void OneGoalTaskData::set_group_id(::google::protobuf::int32 value) {
  set_has_group_id();
  group_id_ = value;
}

// optional int32 task_status = 3;
inline bool OneGoalTaskData::has_task_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneGoalTaskData::set_has_task_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneGoalTaskData::clear_has_task_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneGoalTaskData::clear_task_status() {
  task_status_ = 0;
  clear_has_task_status();
}
inline ::google::protobuf::int32 OneGoalTaskData::task_status() const {
  return task_status_;
}
inline void OneGoalTaskData::set_task_status(::google::protobuf::int32 value) {
  set_has_task_status();
  task_status_ = value;
}

// optional int32 all_num = 4;
inline bool OneGoalTaskData::has_all_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneGoalTaskData::set_has_all_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneGoalTaskData::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneGoalTaskData::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 OneGoalTaskData::all_num() const {
  return all_num_;
}
inline void OneGoalTaskData::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// optional int32 cur_num = 5;
inline bool OneGoalTaskData::has_cur_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneGoalTaskData::set_has_cur_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneGoalTaskData::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneGoalTaskData::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 OneGoalTaskData::cur_num() const {
  return cur_num_;
}
inline void OneGoalTaskData::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// -------------------------------------------------------------------

// OneGoalData

// optional int64 group_id = 1;
inline bool OneGoalData::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneGoalData::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneGoalData::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneGoalData::clear_group_id() {
  group_id_ = GOOGLE_LONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::int64 OneGoalData::group_id() const {
  return group_id_;
}
inline void OneGoalData::set_group_id(::google::protobuf::int64 value) {
  set_has_group_id();
  group_id_ = value;
}

// optional int32 group_status = 2;
inline bool OneGoalData::has_group_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneGoalData::set_has_group_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneGoalData::clear_has_group_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneGoalData::clear_group_status() {
  group_status_ = 0;
  clear_has_group_status();
}
inline ::google::protobuf::int32 OneGoalData::group_status() const {
  return group_status_;
}
inline void OneGoalData::set_group_status(::google::protobuf::int32 value) {
  set_has_group_status();
  group_status_ = value;
}

// repeated .proto_ff.OneGoalTaskData data = 3;
inline int OneGoalData::data_size() const {
  return data_.size();
}
inline void OneGoalData::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::OneGoalTaskData& OneGoalData::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::OneGoalTaskData* OneGoalData::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::OneGoalTaskData* OneGoalData::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneGoalTaskData >&
OneGoalData::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneGoalTaskData >*
OneGoalData::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// OneBattlePassRewardData

// optional int32 id = 1;
inline bool OneBattlePassRewardData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneBattlePassRewardData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneBattlePassRewardData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneBattlePassRewardData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 OneBattlePassRewardData::id() const {
  return id_;
}
inline void OneBattlePassRewardData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool OneBattlePassRewardData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneBattlePassRewardData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneBattlePassRewardData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneBattlePassRewardData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OneBattlePassRewardData::status() const {
  return status_;
}
inline void OneBattlePassRewardData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 super_status = 3;
inline bool OneBattlePassRewardData::has_super_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneBattlePassRewardData::set_has_super_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneBattlePassRewardData::clear_has_super_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneBattlePassRewardData::clear_super_status() {
  super_status_ = 0;
  clear_has_super_status();
}
inline ::google::protobuf::int32 OneBattlePassRewardData::super_status() const {
  return super_status_;
}
inline void OneBattlePassRewardData::set_super_status(::google::protobuf::int32 value) {
  set_has_super_status();
  super_status_ = value;
}

// -------------------------------------------------------------------

// OneBattlePassTaskData

// optional int64 task_id = 1;
inline bool OneBattlePassTaskData::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneBattlePassTaskData::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneBattlePassTaskData::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneBattlePassTaskData::clear_task_id() {
  task_id_ = GOOGLE_LONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::int64 OneBattlePassTaskData::task_id() const {
  return task_id_;
}
inline void OneBattlePassTaskData::set_task_id(::google::protobuf::int64 value) {
  set_has_task_id();
  task_id_ = value;
}

// optional int32 task_status = 2;
inline bool OneBattlePassTaskData::has_task_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneBattlePassTaskData::set_has_task_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneBattlePassTaskData::clear_has_task_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneBattlePassTaskData::clear_task_status() {
  task_status_ = 0;
  clear_has_task_status();
}
inline ::google::protobuf::int32 OneBattlePassTaskData::task_status() const {
  return task_status_;
}
inline void OneBattlePassTaskData::set_task_status(::google::protobuf::int32 value) {
  set_has_task_status();
  task_status_ = value;
}

// optional int32 cur_num = 3;
inline bool OneBattlePassTaskData::has_cur_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneBattlePassTaskData::set_has_cur_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneBattlePassTaskData::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneBattlePassTaskData::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 OneBattlePassTaskData::cur_num() const {
  return cur_num_;
}
inline void OneBattlePassTaskData::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 all_num = 4;
inline bool OneBattlePassTaskData::has_all_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneBattlePassTaskData::set_has_all_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneBattlePassTaskData::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneBattlePassTaskData::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 OneBattlePassTaskData::all_num() const {
  return all_num_;
}
inline void OneBattlePassTaskData::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// -------------------------------------------------------------------

// OneBattlePassShopData

// optional int32 id = 1;
inline bool OneBattlePassShopData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneBattlePassShopData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneBattlePassShopData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneBattlePassShopData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 OneBattlePassShopData::id() const {
  return id_;
}
inline void OneBattlePassShopData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 cur_num = 3;
inline bool OneBattlePassShopData::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneBattlePassShopData::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneBattlePassShopData::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneBattlePassShopData::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 OneBattlePassShopData::cur_num() const {
  return cur_num_;
}
inline void OneBattlePassShopData::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 all_num = 4;
inline bool OneBattlePassShopData::has_all_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneBattlePassShopData::set_has_all_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneBattlePassShopData::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneBattlePassShopData::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 OneBattlePassShopData::all_num() const {
  return all_num_;
}
inline void OneBattlePassShopData::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// -------------------------------------------------------------------

// OneBattlePassData

// optional int32 id = 1;
inline bool OneBattlePassData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneBattlePassData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneBattlePassData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneBattlePassData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 OneBattlePassData::id() const {
  return id_;
}
inline void OneBattlePassData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 buy_status = 2;
inline bool OneBattlePassData::has_buy_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneBattlePassData::set_has_buy_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneBattlePassData::clear_has_buy_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneBattlePassData::clear_buy_status() {
  buy_status_ = 0;
  clear_has_buy_status();
}
inline ::google::protobuf::int32 OneBattlePassData::buy_status() const {
  return buy_status_;
}
inline void OneBattlePassData::set_buy_status(::google::protobuf::int32 value) {
  set_has_buy_status();
  buy_status_ = value;
}

// optional int32 exp = 3;
inline bool OneBattlePassData::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneBattlePassData::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneBattlePassData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneBattlePassData::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 OneBattlePassData::exp() const {
  return exp_;
}
inline void OneBattlePassData::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 lv = 4;
inline bool OneBattlePassData::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneBattlePassData::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneBattlePassData::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneBattlePassData::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 OneBattlePassData::lv() const {
  return lv_;
}
inline void OneBattlePassData::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// repeated .proto_ff.OneBattlePassRewardData reward = 5;
inline int OneBattlePassData::reward_size() const {
  return reward_.size();
}
inline void OneBattlePassData::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::OneBattlePassRewardData& OneBattlePassData::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::OneBattlePassRewardData* OneBattlePassData::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::OneBattlePassRewardData* OneBattlePassData::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassRewardData >&
OneBattlePassData::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassRewardData >*
OneBattlePassData::mutable_reward() {
  return &reward_;
}

// repeated .proto_ff.OneBattlePassTaskData task = 6;
inline int OneBattlePassData::task_size() const {
  return task_.size();
}
inline void OneBattlePassData::clear_task() {
  task_.Clear();
}
inline const ::proto_ff::OneBattlePassTaskData& OneBattlePassData::task(int index) const {
  return task_.Get(index);
}
inline ::proto_ff::OneBattlePassTaskData* OneBattlePassData::mutable_task(int index) {
  return task_.Mutable(index);
}
inline ::proto_ff::OneBattlePassTaskData* OneBattlePassData::add_task() {
  return task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassTaskData >&
OneBattlePassData::task() const {
  return task_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassTaskData >*
OneBattlePassData::mutable_task() {
  return &task_;
}

// repeated .proto_ff.OneBattlePassShopData shop = 7;
inline int OneBattlePassData::shop_size() const {
  return shop_.size();
}
inline void OneBattlePassData::clear_shop() {
  shop_.Clear();
}
inline const ::proto_ff::OneBattlePassShopData& OneBattlePassData::shop(int index) const {
  return shop_.Get(index);
}
inline ::proto_ff::OneBattlePassShopData* OneBattlePassData::mutable_shop(int index) {
  return shop_.Mutable(index);
}
inline ::proto_ff::OneBattlePassShopData* OneBattlePassData::add_shop() {
  return shop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassShopData >&
OneBattlePassData::shop() const {
  return shop_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneBattlePassShopData >*
OneBattlePassData::mutable_shop() {
  return &shop_;
}

// -------------------------------------------------------------------

// BattlePassData

// optional .proto_ff.OneBattlePassData xian_ce = 1;
inline bool BattlePassData::has_xian_ce() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattlePassData::set_has_xian_ce() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattlePassData::clear_has_xian_ce() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattlePassData::clear_xian_ce() {
  if (xian_ce_ != NULL) xian_ce_->::proto_ff::OneBattlePassData::Clear();
  clear_has_xian_ce();
}
inline const ::proto_ff::OneBattlePassData& BattlePassData::xian_ce() const {
  return xian_ce_ != NULL ? *xian_ce_ : *default_instance_->xian_ce_;
}
inline ::proto_ff::OneBattlePassData* BattlePassData::mutable_xian_ce() {
  set_has_xian_ce();
  if (xian_ce_ == NULL) xian_ce_ = new ::proto_ff::OneBattlePassData;
  return xian_ce_;
}
inline ::proto_ff::OneBattlePassData* BattlePassData::release_xian_ce() {
  clear_has_xian_ce();
  ::proto_ff::OneBattlePassData* temp = xian_ce_;
  xian_ce_ = NULL;
  return temp;
}
inline void BattlePassData::set_allocated_xian_ce(::proto_ff::OneBattlePassData* xian_ce) {
  delete xian_ce_;
  xian_ce_ = xian_ce;
  if (xian_ce) {
    set_has_xian_ce();
  } else {
    clear_has_xian_ce();
  }
}

// optional .proto_ff.OneBattlePassData bao_ding = 2;
inline bool BattlePassData::has_bao_ding() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattlePassData::set_has_bao_ding() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattlePassData::clear_has_bao_ding() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattlePassData::clear_bao_ding() {
  if (bao_ding_ != NULL) bao_ding_->::proto_ff::OneBattlePassData::Clear();
  clear_has_bao_ding();
}
inline const ::proto_ff::OneBattlePassData& BattlePassData::bao_ding() const {
  return bao_ding_ != NULL ? *bao_ding_ : *default_instance_->bao_ding_;
}
inline ::proto_ff::OneBattlePassData* BattlePassData::mutable_bao_ding() {
  set_has_bao_ding();
  if (bao_ding_ == NULL) bao_ding_ = new ::proto_ff::OneBattlePassData;
  return bao_ding_;
}
inline ::proto_ff::OneBattlePassData* BattlePassData::release_bao_ding() {
  clear_has_bao_ding();
  ::proto_ff::OneBattlePassData* temp = bao_ding_;
  bao_ding_ = NULL;
  return temp;
}
inline void BattlePassData::set_allocated_bao_ding(::proto_ff::OneBattlePassData* bao_ding) {
  delete bao_ding_;
  bao_ding_ = bao_ding;
  if (bao_ding) {
    set_has_bao_ding();
  } else {
    clear_has_bao_ding();
  }
}

// optional uint64 flush_time = 3;
inline bool BattlePassData::has_flush_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattlePassData::set_has_flush_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattlePassData::clear_has_flush_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattlePassData::clear_flush_time() {
  flush_time_ = GOOGLE_ULONGLONG(0);
  clear_has_flush_time();
}
inline ::google::protobuf::uint64 BattlePassData::flush_time() const {
  return flush_time_;
}
inline void BattlePassData::set_flush_time(::google::protobuf::uint64 value) {
  set_has_flush_time();
  flush_time_ = value;
}

// -------------------------------------------------------------------

// AchievementData

// optional uint64 ach_point = 1;
inline bool AchievementData::has_ach_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AchievementData::set_has_ach_point() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AchievementData::clear_has_ach_point() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AchievementData::clear_ach_point() {
  ach_point_ = GOOGLE_ULONGLONG(0);
  clear_has_ach_point();
}
inline ::google::protobuf::uint64 AchievementData::ach_point() const {
  return ach_point_;
}
inline void AchievementData::set_ach_point(::google::protobuf::uint64 value) {
  set_has_ach_point();
  ach_point_ = value;
}

// repeated .proto_ff.OneAchievementData ach_data = 2;
inline int AchievementData::ach_data_size() const {
  return ach_data_.size();
}
inline void AchievementData::clear_ach_data() {
  ach_data_.Clear();
}
inline const ::proto_ff::OneAchievementData& AchievementData::ach_data(int index) const {
  return ach_data_.Get(index);
}
inline ::proto_ff::OneAchievementData* AchievementData::mutable_ach_data(int index) {
  return ach_data_.Mutable(index);
}
inline ::proto_ff::OneAchievementData* AchievementData::add_ach_data() {
  return ach_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneAchievementData >&
AchievementData::ach_data() const {
  return ach_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneAchievementData >*
AchievementData::mutable_ach_data() {
  return &ach_data_;
}

// repeated .proto_ff.OneAchievementData ach_total_data = 3;
inline int AchievementData::ach_total_data_size() const {
  return ach_total_data_.size();
}
inline void AchievementData::clear_ach_total_data() {
  ach_total_data_.Clear();
}
inline const ::proto_ff::OneAchievementData& AchievementData::ach_total_data(int index) const {
  return ach_total_data_.Get(index);
}
inline ::proto_ff::OneAchievementData* AchievementData::mutable_ach_total_data(int index) {
  return ach_total_data_.Mutable(index);
}
inline ::proto_ff::OneAchievementData* AchievementData::add_ach_total_data() {
  return ach_total_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneAchievementData >&
AchievementData::ach_total_data() const {
  return ach_total_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneAchievementData >*
AchievementData::mutable_ach_total_data() {
  return &ach_total_data_;
}

// repeated .proto_ff.OneXiuZhenRoadTaskData xiuzhenroad_data = 4;
inline int AchievementData::xiuzhenroad_data_size() const {
  return xiuzhenroad_data_.size();
}
inline void AchievementData::clear_xiuzhenroad_data() {
  xiuzhenroad_data_.Clear();
}
inline const ::proto_ff::OneXiuZhenRoadTaskData& AchievementData::xiuzhenroad_data(int index) const {
  return xiuzhenroad_data_.Get(index);
}
inline ::proto_ff::OneXiuZhenRoadTaskData* AchievementData::mutable_xiuzhenroad_data(int index) {
  return xiuzhenroad_data_.Mutable(index);
}
inline ::proto_ff::OneXiuZhenRoadTaskData* AchievementData::add_xiuzhenroad_data() {
  return xiuzhenroad_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadTaskData >&
AchievementData::xiuzhenroad_data() const {
  return xiuzhenroad_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadTaskData >*
AchievementData::mutable_xiuzhenroad_data() {
  return &xiuzhenroad_data_;
}

// optional uint64 xiuezhenroad_point = 5;
inline bool AchievementData::has_xiuezhenroad_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AchievementData::set_has_xiuezhenroad_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AchievementData::clear_has_xiuezhenroad_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AchievementData::clear_xiuezhenroad_point() {
  xiuezhenroad_point_ = GOOGLE_ULONGLONG(0);
  clear_has_xiuezhenroad_point();
}
inline ::google::protobuf::uint64 AchievementData::xiuezhenroad_point() const {
  return xiuezhenroad_point_;
}
inline void AchievementData::set_xiuezhenroad_point(::google::protobuf::uint64 value) {
  set_has_xiuezhenroad_point();
  xiuezhenroad_point_ = value;
}

// repeated .proto_ff.OneXiuZhenRoadPointsData xiuzhenroad_points_data = 6;
inline int AchievementData::xiuzhenroad_points_data_size() const {
  return xiuzhenroad_points_data_.size();
}
inline void AchievementData::clear_xiuzhenroad_points_data() {
  xiuzhenroad_points_data_.Clear();
}
inline const ::proto_ff::OneXiuZhenRoadPointsData& AchievementData::xiuzhenroad_points_data(int index) const {
  return xiuzhenroad_points_data_.Get(index);
}
inline ::proto_ff::OneXiuZhenRoadPointsData* AchievementData::mutable_xiuzhenroad_points_data(int index) {
  return xiuzhenroad_points_data_.Mutable(index);
}
inline ::proto_ff::OneXiuZhenRoadPointsData* AchievementData::add_xiuzhenroad_points_data() {
  return xiuzhenroad_points_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadPointsData >&
AchievementData::xiuzhenroad_points_data() const {
  return xiuzhenroad_points_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadPointsData >*
AchievementData::mutable_xiuzhenroad_points_data() {
  return &xiuzhenroad_points_data_;
}

// repeated .proto_ff.OneXiuZhenRoadRechargeData xiuzheroad_recharge_data = 7;
inline int AchievementData::xiuzheroad_recharge_data_size() const {
  return xiuzheroad_recharge_data_.size();
}
inline void AchievementData::clear_xiuzheroad_recharge_data() {
  xiuzheroad_recharge_data_.Clear();
}
inline const ::proto_ff::OneXiuZhenRoadRechargeData& AchievementData::xiuzheroad_recharge_data(int index) const {
  return xiuzheroad_recharge_data_.Get(index);
}
inline ::proto_ff::OneXiuZhenRoadRechargeData* AchievementData::mutable_xiuzheroad_recharge_data(int index) {
  return xiuzheroad_recharge_data_.Mutable(index);
}
inline ::proto_ff::OneXiuZhenRoadRechargeData* AchievementData::add_xiuzheroad_recharge_data() {
  return xiuzheroad_recharge_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadRechargeData >&
AchievementData::xiuzheroad_recharge_data() const {
  return xiuzheroad_recharge_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneXiuZhenRoadRechargeData >*
AchievementData::mutable_xiuzheroad_recharge_data() {
  return &xiuzheroad_recharge_data_;
}

// optional uint64 xiuzhenroad_open_time = 8;
inline bool AchievementData::has_xiuzhenroad_open_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AchievementData::set_has_xiuzhenroad_open_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AchievementData::clear_has_xiuzhenroad_open_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AchievementData::clear_xiuzhenroad_open_time() {
  xiuzhenroad_open_time_ = GOOGLE_ULONGLONG(0);
  clear_has_xiuzhenroad_open_time();
}
inline ::google::protobuf::uint64 AchievementData::xiuzhenroad_open_time() const {
  return xiuzhenroad_open_time_;
}
inline void AchievementData::set_xiuzhenroad_open_time(::google::protobuf::uint64 value) {
  set_has_xiuzhenroad_open_time();
  xiuzhenroad_open_time_ = value;
}

// optional uint32 xiuzhenroad_back_status = 9;
inline bool AchievementData::has_xiuzhenroad_back_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AchievementData::set_has_xiuzhenroad_back_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AchievementData::clear_has_xiuzhenroad_back_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AchievementData::clear_xiuzhenroad_back_status() {
  xiuzhenroad_back_status_ = 0u;
  clear_has_xiuzhenroad_back_status();
}
inline ::google::protobuf::uint32 AchievementData::xiuzhenroad_back_status() const {
  return xiuzhenroad_back_status_;
}
inline void AchievementData::set_xiuzhenroad_back_status(::google::protobuf::uint32 value) {
  set_has_xiuzhenroad_back_status();
  xiuzhenroad_back_status_ = value;
}

// repeated .proto_ff.OneGoalData goal_data = 10;
inline int AchievementData::goal_data_size() const {
  return goal_data_.size();
}
inline void AchievementData::clear_goal_data() {
  goal_data_.Clear();
}
inline const ::proto_ff::OneGoalData& AchievementData::goal_data(int index) const {
  return goal_data_.Get(index);
}
inline ::proto_ff::OneGoalData* AchievementData::mutable_goal_data(int index) {
  return goal_data_.Mutable(index);
}
inline ::proto_ff::OneGoalData* AchievementData::add_goal_data() {
  return goal_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneGoalData >&
AchievementData::goal_data() const {
  return goal_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneGoalData >*
AchievementData::mutable_goal_data() {
  return &goal_data_;
}

// optional .proto_ff.BattlePassData battle_pass = 11;
inline bool AchievementData::has_battle_pass() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AchievementData::set_has_battle_pass() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AchievementData::clear_has_battle_pass() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AchievementData::clear_battle_pass() {
  if (battle_pass_ != NULL) battle_pass_->::proto_ff::BattlePassData::Clear();
  clear_has_battle_pass();
}
inline const ::proto_ff::BattlePassData& AchievementData::battle_pass() const {
  return battle_pass_ != NULL ? *battle_pass_ : *default_instance_->battle_pass_;
}
inline ::proto_ff::BattlePassData* AchievementData::mutable_battle_pass() {
  set_has_battle_pass();
  if (battle_pass_ == NULL) battle_pass_ = new ::proto_ff::BattlePassData;
  return battle_pass_;
}
inline ::proto_ff::BattlePassData* AchievementData::release_battle_pass() {
  clear_has_battle_pass();
  ::proto_ff::BattlePassData* temp = battle_pass_;
  battle_pass_ = NULL;
  return temp;
}
inline void AchievementData::set_allocated_battle_pass(::proto_ff::BattlePassData* battle_pass) {
  delete battle_pass_;
  battle_pass_ = battle_pass;
  if (battle_pass) {
    set_has_battle_pass();
  } else {
    clear_has_battle_pass();
  }
}

// -------------------------------------------------------------------

// PTGBEventItem

// required uint64 id = 1;
inline bool PTGBEventItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PTGBEventItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PTGBEventItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PTGBEventItem::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 PTGBEventItem::id() const {
  return id_;
}
inline void PTGBEventItem::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// required uint64 num = 2;
inline bool PTGBEventItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PTGBEventItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PTGBEventItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PTGBEventItem::clear_num() {
  num_ = GOOGLE_ULONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::uint64 PTGBEventItem::num() const {
  return num_;
}
inline void PTGBEventItem::set_num(::google::protobuf::uint64 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// PTGBEventLog

// required uint64 evtId = 1;
inline bool PTGBEventLog::has_evtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PTGBEventLog::set_has_evtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PTGBEventLog::clear_has_evtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PTGBEventLog::clear_evtid() {
  evtid_ = GOOGLE_ULONGLONG(0);
  clear_has_evtid();
}
inline ::google::protobuf::uint64 PTGBEventLog::evtid() const {
  return evtid_;
}
inline void PTGBEventLog::set_evtid(::google::protobuf::uint64 value) {
  set_has_evtid();
  evtid_ = value;
}

// required uint64 time = 2;
inline bool PTGBEventLog::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PTGBEventLog::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PTGBEventLog::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PTGBEventLog::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 PTGBEventLog::time() const {
  return time_;
}
inline void PTGBEventLog::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// required uint64 energyAdd = 3;
inline bool PTGBEventLog::has_energyadd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PTGBEventLog::set_has_energyadd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PTGBEventLog::clear_has_energyadd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PTGBEventLog::clear_energyadd() {
  energyadd_ = GOOGLE_ULONGLONG(0);
  clear_has_energyadd();
}
inline ::google::protobuf::uint64 PTGBEventLog::energyadd() const {
  return energyadd_;
}
inline void PTGBEventLog::set_energyadd(::google::protobuf::uint64 value) {
  set_has_energyadd();
  energyadd_ = value;
}

// repeated .proto_ff.PTGBEventItem items = 4;
inline int PTGBEventLog::items_size() const {
  return items_.size();
}
inline void PTGBEventLog::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::PTGBEventItem& PTGBEventLog::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::PTGBEventItem* PTGBEventLog::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::PTGBEventItem* PTGBEventLog::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventItem >&
PTGBEventLog::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventItem >*
PTGBEventLog::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// PTFuncMagic

// required bool actived = 1;
inline bool PTFuncMagic::has_actived() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PTFuncMagic::set_has_actived() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PTFuncMagic::clear_has_actived() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PTFuncMagic::clear_actived() {
  actived_ = false;
  clear_has_actived();
}
inline bool PTFuncMagic::actived() const {
  return actived_;
}
inline void PTFuncMagic::set_actived(bool value) {
  set_has_actived();
  actived_ = value;
}

// required uint32 lvl = 2;
inline bool PTFuncMagic::has_lvl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PTFuncMagic::set_has_lvl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PTFuncMagic::clear_has_lvl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PTFuncMagic::clear_lvl() {
  lvl_ = 0u;
  clear_has_lvl();
}
inline ::google::protobuf::uint32 PTFuncMagic::lvl() const {
  return lvl_;
}
inline void PTFuncMagic::set_lvl(::google::protobuf::uint32 value) {
  set_has_lvl();
  lvl_ = value;
}

// required uint32 stage = 3;
inline bool PTFuncMagic::has_stage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PTFuncMagic::set_has_stage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PTFuncMagic::clear_has_stage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PTFuncMagic::clear_stage() {
  stage_ = 0u;
  clear_has_stage();
}
inline ::google::protobuf::uint32 PTFuncMagic::stage() const {
  return stage_;
}
inline void PTFuncMagic::set_stage(::google::protobuf::uint32 value) {
  set_has_stage();
  stage_ = value;
}

// -------------------------------------------------------------------

// PTlg

// required uint32 lvl = 1;
inline bool PTlg::has_lvl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PTlg::set_has_lvl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PTlg::clear_has_lvl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PTlg::clear_lvl() {
  lvl_ = 0u;
  clear_has_lvl();
}
inline ::google::protobuf::uint32 PTlg::lvl() const {
  return lvl_;
}
inline void PTlg::set_lvl(::google::protobuf::uint32 value) {
  set_has_lvl();
  lvl_ = value;
}

// required uint32 points = 2;
inline bool PTlg::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PTlg::set_has_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PTlg::clear_has_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PTlg::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 PTlg::points() const {
  return points_;
}
inline void PTlg::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
}

// -------------------------------------------------------------------

// PTlgPotion

// required uint32 id = 1;
inline bool PTlgPotion::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PTlgPotion::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PTlgPotion::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PTlgPotion::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PTlgPotion::id() const {
  return id_;
}
inline void PTlgPotion::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 eatCount = 2;
inline bool PTlgPotion::has_eatcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PTlgPotion::set_has_eatcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PTlgPotion::clear_has_eatcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PTlgPotion::clear_eatcount() {
  eatcount_ = 0u;
  clear_has_eatcount();
}
inline ::google::protobuf::uint32 PTlgPotion::eatcount() const {
  return eatcount_;
}
inline void PTlgPotion::set_eatcount(::google::protobuf::uint32 value) {
  set_has_eatcount();
  eatcount_ = value;
}

// -------------------------------------------------------------------

// PTjm

// required uint32 lvl = 1;
inline bool PTjm::has_lvl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PTjm::set_has_lvl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PTjm::clear_has_lvl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PTjm::clear_lvl() {
  lvl_ = 0u;
  clear_has_lvl();
}
inline ::google::protobuf::uint32 PTjm::lvl() const {
  return lvl_;
}
inline void PTjm::set_lvl(::google::protobuf::uint32 value) {
  set_has_lvl();
  lvl_ = value;
}

// required uint32 stage = 2;
inline bool PTjm::has_stage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PTjm::set_has_stage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PTjm::clear_has_stage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PTjm::clear_stage() {
  stage_ = 0u;
  clear_has_stage();
}
inline ::google::protobuf::uint32 PTjm::stage() const {
  return stage_;
}
inline void PTjm::set_stage(::google::protobuf::uint32 value) {
  set_has_stage();
  stage_ = value;
}

// -------------------------------------------------------------------

// PTPurchaseRecord

// required uint32 id = 1;
inline bool PTPurchaseRecord::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PTPurchaseRecord::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PTPurchaseRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PTPurchaseRecord::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PTPurchaseRecord::id() const {
  return id_;
}
inline void PTPurchaseRecord::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint64 time = 2;
inline bool PTPurchaseRecord::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PTPurchaseRecord::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PTPurchaseRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PTPurchaseRecord::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 PTPurchaseRecord::time() const {
  return time_;
}
inline void PTPurchaseRecord::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PracticeTrueDBData

// optional uint32 level = 1;
inline bool PracticeTrueDBData::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PracticeTrueDBData::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PracticeTrueDBData::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PracticeTrueDBData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::level() const {
  return level_;
}
inline void PracticeTrueDBData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 djRateAdd = 2;
inline bool PracticeTrueDBData::has_djrateadd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PracticeTrueDBData::set_has_djrateadd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PracticeTrueDBData::clear_has_djrateadd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PracticeTrueDBData::clear_djrateadd() {
  djrateadd_ = 0u;
  clear_has_djrateadd();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::djrateadd() const {
  return djrateadd_;
}
inline void PracticeTrueDBData::set_djrateadd(::google::protobuf::uint32 value) {
  set_has_djrateadd();
  djrateadd_ = value;
}

// optional uint32 djFailInvigoration = 3;
inline bool PracticeTrueDBData::has_djfailinvigoration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PracticeTrueDBData::set_has_djfailinvigoration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PracticeTrueDBData::clear_has_djfailinvigoration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PracticeTrueDBData::clear_djfailinvigoration() {
  djfailinvigoration_ = 0u;
  clear_has_djfailinvigoration();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::djfailinvigoration() const {
  return djfailinvigoration_;
}
inline void PracticeTrueDBData::set_djfailinvigoration(::google::protobuf::uint32 value) {
  set_has_djfailinvigoration();
  djfailinvigoration_ = value;
}

// optional uint64 gbEnergy = 4;
inline bool PracticeTrueDBData::has_gbenergy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PracticeTrueDBData::set_has_gbenergy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PracticeTrueDBData::clear_has_gbenergy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PracticeTrueDBData::clear_gbenergy() {
  gbenergy_ = GOOGLE_ULONGLONG(0);
  clear_has_gbenergy();
}
inline ::google::protobuf::uint64 PracticeTrueDBData::gbenergy() const {
  return gbenergy_;
}
inline void PracticeTrueDBData::set_gbenergy(::google::protobuf::uint64 value) {
  set_has_gbenergy();
  gbenergy_ = value;
}

// optional uint32 gbEventRate = 5;
inline bool PracticeTrueDBData::has_gbeventrate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PracticeTrueDBData::set_has_gbeventrate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PracticeTrueDBData::clear_has_gbeventrate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PracticeTrueDBData::clear_gbeventrate() {
  gbeventrate_ = 0u;
  clear_has_gbeventrate();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::gbeventrate() const {
  return gbeventrate_;
}
inline void PracticeTrueDBData::set_gbeventrate(::google::protobuf::uint32 value) {
  set_has_gbeventrate();
  gbeventrate_ = value;
}

// optional uint32 gbEnergyCritRate = 6;
inline bool PracticeTrueDBData::has_gbenergycritrate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PracticeTrueDBData::set_has_gbenergycritrate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PracticeTrueDBData::clear_has_gbenergycritrate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PracticeTrueDBData::clear_gbenergycritrate() {
  gbenergycritrate_ = 0u;
  clear_has_gbenergycritrate();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::gbenergycritrate() const {
  return gbenergycritrate_;
}
inline void PracticeTrueDBData::set_gbenergycritrate(::google::protobuf::uint32 value) {
  set_has_gbenergycritrate();
  gbenergycritrate_ = value;
}

// optional uint32 gbLevel = 7;
inline bool PracticeTrueDBData::has_gblevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PracticeTrueDBData::set_has_gblevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PracticeTrueDBData::clear_has_gblevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PracticeTrueDBData::clear_gblevel() {
  gblevel_ = 0u;
  clear_has_gblevel();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::gblevel() const {
  return gblevel_;
}
inline void PracticeTrueDBData::set_gblevel(::google::protobuf::uint32 value) {
  set_has_gblevel();
  gblevel_ = value;
}

// optional uint32 gbArea = 8;
inline bool PracticeTrueDBData::has_gbarea() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PracticeTrueDBData::set_has_gbarea() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PracticeTrueDBData::clear_has_gbarea() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PracticeTrueDBData::clear_gbarea() {
  gbarea_ = 0u;
  clear_has_gbarea();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::gbarea() const {
  return gbarea_;
}
inline void PracticeTrueDBData::set_gbarea(::google::protobuf::uint32 value) {
  set_has_gbarea();
  gbarea_ = value;
}

// repeated .proto_ff.PTGBEventLog gbEventsLog = 9;
inline int PracticeTrueDBData::gbeventslog_size() const {
  return gbeventslog_.size();
}
inline void PracticeTrueDBData::clear_gbeventslog() {
  gbeventslog_.Clear();
}
inline const ::proto_ff::PTGBEventLog& PracticeTrueDBData::gbeventslog(int index) const {
  return gbeventslog_.Get(index);
}
inline ::proto_ff::PTGBEventLog* PracticeTrueDBData::mutable_gbeventslog(int index) {
  return gbeventslog_.Mutable(index);
}
inline ::proto_ff::PTGBEventLog* PracticeTrueDBData::add_gbeventslog() {
  return gbeventslog_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventLog >&
PracticeTrueDBData::gbeventslog() const {
  return gbeventslog_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventLog >*
PracticeTrueDBData::mutable_gbeventslog() {
  return &gbeventslog_;
}

// repeated .proto_ff.PTGBEventItem gbEventItems = 10;
inline int PracticeTrueDBData::gbeventitems_size() const {
  return gbeventitems_.size();
}
inline void PracticeTrueDBData::clear_gbeventitems() {
  gbeventitems_.Clear();
}
inline const ::proto_ff::PTGBEventItem& PracticeTrueDBData::gbeventitems(int index) const {
  return gbeventitems_.Get(index);
}
inline ::proto_ff::PTGBEventItem* PracticeTrueDBData::mutable_gbeventitems(int index) {
  return gbeventitems_.Mutable(index);
}
inline ::proto_ff::PTGBEventItem* PracticeTrueDBData::add_gbeventitems() {
  return gbeventitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventItem >&
PracticeTrueDBData::gbeventitems() const {
  return gbeventitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTGBEventItem >*
PracticeTrueDBData::mutable_gbeventitems() {
  return &gbeventitems_;
}

// optional uint64 gbXLRemainTime = 11;
inline bool PracticeTrueDBData::has_gbxlremaintime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PracticeTrueDBData::set_has_gbxlremaintime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PracticeTrueDBData::clear_has_gbxlremaintime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PracticeTrueDBData::clear_gbxlremaintime() {
  gbxlremaintime_ = GOOGLE_ULONGLONG(0);
  clear_has_gbxlremaintime();
}
inline ::google::protobuf::uint64 PracticeTrueDBData::gbxlremaintime() const {
  return gbxlremaintime_;
}
inline void PracticeTrueDBData::set_gbxlremaintime(::google::protobuf::uint64 value) {
  set_has_gbxlremaintime();
  gbxlremaintime_ = value;
}

// optional uint32 ebLevel = 12;
inline bool PracticeTrueDBData::has_eblevel() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PracticeTrueDBData::set_has_eblevel() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PracticeTrueDBData::clear_has_eblevel() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PracticeTrueDBData::clear_eblevel() {
  eblevel_ = 0u;
  clear_has_eblevel();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::eblevel() const {
  return eblevel_;
}
inline void PracticeTrueDBData::set_eblevel(::google::protobuf::uint32 value) {
  set_has_eblevel();
  eblevel_ = value;
}

// optional uint32 ebLvlUpRate = 13;
inline bool PracticeTrueDBData::has_eblvluprate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PracticeTrueDBData::set_has_eblvluprate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PracticeTrueDBData::clear_has_eblvluprate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PracticeTrueDBData::clear_eblvluprate() {
  eblvluprate_ = 0u;
  clear_has_eblvluprate();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::eblvluprate() const {
  return eblvluprate_;
}
inline void PracticeTrueDBData::set_eblvluprate(::google::protobuf::uint32 value) {
  set_has_eblvluprate();
  eblvluprate_ = value;
}

// repeated .proto_ff.PTFuncMagic gfList = 14;
inline int PracticeTrueDBData::gflist_size() const {
  return gflist_.size();
}
inline void PracticeTrueDBData::clear_gflist() {
  gflist_.Clear();
}
inline const ::proto_ff::PTFuncMagic& PracticeTrueDBData::gflist(int index) const {
  return gflist_.Get(index);
}
inline ::proto_ff::PTFuncMagic* PracticeTrueDBData::mutable_gflist(int index) {
  return gflist_.Mutable(index);
}
inline ::proto_ff::PTFuncMagic* PracticeTrueDBData::add_gflist() {
  return gflist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTFuncMagic >&
PracticeTrueDBData::gflist() const {
  return gflist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTFuncMagic >*
PracticeTrueDBData::mutable_gflist() {
  return &gflist_;
}

// optional uint32 ebFlyRateAdd = 15;
inline bool PracticeTrueDBData::has_ebflyrateadd() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PracticeTrueDBData::set_has_ebflyrateadd() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PracticeTrueDBData::clear_has_ebflyrateadd() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PracticeTrueDBData::clear_ebflyrateadd() {
  ebflyrateadd_ = 0u;
  clear_has_ebflyrateadd();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::ebflyrateadd() const {
  return ebflyrateadd_;
}
inline void PracticeTrueDBData::set_ebflyrateadd(::google::protobuf::uint32 value) {
  set_has_ebflyrateadd();
  ebflyrateadd_ = value;
}

// optional uint32 ebFlyFailInvigoration = 16;
inline bool PracticeTrueDBData::has_ebflyfailinvigoration() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PracticeTrueDBData::set_has_ebflyfailinvigoration() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PracticeTrueDBData::clear_has_ebflyfailinvigoration() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PracticeTrueDBData::clear_ebflyfailinvigoration() {
  ebflyfailinvigoration_ = 0u;
  clear_has_ebflyfailinvigoration();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::ebflyfailinvigoration() const {
  return ebflyfailinvigoration_;
}
inline void PracticeTrueDBData::set_ebflyfailinvigoration(::google::protobuf::uint32 value) {
  set_has_ebflyfailinvigoration();
  ebflyfailinvigoration_ = value;
}

// repeated .proto_ff.PTlg lgList = 17;
inline int PracticeTrueDBData::lglist_size() const {
  return lglist_.size();
}
inline void PracticeTrueDBData::clear_lglist() {
  lglist_.Clear();
}
inline const ::proto_ff::PTlg& PracticeTrueDBData::lglist(int index) const {
  return lglist_.Get(index);
}
inline ::proto_ff::PTlg* PracticeTrueDBData::mutable_lglist(int index) {
  return lglist_.Mutable(index);
}
inline ::proto_ff::PTlg* PracticeTrueDBData::add_lglist() {
  return lglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTlg >&
PracticeTrueDBData::lglist() const {
  return lglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTlg >*
PracticeTrueDBData::mutable_lglist() {
  return &lglist_;
}

// repeated .proto_ff.PTlgPotion lgPotions = 18;
inline int PracticeTrueDBData::lgpotions_size() const {
  return lgpotions_.size();
}
inline void PracticeTrueDBData::clear_lgpotions() {
  lgpotions_.Clear();
}
inline const ::proto_ff::PTlgPotion& PracticeTrueDBData::lgpotions(int index) const {
  return lgpotions_.Get(index);
}
inline ::proto_ff::PTlgPotion* PracticeTrueDBData::mutable_lgpotions(int index) {
  return lgpotions_.Mutable(index);
}
inline ::proto_ff::PTlgPotion* PracticeTrueDBData::add_lgpotions() {
  return lgpotions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTlgPotion >&
PracticeTrueDBData::lgpotions() const {
  return lgpotions_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTlgPotion >*
PracticeTrueDBData::mutable_lgpotions() {
  return &lgpotions_;
}

// repeated .proto_ff.PTjm jmList = 19;
inline int PracticeTrueDBData::jmlist_size() const {
  return jmlist_.size();
}
inline void PracticeTrueDBData::clear_jmlist() {
  jmlist_.Clear();
}
inline const ::proto_ff::PTjm& PracticeTrueDBData::jmlist(int index) const {
  return jmlist_.Get(index);
}
inline ::proto_ff::PTjm* PracticeTrueDBData::mutable_jmlist(int index) {
  return jmlist_.Mutable(index);
}
inline ::proto_ff::PTjm* PracticeTrueDBData::add_jmlist() {
  return jmlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTjm >&
PracticeTrueDBData::jmlist() const {
  return jmlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTjm >*
PracticeTrueDBData::mutable_jmlist() {
  return &jmlist_;
}

// optional uint32 jmLvlUpRateAdd = 20;
inline bool PracticeTrueDBData::has_jmlvluprateadd() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PracticeTrueDBData::set_has_jmlvluprateadd() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PracticeTrueDBData::clear_has_jmlvluprateadd() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PracticeTrueDBData::clear_jmlvluprateadd() {
  jmlvluprateadd_ = 0u;
  clear_has_jmlvluprateadd();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::jmlvluprateadd() const {
  return jmlvluprateadd_;
}
inline void PracticeTrueDBData::set_jmlvluprateadd(::google::protobuf::uint32 value) {
  set_has_jmlvluprateadd();
  jmlvluprateadd_ = value;
}

// optional uint32 jmStageUpRateAdd = 21;
inline bool PracticeTrueDBData::has_jmstageuprateadd() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PracticeTrueDBData::set_has_jmstageuprateadd() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PracticeTrueDBData::clear_has_jmstageuprateadd() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PracticeTrueDBData::clear_jmstageuprateadd() {
  jmstageuprateadd_ = 0u;
  clear_has_jmstageuprateadd();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::jmstageuprateadd() const {
  return jmstageuprateadd_;
}
inline void PracticeTrueDBData::set_jmstageuprateadd(::google::protobuf::uint32 value) {
  set_has_jmstageuprateadd();
  jmstageuprateadd_ = value;
}

// optional uint32 jmStageUpFailInvigoration = 22;
inline bool PracticeTrueDBData::has_jmstageupfailinvigoration() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PracticeTrueDBData::set_has_jmstageupfailinvigoration() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PracticeTrueDBData::clear_has_jmstageupfailinvigoration() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PracticeTrueDBData::clear_jmstageupfailinvigoration() {
  jmstageupfailinvigoration_ = 0u;
  clear_has_jmstageupfailinvigoration();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::jmstageupfailinvigoration() const {
  return jmstageupfailinvigoration_;
}
inline void PracticeTrueDBData::set_jmstageupfailinvigoration(::google::protobuf::uint32 value) {
  set_has_jmstageupfailinvigoration();
  jmstageupfailinvigoration_ = value;
}

// optional uint32 jmMergeLvl = 23;
inline bool PracticeTrueDBData::has_jmmergelvl() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void PracticeTrueDBData::set_has_jmmergelvl() {
  _has_bits_[0] |= 0x00400000u;
}
inline void PracticeTrueDBData::clear_has_jmmergelvl() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void PracticeTrueDBData::clear_jmmergelvl() {
  jmmergelvl_ = 0u;
  clear_has_jmmergelvl();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::jmmergelvl() const {
  return jmmergelvl_;
}
inline void PracticeTrueDBData::set_jmmergelvl(::google::protobuf::uint32 value) {
  set_has_jmmergelvl();
  jmmergelvl_ = value;
}

// repeated .proto_ff.PTPurchaseRecord purchasedList = 24;
inline int PracticeTrueDBData::purchasedlist_size() const {
  return purchasedlist_.size();
}
inline void PracticeTrueDBData::clear_purchasedlist() {
  purchasedlist_.Clear();
}
inline const ::proto_ff::PTPurchaseRecord& PracticeTrueDBData::purchasedlist(int index) const {
  return purchasedlist_.Get(index);
}
inline ::proto_ff::PTPurchaseRecord* PracticeTrueDBData::mutable_purchasedlist(int index) {
  return purchasedlist_.Mutable(index);
}
inline ::proto_ff::PTPurchaseRecord* PracticeTrueDBData::add_purchasedlist() {
  return purchasedlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTPurchaseRecord >&
PracticeTrueDBData::purchasedlist() const {
  return purchasedlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTPurchaseRecord >*
PracticeTrueDBData::mutable_purchasedlist() {
  return &purchasedlist_;
}

// optional uint32 gbXLForever = 25;
inline bool PracticeTrueDBData::has_gbxlforever() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void PracticeTrueDBData::set_has_gbxlforever() {
  _has_bits_[0] |= 0x01000000u;
}
inline void PracticeTrueDBData::clear_has_gbxlforever() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void PracticeTrueDBData::clear_gbxlforever() {
  gbxlforever_ = 0u;
  clear_has_gbxlforever();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::gbxlforever() const {
  return gbxlforever_;
}
inline void PracticeTrueDBData::set_gbxlforever(::google::protobuf::uint32 value) {
  set_has_gbxlforever();
  gbxlforever_ = value;
}

// optional uint32 gbXWPAdd = 26;
inline bool PracticeTrueDBData::has_gbxwpadd() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void PracticeTrueDBData::set_has_gbxwpadd() {
  _has_bits_[0] |= 0x02000000u;
}
inline void PracticeTrueDBData::clear_has_gbxwpadd() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void PracticeTrueDBData::clear_gbxwpadd() {
  gbxwpadd_ = 0u;
  clear_has_gbxwpadd();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::gbxwpadd() const {
  return gbxwpadd_;
}
inline void PracticeTrueDBData::set_gbxwpadd(::google::protobuf::uint32 value) {
  set_has_gbxwpadd();
  gbxwpadd_ = value;
}

// optional uint32 gbXLEventGetItemRate = 27;
inline bool PracticeTrueDBData::has_gbxleventgetitemrate() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PracticeTrueDBData::set_has_gbxleventgetitemrate() {
  _has_bits_[0] |= 0x04000000u;
}
inline void PracticeTrueDBData::clear_has_gbxleventgetitemrate() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void PracticeTrueDBData::clear_gbxleventgetitemrate() {
  gbxleventgetitemrate_ = 0u;
  clear_has_gbxleventgetitemrate();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::gbxleventgetitemrate() const {
  return gbxleventgetitemrate_;
}
inline void PracticeTrueDBData::set_gbxleventgetitemrate(::google::protobuf::uint32 value) {
  set_has_gbxleventgetitemrate();
  gbxleventgetitemrate_ = value;
}

// optional uint32 gbXLEventXWPAdd = 28;
inline bool PracticeTrueDBData::has_gbxleventxwpadd() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void PracticeTrueDBData::set_has_gbxleventxwpadd() {
  _has_bits_[0] |= 0x08000000u;
}
inline void PracticeTrueDBData::clear_has_gbxleventxwpadd() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void PracticeTrueDBData::clear_gbxleventxwpadd() {
  gbxleventxwpadd_ = 0u;
  clear_has_gbxleventxwpadd();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::gbxleventxwpadd() const {
  return gbxleventxwpadd_;
}
inline void PracticeTrueDBData::set_gbxleventxwpadd(::google::protobuf::uint32 value) {
  set_has_gbxleventxwpadd();
  gbxleventxwpadd_ = value;
}

// optional uint32 ebFlyFailInvigorationAdd = 29;
inline bool PracticeTrueDBData::has_ebflyfailinvigorationadd() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void PracticeTrueDBData::set_has_ebflyfailinvigorationadd() {
  _has_bits_[0] |= 0x10000000u;
}
inline void PracticeTrueDBData::clear_has_ebflyfailinvigorationadd() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void PracticeTrueDBData::clear_ebflyfailinvigorationadd() {
  ebflyfailinvigorationadd_ = 0u;
  clear_has_ebflyfailinvigorationadd();
}
inline ::google::protobuf::uint32 PracticeTrueDBData::ebflyfailinvigorationadd() const {
  return ebflyfailinvigorationadd_;
}
inline void PracticeTrueDBData::set_ebflyfailinvigorationadd(::google::protobuf::uint32 value) {
  set_has_ebflyfailinvigorationadd();
  ebflyfailinvigorationadd_ = value;
}

// repeated .proto_ff.PTPurchaseRecord gfBookPurchasedList = 30;
inline int PracticeTrueDBData::gfbookpurchasedlist_size() const {
  return gfbookpurchasedlist_.size();
}
inline void PracticeTrueDBData::clear_gfbookpurchasedlist() {
  gfbookpurchasedlist_.Clear();
}
inline const ::proto_ff::PTPurchaseRecord& PracticeTrueDBData::gfbookpurchasedlist(int index) const {
  return gfbookpurchasedlist_.Get(index);
}
inline ::proto_ff::PTPurchaseRecord* PracticeTrueDBData::mutable_gfbookpurchasedlist(int index) {
  return gfbookpurchasedlist_.Mutable(index);
}
inline ::proto_ff::PTPurchaseRecord* PracticeTrueDBData::add_gfbookpurchasedlist() {
  return gfbookpurchasedlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PTPurchaseRecord >&
PracticeTrueDBData::gfbookpurchasedlist() const {
  return gfbookpurchasedlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PTPurchaseRecord >*
PracticeTrueDBData::mutable_gfbookpurchasedlist() {
  return &gfbookpurchasedlist_;
}

// -------------------------------------------------------------------

// AncientSlotInfo

// optional int32 slot = 1;
inline bool AncientSlotInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AncientSlotInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AncientSlotInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AncientSlotInfo::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 AncientSlotInfo::slot() const {
  return slot_;
}
inline void AncientSlotInfo::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// optional int32 step = 2;
inline bool AncientSlotInfo::has_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AncientSlotInfo::set_has_step() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AncientSlotInfo::clear_has_step() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AncientSlotInfo::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 AncientSlotInfo::step() const {
  return step_;
}
inline void AncientSlotInfo::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
}

// optional int32 step_value = 3;
inline bool AncientSlotInfo::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AncientSlotInfo::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AncientSlotInfo::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AncientSlotInfo::clear_step_value() {
  step_value_ = 0;
  clear_has_step_value();
}
inline ::google::protobuf::int32 AncientSlotInfo::step_value() const {
  return step_value_;
}
inline void AncientSlotInfo::set_step_value(::google::protobuf::int32 value) {
  set_has_step_value();
  step_value_ = value;
}

// optional int32 bless = 4;
inline bool AncientSlotInfo::has_bless() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AncientSlotInfo::set_has_bless() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AncientSlotInfo::clear_has_bless() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AncientSlotInfo::clear_bless() {
  bless_ = 0;
  clear_has_bless();
}
inline ::google::protobuf::int32 AncientSlotInfo::bless() const {
  return bless_;
}
inline void AncientSlotInfo::set_bless(::google::protobuf::int32 value) {
  set_has_bless();
  bless_ = value;
}

// repeated int32 attr_index = 5;
inline int AncientSlotInfo::attr_index_size() const {
  return attr_index_.size();
}
inline void AncientSlotInfo::clear_attr_index() {
  attr_index_.Clear();
}
inline ::google::protobuf::int32 AncientSlotInfo::attr_index(int index) const {
  return attr_index_.Get(index);
}
inline void AncientSlotInfo::set_attr_index(int index, ::google::protobuf::int32 value) {
  attr_index_.Set(index, value);
}
inline void AncientSlotInfo::add_attr_index(::google::protobuf::int32 value) {
  attr_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AncientSlotInfo::attr_index() const {
  return attr_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AncientSlotInfo::mutable_attr_index() {
  return &attr_index_;
}

// -------------------------------------------------------------------

// AncientInfo

// optional int32 id = 1;
inline bool AncientInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AncientInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AncientInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AncientInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AncientInfo::id() const {
  return id_;
}
inline void AncientInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated int32 unlock_num = 2;
inline int AncientInfo::unlock_num_size() const {
  return unlock_num_.size();
}
inline void AncientInfo::clear_unlock_num() {
  unlock_num_.Clear();
}
inline ::google::protobuf::int32 AncientInfo::unlock_num(int index) const {
  return unlock_num_.Get(index);
}
inline void AncientInfo::set_unlock_num(int index, ::google::protobuf::int32 value) {
  unlock_num_.Set(index, value);
}
inline void AncientInfo::add_unlock_num(::google::protobuf::int32 value) {
  unlock_num_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AncientInfo::unlock_num() const {
  return unlock_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AncientInfo::mutable_unlock_num() {
  return &unlock_num_;
}

// optional int32 lock = 3;
inline bool AncientInfo::has_lock() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AncientInfo::set_has_lock() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AncientInfo::clear_has_lock() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AncientInfo::clear_lock() {
  lock_ = 0;
  clear_has_lock();
}
inline ::google::protobuf::int32 AncientInfo::lock() const {
  return lock_;
}
inline void AncientInfo::set_lock(::google::protobuf::int32 value) {
  set_has_lock();
  lock_ = value;
}

// repeated .proto_ff.AncientSlotInfo slots = 4;
inline int AncientInfo::slots_size() const {
  return slots_.size();
}
inline void AncientInfo::clear_slots() {
  slots_.Clear();
}
inline const ::proto_ff::AncientSlotInfo& AncientInfo::slots(int index) const {
  return slots_.Get(index);
}
inline ::proto_ff::AncientSlotInfo* AncientInfo::mutable_slots(int index) {
  return slots_.Mutable(index);
}
inline ::proto_ff::AncientSlotInfo* AncientInfo::add_slots() {
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::AncientSlotInfo >&
AncientInfo::slots() const {
  return slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::AncientSlotInfo >*
AncientInfo::mutable_slots() {
  return &slots_;
}

// -------------------------------------------------------------------

// MarryChild

// optional int32 id = 1;
inline bool MarryChild::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryChild::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryChild::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryChild::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MarryChild::id() const {
  return id_;
}
inline void MarryChild::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 lv = 2;
inline bool MarryChild::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryChild::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryChild::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryChild::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 MarryChild::lv() const {
  return lv_;
}
inline void MarryChild::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 exp = 3;
inline bool MarryChild::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarryChild::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarryChild::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarryChild::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 MarryChild::exp() const {
  return exp_;
}
inline void MarryChild::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 star = 4;
inline bool MarryChild::has_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarryChild::set_has_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarryChild::clear_has_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarryChild::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 MarryChild::star() const {
  return star_;
}
inline void MarryChild::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// MarrySelfInfo

// optional int32 marry_flag = 1;
inline bool MarrySelfInfo::has_marry_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarrySelfInfo::set_has_marry_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarrySelfInfo::clear_has_marry_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarrySelfInfo::clear_marry_flag() {
  marry_flag_ = 0;
  clear_has_marry_flag();
}
inline ::google::protobuf::int32 MarrySelfInfo::marry_flag() const {
  return marry_flag_;
}
inline void MarrySelfInfo::set_marry_flag(::google::protobuf::int32 value) {
  set_has_marry_flag();
  marry_flag_ = value;
}

// optional int32 lock_lv = 2;
inline bool MarrySelfInfo::has_lock_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarrySelfInfo::set_has_lock_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarrySelfInfo::clear_has_lock_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarrySelfInfo::clear_lock_lv() {
  lock_lv_ = 0;
  clear_has_lock_lv();
}
inline ::google::protobuf::int32 MarrySelfInfo::lock_lv() const {
  return lock_lv_;
}
inline void MarrySelfInfo::set_lock_lv(::google::protobuf::int32 value) {
  set_has_lock_lv();
  lock_lv_ = value;
}

// optional int32 lock_exp = 3;
inline bool MarrySelfInfo::has_lock_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarrySelfInfo::set_has_lock_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarrySelfInfo::clear_has_lock_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarrySelfInfo::clear_lock_exp() {
  lock_exp_ = 0;
  clear_has_lock_exp();
}
inline ::google::protobuf::int32 MarrySelfInfo::lock_exp() const {
  return lock_exp_;
}
inline void MarrySelfInfo::set_lock_exp(::google::protobuf::int32 value) {
  set_has_lock_exp();
  lock_exp_ = value;
}

// optional uint64 card_buy_time = 4;
inline bool MarrySelfInfo::has_card_buy_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarrySelfInfo::set_has_card_buy_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarrySelfInfo::clear_has_card_buy_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarrySelfInfo::clear_card_buy_time() {
  card_buy_time_ = GOOGLE_ULONGLONG(0);
  clear_has_card_buy_time();
}
inline ::google::protobuf::uint64 MarrySelfInfo::card_buy_time() const {
  return card_buy_time_;
}
inline void MarrySelfInfo::set_card_buy_time(::google::protobuf::uint64 value) {
  set_has_card_buy_time();
  card_buy_time_ = value;
}

// optional int32 child_id = 5;
inline bool MarrySelfInfo::has_child_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MarrySelfInfo::set_has_child_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MarrySelfInfo::clear_has_child_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MarrySelfInfo::clear_child_id() {
  child_id_ = 0;
  clear_has_child_id();
}
inline ::google::protobuf::int32 MarrySelfInfo::child_id() const {
  return child_id_;
}
inline void MarrySelfInfo::set_child_id(::google::protobuf::int32 value) {
  set_has_child_id();
  child_id_ = value;
}

// repeated .proto_ff.MarryChild childs = 6;
inline int MarrySelfInfo::childs_size() const {
  return childs_.size();
}
inline void MarrySelfInfo::clear_childs() {
  childs_.Clear();
}
inline const ::proto_ff::MarryChild& MarrySelfInfo::childs(int index) const {
  return childs_.Get(index);
}
inline ::proto_ff::MarryChild* MarrySelfInfo::mutable_childs(int index) {
  return childs_.Mutable(index);
}
inline ::proto_ff::MarryChild* MarrySelfInfo::add_childs() {
  return childs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MarryChild >&
MarrySelfInfo::childs() const {
  return childs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MarryChild >*
MarrySelfInfo::mutable_childs() {
  return &childs_;
}

// optional int32 express_lv = 7;
inline bool MarrySelfInfo::has_express_lv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MarrySelfInfo::set_has_express_lv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MarrySelfInfo::clear_has_express_lv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MarrySelfInfo::clear_express_lv() {
  express_lv_ = 0;
  clear_has_express_lv();
}
inline ::google::protobuf::int32 MarrySelfInfo::express_lv() const {
  return express_lv_;
}
inline void MarrySelfInfo::set_express_lv(::google::protobuf::int32 value) {
  set_has_express_lv();
  express_lv_ = value;
}

// optional int32 express_exp = 8;
inline bool MarrySelfInfo::has_express_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MarrySelfInfo::set_has_express_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MarrySelfInfo::clear_has_express_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MarrySelfInfo::clear_express_exp() {
  express_exp_ = 0;
  clear_has_express_exp();
}
inline ::google::protobuf::int32 MarrySelfInfo::express_exp() const {
  return express_exp_;
}
inline void MarrySelfInfo::set_express_exp(::google::protobuf::int32 value) {
  set_has_express_exp();
  express_exp_ = value;
}

// repeated int32 gears = 9;
inline int MarrySelfInfo::gears_size() const {
  return gears_.size();
}
inline void MarrySelfInfo::clear_gears() {
  gears_.Clear();
}
inline ::google::protobuf::int32 MarrySelfInfo::gears(int index) const {
  return gears_.Get(index);
}
inline void MarrySelfInfo::set_gears(int index, ::google::protobuf::int32 value) {
  gears_.Set(index, value);
}
inline void MarrySelfInfo::add_gears(::google::protobuf::int32 value) {
  gears_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MarrySelfInfo::gears() const {
  return gears_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MarrySelfInfo::mutable_gears() {
  return &gears_;
}

// optional uint64 child_hatch_time = 10;
inline bool MarrySelfInfo::has_child_hatch_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MarrySelfInfo::set_has_child_hatch_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MarrySelfInfo::clear_has_child_hatch_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MarrySelfInfo::clear_child_hatch_time() {
  child_hatch_time_ = GOOGLE_ULONGLONG(0);
  clear_has_child_hatch_time();
}
inline ::google::protobuf::uint64 MarrySelfInfo::child_hatch_time() const {
  return child_hatch_time_;
}
inline void MarrySelfInfo::set_child_hatch_time(::google::protobuf::uint64 value) {
  set_has_child_hatch_time();
  child_hatch_time_ = value;
}

// optional int32 buy_dup_num = 11;
inline bool MarrySelfInfo::has_buy_dup_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MarrySelfInfo::set_has_buy_dup_num() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MarrySelfInfo::clear_has_buy_dup_num() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MarrySelfInfo::clear_buy_dup_num() {
  buy_dup_num_ = 0;
  clear_has_buy_dup_num();
}
inline ::google::protobuf::int32 MarrySelfInfo::buy_dup_num() const {
  return buy_dup_num_;
}
inline void MarrySelfInfo::set_buy_dup_num(::google::protobuf::int32 value) {
  set_has_buy_dup_num();
  buy_dup_num_ = value;
}

// optional int32 dst_give_dup_num = 12;
inline bool MarrySelfInfo::has_dst_give_dup_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MarrySelfInfo::set_has_dst_give_dup_num() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MarrySelfInfo::clear_has_dst_give_dup_num() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MarrySelfInfo::clear_dst_give_dup_num() {
  dst_give_dup_num_ = 0;
  clear_has_dst_give_dup_num();
}
inline ::google::protobuf::int32 MarrySelfInfo::dst_give_dup_num() const {
  return dst_give_dup_num_;
}
inline void MarrySelfInfo::set_dst_give_dup_num(::google::protobuf::int32 value) {
  set_has_dst_give_dup_num();
  dst_give_dup_num_ = value;
}

// optional int32 enter_marry_dup_num = 13;
inline bool MarrySelfInfo::has_enter_marry_dup_num() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MarrySelfInfo::set_has_enter_marry_dup_num() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MarrySelfInfo::clear_has_enter_marry_dup_num() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MarrySelfInfo::clear_enter_marry_dup_num() {
  enter_marry_dup_num_ = 0;
  clear_has_enter_marry_dup_num();
}
inline ::google::protobuf::int32 MarrySelfInfo::enter_marry_dup_num() const {
  return enter_marry_dup_num_;
}
inline void MarrySelfInfo::set_enter_marry_dup_num(::google::protobuf::int32 value) {
  set_has_enter_marry_dup_num();
  enter_marry_dup_num_ = value;
}

// optional int32 marry_id = 14;
inline bool MarrySelfInfo::has_marry_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MarrySelfInfo::set_has_marry_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MarrySelfInfo::clear_has_marry_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MarrySelfInfo::clear_marry_id() {
  marry_id_ = 0;
  clear_has_marry_id();
}
inline ::google::protobuf::int32 MarrySelfInfo::marry_id() const {
  return marry_id_;
}
inline void MarrySelfInfo::set_marry_id(::google::protobuf::int32 value) {
  set_has_marry_id();
  marry_id_ = value;
}

// repeated int32 recved_gears = 15;
inline int MarrySelfInfo::recved_gears_size() const {
  return recved_gears_.size();
}
inline void MarrySelfInfo::clear_recved_gears() {
  recved_gears_.Clear();
}
inline ::google::protobuf::int32 MarrySelfInfo::recved_gears(int index) const {
  return recved_gears_.Get(index);
}
inline void MarrySelfInfo::set_recved_gears(int index, ::google::protobuf::int32 value) {
  recved_gears_.Set(index, value);
}
inline void MarrySelfInfo::add_recved_gears(::google::protobuf::int32 value) {
  recved_gears_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MarrySelfInfo::recved_gears() const {
  return recved_gears_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MarrySelfInfo::mutable_recved_gears() {
  return &recved_gears_;
}

// optional int32 cur_can_recv_gear = 16;
inline bool MarrySelfInfo::has_cur_can_recv_gear() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MarrySelfInfo::set_has_cur_can_recv_gear() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MarrySelfInfo::clear_has_cur_can_recv_gear() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MarrySelfInfo::clear_cur_can_recv_gear() {
  cur_can_recv_gear_ = 0;
  clear_has_cur_can_recv_gear();
}
inline ::google::protobuf::int32 MarrySelfInfo::cur_can_recv_gear() const {
  return cur_can_recv_gear_;
}
inline void MarrySelfInfo::set_cur_can_recv_gear(::google::protobuf::int32 value) {
  set_has_cur_can_recv_gear();
  cur_can_recv_gear_ = value;
}

// optional int32 recv_child = 17;
inline bool MarrySelfInfo::has_recv_child() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MarrySelfInfo::set_has_recv_child() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MarrySelfInfo::clear_has_recv_child() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MarrySelfInfo::clear_recv_child() {
  recv_child_ = 0;
  clear_has_recv_child();
}
inline ::google::protobuf::int32 MarrySelfInfo::recv_child() const {
  return recv_child_;
}
inline void MarrySelfInfo::set_recv_child(::google::protobuf::int32 value) {
  set_has_recv_child();
  recv_child_ = value;
}

// optional int32 buy_card_reward_state = 18;
inline bool MarrySelfInfo::has_buy_card_reward_state() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void MarrySelfInfo::set_has_buy_card_reward_state() {
  _has_bits_[0] |= 0x00020000u;
}
inline void MarrySelfInfo::clear_has_buy_card_reward_state() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void MarrySelfInfo::clear_buy_card_reward_state() {
  buy_card_reward_state_ = 0;
  clear_has_buy_card_reward_state();
}
inline ::google::protobuf::int32 MarrySelfInfo::buy_card_reward_state() const {
  return buy_card_reward_state_;
}
inline void MarrySelfInfo::set_buy_card_reward_state(::google::protobuf::int32 value) {
  set_has_buy_card_reward_state();
  buy_card_reward_state_ = value;
}

// optional int32 card_reward_state = 19;
inline bool MarrySelfInfo::has_card_reward_state() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void MarrySelfInfo::set_has_card_reward_state() {
  _has_bits_[0] |= 0x00040000u;
}
inline void MarrySelfInfo::clear_has_card_reward_state() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void MarrySelfInfo::clear_card_reward_state() {
  card_reward_state_ = 0;
  clear_has_card_reward_state();
}
inline ::google::protobuf::int32 MarrySelfInfo::card_reward_state() const {
  return card_reward_state_;
}
inline void MarrySelfInfo::set_card_reward_state(::google::protobuf::int32 value) {
  set_has_card_reward_state();
  card_reward_state_ = value;
}

// optional int32 dst_card_reward_state = 20;
inline bool MarrySelfInfo::has_dst_card_reward_state() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void MarrySelfInfo::set_has_dst_card_reward_state() {
  _has_bits_[0] |= 0x00080000u;
}
inline void MarrySelfInfo::clear_has_dst_card_reward_state() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void MarrySelfInfo::clear_dst_card_reward_state() {
  dst_card_reward_state_ = 0;
  clear_has_dst_card_reward_state();
}
inline ::google::protobuf::int32 MarrySelfInfo::dst_card_reward_state() const {
  return dst_card_reward_state_;
}
inline void MarrySelfInfo::set_dst_card_reward_state(::google::protobuf::int32 value) {
  set_has_dst_card_reward_state();
  dst_card_reward_state_ = value;
}

// optional int32 card_surplus_day = 21;
inline bool MarrySelfInfo::has_card_surplus_day() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void MarrySelfInfo::set_has_card_surplus_day() {
  _has_bits_[0] |= 0x00100000u;
}
inline void MarrySelfInfo::clear_has_card_surplus_day() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void MarrySelfInfo::clear_card_surplus_day() {
  card_surplus_day_ = 0;
  clear_has_card_surplus_day();
}
inline ::google::protobuf::int32 MarrySelfInfo::card_surplus_day() const {
  return card_surplus_day_;
}
inline void MarrySelfInfo::set_card_surplus_day(::google::protobuf::int32 value) {
  set_has_card_surplus_day();
  card_surplus_day_ = value;
}

// optional int32 recv_self_box_days = 22;
inline bool MarrySelfInfo::has_recv_self_box_days() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void MarrySelfInfo::set_has_recv_self_box_days() {
  _has_bits_[0] |= 0x00200000u;
}
inline void MarrySelfInfo::clear_has_recv_self_box_days() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void MarrySelfInfo::clear_recv_self_box_days() {
  recv_self_box_days_ = 0;
  clear_has_recv_self_box_days();
}
inline ::google::protobuf::int32 MarrySelfInfo::recv_self_box_days() const {
  return recv_self_box_days_;
}
inline void MarrySelfInfo::set_recv_self_box_days(::google::protobuf::int32 value) {
  set_has_recv_self_box_days();
  recv_self_box_days_ = value;
}

// optional int32 task_state = 23;
inline bool MarrySelfInfo::has_task_state() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void MarrySelfInfo::set_has_task_state() {
  _has_bits_[0] |= 0x00400000u;
}
inline void MarrySelfInfo::clear_has_task_state() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void MarrySelfInfo::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 MarrySelfInfo::task_state() const {
  return task_state_;
}
inline void MarrySelfInfo::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// optional int32 express_exp_sum = 24;
inline bool MarrySelfInfo::has_express_exp_sum() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void MarrySelfInfo::set_has_express_exp_sum() {
  _has_bits_[0] |= 0x00800000u;
}
inline void MarrySelfInfo::clear_has_express_exp_sum() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void MarrySelfInfo::clear_express_exp_sum() {
  express_exp_sum_ = 0;
  clear_has_express_exp_sum();
}
inline ::google::protobuf::int32 MarrySelfInfo::express_exp_sum() const {
  return express_exp_sum_;
}
inline void MarrySelfInfo::set_express_exp_sum(::google::protobuf::int32 value) {
  set_has_express_exp_sum();
  express_exp_sum_ = value;
}

// -------------------------------------------------------------------

// MarryWeddingInfo

// optional int32 id = 1;
inline bool MarryWeddingInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryWeddingInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryWeddingInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryWeddingInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MarryWeddingInfo::id() const {
  return id_;
}
inline void MarryWeddingInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 start_time = 2;
inline bool MarryWeddingInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryWeddingInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryWeddingInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryWeddingInfo::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::uint64 MarryWeddingInfo::start_time() const {
  return start_time_;
}
inline void MarryWeddingInfo::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional uint64 end_time = 3;
inline bool MarryWeddingInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarryWeddingInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarryWeddingInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarryWeddingInfo::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 MarryWeddingInfo::end_time() const {
  return end_time_;
}
inline void MarryWeddingInfo::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// repeated .proto_ff.RolePlayerMiniInfo mini = 4;
inline int MarryWeddingInfo::mini_size() const {
  return mini_.size();
}
inline void MarryWeddingInfo::clear_mini() {
  mini_.Clear();
}
inline const ::proto_ff::RolePlayerMiniInfo& MarryWeddingInfo::mini(int index) const {
  return mini_.Get(index);
}
inline ::proto_ff::RolePlayerMiniInfo* MarryWeddingInfo::mutable_mini(int index) {
  return mini_.Mutable(index);
}
inline ::proto_ff::RolePlayerMiniInfo* MarryWeddingInfo::add_mini() {
  return mini_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
MarryWeddingInfo::mini() const {
  return mini_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
MarryWeddingInfo::mutable_mini() {
  return &mini_;
}

// repeated uint64 invite_list = 5;
inline int MarryWeddingInfo::invite_list_size() const {
  return invite_list_.size();
}
inline void MarryWeddingInfo::clear_invite_list() {
  invite_list_.Clear();
}
inline ::google::protobuf::uint64 MarryWeddingInfo::invite_list(int index) const {
  return invite_list_.Get(index);
}
inline void MarryWeddingInfo::set_invite_list(int index, ::google::protobuf::uint64 value) {
  invite_list_.Set(index, value);
}
inline void MarryWeddingInfo::add_invite_list(::google::protobuf::uint64 value) {
  invite_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MarryWeddingInfo::invite_list() const {
  return invite_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MarryWeddingInfo::mutable_invite_list() {
  return &invite_list_;
}

// -------------------------------------------------------------------

// ExpressLog

// optional bytes src_name = 1;
inline bool ExpressLog::has_src_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExpressLog::set_has_src_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExpressLog::clear_has_src_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExpressLog::clear_src_name() {
  if (src_name_ != &::google::protobuf::internal::kEmptyString) {
    src_name_->clear();
  }
  clear_has_src_name();
}
inline const ::std::string& ExpressLog::src_name() const {
  return *src_name_;
}
inline void ExpressLog::set_src_name(const ::std::string& value) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(value);
}
inline void ExpressLog::set_src_name(const char* value) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(value);
}
inline void ExpressLog::set_src_name(const void* value, size_t size) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExpressLog::mutable_src_name() {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  return src_name_;
}
inline ::std::string* ExpressLog::release_src_name() {
  clear_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = src_name_;
    src_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExpressLog::set_allocated_src_name(::std::string* src_name) {
  if (src_name_ != &::google::protobuf::internal::kEmptyString) {
    delete src_name_;
  }
  if (src_name) {
    set_has_src_name();
    src_name_ = src_name;
  } else {
    clear_has_src_name();
    src_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 src_id = 2;
inline bool ExpressLog::has_src_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExpressLog::set_has_src_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExpressLog::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExpressLog::clear_src_id() {
  src_id_ = GOOGLE_ULONGLONG(0);
  clear_has_src_id();
}
inline ::google::protobuf::uint64 ExpressLog::src_id() const {
  return src_id_;
}
inline void ExpressLog::set_src_id(::google::protobuf::uint64 value) {
  set_has_src_id();
  src_id_ = value;
}

// optional bytes dst_name = 3;
inline bool ExpressLog::has_dst_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExpressLog::set_has_dst_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExpressLog::clear_has_dst_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExpressLog::clear_dst_name() {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    dst_name_->clear();
  }
  clear_has_dst_name();
}
inline const ::std::string& ExpressLog::dst_name() const {
  return *dst_name_;
}
inline void ExpressLog::set_dst_name(const ::std::string& value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void ExpressLog::set_dst_name(const char* value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void ExpressLog::set_dst_name(const void* value, size_t size) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExpressLog::mutable_dst_name() {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  return dst_name_;
}
inline ::std::string* ExpressLog::release_dst_name() {
  clear_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dst_name_;
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExpressLog::set_allocated_dst_name(::std::string* dst_name) {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_name_;
  }
  if (dst_name) {
    set_has_dst_name();
    dst_name_ = dst_name;
  } else {
    clear_has_dst_name();
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 dst_id = 4;
inline bool ExpressLog::has_dst_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExpressLog::set_has_dst_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExpressLog::clear_has_dst_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExpressLog::clear_dst_id() {
  dst_id_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_id();
}
inline ::google::protobuf::uint64 ExpressLog::dst_id() const {
  return dst_id_;
}
inline void ExpressLog::set_dst_id(::google::protobuf::uint64 value) {
  set_has_dst_id();
  dst_id_ = value;
}

// optional int32 text_id = 5;
inline bool ExpressLog::has_text_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExpressLog::set_has_text_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExpressLog::clear_has_text_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExpressLog::clear_text_id() {
  text_id_ = 0;
  clear_has_text_id();
}
inline ::google::protobuf::int32 ExpressLog::text_id() const {
  return text_id_;
}
inline void ExpressLog::set_text_id(::google::protobuf::int32 value) {
  set_has_text_id();
  text_id_ = value;
}

// optional uint64 item = 6;
inline bool ExpressLog::has_item() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExpressLog::set_has_item() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExpressLog::clear_has_item() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExpressLog::clear_item() {
  item_ = GOOGLE_ULONGLONG(0);
  clear_has_item();
}
inline ::google::protobuf::uint64 ExpressLog::item() const {
  return item_;
}
inline void ExpressLog::set_item(::google::protobuf::uint64 value) {
  set_has_item();
  item_ = value;
}

// -------------------------------------------------------------------

// WeddingDBInfo

// optional int32 wedding_id = 1;
inline bool WeddingDBInfo::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingDBInfo::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingDBInfo::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingDBInfo::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 WeddingDBInfo::wedding_id() const {
  return wedding_id_;
}
inline void WeddingDBInfo::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// optional int32 wedding_gear = 2;
inline bool WeddingDBInfo::has_wedding_gear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeddingDBInfo::set_has_wedding_gear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeddingDBInfo::clear_has_wedding_gear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeddingDBInfo::clear_wedding_gear() {
  wedding_gear_ = 0;
  clear_has_wedding_gear();
}
inline ::google::protobuf::int32 WeddingDBInfo::wedding_gear() const {
  return wedding_gear_;
}
inline void WeddingDBInfo::set_wedding_gear(::google::protobuf::int32 value) {
  set_has_wedding_gear();
  wedding_gear_ = value;
}

// optional uint64 src_cid = 3;
inline bool WeddingDBInfo::has_src_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WeddingDBInfo::set_has_src_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WeddingDBInfo::clear_has_src_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WeddingDBInfo::clear_src_cid() {
  src_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_src_cid();
}
inline ::google::protobuf::uint64 WeddingDBInfo::src_cid() const {
  return src_cid_;
}
inline void WeddingDBInfo::set_src_cid(::google::protobuf::uint64 value) {
  set_has_src_cid();
  src_cid_ = value;
}

// optional uint64 dst_cid = 4;
inline bool WeddingDBInfo::has_dst_cid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WeddingDBInfo::set_has_dst_cid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WeddingDBInfo::clear_has_dst_cid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WeddingDBInfo::clear_dst_cid() {
  dst_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_cid();
}
inline ::google::protobuf::uint64 WeddingDBInfo::dst_cid() const {
  return dst_cid_;
}
inline void WeddingDBInfo::set_dst_cid(::google::protobuf::uint64 value) {
  set_has_dst_cid();
  dst_cid_ = value;
}

// optional int32 marry_id = 5;
inline bool WeddingDBInfo::has_marry_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WeddingDBInfo::set_has_marry_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WeddingDBInfo::clear_has_marry_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WeddingDBInfo::clear_marry_id() {
  marry_id_ = 0;
  clear_has_marry_id();
}
inline ::google::protobuf::int32 WeddingDBInfo::marry_id() const {
  return marry_id_;
}
inline void WeddingDBInfo::set_marry_id(::google::protobuf::int32 value) {
  set_has_marry_id();
  marry_id_ = value;
}

// repeated int32 invite_list = 6;
inline int WeddingDBInfo::invite_list_size() const {
  return invite_list_.size();
}
inline void WeddingDBInfo::clear_invite_list() {
  invite_list_.Clear();
}
inline ::google::protobuf::int32 WeddingDBInfo::invite_list(int index) const {
  return invite_list_.Get(index);
}
inline void WeddingDBInfo::set_invite_list(int index, ::google::protobuf::int32 value) {
  invite_list_.Set(index, value);
}
inline void WeddingDBInfo::add_invite_list(::google::protobuf::int32 value) {
  invite_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WeddingDBInfo::invite_list() const {
  return invite_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WeddingDBInfo::mutable_invite_list() {
  return &invite_list_;
}

// repeated int32 apply_list = 7;
inline int WeddingDBInfo::apply_list_size() const {
  return apply_list_.size();
}
inline void WeddingDBInfo::clear_apply_list() {
  apply_list_.Clear();
}
inline ::google::protobuf::int32 WeddingDBInfo::apply_list(int index) const {
  return apply_list_.Get(index);
}
inline void WeddingDBInfo::set_apply_list(int index, ::google::protobuf::int32 value) {
  apply_list_.Set(index, value);
}
inline void WeddingDBInfo::add_apply_list(::google::protobuf::int32 value) {
  apply_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WeddingDBInfo::apply_list() const {
  return apply_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WeddingDBInfo::mutable_apply_list() {
  return &apply_list_;
}

// optional int32 add_num = 8;
inline bool WeddingDBInfo::has_add_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WeddingDBInfo::set_has_add_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WeddingDBInfo::clear_has_add_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WeddingDBInfo::clear_add_num() {
  add_num_ = 0;
  clear_has_add_num();
}
inline ::google::protobuf::int32 WeddingDBInfo::add_num() const {
  return add_num_;
}
inline void WeddingDBInfo::set_add_num(::google::protobuf::int32 value) {
  set_has_add_num();
  add_num_ = value;
}

// -------------------------------------------------------------------

// WeddingDBList

// repeated .proto_ff.WeddingDBInfo infos = 1;
inline int WeddingDBList::infos_size() const {
  return infos_.size();
}
inline void WeddingDBList::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::WeddingDBInfo& WeddingDBList::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::WeddingDBInfo* WeddingDBList::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::WeddingDBInfo* WeddingDBList::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingDBInfo >&
WeddingDBList::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingDBInfo >*
WeddingDBList::mutable_infos() {
  return &infos_;
}

// optional uint64 last_times = 2;
inline bool WeddingDBList::has_last_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeddingDBList::set_has_last_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeddingDBList::clear_has_last_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeddingDBList::clear_last_times() {
  last_times_ = GOOGLE_ULONGLONG(0);
  clear_has_last_times();
}
inline ::google::protobuf::uint64 WeddingDBList::last_times() const {
  return last_times_;
}
inline void WeddingDBList::set_last_times(::google::protobuf::uint64 value) {
  set_has_last_times();
  last_times_ = value;
}

// -------------------------------------------------------------------

// WeddingSimpleInfo

// optional int32 wedding_id = 1;
inline bool WeddingSimpleInfo::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingSimpleInfo::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingSimpleInfo::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingSimpleInfo::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 WeddingSimpleInfo::wedding_id() const {
  return wedding_id_;
}
inline void WeddingSimpleInfo::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// optional int32 wedding_gear = 2;
inline bool WeddingSimpleInfo::has_wedding_gear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeddingSimpleInfo::set_has_wedding_gear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeddingSimpleInfo::clear_has_wedding_gear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeddingSimpleInfo::clear_wedding_gear() {
  wedding_gear_ = 0;
  clear_has_wedding_gear();
}
inline ::google::protobuf::int32 WeddingSimpleInfo::wedding_gear() const {
  return wedding_gear_;
}
inline void WeddingSimpleInfo::set_wedding_gear(::google::protobuf::int32 value) {
  set_has_wedding_gear();
  wedding_gear_ = value;
}

// optional .proto_ff.RolePlayerMiniInfo src = 3;
inline bool WeddingSimpleInfo::has_src() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WeddingSimpleInfo::set_has_src() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WeddingSimpleInfo::clear_has_src() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WeddingSimpleInfo::clear_src() {
  if (src_ != NULL) src_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_src();
}
inline const ::proto_ff::RolePlayerMiniInfo& WeddingSimpleInfo::src() const {
  return src_ != NULL ? *src_ : *default_instance_->src_;
}
inline ::proto_ff::RolePlayerMiniInfo* WeddingSimpleInfo::mutable_src() {
  set_has_src();
  if (src_ == NULL) src_ = new ::proto_ff::RolePlayerMiniInfo;
  return src_;
}
inline ::proto_ff::RolePlayerMiniInfo* WeddingSimpleInfo::release_src() {
  clear_has_src();
  ::proto_ff::RolePlayerMiniInfo* temp = src_;
  src_ = NULL;
  return temp;
}
inline void WeddingSimpleInfo::set_allocated_src(::proto_ff::RolePlayerMiniInfo* src) {
  delete src_;
  src_ = src;
  if (src) {
    set_has_src();
  } else {
    clear_has_src();
  }
}

// optional .proto_ff.RolePlayerMiniInfo dst = 4;
inline bool WeddingSimpleInfo::has_dst() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WeddingSimpleInfo::set_has_dst() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WeddingSimpleInfo::clear_has_dst() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WeddingSimpleInfo::clear_dst() {
  if (dst_ != NULL) dst_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_dst();
}
inline const ::proto_ff::RolePlayerMiniInfo& WeddingSimpleInfo::dst() const {
  return dst_ != NULL ? *dst_ : *default_instance_->dst_;
}
inline ::proto_ff::RolePlayerMiniInfo* WeddingSimpleInfo::mutable_dst() {
  set_has_dst();
  if (dst_ == NULL) dst_ = new ::proto_ff::RolePlayerMiniInfo;
  return dst_;
}
inline ::proto_ff::RolePlayerMiniInfo* WeddingSimpleInfo::release_dst() {
  clear_has_dst();
  ::proto_ff::RolePlayerMiniInfo* temp = dst_;
  dst_ = NULL;
  return temp;
}
inline void WeddingSimpleInfo::set_allocated_dst(::proto_ff::RolePlayerMiniInfo* dst) {
  delete dst_;
  dst_ = dst;
  if (dst) {
    set_has_dst();
  } else {
    clear_has_dst();
  }
}

// optional int32 marry_id = 5;
inline bool WeddingSimpleInfo::has_marry_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WeddingSimpleInfo::set_has_marry_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WeddingSimpleInfo::clear_has_marry_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WeddingSimpleInfo::clear_marry_id() {
  marry_id_ = 0;
  clear_has_marry_id();
}
inline ::google::protobuf::int32 WeddingSimpleInfo::marry_id() const {
  return marry_id_;
}
inline void WeddingSimpleInfo::set_marry_id(::google::protobuf::int32 value) {
  set_has_marry_id();
  marry_id_ = value;
}

// optional uint64 apply_end_time = 6;
inline bool WeddingSimpleInfo::has_apply_end_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WeddingSimpleInfo::set_has_apply_end_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WeddingSimpleInfo::clear_has_apply_end_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WeddingSimpleInfo::clear_apply_end_time() {
  apply_end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_apply_end_time();
}
inline ::google::protobuf::uint64 WeddingSimpleInfo::apply_end_time() const {
  return apply_end_time_;
}
inline void WeddingSimpleInfo::set_apply_end_time(::google::protobuf::uint64 value) {
  set_has_apply_end_time();
  apply_end_time_ = value;
}

// optional uint64 tour_start_time = 7;
inline bool WeddingSimpleInfo::has_tour_start_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WeddingSimpleInfo::set_has_tour_start_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WeddingSimpleInfo::clear_has_tour_start_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WeddingSimpleInfo::clear_tour_start_time() {
  tour_start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_tour_start_time();
}
inline ::google::protobuf::uint64 WeddingSimpleInfo::tour_start_time() const {
  return tour_start_time_;
}
inline void WeddingSimpleInfo::set_tour_start_time(::google::protobuf::uint64 value) {
  set_has_tour_start_time();
  tour_start_time_ = value;
}

// optional uint64 start_time = 8;
inline bool WeddingSimpleInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WeddingSimpleInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WeddingSimpleInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WeddingSimpleInfo::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::uint64 WeddingSimpleInfo::start_time() const {
  return start_time_;
}
inline void WeddingSimpleInfo::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional uint64 end_time = 9;
inline bool WeddingSimpleInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WeddingSimpleInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WeddingSimpleInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WeddingSimpleInfo::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 WeddingSimpleInfo::end_time() const {
  return end_time_;
}
inline void WeddingSimpleInfo::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional int32 step = 10;
inline bool WeddingSimpleInfo::has_step() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WeddingSimpleInfo::set_has_step() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WeddingSimpleInfo::clear_has_step() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WeddingSimpleInfo::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 WeddingSimpleInfo::step() const {
  return step_;
}
inline void WeddingSimpleInfo::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
}

// -------------------------------------------------------------------

// WeddingDetail

// optional int32 wedding_id = 1;
inline bool WeddingDetail::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingDetail::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingDetail::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingDetail::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 WeddingDetail::wedding_id() const {
  return wedding_id_;
}
inline void WeddingDetail::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// optional int32 wedding_gear = 2;
inline bool WeddingDetail::has_wedding_gear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeddingDetail::set_has_wedding_gear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeddingDetail::clear_has_wedding_gear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeddingDetail::clear_wedding_gear() {
  wedding_gear_ = 0;
  clear_has_wedding_gear();
}
inline ::google::protobuf::int32 WeddingDetail::wedding_gear() const {
  return wedding_gear_;
}
inline void WeddingDetail::set_wedding_gear(::google::protobuf::int32 value) {
  set_has_wedding_gear();
  wedding_gear_ = value;
}

// repeated .proto_ff.RolePlayerMiniInfo invite_list = 3;
inline int WeddingDetail::invite_list_size() const {
  return invite_list_.size();
}
inline void WeddingDetail::clear_invite_list() {
  invite_list_.Clear();
}
inline const ::proto_ff::RolePlayerMiniInfo& WeddingDetail::invite_list(int index) const {
  return invite_list_.Get(index);
}
inline ::proto_ff::RolePlayerMiniInfo* WeddingDetail::mutable_invite_list(int index) {
  return invite_list_.Mutable(index);
}
inline ::proto_ff::RolePlayerMiniInfo* WeddingDetail::add_invite_list() {
  return invite_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
WeddingDetail::invite_list() const {
  return invite_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
WeddingDetail::mutable_invite_list() {
  return &invite_list_;
}

// repeated .proto_ff.RolePlayerMiniInfo apply_list = 4;
inline int WeddingDetail::apply_list_size() const {
  return apply_list_.size();
}
inline void WeddingDetail::clear_apply_list() {
  apply_list_.Clear();
}
inline const ::proto_ff::RolePlayerMiniInfo& WeddingDetail::apply_list(int index) const {
  return apply_list_.Get(index);
}
inline ::proto_ff::RolePlayerMiniInfo* WeddingDetail::mutable_apply_list(int index) {
  return apply_list_.Mutable(index);
}
inline ::proto_ff::RolePlayerMiniInfo* WeddingDetail::add_apply_list() {
  return apply_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
WeddingDetail::apply_list() const {
  return apply_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
WeddingDetail::mutable_apply_list() {
  return &apply_list_;
}

// optional int32 add_num = 5;
inline bool WeddingDetail::has_add_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WeddingDetail::set_has_add_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WeddingDetail::clear_has_add_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WeddingDetail::clear_add_num() {
  add_num_ = 0;
  clear_has_add_num();
}
inline ::google::protobuf::int32 WeddingDetail::add_num() const {
  return add_num_;
}
inline void WeddingDetail::set_add_num(::google::protobuf::int32 value) {
  set_has_add_num();
  add_num_ = value;
}

// -------------------------------------------------------------------

// WeddingDupRoleInfo

// optional int32 sign_num = 1;
inline bool WeddingDupRoleInfo::has_sign_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingDupRoleInfo::set_has_sign_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingDupRoleInfo::clear_has_sign_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingDupRoleInfo::clear_sign_num() {
  sign_num_ = 0;
  clear_has_sign_num();
}
inline ::google::protobuf::int32 WeddingDupRoleInfo::sign_num() const {
  return sign_num_;
}
inline void WeddingDupRoleInfo::set_sign_num(::google::protobuf::int32 value) {
  set_has_sign_num();
  sign_num_ = value;
}

// optional int32 cake_reward_num = 2;
inline bool WeddingDupRoleInfo::has_cake_reward_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeddingDupRoleInfo::set_has_cake_reward_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeddingDupRoleInfo::clear_has_cake_reward_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeddingDupRoleInfo::clear_cake_reward_num() {
  cake_reward_num_ = 0;
  clear_has_cake_reward_num();
}
inline ::google::protobuf::int32 WeddingDupRoleInfo::cake_reward_num() const {
  return cake_reward_num_;
}
inline void WeddingDupRoleInfo::set_cake_reward_num(::google::protobuf::int32 value) {
  set_has_cake_reward_num();
  cake_reward_num_ = value;
}

// optional int32 kill_monster_reward_num = 3;
inline bool WeddingDupRoleInfo::has_kill_monster_reward_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WeddingDupRoleInfo::set_has_kill_monster_reward_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WeddingDupRoleInfo::clear_has_kill_monster_reward_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WeddingDupRoleInfo::clear_kill_monster_reward_num() {
  kill_monster_reward_num_ = 0;
  clear_has_kill_monster_reward_num();
}
inline ::google::protobuf::int32 WeddingDupRoleInfo::kill_monster_reward_num() const {
  return kill_monster_reward_num_;
}
inline void WeddingDupRoleInfo::set_kill_monster_reward_num(::google::protobuf::int32 value) {
  set_has_kill_monster_reward_num();
  kill_monster_reward_num_ = value;
}

// optional uint64 add_exp = 4;
inline bool WeddingDupRoleInfo::has_add_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WeddingDupRoleInfo::set_has_add_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WeddingDupRoleInfo::clear_has_add_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WeddingDupRoleInfo::clear_add_exp() {
  add_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_add_exp();
}
inline ::google::protobuf::uint64 WeddingDupRoleInfo::add_exp() const {
  return add_exp_;
}
inline void WeddingDupRoleInfo::set_add_exp(::google::protobuf::uint64 value) {
  set_has_add_exp();
  add_exp_ = value;
}

// -------------------------------------------------------------------

// GlobalExpressLog

// repeated .proto_ff.ExpressLog logs = 1;
inline int GlobalExpressLog::logs_size() const {
  return logs_.size();
}
inline void GlobalExpressLog::clear_logs() {
  logs_.Clear();
}
inline const ::proto_ff::ExpressLog& GlobalExpressLog::logs(int index) const {
  return logs_.Get(index);
}
inline ::proto_ff::ExpressLog* GlobalExpressLog::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::proto_ff::ExpressLog* GlobalExpressLog::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ExpressLog >&
GlobalExpressLog::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ExpressLog >*
GlobalExpressLog::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// SceneProto

// optional uint32 zid = 1;
inline bool SceneProto::has_zid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneProto::set_has_zid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneProto::clear_has_zid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneProto::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 SceneProto::zid() const {
  return zid_;
}
inline void SceneProto::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint64 sceneid = 2;
inline bool SceneProto::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneProto::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneProto::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneProto::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 SceneProto::sceneid() const {
  return sceneid_;
}
inline void SceneProto::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 mapid = 3;
inline bool SceneProto::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneProto::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneProto::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneProto::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 SceneProto::mapid() const {
  return mapid_;
}
inline void SceneProto::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// HandBookPBInfo

// optional uint64 id = 1;
inline bool HandBookPBInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandBookPBInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandBookPBInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandBookPBInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 HandBookPBInfo::id() const {
  return id_;
}
inline void HandBookPBInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 level = 2;
inline bool HandBookPBInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandBookPBInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandBookPBInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandBookPBInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 HandBookPBInfo::level() const {
  return level_;
}
inline void HandBookPBInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 star = 3;
inline bool HandBookPBInfo::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HandBookPBInfo::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HandBookPBInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HandBookPBInfo::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 HandBookPBInfo::star() const {
  return star_;
}
inline void HandBookPBInfo::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// repeated uint64 skills = 4;
inline int HandBookPBInfo::skills_size() const {
  return skills_.size();
}
inline void HandBookPBInfo::clear_skills() {
  skills_.Clear();
}
inline ::google::protobuf::uint64 HandBookPBInfo::skills(int index) const {
  return skills_.Get(index);
}
inline void HandBookPBInfo::set_skills(int index, ::google::protobuf::uint64 value) {
  skills_.Set(index, value);
}
inline void HandBookPBInfo::add_skills(::google::protobuf::uint64 value) {
  skills_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
HandBookPBInfo::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
HandBookPBInfo::mutable_skills() {
  return &skills_;
}

// -------------------------------------------------------------------

// HandBookEmployPBInfo

// optional uint64 id = 1;
inline bool HandBookEmployPBInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandBookEmployPBInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandBookEmployPBInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandBookEmployPBInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 HandBookEmployPBInfo::id() const {
  return id_;
}
inline void HandBookEmployPBInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool HandBookEmployPBInfo::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandBookEmployPBInfo::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandBookEmployPBInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandBookEmployPBInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 HandBookEmployPBInfo::status() const {
  return status_;
}
inline void HandBookEmployPBInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// HandBookTablePBInfo

// optional uint64 id = 1;
inline bool HandBookTablePBInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandBookTablePBInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandBookTablePBInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandBookTablePBInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 HandBookTablePBInfo::id() const {
  return id_;
}
inline void HandBookTablePBInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool HandBookTablePBInfo::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandBookTablePBInfo::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandBookTablePBInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandBookTablePBInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 HandBookTablePBInfo::status() const {
  return status_;
}
inline void HandBookTablePBInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// HandBookBeastEquipData

// repeated .proto_ff.EquipInfo infos = 1;
inline int HandBookBeastEquipData::infos_size() const {
  return infos_.size();
}
inline void HandBookBeastEquipData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::EquipInfo& HandBookBeastEquipData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::EquipInfo* HandBookBeastEquipData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::EquipInfo* HandBookBeastEquipData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >&
HandBookBeastEquipData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >*
HandBookBeastEquipData::mutable_infos() {
  return &infos_;
}

// repeated .proto_ff.EquipLvAttrInfo lv_attr = 2;
inline int HandBookBeastEquipData::lv_attr_size() const {
  return lv_attr_.size();
}
inline void HandBookBeastEquipData::clear_lv_attr() {
  lv_attr_.Clear();
}
inline const ::proto_ff::EquipLvAttrInfo& HandBookBeastEquipData::lv_attr(int index) const {
  return lv_attr_.Get(index);
}
inline ::proto_ff::EquipLvAttrInfo* HandBookBeastEquipData::mutable_lv_attr(int index) {
  return lv_attr_.Mutable(index);
}
inline ::proto_ff::EquipLvAttrInfo* HandBookBeastEquipData::add_lv_attr() {
  return lv_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >&
HandBookBeastEquipData::lv_attr() const {
  return lv_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >*
HandBookBeastEquipData::mutable_lv_attr() {
  return &lv_attr_;
}

// -------------------------------------------------------------------

// HandBookBeastPBData

// optional uint64 id = 1;
inline bool HandBookBeastPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandBookBeastPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandBookBeastPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandBookBeastPBData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 HandBookBeastPBData::id() const {
  return id_;
}
inline void HandBookBeastPBData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool HandBookBeastPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandBookBeastPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandBookBeastPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandBookBeastPBData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 HandBookBeastPBData::status() const {
  return status_;
}
inline void HandBookBeastPBData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional .proto_ff.HandBookBeastEquipData equip_data = 3;
inline bool HandBookBeastPBData::has_equip_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HandBookBeastPBData::set_has_equip_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HandBookBeastPBData::clear_has_equip_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HandBookBeastPBData::clear_equip_data() {
  if (equip_data_ != NULL) equip_data_->::proto_ff::HandBookBeastEquipData::Clear();
  clear_has_equip_data();
}
inline const ::proto_ff::HandBookBeastEquipData& HandBookBeastPBData::equip_data() const {
  return equip_data_ != NULL ? *equip_data_ : *default_instance_->equip_data_;
}
inline ::proto_ff::HandBookBeastEquipData* HandBookBeastPBData::mutable_equip_data() {
  set_has_equip_data();
  if (equip_data_ == NULL) equip_data_ = new ::proto_ff::HandBookBeastEquipData;
  return equip_data_;
}
inline ::proto_ff::HandBookBeastEquipData* HandBookBeastPBData::release_equip_data() {
  clear_has_equip_data();
  ::proto_ff::HandBookBeastEquipData* temp = equip_data_;
  equip_data_ = NULL;
  return temp;
}
inline void HandBookBeastPBData::set_allocated_equip_data(::proto_ff::HandBookBeastEquipData* equip_data) {
  delete equip_data_;
  equip_data_ = equip_data;
  if (equip_data) {
    set_has_equip_data();
  } else {
    clear_has_equip_data();
  }
}

// -------------------------------------------------------------------

// HandBookBeastBattleSlotData

// optional uint32 id = 1;
inline bool HandBookBeastBattleSlotData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandBookBeastBattleSlotData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandBookBeastBattleSlotData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandBookBeastBattleSlotData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HandBookBeastBattleSlotData::id() const {
  return id_;
}
inline void HandBookBeastBattleSlotData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 cur_state = 2;
inline bool HandBookBeastBattleSlotData::has_cur_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandBookBeastBattleSlotData::set_has_cur_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandBookBeastBattleSlotData::clear_has_cur_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandBookBeastBattleSlotData::clear_cur_state() {
  cur_state_ = 0u;
  clear_has_cur_state();
}
inline ::google::protobuf::uint32 HandBookBeastBattleSlotData::cur_state() const {
  return cur_state_;
}
inline void HandBookBeastBattleSlotData::set_cur_state(::google::protobuf::uint32 value) {
  set_has_cur_state();
  cur_state_ = value;
}

// optional int64 beast_id = 3;
inline bool HandBookBeastBattleSlotData::has_beast_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HandBookBeastBattleSlotData::set_has_beast_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HandBookBeastBattleSlotData::clear_has_beast_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HandBookBeastBattleSlotData::clear_beast_id() {
  beast_id_ = GOOGLE_LONGLONG(0);
  clear_has_beast_id();
}
inline ::google::protobuf::int64 HandBookBeastBattleSlotData::beast_id() const {
  return beast_id_;
}
inline void HandBookBeastBattleSlotData::set_beast_id(::google::protobuf::int64 value) {
  set_has_beast_id();
  beast_id_ = value;
}

// -------------------------------------------------------------------

// HandBookPBData

// repeated .proto_ff.HandBookPBInfo data = 1;
inline int HandBookPBData::data_size() const {
  return data_.size();
}
inline void HandBookPBData::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::HandBookPBInfo& HandBookPBData::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::HandBookPBInfo* HandBookPBData::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::HandBookPBInfo* HandBookPBData::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookPBInfo >&
HandBookPBData::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookPBInfo >*
HandBookPBData::mutable_data() {
  return &data_;
}

// repeated uint64 fetters = 2;
inline int HandBookPBData::fetters_size() const {
  return fetters_.size();
}
inline void HandBookPBData::clear_fetters() {
  fetters_.Clear();
}
inline ::google::protobuf::uint64 HandBookPBData::fetters(int index) const {
  return fetters_.Get(index);
}
inline void HandBookPBData::set_fetters(int index, ::google::protobuf::uint64 value) {
  fetters_.Set(index, value);
}
inline void HandBookPBData::add_fetters(::google::protobuf::uint64 value) {
  fetters_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
HandBookPBData::fetters() const {
  return fetters_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
HandBookPBData::mutable_fetters() {
  return &fetters_;
}

// repeated .proto_ff.HandBookEmployPBInfo employs = 3;
inline int HandBookPBData::employs_size() const {
  return employs_.size();
}
inline void HandBookPBData::clear_employs() {
  employs_.Clear();
}
inline const ::proto_ff::HandBookEmployPBInfo& HandBookPBData::employs(int index) const {
  return employs_.Get(index);
}
inline ::proto_ff::HandBookEmployPBInfo* HandBookPBData::mutable_employs(int index) {
  return employs_.Mutable(index);
}
inline ::proto_ff::HandBookEmployPBInfo* HandBookPBData::add_employs() {
  return employs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookEmployPBInfo >&
HandBookPBData::employs() const {
  return employs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookEmployPBInfo >*
HandBookPBData::mutable_employs() {
  return &employs_;
}

// repeated .proto_ff.HandBookTablePBInfo tables = 4;
inline int HandBookPBData::tables_size() const {
  return tables_.size();
}
inline void HandBookPBData::clear_tables() {
  tables_.Clear();
}
inline const ::proto_ff::HandBookTablePBInfo& HandBookPBData::tables(int index) const {
  return tables_.Get(index);
}
inline ::proto_ff::HandBookTablePBInfo* HandBookPBData::mutable_tables(int index) {
  return tables_.Mutable(index);
}
inline ::proto_ff::HandBookTablePBInfo* HandBookPBData::add_tables() {
  return tables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookTablePBInfo >&
HandBookPBData::tables() const {
  return tables_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookTablePBInfo >*
HandBookPBData::mutable_tables() {
  return &tables_;
}

// repeated .proto_ff.HandBookBeastPBData beasts = 5;
inline int HandBookPBData::beasts_size() const {
  return beasts_.size();
}
inline void HandBookPBData::clear_beasts() {
  beasts_.Clear();
}
inline const ::proto_ff::HandBookBeastPBData& HandBookPBData::beasts(int index) const {
  return beasts_.Get(index);
}
inline ::proto_ff::HandBookBeastPBData* HandBookPBData::mutable_beasts(int index) {
  return beasts_.Mutable(index);
}
inline ::proto_ff::HandBookBeastPBData* HandBookPBData::add_beasts() {
  return beasts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookBeastPBData >&
HandBookPBData::beasts() const {
  return beasts_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookBeastPBData >*
HandBookPBData::mutable_beasts() {
  return &beasts_;
}

// repeated .proto_ff.HandBookBeastBattleSlotData slots = 6;
inline int HandBookPBData::slots_size() const {
  return slots_.size();
}
inline void HandBookPBData::clear_slots() {
  slots_.Clear();
}
inline const ::proto_ff::HandBookBeastBattleSlotData& HandBookPBData::slots(int index) const {
  return slots_.Get(index);
}
inline ::proto_ff::HandBookBeastBattleSlotData* HandBookPBData::mutable_slots(int index) {
  return slots_.Mutable(index);
}
inline ::proto_ff::HandBookBeastBattleSlotData* HandBookPBData::add_slots() {
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookBeastBattleSlotData >&
HandBookPBData::slots() const {
  return slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HandBookBeastBattleSlotData >*
HandBookPBData::mutable_slots() {
  return &slots_;
}

// optional uint64 beast_priv_id = 7;
inline bool HandBookPBData::has_beast_priv_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HandBookPBData::set_has_beast_priv_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HandBookPBData::clear_has_beast_priv_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HandBookPBData::clear_beast_priv_id() {
  beast_priv_id_ = GOOGLE_ULONGLONG(0);
  clear_has_beast_priv_id();
}
inline ::google::protobuf::uint64 HandBookPBData::beast_priv_id() const {
  return beast_priv_id_;
}
inline void HandBookPBData::set_beast_priv_id(::google::protobuf::uint64 value) {
  set_has_beast_priv_id();
  beast_priv_id_ = value;
}

// -------------------------------------------------------------------

// RankNodeDBData

// required uint64 cid = 1;
inline bool RankNodeDBData::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankNodeDBData::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankNodeDBData::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankNodeDBData::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RankNodeDBData::cid() const {
  return cid_;
}
inline void RankNodeDBData::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required uint64 value = 2;
inline bool RankNodeDBData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankNodeDBData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankNodeDBData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankNodeDBData::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 RankNodeDBData::value() const {
  return value_;
}
inline void RankNodeDBData::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// repeated int64 paramInt = 3;
inline int RankNodeDBData::paramint_size() const {
  return paramint_.size();
}
inline void RankNodeDBData::clear_paramint() {
  paramint_.Clear();
}
inline ::google::protobuf::int64 RankNodeDBData::paramint(int index) const {
  return paramint_.Get(index);
}
inline void RankNodeDBData::set_paramint(int index, ::google::protobuf::int64 value) {
  paramint_.Set(index, value);
}
inline void RankNodeDBData::add_paramint(::google::protobuf::int64 value) {
  paramint_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
RankNodeDBData::paramint() const {
  return paramint_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
RankNodeDBData::mutable_paramint() {
  return &paramint_;
}

// repeated string paramStr = 4;
inline int RankNodeDBData::paramstr_size() const {
  return paramstr_.size();
}
inline void RankNodeDBData::clear_paramstr() {
  paramstr_.Clear();
}
inline const ::std::string& RankNodeDBData::paramstr(int index) const {
  return paramstr_.Get(index);
}
inline ::std::string* RankNodeDBData::mutable_paramstr(int index) {
  return paramstr_.Mutable(index);
}
inline void RankNodeDBData::set_paramstr(int index, const ::std::string& value) {
  paramstr_.Mutable(index)->assign(value);
}
inline void RankNodeDBData::set_paramstr(int index, const char* value) {
  paramstr_.Mutable(index)->assign(value);
}
inline void RankNodeDBData::set_paramstr(int index, const char* value, size_t size) {
  paramstr_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RankNodeDBData::add_paramstr() {
  return paramstr_.Add();
}
inline void RankNodeDBData::add_paramstr(const ::std::string& value) {
  paramstr_.Add()->assign(value);
}
inline void RankNodeDBData::add_paramstr(const char* value) {
  paramstr_.Add()->assign(value);
}
inline void RankNodeDBData::add_paramstr(const char* value, size_t size) {
  paramstr_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RankNodeDBData::paramstr() const {
  return paramstr_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RankNodeDBData::mutable_paramstr() {
  return &paramstr_;
}

// -------------------------------------------------------------------

// RankTypeDBData

// required int32 rankType = 1;
inline bool RankTypeDBData::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankTypeDBData::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankTypeDBData::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankTypeDBData::clear_ranktype() {
  ranktype_ = 0;
  clear_has_ranktype();
}
inline ::google::protobuf::int32 RankTypeDBData::ranktype() const {
  return ranktype_;
}
inline void RankTypeDBData::set_ranktype(::google::protobuf::int32 value) {
  set_has_ranktype();
  ranktype_ = value;
}

// repeated .proto_ff.RankNodeDBData nodeList = 2;
inline int RankTypeDBData::nodelist_size() const {
  return nodelist_.size();
}
inline void RankTypeDBData::clear_nodelist() {
  nodelist_.Clear();
}
inline const ::proto_ff::RankNodeDBData& RankTypeDBData::nodelist(int index) const {
  return nodelist_.Get(index);
}
inline ::proto_ff::RankNodeDBData* RankTypeDBData::mutable_nodelist(int index) {
  return nodelist_.Mutable(index);
}
inline ::proto_ff::RankNodeDBData* RankTypeDBData::add_nodelist() {
  return nodelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RankNodeDBData >&
RankTypeDBData::nodelist() const {
  return nodelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RankNodeDBData >*
RankTypeDBData::mutable_nodelist() {
  return &nodelist_;
}

// optional int64 lastTime = 3;
inline bool RankTypeDBData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankTypeDBData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankTypeDBData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankTypeDBData::clear_lasttime() {
  lasttime_ = GOOGLE_LONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::int64 RankTypeDBData::lasttime() const {
  return lasttime_;
}
inline void RankTypeDBData::set_lasttime(::google::protobuf::int64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional int64 lastKillTopCid = 4;
inline bool RankTypeDBData::has_lastkilltopcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankTypeDBData::set_has_lastkilltopcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankTypeDBData::clear_has_lastkilltopcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankTypeDBData::clear_lastkilltopcid() {
  lastkilltopcid_ = GOOGLE_LONGLONG(0);
  clear_has_lastkilltopcid();
}
inline ::google::protobuf::int64 RankTypeDBData::lastkilltopcid() const {
  return lastkilltopcid_;
}
inline void RankTypeDBData::set_lastkilltopcid(::google::protobuf::int64 value) {
  set_has_lastkilltopcid();
  lastkilltopcid_ = value;
}

// optional int64 newKillTopCid = 5;
inline bool RankTypeDBData::has_newkilltopcid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RankTypeDBData::set_has_newkilltopcid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RankTypeDBData::clear_has_newkilltopcid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RankTypeDBData::clear_newkilltopcid() {
  newkilltopcid_ = GOOGLE_LONGLONG(0);
  clear_has_newkilltopcid();
}
inline ::google::protobuf::int64 RankTypeDBData::newkilltopcid() const {
  return newkilltopcid_;
}
inline void RankTypeDBData::set_newkilltopcid(::google::protobuf::int64 value) {
  set_has_newkilltopcid();
  newkilltopcid_ = value;
}

// -------------------------------------------------------------------

// RankNodeData

// required uint64 cid = 1;
inline bool RankNodeData::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankNodeData::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankNodeData::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankNodeData::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RankNodeData::cid() const {
  return cid_;
}
inline void RankNodeData::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 vipLevel = 2;
inline bool RankNodeData::has_viplevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankNodeData::set_has_viplevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankNodeData::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankNodeData::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 RankNodeData::viplevel() const {
  return viplevel_;
}
inline void RankNodeData::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// repeated string sParam = 3;
inline int RankNodeData::sparam_size() const {
  return sparam_.size();
}
inline void RankNodeData::clear_sparam() {
  sparam_.Clear();
}
inline const ::std::string& RankNodeData::sparam(int index) const {
  return sparam_.Get(index);
}
inline ::std::string* RankNodeData::mutable_sparam(int index) {
  return sparam_.Mutable(index);
}
inline void RankNodeData::set_sparam(int index, const ::std::string& value) {
  sparam_.Mutable(index)->assign(value);
}
inline void RankNodeData::set_sparam(int index, const char* value) {
  sparam_.Mutable(index)->assign(value);
}
inline void RankNodeData::set_sparam(int index, const char* value, size_t size) {
  sparam_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RankNodeData::add_sparam() {
  return sparam_.Add();
}
inline void RankNodeData::add_sparam(const ::std::string& value) {
  sparam_.Add()->assign(value);
}
inline void RankNodeData::add_sparam(const char* value) {
  sparam_.Add()->assign(value);
}
inline void RankNodeData::add_sparam(const char* value, size_t size) {
  sparam_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RankNodeData::sparam() const {
  return sparam_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RankNodeData::mutable_sparam() {
  return &sparam_;
}

// optional bool online = 4;
inline bool RankNodeData::has_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankNodeData::set_has_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankNodeData::clear_has_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankNodeData::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool RankNodeData::online() const {
  return online_;
}
inline void RankNodeData::set_online(bool value) {
  set_has_online();
  online_ = value;
}

// optional uint64 fight = 5;
inline bool RankNodeData::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RankNodeData::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RankNodeData::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RankNodeData::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 RankNodeData::fight() const {
  return fight_;
}
inline void RankNodeData::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional bytes name = 6;
inline bool RankNodeData::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RankNodeData::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RankNodeData::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RankNodeData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RankNodeData::name() const {
  return *name_;
}
inline void RankNodeData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RankNodeData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RankNodeData::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RankNodeData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RankNodeData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RankNodeData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_ff.RoleFacadeProto facade = 7;
inline bool RankNodeData::has_facade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RankNodeData::set_has_facade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RankNodeData::clear_has_facade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RankNodeData::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& RankNodeData::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* RankNodeData::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* RankNodeData::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void RankNodeData::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// -------------------------------------------------------------------

// RankDataInfo

// required uint32 rankType = 1;
inline bool RankDataInfo::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankDataInfo::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankDataInfo::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankDataInfo::clear_ranktype() {
  ranktype_ = 0u;
  clear_has_ranktype();
}
inline ::google::protobuf::uint32 RankDataInfo::ranktype() const {
  return ranktype_;
}
inline void RankDataInfo::set_ranktype(::google::protobuf::uint32 value) {
  set_has_ranktype();
  ranktype_ = value;
}

// required uint32 selfRank = 2;
inline bool RankDataInfo::has_selfrank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankDataInfo::set_has_selfrank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankDataInfo::clear_has_selfrank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankDataInfo::clear_selfrank() {
  selfrank_ = 0u;
  clear_has_selfrank();
}
inline ::google::protobuf::uint32 RankDataInfo::selfrank() const {
  return selfrank_;
}
inline void RankDataInfo::set_selfrank(::google::protobuf::uint32 value) {
  set_has_selfrank();
  selfrank_ = value;
}

// required .proto_ff.RankNodeData selfData = 3;
inline bool RankDataInfo::has_selfdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankDataInfo::set_has_selfdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankDataInfo::clear_has_selfdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankDataInfo::clear_selfdata() {
  if (selfdata_ != NULL) selfdata_->::proto_ff::RankNodeData::Clear();
  clear_has_selfdata();
}
inline const ::proto_ff::RankNodeData& RankDataInfo::selfdata() const {
  return selfdata_ != NULL ? *selfdata_ : *default_instance_->selfdata_;
}
inline ::proto_ff::RankNodeData* RankDataInfo::mutable_selfdata() {
  set_has_selfdata();
  if (selfdata_ == NULL) selfdata_ = new ::proto_ff::RankNodeData;
  return selfdata_;
}
inline ::proto_ff::RankNodeData* RankDataInfo::release_selfdata() {
  clear_has_selfdata();
  ::proto_ff::RankNodeData* temp = selfdata_;
  selfdata_ = NULL;
  return temp;
}
inline void RankDataInfo::set_allocated_selfdata(::proto_ff::RankNodeData* selfdata) {
  delete selfdata_;
  selfdata_ = selfdata;
  if (selfdata) {
    set_has_selfdata();
  } else {
    clear_has_selfdata();
  }
}

// repeated .proto_ff.RankNodeData rankList = 4;
inline int RankDataInfo::ranklist_size() const {
  return ranklist_.size();
}
inline void RankDataInfo::clear_ranklist() {
  ranklist_.Clear();
}
inline const ::proto_ff::RankNodeData& RankDataInfo::ranklist(int index) const {
  return ranklist_.Get(index);
}
inline ::proto_ff::RankNodeData* RankDataInfo::mutable_ranklist(int index) {
  return ranklist_.Mutable(index);
}
inline ::proto_ff::RankNodeData* RankDataInfo::add_ranklist() {
  return ranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RankNodeData >&
RankDataInfo::ranklist() const {
  return ranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RankNodeData >*
RankDataInfo::mutable_ranklist() {
  return &ranklist_;
}

// -------------------------------------------------------------------

// MergeReq

// optional int32 type = 1;
inline bool MergeReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MergeReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MergeReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MergeReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MergeReq::type() const {
  return type_;
}
inline void MergeReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 id = 2;
inline bool MergeReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MergeReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MergeReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MergeReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MergeReq::id() const {
  return id_;
}
inline void MergeReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated int32 index_list = 3;
inline int MergeReq::index_list_size() const {
  return index_list_.size();
}
inline void MergeReq::clear_index_list() {
  index_list_.Clear();
}
inline ::google::protobuf::int32 MergeReq::index_list(int index) const {
  return index_list_.Get(index);
}
inline void MergeReq::set_index_list(int index, ::google::protobuf::int32 value) {
  index_list_.Set(index, value);
}
inline void MergeReq::add_index_list(::google::protobuf::int32 value) {
  index_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MergeReq::index_list() const {
  return index_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MergeReq::mutable_index_list() {
  return &index_list_;
}

// optional int32 num = 4;
inline bool MergeReq::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MergeReq::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MergeReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MergeReq::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 MergeReq::num() const {
  return num_;
}
inline void MergeReq::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 target_pos = 5;
inline bool MergeReq::has_target_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MergeReq::set_has_target_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MergeReq::clear_has_target_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MergeReq::clear_target_pos() {
  target_pos_ = 0;
  clear_has_target_pos();
}
inline ::google::protobuf::int32 MergeReq::target_pos() const {
  return target_pos_;
}
inline void MergeReq::set_target_pos(::google::protobuf::int32 value) {
  set_has_target_pos();
  target_pos_ = value;
}

// -------------------------------------------------------------------

// MergeRsp

// optional int32 ret = 1;
inline bool MergeRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MergeRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MergeRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MergeRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MergeRsp::ret() const {
  return ret_;
}
inline void MergeRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool MergeRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MergeRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MergeRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MergeRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MergeRsp::type() const {
  return type_;
}
inline void MergeRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 id = 3;
inline bool MergeRsp::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MergeRsp::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MergeRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MergeRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MergeRsp::id() const {
  return id_;
}
inline void MergeRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 itemId = 4;
inline bool MergeRsp::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MergeRsp::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MergeRsp::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MergeRsp::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 MergeRsp::itemid() const {
  return itemid_;
}
inline void MergeRsp::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 num = 5;
inline bool MergeRsp::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MergeRsp::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MergeRsp::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MergeRsp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 MergeRsp::num() const {
  return num_;
}
inline void MergeRsp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 result = 6;
inline bool MergeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MergeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MergeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MergeRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MergeRsp::result() const {
  return result_;
}
inline void MergeRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// PSDGoods

// required uint32 id = 1;
inline bool PSDGoods::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PSDGoods::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PSDGoods::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PSDGoods::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PSDGoods::id() const {
  return id_;
}
inline void PSDGoods::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 amount = 2;
inline bool PSDGoods::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PSDGoods::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PSDGoods::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PSDGoods::clear_amount() {
  amount_ = 0u;
  clear_has_amount();
}
inline ::google::protobuf::uint32 PSDGoods::amount() const {
  return amount_;
}
inline void PSDGoods::set_amount(::google::protobuf::uint32 value) {
  set_has_amount();
  amount_ = value;
}

// -------------------------------------------------------------------

// PSDPurchaseRecord

// required uint32 goodsId = 1;
inline bool PSDPurchaseRecord::has_goodsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PSDPurchaseRecord::set_has_goodsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PSDPurchaseRecord::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PSDPurchaseRecord::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 PSDPurchaseRecord::goodsid() const {
  return goodsid_;
}
inline void PSDPurchaseRecord::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
}

// required uint64 time = 2;
inline bool PSDPurchaseRecord::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PSDPurchaseRecord::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PSDPurchaseRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PSDPurchaseRecord::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 PSDPurchaseRecord::time() const {
  return time_;
}
inline void PSDPurchaseRecord::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PSDShop

// required uint32 shopId = 1;
inline bool PSDShop::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PSDShop::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PSDShop::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PSDShop::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 PSDShop::shopid() const {
  return shopid_;
}
inline void PSDShop::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
}

// required uint32 freeRefreshCount = 2;
inline bool PSDShop::has_freerefreshcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PSDShop::set_has_freerefreshcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PSDShop::clear_has_freerefreshcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PSDShop::clear_freerefreshcount() {
  freerefreshcount_ = 0u;
  clear_has_freerefreshcount();
}
inline ::google::protobuf::uint32 PSDShop::freerefreshcount() const {
  return freerefreshcount_;
}
inline void PSDShop::set_freerefreshcount(::google::protobuf::uint32 value) {
  set_has_freerefreshcount();
  freerefreshcount_ = value;
}

// required uint64 openTime = 3;
inline bool PSDShop::has_opentime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PSDShop::set_has_opentime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PSDShop::clear_has_opentime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PSDShop::clear_opentime() {
  opentime_ = GOOGLE_ULONGLONG(0);
  clear_has_opentime();
}
inline ::google::protobuf::uint64 PSDShop::opentime() const {
  return opentime_;
}
inline void PSDShop::set_opentime(::google::protobuf::uint64 value) {
  set_has_opentime();
  opentime_ = value;
}

// repeated .proto_ff.PSDGoods saleList = 4;
inline int PSDShop::salelist_size() const {
  return salelist_.size();
}
inline void PSDShop::clear_salelist() {
  salelist_.Clear();
}
inline const ::proto_ff::PSDGoods& PSDShop::salelist(int index) const {
  return salelist_.Get(index);
}
inline ::proto_ff::PSDGoods* PSDShop::mutable_salelist(int index) {
  return salelist_.Mutable(index);
}
inline ::proto_ff::PSDGoods* PSDShop::add_salelist() {
  return salelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDGoods >&
PSDShop::salelist() const {
  return salelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDGoods >*
PSDShop::mutable_salelist() {
  return &salelist_;
}

// repeated .proto_ff.PSDPurchaseRecord purchasedList = 5;
inline int PSDShop::purchasedlist_size() const {
  return purchasedlist_.size();
}
inline void PSDShop::clear_purchasedlist() {
  purchasedlist_.Clear();
}
inline const ::proto_ff::PSDPurchaseRecord& PSDShop::purchasedlist(int index) const {
  return purchasedlist_.Get(index);
}
inline ::proto_ff::PSDPurchaseRecord* PSDShop::mutable_purchasedlist(int index) {
  return purchasedlist_.Mutable(index);
}
inline ::proto_ff::PSDPurchaseRecord* PSDShop::add_purchasedlist() {
  return purchasedlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDPurchaseRecord >&
PSDShop::purchasedlist() const {
  return purchasedlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDPurchaseRecord >*
PSDShop::mutable_purchasedlist() {
  return &purchasedlist_;
}

// -------------------------------------------------------------------

// PSDatas

// repeated .proto_ff.PSDShop shopList = 1;
inline int PSDatas::shoplist_size() const {
  return shoplist_.size();
}
inline void PSDatas::clear_shoplist() {
  shoplist_.Clear();
}
inline const ::proto_ff::PSDShop& PSDatas::shoplist(int index) const {
  return shoplist_.Get(index);
}
inline ::proto_ff::PSDShop* PSDatas::mutable_shoplist(int index) {
  return shoplist_.Mutable(index);
}
inline ::proto_ff::PSDShop* PSDatas::add_shoplist() {
  return shoplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDShop >&
PSDatas::shoplist() const {
  return shoplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PSDShop >*
PSDatas::mutable_shoplist() {
  return &shoplist_;
}

// -------------------------------------------------------------------

// DragonSoulHoleData

// optional .proto_ff.EquipInfo equip_info = 1;
inline bool DragonSoulHoleData::has_equip_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DragonSoulHoleData::set_has_equip_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DragonSoulHoleData::clear_has_equip_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DragonSoulHoleData::clear_equip_info() {
  if (equip_info_ != NULL) equip_info_->::proto_ff::EquipInfo::Clear();
  clear_has_equip_info();
}
inline const ::proto_ff::EquipInfo& DragonSoulHoleData::equip_info() const {
  return equip_info_ != NULL ? *equip_info_ : *default_instance_->equip_info_;
}
inline ::proto_ff::EquipInfo* DragonSoulHoleData::mutable_equip_info() {
  set_has_equip_info();
  if (equip_info_ == NULL) equip_info_ = new ::proto_ff::EquipInfo;
  return equip_info_;
}
inline ::proto_ff::EquipInfo* DragonSoulHoleData::release_equip_info() {
  clear_has_equip_info();
  ::proto_ff::EquipInfo* temp = equip_info_;
  equip_info_ = NULL;
  return temp;
}
inline void DragonSoulHoleData::set_allocated_equip_info(::proto_ff::EquipInfo* equip_info) {
  delete equip_info_;
  equip_info_ = equip_info;
  if (equip_info) {
    set_has_equip_info();
  } else {
    clear_has_equip_info();
  }
}

// optional int32 status = 2;
inline bool DragonSoulHoleData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DragonSoulHoleData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DragonSoulHoleData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DragonSoulHoleData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DragonSoulHoleData::status() const {
  return status_;
}
inline void DragonSoulHoleData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 id = 3;
inline bool DragonSoulHoleData::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DragonSoulHoleData::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DragonSoulHoleData::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DragonSoulHoleData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DragonSoulHoleData::id() const {
  return id_;
}
inline void DragonSoulHoleData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 wake_lv = 4;
inline bool DragonSoulHoleData::has_wake_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DragonSoulHoleData::set_has_wake_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DragonSoulHoleData::clear_has_wake_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DragonSoulHoleData::clear_wake_lv() {
  wake_lv_ = 0;
  clear_has_wake_lv();
}
inline ::google::protobuf::int32 DragonSoulHoleData::wake_lv() const {
  return wake_lv_;
}
inline void DragonSoulHoleData::set_wake_lv(::google::protobuf::int32 value) {
  set_has_wake_lv();
  wake_lv_ = value;
}

// -------------------------------------------------------------------

// DragonSoulStar

// optional int32 id = 1;
inline bool DragonSoulStar::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DragonSoulStar::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DragonSoulStar::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DragonSoulStar::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DragonSoulStar::id() const {
  return id_;
}
inline void DragonSoulStar::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool DragonSoulStar::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DragonSoulStar::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DragonSoulStar::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DragonSoulStar::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DragonSoulStar::status() const {
  return status_;
}
inline void DragonSoulStar::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// DragonSoulData

// repeated .proto_ff.DragonSoulHoleData hole_data = 1;
inline int DragonSoulData::hole_data_size() const {
  return hole_data_.size();
}
inline void DragonSoulData::clear_hole_data() {
  hole_data_.Clear();
}
inline const ::proto_ff::DragonSoulHoleData& DragonSoulData::hole_data(int index) const {
  return hole_data_.Get(index);
}
inline ::proto_ff::DragonSoulHoleData* DragonSoulData::mutable_hole_data(int index) {
  return hole_data_.Mutable(index);
}
inline ::proto_ff::DragonSoulHoleData* DragonSoulData::add_hole_data() {
  return hole_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DragonSoulHoleData >&
DragonSoulData::hole_data() const {
  return hole_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DragonSoulHoleData >*
DragonSoulData::mutable_hole_data() {
  return &hole_data_;
}

// repeated .proto_ff.DragonSoulStar star = 2;
inline int DragonSoulData::star_size() const {
  return star_.size();
}
inline void DragonSoulData::clear_star() {
  star_.Clear();
}
inline const ::proto_ff::DragonSoulStar& DragonSoulData::star(int index) const {
  return star_.Get(index);
}
inline ::proto_ff::DragonSoulStar* DragonSoulData::mutable_star(int index) {
  return star_.Mutable(index);
}
inline ::proto_ff::DragonSoulStar* DragonSoulData::add_star() {
  return star_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DragonSoulStar >&
DragonSoulData::star() const {
  return star_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DragonSoulStar >*
DragonSoulData::mutable_star() {
  return &star_;
}

// -------------------------------------------------------------------

// EnterQyActReq

// -------------------------------------------------------------------

// EnterQyActRsp

// optional int32 ret = 1;
inline bool EnterQyActRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterQyActRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterQyActRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterQyActRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 EnterQyActRsp::ret() const {
  return ret_;
}
inline void EnterQyActRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// NotifyQyActDupData

// optional int32 layer = 1;
inline bool NotifyQyActDupData::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyQyActDupData::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyQyActDupData::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyQyActDupData::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 NotifyQyActDupData::layer() const {
  return layer_;
}
inline void NotifyQyActDupData::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// optional int32 num = 2;
inline bool NotifyQyActDupData::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyQyActDupData::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyQyActDupData::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyQyActDupData::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 NotifyQyActDupData::num() const {
  return num_;
}
inline void NotifyQyActDupData::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// QyRankInfo

// optional uint64 cid = 1;
inline bool QyRankInfo::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QyRankInfo::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QyRankInfo::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QyRankInfo::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 QyRankInfo::cid() const {
  return cid_;
}
inline void QyRankInfo::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional string name = 2;
inline bool QyRankInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QyRankInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QyRankInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QyRankInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& QyRankInfo::name() const {
  return *name_;
}
inline void QyRankInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void QyRankInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void QyRankInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QyRankInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* QyRankInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QyRankInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 layer = 3;
inline bool QyRankInfo::has_layer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QyRankInfo::set_has_layer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QyRankInfo::clear_has_layer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QyRankInfo::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 QyRankInfo::layer() const {
  return layer_;
}
inline void QyRankInfo::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// optional int32 zid = 4;
inline bool QyRankInfo::has_zid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QyRankInfo::set_has_zid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QyRankInfo::clear_has_zid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QyRankInfo::clear_zid() {
  zid_ = 0;
  clear_has_zid();
}
inline ::google::protobuf::int32 QyRankInfo::zid() const {
  return zid_;
}
inline void QyRankInfo::set_zid(::google::protobuf::int32 value) {
  set_has_zid();
  zid_ = value;
}

// optional int32 rank = 5;
inline bool QyRankInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QyRankInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QyRankInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QyRankInfo::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 QyRankInfo::rank() const {
  return rank_;
}
inline void QyRankInfo::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional int32 passtime = 6;
inline bool QyRankInfo::has_passtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QyRankInfo::set_has_passtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QyRankInfo::clear_has_passtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QyRankInfo::clear_passtime() {
  passtime_ = 0;
  clear_has_passtime();
}
inline ::google::protobuf::int32 QyRankInfo::passtime() const {
  return passtime_;
}
inline void QyRankInfo::set_passtime(::google::protobuf::int32 value) {
  set_has_passtime();
  passtime_ = value;
}

// -------------------------------------------------------------------

// NotifyQyPassLayer

// optional int32 layer = 1;
inline bool NotifyQyPassLayer::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyQyPassLayer::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyQyPassLayer::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyQyPassLayer::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 NotifyQyPassLayer::layer() const {
  return layer_;
}
inline void NotifyQyPassLayer::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// -------------------------------------------------------------------

// NotifyQyActRank

// repeated .proto_ff.QyRankInfo rank = 1;
inline int NotifyQyActRank::rank_size() const {
  return rank_.size();
}
inline void NotifyQyActRank::clear_rank() {
  rank_.Clear();
}
inline const ::proto_ff::QyRankInfo& NotifyQyActRank::rank(int index) const {
  return rank_.Get(index);
}
inline ::proto_ff::QyRankInfo* NotifyQyActRank::mutable_rank(int index) {
  return rank_.Mutable(index);
}
inline ::proto_ff::QyRankInfo* NotifyQyActRank::add_rank() {
  return rank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::QyRankInfo >&
NotifyQyActRank::rank() const {
  return rank_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::QyRankInfo >*
NotifyQyActRank::mutable_rank() {
  return &rank_;
}

// -------------------------------------------------------------------

// L2CEnterActReq

// optional uint64 cid = 1;
inline bool L2CEnterActReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CEnterActReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CEnterActReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CEnterActReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 L2CEnterActReq::cid() const {
  return cid_;
}
inline void L2CEnterActReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 zid = 2;
inline bool L2CEnterActReq::has_zid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CEnterActReq::set_has_zid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CEnterActReq::clear_has_zid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CEnterActReq::clear_zid() {
  zid_ = 0;
  clear_has_zid();
}
inline ::google::protobuf::int32 L2CEnterActReq::zid() const {
  return zid_;
}
inline void L2CEnterActReq::set_zid(::google::protobuf::int32 value) {
  set_has_zid();
  zid_ = value;
}

// optional int32 acttype = 3;
inline bool L2CEnterActReq::has_acttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CEnterActReq::set_has_acttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CEnterActReq::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CEnterActReq::clear_acttype() {
  acttype_ = 0;
  clear_has_acttype();
}
inline ::google::protobuf::int32 L2CEnterActReq::acttype() const {
  return acttype_;
}
inline void L2CEnterActReq::set_acttype(::google::protobuf::int32 value) {
  set_has_acttype();
  acttype_ = value;
}

// -------------------------------------------------------------------

// C2LEnterActReq

// optional uint64 cid = 1;
inline bool C2LEnterActReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LEnterActReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LEnterActReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LEnterActReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LEnterActReq::cid() const {
  return cid_;
}
inline void C2LEnterActReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 zid = 2;
inline bool C2LEnterActReq::has_zid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LEnterActReq::set_has_zid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LEnterActReq::clear_has_zid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LEnterActReq::clear_zid() {
  zid_ = 0;
  clear_has_zid();
}
inline ::google::protobuf::int32 C2LEnterActReq::zid() const {
  return zid_;
}
inline void C2LEnterActReq::set_zid(::google::protobuf::int32 value) {
  set_has_zid();
  zid_ = value;
}

// optional int32 acttype = 3;
inline bool C2LEnterActReq::has_acttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LEnterActReq::set_has_acttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LEnterActReq::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LEnterActReq::clear_acttype() {
  acttype_ = 0;
  clear_has_acttype();
}
inline ::google::protobuf::int32 C2LEnterActReq::acttype() const {
  return acttype_;
}
inline void C2LEnterActReq::set_acttype(::google::protobuf::int32 value) {
  set_has_acttype();
  acttype_ = value;
}

// -------------------------------------------------------------------

// L2CEnterActRsp

// optional int32 ret = 1;
inline bool L2CEnterActRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CEnterActRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CEnterActRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CEnterActRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CEnterActRsp::ret() const {
  return ret_;
}
inline void L2CEnterActRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 cid = 2;
inline bool L2CEnterActRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CEnterActRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CEnterActRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CEnterActRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 L2CEnterActRsp::cid() const {
  return cid_;
}
inline void L2CEnterActRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 zid = 3;
inline bool L2CEnterActRsp::has_zid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CEnterActRsp::set_has_zid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CEnterActRsp::clear_has_zid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CEnterActRsp::clear_zid() {
  zid_ = 0;
  clear_has_zid();
}
inline ::google::protobuf::int32 L2CEnterActRsp::zid() const {
  return zid_;
}
inline void L2CEnterActRsp::set_zid(::google::protobuf::int32 value) {
  set_has_zid();
  zid_ = value;
}

// optional int32 acttype = 4;
inline bool L2CEnterActRsp::has_acttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CEnterActRsp::set_has_acttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CEnterActRsp::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CEnterActRsp::clear_acttype() {
  acttype_ = 0;
  clear_has_acttype();
}
inline ::google::protobuf::int32 L2CEnterActRsp::acttype() const {
  return acttype_;
}
inline void L2CEnterActRsp::set_acttype(::google::protobuf::int32 value) {
  set_has_acttype();
  acttype_ = value;
}

// -------------------------------------------------------------------

// NotifyEnterActRsp

// optional int32 ret = 1;
inline bool NotifyEnterActRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyEnterActRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyEnterActRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyEnterActRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 NotifyEnterActRsp::ret() const {
  return ret_;
}
inline void NotifyEnterActRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 cid = 2;
inline bool NotifyEnterActRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyEnterActRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyEnterActRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyEnterActRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 NotifyEnterActRsp::cid() const {
  return cid_;
}
inline void NotifyEnterActRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 zid = 3;
inline bool NotifyEnterActRsp::has_zid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyEnterActRsp::set_has_zid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyEnterActRsp::clear_has_zid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyEnterActRsp::clear_zid() {
  zid_ = GOOGLE_ULONGLONG(0);
  clear_has_zid();
}
inline ::google::protobuf::uint64 NotifyEnterActRsp::zid() const {
  return zid_;
}
inline void NotifyEnterActRsp::set_zid(::google::protobuf::uint64 value) {
  set_has_zid();
  zid_ = value;
}

// optional int32 acttype = 4;
inline bool NotifyEnterActRsp::has_acttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyEnterActRsp::set_has_acttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyEnterActRsp::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyEnterActRsp::clear_acttype() {
  acttype_ = 0;
  clear_has_acttype();
}
inline ::google::protobuf::int32 NotifyEnterActRsp::acttype() const {
  return acttype_;
}
inline void NotifyEnterActRsp::set_acttype(::google::protobuf::int32 value) {
  set_has_acttype();
  acttype_ = value;
}

// -------------------------------------------------------------------

// WelfareSignPBData

// optional int32 id = 1;
inline bool WelfareSignPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareSignPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareSignPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareSignPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WelfareSignPBData::id() const {
  return id_;
}
inline void WelfareSignPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool WelfareSignPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareSignPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareSignPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareSignPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WelfareSignPBData::status() const {
  return status_;
}
inline void WelfareSignPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// WelfareAccrueRewardPBData

// optional int32 id = 1;
inline bool WelfareAccrueRewardPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareAccrueRewardPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareAccrueRewardPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareAccrueRewardPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WelfareAccrueRewardPBData::id() const {
  return id_;
}
inline void WelfareAccrueRewardPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool WelfareAccrueRewardPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareAccrueRewardPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareAccrueRewardPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareAccrueRewardPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WelfareAccrueRewardPBData::status() const {
  return status_;
}
inline void WelfareAccrueRewardPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// WelfareLvRewardPBData

// optional int32 id = 1;
inline bool WelfareLvRewardPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareLvRewardPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareLvRewardPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareLvRewardPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WelfareLvRewardPBData::id() const {
  return id_;
}
inline void WelfareLvRewardPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool WelfareLvRewardPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareLvRewardPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareLvRewardPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareLvRewardPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WelfareLvRewardPBData::status() const {
  return status_;
}
inline void WelfareLvRewardPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 vip_status = 3;
inline bool WelfareLvRewardPBData::has_vip_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WelfareLvRewardPBData::set_has_vip_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WelfareLvRewardPBData::clear_has_vip_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WelfareLvRewardPBData::clear_vip_status() {
  vip_status_ = 0;
  clear_has_vip_status();
}
inline ::google::protobuf::int32 WelfareLvRewardPBData::vip_status() const {
  return vip_status_;
}
inline void WelfareLvRewardPBData::set_vip_status(::google::protobuf::int32 value) {
  set_has_vip_status();
  vip_status_ = value;
}

// -------------------------------------------------------------------

// WelfareOnlineRewardPBData

// optional int32 id = 1;
inline bool WelfareOnlineRewardPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareOnlineRewardPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareOnlineRewardPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareOnlineRewardPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WelfareOnlineRewardPBData::id() const {
  return id_;
}
inline void WelfareOnlineRewardPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool WelfareOnlineRewardPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareOnlineRewardPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareOnlineRewardPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareOnlineRewardPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WelfareOnlineRewardPBData::status() const {
  return status_;
}
inline void WelfareOnlineRewardPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// WelfareFraudRewardPBData

// optional int32 status = 1;
inline bool WelfareFraudRewardPBData::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareFraudRewardPBData::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareFraudRewardPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareFraudRewardPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WelfareFraudRewardPBData::status() const {
  return status_;
}
inline void WelfareFraudRewardPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated int32 id = 2;
inline int WelfareFraudRewardPBData::id_size() const {
  return id_.size();
}
inline void WelfareFraudRewardPBData::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 WelfareFraudRewardPBData::id(int index) const {
  return id_.Get(index);
}
inline void WelfareFraudRewardPBData::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
}
inline void WelfareFraudRewardPBData::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WelfareFraudRewardPBData::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WelfareFraudRewardPBData::mutable_id() {
  return &id_;
}

// -------------------------------------------------------------------

// WelfareNotifyRewardPBData

// optional int32 status = 1;
inline bool WelfareNotifyRewardPBData::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareNotifyRewardPBData::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareNotifyRewardPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareNotifyRewardPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WelfareNotifyRewardPBData::status() const {
  return status_;
}
inline void WelfareNotifyRewardPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 version_id = 2;
inline bool WelfareNotifyRewardPBData::has_version_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareNotifyRewardPBData::set_has_version_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareNotifyRewardPBData::clear_has_version_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareNotifyRewardPBData::clear_version_id() {
  version_id_ = 0;
  clear_has_version_id();
}
inline ::google::protobuf::int32 WelfareNotifyRewardPBData::version_id() const {
  return version_id_;
}
inline void WelfareNotifyRewardPBData::set_version_id(::google::protobuf::int32 value) {
  set_has_version_id();
  version_id_ = value;
}

// -------------------------------------------------------------------

// WelfareWeekEndRewardPBData

// optional int32 id = 1;
inline bool WelfareWeekEndRewardPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareWeekEndRewardPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareWeekEndRewardPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareWeekEndRewardPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WelfareWeekEndRewardPBData::id() const {
  return id_;
}
inline void WelfareWeekEndRewardPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool WelfareWeekEndRewardPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareWeekEndRewardPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareWeekEndRewardPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareWeekEndRewardPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WelfareWeekEndRewardPBData::status() const {
  return status_;
}
inline void WelfareWeekEndRewardPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// WelfareQiFuData

// optional int64 last_free_qifu_time = 1;
inline bool WelfareQiFuData::has_last_free_qifu_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareQiFuData::set_has_last_free_qifu_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareQiFuData::clear_has_last_free_qifu_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareQiFuData::clear_last_free_qifu_time() {
  last_free_qifu_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_free_qifu_time();
}
inline ::google::protobuf::int64 WelfareQiFuData::last_free_qifu_time() const {
  return last_free_qifu_time_;
}
inline void WelfareQiFuData::set_last_free_qifu_time(::google::protobuf::int64 value) {
  set_has_last_free_qifu_time();
  last_free_qifu_time_ = value;
}

// optional int32 free_qifu_status = 2;
inline bool WelfareQiFuData::has_free_qifu_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareQiFuData::set_has_free_qifu_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareQiFuData::clear_has_free_qifu_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareQiFuData::clear_free_qifu_status() {
  free_qifu_status_ = 0;
  clear_has_free_qifu_status();
}
inline ::google::protobuf::int32 WelfareQiFuData::free_qifu_status() const {
  return free_qifu_status_;
}
inline void WelfareQiFuData::set_free_qifu_status(::google::protobuf::int32 value) {
  set_has_free_qifu_status();
  free_qifu_status_ = value;
}

// optional int32 max_gold_qifu_buy_num = 3;
inline bool WelfareQiFuData::has_max_gold_qifu_buy_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WelfareQiFuData::set_has_max_gold_qifu_buy_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WelfareQiFuData::clear_has_max_gold_qifu_buy_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WelfareQiFuData::clear_max_gold_qifu_buy_num() {
  max_gold_qifu_buy_num_ = 0;
  clear_has_max_gold_qifu_buy_num();
}
inline ::google::protobuf::int32 WelfareQiFuData::max_gold_qifu_buy_num() const {
  return max_gold_qifu_buy_num_;
}
inline void WelfareQiFuData::set_max_gold_qifu_buy_num(::google::protobuf::int32 value) {
  set_has_max_gold_qifu_buy_num();
  max_gold_qifu_buy_num_ = value;
}

// optional int32 left_gold_qifu_buy_num = 4;
inline bool WelfareQiFuData::has_left_gold_qifu_buy_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WelfareQiFuData::set_has_left_gold_qifu_buy_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WelfareQiFuData::clear_has_left_gold_qifu_buy_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WelfareQiFuData::clear_left_gold_qifu_buy_num() {
  left_gold_qifu_buy_num_ = 0;
  clear_has_left_gold_qifu_buy_num();
}
inline ::google::protobuf::int32 WelfareQiFuData::left_gold_qifu_buy_num() const {
  return left_gold_qifu_buy_num_;
}
inline void WelfareQiFuData::set_left_gold_qifu_buy_num(::google::protobuf::int32 value) {
  set_has_left_gold_qifu_buy_num();
  left_gold_qifu_buy_num_ = value;
}

// optional int32 max_exp_qifu_buy_num = 5;
inline bool WelfareQiFuData::has_max_exp_qifu_buy_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WelfareQiFuData::set_has_max_exp_qifu_buy_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WelfareQiFuData::clear_has_max_exp_qifu_buy_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WelfareQiFuData::clear_max_exp_qifu_buy_num() {
  max_exp_qifu_buy_num_ = 0;
  clear_has_max_exp_qifu_buy_num();
}
inline ::google::protobuf::int32 WelfareQiFuData::max_exp_qifu_buy_num() const {
  return max_exp_qifu_buy_num_;
}
inline void WelfareQiFuData::set_max_exp_qifu_buy_num(::google::protobuf::int32 value) {
  set_has_max_exp_qifu_buy_num();
  max_exp_qifu_buy_num_ = value;
}

// optional int32 left_exp_qifu_buy_num = 6;
inline bool WelfareQiFuData::has_left_exp_qifu_buy_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WelfareQiFuData::set_has_left_exp_qifu_buy_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WelfareQiFuData::clear_has_left_exp_qifu_buy_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WelfareQiFuData::clear_left_exp_qifu_buy_num() {
  left_exp_qifu_buy_num_ = 0;
  clear_has_left_exp_qifu_buy_num();
}
inline ::google::protobuf::int32 WelfareQiFuData::left_exp_qifu_buy_num() const {
  return left_exp_qifu_buy_num_;
}
inline void WelfareQiFuData::set_left_exp_qifu_buy_num(::google::protobuf::int32 value) {
  set_has_left_exp_qifu_buy_num();
  left_exp_qifu_buy_num_ = value;
}

// optional int32 save_money = 7;
inline bool WelfareQiFuData::has_save_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WelfareQiFuData::set_has_save_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WelfareQiFuData::clear_has_save_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WelfareQiFuData::clear_save_money() {
  save_money_ = 0;
  clear_has_save_money();
}
inline ::google::protobuf::int32 WelfareQiFuData::save_money() const {
  return save_money_;
}
inline void WelfareQiFuData::set_save_money(::google::protobuf::int32 value) {
  set_has_save_money();
  save_money_ = value;
}

// optional int32 last_save_money_time = 8;
inline bool WelfareQiFuData::has_last_save_money_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WelfareQiFuData::set_has_last_save_money_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WelfareQiFuData::clear_has_last_save_money_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WelfareQiFuData::clear_last_save_money_time() {
  last_save_money_time_ = 0;
  clear_has_last_save_money_time();
}
inline ::google::protobuf::int32 WelfareQiFuData::last_save_money_time() const {
  return last_save_money_time_;
}
inline void WelfareQiFuData::set_last_save_money_time(::google::protobuf::int32 value) {
  set_has_last_save_money_time();
  last_save_money_time_ = value;
}

// optional int32 last_get_money_time = 9;
inline bool WelfareQiFuData::has_last_get_money_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WelfareQiFuData::set_has_last_get_money_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WelfareQiFuData::clear_has_last_get_money_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WelfareQiFuData::clear_last_get_money_time() {
  last_get_money_time_ = 0;
  clear_has_last_get_money_time();
}
inline ::google::protobuf::int32 WelfareQiFuData::last_get_money_time() const {
  return last_get_money_time_;
}
inline void WelfareQiFuData::set_last_get_money_time(::google::protobuf::int32 value) {
  set_has_last_get_money_time();
  last_get_money_time_ = value;
}

// optional int32 get_money_day = 10;
inline bool WelfareQiFuData::has_get_money_day() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WelfareQiFuData::set_has_get_money_day() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WelfareQiFuData::clear_has_get_money_day() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WelfareQiFuData::clear_get_money_day() {
  get_money_day_ = 0;
  clear_has_get_money_day();
}
inline ::google::protobuf::int32 WelfareQiFuData::get_money_day() const {
  return get_money_day_;
}
inline void WelfareQiFuData::set_get_money_day(::google::protobuf::int32 value) {
  set_has_get_money_day();
  get_money_day_ = value;
}

// optional int32 all_get_money = 11;
inline bool WelfareQiFuData::has_all_get_money() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WelfareQiFuData::set_has_all_get_money() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WelfareQiFuData::clear_has_all_get_money() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WelfareQiFuData::clear_all_get_money() {
  all_get_money_ = 0;
  clear_has_all_get_money();
}
inline ::google::protobuf::int32 WelfareQiFuData::all_get_money() const {
  return all_get_money_;
}
inline void WelfareQiFuData::set_all_get_money(::google::protobuf::int32 value) {
  set_has_all_get_money();
  all_get_money_ = value;
}

// -------------------------------------------------------------------

// WelfareLogonData

// optional int32 id = 1;
inline bool WelfareLogonData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareLogonData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareLogonData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareLogonData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WelfareLogonData::id() const {
  return id_;
}
inline void WelfareLogonData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool WelfareLogonData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareLogonData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareLogonData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareLogonData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WelfareLogonData::status() const {
  return status_;
}
inline void WelfareLogonData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// WelfarePBData

// optional int64 create_time = 1;
inline bool WelfarePBData::has_create_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfarePBData::set_has_create_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfarePBData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfarePBData::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::int64 WelfarePBData::create_time() const {
  return create_time_;
}
inline void WelfarePBData::set_create_time(::google::protobuf::int64 value) {
  set_has_create_time();
  create_time_ = value;
}

// optional int64 flush_time = 2;
inline bool WelfarePBData::has_flush_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfarePBData::set_has_flush_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfarePBData::clear_has_flush_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfarePBData::clear_flush_time() {
  flush_time_ = GOOGLE_LONGLONG(0);
  clear_has_flush_time();
}
inline ::google::protobuf::int64 WelfarePBData::flush_time() const {
  return flush_time_;
}
inline void WelfarePBData::set_flush_time(::google::protobuf::int64 value) {
  set_has_flush_time();
  flush_time_ = value;
}

// optional int64 online_time = 3;
inline bool WelfarePBData::has_online_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WelfarePBData::set_has_online_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WelfarePBData::clear_has_online_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WelfarePBData::clear_online_time() {
  online_time_ = GOOGLE_LONGLONG(0);
  clear_has_online_time();
}
inline ::google::protobuf::int64 WelfarePBData::online_time() const {
  return online_time_;
}
inline void WelfarePBData::set_online_time(::google::protobuf::int64 value) {
  set_has_online_time();
  online_time_ = value;
}

// repeated .proto_ff.WelfareSignPBData sign = 4;
inline int WelfarePBData::sign_size() const {
  return sign_.size();
}
inline void WelfarePBData::clear_sign() {
  sign_.Clear();
}
inline const ::proto_ff::WelfareSignPBData& WelfarePBData::sign(int index) const {
  return sign_.Get(index);
}
inline ::proto_ff::WelfareSignPBData* WelfarePBData::mutable_sign(int index) {
  return sign_.Mutable(index);
}
inline ::proto_ff::WelfareSignPBData* WelfarePBData::add_sign() {
  return sign_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareSignPBData >&
WelfarePBData::sign() const {
  return sign_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareSignPBData >*
WelfarePBData::mutable_sign() {
  return &sign_;
}

// repeated .proto_ff.WelfareAccrueRewardPBData accure = 5;
inline int WelfarePBData::accure_size() const {
  return accure_.size();
}
inline void WelfarePBData::clear_accure() {
  accure_.Clear();
}
inline const ::proto_ff::WelfareAccrueRewardPBData& WelfarePBData::accure(int index) const {
  return accure_.Get(index);
}
inline ::proto_ff::WelfareAccrueRewardPBData* WelfarePBData::mutable_accure(int index) {
  return accure_.Mutable(index);
}
inline ::proto_ff::WelfareAccrueRewardPBData* WelfarePBData::add_accure() {
  return accure_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareAccrueRewardPBData >&
WelfarePBData::accure() const {
  return accure_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareAccrueRewardPBData >*
WelfarePBData::mutable_accure() {
  return &accure_;
}

// repeated .proto_ff.WelfareLvRewardPBData lv = 6;
inline int WelfarePBData::lv_size() const {
  return lv_.size();
}
inline void WelfarePBData::clear_lv() {
  lv_.Clear();
}
inline const ::proto_ff::WelfareLvRewardPBData& WelfarePBData::lv(int index) const {
  return lv_.Get(index);
}
inline ::proto_ff::WelfareLvRewardPBData* WelfarePBData::mutable_lv(int index) {
  return lv_.Mutable(index);
}
inline ::proto_ff::WelfareLvRewardPBData* WelfarePBData::add_lv() {
  return lv_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLvRewardPBData >&
WelfarePBData::lv() const {
  return lv_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLvRewardPBData >*
WelfarePBData::mutable_lv() {
  return &lv_;
}

// repeated .proto_ff.WelfareOnlineRewardPBData online = 7;
inline int WelfarePBData::online_size() const {
  return online_.size();
}
inline void WelfarePBData::clear_online() {
  online_.Clear();
}
inline const ::proto_ff::WelfareOnlineRewardPBData& WelfarePBData::online(int index) const {
  return online_.Get(index);
}
inline ::proto_ff::WelfareOnlineRewardPBData* WelfarePBData::mutable_online(int index) {
  return online_.Mutable(index);
}
inline ::proto_ff::WelfareOnlineRewardPBData* WelfarePBData::add_online() {
  return online_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareOnlineRewardPBData >&
WelfarePBData::online() const {
  return online_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareOnlineRewardPBData >*
WelfarePBData::mutable_online() {
  return &online_;
}

// optional .proto_ff.WelfareNotifyRewardPBData notify = 8;
inline bool WelfarePBData::has_notify() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WelfarePBData::set_has_notify() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WelfarePBData::clear_has_notify() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WelfarePBData::clear_notify() {
  if (notify_ != NULL) notify_->::proto_ff::WelfareNotifyRewardPBData::Clear();
  clear_has_notify();
}
inline const ::proto_ff::WelfareNotifyRewardPBData& WelfarePBData::notify() const {
  return notify_ != NULL ? *notify_ : *default_instance_->notify_;
}
inline ::proto_ff::WelfareNotifyRewardPBData* WelfarePBData::mutable_notify() {
  set_has_notify();
  if (notify_ == NULL) notify_ = new ::proto_ff::WelfareNotifyRewardPBData;
  return notify_;
}
inline ::proto_ff::WelfareNotifyRewardPBData* WelfarePBData::release_notify() {
  clear_has_notify();
  ::proto_ff::WelfareNotifyRewardPBData* temp = notify_;
  notify_ = NULL;
  return temp;
}
inline void WelfarePBData::set_allocated_notify(::proto_ff::WelfareNotifyRewardPBData* notify) {
  delete notify_;
  notify_ = notify;
  if (notify) {
    set_has_notify();
  } else {
    clear_has_notify();
  }
}

// optional .proto_ff.WelfareFraudRewardPBData fraud = 9;
inline bool WelfarePBData::has_fraud() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WelfarePBData::set_has_fraud() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WelfarePBData::clear_has_fraud() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WelfarePBData::clear_fraud() {
  if (fraud_ != NULL) fraud_->::proto_ff::WelfareFraudRewardPBData::Clear();
  clear_has_fraud();
}
inline const ::proto_ff::WelfareFraudRewardPBData& WelfarePBData::fraud() const {
  return fraud_ != NULL ? *fraud_ : *default_instance_->fraud_;
}
inline ::proto_ff::WelfareFraudRewardPBData* WelfarePBData::mutable_fraud() {
  set_has_fraud();
  if (fraud_ == NULL) fraud_ = new ::proto_ff::WelfareFraudRewardPBData;
  return fraud_;
}
inline ::proto_ff::WelfareFraudRewardPBData* WelfarePBData::release_fraud() {
  clear_has_fraud();
  ::proto_ff::WelfareFraudRewardPBData* temp = fraud_;
  fraud_ = NULL;
  return temp;
}
inline void WelfarePBData::set_allocated_fraud(::proto_ff::WelfareFraudRewardPBData* fraud) {
  delete fraud_;
  fraud_ = fraud;
  if (fraud) {
    set_has_fraud();
  } else {
    clear_has_fraud();
  }
}

// repeated .proto_ff.WelfareWeekEndRewardPBData weekend = 10;
inline int WelfarePBData::weekend_size() const {
  return weekend_.size();
}
inline void WelfarePBData::clear_weekend() {
  weekend_.Clear();
}
inline const ::proto_ff::WelfareWeekEndRewardPBData& WelfarePBData::weekend(int index) const {
  return weekend_.Get(index);
}
inline ::proto_ff::WelfareWeekEndRewardPBData* WelfarePBData::mutable_weekend(int index) {
  return weekend_.Mutable(index);
}
inline ::proto_ff::WelfareWeekEndRewardPBData* WelfarePBData::add_weekend() {
  return weekend_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareWeekEndRewardPBData >&
WelfarePBData::weekend() const {
  return weekend_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareWeekEndRewardPBData >*
WelfarePBData::mutable_weekend() {
  return &weekend_;
}

// optional int64 last_week_end_flush_time = 11;
inline bool WelfarePBData::has_last_week_end_flush_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WelfarePBData::set_has_last_week_end_flush_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WelfarePBData::clear_has_last_week_end_flush_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WelfarePBData::clear_last_week_end_flush_time() {
  last_week_end_flush_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_week_end_flush_time();
}
inline ::google::protobuf::int64 WelfarePBData::last_week_end_flush_time() const {
  return last_week_end_flush_time_;
}
inline void WelfarePBData::set_last_week_end_flush_time(::google::protobuf::int64 value) {
  set_has_last_week_end_flush_time();
  last_week_end_flush_time_ = value;
}

// optional .proto_ff.WelfareQiFuData pray = 12;
inline bool WelfarePBData::has_pray() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WelfarePBData::set_has_pray() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WelfarePBData::clear_has_pray() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WelfarePBData::clear_pray() {
  if (pray_ != NULL) pray_->::proto_ff::WelfareQiFuData::Clear();
  clear_has_pray();
}
inline const ::proto_ff::WelfareQiFuData& WelfarePBData::pray() const {
  return pray_ != NULL ? *pray_ : *default_instance_->pray_;
}
inline ::proto_ff::WelfareQiFuData* WelfarePBData::mutable_pray() {
  set_has_pray();
  if (pray_ == NULL) pray_ = new ::proto_ff::WelfareQiFuData;
  return pray_;
}
inline ::proto_ff::WelfareQiFuData* WelfarePBData::release_pray() {
  clear_has_pray();
  ::proto_ff::WelfareQiFuData* temp = pray_;
  pray_ = NULL;
  return temp;
}
inline void WelfarePBData::set_allocated_pray(::proto_ff::WelfareQiFuData* pray) {
  delete pray_;
  pray_ = pray;
  if (pray) {
    set_has_pray();
  } else {
    clear_has_pray();
  }
}

// repeated .proto_ff.WelfareLogonData logon = 13;
inline int WelfarePBData::logon_size() const {
  return logon_.size();
}
inline void WelfarePBData::clear_logon() {
  logon_.Clear();
}
inline const ::proto_ff::WelfareLogonData& WelfarePBData::logon(int index) const {
  return logon_.Get(index);
}
inline ::proto_ff::WelfareLogonData* WelfarePBData::mutable_logon(int index) {
  return logon_.Mutable(index);
}
inline ::proto_ff::WelfareLogonData* WelfarePBData::add_logon() {
  return logon_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLogonData >&
WelfarePBData::logon() const {
  return logon_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLogonData >*
WelfarePBData::mutable_logon() {
  return &logon_;
}

// optional int32 cur_logon_day = 14;
inline bool WelfarePBData::has_cur_logon_day() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void WelfarePBData::set_has_cur_logon_day() {
  _has_bits_[0] |= 0x00002000u;
}
inline void WelfarePBData::clear_has_cur_logon_day() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void WelfarePBData::clear_cur_logon_day() {
  cur_logon_day_ = 0;
  clear_has_cur_logon_day();
}
inline ::google::protobuf::int32 WelfarePBData::cur_logon_day() const {
  return cur_logon_day_;
}
inline void WelfarePBData::set_cur_logon_day(::google::protobuf::int32 value) {
  set_has_cur_logon_day();
  cur_logon_day_ = value;
}

// -------------------------------------------------------------------

// WPPState

// required uint32 type = 1;
inline bool WPPState::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPState::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPState::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPState::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 WPPState::type() const {
  return type_;
}
inline void WPPState::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required .proto_ff.Vector3PB dir = 2;
inline bool WPPState::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WPPState::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WPPState::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WPPState::clear_dir() {
  if (dir_ != NULL) dir_->::proto_ff::Vector3PB::Clear();
  clear_has_dir();
}
inline const ::proto_ff::Vector3PB& WPPState::dir() const {
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::proto_ff::Vector3PB* WPPState::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::proto_ff::Vector3PB;
  return dir_;
}
inline ::proto_ff::Vector3PB* WPPState::release_dir() {
  clear_has_dir();
  ::proto_ff::Vector3PB* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void WPPState::set_allocated_dir(::proto_ff::Vector3PB* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
}

// -------------------------------------------------------------------

// XingYunMiShiPBData

// optional int32 id = 1;
inline bool XingYunMiShiPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XingYunMiShiPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XingYunMiShiPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XingYunMiShiPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 XingYunMiShiPBData::id() const {
  return id_;
}
inline void XingYunMiShiPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool XingYunMiShiPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XingYunMiShiPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XingYunMiShiPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XingYunMiShiPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 XingYunMiShiPBData::status() const {
  return status_;
}
inline void XingYunMiShiPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// XingYunMiShiPBRecord

// optional uint64 cid = 1;
inline bool XingYunMiShiPBRecord::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XingYunMiShiPBRecord::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XingYunMiShiPBRecord::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XingYunMiShiPBRecord::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 XingYunMiShiPBRecord::cid() const {
  return cid_;
}
inline void XingYunMiShiPBRecord::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool XingYunMiShiPBRecord::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XingYunMiShiPBRecord::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XingYunMiShiPBRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XingYunMiShiPBRecord::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& XingYunMiShiPBRecord::name() const {
  return *name_;
}
inline void XingYunMiShiPBRecord::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void XingYunMiShiPBRecord::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void XingYunMiShiPBRecord::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* XingYunMiShiPBRecord::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* XingYunMiShiPBRecord::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void XingYunMiShiPBRecord::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 id = 3;
inline bool XingYunMiShiPBRecord::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void XingYunMiShiPBRecord::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void XingYunMiShiPBRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void XingYunMiShiPBRecord::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 XingYunMiShiPBRecord::id() const {
  return id_;
}
inline void XingYunMiShiPBRecord::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 time = 4;
inline bool XingYunMiShiPBRecord::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void XingYunMiShiPBRecord::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void XingYunMiShiPBRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void XingYunMiShiPBRecord::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 XingYunMiShiPBRecord::time() const {
  return time_;
}
inline void XingYunMiShiPBRecord::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// DailyGiftPBData

// optional int32 id = 1;
inline bool DailyGiftPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyGiftPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyGiftPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyGiftPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DailyGiftPBData::id() const {
  return id_;
}
inline void DailyGiftPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool DailyGiftPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyGiftPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyGiftPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyGiftPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DailyGiftPBData::status() const {
  return status_;
}
inline void DailyGiftPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// DailyGiftPBDataRecord

// optional uint64 cid = 1;
inline bool DailyGiftPBDataRecord::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyGiftPBDataRecord::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyGiftPBDataRecord::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyGiftPBDataRecord::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 DailyGiftPBDataRecord::cid() const {
  return cid_;
}
inline void DailyGiftPBDataRecord::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool DailyGiftPBDataRecord::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyGiftPBDataRecord::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyGiftPBDataRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyGiftPBDataRecord::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DailyGiftPBDataRecord::name() const {
  return *name_;
}
inline void DailyGiftPBDataRecord::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DailyGiftPBDataRecord::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DailyGiftPBDataRecord::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DailyGiftPBDataRecord::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DailyGiftPBDataRecord::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DailyGiftPBDataRecord::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 id = 3;
inline bool DailyGiftPBDataRecord::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyGiftPBDataRecord::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyGiftPBDataRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyGiftPBDataRecord::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DailyGiftPBDataRecord::id() const {
  return id_;
}
inline void DailyGiftPBDataRecord::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 time = 4;
inline bool DailyGiftPBDataRecord::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyGiftPBDataRecord::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyGiftPBDataRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyGiftPBDataRecord::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 DailyGiftPBDataRecord::time() const {
  return time_;
}
inline void DailyGiftPBDataRecord::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// LianChongTodayPBData

// optional int32 id = 1;
inline bool LianChongTodayPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LianChongTodayPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LianChongTodayPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LianChongTodayPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LianChongTodayPBData::id() const {
  return id_;
}
inline void LianChongTodayPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool LianChongTodayPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LianChongTodayPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LianChongTodayPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LianChongTodayPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 LianChongTodayPBData::status() const {
  return status_;
}
inline void LianChongTodayPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// LianChongTodayPBDataRecord

// optional uint64 cid = 1;
inline bool LianChongTodayPBDataRecord::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LianChongTodayPBDataRecord::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LianChongTodayPBDataRecord::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LianChongTodayPBDataRecord::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 LianChongTodayPBDataRecord::cid() const {
  return cid_;
}
inline void LianChongTodayPBDataRecord::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool LianChongTodayPBDataRecord::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LianChongTodayPBDataRecord::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LianChongTodayPBDataRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LianChongTodayPBDataRecord::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& LianChongTodayPBDataRecord::name() const {
  return *name_;
}
inline void LianChongTodayPBDataRecord::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LianChongTodayPBDataRecord::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LianChongTodayPBDataRecord::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LianChongTodayPBDataRecord::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* LianChongTodayPBDataRecord::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LianChongTodayPBDataRecord::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 id = 3;
inline bool LianChongTodayPBDataRecord::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LianChongTodayPBDataRecord::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LianChongTodayPBDataRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LianChongTodayPBDataRecord::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LianChongTodayPBDataRecord::id() const {
  return id_;
}
inline void LianChongTodayPBDataRecord::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 time = 4;
inline bool LianChongTodayPBDataRecord::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LianChongTodayPBDataRecord::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LianChongTodayPBDataRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LianChongTodayPBDataRecord::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 LianChongTodayPBDataRecord::time() const {
  return time_;
}
inline void LianChongTodayPBDataRecord::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// LianChongAccPBData

// optional int32 id = 1;
inline bool LianChongAccPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LianChongAccPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LianChongAccPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LianChongAccPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LianChongAccPBData::id() const {
  return id_;
}
inline void LianChongAccPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool LianChongAccPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LianChongAccPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LianChongAccPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LianChongAccPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 LianChongAccPBData::status() const {
  return status_;
}
inline void LianChongAccPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 days = 3;
inline bool LianChongAccPBData::has_days() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LianChongAccPBData::set_has_days() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LianChongAccPBData::clear_has_days() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LianChongAccPBData::clear_days() {
  days_ = 0;
  clear_has_days();
}
inline ::google::protobuf::int32 LianChongAccPBData::days() const {
  return days_;
}
inline void LianChongAccPBData::set_days(::google::protobuf::int32 value) {
  set_has_days();
  days_ = value;
}

// optional bool cur_flag = 4;
inline bool LianChongAccPBData::has_cur_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LianChongAccPBData::set_has_cur_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LianChongAccPBData::clear_has_cur_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LianChongAccPBData::clear_cur_flag() {
  cur_flag_ = false;
  clear_has_cur_flag();
}
inline bool LianChongAccPBData::cur_flag() const {
  return cur_flag_;
}
inline void LianChongAccPBData::set_cur_flag(bool value) {
  set_has_cur_flag();
  cur_flag_ = value;
}

// -------------------------------------------------------------------

// LianChongAccPBDataRecord

// optional uint64 cid = 1;
inline bool LianChongAccPBDataRecord::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LianChongAccPBDataRecord::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LianChongAccPBDataRecord::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LianChongAccPBDataRecord::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 LianChongAccPBDataRecord::cid() const {
  return cid_;
}
inline void LianChongAccPBDataRecord::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool LianChongAccPBDataRecord::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LianChongAccPBDataRecord::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LianChongAccPBDataRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LianChongAccPBDataRecord::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& LianChongAccPBDataRecord::name() const {
  return *name_;
}
inline void LianChongAccPBDataRecord::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LianChongAccPBDataRecord::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LianChongAccPBDataRecord::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LianChongAccPBDataRecord::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* LianChongAccPBDataRecord::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LianChongAccPBDataRecord::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 id = 3;
inline bool LianChongAccPBDataRecord::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LianChongAccPBDataRecord::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LianChongAccPBDataRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LianChongAccPBDataRecord::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LianChongAccPBDataRecord::id() const {
  return id_;
}
inline void LianChongAccPBDataRecord::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 time = 4;
inline bool LianChongAccPBDataRecord::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LianChongAccPBDataRecord::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LianChongAccPBDataRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LianChongAccPBDataRecord::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 LianChongAccPBDataRecord::time() const {
  return time_;
}
inline void LianChongAccPBDataRecord::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// MonthCardPBData

// optional int32 id = 1;
inline bool MonthCardPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonthCardPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonthCardPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonthCardPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MonthCardPBData::id() const {
  return id_;
}
inline void MonthCardPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool MonthCardPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonthCardPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonthCardPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonthCardPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 MonthCardPBData::status() const {
  return status_;
}
inline void MonthCardPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional uint64 buy_time = 3;
inline bool MonthCardPBData::has_buy_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonthCardPBData::set_has_buy_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonthCardPBData::clear_has_buy_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonthCardPBData::clear_buy_time() {
  buy_time_ = GOOGLE_ULONGLONG(0);
  clear_has_buy_time();
}
inline ::google::protobuf::uint64 MonthCardPBData::buy_time() const {
  return buy_time_;
}
inline void MonthCardPBData::set_buy_time(::google::protobuf::uint64 value) {
  set_has_buy_time();
  buy_time_ = value;
}

// optional uint64 last_get_reward = 4;
inline bool MonthCardPBData::has_last_get_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MonthCardPBData::set_has_last_get_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MonthCardPBData::clear_has_last_get_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MonthCardPBData::clear_last_get_reward() {
  last_get_reward_ = GOOGLE_ULONGLONG(0);
  clear_has_last_get_reward();
}
inline ::google::protobuf::uint64 MonthCardPBData::last_get_reward() const {
  return last_get_reward_;
}
inline void MonthCardPBData::set_last_get_reward(::google::protobuf::uint64 value) {
  set_has_last_get_reward();
  last_get_reward_ = value;
}

// optional uint64 last_buy_time = 5;
inline bool MonthCardPBData::has_last_buy_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MonthCardPBData::set_has_last_buy_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MonthCardPBData::clear_has_last_buy_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MonthCardPBData::clear_last_buy_time() {
  last_buy_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_buy_time();
}
inline ::google::protobuf::uint64 MonthCardPBData::last_buy_time() const {
  return last_buy_time_;
}
inline void MonthCardPBData::set_last_buy_time(::google::protobuf::uint64 value) {
  set_has_last_buy_time();
  last_buy_time_ = value;
}

// -------------------------------------------------------------------

// MonthCardPBDataRecord

// optional uint64 cid = 1;
inline bool MonthCardPBDataRecord::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonthCardPBDataRecord::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonthCardPBDataRecord::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonthCardPBDataRecord::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 MonthCardPBDataRecord::cid() const {
  return cid_;
}
inline void MonthCardPBDataRecord::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool MonthCardPBDataRecord::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonthCardPBDataRecord::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonthCardPBDataRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonthCardPBDataRecord::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MonthCardPBDataRecord::name() const {
  return *name_;
}
inline void MonthCardPBDataRecord::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MonthCardPBDataRecord::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MonthCardPBDataRecord::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MonthCardPBDataRecord::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* MonthCardPBDataRecord::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MonthCardPBDataRecord::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 id = 3;
inline bool MonthCardPBDataRecord::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonthCardPBDataRecord::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonthCardPBDataRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonthCardPBDataRecord::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MonthCardPBDataRecord::id() const {
  return id_;
}
inline void MonthCardPBDataRecord::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 time = 4;
inline bool MonthCardPBDataRecord::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MonthCardPBDataRecord::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MonthCardPBDataRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MonthCardPBDataRecord::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 MonthCardPBDataRecord::time() const {
  return time_;
}
inline void MonthCardPBDataRecord::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// TurntableAccPBData

// optional int32 id = 1;
inline bool TurntableAccPBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurntableAccPBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurntableAccPBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurntableAccPBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TurntableAccPBData::id() const {
  return id_;
}
inline void TurntableAccPBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool TurntableAccPBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurntableAccPBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurntableAccPBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurntableAccPBData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 TurntableAccPBData::status() const {
  return status_;
}
inline void TurntableAccPBData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 cur_num = 3;
inline bool TurntableAccPBData::has_cur_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurntableAccPBData::set_has_cur_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurntableAccPBData::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurntableAccPBData::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 TurntableAccPBData::cur_num() const {
  return cur_num_;
}
inline void TurntableAccPBData::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// -------------------------------------------------------------------

// TurntablePBData

// optional int32 id = 1;
inline bool TurntablePBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurntablePBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurntablePBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurntablePBData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TurntablePBData::id() const {
  return id_;
}
inline void TurntablePBData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 cur_num = 2;
inline bool TurntablePBData::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurntablePBData::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurntablePBData::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurntablePBData::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 TurntablePBData::cur_num() const {
  return cur_num_;
}
inline void TurntablePBData::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 acc_num = 3;
inline bool TurntablePBData::has_acc_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurntablePBData::set_has_acc_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurntablePBData::clear_has_acc_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurntablePBData::clear_acc_num() {
  acc_num_ = 0;
  clear_has_acc_num();
}
inline ::google::protobuf::int32 TurntablePBData::acc_num() const {
  return acc_num_;
}
inline void TurntablePBData::set_acc_num(::google::protobuf::int32 value) {
  set_has_acc_num();
  acc_num_ = value;
}

// -------------------------------------------------------------------

// TurntablePBDataRecord

// optional uint64 cid = 1;
inline bool TurntablePBDataRecord::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurntablePBDataRecord::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurntablePBDataRecord::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurntablePBDataRecord::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 TurntablePBDataRecord::cid() const {
  return cid_;
}
inline void TurntablePBDataRecord::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool TurntablePBDataRecord::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurntablePBDataRecord::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurntablePBDataRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurntablePBDataRecord::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TurntablePBDataRecord::name() const {
  return *name_;
}
inline void TurntablePBDataRecord::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TurntablePBDataRecord::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TurntablePBDataRecord::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TurntablePBDataRecord::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* TurntablePBDataRecord::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TurntablePBDataRecord::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 id = 3;
inline bool TurntablePBDataRecord::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurntablePBDataRecord::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurntablePBDataRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurntablePBDataRecord::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TurntablePBDataRecord::id() const {
  return id_;
}
inline void TurntablePBDataRecord::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 time = 4;
inline bool TurntablePBDataRecord::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TurntablePBDataRecord::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TurntablePBDataRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TurntablePBDataRecord::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 TurntablePBDataRecord::time() const {
  return time_;
}
inline void TurntablePBDataRecord::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// OneSuperGiftBuy

// optional int32 id = 1;
inline bool OneSuperGiftBuy::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneSuperGiftBuy::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneSuperGiftBuy::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneSuperGiftBuy::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 OneSuperGiftBuy::id() const {
  return id_;
}
inline void OneSuperGiftBuy::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 cur_num = 2;
inline bool OneSuperGiftBuy::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneSuperGiftBuy::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneSuperGiftBuy::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneSuperGiftBuy::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 OneSuperGiftBuy::cur_num() const {
  return cur_num_;
}
inline void OneSuperGiftBuy::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 max_num = 3;
inline bool OneSuperGiftBuy::has_max_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneSuperGiftBuy::set_has_max_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneSuperGiftBuy::clear_has_max_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneSuperGiftBuy::clear_max_num() {
  max_num_ = 0;
  clear_has_max_num();
}
inline ::google::protobuf::int32 OneSuperGiftBuy::max_num() const {
  return max_num_;
}
inline void OneSuperGiftBuy::set_max_num(::google::protobuf::int32 value) {
  set_has_max_num();
  max_num_ = value;
}

// -------------------------------------------------------------------

// OnWelfareInvestRewardData

// optional int32 id = 1;
inline bool OnWelfareInvestRewardData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnWelfareInvestRewardData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnWelfareInvestRewardData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnWelfareInvestRewardData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 OnWelfareInvestRewardData::id() const {
  return id_;
}
inline void OnWelfareInvestRewardData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool OnWelfareInvestRewardData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnWelfareInvestRewardData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnWelfareInvestRewardData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnWelfareInvestRewardData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OnWelfareInvestRewardData::status() const {
  return status_;
}
inline void OnWelfareInvestRewardData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// OneWelfareInvestData

// optional int32 invest_id = 1;
inline bool OneWelfareInvestData::has_invest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneWelfareInvestData::set_has_invest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneWelfareInvestData::clear_has_invest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneWelfareInvestData::clear_invest_id() {
  invest_id_ = 0;
  clear_has_invest_id();
}
inline ::google::protobuf::int32 OneWelfareInvestData::invest_id() const {
  return invest_id_;
}
inline void OneWelfareInvestData::set_invest_id(::google::protobuf::int32 value) {
  set_has_invest_id();
  invest_id_ = value;
}

// optional int32 status = 2;
inline bool OneWelfareInvestData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneWelfareInvestData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneWelfareInvestData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneWelfareInvestData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OneWelfareInvestData::status() const {
  return status_;
}
inline void OneWelfareInvestData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated .proto_ff.OnWelfareInvestRewardData data = 3;
inline int OneWelfareInvestData::data_size() const {
  return data_.size();
}
inline void OneWelfareInvestData::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::OnWelfareInvestRewardData& OneWelfareInvestData::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::OnWelfareInvestRewardData* OneWelfareInvestData::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::OnWelfareInvestRewardData* OneWelfareInvestData::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OnWelfareInvestRewardData >&
OneWelfareInvestData::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OnWelfareInvestRewardData >*
OneWelfareInvestData::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// OneYTTLGift

// optional int32 id = 1;
inline bool OneYTTLGift::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneYTTLGift::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneYTTLGift::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneYTTLGift::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 OneYTTLGift::id() const {
  return id_;
}
inline void OneYTTLGift::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 buyed = 2;
inline bool OneYTTLGift::has_buyed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneYTTLGift::set_has_buyed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneYTTLGift::clear_has_buyed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneYTTLGift::clear_buyed() {
  buyed_ = 0;
  clear_has_buyed();
}
inline ::google::protobuf::int32 OneYTTLGift::buyed() const {
  return buyed_;
}
inline void OneYTTLGift::set_buyed(::google::protobuf::int32 value) {
  set_has_buyed();
  buyed_ = value;
}

// -------------------------------------------------------------------

// DailyWelfarePBData

// optional int64 flush_time = 1;
inline bool DailyWelfarePBData::has_flush_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyWelfarePBData::set_has_flush_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyWelfarePBData::clear_has_flush_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyWelfarePBData::clear_flush_time() {
  flush_time_ = GOOGLE_LONGLONG(0);
  clear_has_flush_time();
}
inline ::google::protobuf::int64 DailyWelfarePBData::flush_time() const {
  return flush_time_;
}
inline void DailyWelfarePBData::set_flush_time(::google::protobuf::int64 value) {
  set_has_flush_time();
  flush_time_ = value;
}

// repeated .proto_ff.XingYunMiShiPBData xing_yun_mi_shi = 2;
inline int DailyWelfarePBData::xing_yun_mi_shi_size() const {
  return xing_yun_mi_shi_.size();
}
inline void DailyWelfarePBData::clear_xing_yun_mi_shi() {
  xing_yun_mi_shi_.Clear();
}
inline const ::proto_ff::XingYunMiShiPBData& DailyWelfarePBData::xing_yun_mi_shi(int index) const {
  return xing_yun_mi_shi_.Get(index);
}
inline ::proto_ff::XingYunMiShiPBData* DailyWelfarePBData::mutable_xing_yun_mi_shi(int index) {
  return xing_yun_mi_shi_.Mutable(index);
}
inline ::proto_ff::XingYunMiShiPBData* DailyWelfarePBData::add_xing_yun_mi_shi() {
  return xing_yun_mi_shi_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::XingYunMiShiPBData >&
DailyWelfarePBData::xing_yun_mi_shi() const {
  return xing_yun_mi_shi_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::XingYunMiShiPBData >*
DailyWelfarePBData::mutable_xing_yun_mi_shi() {
  return &xing_yun_mi_shi_;
}

// optional int32 xing_yun_super_gift_status = 3;
inline bool DailyWelfarePBData::has_xing_yun_super_gift_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyWelfarePBData::set_has_xing_yun_super_gift_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyWelfarePBData::clear_has_xing_yun_super_gift_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyWelfarePBData::clear_xing_yun_super_gift_status() {
  xing_yun_super_gift_status_ = 0;
  clear_has_xing_yun_super_gift_status();
}
inline ::google::protobuf::int32 DailyWelfarePBData::xing_yun_super_gift_status() const {
  return xing_yun_super_gift_status_;
}
inline void DailyWelfarePBData::set_xing_yun_super_gift_status(::google::protobuf::int32 value) {
  set_has_xing_yun_super_gift_status();
  xing_yun_super_gift_status_ = value;
}

// repeated .proto_ff.DailyGiftPBData daily_gift = 4;
inline int DailyWelfarePBData::daily_gift_size() const {
  return daily_gift_.size();
}
inline void DailyWelfarePBData::clear_daily_gift() {
  daily_gift_.Clear();
}
inline const ::proto_ff::DailyGiftPBData& DailyWelfarePBData::daily_gift(int index) const {
  return daily_gift_.Get(index);
}
inline ::proto_ff::DailyGiftPBData* DailyWelfarePBData::mutable_daily_gift(int index) {
  return daily_gift_.Mutable(index);
}
inline ::proto_ff::DailyGiftPBData* DailyWelfarePBData::add_daily_gift() {
  return daily_gift_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyGiftPBData >&
DailyWelfarePBData::daily_gift() const {
  return daily_gift_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyGiftPBData >*
DailyWelfarePBData::mutable_daily_gift() {
  return &daily_gift_;
}

// repeated .proto_ff.LianChongTodayPBData today_recharge = 5;
inline int DailyWelfarePBData::today_recharge_size() const {
  return today_recharge_.size();
}
inline void DailyWelfarePBData::clear_today_recharge() {
  today_recharge_.Clear();
}
inline const ::proto_ff::LianChongTodayPBData& DailyWelfarePBData::today_recharge(int index) const {
  return today_recharge_.Get(index);
}
inline ::proto_ff::LianChongTodayPBData* DailyWelfarePBData::mutable_today_recharge(int index) {
  return today_recharge_.Mutable(index);
}
inline ::proto_ff::LianChongTodayPBData* DailyWelfarePBData::add_today_recharge() {
  return today_recharge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LianChongTodayPBData >&
DailyWelfarePBData::today_recharge() const {
  return today_recharge_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LianChongTodayPBData >*
DailyWelfarePBData::mutable_today_recharge() {
  return &today_recharge_;
}

// repeated .proto_ff.LianChongAccPBData acc_recharge = 6;
inline int DailyWelfarePBData::acc_recharge_size() const {
  return acc_recharge_.size();
}
inline void DailyWelfarePBData::clear_acc_recharge() {
  acc_recharge_.Clear();
}
inline const ::proto_ff::LianChongAccPBData& DailyWelfarePBData::acc_recharge(int index) const {
  return acc_recharge_.Get(index);
}
inline ::proto_ff::LianChongAccPBData* DailyWelfarePBData::mutable_acc_recharge(int index) {
  return acc_recharge_.Mutable(index);
}
inline ::proto_ff::LianChongAccPBData* DailyWelfarePBData::add_acc_recharge() {
  return acc_recharge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LianChongAccPBData >&
DailyWelfarePBData::acc_recharge() const {
  return acc_recharge_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LianChongAccPBData >*
DailyWelfarePBData::mutable_acc_recharge() {
  return &acc_recharge_;
}

// optional int32 cur_recharge_num = 7;
inline bool DailyWelfarePBData::has_cur_recharge_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DailyWelfarePBData::set_has_cur_recharge_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DailyWelfarePBData::clear_has_cur_recharge_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DailyWelfarePBData::clear_cur_recharge_num() {
  cur_recharge_num_ = 0;
  clear_has_cur_recharge_num();
}
inline ::google::protobuf::int32 DailyWelfarePBData::cur_recharge_num() const {
  return cur_recharge_num_;
}
inline void DailyWelfarePBData::set_cur_recharge_num(::google::protobuf::int32 value) {
  set_has_cur_recharge_num();
  cur_recharge_num_ = value;
}

// repeated .proto_ff.MonthCardPBData month_card = 8;
inline int DailyWelfarePBData::month_card_size() const {
  return month_card_.size();
}
inline void DailyWelfarePBData::clear_month_card() {
  month_card_.Clear();
}
inline const ::proto_ff::MonthCardPBData& DailyWelfarePBData::month_card(int index) const {
  return month_card_.Get(index);
}
inline ::proto_ff::MonthCardPBData* DailyWelfarePBData::mutable_month_card(int index) {
  return month_card_.Mutable(index);
}
inline ::proto_ff::MonthCardPBData* DailyWelfarePBData::add_month_card() {
  return month_card_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MonthCardPBData >&
DailyWelfarePBData::month_card() const {
  return month_card_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MonthCardPBData >*
DailyWelfarePBData::mutable_month_card() {
  return &month_card_;
}

// repeated .proto_ff.TurntableAccPBData turntable_acc = 9;
inline int DailyWelfarePBData::turntable_acc_size() const {
  return turntable_acc_.size();
}
inline void DailyWelfarePBData::clear_turntable_acc() {
  turntable_acc_.Clear();
}
inline const ::proto_ff::TurntableAccPBData& DailyWelfarePBData::turntable_acc(int index) const {
  return turntable_acc_.Get(index);
}
inline ::proto_ff::TurntableAccPBData* DailyWelfarePBData::mutable_turntable_acc(int index) {
  return turntable_acc_.Mutable(index);
}
inline ::proto_ff::TurntableAccPBData* DailyWelfarePBData::add_turntable_acc() {
  return turntable_acc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntableAccPBData >&
DailyWelfarePBData::turntable_acc() const {
  return turntable_acc_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntableAccPBData >*
DailyWelfarePBData::mutable_turntable_acc() {
  return &turntable_acc_;
}

// repeated .proto_ff.TurntablePBData turntable = 10;
inline int DailyWelfarePBData::turntable_size() const {
  return turntable_.size();
}
inline void DailyWelfarePBData::clear_turntable() {
  turntable_.Clear();
}
inline const ::proto_ff::TurntablePBData& DailyWelfarePBData::turntable(int index) const {
  return turntable_.Get(index);
}
inline ::proto_ff::TurntablePBData* DailyWelfarePBData::mutable_turntable(int index) {
  return turntable_.Mutable(index);
}
inline ::proto_ff::TurntablePBData* DailyWelfarePBData::add_turntable() {
  return turntable_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntablePBData >&
DailyWelfarePBData::turntable() const {
  return turntable_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntablePBData >*
DailyWelfarePBData::mutable_turntable() {
  return &turntable_;
}

// repeated .proto_ff.TurntablePBDataRecord turntable_record = 11;
inline int DailyWelfarePBData::turntable_record_size() const {
  return turntable_record_.size();
}
inline void DailyWelfarePBData::clear_turntable_record() {
  turntable_record_.Clear();
}
inline const ::proto_ff::TurntablePBDataRecord& DailyWelfarePBData::turntable_record(int index) const {
  return turntable_record_.Get(index);
}
inline ::proto_ff::TurntablePBDataRecord* DailyWelfarePBData::mutable_turntable_record(int index) {
  return turntable_record_.Mutable(index);
}
inline ::proto_ff::TurntablePBDataRecord* DailyWelfarePBData::add_turntable_record() {
  return turntable_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntablePBDataRecord >&
DailyWelfarePBData::turntable_record() const {
  return turntable_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurntablePBDataRecord >*
DailyWelfarePBData::mutable_turntable_record() {
  return &turntable_record_;
}

// repeated .proto_ff.OneSuperGiftBuy super_buy = 12;
inline int DailyWelfarePBData::super_buy_size() const {
  return super_buy_.size();
}
inline void DailyWelfarePBData::clear_super_buy() {
  super_buy_.Clear();
}
inline const ::proto_ff::OneSuperGiftBuy& DailyWelfarePBData::super_buy(int index) const {
  return super_buy_.Get(index);
}
inline ::proto_ff::OneSuperGiftBuy* DailyWelfarePBData::mutable_super_buy(int index) {
  return super_buy_.Mutable(index);
}
inline ::proto_ff::OneSuperGiftBuy* DailyWelfarePBData::add_super_buy() {
  return super_buy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneSuperGiftBuy >&
DailyWelfarePBData::super_buy() const {
  return super_buy_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneSuperGiftBuy >*
DailyWelfarePBData::mutable_super_buy() {
  return &super_buy_;
}

// repeated .proto_ff.OneWelfareInvestData invest = 13;
inline int DailyWelfarePBData::invest_size() const {
  return invest_.size();
}
inline void DailyWelfarePBData::clear_invest() {
  invest_.Clear();
}
inline const ::proto_ff::OneWelfareInvestData& DailyWelfarePBData::invest(int index) const {
  return invest_.Get(index);
}
inline ::proto_ff::OneWelfareInvestData* DailyWelfarePBData::mutable_invest(int index) {
  return invest_.Mutable(index);
}
inline ::proto_ff::OneWelfareInvestData* DailyWelfarePBData::add_invest() {
  return invest_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneWelfareInvestData >&
DailyWelfarePBData::invest() const {
  return invest_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneWelfareInvestData >*
DailyWelfarePBData::mutable_invest() {
  return &invest_;
}

// repeated .proto_ff.OneYTTLGift yttl_gift = 14;
inline int DailyWelfarePBData::yttl_gift_size() const {
  return yttl_gift_.size();
}
inline void DailyWelfarePBData::clear_yttl_gift() {
  yttl_gift_.Clear();
}
inline const ::proto_ff::OneYTTLGift& DailyWelfarePBData::yttl_gift(int index) const {
  return yttl_gift_.Get(index);
}
inline ::proto_ff::OneYTTLGift* DailyWelfarePBData::mutable_yttl_gift(int index) {
  return yttl_gift_.Mutable(index);
}
inline ::proto_ff::OneYTTLGift* DailyWelfarePBData::add_yttl_gift() {
  return yttl_gift_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OneYTTLGift >&
DailyWelfarePBData::yttl_gift() const {
  return yttl_gift_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OneYTTLGift >*
DailyWelfarePBData::mutable_yttl_gift() {
  return &yttl_gift_;
}

// -------------------------------------------------------------------

// SynRankEntry

// optional uint64 cid = 1;
inline bool SynRankEntry::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynRankEntry::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynRankEntry::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynRankEntry::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 SynRankEntry::cid() const {
  return cid_;
}
inline void SynRankEntry::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 fight = 2;
inline bool SynRankEntry::has_fight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SynRankEntry::set_has_fight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SynRankEntry::clear_has_fight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SynRankEntry::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 SynRankEntry::fight() const {
  return fight_;
}
inline void SynRankEntry::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional int32 zid = 3;
inline bool SynRankEntry::has_zid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SynRankEntry::set_has_zid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SynRankEntry::clear_has_zid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SynRankEntry::clear_zid() {
  zid_ = 0;
  clear_has_zid();
}
inline ::google::protobuf::int32 SynRankEntry::zid() const {
  return zid_;
}
inline void SynRankEntry::set_zid(::google::protobuf::int32 value) {
  set_has_zid();
  zid_ = value;
}

// -------------------------------------------------------------------

// C2SSynInitRankReq

// repeated .proto_ff.SynRankEntry infos = 1;
inline int C2SSynInitRankReq::infos_size() const {
  return infos_.size();
}
inline void C2SSynInitRankReq::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::SynRankEntry& C2SSynInitRankReq::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::SynRankEntry* C2SSynInitRankReq::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::SynRankEntry* C2SSynInitRankReq::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SynRankEntry >&
C2SSynInitRankReq::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SynRankEntry >*
C2SSynInitRankReq::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// FindTreasureRewardRecord

// optional uint64 cid = 1;
inline bool FindTreasureRewardRecord::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindTreasureRewardRecord::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindTreasureRewardRecord::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindTreasureRewardRecord::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 FindTreasureRewardRecord::cid() const {
  return cid_;
}
inline void FindTreasureRewardRecord::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool FindTreasureRewardRecord::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindTreasureRewardRecord::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindTreasureRewardRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindTreasureRewardRecord::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FindTreasureRewardRecord::name() const {
  return *name_;
}
inline void FindTreasureRewardRecord::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FindTreasureRewardRecord::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FindTreasureRewardRecord::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FindTreasureRewardRecord::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* FindTreasureRewardRecord::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FindTreasureRewardRecord::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 id = 3;
inline bool FindTreasureRewardRecord::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FindTreasureRewardRecord::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FindTreasureRewardRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FindTreasureRewardRecord::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FindTreasureRewardRecord::id() const {
  return id_;
}
inline void FindTreasureRewardRecord::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 time = 4;
inline bool FindTreasureRewardRecord::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FindTreasureRewardRecord::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FindTreasureRewardRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FindTreasureRewardRecord::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 FindTreasureRewardRecord::time() const {
  return time_;
}
inline void FindTreasureRewardRecord::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// FindTreasureRewardRecordDBData

// optional uint32 id = 1;
inline bool FindTreasureRewardRecordDBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindTreasureRewardRecordDBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindTreasureRewardRecordDBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindTreasureRewardRecordDBData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FindTreasureRewardRecordDBData::id() const {
  return id_;
}
inline void FindTreasureRewardRecordDBData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 num = 2;
inline bool FindTreasureRewardRecordDBData::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindTreasureRewardRecordDBData::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindTreasureRewardRecordDBData::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindTreasureRewardRecordDBData::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 FindTreasureRewardRecordDBData::num() const {
  return num_;
}
inline void FindTreasureRewardRecordDBData::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// repeated .proto_ff.FindTreasureRewardRecord record = 3;
inline int FindTreasureRewardRecordDBData::record_size() const {
  return record_.size();
}
inline void FindTreasureRewardRecordDBData::clear_record() {
  record_.Clear();
}
inline const ::proto_ff::FindTreasureRewardRecord& FindTreasureRewardRecordDBData::record(int index) const {
  return record_.Get(index);
}
inline ::proto_ff::FindTreasureRewardRecord* FindTreasureRewardRecordDBData::mutable_record(int index) {
  return record_.Mutable(index);
}
inline ::proto_ff::FindTreasureRewardRecord* FindTreasureRewardRecordDBData::add_record() {
  return record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >&
FindTreasureRewardRecordDBData::record() const {
  return record_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >*
FindTreasureRewardRecordDBData::mutable_record() {
  return &record_;
}

// -------------------------------------------------------------------

// FindTreasureBigDragonRewardData

// optional uint32 id = 1;
inline bool FindTreasureBigDragonRewardData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindTreasureBigDragonRewardData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindTreasureBigDragonRewardData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindTreasureBigDragonRewardData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FindTreasureBigDragonRewardData::id() const {
  return id_;
}
inline void FindTreasureBigDragonRewardData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool FindTreasureBigDragonRewardData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindTreasureBigDragonRewardData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindTreasureBigDragonRewardData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindTreasureBigDragonRewardData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FindTreasureBigDragonRewardData::status() const {
  return status_;
}
inline void FindTreasureBigDragonRewardData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FindTreasureBigDragonData

// optional uint32 id = 1;
inline bool FindTreasureBigDragonData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindTreasureBigDragonData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindTreasureBigDragonData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindTreasureBigDragonData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FindTreasureBigDragonData::id() const {
  return id_;
}
inline void FindTreasureBigDragonData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 all_num = 2;
inline bool FindTreasureBigDragonData::has_all_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindTreasureBigDragonData::set_has_all_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindTreasureBigDragonData::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindTreasureBigDragonData::clear_all_num() {
  all_num_ = 0u;
  clear_has_all_num();
}
inline ::google::protobuf::uint32 FindTreasureBigDragonData::all_num() const {
  return all_num_;
}
inline void FindTreasureBigDragonData::set_all_num(::google::protobuf::uint32 value) {
  set_has_all_num();
  all_num_ = value;
}

// repeated .proto_ff.FindTreasureBigDragonRewardData reward = 3;
inline int FindTreasureBigDragonData::reward_size() const {
  return reward_.size();
}
inline void FindTreasureBigDragonData::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::FindTreasureBigDragonRewardData& FindTreasureBigDragonData::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::FindTreasureBigDragonRewardData* FindTreasureBigDragonData::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::FindTreasureBigDragonRewardData* FindTreasureBigDragonData::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBigDragonRewardData >&
FindTreasureBigDragonData::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBigDragonRewardData >*
FindTreasureBigDragonData::mutable_reward() {
  return &reward_;
}

// optional uint32 pool_id = 4;
inline bool FindTreasureBigDragonData::has_pool_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FindTreasureBigDragonData::set_has_pool_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FindTreasureBigDragonData::clear_has_pool_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FindTreasureBigDragonData::clear_pool_id() {
  pool_id_ = 0u;
  clear_has_pool_id();
}
inline ::google::protobuf::uint32 FindTreasureBigDragonData::pool_id() const {
  return pool_id_;
}
inline void FindTreasureBigDragonData::set_pool_id(::google::protobuf::uint32 value) {
  set_has_pool_id();
  pool_id_ = value;
}

// optional uint64 pool_time = 5;
inline bool FindTreasureBigDragonData::has_pool_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FindTreasureBigDragonData::set_has_pool_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FindTreasureBigDragonData::clear_has_pool_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FindTreasureBigDragonData::clear_pool_time() {
  pool_time_ = GOOGLE_ULONGLONG(0);
  clear_has_pool_time();
}
inline ::google::protobuf::uint64 FindTreasureBigDragonData::pool_time() const {
  return pool_time_;
}
inline void FindTreasureBigDragonData::set_pool_time(::google::protobuf::uint64 value) {
  set_has_pool_time();
  pool_time_ = value;
}

// -------------------------------------------------------------------

// FindTreasureBaiLianShopData

// optional uint32 id = 1;
inline bool FindTreasureBaiLianShopData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindTreasureBaiLianShopData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindTreasureBaiLianShopData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindTreasureBaiLianShopData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FindTreasureBaiLianShopData::id() const {
  return id_;
}
inline void FindTreasureBaiLianShopData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 left_num = 2;
inline bool FindTreasureBaiLianShopData::has_left_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindTreasureBaiLianShopData::set_has_left_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindTreasureBaiLianShopData::clear_has_left_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindTreasureBaiLianShopData::clear_left_num() {
  left_num_ = 0u;
  clear_has_left_num();
}
inline ::google::protobuf::uint32 FindTreasureBaiLianShopData::left_num() const {
  return left_num_;
}
inline void FindTreasureBaiLianShopData::set_left_num(::google::protobuf::uint32 value) {
  set_has_left_num();
  left_num_ = value;
}

// optional uint32 all_num = 3;
inline bool FindTreasureBaiLianShopData::has_all_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FindTreasureBaiLianShopData::set_has_all_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FindTreasureBaiLianShopData::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FindTreasureBaiLianShopData::clear_all_num() {
  all_num_ = 0u;
  clear_has_all_num();
}
inline ::google::protobuf::uint32 FindTreasureBaiLianShopData::all_num() const {
  return all_num_;
}
inline void FindTreasureBaiLianShopData::set_all_num(::google::protobuf::uint32 value) {
  set_has_all_num();
  all_num_ = value;
}

// -------------------------------------------------------------------

// FindTreasureBaiLianActiveData

// optional uint32 id = 1;
inline bool FindTreasureBaiLianActiveData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindTreasureBaiLianActiveData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindTreasureBaiLianActiveData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindTreasureBaiLianActiveData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FindTreasureBaiLianActiveData::id() const {
  return id_;
}
inline void FindTreasureBaiLianActiveData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 type = 2;
inline bool FindTreasureBaiLianActiveData::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindTreasureBaiLianActiveData::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindTreasureBaiLianActiveData::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindTreasureBaiLianActiveData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 FindTreasureBaiLianActiveData::type() const {
  return type_;
}
inline void FindTreasureBaiLianActiveData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 buy_status = 3;
inline bool FindTreasureBaiLianActiveData::has_buy_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FindTreasureBaiLianActiveData::set_has_buy_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FindTreasureBaiLianActiveData::clear_has_buy_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FindTreasureBaiLianActiveData::clear_buy_status() {
  buy_status_ = 0u;
  clear_has_buy_status();
}
inline ::google::protobuf::uint32 FindTreasureBaiLianActiveData::buy_status() const {
  return buy_status_;
}
inline void FindTreasureBaiLianActiveData::set_buy_status(::google::protobuf::uint32 value) {
  set_has_buy_status();
  buy_status_ = value;
}

// repeated .proto_ff.FindTreasureBaiLianShopData shop_data = 4;
inline int FindTreasureBaiLianActiveData::shop_data_size() const {
  return shop_data_.size();
}
inline void FindTreasureBaiLianActiveData::clear_shop_data() {
  shop_data_.Clear();
}
inline const ::proto_ff::FindTreasureBaiLianShopData& FindTreasureBaiLianActiveData::shop_data(int index) const {
  return shop_data_.Get(index);
}
inline ::proto_ff::FindTreasureBaiLianShopData* FindTreasureBaiLianActiveData::mutable_shop_data(int index) {
  return shop_data_.Mutable(index);
}
inline ::proto_ff::FindTreasureBaiLianShopData* FindTreasureBaiLianActiveData::add_shop_data() {
  return shop_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianShopData >&
FindTreasureBaiLianActiveData::shop_data() const {
  return shop_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianShopData >*
FindTreasureBaiLianActiveData::mutable_shop_data() {
  return &shop_data_;
}

// optional int32 open_status = 5;
inline bool FindTreasureBaiLianActiveData::has_open_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FindTreasureBaiLianActiveData::set_has_open_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FindTreasureBaiLianActiveData::clear_has_open_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FindTreasureBaiLianActiveData::clear_open_status() {
  open_status_ = 0;
  clear_has_open_status();
}
inline ::google::protobuf::int32 FindTreasureBaiLianActiveData::open_status() const {
  return open_status_;
}
inline void FindTreasureBaiLianActiveData::set_open_status(::google::protobuf::int32 value) {
  set_has_open_status();
  open_status_ = value;
}

// optional uint64 last_time = 6;
inline bool FindTreasureBaiLianActiveData::has_last_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FindTreasureBaiLianActiveData::set_has_last_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FindTreasureBaiLianActiveData::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FindTreasureBaiLianActiveData::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 FindTreasureBaiLianActiveData::last_time() const {
  return last_time_;
}
inline void FindTreasureBaiLianActiveData::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// -------------------------------------------------------------------

// FindTreasureBaiLianData

// optional uint32 id = 1;
inline bool FindTreasureBaiLianData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindTreasureBaiLianData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindTreasureBaiLianData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindTreasureBaiLianData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FindTreasureBaiLianData::id() const {
  return id_;
}
inline void FindTreasureBaiLianData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.FindTreasureRewardRecord record = 2;
inline int FindTreasureBaiLianData::record_size() const {
  return record_.size();
}
inline void FindTreasureBaiLianData::clear_record() {
  record_.Clear();
}
inline const ::proto_ff::FindTreasureRewardRecord& FindTreasureBaiLianData::record(int index) const {
  return record_.Get(index);
}
inline ::proto_ff::FindTreasureRewardRecord* FindTreasureBaiLianData::mutable_record(int index) {
  return record_.Mutable(index);
}
inline ::proto_ff::FindTreasureRewardRecord* FindTreasureBaiLianData::add_record() {
  return record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >&
FindTreasureBaiLianData::record() const {
  return record_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >*
FindTreasureBaiLianData::mutable_record() {
  return &record_;
}

// repeated .proto_ff.FindTreasureBaiLianActiveData active = 3;
inline int FindTreasureBaiLianData::active_size() const {
  return active_.size();
}
inline void FindTreasureBaiLianData::clear_active() {
  active_.Clear();
}
inline const ::proto_ff::FindTreasureBaiLianActiveData& FindTreasureBaiLianData::active(int index) const {
  return active_.Get(index);
}
inline ::proto_ff::FindTreasureBaiLianActiveData* FindTreasureBaiLianData::mutable_active(int index) {
  return active_.Mutable(index);
}
inline ::proto_ff::FindTreasureBaiLianActiveData* FindTreasureBaiLianData::add_active() {
  return active_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianActiveData >&
FindTreasureBaiLianData::active() const {
  return active_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianActiveData >*
FindTreasureBaiLianData::mutable_active() {
  return &active_;
}

// optional uint32 pool_id = 4;
inline bool FindTreasureBaiLianData::has_pool_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FindTreasureBaiLianData::set_has_pool_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FindTreasureBaiLianData::clear_has_pool_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FindTreasureBaiLianData::clear_pool_id() {
  pool_id_ = 0u;
  clear_has_pool_id();
}
inline ::google::protobuf::uint32 FindTreasureBaiLianData::pool_id() const {
  return pool_id_;
}
inline void FindTreasureBaiLianData::set_pool_id(::google::protobuf::uint32 value) {
  set_has_pool_id();
  pool_id_ = value;
}

// optional uint64 pool_time = 5;
inline bool FindTreasureBaiLianData::has_pool_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FindTreasureBaiLianData::set_has_pool_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FindTreasureBaiLianData::clear_has_pool_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FindTreasureBaiLianData::clear_pool_time() {
  pool_time_ = GOOGLE_ULONGLONG(0);
  clear_has_pool_time();
}
inline ::google::protobuf::uint64 FindTreasureBaiLianData::pool_time() const {
  return pool_time_;
}
inline void FindTreasureBaiLianData::set_pool_time(::google::protobuf::uint64 value) {
  set_has_pool_time();
  pool_time_ = value;
}

// -------------------------------------------------------------------

// FindTreasureSiShengRewardData

// optional uint32 id = 1;
inline bool FindTreasureSiShengRewardData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindTreasureSiShengRewardData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindTreasureSiShengRewardData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindTreasureSiShengRewardData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FindTreasureSiShengRewardData::id() const {
  return id_;
}
inline void FindTreasureSiShengRewardData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool FindTreasureSiShengRewardData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindTreasureSiShengRewardData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindTreasureSiShengRewardData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindTreasureSiShengRewardData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FindTreasureSiShengRewardData::status() const {
  return status_;
}
inline void FindTreasureSiShengRewardData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FindTreasureSiShengData

// optional uint32 id = 1;
inline bool FindTreasureSiShengData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindTreasureSiShengData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindTreasureSiShengData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindTreasureSiShengData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FindTreasureSiShengData::id() const {
  return id_;
}
inline void FindTreasureSiShengData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.FindTreasureSiShengRewardData person_total_reward = 2;
inline int FindTreasureSiShengData::person_total_reward_size() const {
  return person_total_reward_.size();
}
inline void FindTreasureSiShengData::clear_person_total_reward() {
  person_total_reward_.Clear();
}
inline const ::proto_ff::FindTreasureSiShengRewardData& FindTreasureSiShengData::person_total_reward(int index) const {
  return person_total_reward_.Get(index);
}
inline ::proto_ff::FindTreasureSiShengRewardData* FindTreasureSiShengData::mutable_person_total_reward(int index) {
  return person_total_reward_.Mutable(index);
}
inline ::proto_ff::FindTreasureSiShengRewardData* FindTreasureSiShengData::add_person_total_reward() {
  return person_total_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengRewardData >&
FindTreasureSiShengData::person_total_reward() const {
  return person_total_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengRewardData >*
FindTreasureSiShengData::mutable_person_total_reward() {
  return &person_total_reward_;
}

// repeated .proto_ff.FindTreasureSiShengRewardData server_total_reward = 3;
inline int FindTreasureSiShengData::server_total_reward_size() const {
  return server_total_reward_.size();
}
inline void FindTreasureSiShengData::clear_server_total_reward() {
  server_total_reward_.Clear();
}
inline const ::proto_ff::FindTreasureSiShengRewardData& FindTreasureSiShengData::server_total_reward(int index) const {
  return server_total_reward_.Get(index);
}
inline ::proto_ff::FindTreasureSiShengRewardData* FindTreasureSiShengData::mutable_server_total_reward(int index) {
  return server_total_reward_.Mutable(index);
}
inline ::proto_ff::FindTreasureSiShengRewardData* FindTreasureSiShengData::add_server_total_reward() {
  return server_total_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengRewardData >&
FindTreasureSiShengData::server_total_reward() const {
  return server_total_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengRewardData >*
FindTreasureSiShengData::mutable_server_total_reward() {
  return &server_total_reward_;
}

// optional uint32 all_num = 4;
inline bool FindTreasureSiShengData::has_all_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FindTreasureSiShengData::set_has_all_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FindTreasureSiShengData::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FindTreasureSiShengData::clear_all_num() {
  all_num_ = 0u;
  clear_has_all_num();
}
inline ::google::protobuf::uint32 FindTreasureSiShengData::all_num() const {
  return all_num_;
}
inline void FindTreasureSiShengData::set_all_num(::google::protobuf::uint32 value) {
  set_has_all_num();
  all_num_ = value;
}

// repeated .proto_ff.FindTreasureRewardRecord record = 5;
inline int FindTreasureSiShengData::record_size() const {
  return record_.size();
}
inline void FindTreasureSiShengData::clear_record() {
  record_.Clear();
}
inline const ::proto_ff::FindTreasureRewardRecord& FindTreasureSiShengData::record(int index) const {
  return record_.Get(index);
}
inline ::proto_ff::FindTreasureRewardRecord* FindTreasureSiShengData::mutable_record(int index) {
  return record_.Mutable(index);
}
inline ::proto_ff::FindTreasureRewardRecord* FindTreasureSiShengData::add_record() {
  return record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >&
FindTreasureSiShengData::record() const {
  return record_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureRewardRecord >*
FindTreasureSiShengData::mutable_record() {
  return &record_;
}

// optional uint32 pool_id = 6;
inline bool FindTreasureSiShengData::has_pool_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FindTreasureSiShengData::set_has_pool_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FindTreasureSiShengData::clear_has_pool_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FindTreasureSiShengData::clear_pool_id() {
  pool_id_ = 0u;
  clear_has_pool_id();
}
inline ::google::protobuf::uint32 FindTreasureSiShengData::pool_id() const {
  return pool_id_;
}
inline void FindTreasureSiShengData::set_pool_id(::google::protobuf::uint32 value) {
  set_has_pool_id();
  pool_id_ = value;
}

// optional uint64 pool_time = 7;
inline bool FindTreasureSiShengData::has_pool_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FindTreasureSiShengData::set_has_pool_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FindTreasureSiShengData::clear_has_pool_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FindTreasureSiShengData::clear_pool_time() {
  pool_time_ = GOOGLE_ULONGLONG(0);
  clear_has_pool_time();
}
inline ::google::protobuf::uint64 FindTreasureSiShengData::pool_time() const {
  return pool_time_;
}
inline void FindTreasureSiShengData::set_pool_time(::google::protobuf::uint64 value) {
  set_has_pool_time();
  pool_time_ = value;
}

// -------------------------------------------------------------------

// FindTreatureDBData

// repeated .proto_ff.FindTreasureBigDragonData big_dragon = 1;
inline int FindTreatureDBData::big_dragon_size() const {
  return big_dragon_.size();
}
inline void FindTreatureDBData::clear_big_dragon() {
  big_dragon_.Clear();
}
inline const ::proto_ff::FindTreasureBigDragonData& FindTreatureDBData::big_dragon(int index) const {
  return big_dragon_.Get(index);
}
inline ::proto_ff::FindTreasureBigDragonData* FindTreatureDBData::mutable_big_dragon(int index) {
  return big_dragon_.Mutable(index);
}
inline ::proto_ff::FindTreasureBigDragonData* FindTreatureDBData::add_big_dragon() {
  return big_dragon_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBigDragonData >&
FindTreatureDBData::big_dragon() const {
  return big_dragon_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBigDragonData >*
FindTreatureDBData::mutable_big_dragon() {
  return &big_dragon_;
}

// repeated .proto_ff.FindTreasureBaiLianData bai_lian = 2;
inline int FindTreatureDBData::bai_lian_size() const {
  return bai_lian_.size();
}
inline void FindTreatureDBData::clear_bai_lian() {
  bai_lian_.Clear();
}
inline const ::proto_ff::FindTreasureBaiLianData& FindTreatureDBData::bai_lian(int index) const {
  return bai_lian_.Get(index);
}
inline ::proto_ff::FindTreasureBaiLianData* FindTreatureDBData::mutable_bai_lian(int index) {
  return bai_lian_.Mutable(index);
}
inline ::proto_ff::FindTreasureBaiLianData* FindTreatureDBData::add_bai_lian() {
  return bai_lian_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianData >&
FindTreatureDBData::bai_lian() const {
  return bai_lian_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureBaiLianData >*
FindTreatureDBData::mutable_bai_lian() {
  return &bai_lian_;
}

// repeated .proto_ff.FindTreasureSiShengData si_sheng = 3;
inline int FindTreatureDBData::si_sheng_size() const {
  return si_sheng_.size();
}
inline void FindTreatureDBData::clear_si_sheng() {
  si_sheng_.Clear();
}
inline const ::proto_ff::FindTreasureSiShengData& FindTreatureDBData::si_sheng(int index) const {
  return si_sheng_.Get(index);
}
inline ::proto_ff::FindTreasureSiShengData* FindTreatureDBData::mutable_si_sheng(int index) {
  return si_sheng_.Mutable(index);
}
inline ::proto_ff::FindTreasureSiShengData* FindTreatureDBData::add_si_sheng() {
  return si_sheng_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengData >&
FindTreatureDBData::si_sheng() const {
  return si_sheng_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FindTreasureSiShengData >*
FindTreatureDBData::mutable_si_sheng() {
  return &si_sheng_;
}

// -------------------------------------------------------------------

// FestDailyTotalRechargeOneProto

// optional int32 id = 1;
inline bool FestDailyTotalRechargeOneProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestDailyTotalRechargeOneProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestDailyTotalRechargeOneProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestDailyTotalRechargeOneProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestDailyTotalRechargeOneProto::id() const {
  return id_;
}
inline void FestDailyTotalRechargeOneProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool FestDailyTotalRechargeOneProto::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestDailyTotalRechargeOneProto::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestDailyTotalRechargeOneProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestDailyTotalRechargeOneProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 FestDailyTotalRechargeOneProto::status() const {
  return status_;
}
inline void FestDailyTotalRechargeOneProto::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FestRTurnableRechargeOneProto

// optional int32 id = 1;
inline bool FestRTurnableRechargeOneProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestRTurnableRechargeOneProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestRTurnableRechargeOneProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestRTurnableRechargeOneProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestRTurnableRechargeOneProto::id() const {
  return id_;
}
inline void FestRTurnableRechargeOneProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 cur_num = 2;
inline bool FestRTurnableRechargeOneProto::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestRTurnableRechargeOneProto::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestRTurnableRechargeOneProto::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestRTurnableRechargeOneProto::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 FestRTurnableRechargeOneProto::cur_num() const {
  return cur_num_;
}
inline void FestRTurnableRechargeOneProto::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 all_num = 3;
inline bool FestRTurnableRechargeOneProto::has_all_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestRTurnableRechargeOneProto::set_has_all_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestRTurnableRechargeOneProto::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestRTurnableRechargeOneProto::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 FestRTurnableRechargeOneProto::all_num() const {
  return all_num_;
}
inline void FestRTurnableRechargeOneProto::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// optional int32 turable_num = 4;
inline bool FestRTurnableRechargeOneProto::has_turable_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestRTurnableRechargeOneProto::set_has_turable_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestRTurnableRechargeOneProto::clear_has_turable_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestRTurnableRechargeOneProto::clear_turable_num() {
  turable_num_ = 0;
  clear_has_turable_num();
}
inline ::google::protobuf::int32 FestRTurnableRechargeOneProto::turable_num() const {
  return turable_num_;
}
inline void FestRTurnableRechargeOneProto::set_turable_num(::google::protobuf::int32 value) {
  set_has_turable_num();
  turable_num_ = value;
}

// -------------------------------------------------------------------

// RTurnableLogDBProto

// optional bytes name = 1;
inline bool RTurnableLogDBProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RTurnableLogDBProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RTurnableLogDBProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RTurnableLogDBProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RTurnableLogDBProto::name() const {
  return *name_;
}
inline void RTurnableLogDBProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RTurnableLogDBProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RTurnableLogDBProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RTurnableLogDBProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RTurnableLogDBProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RTurnableLogDBProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 id = 2;
inline bool RTurnableLogDBProto::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RTurnableLogDBProto::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RTurnableLogDBProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RTurnableLogDBProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RTurnableLogDBProto::id() const {
  return id_;
}
inline void RTurnableLogDBProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 diamod = 3;
inline bool RTurnableLogDBProto::has_diamod() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RTurnableLogDBProto::set_has_diamod() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RTurnableLogDBProto::clear_has_diamod() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RTurnableLogDBProto::clear_diamod() {
  diamod_ = 0;
  clear_has_diamod();
}
inline ::google::protobuf::int32 RTurnableLogDBProto::diamod() const {
  return diamod_;
}
inline void RTurnableLogDBProto::set_diamod(::google::protobuf::int32 value) {
  set_has_diamod();
  diamod_ = value;
}

// optional uint64 time = 4;
inline bool RTurnableLogDBProto::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RTurnableLogDBProto::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RTurnableLogDBProto::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RTurnableLogDBProto::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 RTurnableLogDBProto::time() const {
  return time_;
}
inline void RTurnableLogDBProto::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// FestRTurnableLogDBProto

// optional int32 template_id = 1;
inline bool FestRTurnableLogDBProto::has_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestRTurnableLogDBProto::set_has_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestRTurnableLogDBProto::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestRTurnableLogDBProto::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 FestRTurnableLogDBProto::template_id() const {
  return template_id_;
}
inline void FestRTurnableLogDBProto::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
}

// repeated .proto_ff.RTurnableLogDBProto info = 2;
inline int FestRTurnableLogDBProto::info_size() const {
  return info_.size();
}
inline void FestRTurnableLogDBProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::RTurnableLogDBProto& FestRTurnableLogDBProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::RTurnableLogDBProto* FestRTurnableLogDBProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::RTurnableLogDBProto* FestRTurnableLogDBProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RTurnableLogDBProto >&
FestRTurnableLogDBProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RTurnableLogDBProto >*
FestRTurnableLogDBProto::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// FestTurnableTaskProto

// optional int32 id = 1;
inline bool FestTurnableTaskProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestTurnableTaskProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestTurnableTaskProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestTurnableTaskProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestTurnableTaskProto::id() const {
  return id_;
}
inline void FestTurnableTaskProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool FestTurnableTaskProto::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestTurnableTaskProto::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestTurnableTaskProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestTurnableTaskProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 FestTurnableTaskProto::status() const {
  return status_;
}
inline void FestTurnableTaskProto::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 cur_num = 3;
inline bool FestTurnableTaskProto::has_cur_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestTurnableTaskProto::set_has_cur_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestTurnableTaskProto::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestTurnableTaskProto::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 FestTurnableTaskProto::cur_num() const {
  return cur_num_;
}
inline void FestTurnableTaskProto::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 all_num = 4;
inline bool FestTurnableTaskProto::has_all_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestTurnableTaskProto::set_has_all_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestTurnableTaskProto::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestTurnableTaskProto::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 FestTurnableTaskProto::all_num() const {
  return all_num_;
}
inline void FestTurnableTaskProto::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// -------------------------------------------------------------------

// FestDonateTaskProto

// optional int32 id = 1;
inline bool FestDonateTaskProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestDonateTaskProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestDonateTaskProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestDonateTaskProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestDonateTaskProto::id() const {
  return id_;
}
inline void FestDonateTaskProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool FestDonateTaskProto::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestDonateTaskProto::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestDonateTaskProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestDonateTaskProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 FestDonateTaskProto::status() const {
  return status_;
}
inline void FestDonateTaskProto::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 cur_num = 3;
inline bool FestDonateTaskProto::has_cur_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestDonateTaskProto::set_has_cur_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestDonateTaskProto::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestDonateTaskProto::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 FestDonateTaskProto::cur_num() const {
  return cur_num_;
}
inline void FestDonateTaskProto::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 all_num = 4;
inline bool FestDonateTaskProto::has_all_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestDonateTaskProto::set_has_all_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestDonateTaskProto::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestDonateTaskProto::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 FestDonateTaskProto::all_num() const {
  return all_num_;
}
inline void FestDonateTaskProto::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// -------------------------------------------------------------------

// FestDonateSingleProto

// optional int32 id = 1;
inline bool FestDonateSingleProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestDonateSingleProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestDonateSingleProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestDonateSingleProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestDonateSingleProto::id() const {
  return id_;
}
inline void FestDonateSingleProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool FestDonateSingleProto::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestDonateSingleProto::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestDonateSingleProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestDonateSingleProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 FestDonateSingleProto::status() const {
  return status_;
}
inline void FestDonateSingleProto::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FestDonateServerProto

// optional int32 id = 1;
inline bool FestDonateServerProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestDonateServerProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestDonateServerProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestDonateServerProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestDonateServerProto::id() const {
  return id_;
}
inline void FestDonateServerProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool FestDonateServerProto::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestDonateServerProto::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestDonateServerProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestDonateServerProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 FestDonateServerProto::status() const {
  return status_;
}
inline void FestDonateServerProto::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FestOnlineOneProto

// optional int32 id = 1;
inline bool FestOnlineOneProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestOnlineOneProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestOnlineOneProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestOnlineOneProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestOnlineOneProto::id() const {
  return id_;
}
inline void FestOnlineOneProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool FestOnlineOneProto::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestOnlineOneProto::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestOnlineOneProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestOnlineOneProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 FestOnlineOneProto::status() const {
  return status_;
}
inline void FestOnlineOneProto::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional uint64 start_time = 3;
inline bool FestOnlineOneProto::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestOnlineOneProto::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestOnlineOneProto::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestOnlineOneProto::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::uint64 FestOnlineOneProto::start_time() const {
  return start_time_;
}
inline void FestOnlineOneProto::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional uint64 end_time = 4;
inline bool FestOnlineOneProto::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestOnlineOneProto::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestOnlineOneProto::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestOnlineOneProto::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 FestOnlineOneProto::end_time() const {
  return end_time_;
}
inline void FestOnlineOneProto::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// -------------------------------------------------------------------

// FestCollectWordOneProto

// optional int32 id = 1;
inline bool FestCollectWordOneProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestCollectWordOneProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestCollectWordOneProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestCollectWordOneProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestCollectWordOneProto::id() const {
  return id_;
}
inline void FestCollectWordOneProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 left_num = 2;
inline bool FestCollectWordOneProto::has_left_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestCollectWordOneProto::set_has_left_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestCollectWordOneProto::clear_has_left_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestCollectWordOneProto::clear_left_num() {
  left_num_ = 0u;
  clear_has_left_num();
}
inline ::google::protobuf::uint32 FestCollectWordOneProto::left_num() const {
  return left_num_;
}
inline void FestCollectWordOneProto::set_left_num(::google::protobuf::uint32 value) {
  set_has_left_num();
  left_num_ = value;
}

// -------------------------------------------------------------------

// DonateServerDBProto

// optional int32 template_id = 1;
inline bool DonateServerDBProto::has_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DonateServerDBProto::set_has_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DonateServerDBProto::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DonateServerDBProto::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 DonateServerDBProto::template_id() const {
  return template_id_;
}
inline void DonateServerDBProto::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
}

// optional uint32 server_num = 2;
inline bool DonateServerDBProto::has_server_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DonateServerDBProto::set_has_server_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DonateServerDBProto::clear_has_server_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DonateServerDBProto::clear_server_num() {
  server_num_ = 0u;
  clear_has_server_num();
}
inline ::google::protobuf::uint32 DonateServerDBProto::server_num() const {
  return server_num_;
}
inline void DonateServerDBProto::set_server_num(::google::protobuf::uint32 value) {
  set_has_server_num();
  server_num_ = value;
}

// -------------------------------------------------------------------

// DrawPizeTaskProto

// optional int32 id = 1;
inline bool DrawPizeTaskProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DrawPizeTaskProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DrawPizeTaskProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DrawPizeTaskProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DrawPizeTaskProto::id() const {
  return id_;
}
inline void DrawPizeTaskProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool DrawPizeTaskProto::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DrawPizeTaskProto::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DrawPizeTaskProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DrawPizeTaskProto::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 DrawPizeTaskProto::status() const {
  return status_;
}
inline void DrawPizeTaskProto::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// DrawPizeProto

// repeated .proto_ff.DrawPizeTaskProto task = 1;
inline int DrawPizeProto::task_size() const {
  return task_.size();
}
inline void DrawPizeProto::clear_task() {
  task_.Clear();
}
inline const ::proto_ff::DrawPizeTaskProto& DrawPizeProto::task(int index) const {
  return task_.Get(index);
}
inline ::proto_ff::DrawPizeTaskProto* DrawPizeProto::mutable_task(int index) {
  return task_.Mutable(index);
}
inline ::proto_ff::DrawPizeTaskProto* DrawPizeProto::add_task() {
  return task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DrawPizeTaskProto >&
DrawPizeProto::task() const {
  return task_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DrawPizeTaskProto >*
DrawPizeProto::mutable_task() {
  return &task_;
}

// optional uint32 choujiang_num = 2;
inline bool DrawPizeProto::has_choujiang_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DrawPizeProto::set_has_choujiang_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DrawPizeProto::clear_has_choujiang_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DrawPizeProto::clear_choujiang_num() {
  choujiang_num_ = 0u;
  clear_has_choujiang_num();
}
inline ::google::protobuf::uint32 DrawPizeProto::choujiang_num() const {
  return choujiang_num_;
}
inline void DrawPizeProto::set_choujiang_num(::google::protobuf::uint32 value) {
  set_has_choujiang_num();
  choujiang_num_ = value;
}

// -------------------------------------------------------------------

// DrawPizeLogDBProto

// optional bytes name = 1;
inline bool DrawPizeLogDBProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DrawPizeLogDBProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DrawPizeLogDBProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DrawPizeLogDBProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DrawPizeLogDBProto::name() const {
  return *name_;
}
inline void DrawPizeLogDBProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DrawPizeLogDBProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DrawPizeLogDBProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DrawPizeLogDBProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DrawPizeLogDBProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DrawPizeLogDBProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 id = 2;
inline bool DrawPizeLogDBProto::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DrawPizeLogDBProto::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DrawPizeLogDBProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DrawPizeLogDBProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DrawPizeLogDBProto::id() const {
  return id_;
}
inline void DrawPizeLogDBProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 time = 3;
inline bool DrawPizeLogDBProto::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DrawPizeLogDBProto::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DrawPizeLogDBProto::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DrawPizeLogDBProto::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 DrawPizeLogDBProto::time() const {
  return time_;
}
inline void DrawPizeLogDBProto::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// FestDrawPizeLogDBProto

// optional int32 template_id = 1;
inline bool FestDrawPizeLogDBProto::has_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestDrawPizeLogDBProto::set_has_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestDrawPizeLogDBProto::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestDrawPizeLogDBProto::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 FestDrawPizeLogDBProto::template_id() const {
  return template_id_;
}
inline void FestDrawPizeLogDBProto::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
}

// repeated .proto_ff.DrawPizeLogDBProto info = 2;
inline int FestDrawPizeLogDBProto::info_size() const {
  return info_.size();
}
inline void FestDrawPizeLogDBProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::DrawPizeLogDBProto& FestDrawPizeLogDBProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::DrawPizeLogDBProto* FestDrawPizeLogDBProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::DrawPizeLogDBProto* FestDrawPizeLogDBProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DrawPizeLogDBProto >&
FestDrawPizeLogDBProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DrawPizeLogDBProto >*
FestDrawPizeLogDBProto::mutable_info() {
  return &info_;
}

// optional uint32 server_num = 3;
inline bool FestDrawPizeLogDBProto::has_server_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestDrawPizeLogDBProto::set_has_server_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestDrawPizeLogDBProto::clear_has_server_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestDrawPizeLogDBProto::clear_server_num() {
  server_num_ = 0u;
  clear_has_server_num();
}
inline ::google::protobuf::uint32 FestDrawPizeLogDBProto::server_num() const {
  return server_num_;
}
inline void FestDrawPizeLogDBProto::set_server_num(::google::protobuf::uint32 value) {
  set_has_server_num();
  server_num_ = value;
}

// -------------------------------------------------------------------

// FestRankRewardData

// optional int32 id = 1;
inline bool FestRankRewardData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestRankRewardData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestRankRewardData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestRankRewardData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestRankRewardData::id() const {
  return id_;
}
inline void FestRankRewardData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool FestRankRewardData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestRankRewardData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestRankRewardData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestRankRewardData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FestRankRewardData::status() const {
  return status_;
}
inline void FestRankRewardData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FestRankData

// optional int32 rank_id = 1;
inline bool FestRankData::has_rank_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestRankData::set_has_rank_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestRankData::clear_has_rank_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestRankData::clear_rank_id() {
  rank_id_ = 0;
  clear_has_rank_id();
}
inline ::google::protobuf::int32 FestRankData::rank_id() const {
  return rank_id_;
}
inline void FestRankData::set_rank_id(::google::protobuf::int32 value) {
  set_has_rank_id();
  rank_id_ = value;
}

// repeated .proto_ff.FestRankRewardData data = 2;
inline int FestRankData::data_size() const {
  return data_.size();
}
inline void FestRankData::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::FestRankRewardData& FestRankData::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::FestRankRewardData* FestRankData::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::FestRankRewardData* FestRankData::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRankRewardData >&
FestRankData::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRankRewardData >*
FestRankData::mutable_data() {
  return &data_;
}

// optional uint32 active_status = 3;
inline bool FestRankData::has_active_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestRankData::set_has_active_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestRankData::clear_has_active_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestRankData::clear_active_status() {
  active_status_ = 0u;
  clear_has_active_status();
}
inline ::google::protobuf::uint32 FestRankData::active_status() const {
  return active_status_;
}
inline void FestRankData::set_active_status(::google::protobuf::uint32 value) {
  set_has_active_status();
  active_status_ = value;
}

// optional uint32 red_point_status = 4;
inline bool FestRankData::has_red_point_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestRankData::set_has_red_point_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestRankData::clear_has_red_point_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestRankData::clear_red_point_status() {
  red_point_status_ = 0u;
  clear_has_red_point_status();
}
inline ::google::protobuf::uint32 FestRankData::red_point_status() const {
  return red_point_status_;
}
inline void FestRankData::set_red_point_status(::google::protobuf::uint32 value) {
  set_has_red_point_status();
  red_point_status_ = value;
}

// optional uint32 gift_status = 5;
inline bool FestRankData::has_gift_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FestRankData::set_has_gift_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FestRankData::clear_has_gift_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FestRankData::clear_gift_status() {
  gift_status_ = 0u;
  clear_has_gift_status();
}
inline ::google::protobuf::uint32 FestRankData::gift_status() const {
  return gift_status_;
}
inline void FestRankData::set_gift_status(::google::protobuf::uint32 value) {
  set_has_gift_status();
  gift_status_ = value;
}

// -------------------------------------------------------------------

// FestRankDBData

// repeated .proto_ff.FestRankData data = 1;
inline int FestRankDBData::data_size() const {
  return data_.size();
}
inline void FestRankDBData::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::FestRankData& FestRankDBData::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::FestRankData* FestRankDBData::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::FestRankData* FestRankDBData::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRankData >&
FestRankDBData::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRankData >*
FestRankDBData::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// FestRechargePrizeTaskData

// optional int32 task_id = 1;
inline bool FestRechargePrizeTaskData::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestRechargePrizeTaskData::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestRechargePrizeTaskData::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestRechargePrizeTaskData::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 FestRechargePrizeTaskData::task_id() const {
  return task_id_;
}
inline void FestRechargePrizeTaskData::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
}

// optional int32 task_status = 2;
inline bool FestRechargePrizeTaskData::has_task_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestRechargePrizeTaskData::set_has_task_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestRechargePrizeTaskData::clear_has_task_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestRechargePrizeTaskData::clear_task_status() {
  task_status_ = 0;
  clear_has_task_status();
}
inline ::google::protobuf::int32 FestRechargePrizeTaskData::task_status() const {
  return task_status_;
}
inline void FestRechargePrizeTaskData::set_task_status(::google::protobuf::int32 value) {
  set_has_task_status();
  task_status_ = value;
}

// -------------------------------------------------------------------

// FestRechargePrizeRecord

// optional int32 jiang_num = 1;
inline bool FestRechargePrizeRecord::has_jiang_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestRechargePrizeRecord::set_has_jiang_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestRechargePrizeRecord::clear_has_jiang_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestRechargePrizeRecord::clear_jiang_num() {
  jiang_num_ = 0;
  clear_has_jiang_num();
}
inline ::google::protobuf::int32 FestRechargePrizeRecord::jiang_num() const {
  return jiang_num_;
}
inline void FestRechargePrizeRecord::set_jiang_num(::google::protobuf::int32 value) {
  set_has_jiang_num();
  jiang_num_ = value;
}

// optional int64 time = 2;
inline bool FestRechargePrizeRecord::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestRechargePrizeRecord::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestRechargePrizeRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestRechargePrizeRecord::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 FestRechargePrizeRecord::time() const {
  return time_;
}
inline void FestRechargePrizeRecord::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// FestRechargePrizeData

// optional uint32 left_pool_num = 1;
inline bool FestRechargePrizeData::has_left_pool_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestRechargePrizeData::set_has_left_pool_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestRechargePrizeData::clear_has_left_pool_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestRechargePrizeData::clear_left_pool_num() {
  left_pool_num_ = 0u;
  clear_has_left_pool_num();
}
inline ::google::protobuf::uint32 FestRechargePrizeData::left_pool_num() const {
  return left_pool_num_;
}
inline void FestRechargePrizeData::set_left_pool_num(::google::protobuf::uint32 value) {
  set_has_left_pool_num();
  left_pool_num_ = value;
}

// optional uint32 left_prize = 2;
inline bool FestRechargePrizeData::has_left_prize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestRechargePrizeData::set_has_left_prize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestRechargePrizeData::clear_has_left_prize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestRechargePrizeData::clear_left_prize() {
  left_prize_ = 0u;
  clear_has_left_prize();
}
inline ::google::protobuf::uint32 FestRechargePrizeData::left_prize() const {
  return left_prize_;
}
inline void FestRechargePrizeData::set_left_prize(::google::protobuf::uint32 value) {
  set_has_left_prize();
  left_prize_ = value;
}

// optional uint32 free_status = 3;
inline bool FestRechargePrizeData::has_free_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestRechargePrizeData::set_has_free_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestRechargePrizeData::clear_has_free_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestRechargePrizeData::clear_free_status() {
  free_status_ = 0u;
  clear_has_free_status();
}
inline ::google::protobuf::uint32 FestRechargePrizeData::free_status() const {
  return free_status_;
}
inline void FestRechargePrizeData::set_free_status(::google::protobuf::uint32 value) {
  set_has_free_status();
  free_status_ = value;
}

// repeated .proto_ff.FestRechargePrizeTaskData task = 4;
inline int FestRechargePrizeData::task_size() const {
  return task_.size();
}
inline void FestRechargePrizeData::clear_task() {
  task_.Clear();
}
inline const ::proto_ff::FestRechargePrizeTaskData& FestRechargePrizeData::task(int index) const {
  return task_.Get(index);
}
inline ::proto_ff::FestRechargePrizeTaskData* FestRechargePrizeData::mutable_task(int index) {
  return task_.Mutable(index);
}
inline ::proto_ff::FestRechargePrizeTaskData* FestRechargePrizeData::add_task() {
  return task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeTaskData >&
FestRechargePrizeData::task() const {
  return task_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeTaskData >*
FestRechargePrizeData::mutable_task() {
  return &task_;
}

// -------------------------------------------------------------------

// FestRechargePrizeDBData

// optional uint32 left_pool_num = 1;
inline bool FestRechargePrizeDBData::has_left_pool_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestRechargePrizeDBData::set_has_left_pool_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestRechargePrizeDBData::clear_has_left_pool_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestRechargePrizeDBData::clear_left_pool_num() {
  left_pool_num_ = 0u;
  clear_has_left_pool_num();
}
inline ::google::protobuf::uint32 FestRechargePrizeDBData::left_pool_num() const {
  return left_pool_num_;
}
inline void FestRechargePrizeDBData::set_left_pool_num(::google::protobuf::uint32 value) {
  set_has_left_pool_num();
  left_pool_num_ = value;
}

// optional uint32 left_prize = 2;
inline bool FestRechargePrizeDBData::has_left_prize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestRechargePrizeDBData::set_has_left_prize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestRechargePrizeDBData::clear_has_left_prize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestRechargePrizeDBData::clear_left_prize() {
  left_prize_ = 0u;
  clear_has_left_prize();
}
inline ::google::protobuf::uint32 FestRechargePrizeDBData::left_prize() const {
  return left_prize_;
}
inline void FestRechargePrizeDBData::set_left_prize(::google::protobuf::uint32 value) {
  set_has_left_prize();
  left_prize_ = value;
}

// optional uint32 free_status = 3;
inline bool FestRechargePrizeDBData::has_free_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestRechargePrizeDBData::set_has_free_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestRechargePrizeDBData::clear_has_free_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestRechargePrizeDBData::clear_free_status() {
  free_status_ = 0u;
  clear_has_free_status();
}
inline ::google::protobuf::uint32 FestRechargePrizeDBData::free_status() const {
  return free_status_;
}
inline void FestRechargePrizeDBData::set_free_status(::google::protobuf::uint32 value) {
  set_has_free_status();
  free_status_ = value;
}

// repeated .proto_ff.FestRechargePrizeTaskData task = 4;
inline int FestRechargePrizeDBData::task_size() const {
  return task_.size();
}
inline void FestRechargePrizeDBData::clear_task() {
  task_.Clear();
}
inline const ::proto_ff::FestRechargePrizeTaskData& FestRechargePrizeDBData::task(int index) const {
  return task_.Get(index);
}
inline ::proto_ff::FestRechargePrizeTaskData* FestRechargePrizeDBData::mutable_task(int index) {
  return task_.Mutable(index);
}
inline ::proto_ff::FestRechargePrizeTaskData* FestRechargePrizeDBData::add_task() {
  return task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeTaskData >&
FestRechargePrizeDBData::task() const {
  return task_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeTaskData >*
FestRechargePrizeDBData::mutable_task() {
  return &task_;
}

// repeated .proto_ff.FestRechargePrizeRecord record = 5;
inline int FestRechargePrizeDBData::record_size() const {
  return record_.size();
}
inline void FestRechargePrizeDBData::clear_record() {
  record_.Clear();
}
inline const ::proto_ff::FestRechargePrizeRecord& FestRechargePrizeDBData::record(int index) const {
  return record_.Get(index);
}
inline ::proto_ff::FestRechargePrizeRecord* FestRechargePrizeDBData::mutable_record(int index) {
  return record_.Mutable(index);
}
inline ::proto_ff::FestRechargePrizeRecord* FestRechargePrizeDBData::add_record() {
  return record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeRecord >&
FestRechargePrizeDBData::record() const {
  return record_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestRechargePrizeRecord >*
FestRechargePrizeDBData::mutable_record() {
  return &record_;
}

// optional uint64 flush_time = 6;
inline bool FestRechargePrizeDBData::has_flush_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FestRechargePrizeDBData::set_has_flush_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FestRechargePrizeDBData::clear_has_flush_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FestRechargePrizeDBData::clear_flush_time() {
  flush_time_ = GOOGLE_ULONGLONG(0);
  clear_has_flush_time();
}
inline ::google::protobuf::uint64 FestRechargePrizeDBData::flush_time() const {
  return flush_time_;
}
inline void FestRechargePrizeDBData::set_flush_time(::google::protobuf::uint64 value) {
  set_has_flush_time();
  flush_time_ = value;
}

// optional uint32 cur_choujiang_num = 7;
inline bool FestRechargePrizeDBData::has_cur_choujiang_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FestRechargePrizeDBData::set_has_cur_choujiang_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FestRechargePrizeDBData::clear_has_cur_choujiang_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FestRechargePrizeDBData::clear_cur_choujiang_num() {
  cur_choujiang_num_ = 0u;
  clear_has_cur_choujiang_num();
}
inline ::google::protobuf::uint32 FestRechargePrizeDBData::cur_choujiang_num() const {
  return cur_choujiang_num_;
}
inline void FestRechargePrizeDBData::set_cur_choujiang_num(::google::protobuf::uint32 value) {
  set_has_cur_choujiang_num();
  cur_choujiang_num_ = value;
}

// optional uint32 acc_recharge_num = 8;
inline bool FestRechargePrizeDBData::has_acc_recharge_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FestRechargePrizeDBData::set_has_acc_recharge_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FestRechargePrizeDBData::clear_has_acc_recharge_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FestRechargePrizeDBData::clear_acc_recharge_num() {
  acc_recharge_num_ = 0u;
  clear_has_acc_recharge_num();
}
inline ::google::protobuf::uint32 FestRechargePrizeDBData::acc_recharge_num() const {
  return acc_recharge_num_;
}
inline void FestRechargePrizeDBData::set_acc_recharge_num(::google::protobuf::uint32 value) {
  set_has_acc_recharge_num();
  acc_recharge_num_ = value;
}

// -------------------------------------------------------------------

// NotifyWorldInfo

// optional int32 world_lv = 1;
inline bool NotifyWorldInfo::has_world_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyWorldInfo::set_has_world_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyWorldInfo::clear_has_world_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyWorldInfo::clear_world_lv() {
  world_lv_ = 0;
  clear_has_world_lv();
}
inline ::google::protobuf::int32 NotifyWorldInfo::world_lv() const {
  return world_lv_;
}
inline void NotifyWorldInfo::set_world_lv(::google::protobuf::int32 value) {
  set_has_world_lv();
  world_lv_ = value;
}

// optional int32 world_lv_4 = 2;
inline bool NotifyWorldInfo::has_world_lv_4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyWorldInfo::set_has_world_lv_4() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyWorldInfo::clear_has_world_lv_4() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyWorldInfo::clear_world_lv_4() {
  world_lv_4_ = 0;
  clear_has_world_lv_4();
}
inline ::google::protobuf::int32 NotifyWorldInfo::world_lv_4() const {
  return world_lv_4_;
}
inline void NotifyWorldInfo::set_world_lv_4(::google::protobuf::int32 value) {
  set_has_world_lv_4();
  world_lv_4_ = value;
}

// optional int32 world_lv_8 = 3;
inline bool NotifyWorldInfo::has_world_lv_8() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyWorldInfo::set_has_world_lv_8() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyWorldInfo::clear_has_world_lv_8() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyWorldInfo::clear_world_lv_8() {
  world_lv_8_ = 0;
  clear_has_world_lv_8();
}
inline ::google::protobuf::int32 NotifyWorldInfo::world_lv_8() const {
  return world_lv_8_;
}
inline void NotifyWorldInfo::set_world_lv_8(::google::protobuf::int32 value) {
  set_has_world_lv_8();
  world_lv_8_ = value;
}

// optional int32 world_lv_16 = 4;
inline bool NotifyWorldInfo::has_world_lv_16() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyWorldInfo::set_has_world_lv_16() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyWorldInfo::clear_has_world_lv_16() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyWorldInfo::clear_world_lv_16() {
  world_lv_16_ = 0;
  clear_has_world_lv_16();
}
inline ::google::protobuf::int32 NotifyWorldInfo::world_lv_16() const {
  return world_lv_16_;
}
inline void NotifyWorldInfo::set_world_lv_16(::google::protobuf::int32 value) {
  set_has_world_lv_16();
  world_lv_16_ = value;
}

// -------------------------------------------------------------------

// SynWorldInfoReq

// repeated .proto_ff.ComPair infos = 1;
inline int SynWorldInfoReq::infos_size() const {
  return infos_.size();
}
inline void SynWorldInfoReq::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::ComPair& SynWorldInfoReq::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::ComPair* SynWorldInfoReq::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::ComPair* SynWorldInfoReq::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
SynWorldInfoReq::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
SynWorldInfoReq::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// SceneTransParam

// optional uint64 src_map = 1;
inline bool SceneTransParam::has_src_map() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneTransParam::set_has_src_map() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneTransParam::clear_has_src_map() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneTransParam::clear_src_map() {
  src_map_ = GOOGLE_ULONGLONG(0);
  clear_has_src_map();
}
inline ::google::protobuf::uint64 SceneTransParam::src_map() const {
  return src_map_;
}
inline void SceneTransParam::set_src_map(::google::protobuf::uint64 value) {
  set_has_src_map();
  src_map_ = value;
}

// optional bytes src_param = 2;
inline bool SceneTransParam::has_src_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneTransParam::set_has_src_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneTransParam::clear_has_src_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneTransParam::clear_src_param() {
  if (src_param_ != &::google::protobuf::internal::kEmptyString) {
    src_param_->clear();
  }
  clear_has_src_param();
}
inline const ::std::string& SceneTransParam::src_param() const {
  return *src_param_;
}
inline void SceneTransParam::set_src_param(const ::std::string& value) {
  set_has_src_param();
  if (src_param_ == &::google::protobuf::internal::kEmptyString) {
    src_param_ = new ::std::string;
  }
  src_param_->assign(value);
}
inline void SceneTransParam::set_src_param(const char* value) {
  set_has_src_param();
  if (src_param_ == &::google::protobuf::internal::kEmptyString) {
    src_param_ = new ::std::string;
  }
  src_param_->assign(value);
}
inline void SceneTransParam::set_src_param(const void* value, size_t size) {
  set_has_src_param();
  if (src_param_ == &::google::protobuf::internal::kEmptyString) {
    src_param_ = new ::std::string;
  }
  src_param_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SceneTransParam::mutable_src_param() {
  set_has_src_param();
  if (src_param_ == &::google::protobuf::internal::kEmptyString) {
    src_param_ = new ::std::string;
  }
  return src_param_;
}
inline ::std::string* SceneTransParam::release_src_param() {
  clear_has_src_param();
  if (src_param_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = src_param_;
    src_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SceneTransParam::set_allocated_src_param(::std::string* src_param) {
  if (src_param_ != &::google::protobuf::internal::kEmptyString) {
    delete src_param_;
  }
  if (src_param) {
    set_has_src_param();
    src_param_ = src_param;
  } else {
    clear_has_src_param();
    src_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 trans_type = 3;
inline bool SceneTransParam::has_trans_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneTransParam::set_has_trans_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneTransParam::clear_has_trans_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneTransParam::clear_trans_type() {
  trans_type_ = 0;
  clear_has_trans_type();
}
inline ::google::protobuf::int32 SceneTransParam::trans_type() const {
  return trans_type_;
}
inline void SceneTransParam::set_trans_type(::google::protobuf::int32 value) {
  set_has_trans_type();
  trans_type_ = value;
}

// optional int64 param1 = 4;
inline bool SceneTransParam::has_param1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneTransParam::set_has_param1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneTransParam::clear_has_param1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneTransParam::clear_param1() {
  param1_ = GOOGLE_LONGLONG(0);
  clear_has_param1();
}
inline ::google::protobuf::int64 SceneTransParam::param1() const {
  return param1_;
}
inline void SceneTransParam::set_param1(::google::protobuf::int64 value) {
  set_has_param1();
  param1_ = value;
}

// optional int64 param2 = 5;
inline bool SceneTransParam::has_param2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SceneTransParam::set_has_param2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SceneTransParam::clear_has_param2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SceneTransParam::clear_param2() {
  param2_ = GOOGLE_LONGLONG(0);
  clear_has_param2();
}
inline ::google::protobuf::int64 SceneTransParam::param2() const {
  return param2_;
}
inline void SceneTransParam::set_param2(::google::protobuf::int64 value) {
  set_has_param2();
  param2_ = value;
}

// optional int64 param3 = 6;
inline bool SceneTransParam::has_param3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SceneTransParam::set_has_param3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SceneTransParam::clear_has_param3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SceneTransParam::clear_param3() {
  param3_ = GOOGLE_LONGLONG(0);
  clear_has_param3();
}
inline ::google::protobuf::int64 SceneTransParam::param3() const {
  return param3_;
}
inline void SceneTransParam::set_param3(::google::protobuf::int64 value) {
  set_has_param3();
  param3_ = value;
}

// optional bytes str_param = 7;
inline bool SceneTransParam::has_str_param() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SceneTransParam::set_has_str_param() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SceneTransParam::clear_has_str_param() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SceneTransParam::clear_str_param() {
  if (str_param_ != &::google::protobuf::internal::kEmptyString) {
    str_param_->clear();
  }
  clear_has_str_param();
}
inline const ::std::string& SceneTransParam::str_param() const {
  return *str_param_;
}
inline void SceneTransParam::set_str_param(const ::std::string& value) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(value);
}
inline void SceneTransParam::set_str_param(const char* value) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(value);
}
inline void SceneTransParam::set_str_param(const void* value, size_t size) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SceneTransParam::mutable_str_param() {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  return str_param_;
}
inline ::std::string* SceneTransParam::release_str_param() {
  clear_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_param_;
    str_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SceneTransParam::set_allocated_str_param(::std::string* str_param) {
  if (str_param_ != &::google::protobuf::internal::kEmptyString) {
    delete str_param_;
  }
  if (str_param) {
    set_has_str_param();
    str_param_ = str_param;
  } else {
    clear_has_str_param();
    str_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool forceTP = 8;
inline bool SceneTransParam::has_forcetp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SceneTransParam::set_has_forcetp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SceneTransParam::clear_has_forcetp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SceneTransParam::clear_forcetp() {
  forcetp_ = false;
  clear_has_forcetp();
}
inline bool SceneTransParam::forcetp() const {
  return forcetp_;
}
inline void SceneTransParam::set_forcetp(bool value) {
  set_has_forcetp();
  forcetp_ = value;
}

// optional int32 ret = 9;
inline bool SceneTransParam::has_ret() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SceneTransParam::set_has_ret() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SceneTransParam::clear_has_ret() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SceneTransParam::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 SceneTransParam::ret() const {
  return ret_;
}
inline void SceneTransParam::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// FestHuiMengXiYouReward

// optional int32 id = 1;
inline bool FestHuiMengXiYouReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestHuiMengXiYouReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestHuiMengXiYouReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestHuiMengXiYouReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestHuiMengXiYouReward::id() const {
  return id_;
}
inline void FestHuiMengXiYouReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 status = 2;
inline bool FestHuiMengXiYouReward::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestHuiMengXiYouReward::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestHuiMengXiYouReward::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestHuiMengXiYouReward::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 FestHuiMengXiYouReward::status() const {
  return status_;
}
inline void FestHuiMengXiYouReward::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FestHuiMengXiYouGame

// optional int32 id = 1;
inline bool FestHuiMengXiYouGame::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestHuiMengXiYouGame::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestHuiMengXiYouGame::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestHuiMengXiYouGame::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FestHuiMengXiYouGame::id() const {
  return id_;
}
inline void FestHuiMengXiYouGame::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 cur_points = 2;
inline bool FestHuiMengXiYouGame::has_cur_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestHuiMengXiYouGame::set_has_cur_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestHuiMengXiYouGame::clear_has_cur_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestHuiMengXiYouGame::clear_cur_points() {
  cur_points_ = 0;
  clear_has_cur_points();
}
inline ::google::protobuf::int32 FestHuiMengXiYouGame::cur_points() const {
  return cur_points_;
}
inline void FestHuiMengXiYouGame::set_cur_points(::google::protobuf::int32 value) {
  set_has_cur_points();
  cur_points_ = value;
}

// optional bool finish = 3;
inline bool FestHuiMengXiYouGame::has_finish() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestHuiMengXiYouGame::set_has_finish() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestHuiMengXiYouGame::clear_has_finish() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestHuiMengXiYouGame::clear_finish() {
  finish_ = false;
  clear_has_finish();
}
inline bool FestHuiMengXiYouGame::finish() const {
  return finish_;
}
inline void FestHuiMengXiYouGame::set_finish(bool value) {
  set_has_finish();
  finish_ = value;
}

// optional int32 cur_prestige = 4;
inline bool FestHuiMengXiYouGame::has_cur_prestige() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestHuiMengXiYouGame::set_has_cur_prestige() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestHuiMengXiYouGame::clear_has_cur_prestige() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestHuiMengXiYouGame::clear_cur_prestige() {
  cur_prestige_ = 0;
  clear_has_cur_prestige();
}
inline ::google::protobuf::int32 FestHuiMengXiYouGame::cur_prestige() const {
  return cur_prestige_;
}
inline void FestHuiMengXiYouGame::set_cur_prestige(::google::protobuf::int32 value) {
  set_has_cur_prestige();
  cur_prestige_ = value;
}

// -------------------------------------------------------------------

// FestHuiMengXiYouData

// repeated .proto_ff.FestHuiMengXiYouReward reward = 1;
inline int FestHuiMengXiYouData::reward_size() const {
  return reward_.size();
}
inline void FestHuiMengXiYouData::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::FestHuiMengXiYouReward& FestHuiMengXiYouData::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::FestHuiMengXiYouReward* FestHuiMengXiYouData::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::FestHuiMengXiYouReward* FestHuiMengXiYouData::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestHuiMengXiYouReward >&
FestHuiMengXiYouData::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestHuiMengXiYouReward >*
FestHuiMengXiYouData::mutable_reward() {
  return &reward_;
}

// optional int32 cur_points = 2;
inline bool FestHuiMengXiYouData::has_cur_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestHuiMengXiYouData::set_has_cur_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestHuiMengXiYouData::clear_has_cur_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestHuiMengXiYouData::clear_cur_points() {
  cur_points_ = 0;
  clear_has_cur_points();
}
inline ::google::protobuf::int32 FestHuiMengXiYouData::cur_points() const {
  return cur_points_;
}
inline void FestHuiMengXiYouData::set_cur_points(::google::protobuf::int32 value) {
  set_has_cur_points();
  cur_points_ = value;
}

// repeated .proto_ff.FestHuiMengXiYouGame game = 3;
inline int FestHuiMengXiYouData::game_size() const {
  return game_.size();
}
inline void FestHuiMengXiYouData::clear_game() {
  game_.Clear();
}
inline const ::proto_ff::FestHuiMengXiYouGame& FestHuiMengXiYouData::game(int index) const {
  return game_.Get(index);
}
inline ::proto_ff::FestHuiMengXiYouGame* FestHuiMengXiYouData::mutable_game(int index) {
  return game_.Mutable(index);
}
inline ::proto_ff::FestHuiMengXiYouGame* FestHuiMengXiYouData::add_game() {
  return game_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestHuiMengXiYouGame >&
FestHuiMengXiYouData::game() const {
  return game_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestHuiMengXiYouGame >*
FestHuiMengXiYouData::mutable_game() {
  return &game_;
}

// optional int32 prestige = 4;
inline bool FestHuiMengXiYouData::has_prestige() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestHuiMengXiYouData::set_has_prestige() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestHuiMengXiYouData::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestHuiMengXiYouData::clear_prestige() {
  prestige_ = 0;
  clear_has_prestige();
}
inline ::google::protobuf::int32 FestHuiMengXiYouData::prestige() const {
  return prestige_;
}
inline void FestHuiMengXiYouData::set_prestige(::google::protobuf::int32 value) {
  set_has_prestige();
  prestige_ = value;
}

// optional uint64 flush_time = 5;
inline bool FestHuiMengXiYouData::has_flush_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FestHuiMengXiYouData::set_has_flush_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FestHuiMengXiYouData::clear_has_flush_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FestHuiMengXiYouData::clear_flush_time() {
  flush_time_ = GOOGLE_ULONGLONG(0);
  clear_has_flush_time();
}
inline ::google::protobuf::uint64 FestHuiMengXiYouData::flush_time() const {
  return flush_time_;
}
inline void FestHuiMengXiYouData::set_flush_time(::google::protobuf::uint64 value) {
  set_has_flush_time();
  flush_time_ = value;
}

// optional int32 cur_game_id = 6;
inline bool FestHuiMengXiYouData::has_cur_game_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FestHuiMengXiYouData::set_has_cur_game_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FestHuiMengXiYouData::clear_has_cur_game_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FestHuiMengXiYouData::clear_cur_game_id() {
  cur_game_id_ = 0;
  clear_has_cur_game_id();
}
inline ::google::protobuf::int32 FestHuiMengXiYouData::cur_game_id() const {
  return cur_game_id_;
}
inline void FestHuiMengXiYouData::set_cur_game_id(::google::protobuf::int32 value) {
  set_has_cur_game_id();
  cur_game_id_ = value;
}

// -------------------------------------------------------------------

// GHostDupRankInfo

// optional int32 rank = 1;
inline bool GHostDupRankInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GHostDupRankInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GHostDupRankInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GHostDupRankInfo::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 GHostDupRankInfo::rank() const {
  return rank_;
}
inline void GHostDupRankInfo::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional bytes name = 2;
inline bool GHostDupRankInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GHostDupRankInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GHostDupRankInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GHostDupRankInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GHostDupRankInfo::name() const {
  return *name_;
}
inline void GHostDupRankInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GHostDupRankInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GHostDupRankInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GHostDupRankInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GHostDupRankInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GHostDupRankInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 cid = 3;
inline bool GHostDupRankInfo::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GHostDupRankInfo::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GHostDupRankInfo::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GHostDupRankInfo::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 GHostDupRankInfo::cid() const {
  return cid_;
}
inline void GHostDupRankInfo::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 wave = 4;
inline bool GHostDupRankInfo::has_wave() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GHostDupRankInfo::set_has_wave() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GHostDupRankInfo::clear_has_wave() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GHostDupRankInfo::clear_wave() {
  wave_ = 0;
  clear_has_wave();
}
inline ::google::protobuf::int32 GHostDupRankInfo::wave() const {
  return wave_;
}
inline void GHostDupRankInfo::set_wave(::google::protobuf::int32 value) {
  set_has_wave();
  wave_ = value;
}

// optional int32 time = 5;
inline bool GHostDupRankInfo::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GHostDupRankInfo::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GHostDupRankInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GHostDupRankInfo::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 GHostDupRankInfo::time() const {
  return time_;
}
inline void GHostDupRankInfo::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional uint64 update_time = 6;
inline bool GHostDupRankInfo::has_update_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GHostDupRankInfo::set_has_update_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GHostDupRankInfo::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GHostDupRankInfo::clear_update_time() {
  update_time_ = GOOGLE_ULONGLONG(0);
  clear_has_update_time();
}
inline ::google::protobuf::uint64 GHostDupRankInfo::update_time() const {
  return update_time_;
}
inline void GHostDupRankInfo::set_update_time(::google::protobuf::uint64 value) {
  set_has_update_time();
  update_time_ = value;
}

// -------------------------------------------------------------------

// StarFantasyData

// optional uint32 id = 1;
inline bool StarFantasyData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StarFantasyData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StarFantasyData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StarFantasyData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StarFantasyData::id() const {
  return id_;
}
inline void StarFantasyData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool StarFantasyData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StarFantasyData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StarFantasyData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StarFantasyData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 StarFantasyData::status() const {
  return status_;
}
inline void StarFantasyData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 level = 3;
inline bool StarFantasyData::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StarFantasyData::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StarFantasyData::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StarFantasyData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 StarFantasyData::level() const {
  return level_;
}
inline void StarFantasyData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 advance_level = 4;
inline bool StarFantasyData::has_advance_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StarFantasyData::set_has_advance_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StarFantasyData::clear_has_advance_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StarFantasyData::clear_advance_level() {
  advance_level_ = 0u;
  clear_has_advance_level();
}
inline ::google::protobuf::uint32 StarFantasyData::advance_level() const {
  return advance_level_;
}
inline void StarFantasyData::set_advance_level(::google::protobuf::uint32 value) {
  set_has_advance_level();
  advance_level_ = value;
}

// -------------------------------------------------------------------

// StarSetupHoleData

// optional .proto_ff.EquipInfo equip_info = 1;
inline bool StarSetupHoleData::has_equip_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StarSetupHoleData::set_has_equip_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StarSetupHoleData::clear_has_equip_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StarSetupHoleData::clear_equip_info() {
  if (equip_info_ != NULL) equip_info_->::proto_ff::EquipInfo::Clear();
  clear_has_equip_info();
}
inline const ::proto_ff::EquipInfo& StarSetupHoleData::equip_info() const {
  return equip_info_ != NULL ? *equip_info_ : *default_instance_->equip_info_;
}
inline ::proto_ff::EquipInfo* StarSetupHoleData::mutable_equip_info() {
  set_has_equip_info();
  if (equip_info_ == NULL) equip_info_ = new ::proto_ff::EquipInfo;
  return equip_info_;
}
inline ::proto_ff::EquipInfo* StarSetupHoleData::release_equip_info() {
  clear_has_equip_info();
  ::proto_ff::EquipInfo* temp = equip_info_;
  equip_info_ = NULL;
  return temp;
}
inline void StarSetupHoleData::set_allocated_equip_info(::proto_ff::EquipInfo* equip_info) {
  delete equip_info_;
  equip_info_ = equip_info;
  if (equip_info) {
    set_has_equip_info();
  } else {
    clear_has_equip_info();
  }
}

// optional uint32 id = 2;
inline bool StarSetupHoleData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StarSetupHoleData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StarSetupHoleData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StarSetupHoleData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StarSetupHoleData::id() const {
  return id_;
}
inline void StarSetupHoleData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 score = 3;
inline bool StarSetupHoleData::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StarSetupHoleData::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StarSetupHoleData::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StarSetupHoleData::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 StarSetupHoleData::score() const {
  return score_;
}
inline void StarSetupHoleData::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// StarSetupStarAttrData

// optional uint32 id = 1;
inline bool StarSetupStarAttrData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StarSetupStarAttrData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StarSetupStarAttrData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StarSetupStarAttrData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StarSetupStarAttrData::id() const {
  return id_;
}
inline void StarSetupStarAttrData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool StarSetupStarAttrData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StarSetupStarAttrData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StarSetupStarAttrData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StarSetupStarAttrData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 StarSetupStarAttrData::status() const {
  return status_;
}
inline void StarSetupStarAttrData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// StarSetupData

// optional uint32 id = 1;
inline bool StarSetupData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StarSetupData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StarSetupData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StarSetupData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StarSetupData::id() const {
  return id_;
}
inline void StarSetupData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool StarSetupData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StarSetupData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StarSetupData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StarSetupData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 StarSetupData::status() const {
  return status_;
}
inline void StarSetupData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint64 unlock_time = 3;
inline bool StarSetupData::has_unlock_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StarSetupData::set_has_unlock_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StarSetupData::clear_has_unlock_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StarSetupData::clear_unlock_time() {
  unlock_time_ = GOOGLE_ULONGLONG(0);
  clear_has_unlock_time();
}
inline ::google::protobuf::uint64 StarSetupData::unlock_time() const {
  return unlock_time_;
}
inline void StarSetupData::set_unlock_time(::google::protobuf::uint64 value) {
  set_has_unlock_time();
  unlock_time_ = value;
}

// repeated .proto_ff.StarSetupHoleData hole_data = 5;
inline int StarSetupData::hole_data_size() const {
  return hole_data_.size();
}
inline void StarSetupData::clear_hole_data() {
  hole_data_.Clear();
}
inline const ::proto_ff::StarSetupHoleData& StarSetupData::hole_data(int index) const {
  return hole_data_.Get(index);
}
inline ::proto_ff::StarSetupHoleData* StarSetupData::mutable_hole_data(int index) {
  return hole_data_.Mutable(index);
}
inline ::proto_ff::StarSetupHoleData* StarSetupData::add_hole_data() {
  return hole_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupHoleData >&
StarSetupData::hole_data() const {
  return hole_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupHoleData >*
StarSetupData::mutable_hole_data() {
  return &hole_data_;
}

// optional uint32 guizhen_id = 6;
inline bool StarSetupData::has_guizhen_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StarSetupData::set_has_guizhen_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StarSetupData::clear_has_guizhen_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StarSetupData::clear_guizhen_id() {
  guizhen_id_ = 0u;
  clear_has_guizhen_id();
}
inline ::google::protobuf::uint32 StarSetupData::guizhen_id() const {
  return guizhen_id_;
}
inline void StarSetupData::set_guizhen_id(::google::protobuf::uint32 value) {
  set_has_guizhen_id();
  guizhen_id_ = value;
}

// optional uint32 guizhen_status = 7;
inline bool StarSetupData::has_guizhen_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StarSetupData::set_has_guizhen_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StarSetupData::clear_has_guizhen_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StarSetupData::clear_guizhen_status() {
  guizhen_status_ = 0u;
  clear_has_guizhen_status();
}
inline ::google::protobuf::uint32 StarSetupData::guizhen_status() const {
  return guizhen_status_;
}
inline void StarSetupData::set_guizhen_status(::google::protobuf::uint32 value) {
  set_has_guizhen_status();
  guizhen_status_ = value;
}

// optional uint32 star_num = 8;
inline bool StarSetupData::has_star_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StarSetupData::set_has_star_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StarSetupData::clear_has_star_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StarSetupData::clear_star_num() {
  star_num_ = 0u;
  clear_has_star_num();
}
inline ::google::protobuf::uint32 StarSetupData::star_num() const {
  return star_num_;
}
inline void StarSetupData::set_star_num(::google::protobuf::uint32 value) {
  set_has_star_num();
  star_num_ = value;
}

// repeated .proto_ff.StarSetupStarAttrData star_attr = 9;
inline int StarSetupData::star_attr_size() const {
  return star_attr_.size();
}
inline void StarSetupData::clear_star_attr() {
  star_attr_.Clear();
}
inline const ::proto_ff::StarSetupStarAttrData& StarSetupData::star_attr(int index) const {
  return star_attr_.Get(index);
}
inline ::proto_ff::StarSetupStarAttrData* StarSetupData::mutable_star_attr(int index) {
  return star_attr_.Mutable(index);
}
inline ::proto_ff::StarSetupStarAttrData* StarSetupData::add_star_attr() {
  return star_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupStarAttrData >&
StarSetupData::star_attr() const {
  return star_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupStarAttrData >*
StarSetupData::mutable_star_attr() {
  return &star_attr_;
}

// -------------------------------------------------------------------

// StarSkillData

// optional uint32 id = 1;
inline bool StarSkillData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StarSkillData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StarSkillData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StarSkillData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StarSkillData::id() const {
  return id_;
}
inline void StarSkillData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 level = 3;
inline bool StarSkillData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StarSkillData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StarSkillData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StarSkillData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 StarSkillData::level() const {
  return level_;
}
inline void StarSkillData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional bool finish = 4;
inline bool StarSkillData::has_finish() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StarSkillData::set_has_finish() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StarSkillData::clear_has_finish() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StarSkillData::clear_finish() {
  finish_ = false;
  clear_has_finish();
}
inline bool StarSkillData::finish() const {
  return finish_;
}
inline void StarSkillData::set_finish(bool value) {
  set_has_finish();
  finish_ = value;
}

// -------------------------------------------------------------------

// StarSkillSlotData

// optional uint32 slot_id = 1;
inline bool StarSkillSlotData::has_slot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StarSkillSlotData::set_has_slot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StarSkillSlotData::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StarSkillSlotData::clear_slot_id() {
  slot_id_ = 0u;
  clear_has_slot_id();
}
inline ::google::protobuf::uint32 StarSkillSlotData::slot_id() const {
  return slot_id_;
}
inline void StarSkillSlotData::set_slot_id(::google::protobuf::uint32 value) {
  set_has_slot_id();
  slot_id_ = value;
}

// optional uint32 status = 2;
inline bool StarSkillSlotData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StarSkillSlotData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StarSkillSlotData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StarSkillSlotData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 StarSkillSlotData::status() const {
  return status_;
}
inline void StarSkillSlotData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 cur_id = 3;
inline bool StarSkillSlotData::has_cur_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StarSkillSlotData::set_has_cur_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StarSkillSlotData::clear_has_cur_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StarSkillSlotData::clear_cur_id() {
  cur_id_ = 0u;
  clear_has_cur_id();
}
inline ::google::protobuf::uint32 StarSkillSlotData::cur_id() const {
  return cur_id_;
}
inline void StarSkillSlotData::set_cur_id(::google::protobuf::uint32 value) {
  set_has_cur_id();
  cur_id_ = value;
}

// optional uint32 cur_end_time = 4;
inline bool StarSkillSlotData::has_cur_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StarSkillSlotData::set_has_cur_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StarSkillSlotData::clear_has_cur_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StarSkillSlotData::clear_cur_end_time() {
  cur_end_time_ = 0u;
  clear_has_cur_end_time();
}
inline ::google::protobuf::uint32 StarSkillSlotData::cur_end_time() const {
  return cur_end_time_;
}
inline void StarSkillSlotData::set_cur_end_time(::google::protobuf::uint32 value) {
  set_has_cur_end_time();
  cur_end_time_ = value;
}

// -------------------------------------------------------------------

// StarShopData

// optional uint32 id = 1;
inline bool StarShopData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StarShopData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StarShopData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StarShopData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StarShopData::id() const {
  return id_;
}
inline void StarShopData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 buy_num = 2;
inline bool StarShopData::has_buy_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StarShopData::set_has_buy_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StarShopData::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StarShopData::clear_buy_num() {
  buy_num_ = 0u;
  clear_has_buy_num();
}
inline ::google::protobuf::uint32 StarShopData::buy_num() const {
  return buy_num_;
}
inline void StarShopData::set_buy_num(::google::protobuf::uint32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// -------------------------------------------------------------------

// StarData

// repeated .proto_ff.StarSetupData setup_data = 1;
inline int StarData::setup_data_size() const {
  return setup_data_.size();
}
inline void StarData::clear_setup_data() {
  setup_data_.Clear();
}
inline const ::proto_ff::StarSetupData& StarData::setup_data(int index) const {
  return setup_data_.Get(index);
}
inline ::proto_ff::StarSetupData* StarData::mutable_setup_data(int index) {
  return setup_data_.Mutable(index);
}
inline ::proto_ff::StarSetupData* StarData::add_setup_data() {
  return setup_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupData >&
StarData::setup_data() const {
  return setup_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSetupData >*
StarData::mutable_setup_data() {
  return &setup_data_;
}

// repeated .proto_ff.StarFantasyData fantasy_data = 2;
inline int StarData::fantasy_data_size() const {
  return fantasy_data_.size();
}
inline void StarData::clear_fantasy_data() {
  fantasy_data_.Clear();
}
inline const ::proto_ff::StarFantasyData& StarData::fantasy_data(int index) const {
  return fantasy_data_.Get(index);
}
inline ::proto_ff::StarFantasyData* StarData::mutable_fantasy_data(int index) {
  return fantasy_data_.Mutable(index);
}
inline ::proto_ff::StarFantasyData* StarData::add_fantasy_data() {
  return fantasy_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarFantasyData >&
StarData::fantasy_data() const {
  return fantasy_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarFantasyData >*
StarData::mutable_fantasy_data() {
  return &fantasy_data_;
}

// optional uint32 cur_fantasy_id = 3;
inline bool StarData::has_cur_fantasy_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StarData::set_has_cur_fantasy_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StarData::clear_has_cur_fantasy_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StarData::clear_cur_fantasy_id() {
  cur_fantasy_id_ = 0u;
  clear_has_cur_fantasy_id();
}
inline ::google::protobuf::uint32 StarData::cur_fantasy_id() const {
  return cur_fantasy_id_;
}
inline void StarData::set_cur_fantasy_id(::google::protobuf::uint32 value) {
  set_has_cur_fantasy_id();
  cur_fantasy_id_ = value;
}

// repeated .proto_ff.StarSkillData skill_data = 4;
inline int StarData::skill_data_size() const {
  return skill_data_.size();
}
inline void StarData::clear_skill_data() {
  skill_data_.Clear();
}
inline const ::proto_ff::StarSkillData& StarData::skill_data(int index) const {
  return skill_data_.Get(index);
}
inline ::proto_ff::StarSkillData* StarData::mutable_skill_data(int index) {
  return skill_data_.Mutable(index);
}
inline ::proto_ff::StarSkillData* StarData::add_skill_data() {
  return skill_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSkillData >&
StarData::skill_data() const {
  return skill_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSkillData >*
StarData::mutable_skill_data() {
  return &skill_data_;
}

// repeated .proto_ff.StarSkillSlotData skill_slot_data = 5;
inline int StarData::skill_slot_data_size() const {
  return skill_slot_data_.size();
}
inline void StarData::clear_skill_slot_data() {
  skill_slot_data_.Clear();
}
inline const ::proto_ff::StarSkillSlotData& StarData::skill_slot_data(int index) const {
  return skill_slot_data_.Get(index);
}
inline ::proto_ff::StarSkillSlotData* StarData::mutable_skill_slot_data(int index) {
  return skill_slot_data_.Mutable(index);
}
inline ::proto_ff::StarSkillSlotData* StarData::add_skill_slot_data() {
  return skill_slot_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSkillSlotData >&
StarData::skill_slot_data() const {
  return skill_slot_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarSkillSlotData >*
StarData::mutable_skill_slot_data() {
  return &skill_slot_data_;
}

// repeated .proto_ff.StarShopData shop_data = 6;
inline int StarData::shop_data_size() const {
  return shop_data_.size();
}
inline void StarData::clear_shop_data() {
  shop_data_.Clear();
}
inline const ::proto_ff::StarShopData& StarData::shop_data(int index) const {
  return shop_data_.Get(index);
}
inline ::proto_ff::StarShopData* StarData::mutable_shop_data(int index) {
  return shop_data_.Mutable(index);
}
inline ::proto_ff::StarShopData* StarData::add_shop_data() {
  return shop_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StarShopData >&
StarData::shop_data() const {
  return shop_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StarShopData >*
StarData::mutable_shop_data() {
  return &shop_data_;
}

// optional uint64 last_shop_refresh_time = 7;
inline bool StarData::has_last_shop_refresh_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StarData::set_has_last_shop_refresh_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StarData::clear_has_last_shop_refresh_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StarData::clear_last_shop_refresh_time() {
  last_shop_refresh_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_shop_refresh_time();
}
inline ::google::protobuf::uint64 StarData::last_shop_refresh_time() const {
  return last_shop_refresh_time_;
}
inline void StarData::set_last_shop_refresh_time(::google::protobuf::uint64 value) {
  set_has_last_shop_refresh_time();
  last_shop_refresh_time_ = value;
}

// -------------------------------------------------------------------

// TurnSlot

// optional int32 stronglv = 1;
inline bool TurnSlot::has_stronglv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnSlot::set_has_stronglv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnSlot::clear_has_stronglv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnSlot::clear_stronglv() {
  stronglv_ = 0;
  clear_has_stronglv();
}
inline ::google::protobuf::int32 TurnSlot::stronglv() const {
  return stronglv_;
}
inline void TurnSlot::set_stronglv(::google::protobuf::int32 value) {
  set_has_stronglv();
  stronglv_ = value;
}

// -------------------------------------------------------------------

// TurnGrow

// optional int32 pos = 1;
inline bool TurnGrow::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnGrow::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnGrow::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnGrow::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnGrow::pos() const {
  return pos_;
}
inline void TurnGrow::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// optional .proto_ff.ItemProtoInfo equip = 2;
inline bool TurnGrow::has_equip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnGrow::set_has_equip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnGrow::clear_has_equip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnGrow::clear_equip() {
  if (equip_ != NULL) equip_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_equip();
}
inline const ::proto_ff::ItemProtoInfo& TurnGrow::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::proto_ff::ItemProtoInfo* TurnGrow::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::proto_ff::ItemProtoInfo;
  return equip_;
}
inline ::proto_ff::ItemProtoInfo* TurnGrow::release_equip() {
  clear_has_equip();
  ::proto_ff::ItemProtoInfo* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void TurnGrow::set_allocated_equip(::proto_ff::ItemProtoInfo* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
}

// optional .proto_ff.TurnSlot slot = 3;
inline bool TurnGrow::has_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurnGrow::set_has_slot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurnGrow::clear_has_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurnGrow::clear_slot() {
  if (slot_ != NULL) slot_->::proto_ff::TurnSlot::Clear();
  clear_has_slot();
}
inline const ::proto_ff::TurnSlot& TurnGrow::slot() const {
  return slot_ != NULL ? *slot_ : *default_instance_->slot_;
}
inline ::proto_ff::TurnSlot* TurnGrow::mutable_slot() {
  set_has_slot();
  if (slot_ == NULL) slot_ = new ::proto_ff::TurnSlot;
  return slot_;
}
inline ::proto_ff::TurnSlot* TurnGrow::release_slot() {
  clear_has_slot();
  ::proto_ff::TurnSlot* temp = slot_;
  slot_ = NULL;
  return temp;
}
inline void TurnGrow::set_allocated_slot(::proto_ff::TurnSlot* slot) {
  delete slot_;
  slot_ = slot;
  if (slot) {
    set_has_slot();
  } else {
    clear_has_slot();
  }
}

// -------------------------------------------------------------------

// TurnEntry

// optional int32 lv = 1;
inline bool TurnEntry::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnEntry::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnEntry::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnEntry::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnEntry::lv() const {
  return lv_;
}
inline void TurnEntry::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// repeated .proto_ff.TurnGrow infos = 2;
inline int TurnEntry::infos_size() const {
  return infos_.size();
}
inline void TurnEntry::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::TurnGrow& TurnEntry::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::TurnGrow* TurnEntry::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::TurnGrow* TurnEntry::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnGrow >&
TurnEntry::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnGrow >*
TurnEntry::mutable_infos() {
  return &infos_;
}

// repeated int32 strong_ids = 3;
inline int TurnEntry::strong_ids_size() const {
  return strong_ids_.size();
}
inline void TurnEntry::clear_strong_ids() {
  strong_ids_.Clear();
}
inline ::google::protobuf::int32 TurnEntry::strong_ids(int index) const {
  return strong_ids_.Get(index);
}
inline void TurnEntry::set_strong_ids(int index, ::google::protobuf::int32 value) {
  strong_ids_.Set(index, value);
}
inline void TurnEntry::add_strong_ids(::google::protobuf::int32 value) {
  strong_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TurnEntry::strong_ids() const {
  return strong_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TurnEntry::mutable_strong_ids() {
  return &strong_ids_;
}

// -------------------------------------------------------------------

// TurnSimple

// optional int32 turn_lv = 1;
inline bool TurnSimple::has_turn_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnSimple::set_has_turn_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnSimple::clear_has_turn_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnSimple::clear_turn_lv() {
  turn_lv_ = 0;
  clear_has_turn_lv();
}
inline ::google::protobuf::int32 TurnSimple::turn_lv() const {
  return turn_lv_;
}
inline void TurnSimple::set_turn_lv(::google::protobuf::int32 value) {
  set_has_turn_lv();
  turn_lv_ = value;
}

// optional int32 cur_lv = 2;
inline bool TurnSimple::has_cur_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnSimple::set_has_cur_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnSimple::clear_has_cur_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnSimple::clear_cur_lv() {
  cur_lv_ = 0;
  clear_has_cur_lv();
}
inline ::google::protobuf::int32 TurnSimple::cur_lv() const {
  return cur_lv_;
}
inline void TurnSimple::set_cur_lv(::google::protobuf::int32 value) {
  set_has_cur_lv();
  cur_lv_ = value;
}

// optional uint64 cur_exp = 3;
inline bool TurnSimple::has_cur_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurnSimple::set_has_cur_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurnSimple::clear_has_cur_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurnSimple::clear_cur_exp() {
  cur_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_exp();
}
inline ::google::protobuf::uint64 TurnSimple::cur_exp() const {
  return cur_exp_;
}
inline void TurnSimple::set_cur_exp(::google::protobuf::uint64 value) {
  set_has_cur_exp();
  cur_exp_ = value;
}

// optional int32 failed_add = 4;
inline bool TurnSimple::has_failed_add() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TurnSimple::set_has_failed_add() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TurnSimple::clear_has_failed_add() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TurnSimple::clear_failed_add() {
  failed_add_ = 0;
  clear_has_failed_add();
}
inline ::google::protobuf::int32 TurnSimple::failed_add() const {
  return failed_add_;
}
inline void TurnSimple::set_failed_add(::google::protobuf::int32 value) {
  set_has_failed_add();
  failed_add_ = value;
}

// optional int32 day_turn_num = 5;
inline bool TurnSimple::has_day_turn_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TurnSimple::set_has_day_turn_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TurnSimple::clear_has_day_turn_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TurnSimple::clear_day_turn_num() {
  day_turn_num_ = 0;
  clear_has_day_turn_num();
}
inline ::google::protobuf::int32 TurnSimple::day_turn_num() const {
  return day_turn_num_;
}
inline void TurnSimple::set_day_turn_num(::google::protobuf::int32 value) {
  set_has_day_turn_num();
  day_turn_num_ = value;
}

// optional int32 active_all_star_id = 6;
inline bool TurnSimple::has_active_all_star_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TurnSimple::set_has_active_all_star_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TurnSimple::clear_has_active_all_star_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TurnSimple::clear_active_all_star_id() {
  active_all_star_id_ = 0;
  clear_has_active_all_star_id();
}
inline ::google::protobuf::int32 TurnSimple::active_all_star_id() const {
  return active_all_star_id_;
}
inline void TurnSimple::set_active_all_star_id(::google::protobuf::int32 value) {
  set_has_active_all_star_id();
  active_all_star_id_ = value;
}

// -------------------------------------------------------------------

// TurnHelper

// optional uint64 cid = 1;
inline bool TurnHelper::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnHelper::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnHelper::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnHelper::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 TurnHelper::cid() const {
  return cid_;
}
inline void TurnHelper::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool TurnHelper::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnHelper::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnHelper::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnHelper::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TurnHelper::name() const {
  return *name_;
}
inline void TurnHelper::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TurnHelper::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TurnHelper::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TurnHelper::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* TurnHelper::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TurnHelper::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 time = 3;
inline bool TurnHelper::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurnHelper::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurnHelper::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurnHelper::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 TurnHelper::time() const {
  return time_;
}
inline void TurnHelper::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// TurnTask

// optional int32 id = 1;
inline bool TurnTask::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnTask::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnTask::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnTask::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TurnTask::id() const {
  return id_;
}
inline void TurnTask::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 state = 2;
inline bool TurnTask::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnTask::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnTask::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnTask::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 TurnTask::state() const {
  return state_;
}
inline void TurnTask::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// FMarryTask

// optional int32 id = 1;
inline bool FMarryTask::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FMarryTask::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FMarryTask::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FMarryTask::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FMarryTask::id() const {
  return id_;
}
inline void FMarryTask::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 val = 2;
inline bool FMarryTask::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FMarryTask::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FMarryTask::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FMarryTask::clear_val() {
  val_ = 0;
  clear_has_val();
}
inline ::google::protobuf::int32 FMarryTask::val() const {
  return val_;
}
inline void FMarryTask::set_val(::google::protobuf::int32 value) {
  set_has_val();
  val_ = value;
}

// optional int32 state = 3;
inline bool FMarryTask::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FMarryTask::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FMarryTask::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FMarryTask::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 FMarryTask::state() const {
  return state_;
}
inline void FMarryTask::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// SoulEntry

// optional int32 id = 1;
inline bool SoulEntry::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulEntry::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulEntry::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulEntry::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SoulEntry::id() const {
  return id_;
}
inline void SoulEntry::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 lv = 2;
inline bool SoulEntry::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoulEntry::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoulEntry::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoulEntry::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 SoulEntry::lv() const {
  return lv_;
}
inline void SoulEntry::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 steplv = 3;
inline bool SoulEntry::has_steplv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoulEntry::set_has_steplv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoulEntry::clear_has_steplv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoulEntry::clear_steplv() {
  steplv_ = 0;
  clear_has_steplv();
}
inline ::google::protobuf::int32 SoulEntry::steplv() const {
  return steplv_;
}
inline void SoulEntry::set_steplv(::google::protobuf::int32 value) {
  set_has_steplv();
  steplv_ = value;
}

// optional int32 auto_skill = 4;
inline bool SoulEntry::has_auto_skill() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoulEntry::set_has_auto_skill() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoulEntry::clear_has_auto_skill() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoulEntry::clear_auto_skill() {
  auto_skill_ = 0;
  clear_has_auto_skill();
}
inline ::google::protobuf::int32 SoulEntry::auto_skill() const {
  return auto_skill_;
}
inline void SoulEntry::set_auto_skill(::google::protobuf::int32 value) {
  set_has_auto_skill();
  auto_skill_ = value;
}

// optional int32 quality_prot = 5;
inline bool SoulEntry::has_quality_prot() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SoulEntry::set_has_quality_prot() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SoulEntry::clear_has_quality_prot() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SoulEntry::clear_quality_prot() {
  quality_prot_ = 0;
  clear_has_quality_prot();
}
inline ::google::protobuf::int32 SoulEntry::quality_prot() const {
  return quality_prot_;
}
inline void SoulEntry::set_quality_prot(::google::protobuf::int32 value) {
  set_has_quality_prot();
  quality_prot_ = value;
}

// -------------------------------------------------------------------

// SoulSpirit

// optional int32 slot_pos = 1;
inline bool SoulSpirit::has_slot_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulSpirit::set_has_slot_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulSpirit::clear_has_slot_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulSpirit::clear_slot_pos() {
  slot_pos_ = 0;
  clear_has_slot_pos();
}
inline ::google::protobuf::int32 SoulSpirit::slot_pos() const {
  return slot_pos_;
}
inline void SoulSpirit::set_slot_pos(::google::protobuf::int32 value) {
  set_has_slot_pos();
  slot_pos_ = value;
}

// optional int32 bag_pos = 2;
inline bool SoulSpirit::has_bag_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoulSpirit::set_has_bag_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoulSpirit::clear_has_bag_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoulSpirit::clear_bag_pos() {
  bag_pos_ = 0;
  clear_has_bag_pos();
}
inline ::google::protobuf::int32 SoulSpirit::bag_pos() const {
  return bag_pos_;
}
inline void SoulSpirit::set_bag_pos(::google::protobuf::int32 value) {
  set_has_bag_pos();
  bag_pos_ = value;
}

// optional int32 strong_lv = 3;
inline bool SoulSpirit::has_strong_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoulSpirit::set_has_strong_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoulSpirit::clear_has_strong_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoulSpirit::clear_strong_lv() {
  strong_lv_ = 0;
  clear_has_strong_lv();
}
inline ::google::protobuf::int32 SoulSpirit::strong_lv() const {
  return strong_lv_;
}
inline void SoulSpirit::set_strong_lv(::google::protobuf::int32 value) {
  set_has_strong_lv();
  strong_lv_ = value;
}

// optional int32 break_lv = 4;
inline bool SoulSpirit::has_break_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoulSpirit::set_has_break_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoulSpirit::clear_has_break_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoulSpirit::clear_break_lv() {
  break_lv_ = 0;
  clear_has_break_lv();
}
inline ::google::protobuf::int32 SoulSpirit::break_lv() const {
  return break_lv_;
}
inline void SoulSpirit::set_break_lv(::google::protobuf::int32 value) {
  set_has_break_lv();
  break_lv_ = value;
}

// -------------------------------------------------------------------

// SoulBone

// optional int32 slot_pos = 1;
inline bool SoulBone::has_slot_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulBone::set_has_slot_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulBone::clear_has_slot_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulBone::clear_slot_pos() {
  slot_pos_ = 0;
  clear_has_slot_pos();
}
inline ::google::protobuf::int32 SoulBone::slot_pos() const {
  return slot_pos_;
}
inline void SoulBone::set_slot_pos(::google::protobuf::int32 value) {
  set_has_slot_pos();
  slot_pos_ = value;
}

// optional int32 bag_pos = 2;
inline bool SoulBone::has_bag_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoulBone::set_has_bag_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoulBone::clear_has_bag_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoulBone::clear_bag_pos() {
  bag_pos_ = 0;
  clear_has_bag_pos();
}
inline ::google::protobuf::int32 SoulBone::bag_pos() const {
  return bag_pos_;
}
inline void SoulBone::set_bag_pos(::google::protobuf::int32 value) {
  set_has_bag_pos();
  bag_pos_ = value;
}

// optional int32 is_wake = 3;
inline bool SoulBone::has_is_wake() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoulBone::set_has_is_wake() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoulBone::clear_has_is_wake() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoulBone::clear_is_wake() {
  is_wake_ = 0;
  clear_has_is_wake();
}
inline ::google::protobuf::int32 SoulBone::is_wake() const {
  return is_wake_;
}
inline void SoulBone::set_is_wake(::google::protobuf::int32 value) {
  set_has_is_wake();
  is_wake_ = value;
}

// optional int32 progress = 4;
inline bool SoulBone::has_progress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoulBone::set_has_progress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoulBone::clear_has_progress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoulBone::clear_progress() {
  progress_ = 0;
  clear_has_progress();
}
inline ::google::protobuf::int32 SoulBone::progress() const {
  return progress_;
}
inline void SoulBone::set_progress(::google::protobuf::int32 value) {
  set_has_progress();
  progress_ = value;
}

// optional int32 wake_lv = 5;
inline bool SoulBone::has_wake_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SoulBone::set_has_wake_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SoulBone::clear_has_wake_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SoulBone::clear_wake_lv() {
  wake_lv_ = 0;
  clear_has_wake_lv();
}
inline ::google::protobuf::int32 SoulBone::wake_lv() const {
  return wake_lv_;
}
inline void SoulBone::set_wake_lv(::google::protobuf::int32 value) {
  set_has_wake_lv();
  wake_lv_ = value;
}

// optional int32 fix_id = 6;
inline bool SoulBone::has_fix_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SoulBone::set_has_fix_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SoulBone::clear_has_fix_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SoulBone::clear_fix_id() {
  fix_id_ = 0;
  clear_has_fix_id();
}
inline ::google::protobuf::int32 SoulBone::fix_id() const {
  return fix_id_;
}
inline void SoulBone::set_fix_id(::google::protobuf::int32 value) {
  set_has_fix_id();
  fix_id_ = value;
}

// -------------------------------------------------------------------

// SoulGuwen

// optional int32 suit_id = 1;
inline bool SoulGuwen::has_suit_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulGuwen::set_has_suit_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulGuwen::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulGuwen::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
inline ::google::protobuf::int32 SoulGuwen::suit_id() const {
  return suit_id_;
}
inline void SoulGuwen::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
}

// optional int32 bone_pos = 2;
inline bool SoulGuwen::has_bone_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoulGuwen::set_has_bone_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoulGuwen::clear_has_bone_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoulGuwen::clear_bone_pos() {
  bone_pos_ = 0;
  clear_has_bone_pos();
}
inline ::google::protobuf::int32 SoulGuwen::bone_pos() const {
  return bone_pos_;
}
inline void SoulGuwen::set_bone_pos(::google::protobuf::int32 value) {
  set_has_bone_pos();
  bone_pos_ = value;
}

// optional int32 slot_pos = 3;
inline bool SoulGuwen::has_slot_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoulGuwen::set_has_slot_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoulGuwen::clear_has_slot_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoulGuwen::clear_slot_pos() {
  slot_pos_ = 0;
  clear_has_slot_pos();
}
inline ::google::protobuf::int32 SoulGuwen::slot_pos() const {
  return slot_pos_;
}
inline void SoulGuwen::set_slot_pos(::google::protobuf::int32 value) {
  set_has_slot_pos();
  slot_pos_ = value;
}

// optional int32 bag_pos = 4;
inline bool SoulGuwen::has_bag_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoulGuwen::set_has_bag_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoulGuwen::clear_has_bag_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoulGuwen::clear_bag_pos() {
  bag_pos_ = 0;
  clear_has_bag_pos();
}
inline ::google::protobuf::int32 SoulGuwen::bag_pos() const {
  return bag_pos_;
}
inline void SoulGuwen::set_bag_pos(::google::protobuf::int32 value) {
  set_has_bag_pos();
  bag_pos_ = value;
}

// -------------------------------------------------------------------

// SoulPool

// optional int32 poolBlessLv = 1;
inline bool SoulPool::has_poolblesslv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulPool::set_has_poolblesslv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulPool::clear_has_poolblesslv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulPool::clear_poolblesslv() {
  poolblesslv_ = 0;
  clear_has_poolblesslv();
}
inline ::google::protobuf::int32 SoulPool::poolblesslv() const {
  return poolblesslv_;
}
inline void SoulPool::set_poolblesslv(::google::protobuf::int32 value) {
  set_has_poolblesslv();
  poolblesslv_ = value;
}

// optional int32 poolPgLv = 2;
inline bool SoulPool::has_poolpglv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoulPool::set_has_poolpglv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoulPool::clear_has_poolpglv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoulPool::clear_poolpglv() {
  poolpglv_ = 0;
  clear_has_poolpglv();
}
inline ::google::protobuf::int32 SoulPool::poolpglv() const {
  return poolpglv_;
}
inline void SoulPool::set_poolpglv(::google::protobuf::int32 value) {
  set_has_poolpglv();
  poolpglv_ = value;
}

// -------------------------------------------------------------------

// MoFaEquipProtoInfo

// optional .proto_ff.ItemProtoInfo equip = 1;
inline bool MoFaEquipProtoInfo::has_equip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoFaEquipProtoInfo::set_has_equip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoFaEquipProtoInfo::clear_has_equip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoFaEquipProtoInfo::clear_equip() {
  if (equip_ != NULL) equip_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_equip();
}
inline const ::proto_ff::ItemProtoInfo& MoFaEquipProtoInfo::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::proto_ff::ItemProtoInfo* MoFaEquipProtoInfo::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::proto_ff::ItemProtoInfo;
  return equip_;
}
inline ::proto_ff::ItemProtoInfo* MoFaEquipProtoInfo::release_equip() {
  clear_has_equip();
  ::proto_ff::ItemProtoInfo* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void MoFaEquipProtoInfo::set_allocated_equip(::proto_ff::ItemProtoInfo* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
}

// optional uint32 pos = 2;
inline bool MoFaEquipProtoInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoFaEquipProtoInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoFaEquipProtoInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoFaEquipProtoInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 MoFaEquipProtoInfo::pos() const {
  return pos_;
}
inline void MoFaEquipProtoInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// MoFaEquipInfo

// optional int32 pos = 1;
inline bool MoFaEquipInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoFaEquipInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoFaEquipInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoFaEquipInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 MoFaEquipInfo::pos() const {
  return pos_;
}
inline void MoFaEquipInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// repeated .proto_ff.MoFaEquipProtoInfo equip = 2;
inline int MoFaEquipInfo::equip_size() const {
  return equip_.size();
}
inline void MoFaEquipInfo::clear_equip() {
  equip_.Clear();
}
inline const ::proto_ff::MoFaEquipProtoInfo& MoFaEquipInfo::equip(int index) const {
  return equip_.Get(index);
}
inline ::proto_ff::MoFaEquipProtoInfo* MoFaEquipInfo::mutable_equip(int index) {
  return equip_.Mutable(index);
}
inline ::proto_ff::MoFaEquipProtoInfo* MoFaEquipInfo::add_equip() {
  return equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MoFaEquipProtoInfo >&
MoFaEquipInfo::equip() const {
  return equip_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MoFaEquipProtoInfo >*
MoFaEquipInfo::mutable_equip() {
  return &equip_;
}

// optional .proto_ff.EquipSlotInfo slot = 3;
inline bool MoFaEquipInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoFaEquipInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoFaEquipInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoFaEquipInfo::clear_slot() {
  if (slot_ != NULL) slot_->::proto_ff::EquipSlotInfo::Clear();
  clear_has_slot();
}
inline const ::proto_ff::EquipSlotInfo& MoFaEquipInfo::slot() const {
  return slot_ != NULL ? *slot_ : *default_instance_->slot_;
}
inline ::proto_ff::EquipSlotInfo* MoFaEquipInfo::mutable_slot() {
  set_has_slot();
  if (slot_ == NULL) slot_ = new ::proto_ff::EquipSlotInfo;
  return slot_;
}
inline ::proto_ff::EquipSlotInfo* MoFaEquipInfo::release_slot() {
  clear_has_slot();
  ::proto_ff::EquipSlotInfo* temp = slot_;
  slot_ = NULL;
  return temp;
}
inline void MoFaEquipInfo::set_allocated_slot(::proto_ff::EquipSlotInfo* slot) {
  delete slot_;
  slot_ = slot;
  if (slot) {
    set_has_slot();
  } else {
    clear_has_slot();
  }
}

// optional uint32 status = 4;
inline bool MoFaEquipInfo::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoFaEquipInfo::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoFaEquipInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoFaEquipInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 MoFaEquipInfo::status() const {
  return status_;
}
inline void MoFaEquipInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional bool is_zufu = 5;
inline bool MoFaEquipInfo::has_is_zufu() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MoFaEquipInfo::set_has_is_zufu() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MoFaEquipInfo::clear_has_is_zufu() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MoFaEquipInfo::clear_is_zufu() {
  is_zufu_ = false;
  clear_has_is_zufu();
}
inline bool MoFaEquipInfo::is_zufu() const {
  return is_zufu_;
}
inline void MoFaEquipInfo::set_is_zufu(bool value) {
  set_has_is_zufu();
  is_zufu_ = value;
}

// -------------------------------------------------------------------

// RuneWordInfo

// optional int32 word_pos = 1;
inline bool RuneWordInfo::has_word_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RuneWordInfo::set_has_word_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RuneWordInfo::clear_has_word_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RuneWordInfo::clear_word_pos() {
  word_pos_ = 0;
  clear_has_word_pos();
}
inline ::google::protobuf::int32 RuneWordInfo::word_pos() const {
  return word_pos_;
}
inline void RuneWordInfo::set_word_pos(::google::protobuf::int32 value) {
  set_has_word_pos();
  word_pos_ = value;
}

// optional int32 fengyin_flag = 2;
inline bool RuneWordInfo::has_fengyin_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RuneWordInfo::set_has_fengyin_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RuneWordInfo::clear_has_fengyin_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RuneWordInfo::clear_fengyin_flag() {
  fengyin_flag_ = 0;
  clear_has_fengyin_flag();
}
inline ::google::protobuf::int32 RuneWordInfo::fengyin_flag() const {
  return fengyin_flag_;
}
inline void RuneWordInfo::set_fengyin_flag(::google::protobuf::int32 value) {
  set_has_fengyin_flag();
  fengyin_flag_ = value;
}

// optional int32 word_item = 3;
inline bool RuneWordInfo::has_word_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RuneWordInfo::set_has_word_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RuneWordInfo::clear_has_word_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RuneWordInfo::clear_word_item() {
  word_item_ = 0;
  clear_has_word_item();
}
inline ::google::protobuf::int32 RuneWordInfo::word_item() const {
  return word_item_;
}
inline void RuneWordInfo::set_word_item(::google::protobuf::int32 value) {
  set_has_word_item();
  word_item_ = value;
}

// optional int32 word_star = 4;
inline bool RuneWordInfo::has_word_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RuneWordInfo::set_has_word_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RuneWordInfo::clear_has_word_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RuneWordInfo::clear_word_star() {
  word_star_ = 0;
  clear_has_word_star();
}
inline ::google::protobuf::int32 RuneWordInfo::word_star() const {
  return word_star_;
}
inline void RuneWordInfo::set_word_star(::google::protobuf::int32 value) {
  set_has_word_star();
  word_star_ = value;
}

// -------------------------------------------------------------------

// RuneSlot

// optional int32 slot_pos = 1;
inline bool RuneSlot::has_slot_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RuneSlot::set_has_slot_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RuneSlot::clear_has_slot_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RuneSlot::clear_slot_pos() {
  slot_pos_ = 0;
  clear_has_slot_pos();
}
inline ::google::protobuf::int32 RuneSlot::slot_pos() const {
  return slot_pos_;
}
inline void RuneSlot::set_slot_pos(::google::protobuf::int32 value) {
  set_has_slot_pos();
  slot_pos_ = value;
}

// optional .proto_ff.ItemProtoInfo rune = 2;
inline bool RuneSlot::has_rune() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RuneSlot::set_has_rune() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RuneSlot::clear_has_rune() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RuneSlot::clear_rune() {
  if (rune_ != NULL) rune_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_rune();
}
inline const ::proto_ff::ItemProtoInfo& RuneSlot::rune() const {
  return rune_ != NULL ? *rune_ : *default_instance_->rune_;
}
inline ::proto_ff::ItemProtoInfo* RuneSlot::mutable_rune() {
  set_has_rune();
  if (rune_ == NULL) rune_ = new ::proto_ff::ItemProtoInfo;
  return rune_;
}
inline ::proto_ff::ItemProtoInfo* RuneSlot::release_rune() {
  clear_has_rune();
  ::proto_ff::ItemProtoInfo* temp = rune_;
  rune_ = NULL;
  return temp;
}
inline void RuneSlot::set_allocated_rune(::proto_ff::ItemProtoInfo* rune) {
  delete rune_;
  rune_ = rune;
  if (rune) {
    set_has_rune();
  } else {
    clear_has_rune();
  }
}

// repeated .proto_ff.RuneWordInfo words = 3;
inline int RuneSlot::words_size() const {
  return words_.size();
}
inline void RuneSlot::clear_words() {
  words_.Clear();
}
inline const ::proto_ff::RuneWordInfo& RuneSlot::words(int index) const {
  return words_.Get(index);
}
inline ::proto_ff::RuneWordInfo* RuneSlot::mutable_words(int index) {
  return words_.Mutable(index);
}
inline ::proto_ff::RuneWordInfo* RuneSlot::add_words() {
  return words_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RuneWordInfo >&
RuneSlot::words() const {
  return words_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RuneWordInfo >*
RuneSlot::mutable_words() {
  return &words_;
}

// -------------------------------------------------------------------

// RuneEntry

// optional int32 equip_pos = 1;
inline bool RuneEntry::has_equip_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RuneEntry::set_has_equip_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RuneEntry::clear_has_equip_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RuneEntry::clear_equip_pos() {
  equip_pos_ = 0;
  clear_has_equip_pos();
}
inline ::google::protobuf::int32 RuneEntry::equip_pos() const {
  return equip_pos_;
}
inline void RuneEntry::set_equip_pos(::google::protobuf::int32 value) {
  set_has_equip_pos();
  equip_pos_ = value;
}

// repeated .proto_ff.RuneSlot slots = 2;
inline int RuneEntry::slots_size() const {
  return slots_.size();
}
inline void RuneEntry::clear_slots() {
  slots_.Clear();
}
inline const ::proto_ff::RuneSlot& RuneEntry::slots(int index) const {
  return slots_.Get(index);
}
inline ::proto_ff::RuneSlot* RuneEntry::mutable_slots(int index) {
  return slots_.Mutable(index);
}
inline ::proto_ff::RuneSlot* RuneEntry::add_slots() {
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RuneSlot >&
RuneEntry::slots() const {
  return slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RuneSlot >*
RuneEntry::mutable_slots() {
  return &slots_;
}

// optional int32 bd_id = 3;
inline bool RuneEntry::has_bd_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RuneEntry::set_has_bd_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RuneEntry::clear_has_bd_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RuneEntry::clear_bd_id() {
  bd_id_ = 0;
  clear_has_bd_id();
}
inline ::google::protobuf::int32 RuneEntry::bd_id() const {
  return bd_id_;
}
inline void RuneEntry::set_bd_id(::google::protobuf::int32 value) {
  set_has_bd_id();
  bd_id_ = value;
}

// optional int32 jueji_id = 4;
inline bool RuneEntry::has_jueji_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RuneEntry::set_has_jueji_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RuneEntry::clear_has_jueji_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RuneEntry::clear_jueji_id() {
  jueji_id_ = 0;
  clear_has_jueji_id();
}
inline ::google::protobuf::int32 RuneEntry::jueji_id() const {
  return jueji_id_;
}
inline void RuneEntry::set_jueji_id(::google::protobuf::int32 value) {
  set_has_jueji_id();
  jueji_id_ = value;
}

// -------------------------------------------------------------------

// FestBossProto

// optional int32 tplid = 1;
inline bool FestBossProto::has_tplid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestBossProto::set_has_tplid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestBossProto::clear_has_tplid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestBossProto::clear_tplid() {
  tplid_ = 0;
  clear_has_tplid();
}
inline ::google::protobuf::int32 FestBossProto::tplid() const {
  return tplid_;
}
inline void FestBossProto::set_tplid(::google::protobuf::int32 value) {
  set_has_tplid();
  tplid_ = value;
}

// optional uint64 time = 2;
inline bool FestBossProto::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestBossProto::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestBossProto::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestBossProto::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 FestBossProto::time() const {
  return time_;
}
inline void FestBossProto::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// NGTBoxOpened

// required uint32 idx = 1;
inline bool NGTBoxOpened::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NGTBoxOpened::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NGTBoxOpened::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NGTBoxOpened::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 NGTBoxOpened::idx() const {
  return idx_;
}
inline void NGTBoxOpened::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// required uint32 itemId = 2;
inline bool NGTBoxOpened::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NGTBoxOpened::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NGTBoxOpened::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NGTBoxOpened::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 NGTBoxOpened::itemid() const {
  return itemid_;
}
inline void NGTBoxOpened::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 itemIdx = 3;
inline bool NGTBoxOpened::has_itemidx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NGTBoxOpened::set_has_itemidx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NGTBoxOpened::clear_has_itemidx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NGTBoxOpened::clear_itemidx() {
  itemidx_ = 0u;
  clear_has_itemidx();
}
inline ::google::protobuf::uint32 NGTBoxOpened::itemidx() const {
  return itemidx_;
}
inline void NGTBoxOpened::set_itemidx(::google::protobuf::uint32 value) {
  set_has_itemidx();
  itemidx_ = value;
}

// -------------------------------------------------------------------

// NGTBoxItem

// required uint32 itemId = 1;
inline bool NGTBoxItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NGTBoxItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NGTBoxItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NGTBoxItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 NGTBoxItem::itemid() const {
  return itemid_;
}
inline void NGTBoxItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required uint32 itemCount = 2;
inline bool NGTBoxItem::has_itemcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NGTBoxItem::set_has_itemcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NGTBoxItem::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NGTBoxItem::clear_itemcount() {
  itemcount_ = 0u;
  clear_has_itemcount();
}
inline ::google::protobuf::uint32 NGTBoxItem::itemcount() const {
  return itemcount_;
}
inline void NGTBoxItem::set_itemcount(::google::protobuf::uint32 value) {
  set_has_itemcount();
  itemcount_ = value;
}

// -------------------------------------------------------------------

// NGStorePurchaseLog

// required uint32 cfgId = 1;
inline bool NGStorePurchaseLog::has_cfgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NGStorePurchaseLog::set_has_cfgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NGStorePurchaseLog::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NGStorePurchaseLog::clear_cfgid() {
  cfgid_ = 0u;
  clear_has_cfgid();
}
inline ::google::protobuf::uint32 NGStorePurchaseLog::cfgid() const {
  return cfgid_;
}
inline void NGStorePurchaseLog::set_cfgid(::google::protobuf::uint32 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// required uint32 times = 2;
inline bool NGStorePurchaseLog::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NGStorePurchaseLog::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NGStorePurchaseLog::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NGStorePurchaseLog::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 NGStorePurchaseLog::times() const {
  return times_;
}
inline void NGStorePurchaseLog::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// NGDbDatas

// optional uint32 layers = 1;
inline bool NGDbDatas::has_layers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NGDbDatas::set_has_layers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NGDbDatas::clear_has_layers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NGDbDatas::clear_layers() {
  layers_ = 0u;
  clear_has_layers();
}
inline ::google::protobuf::uint32 NGDbDatas::layers() const {
  return layers_;
}
inline void NGDbDatas::set_layers(::google::protobuf::uint32 value) {
  set_has_layers();
  layers_ = value;
}

// repeated .proto_ff.NGTBoxOpened openedList = 2;
inline int NGDbDatas::openedlist_size() const {
  return openedlist_.size();
}
inline void NGDbDatas::clear_openedlist() {
  openedlist_.Clear();
}
inline const ::proto_ff::NGTBoxOpened& NGDbDatas::openedlist(int index) const {
  return openedlist_.Get(index);
}
inline ::proto_ff::NGTBoxOpened* NGDbDatas::mutable_openedlist(int index) {
  return openedlist_.Mutable(index);
}
inline ::proto_ff::NGTBoxOpened* NGDbDatas::add_openedlist() {
  return openedlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::NGTBoxOpened >&
NGDbDatas::openedlist() const {
  return openedlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::NGTBoxOpened >*
NGDbDatas::mutable_openedlist() {
  return &openedlist_;
}

// optional uint64 weekTime = 3;
inline bool NGDbDatas::has_weektime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NGDbDatas::set_has_weektime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NGDbDatas::clear_has_weektime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NGDbDatas::clear_weektime() {
  weektime_ = GOOGLE_ULONGLONG(0);
  clear_has_weektime();
}
inline ::google::protobuf::uint64 NGDbDatas::weektime() const {
  return weektime_;
}
inline void NGDbDatas::set_weektime(::google::protobuf::uint64 value) {
  set_has_weektime();
  weektime_ = value;
}

// optional uint32 battleWeekTimes = 4;
inline bool NGDbDatas::has_battleweektimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NGDbDatas::set_has_battleweektimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NGDbDatas::clear_has_battleweektimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NGDbDatas::clear_battleweektimes() {
  battleweektimes_ = 0u;
  clear_has_battleweektimes();
}
inline ::google::protobuf::uint32 NGDbDatas::battleweektimes() const {
  return battleweektimes_;
}
inline void NGDbDatas::set_battleweektimes(::google::protobuf::uint32 value) {
  set_has_battleweektimes();
  battleweektimes_ = value;
}

// optional uint64 battleId = 5;
inline bool NGDbDatas::has_battleid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NGDbDatas::set_has_battleid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NGDbDatas::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NGDbDatas::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
  clear_has_battleid();
}
inline ::google::protobuf::uint64 NGDbDatas::battleid() const {
  return battleid_;
}
inline void NGDbDatas::set_battleid(::google::protobuf::uint64 value) {
  set_has_battleid();
  battleid_ = value;
}

// repeated .proto_ff.NGTBoxItem itemsLog = 6;
inline int NGDbDatas::itemslog_size() const {
  return itemslog_.size();
}
inline void NGDbDatas::clear_itemslog() {
  itemslog_.Clear();
}
inline const ::proto_ff::NGTBoxItem& NGDbDatas::itemslog(int index) const {
  return itemslog_.Get(index);
}
inline ::proto_ff::NGTBoxItem* NGDbDatas::mutable_itemslog(int index) {
  return itemslog_.Mutable(index);
}
inline ::proto_ff::NGTBoxItem* NGDbDatas::add_itemslog() {
  return itemslog_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::NGTBoxItem >&
NGDbDatas::itemslog() const {
  return itemslog_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::NGTBoxItem >*
NGDbDatas::mutable_itemslog() {
  return &itemslog_;
}

// optional uint32 privilege = 7;
inline bool NGDbDatas::has_privilege() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NGDbDatas::set_has_privilege() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NGDbDatas::clear_has_privilege() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NGDbDatas::clear_privilege() {
  privilege_ = 0u;
  clear_has_privilege();
}
inline ::google::protobuf::uint32 NGDbDatas::privilege() const {
  return privilege_;
}
inline void NGDbDatas::set_privilege(::google::protobuf::uint32 value) {
  set_has_privilege();
  privilege_ = value;
}

// repeated uint32 privilegeRecvLog = 8;
inline int NGDbDatas::privilegerecvlog_size() const {
  return privilegerecvlog_.size();
}
inline void NGDbDatas::clear_privilegerecvlog() {
  privilegerecvlog_.Clear();
}
inline ::google::protobuf::uint32 NGDbDatas::privilegerecvlog(int index) const {
  return privilegerecvlog_.Get(index);
}
inline void NGDbDatas::set_privilegerecvlog(int index, ::google::protobuf::uint32 value) {
  privilegerecvlog_.Set(index, value);
}
inline void NGDbDatas::add_privilegerecvlog(::google::protobuf::uint32 value) {
  privilegerecvlog_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NGDbDatas::privilegerecvlog() const {
  return privilegerecvlog_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NGDbDatas::mutable_privilegerecvlog() {
  return &privilegerecvlog_;
}

// repeated .proto_ff.NGStorePurchaseLog storePurchaseLog = 9;
inline int NGDbDatas::storepurchaselog_size() const {
  return storepurchaselog_.size();
}
inline void NGDbDatas::clear_storepurchaselog() {
  storepurchaselog_.Clear();
}
inline const ::proto_ff::NGStorePurchaseLog& NGDbDatas::storepurchaselog(int index) const {
  return storepurchaselog_.Get(index);
}
inline ::proto_ff::NGStorePurchaseLog* NGDbDatas::mutable_storepurchaselog(int index) {
  return storepurchaselog_.Mutable(index);
}
inline ::proto_ff::NGStorePurchaseLog* NGDbDatas::add_storepurchaselog() {
  return storepurchaselog_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::NGStorePurchaseLog >&
NGDbDatas::storepurchaselog() const {
  return storepurchaselog_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::NGStorePurchaseLog >*
NGDbDatas::mutable_storepurchaselog() {
  return &storepurchaselog_;
}

// optional uint32 payAcc = 10;
inline bool NGDbDatas::has_payacc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NGDbDatas::set_has_payacc() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NGDbDatas::clear_has_payacc() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NGDbDatas::clear_payacc() {
  payacc_ = 0u;
  clear_has_payacc();
}
inline ::google::protobuf::uint32 NGDbDatas::payacc() const {
  return payacc_;
}
inline void NGDbDatas::set_payacc(::google::protobuf::uint32 value) {
  set_has_payacc();
  payacc_ = value;
}

// repeated uint32 payAccRecvLog = 11;
inline int NGDbDatas::payaccrecvlog_size() const {
  return payaccrecvlog_.size();
}
inline void NGDbDatas::clear_payaccrecvlog() {
  payaccrecvlog_.Clear();
}
inline ::google::protobuf::uint32 NGDbDatas::payaccrecvlog(int index) const {
  return payaccrecvlog_.Get(index);
}
inline void NGDbDatas::set_payaccrecvlog(int index, ::google::protobuf::uint32 value) {
  payaccrecvlog_.Set(index, value);
}
inline void NGDbDatas::add_payaccrecvlog(::google::protobuf::uint32 value) {
  payaccrecvlog_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NGDbDatas::payaccrecvlog() const {
  return payaccrecvlog_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NGDbDatas::mutable_payaccrecvlog() {
  return &payaccrecvlog_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::ECState>() {
  return ::proto_ff::ECState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EAttrGroup>() {
  return ::proto_ff::EAttrGroup_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::GrowType>() {
  return ::proto_ff::GrowType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::ECreatureAttr>() {
  return ::proto_ff::ECreatureAttr_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::DigPerforType>() {
  return ::proto_ff::DigPerforType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EMountKunEquipSuitStatus>() {
  return ::proto_ff::EMountKunEquipSuitStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::MountBloodState>() {
  return ::proto_ff::MountBloodState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::MountBabySlotState>() {
  return ::proto_ff::MountBabySlotState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_GODRELICS_TASK_STATUS>() {
  return ::proto_ff::EN_GODRELICS_TASK_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_GODRELICS_GROUP_TASK_STATUS>() {
  return ::proto_ff::EN_GODRELICS_GROUP_TASK_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_DAILY_TASK_STATUS>() {
  return ::proto_ff::EN_DAILY_TASK_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_DAILY_TASK_REWARD_STATUS>() {
  return ::proto_ff::EN_DAILY_TASK_REWARD_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::FacadeSoulSkillStatus>() {
  return ::proto_ff::FacadeSoulSkillStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::FacadeSoulActivitytatus>() {
  return ::proto_ff::FacadeSoulActivitytatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EDeityEquipSuitStatus>() {
  return ::proto_ff::EDeityEquipSuitStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::DeityBattleSlotState>() {
  return ::proto_ff::DeityBattleSlotState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::ETitleStatus>() {
  return ::proto_ff::ETitleStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EnumAchievementStatus>() {
  return ::proto_ff::EnumAchievementStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EnumBattlePassBuyStatus>() {
  return ::proto_ff::EnumBattlePassBuyStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::DragonSouleStarStatus>() {
  return ::proto_ff::DragonSouleStarStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::WelfareSignStatus>() {
  return ::proto_ff::WelfareSignStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::WelfareCommonStatus>() {
  return ::proto_ff::WelfareCommonStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::WelfareWeekEndStatus>() {
  return ::proto_ff::WelfareWeekEndStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::WelfarePrayConst>() {
  return ::proto_ff::WelfarePrayConst_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::DailyGiftCommonStatus>() {
  return ::proto_ff::DailyGiftCommonStatus_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Com_2eproto__INCLUDED
