// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Com.proto

#ifndef PROTOBUF_Com_2eproto__INCLUDED
#define PROTOBUF_Com_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Com_2eproto();
void protobuf_AssignDesc_Com_2eproto();
void protobuf_ShutdownFile_Com_2eproto();

class EmptyMessage;
class ComPair;
class ComPair64;
class ComPairBool;
class Vector3PB;
class Vector2PB;
class Attr64;
class RoleFacadeProto;
class RoleListDBProto;
class LoginRoleProto;
class LoginSyncProto;
class CenterRoleProto;
class SocialRoleProto;
class Attr;
class BlueStarAttr;
class ItemProtoInfo;
class EquipSlotInfo;
class EquipInfo;
class ItemSimpleProto;
class MultItemSimpleProto;
class MailParamProto;
class MailStrProto;
class MailAttachmentList;
class MailHead;
class MailInfo;
class WebMailItemProto;
class WebMailDataProto;
class UseItemArgProto;
class NotifyRoleFacadeCastRsp;
class FunctionUnlockInfoData;
class FunctionUnlockInfo;
class RolePlayerMiniInfo;
class FriendInfo;
class FriendApplyInfo;
class RelationHateInfo;
class RelationGiftRecord;
class RelationDBInfo;
class DigPerfor;
class BuffProto;
class BuffListProto;
class SkillPosProto;
class SkillGroupProto;
class SkillGroupListProto;
class FacadeFantasyData;
class FacadeFragmentData;
class FacadeSkillData;
class StatisticDataProto;
class GodRelicsTaskEntry;
class GodRelicsTaskGroupEntry;
class DailyTaskEntry;
class DailyTaskLimitEntry;
class DailyTaskBackDayEntry;
class DailyTaskBackEntry;
class DailyTaskRewardEntry;
class DailyTaskAllData;
class CharacterDBRecentSubmitMission;
class CharacterDBMissionItemInfo;
class CharacterDBMissionTrack;
class CharacterDBDyMissionInfo;
class CharacterDBTaskData;
class NotifyVipDataRsp;

enum ECState {
  state_init = 0,
  state_normal = 1,
  state_dead = 2,
  state_seat = 3,
  state_fight = 4
};
bool ECState_IsValid(int value);
const ECState ECState_MIN = state_init;
const ECState ECState_MAX = state_fight;
const int ECState_ARRAYSIZE = ECState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECState_descriptor();
inline const ::std::string& ECState_Name(ECState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECState_descriptor(), value);
}
inline bool ECState_Parse(
    const ::std::string& name, ECState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECState>(
    ECState_descriptor(), name, value);
}
enum EAttrGroup {
  EAttrGroup_Level = 1,
  EAttrGroup_Skill = 2,
  EAttrGroup_Buff = 3,
  EAttrGroup_Equip = 4,
  EAttrGroup_Grow = 5,
  EAttrGroup_Facade = 6,
  EAttrGroup_Gm = 7
};
bool EAttrGroup_IsValid(int value);
const EAttrGroup EAttrGroup_MIN = EAttrGroup_Level;
const EAttrGroup EAttrGroup_MAX = EAttrGroup_Gm;
const int EAttrGroup_ARRAYSIZE = EAttrGroup_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAttrGroup_descriptor();
inline const ::std::string& EAttrGroup_Name(EAttrGroup value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAttrGroup_descriptor(), value);
}
inline bool EAttrGroup_Parse(
    const ::std::string& name, EAttrGroup* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAttrGroup>(
    EAttrGroup_descriptor(), name, value);
}
enum GrowType {
  GrowType_clothes = 1,
  GrowType_weapon = 2,
  GrowType_eye_awn = 3,
  GrowType_face_des = 4,
  GrowType_waist_des = 5,
  GrowType_tail = 6,
  GrowType_bracelet = 7,
  GrowType_footprint = 8,
  GrowType_med = 9,
  GrowType_halo = 10,
  GrowType_proto_frame = 11,
  GrowType_bubble = 12,
  GrowType_head = 13,
  GrowType_WING_TYPE = 14,
  GrowType_TREASURE_TYPE = 15,
  GrowType_ARTIFACT_TYPE = 16,
  GrowType_PARTNER_TYPE = 17
};
bool GrowType_IsValid(int value);
const GrowType GrowType_MIN = GrowType_clothes;
const GrowType GrowType_MAX = GrowType_PARTNER_TYPE;
const int GrowType_ARRAYSIZE = GrowType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GrowType_descriptor();
inline const ::std::string& GrowType_Name(GrowType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GrowType_descriptor(), value);
}
inline bool GrowType_Parse(
    const ::std::string& name, GrowType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GrowType>(
    GrowType_descriptor(), name, value);
}
enum ECreatureAttr {
  A_NONE = 0,
  A_MAX_HP = 1,
  A_ATK = 2,
  A_DEF = 3,
  A_BRK_ARMOR = 4,
  A_FIVE_DAM = 5,
  A_FIVE_ARMOR = 6,
  A_THUMP_RATE = 7,
  A_THUMP_RESIST = 8,
  A_SKY = 9,
  A_SKY_DAM = 10,
  A_SKY_REDU_RESIST = 11,
  A_SKY_RESIST = 12,
  A_KILL_GOD = 13,
  A_GOD_BODY = 14,
  A_MORTAL_RATE = 15,
  A_MORTAL_RESIST = 16,
  A_FAIRY_RATE = 17,
  A_FAIRY_RESIST = 18,
  A_GOD_RATE = 19,
  A_GOD_RESIST = 20,
  A_CRIT_RATE = 21,
  A_CRIT_RESIT_RATE = 22,
  A_CRIT_DAM = 23,
  A_CRIT_REDU = 24,
  A_BATTER_RATE = 25,
  A_BATTER_RESIST = 26,
  A_BATTER_DAM = 27,
  A_BATTER_REDU = 28,
  A_BRKDOWN_RATE = 29,
  A_BRKDOWN_RESIST = 30,
  A_DAM_ADD = 31,
  A_DAM_REDU = 32,
  A_ALL_ADD = 33,
  A_ALL_REDU = 34,
  A_SKILL_ADD = 35,
  A_SKILL_REDU = 36,
  A_REBOUND_DAM = 37,
  A_HP_STEAL = 38,
  A_DODGE_RATE = 39,
  A_HIT_RATE = 40,
  A_BLK_RATE = 41,
  A_BRK_BLK_RATE = 42,
  A_BLK_FREE = 43,
  A_BLK_PIERCE = 44,
  A_REL_ARMOR = 45,
  A_REL_DAM = 46,
  A_FIVE_RESIST = 47,
  A_FIVE_RESIST_REDU = 48,
  A_FIRE_ADD = 49,
  A_FIRE_REDU = 50,
  A_ICE_ADD = 51,
  A_ICE_REDU = 52,
  A_THUNDER_ADD = 53,
  A_THUNDER_RDU = 54,
  A_PLAYER_REDU = 55,
  A_PLAYER_ADD = 56,
  A_LEADER_REDU = 57,
  A_LEADER_ADD = 58,
  A_MON_REDU = 59,
  A_MON_ADD = 60,
  A_VAR_REDU = 61,
  A_VAR_ADD = 62,
  A_UNUSUAL_RESIST = 63,
  A_UNUSUAL_HIT = 64,
  A_HP_RECOVER = 65,
  A_UNUSUAL_ADD = 66,
  A_FIX_RECOVER = 67,
  A_HIGH_HP_ADD = 68,
  A_RECOVER_HP_ADD = 69,
  A_WEEK_ADD = 70,
  A_MAG_SHIELD = 71,
  A_MAG_ATK = 72,
  A_MAG_DEF = 73,
  A_MAG_DAM = 74,
  A_MAG_SHIELD_ADD = 75,
  A_MAG_REDU = 76,
  A_MAG_ATK_ADD = 77,
  A_MAG_DEF_ADD = 78,
  A_MAG_VAR_COOL = 79,
  A_GOD_SHIELD = 80,
  A_SHIELD = 81,
  A_VAR_TIME = 82,
  A_COOL_TIME = 83,
  A_SPEED = 84,
  A_HP_ADD = 85,
  A_ATK_ADD = 86,
  A_DEF_ADD = 87,
  A_ARMOR_ADD = 88,
  A_FIVE_DAM_ADD = 89,
  A_FIVE_ARMOR_ADD = 90,
  A_DROP = 91,
  A_EXP_ADD = 92,
  A_GOLD_DROP = 93,
  A_LEV_ALL_ADD = 94,
  A_SKY_ADD = 95,
  A_GONG_ABS_ADD = 96,
  A_MERI_ABS_ADD = 97,
  A_WING_ALL_ADD = 98,
  A_MAG_WEAPON_ALL_ADD = 99,
  A_ARTIFACT_ALL_ADD = 100,
  A_SWORD_ALL_ADD = 101,
  A_GOD_ALL_ADD = 102,
  A_MOUNT_ALL_ADD = 103,
  A_STONE_ALL_ADD = 104,
  A_GOD_EQU_BA = 105,
  A_WEAPON_BA = 106,
  A_WEAPON_WAKE_BA = 107,
  A_GODS_QI_SHA = 108,
  A_GODS_PO_JUN = 109,
  A_GODS_ZI_WEI = 110,
  A_GODS_WU_QU = 111,
  A_GODS_TAI_YANG = 112,
  A_GODS_LIAN_ZHEN = 113,
  A_GODS_TAN_LANG = 114,
  A_GODS_TIAN_FU = 115,
  A_GODS_TIAN_XIANG = 116,
  A_GODS_JU_MEN = 117,
  A_MAIN_WEAPON_BA_ADD = 118,
  A_DEPUTY_WEAPON_BA_ADD = 119,
  A_CAP_BA_ADD = 120,
  A_CLOTH_BA_ADD = 121,
  A_HAND_BA_ADD = 122,
  A_BELT_BA_ADD = 123,
  A_SHOE_BA_ADD = 124,
  A_NECK_BA_ADD = 125,
  A_BRACELET_BA_ADD = 126,
  A_RING_BA_ADD = 127,
  A_EQU_WAKE_BA_ADD = 128,
  A_SUIT_ZHU_MO_BA_ADD = 129,
  A_SUIT_ZHU_XIAN_BA_ADD = 130,
  A_SUIT_ZHU_SHEN_BA_ADD = 131,
  A_EQU_FLY_BA_ADD = 132,
  A_EIGHT_BA_ADD = 133,
  A_EIGHT_EYE_BA_ADD = 134,
  A_COM_SHIELD = 135,
  A_FIGHT_END = 200,
  A_GOLD = 201,
  A_MAGIC = 202,
  A_DIA = 203,
  A_BD_DIA = 204,
  A_PRESTIGE = 205,
  A_FIGHT = 206,
  A_EXP = 207,
  A_CUR_HP = 208,
  A_PROF = 209,
  A_LEVEL = 210,
  A_VIP_LEVEL = 211,
  A_TEAM_ID = 212,
  A_TEAM_LEADER = 213,
  A_FRIEND_COUNT = 220,
  A_HANGUP_TIME = 221,
  A_WORLD_EXP_ADD = 222,
  A_FUSHI_TIME = 223,
  A_DUP_ID = 224,
  A_CAMP_ID = 226,
  A_DAILY_EXP = 227,
  A_COMMON_END = 400
};
bool ECreatureAttr_IsValid(int value);
const ECreatureAttr ECreatureAttr_MIN = A_NONE;
const ECreatureAttr ECreatureAttr_MAX = A_COMMON_END;
const int ECreatureAttr_ARRAYSIZE = ECreatureAttr_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECreatureAttr_descriptor();
inline const ::std::string& ECreatureAttr_Name(ECreatureAttr value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECreatureAttr_descriptor(), value);
}
inline bool ECreatureAttr_Parse(
    const ::std::string& name, ECreatureAttr* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECreatureAttr>(
    ECreatureAttr_descriptor(), name, value);
}
enum DigPerforType {
  addhp = 1,
  reducehp = 2,
  crit = 3,
  dodge = 4,
  absorb = 5,
  normalimmune = 6,
  fiveimmune = 7,
  godimmune = 8,
  injury = 9,
  invincible = 10,
  effectivearea = 11,
  steal = 12,
  kill = 13,
  bosscountlimit = 14,
  breakdown = 15,
  conti = 16,
  pet1 = 17,
  pet2 = 18,
  pet3 = 19,
  block = 20
};
bool DigPerforType_IsValid(int value);
const DigPerforType DigPerforType_MIN = addhp;
const DigPerforType DigPerforType_MAX = block;
const int DigPerforType_ARRAYSIZE = DigPerforType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DigPerforType_descriptor();
inline const ::std::string& DigPerforType_Name(DigPerforType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DigPerforType_descriptor(), value);
}
inline bool DigPerforType_Parse(
    const ::std::string& name, DigPerforType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DigPerforType>(
    DigPerforType_descriptor(), name, value);
}
enum EN_GODRELICS_TASK_STATUS {
  EN_GODRELICS_TASK_STATUS_NOT_FINISH = 0,
  EN_GODRELICS_TASK_STATUS_FINISH = 1,
  EN_GODRELICS_TASK_STATUS_GET_REWARD = 2
};
bool EN_GODRELICS_TASK_STATUS_IsValid(int value);
const EN_GODRELICS_TASK_STATUS EN_GODRELICS_TASK_STATUS_MIN = EN_GODRELICS_TASK_STATUS_NOT_FINISH;
const EN_GODRELICS_TASK_STATUS EN_GODRELICS_TASK_STATUS_MAX = EN_GODRELICS_TASK_STATUS_GET_REWARD;
const int EN_GODRELICS_TASK_STATUS_ARRAYSIZE = EN_GODRELICS_TASK_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_GODRELICS_TASK_STATUS_descriptor();
inline const ::std::string& EN_GODRELICS_TASK_STATUS_Name(EN_GODRELICS_TASK_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_GODRELICS_TASK_STATUS_descriptor(), value);
}
inline bool EN_GODRELICS_TASK_STATUS_Parse(
    const ::std::string& name, EN_GODRELICS_TASK_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_GODRELICS_TASK_STATUS>(
    EN_GODRELICS_TASK_STATUS_descriptor(), name, value);
}
enum EN_GODRELICS_GROUP_TASK_STATUS {
  EN_GODRELICS_GROUP_TASK_STATUS_NOT_UNLOCK = 0,
  EN_GODRELICS_GROUP_TASK_STATUS_NOT_FINISH = 1,
  EN_GODRELICS_GROUP_TASK_STATUS_FINISH = 2,
  EN_GODRELICS_GROUP_TASK_STATUS_GET_REWARD = 3
};
bool EN_GODRELICS_GROUP_TASK_STATUS_IsValid(int value);
const EN_GODRELICS_GROUP_TASK_STATUS EN_GODRELICS_GROUP_TASK_STATUS_MIN = EN_GODRELICS_GROUP_TASK_STATUS_NOT_UNLOCK;
const EN_GODRELICS_GROUP_TASK_STATUS EN_GODRELICS_GROUP_TASK_STATUS_MAX = EN_GODRELICS_GROUP_TASK_STATUS_GET_REWARD;
const int EN_GODRELICS_GROUP_TASK_STATUS_ARRAYSIZE = EN_GODRELICS_GROUP_TASK_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_GODRELICS_GROUP_TASK_STATUS_descriptor();
inline const ::std::string& EN_GODRELICS_GROUP_TASK_STATUS_Name(EN_GODRELICS_GROUP_TASK_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_GODRELICS_GROUP_TASK_STATUS_descriptor(), value);
}
inline bool EN_GODRELICS_GROUP_TASK_STATUS_Parse(
    const ::std::string& name, EN_GODRELICS_GROUP_TASK_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_GODRELICS_GROUP_TASK_STATUS>(
    EN_GODRELICS_GROUP_TASK_STATUS_descriptor(), name, value);
}
enum EN_DAILY_TASK_STATUS {
  EN_DAILY_TASK_STATUS_NOT_UNLOCK = 0,
  EN_DAILY_TASK_STATUS_NOT_FINISH = 1,
  EN_DAILY_TASK_STATUS_FINISH = 2
};
bool EN_DAILY_TASK_STATUS_IsValid(int value);
const EN_DAILY_TASK_STATUS EN_DAILY_TASK_STATUS_MIN = EN_DAILY_TASK_STATUS_NOT_UNLOCK;
const EN_DAILY_TASK_STATUS EN_DAILY_TASK_STATUS_MAX = EN_DAILY_TASK_STATUS_FINISH;
const int EN_DAILY_TASK_STATUS_ARRAYSIZE = EN_DAILY_TASK_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_DAILY_TASK_STATUS_descriptor();
inline const ::std::string& EN_DAILY_TASK_STATUS_Name(EN_DAILY_TASK_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_DAILY_TASK_STATUS_descriptor(), value);
}
inline bool EN_DAILY_TASK_STATUS_Parse(
    const ::std::string& name, EN_DAILY_TASK_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_DAILY_TASK_STATUS>(
    EN_DAILY_TASK_STATUS_descriptor(), name, value);
}
enum EN_DAILY_TASK_REWARD_STATUS {
  EN_DAILY_TASK_REWARD_STATUS_NOT_GET = 0,
  EN_DAILY_TASK_REWARD_STATUS_CAN_GET = 1,
  EN_DAILY_TASK_REWARD_STATUS_GET = 2
};
bool EN_DAILY_TASK_REWARD_STATUS_IsValid(int value);
const EN_DAILY_TASK_REWARD_STATUS EN_DAILY_TASK_REWARD_STATUS_MIN = EN_DAILY_TASK_REWARD_STATUS_NOT_GET;
const EN_DAILY_TASK_REWARD_STATUS EN_DAILY_TASK_REWARD_STATUS_MAX = EN_DAILY_TASK_REWARD_STATUS_GET;
const int EN_DAILY_TASK_REWARD_STATUS_ARRAYSIZE = EN_DAILY_TASK_REWARD_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_DAILY_TASK_REWARD_STATUS_descriptor();
inline const ::std::string& EN_DAILY_TASK_REWARD_STATUS_Name(EN_DAILY_TASK_REWARD_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_DAILY_TASK_REWARD_STATUS_descriptor(), value);
}
inline bool EN_DAILY_TASK_REWARD_STATUS_Parse(
    const ::std::string& name, EN_DAILY_TASK_REWARD_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_DAILY_TASK_REWARD_STATUS>(
    EN_DAILY_TASK_REWARD_STATUS_descriptor(), name, value);
}
// ===================================================================

class EmptyMessage : public ::google::protobuf::Message {
 public:
  EmptyMessage();
  virtual ~EmptyMessage();

  EmptyMessage(const EmptyMessage& from);

  inline EmptyMessage& operator=(const EmptyMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyMessage& default_instance();

  void Swap(EmptyMessage* other);

  // implements Message ----------------------------------------------

  EmptyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmptyMessage& from);
  void MergeFrom(const EmptyMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.EmptyMessage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EmptyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ComPair : public ::google::protobuf::Message {
 public:
  ComPair();
  virtual ~ComPair();

  ComPair(const ComPair& from);

  inline ComPair& operator=(const ComPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComPair& default_instance();

  void Swap(ComPair* other);

  // implements Message ----------------------------------------------

  ComPair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComPair& from);
  void MergeFrom(const ComPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComPair)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComPair* default_instance_;
};
// -------------------------------------------------------------------

class ComPair64 : public ::google::protobuf::Message {
 public:
  ComPair64();
  virtual ~ComPair64();

  ComPair64(const ComPair64& from);

  inline ComPair64& operator=(const ComPair64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComPair64& default_instance();

  void Swap(ComPair64* other);

  // implements Message ----------------------------------------------

  ComPair64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComPair64& from);
  void MergeFrom(const ComPair64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);

  // optional uint64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComPair64)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint64 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComPair64* default_instance_;
};
// -------------------------------------------------------------------

class ComPairBool : public ::google::protobuf::Message {
 public:
  ComPairBool();
  virtual ~ComPairBool();

  ComPairBool(const ComPairBool& from);

  inline ComPairBool& operator=(const ComPairBool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComPairBool& default_instance();

  void Swap(ComPairBool* other);

  // implements Message ----------------------------------------------

  ComPairBool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComPairBool& from);
  void MergeFrom(const ComPairBool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // optional bool value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline bool value() const;
  inline void set_value(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComPairBool)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 key_;
  bool value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComPairBool* default_instance_;
};
// -------------------------------------------------------------------

class Vector3PB : public ::google::protobuf::Message {
 public:
  Vector3PB();
  virtual ~Vector3PB();

  Vector3PB(const Vector3PB& from);

  inline Vector3PB& operator=(const Vector3PB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector3PB& default_instance();

  void Swap(Vector3PB* other);

  // implements Message ----------------------------------------------

  Vector3PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vector3PB& from);
  void MergeFrom(const Vector3PB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // optional float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // optional float z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);

  // @@protoc_insertion_point(class_scope:proto_ff.Vector3PB)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  float z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Vector3PB* default_instance_;
};
// -------------------------------------------------------------------

class Vector2PB : public ::google::protobuf::Message {
 public:
  Vector2PB();
  virtual ~Vector2PB();

  Vector2PB(const Vector2PB& from);

  inline Vector2PB& operator=(const Vector2PB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector2PB& default_instance();

  void Swap(Vector2PB* other);

  // implements Message ----------------------------------------------

  Vector2PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vector2PB& from);
  void MergeFrom(const Vector2PB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // optional float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:proto_ff.Vector2PB)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Vector2PB* default_instance_;
};
// -------------------------------------------------------------------

class Attr64 : public ::google::protobuf::Message {
 public:
  Attr64();
  virtual ~Attr64();

  Attr64(const Attr64& from);

  inline Attr64& operator=(const Attr64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attr64& default_instance();

  void Swap(Attr64* other);

  // implements Message ----------------------------------------------

  Attr64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attr64& from);
  void MergeFrom(const Attr64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Attr64)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Attr64* default_instance_;
};
// -------------------------------------------------------------------

class RoleFacadeProto : public ::google::protobuf::Message {
 public:
  RoleFacadeProto();
  virtual ~RoleFacadeProto();

  RoleFacadeProto(const RoleFacadeProto& from);

  inline RoleFacadeProto& operator=(const RoleFacadeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleFacadeProto& default_instance();

  void Swap(RoleFacadeProto* other);

  // implements Message ----------------------------------------------

  RoleFacadeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleFacadeProto& from);
  void MergeFrom(const RoleFacadeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.Attr64 growFacade = 1;
  inline int growfacade_size() const;
  inline void clear_growfacade();
  static const int kGrowFacadeFieldNumber = 1;
  inline const ::proto_ff::Attr64& growfacade(int index) const;
  inline ::proto_ff::Attr64* mutable_growfacade(int index);
  inline ::proto_ff::Attr64* add_growfacade();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >&
      growfacade() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >*
      mutable_growfacade();

  // optional int32 color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleFacadeProto)
 private:
  inline void set_has_color();
  inline void clear_has_color();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 > growfacade_;
  ::google::protobuf::int32 color_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RoleFacadeProto* default_instance_;
};
// -------------------------------------------------------------------

class RoleListDBProto : public ::google::protobuf::Message {
 public:
  RoleListDBProto();
  virtual ~RoleListDBProto();

  RoleListDBProto(const RoleListDBProto& from);

  inline RoleListDBProto& operator=(const RoleListDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListDBProto& default_instance();

  void Swap(RoleListDBProto* other);

  // implements Message ----------------------------------------------

  RoleListDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListDBProto& from);
  void MergeFrom(const RoleListDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 createtime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 6;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 7;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 7;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint64 sceneid = 8;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 8;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 9;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 9;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 10;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 10;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // optional uint64 lastsceneid = 11;
  inline bool has_lastsceneid() const;
  inline void clear_lastsceneid();
  static const int kLastsceneidFieldNumber = 11;
  inline ::google::protobuf::uint64 lastsceneid() const;
  inline void set_lastsceneid(::google::protobuf::uint64 value);

  // optional uint64 lastmapid = 12;
  inline bool has_lastmapid() const;
  inline void clear_lastmapid();
  static const int kLastmapidFieldNumber = 12;
  inline ::google::protobuf::uint64 lastmapid() const;
  inline void set_lastmapid(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB lastpos = 13;
  inline bool has_lastpos() const;
  inline void clear_lastpos();
  static const int kLastposFieldNumber = 13;
  inline const ::proto_ff::Vector3PB& lastpos() const;
  inline ::proto_ff::Vector3PB* mutable_lastpos();
  inline ::proto_ff::Vector3PB* release_lastpos();
  inline void set_allocated_lastpos(::proto_ff::Vector3PB* lastpos);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleListDBProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_lastsceneid();
  inline void clear_has_lastsceneid();
  inline void set_has_lastmapid();
  inline void clear_has_lastmapid();
  inline void set_has_lastpos();
  inline void clear_has_lastpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 createtime_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 mapid_;
  ::proto_ff::Vector3PB* pos_;
  ::google::protobuf::uint64 lastsceneid_;
  ::google::protobuf::uint64 lastmapid_;
  ::proto_ff::Vector3PB* lastpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RoleListDBProto* default_instance_;
};
// -------------------------------------------------------------------

class LoginRoleProto : public ::google::protobuf::Message {
 public:
  LoginRoleProto();
  virtual ~LoginRoleProto();

  LoginRoleProto(const LoginRoleProto& from);

  inline LoginRoleProto& operator=(const LoginRoleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRoleProto& default_instance();

  void Swap(LoginRoleProto* other);

  // implements Message ----------------------------------------------

  LoginRoleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRoleProto& from);
  void MergeFrom(const LoginRoleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 createtime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 6;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 7;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 7;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // @@protoc_insertion_point(class_scope:proto_ff.LoginRoleProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_facade();
  inline void clear_has_facade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 createtime_;
  ::proto_ff::RoleFacadeProto* facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LoginRoleProto* default_instance_;
};
// -------------------------------------------------------------------

class LoginSyncProto : public ::google::protobuf::Message {
 public:
  LoginSyncProto();
  virtual ~LoginSyncProto();

  LoginSyncProto(const LoginSyncProto& from);

  inline LoginSyncProto& operator=(const LoginSyncProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginSyncProto& default_instance();

  void Swap(LoginSyncProto* other);

  // implements Message ----------------------------------------------

  LoginSyncProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginSyncProto& from);
  void MergeFrom(const LoginSyncProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional string guild_name = 2;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 2;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // optional int32 guild_duty = 3;
  inline bool has_guild_duty() const;
  inline void clear_guild_duty();
  static const int kGuildDutyFieldNumber = 3;
  inline ::google::protobuf::int32 guild_duty() const;
  inline void set_guild_duty(::google::protobuf::int32 value);

  // optional uint64 guild_leader = 4;
  inline bool has_guild_leader() const;
  inline void clear_guild_leader();
  static const int kGuildLeaderFieldNumber = 4;
  inline ::google::protobuf::uint64 guild_leader() const;
  inline void set_guild_leader(::google::protobuf::uint64 value);

  // optional uint32 team_id = 5;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 5;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional uint64 leader = 6;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 6;
  inline ::google::protobuf::uint64 leader() const;
  inline void set_leader(::google::protobuf::uint64 value);

  // optional int32 mem_count = 7;
  inline bool has_mem_count() const;
  inline void clear_mem_count();
  static const int kMemCountFieldNumber = 7;
  inline ::google::protobuf::int32 mem_count() const;
  inline void set_mem_count(::google::protobuf::int32 value);

  // optional int32 cloness_lev = 8;
  inline bool has_cloness_lev() const;
  inline void clear_cloness_lev();
  static const int kClonessLevFieldNumber = 8;
  inline ::google::protobuf::int32 cloness_lev() const;
  inline void set_cloness_lev(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LoginSyncProto)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_guild_duty();
  inline void clear_has_guild_duty();
  inline void set_has_guild_leader();
  inline void clear_has_guild_leader();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_mem_count();
  inline void clear_has_mem_count();
  inline void set_has_cloness_lev();
  inline void clear_has_cloness_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* guild_name_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::int32 guild_duty_;
  ::google::protobuf::uint64 guild_leader_;
  ::google::protobuf::uint64 leader_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::int32 mem_count_;
  ::google::protobuf::int32 cloness_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LoginSyncProto* default_instance_;
};
// -------------------------------------------------------------------

class CenterRoleProto : public ::google::protobuf::Message {
 public:
  CenterRoleProto();
  virtual ~CenterRoleProto();

  CenterRoleProto(const CenterRoleProto& from);

  inline CenterRoleProto& operator=(const CenterRoleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterRoleProto& default_instance();

  void Swap(CenterRoleProto* other);

  // implements Message ----------------------------------------------

  CenterRoleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterRoleProto& from);
  void MergeFrom(const CenterRoleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 prof = 4;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 4;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 fight = 6;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 6;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 lastlogout = 7;
  inline bool has_lastlogout() const;
  inline void clear_lastlogout();
  static const int kLastlogoutFieldNumber = 7;
  inline ::google::protobuf::uint64 lastlogout() const;
  inline void set_lastlogout(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 8;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 8;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint32 vip_level = 9;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional int64 hp = 10;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 10;
  inline ::google::protobuf::int64 hp() const;
  inline void set_hp(::google::protobuf::int64 value);

  // optional int64 max_hp = 11;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 11;
  inline ::google::protobuf::int64 max_hp() const;
  inline void set_max_hp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CenterRoleProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_lastlogout();
  inline void clear_has_lastlogout();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 lastlogout_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 vip_level_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::int64 hp_;
  ::google::protobuf::int64 max_hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CenterRoleProto* default_instance_;
};
// -------------------------------------------------------------------

class SocialRoleProto : public ::google::protobuf::Message {
 public:
  SocialRoleProto();
  virtual ~SocialRoleProto();

  SocialRoleProto(const SocialRoleProto& from);

  inline SocialRoleProto& operator=(const SocialRoleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialRoleProto& default_instance();

  void Swap(SocialRoleProto* other);

  // implements Message ----------------------------------------------

  SocialRoleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialRoleProto& from);
  void MergeFrom(const SocialRoleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 prof = 4;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 4;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 fight = 6;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 6;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 lastlogout = 7;
  inline bool has_lastlogout() const;
  inline void clear_lastlogout();
  static const int kLastlogoutFieldNumber = 7;
  inline ::google::protobuf::uint64 lastlogout() const;
  inline void set_lastlogout(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 8;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 8;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint32 vip_level = 9;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional uint32 zid = 10;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 10;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional bool isonline = 11;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsonlineFieldNumber = 11;
  inline bool isonline() const;
  inline void set_isonline(bool value);

  // optional int64 hp = 12;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 12;
  inline ::google::protobuf::int64 hp() const;
  inline void set_hp(::google::protobuf::int64 value);

  // optional int64 max_hp = 13;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 13;
  inline ::google::protobuf::int64 max_hp() const;
  inline void set_max_hp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SocialRoleProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_lastlogout();
  inline void clear_has_lastlogout();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_isonline();
  inline void clear_has_isonline();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 lastlogout_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 vip_level_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint32 zid_;
  bool isonline_;
  ::google::protobuf::int64 hp_;
  ::google::protobuf::int64 max_hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SocialRoleProto* default_instance_;
};
// -------------------------------------------------------------------

class Attr : public ::google::protobuf::Message {
 public:
  Attr();
  virtual ~Attr();

  Attr(const Attr& from);

  inline Attr& operator=(const Attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attr& default_instance();

  void Swap(Attr* other);

  // implements Message ----------------------------------------------

  Attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attr& from);
  void MergeFrom(const Attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Attr)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Attr* default_instance_;
};
// -------------------------------------------------------------------

class BlueStarAttr : public ::google::protobuf::Message {
 public:
  BlueStarAttr();
  virtual ~BlueStarAttr();

  BlueStarAttr(const BlueStarAttr& from);

  inline BlueStarAttr& operator=(const BlueStarAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlueStarAttr& default_instance();

  void Swap(BlueStarAttr* other);

  // implements Message ----------------------------------------------

  BlueStarAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlueStarAttr& from);
  void MergeFrom(const BlueStarAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // optional int32 lv_part = 3;
  inline bool has_lv_part() const;
  inline void clear_lv_part();
  static const int kLvPartFieldNumber = 3;
  inline ::google::protobuf::int32 lv_part() const;
  inline void set_lv_part(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BlueStarAttr)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_lv_part();
  inline void clear_has_lv_part();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 lv_part_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BlueStarAttr* default_instance_;
};
// -------------------------------------------------------------------

class ItemProtoInfo : public ::google::protobuf::Message {
 public:
  ItemProtoInfo();
  virtual ~ItemProtoInfo();

  ItemProtoInfo(const ItemProtoInfo& from);

  inline ItemProtoInfo& operator=(const ItemProtoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemProtoInfo& default_instance();

  void Swap(ItemProtoInfo* other);

  // implements Message ----------------------------------------------

  ItemProtoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemProtoInfo& from);
  void MergeFrom(const ItemProtoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional uint64 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional int64 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int64 item_num() const;
  inline void set_item_num(::google::protobuf::int64 value);

  // optional int32 bind = 4;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 4;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated .proto_ff.Attr base = 6;
  inline int base_size() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 6;
  inline const ::proto_ff::Attr& base(int index) const;
  inline ::proto_ff::Attr* mutable_base(int index);
  inline ::proto_ff::Attr* add_base();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      base() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_base();

  // repeated .proto_ff.Attr refine = 7;
  inline int refine_size() const;
  inline void clear_refine();
  static const int kRefineFieldNumber = 7;
  inline const ::proto_ff::Attr& refine(int index) const;
  inline ::proto_ff::Attr* mutable_refine(int index);
  inline ::proto_ff::Attr* add_refine();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      refine() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_refine();

  // repeated .proto_ff.BlueStarAttr blue = 8;
  inline int blue_size() const;
  inline void clear_blue();
  static const int kBlueFieldNumber = 8;
  inline const ::proto_ff::BlueStarAttr& blue(int index) const;
  inline ::proto_ff::BlueStarAttr* mutable_blue(int index);
  inline ::proto_ff::BlueStarAttr* add_blue();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >&
      blue() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >*
      mutable_blue();

  // repeated .proto_ff.Attr god = 9;
  inline int god_size() const;
  inline void clear_god();
  static const int kGodFieldNumber = 9;
  inline const ::proto_ff::Attr& god(int index) const;
  inline ::proto_ff::Attr* mutable_god(int index);
  inline ::proto_ff::Attr* add_god();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      god() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_god();

  // repeated .proto_ff.Attr special = 10;
  inline int special_size() const;
  inline void clear_special();
  static const int kSpecialFieldNumber = 10;
  inline const ::proto_ff::Attr& special(int index) const;
  inline ::proto_ff::Attr* mutable_special(int index);
  inline ::proto_ff::Attr* add_special();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      special() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_special();

  // optional uint64 expireTime = 11;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 11;
  inline ::google::protobuf::uint64 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemProtoInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 bind_;
  ::google::protobuf::int64 item_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > base_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > refine_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr > blue_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > god_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > special_;
  ::google::protobuf::uint64 expiretime_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ItemProtoInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipSlotInfo : public ::google::protobuf::Message {
 public:
  EquipSlotInfo();
  virtual ~EquipSlotInfo();

  EquipSlotInfo(const EquipSlotInfo& from);

  inline EquipSlotInfo& operator=(const EquipSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSlotInfo& default_instance();

  void Swap(EquipSlotInfo* other);

  // implements Message ----------------------------------------------

  EquipSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSlotInfo& from);
  void MergeFrom(const EquipSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot_pos = 1;
  inline bool has_slot_pos() const;
  inline void clear_slot_pos();
  static const int kSlotPosFieldNumber = 1;
  inline ::google::protobuf::int32 slot_pos() const;
  inline void set_slot_pos(::google::protobuf::int32 value);

  // optional int64 total_score = 2;
  inline bool has_total_score() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 2;
  inline ::google::protobuf::int64 total_score() const;
  inline void set_total_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EquipSlotInfo)
 private:
  inline void set_has_slot_pos();
  inline void clear_has_slot_pos();
  inline void set_has_total_score();
  inline void clear_has_total_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 total_score_;
  ::google::protobuf::int32 slot_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EquipSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipInfo : public ::google::protobuf::Message {
 public:
  EquipInfo();
  virtual ~EquipInfo();

  EquipInfo(const EquipInfo& from);

  inline EquipInfo& operator=(const EquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipInfo& default_instance();

  void Swap(EquipInfo* other);

  // implements Message ----------------------------------------------

  EquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipInfo& from);
  void MergeFrom(const EquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional .proto_ff.ItemProtoInfo equip = 2;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 2;
  inline const ::proto_ff::ItemProtoInfo& equip() const;
  inline ::proto_ff::ItemProtoInfo* mutable_equip();
  inline ::proto_ff::ItemProtoInfo* release_equip();
  inline void set_allocated_equip(::proto_ff::ItemProtoInfo* equip);

  // optional .proto_ff.EquipSlotInfo slot = 3;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 3;
  inline const ::proto_ff::EquipSlotInfo& slot() const;
  inline ::proto_ff::EquipSlotInfo* mutable_slot();
  inline ::proto_ff::EquipSlotInfo* release_slot();
  inline void set_allocated_slot(::proto_ff::EquipSlotInfo* slot);

  // @@protoc_insertion_point(class_scope:proto_ff.EquipInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_equip();
  inline void clear_has_equip();
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::ItemProtoInfo* equip_;
  ::proto_ff::EquipSlotInfo* slot_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemSimpleProto : public ::google::protobuf::Message {
 public:
  ItemSimpleProto();
  virtual ~ItemSimpleProto();

  ItemSimpleProto(const ItemSimpleProto& from);

  inline ItemSimpleProto& operator=(const ItemSimpleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemSimpleProto& default_instance();

  void Swap(ItemSimpleProto* other);

  // implements Message ----------------------------------------------

  ItemSimpleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemSimpleProto& from);
  void MergeFrom(const ItemSimpleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional int64 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int64 num() const;
  inline void set_num(::google::protobuf::int64 value);

  // optional int32 bind = 3;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 3;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemSimpleProto)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_bind();
  inline void clear_has_bind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::int64 num_;
  ::google::protobuf::int32 bind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ItemSimpleProto* default_instance_;
};
// -------------------------------------------------------------------

class MultItemSimpleProto : public ::google::protobuf::Message {
 public:
  MultItemSimpleProto();
  virtual ~MultItemSimpleProto();

  MultItemSimpleProto(const MultItemSimpleProto& from);

  inline MultItemSimpleProto& operator=(const MultItemSimpleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MultItemSimpleProto& default_instance();

  void Swap(MultItemSimpleProto* other);

  // implements Message ----------------------------------------------

  MultItemSimpleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MultItemSimpleProto& from);
  void MergeFrom(const MultItemSimpleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ItemSimpleProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::ItemSimpleProto& info(int index) const;
  inline ::proto_ff::ItemSimpleProto* mutable_info(int index);
  inline ::proto_ff::ItemSimpleProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.MultItemSimpleProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MultItemSimpleProto* default_instance_;
};
// -------------------------------------------------------------------

class MailParamProto : public ::google::protobuf::Message {
 public:
  MailParamProto();
  virtual ~MailParamProto();

  MailParamProto(const MailParamProto& from);

  inline MailParamProto& operator=(const MailParamProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailParamProto& default_instance();

  void Swap(MailParamProto* other);

  // implements Message ----------------------------------------------

  MailParamProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailParamProto& from);
  void MergeFrom(const MailParamProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cfgid = 1;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgidFieldNumber = 1;
  inline ::google::protobuf::uint64 cfgid() const;
  inline void set_cfgid(::google::protobuf::uint64 value);

  // repeated bytes str_param = 2;
  inline int str_param_size() const;
  inline void clear_str_param();
  static const int kStrParamFieldNumber = 2;
  inline const ::std::string& str_param(int index) const;
  inline ::std::string* mutable_str_param(int index);
  inline void set_str_param(int index, const ::std::string& value);
  inline void set_str_param(int index, const char* value);
  inline void set_str_param(int index, const void* value, size_t size);
  inline ::std::string* add_str_param();
  inline void add_str_param(const ::std::string& value);
  inline void add_str_param(const char* value);
  inline void add_str_param(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& str_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_str_param();

  // repeated uint64 int_param = 3;
  inline int int_param_size() const;
  inline void clear_int_param();
  static const int kIntParamFieldNumber = 3;
  inline ::google::protobuf::uint64 int_param(int index) const;
  inline void set_int_param(int index, ::google::protobuf::uint64 value);
  inline void add_int_param(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      int_param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_int_param();

  // @@protoc_insertion_point(class_scope:proto_ff.MailParamProto)
 private:
  inline void set_has_cfgid();
  inline void clear_has_cfgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cfgid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> str_param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > int_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailParamProto* default_instance_;
};
// -------------------------------------------------------------------

class MailStrProto : public ::google::protobuf::Message {
 public:
  MailStrProto();
  virtual ~MailStrProto();

  MailStrProto(const MailStrProto& from);

  inline MailStrProto& operator=(const MailStrProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailStrProto& default_instance();

  void Swap(MailStrProto* other);

  // implements Message ----------------------------------------------

  MailStrProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailStrProto& from);
  void MergeFrom(const MailStrProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const void* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // optional .proto_ff.MailParamProto param = 2;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline const ::proto_ff::MailParamProto& param() const;
  inline ::proto_ff::MailParamProto* mutable_param();
  inline ::proto_ff::MailParamProto* release_param();
  inline void set_allocated_param(::proto_ff::MailParamProto* param);

  // @@protoc_insertion_point(class_scope:proto_ff.MailStrProto)
 private:
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* str_;
  ::proto_ff::MailParamProto* param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailStrProto* default_instance_;
};
// -------------------------------------------------------------------

class MailAttachmentList : public ::google::protobuf::Message {
 public:
  MailAttachmentList();
  virtual ~MailAttachmentList();

  MailAttachmentList(const MailAttachmentList& from);

  inline MailAttachmentList& operator=(const MailAttachmentList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailAttachmentList& default_instance();

  void Swap(MailAttachmentList* other);

  // implements Message ----------------------------------------------

  MailAttachmentList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailAttachmentList& from);
  void MergeFrom(const MailAttachmentList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ItemProtoInfo itemInfo = 1;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 1;
  inline const ::proto_ff::ItemProtoInfo& iteminfo(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_iteminfo(int index);
  inline ::proto_ff::ItemProtoInfo* add_iteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_iteminfo();

  // @@protoc_insertion_point(class_scope:proto_ff.MailAttachmentList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > iteminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailAttachmentList* default_instance_;
};
// -------------------------------------------------------------------

class MailHead : public ::google::protobuf::Message {
 public:
  MailHead();
  virtual ~MailHead();

  MailHead(const MailHead& from);

  inline MailHead& operator=(const MailHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailHead& default_instance();

  void Swap(MailHead* other);

  // implements Message ----------------------------------------------

  MailHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailHead& from);
  void MergeFrom(const MailHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 sendPlayerId = 3;
  inline bool has_sendplayerid() const;
  inline void clear_sendplayerid();
  static const int kSendPlayerIdFieldNumber = 3;
  inline ::google::protobuf::uint64 sendplayerid() const;
  inline void set_sendplayerid(::google::protobuf::uint64 value);

  // optional bytes sendPlayerName = 4;
  inline bool has_sendplayername() const;
  inline void clear_sendplayername();
  static const int kSendPlayerNameFieldNumber = 4;
  inline const ::std::string& sendplayername() const;
  inline void set_sendplayername(const ::std::string& value);
  inline void set_sendplayername(const char* value);
  inline void set_sendplayername(const void* value, size_t size);
  inline ::std::string* mutable_sendplayername();
  inline ::std::string* release_sendplayername();
  inline void set_allocated_sendplayername(::std::string* sendplayername);

  // optional uint64 destPlayerId = 5;
  inline bool has_destplayerid() const;
  inline void clear_destplayerid();
  static const int kDestPlayerIdFieldNumber = 5;
  inline ::google::protobuf::uint64 destplayerid() const;
  inline void set_destplayerid(::google::protobuf::uint64 value);

  // optional .proto_ff.MailStrProto topic = 6;
  inline bool has_topic() const;
  inline void clear_topic();
  static const int kTopicFieldNumber = 6;
  inline const ::proto_ff::MailStrProto& topic() const;
  inline ::proto_ff::MailStrProto* mutable_topic();
  inline ::proto_ff::MailStrProto* release_topic();
  inline void set_allocated_topic(::proto_ff::MailStrProto* topic);

  // optional uint64 createTime = 7;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional uint32 status = 8;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 8;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional int32 fetch = 9;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 9;
  inline ::google::protobuf::int32 fetch() const;
  inline void set_fetch(::google::protobuf::int32 value);

  // optional int32 has_attach = 10;
  inline bool has_has_attach() const;
  inline void clear_has_attach();
  static const int kHasAttachFieldNumber = 10;
  inline ::google::protobuf::int32 has_attach() const;
  inline void set_has_attach(::google::protobuf::int32 value);

  // optional uint64 begin_time = 11;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 11;
  inline ::google::protobuf::uint64 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint64 value);

  // optional uint64 end_time = 12;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 12;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MailHead)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_sendplayerid();
  inline void clear_has_sendplayerid();
  inline void set_has_sendplayername();
  inline void clear_has_sendplayername();
  inline void set_has_destplayerid();
  inline void clear_has_destplayerid();
  inline void set_has_topic();
  inline void clear_has_topic();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_has_attach();
  inline void clear_has_has_attach();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::uint64 sendplayerid_;
  ::std::string* sendplayername_;
  ::google::protobuf::uint64 destplayerid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 status_;
  ::proto_ff::MailStrProto* topic_;
  ::google::protobuf::uint64 createtime_;
  ::google::protobuf::int32 fetch_;
  ::google::protobuf::int32 has_attach_;
  ::google::protobuf::uint64 begin_time_;
  ::google::protobuf::uint64 end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailHead* default_instance_;
};
// -------------------------------------------------------------------

class MailInfo : public ::google::protobuf::Message {
 public:
  MailInfo();
  virtual ~MailInfo();

  MailInfo(const MailInfo& from);

  inline MailInfo& operator=(const MailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailInfo& default_instance();

  void Swap(MailInfo* other);

  // implements Message ----------------------------------------------

  MailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailInfo& from);
  void MergeFrom(const MailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.MailHead mailHead = 1;
  inline bool has_mailhead() const;
  inline void clear_mailhead();
  static const int kMailHeadFieldNumber = 1;
  inline const ::proto_ff::MailHead& mailhead() const;
  inline ::proto_ff::MailHead* mutable_mailhead();
  inline ::proto_ff::MailHead* release_mailhead();
  inline void set_allocated_mailhead(::proto_ff::MailHead* mailhead);

  // optional .proto_ff.MailStrProto content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::proto_ff::MailStrProto& content() const;
  inline ::proto_ff::MailStrProto* mutable_content();
  inline ::proto_ff::MailStrProto* release_content();
  inline void set_allocated_content(::proto_ff::MailStrProto* content);

  // optional uint64 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::uint64 gold() const;
  inline void set_gold(::google::protobuf::uint64 value);

  // optional uint64 diamond = 4;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 4;
  inline ::google::protobuf::uint64 diamond() const;
  inline void set_diamond(::google::protobuf::uint64 value);

  // optional uint64 bindDiamond = 5;
  inline bool has_binddiamond() const;
  inline void clear_binddiamond();
  static const int kBindDiamondFieldNumber = 5;
  inline ::google::protobuf::uint64 binddiamond() const;
  inline void set_binddiamond(::google::protobuf::uint64 value);

  // optional uint64 magiccrystal = 6;
  inline bool has_magiccrystal() const;
  inline void clear_magiccrystal();
  static const int kMagiccrystalFieldNumber = 6;
  inline ::google::protobuf::uint64 magiccrystal() const;
  inline void set_magiccrystal(::google::protobuf::uint64 value);

  // optional uint64 prestige = 7;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 7;
  inline ::google::protobuf::uint64 prestige() const;
  inline void set_prestige(::google::protobuf::uint64 value);

  // optional .proto_ff.MailAttachmentList attachmentList = 8;
  inline bool has_attachmentlist() const;
  inline void clear_attachmentlist();
  static const int kAttachmentListFieldNumber = 8;
  inline const ::proto_ff::MailAttachmentList& attachmentlist() const;
  inline ::proto_ff::MailAttachmentList* mutable_attachmentlist();
  inline ::proto_ff::MailAttachmentList* release_attachmentlist();
  inline void set_allocated_attachmentlist(::proto_ff::MailAttachmentList* attachmentlist);

  // optional int32 source = 9;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 9;
  inline ::google::protobuf::int32 source() const;
  inline void set_source(::google::protobuf::int32 value);

  // optional int64 sourceVal = 10;
  inline bool has_sourceval() const;
  inline void clear_sourceval();
  static const int kSourceValFieldNumber = 10;
  inline ::google::protobuf::int64 sourceval() const;
  inline void set_sourceval(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MailInfo)
 private:
  inline void set_has_mailhead();
  inline void clear_has_mailhead();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_binddiamond();
  inline void clear_has_binddiamond();
  inline void set_has_magiccrystal();
  inline void clear_has_magiccrystal();
  inline void set_has_prestige();
  inline void clear_has_prestige();
  inline void set_has_attachmentlist();
  inline void clear_has_attachmentlist();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_sourceval();
  inline void clear_has_sourceval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::MailHead* mailhead_;
  ::proto_ff::MailStrProto* content_;
  ::google::protobuf::uint64 gold_;
  ::google::protobuf::uint64 diamond_;
  ::google::protobuf::uint64 binddiamond_;
  ::google::protobuf::uint64 magiccrystal_;
  ::google::protobuf::uint64 prestige_;
  ::proto_ff::MailAttachmentList* attachmentlist_;
  ::google::protobuf::int64 sourceval_;
  ::google::protobuf::int32 source_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailInfo* default_instance_;
};
// -------------------------------------------------------------------

class WebMailItemProto : public ::google::protobuf::Message {
 public:
  WebMailItemProto();
  virtual ~WebMailItemProto();

  WebMailItemProto(const WebMailItemProto& from);

  inline WebMailItemProto& operator=(const WebMailItemProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebMailItemProto& default_instance();

  void Swap(WebMailItemProto* other);

  // implements Message ----------------------------------------------

  WebMailItemProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebMailItemProto& from);
  void MergeFrom(const WebMailItemProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint64 num() const;
  inline void set_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WebMailItemProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WebMailItemProto* default_instance_;
};
// -------------------------------------------------------------------

class WebMailDataProto : public ::google::protobuf::Message {
 public:
  WebMailDataProto();
  virtual ~WebMailDataProto();

  WebMailDataProto(const WebMailDataProto& from);

  inline WebMailDataProto& operator=(const WebMailDataProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebMailDataProto& default_instance();

  void Swap(WebMailDataProto* other);

  // implements Message ----------------------------------------------

  WebMailDataProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebMailDataProto& from);
  void MergeFrom(const WebMailDataProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // optional uint64 createTime = 2;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional .proto_ff.MailStrProto topic = 3;
  inline bool has_topic() const;
  inline void clear_topic();
  static const int kTopicFieldNumber = 3;
  inline const ::proto_ff::MailStrProto& topic() const;
  inline ::proto_ff::MailStrProto* mutable_topic();
  inline ::proto_ff::MailStrProto* release_topic();
  inline void set_allocated_topic(::proto_ff::MailStrProto* topic);

  // optional int32 fetch = 4;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 4;
  inline ::google::protobuf::int32 fetch() const;
  inline void set_fetch(::google::protobuf::int32 value);

  // optional .proto_ff.MailStrProto content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::proto_ff::MailStrProto& content() const;
  inline ::proto_ff::MailStrProto* mutable_content();
  inline ::proto_ff::MailStrProto* release_content();
  inline void set_allocated_content(::proto_ff::MailStrProto* content);

  // optional uint64 gold = 6;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 6;
  inline ::google::protobuf::uint64 gold() const;
  inline void set_gold(::google::protobuf::uint64 value);

  // optional uint64 diamond = 7;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 7;
  inline ::google::protobuf::uint64 diamond() const;
  inline void set_diamond(::google::protobuf::uint64 value);

  // optional uint64 bindDiamond = 8;
  inline bool has_binddiamond() const;
  inline void clear_binddiamond();
  static const int kBindDiamondFieldNumber = 8;
  inline ::google::protobuf::uint64 binddiamond() const;
  inline void set_binddiamond(::google::protobuf::uint64 value);

  // optional uint64 arenaScore = 9;
  inline bool has_arenascore() const;
  inline void clear_arenascore();
  static const int kArenaScoreFieldNumber = 9;
  inline ::google::protobuf::uint64 arenascore() const;
  inline void set_arenascore(::google::protobuf::uint64 value);

  // optional uint64 magiccrystal = 10;
  inline bool has_magiccrystal() const;
  inline void clear_magiccrystal();
  static const int kMagiccrystalFieldNumber = 10;
  inline ::google::protobuf::uint64 magiccrystal() const;
  inline void set_magiccrystal(::google::protobuf::uint64 value);

  // optional uint64 prestige = 11;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 11;
  inline ::google::protobuf::uint64 prestige() const;
  inline void set_prestige(::google::protobuf::uint64 value);

  // repeated .proto_ff.WebMailItemProto itemList = 12;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 12;
  inline const ::proto_ff::WebMailItemProto& itemlist(int index) const;
  inline ::proto_ff::WebMailItemProto* mutable_itemlist(int index);
  inline ::proto_ff::WebMailItemProto* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:proto_ff.WebMailDataProto)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_topic();
  inline void clear_has_topic();
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_binddiamond();
  inline void clear_has_binddiamond();
  inline void set_has_arenascore();
  inline void clear_has_arenascore();
  inline void set_has_magiccrystal();
  inline void clear_has_magiccrystal();
  inline void set_has_prestige();
  inline void clear_has_prestige();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::uint64 createtime_;
  ::proto_ff::MailStrProto* topic_;
  ::proto_ff::MailStrProto* content_;
  ::google::protobuf::uint64 gold_;
  ::google::protobuf::uint64 diamond_;
  ::google::protobuf::uint64 binddiamond_;
  ::google::protobuf::uint64 arenascore_;
  ::google::protobuf::uint64 magiccrystal_;
  ::google::protobuf::uint64 prestige_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto > itemlist_;
  ::google::protobuf::int32 fetch_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WebMailDataProto* default_instance_;
};
// -------------------------------------------------------------------

class UseItemArgProto : public ::google::protobuf::Message {
 public:
  UseItemArgProto();
  virtual ~UseItemArgProto();

  UseItemArgProto(const UseItemArgProto& from);

  inline UseItemArgProto& operator=(const UseItemArgProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseItemArgProto& default_instance();

  void Swap(UseItemArgProto* other);

  // implements Message ----------------------------------------------

  UseItemArgProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseItemArgProto& from);
  void MergeFrom(const UseItemArgProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 int_param = 1;
  inline bool has_int_param() const;
  inline void clear_int_param();
  static const int kIntParamFieldNumber = 1;
  inline ::google::protobuf::int64 int_param() const;
  inline void set_int_param(::google::protobuf::int64 value);

  // optional bytes str_param = 2;
  inline bool has_str_param() const;
  inline void clear_str_param();
  static const int kStrParamFieldNumber = 2;
  inline const ::std::string& str_param() const;
  inline void set_str_param(const ::std::string& value);
  inline void set_str_param(const char* value);
  inline void set_str_param(const void* value, size_t size);
  inline ::std::string* mutable_str_param();
  inline ::std::string* release_str_param();
  inline void set_allocated_str_param(::std::string* str_param);

  // repeated uint64 item_lst = 3;
  inline int item_lst_size() const;
  inline void clear_item_lst();
  static const int kItemLstFieldNumber = 3;
  inline ::google::protobuf::uint64 item_lst(int index) const;
  inline void set_item_lst(int index, ::google::protobuf::uint64 value);
  inline void add_item_lst(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      item_lst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_item_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.UseItemArgProto)
 private:
  inline void set_has_int_param();
  inline void clear_has_int_param();
  inline void set_has_str_param();
  inline void clear_has_str_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 int_param_;
  ::std::string* str_param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > item_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static UseItemArgProto* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRoleFacadeCastRsp : public ::google::protobuf::Message {
 public:
  NotifyRoleFacadeCastRsp();
  virtual ~NotifyRoleFacadeCastRsp();

  NotifyRoleFacadeCastRsp(const NotifyRoleFacadeCastRsp& from);

  inline NotifyRoleFacadeCastRsp& operator=(const NotifyRoleFacadeCastRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRoleFacadeCastRsp& default_instance();

  void Swap(NotifyRoleFacadeCastRsp* other);

  // implements Message ----------------------------------------------

  NotifyRoleFacadeCastRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRoleFacadeCastRsp& from);
  void MergeFrom(const NotifyRoleFacadeCastRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 2;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 2;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyRoleFacadeCastRsp)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_facade();
  inline void clear_has_facade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::proto_ff::RoleFacadeProto* facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyRoleFacadeCastRsp* default_instance_;
};
// -------------------------------------------------------------------

class FunctionUnlockInfoData : public ::google::protobuf::Message {
 public:
  FunctionUnlockInfoData();
  virtual ~FunctionUnlockInfoData();

  FunctionUnlockInfoData(const FunctionUnlockInfoData& from);

  inline FunctionUnlockInfoData& operator=(const FunctionUnlockInfoData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockInfoData& default_instance();

  void Swap(FunctionUnlockInfoData* other);

  // implements Message ----------------------------------------------

  FunctionUnlockInfoData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockInfoData& from);
  void MergeFrom(const FunctionUnlockInfoData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 unlockId = 1;
  inline bool has_unlockid() const;
  inline void clear_unlockid();
  static const int kUnlockIdFieldNumber = 1;
  inline ::google::protobuf::uint64 unlockid() const;
  inline void set_unlockid(::google::protobuf::uint64 value);

  // optional bool get_reward = 2;
  inline bool has_get_reward() const;
  inline void clear_get_reward();
  static const int kGetRewardFieldNumber = 2;
  inline bool get_reward() const;
  inline void set_get_reward(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockInfoData)
 private:
  inline void set_has_unlockid();
  inline void clear_has_unlockid();
  inline void set_has_get_reward();
  inline void clear_has_get_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 unlockid_;
  bool get_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockInfoData* default_instance_;
};
// -------------------------------------------------------------------

class FunctionUnlockInfo : public ::google::protobuf::Message {
 public:
  FunctionUnlockInfo();
  virtual ~FunctionUnlockInfo();

  FunctionUnlockInfo(const FunctionUnlockInfo& from);

  inline FunctionUnlockInfo& operator=(const FunctionUnlockInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockInfo& default_instance();

  void Swap(FunctionUnlockInfo* other);

  // implements Message ----------------------------------------------

  FunctionUnlockInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockInfo& from);
  void MergeFrom(const FunctionUnlockInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FunctionUnlockInfoData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::FunctionUnlockInfoData& data(int index) const;
  inline ::proto_ff::FunctionUnlockInfoData* mutable_data(int index);
  inline ::proto_ff::FunctionUnlockInfoData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockInfo* default_instance_;
};
// -------------------------------------------------------------------

class RolePlayerMiniInfo : public ::google::protobuf::Message {
 public:
  RolePlayerMiniInfo();
  virtual ~RolePlayerMiniInfo();

  RolePlayerMiniInfo(const RolePlayerMiniInfo& from);

  inline RolePlayerMiniInfo& operator=(const RolePlayerMiniInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RolePlayerMiniInfo& default_instance();

  void Swap(RolePlayerMiniInfo* other);

  // implements Message ----------------------------------------------

  RolePlayerMiniInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RolePlayerMiniInfo& from);
  void MergeFrom(const RolePlayerMiniInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional string playerName = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional uint32 zid = 3;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 3;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 closeness = 6;
  inline bool has_closeness() const;
  inline void clear_closeness();
  static const int kClosenessFieldNumber = 6;
  inline ::google::protobuf::uint32 closeness() const;
  inline void set_closeness(::google::protobuf::uint32 value);

  // optional uint32 recentType = 7;
  inline bool has_recenttype() const;
  inline void clear_recenttype();
  static const int kRecentTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 recenttype() const;
  inline void set_recenttype(::google::protobuf::uint32 value);

  // optional uint64 recentTime = 8;
  inline bool has_recenttime() const;
  inline void clear_recenttime();
  static const int kRecentTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 recenttime() const;
  inline void set_recenttime(::google::protobuf::uint64 value);

  // optional uint32 prof = 9;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 9;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 teamId = 10;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 10;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint32 unionId = 11;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIdFieldNumber = 11;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);

  // optional uint64 fightPower = 12;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightPowerFieldNumber = 12;
  inline ::google::protobuf::uint64 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint64 value);

  // optional uint32 killMeTimes = 13;
  inline bool has_killmetimes() const;
  inline void clear_killmetimes();
  static const int kKillMeTimesFieldNumber = 13;
  inline ::google::protobuf::uint32 killmetimes() const;
  inline void set_killmetimes(::google::protobuf::uint32 value);

  // optional uint64 offlineTime = 14;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflineTimeFieldNumber = 14;
  inline ::google::protobuf::uint64 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint64 value);

  // optional string connect = 15;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 15;
  inline const ::std::string& connect() const;
  inline void set_connect(const ::std::string& value);
  inline void set_connect(const char* value);
  inline void set_connect(const char* value, size_t size);
  inline ::std::string* mutable_connect();
  inline ::std::string* release_connect();
  inline void set_allocated_connect(::std::string* connect);

  // optional bool online = 16;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 16;
  inline bool online() const;
  inline void set_online(bool value);

  // optional uint32 vipLevel = 17;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 17;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleFacadeProto facade = 18;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 18;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint32 marry = 19;
  inline bool has_marry() const;
  inline void clear_marry();
  static const int kMarryFieldNumber = 19;
  inline ::google::protobuf::uint32 marry() const;
  inline void set_marry(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RolePlayerMiniInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_closeness();
  inline void clear_has_closeness();
  inline void set_has_recenttype();
  inline void clear_has_recenttype();
  inline void set_has_recenttime();
  inline void clear_has_recenttime();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_unionid();
  inline void clear_has_unionid();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_killmetimes();
  inline void clear_has_killmetimes();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_connect();
  inline void clear_has_connect();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_marry();
  inline void clear_has_marry();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::std::string* playername_;
  ::google::protobuf::uint32 zid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 closeness_;
  ::google::protobuf::uint32 recenttype_;
  ::google::protobuf::uint64 recenttime_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint64 fightpower_;
  ::google::protobuf::uint32 unionid_;
  ::google::protobuf::uint32 killmetimes_;
  ::google::protobuf::uint64 offlinetime_;
  ::std::string* connect_;
  bool online_;
  ::google::protobuf::uint32 viplevel_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint32 marry_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RolePlayerMiniInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendInfo : public ::google::protobuf::Message {
 public:
  FriendInfo();
  virtual ~FriendInfo();

  FriendInfo(const FriendInfo& from);

  inline FriendInfo& operator=(const FriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInfo& default_instance();

  void Swap(FriendInfo* other);

  // implements Message ----------------------------------------------

  FriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendInfo& from);
  void MergeFrom(const FriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 closeness = 2;
  inline bool has_closeness() const;
  inline void clear_closeness();
  static const int kClosenessFieldNumber = 2;
  inline ::google::protobuf::uint32 closeness() const;
  inline void set_closeness(::google::protobuf::uint32 value);

  // optional uint32 todayCloseness = 3;
  inline bool has_todaycloseness() const;
  inline void clear_todaycloseness();
  static const int kTodayClosenessFieldNumber = 3;
  inline ::google::protobuf::uint32 todaycloseness() const;
  inline void set_todaycloseness(::google::protobuf::uint32 value);

  // optional uint64 updateTime = 4;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 updatetime() const;
  inline void set_updatetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FriendInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_closeness();
  inline void clear_has_closeness();
  inline void set_has_todaycloseness();
  inline void clear_has_todaycloseness();
  inline void set_has_updatetime();
  inline void clear_has_updatetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 closeness_;
  ::google::protobuf::uint32 todaycloseness_;
  ::google::protobuf::uint64 updatetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendApplyInfo : public ::google::protobuf::Message {
 public:
  FriendApplyInfo();
  virtual ~FriendApplyInfo();

  FriendApplyInfo(const FriendApplyInfo& from);

  inline FriendApplyInfo& operator=(const FriendApplyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendApplyInfo& default_instance();

  void Swap(FriendApplyInfo* other);

  // implements Message ----------------------------------------------

  FriendApplyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendApplyInfo& from);
  void MergeFrom(const FriendApplyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional string connect = 2;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 2;
  inline const ::std::string& connect() const;
  inline void set_connect(const ::std::string& value);
  inline void set_connect(const char* value);
  inline void set_connect(const char* value, size_t size);
  inline ::std::string* mutable_connect();
  inline ::std::string* release_connect();
  inline void set_allocated_connect(::std::string* connect);

  // @@protoc_insertion_point(class_scope:proto_ff.FriendApplyInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_connect();
  inline void clear_has_connect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::std::string* connect_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FriendApplyInfo* default_instance_;
};
// -------------------------------------------------------------------

class RelationHateInfo : public ::google::protobuf::Message {
 public:
  RelationHateInfo();
  virtual ~RelationHateInfo();

  RelationHateInfo(const RelationHateInfo& from);

  inline RelationHateInfo& operator=(const RelationHateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelationHateInfo& default_instance();

  void Swap(RelationHateInfo* other);

  // implements Message ----------------------------------------------

  RelationHateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelationHateInfo& from);
  void MergeFrom(const RelationHateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 killMeTimes = 2;
  inline bool has_killmetimes() const;
  inline void clear_killmetimes();
  static const int kKillMeTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 killmetimes() const;
  inline void set_killmetimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RelationHateInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_killmetimes();
  inline void clear_has_killmetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 killmetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RelationHateInfo* default_instance_;
};
// -------------------------------------------------------------------

class RelationGiftRecord : public ::google::protobuf::Message {
 public:
  RelationGiftRecord();
  virtual ~RelationGiftRecord();

  RelationGiftRecord(const RelationGiftRecord& from);

  inline RelationGiftRecord& operator=(const RelationGiftRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelationGiftRecord& default_instance();

  void Swap(RelationGiftRecord* other);

  // implements Message ----------------------------------------------

  RelationGiftRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelationGiftRecord& from);
  void MergeFrom(const RelationGiftRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friendId = 1;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friendid() const;
  inline void set_friendid(::google::protobuf::uint64 value);

  // optional uint64 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 isThanks = 3;
  inline bool has_isthanks() const;
  inline void clear_isthanks();
  static const int kIsThanksFieldNumber = 3;
  inline ::google::protobuf::uint32 isthanks() const;
  inline void set_isthanks(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RelationGiftRecord)
 private:
  inline void set_has_friendid();
  inline void clear_has_friendid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_isthanks();
  inline void clear_has_isthanks();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friendid_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 isthanks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RelationGiftRecord* default_instance_;
};
// -------------------------------------------------------------------

class RelationDBInfo : public ::google::protobuf::Message {
 public:
  RelationDBInfo();
  virtual ~RelationDBInfo();

  RelationDBInfo(const RelationDBInfo& from);

  inline RelationDBInfo& operator=(const RelationDBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelationDBInfo& default_instance();

  void Swap(RelationDBInfo* other);

  // implements Message ----------------------------------------------

  RelationDBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelationDBInfo& from);
  void MergeFrom(const RelationDBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FriendInfo friendList = 1;
  inline int friendlist_size() const;
  inline void clear_friendlist();
  static const int kFriendListFieldNumber = 1;
  inline const ::proto_ff::FriendInfo& friendlist(int index) const;
  inline ::proto_ff::FriendInfo* mutable_friendlist(int index);
  inline ::proto_ff::FriendInfo* add_friendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >&
      friendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >*
      mutable_friendlist();

  // repeated uint64 blackList = 2;
  inline int blacklist_size() const;
  inline void clear_blacklist();
  static const int kBlackListFieldNumber = 2;
  inline ::google::protobuf::uint64 blacklist(int index) const;
  inline void set_blacklist(int index, ::google::protobuf::uint64 value);
  inline void add_blacklist(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      blacklist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_blacklist();

  // repeated .proto_ff.RelationHateInfo hateList = 3;
  inline int hatelist_size() const;
  inline void clear_hatelist();
  static const int kHateListFieldNumber = 3;
  inline const ::proto_ff::RelationHateInfo& hatelist(int index) const;
  inline ::proto_ff::RelationHateInfo* mutable_hatelist(int index);
  inline ::proto_ff::RelationHateInfo* add_hatelist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >&
      hatelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >*
      mutable_hatelist();

  // repeated .proto_ff.FriendApplyInfo applyList = 4;
  inline int applylist_size() const;
  inline void clear_applylist();
  static const int kApplyListFieldNumber = 4;
  inline const ::proto_ff::FriendApplyInfo& applylist(int index) const;
  inline ::proto_ff::FriendApplyInfo* mutable_applylist(int index);
  inline ::proto_ff::FriendApplyInfo* add_applylist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >&
      applylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >*
      mutable_applylist();

  // optional uint32 friends_add = 5;
  inline bool has_friends_add() const;
  inline void clear_friends_add();
  static const int kFriendsAddFieldNumber = 5;
  inline ::google::protobuf::uint32 friends_add() const;
  inline void set_friends_add(::google::protobuf::uint32 value);

  // repeated .proto_ff.RelationGiftRecord giftRecords = 6;
  inline int giftrecords_size() const;
  inline void clear_giftrecords();
  static const int kGiftRecordsFieldNumber = 6;
  inline const ::proto_ff::RelationGiftRecord& giftrecords(int index) const;
  inline ::proto_ff::RelationGiftRecord* mutable_giftrecords(int index);
  inline ::proto_ff::RelationGiftRecord* add_giftrecords();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >&
      giftrecords() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >*
      mutable_giftrecords();

  // @@protoc_insertion_point(class_scope:proto_ff.RelationDBInfo)
 private:
  inline void set_has_friends_add();
  inline void clear_has_friends_add();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo > friendlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > blacklist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo > hatelist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo > applylist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord > giftrecords_;
  ::google::protobuf::uint32 friends_add_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RelationDBInfo* default_instance_;
};
// -------------------------------------------------------------------

class DigPerfor : public ::google::protobuf::Message {
 public:
  DigPerfor();
  virtual ~DigPerfor();

  DigPerfor(const DigPerfor& from);

  inline DigPerfor& operator=(const DigPerfor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DigPerfor& default_instance();

  void Swap(DigPerfor* other);

  // implements Message ----------------------------------------------

  DigPerfor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DigPerfor& from);
  void MergeFrom(const DigPerfor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DigPerfor)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DigPerfor* default_instance_;
};
// -------------------------------------------------------------------

class BuffProto : public ::google::protobuf::Message {
 public:
  BuffProto();
  virtual ~BuffProto();

  BuffProto(const BuffProto& from);

  inline BuffProto& operator=(const BuffProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffProto& default_instance();

  void Swap(BuffProto* other);

  // implements Message ----------------------------------------------

  BuffProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffProto& from);
  void MergeFrom(const BuffProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 buff_index = 1;
  inline bool has_buff_index() const;
  inline void clear_buff_index();
  static const int kBuffIndexFieldNumber = 1;
  inline ::google::protobuf::uint64 buff_index() const;
  inline void set_buff_index(::google::protobuf::uint64 value);

  // optional uint64 buff_id = 2;
  inline bool has_buff_id() const;
  inline void clear_buff_id();
  static const int kBuffIdFieldNumber = 2;
  inline ::google::protobuf::uint64 buff_id() const;
  inline void set_buff_id(::google::protobuf::uint64 value);

  // optional uint64 recver_cid = 3;
  inline bool has_recver_cid() const;
  inline void clear_recver_cid();
  static const int kRecverCidFieldNumber = 3;
  inline ::google::protobuf::uint64 recver_cid() const;
  inline void set_recver_cid(::google::protobuf::uint64 value);

  // optional int32 left_msec = 4;
  inline bool has_left_msec() const;
  inline void clear_left_msec();
  static const int kLeftMsecFieldNumber = 4;
  inline ::google::protobuf::int32 left_msec() const;
  inline void set_left_msec(::google::protobuf::int32 value);

  // optional uint64 skill_id = 5;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 5;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional int32 skill_lev = 6;
  inline bool has_skill_lev() const;
  inline void clear_skill_lev();
  static const int kSkillLevFieldNumber = 6;
  inline ::google::protobuf::int32 skill_lev() const;
  inline void set_skill_lev(::google::protobuf::int32 value);

  // optional int32 is_effect = 7;
  inline bool has_is_effect() const;
  inline void clear_is_effect();
  static const int kIsEffectFieldNumber = 7;
  inline ::google::protobuf::int32 is_effect() const;
  inline void set_is_effect(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuffProto)
 private:
  inline void set_has_buff_index();
  inline void clear_has_buff_index();
  inline void set_has_buff_id();
  inline void clear_has_buff_id();
  inline void set_has_recver_cid();
  inline void clear_has_recver_cid();
  inline void set_has_left_msec();
  inline void clear_has_left_msec();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_lev();
  inline void clear_has_skill_lev();
  inline void set_has_is_effect();
  inline void clear_has_is_effect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 buff_index_;
  ::google::protobuf::uint64 buff_id_;
  ::google::protobuf::uint64 recver_cid_;
  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::int32 left_msec_;
  ::google::protobuf::int32 skill_lev_;
  ::google::protobuf::int32 is_effect_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BuffProto* default_instance_;
};
// -------------------------------------------------------------------

class BuffListProto : public ::google::protobuf::Message {
 public:
  BuffListProto();
  virtual ~BuffListProto();

  BuffListProto(const BuffListProto& from);

  inline BuffListProto& operator=(const BuffListProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffListProto& default_instance();

  void Swap(BuffListProto* other);

  // implements Message ----------------------------------------------

  BuffListProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffListProto& from);
  void MergeFrom(const BuffListProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // repeated .proto_ff.BuffProto info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::BuffProto& info(int index) const;
  inline ::proto_ff::BuffProto* mutable_info(int index);
  inline ::proto_ff::BuffProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.BuffListProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BuffListProto* default_instance_;
};
// -------------------------------------------------------------------

class SkillPosProto : public ::google::protobuf::Message {
 public:
  SkillPosProto();
  virtual ~SkillPosProto();

  SkillPosProto(const SkillPosProto& from);

  inline SkillPosProto& operator=(const SkillPosProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillPosProto& default_instance();

  void Swap(SkillPosProto* other);

  // implements Message ----------------------------------------------

  SkillPosProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillPosProto& from);
  void MergeFrom(const SkillPosProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional int32 cd = 3;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 3;
  inline ::google::protobuf::int32 cd() const;
  inline void set_cd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SkillPosProto)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_cd();
  inline void clear_has_cd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::int32 cd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SkillPosProto* default_instance_;
};
// -------------------------------------------------------------------

class SkillGroupProto : public ::google::protobuf::Message {
 public:
  SkillGroupProto();
  virtual ~SkillGroupProto();

  SkillGroupProto(const SkillGroupProto& from);

  inline SkillGroupProto& operator=(const SkillGroupProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillGroupProto& default_instance();

  void Swap(SkillGroupProto* other);

  // implements Message ----------------------------------------------

  SkillGroupProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillGroupProto& from);
  void MergeFrom(const SkillGroupProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::uint32 group() const;
  inline void set_group(::google::protobuf::uint32 value);

  // optional int32 cd = 2;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 2;
  inline ::google::protobuf::int32 cd() const;
  inline void set_cd(::google::protobuf::int32 value);

  // repeated .proto_ff.SkillPosProto lst = 3;
  inline int lst_size() const;
  inline void clear_lst();
  static const int kLstFieldNumber = 3;
  inline const ::proto_ff::SkillPosProto& lst(int index) const;
  inline ::proto_ff::SkillPosProto* mutable_lst(int index);
  inline ::proto_ff::SkillPosProto* add_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >&
      lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >*
      mutable_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.SkillGroupProto)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_cd();
  inline void clear_has_cd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 group_;
  ::google::protobuf::int32 cd_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto > lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SkillGroupProto* default_instance_;
};
// -------------------------------------------------------------------

class SkillGroupListProto : public ::google::protobuf::Message {
 public:
  SkillGroupListProto();
  virtual ~SkillGroupListProto();

  SkillGroupListProto(const SkillGroupListProto& from);

  inline SkillGroupListProto& operator=(const SkillGroupListProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillGroupListProto& default_instance();

  void Swap(SkillGroupListProto* other);

  // implements Message ----------------------------------------------

  SkillGroupListProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillGroupListProto& from);
  void MergeFrom(const SkillGroupListProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.SkillGroupProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::SkillGroupProto& info(int index) const;
  inline ::proto_ff::SkillGroupProto* mutable_info(int index);
  inline ::proto_ff::SkillGroupProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.SkillGroupListProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SkillGroupListProto* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFantasyData : public ::google::protobuf::Message {
 public:
  FacadeFantasyData();
  virtual ~FacadeFantasyData();

  FacadeFantasyData(const FacadeFantasyData& from);

  inline FacadeFantasyData& operator=(const FacadeFantasyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFantasyData& default_instance();

  void Swap(FacadeFantasyData* other);

  // implements Message ----------------------------------------------

  FacadeFantasyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFantasyData& from);
  void MergeFrom(const FacadeFantasyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fantasy_id = 1;
  inline bool has_fantasy_id() const;
  inline void clear_fantasy_id();
  static const int kFantasyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fantasy_id() const;
  inline void set_fantasy_id(::google::protobuf::uint64 value);

  // optional uint32 fantasy_lev = 2;
  inline bool has_fantasy_lev() const;
  inline void clear_fantasy_lev();
  static const int kFantasyLevFieldNumber = 2;
  inline ::google::protobuf::uint32 fantasy_lev() const;
  inline void set_fantasy_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFantasyData)
 private:
  inline void set_has_fantasy_id();
  inline void clear_has_fantasy_id();
  inline void set_has_fantasy_lev();
  inline void clear_has_fantasy_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fantasy_id_;
  ::google::protobuf::uint32 fantasy_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeFantasyData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFragmentData : public ::google::protobuf::Message {
 public:
  FacadeFragmentData();
  virtual ~FacadeFragmentData();

  FacadeFragmentData(const FacadeFragmentData& from);

  inline FacadeFragmentData& operator=(const FacadeFragmentData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFragmentData& default_instance();

  void Swap(FacadeFragmentData* other);

  // implements Message ----------------------------------------------

  FacadeFragmentData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFragmentData& from);
  void MergeFrom(const FacadeFragmentData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fragment_id = 1;
  inline bool has_fragment_id() const;
  inline void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fragment_id() const;
  inline void set_fragment_id(::google::protobuf::uint64 value);

  // optional uint32 use_times = 2;
  inline bool has_use_times() const;
  inline void clear_use_times();
  static const int kUseTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 use_times() const;
  inline void set_use_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFragmentData)
 private:
  inline void set_has_fragment_id();
  inline void clear_has_fragment_id();
  inline void set_has_use_times();
  inline void clear_has_use_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fragment_id_;
  ::google::protobuf::uint32 use_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeFragmentData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSkillData : public ::google::protobuf::Message {
 public:
  FacadeSkillData();
  virtual ~FacadeSkillData();

  FacadeSkillData(const FacadeSkillData& from);

  inline FacadeSkillData& operator=(const FacadeSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSkillData& default_instance();

  void Swap(FacadeSkillData* other);

  // implements Message ----------------------------------------------

  FacadeSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSkillData& from);
  void MergeFrom(const FacadeSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 skill_lev = 2;
  inline bool has_skill_lev() const;
  inline void clear_skill_lev();
  static const int kSkillLevFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_lev() const;
  inline void set_skill_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_lev();
  inline void clear_has_skill_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 skill_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeSkillData* default_instance_;
};
// -------------------------------------------------------------------

class StatisticDataProto : public ::google::protobuf::Message {
 public:
  StatisticDataProto();
  virtual ~StatisticDataProto();

  StatisticDataProto(const StatisticDataProto& from);

  inline StatisticDataProto& operator=(const StatisticDataProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatisticDataProto& default_instance();

  void Swap(StatisticDataProto* other);

  // implements Message ----------------------------------------------

  StatisticDataProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatisticDataProto& from);
  void MergeFrom(const StatisticDataProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional uint32 total_login_day = 2;
  inline bool has_total_login_day() const;
  inline void clear_total_login_day();
  static const int kTotalLoginDayFieldNumber = 2;
  inline ::google::protobuf::uint32 total_login_day() const;
  inline void set_total_login_day(::google::protobuf::uint32 value);

  // optional uint32 total_rmb = 3;
  inline bool has_total_rmb() const;
  inline void clear_total_rmb();
  static const int kTotalRmbFieldNumber = 3;
  inline ::google::protobuf::uint32 total_rmb() const;
  inline void set_total_rmb(::google::protobuf::uint32 value);

  // optional uint32 today_rmb = 4;
  inline bool has_today_rmb() const;
  inline void clear_today_rmb();
  static const int kTodayRmbFieldNumber = 4;
  inline ::google::protobuf::uint32 today_rmb() const;
  inline void set_today_rmb(::google::protobuf::uint32 value);

  // optional uint32 total_activityCount = 5;
  inline bool has_total_activitycount() const;
  inline void clear_total_activitycount();
  static const int kTotalActivityCountFieldNumber = 5;
  inline ::google::protobuf::uint32 total_activitycount() const;
  inline void set_total_activitycount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StatisticDataProto)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_total_login_day();
  inline void clear_has_total_login_day();
  inline void set_has_total_rmb();
  inline void clear_has_total_rmb();
  inline void set_has_today_rmb();
  inline void clear_has_today_rmb();
  inline void set_has_total_activitycount();
  inline void clear_has_total_activitycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;
  ::google::protobuf::uint32 total_login_day_;
  ::google::protobuf::uint32 total_rmb_;
  ::google::protobuf::uint32 today_rmb_;
  ::google::protobuf::uint32 total_activitycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StatisticDataProto* default_instance_;
};
// -------------------------------------------------------------------

class GodRelicsTaskEntry : public ::google::protobuf::Message {
 public:
  GodRelicsTaskEntry();
  virtual ~GodRelicsTaskEntry();

  GodRelicsTaskEntry(const GodRelicsTaskEntry& from);

  inline GodRelicsTaskEntry& operator=(const GodRelicsTaskEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodRelicsTaskEntry& default_instance();

  void Swap(GodRelicsTaskEntry* other);

  // implements Message ----------------------------------------------

  GodRelicsTaskEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodRelicsTaskEntry& from);
  void MergeFrom(const GodRelicsTaskEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodRelicsTaskEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodRelicsTaskEntry* default_instance_;
};
// -------------------------------------------------------------------

class GodRelicsTaskGroupEntry : public ::google::protobuf::Message {
 public:
  GodRelicsTaskGroupEntry();
  virtual ~GodRelicsTaskGroupEntry();

  GodRelicsTaskGroupEntry(const GodRelicsTaskGroupEntry& from);

  inline GodRelicsTaskGroupEntry& operator=(const GodRelicsTaskGroupEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodRelicsTaskGroupEntry& default_instance();

  void Swap(GodRelicsTaskGroupEntry* other);

  // implements Message ----------------------------------------------

  GodRelicsTaskGroupEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodRelicsTaskGroupEntry& from);
  void MergeFrom(const GodRelicsTaskGroupEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_cfg_id = 1;
  inline bool has_group_cfg_id() const;
  inline void clear_group_cfg_id();
  static const int kGroupCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_cfg_id() const;
  inline void set_group_cfg_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.GodRelicsTaskEntry entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::GodRelicsTaskEntry& entrys(int index) const;
  inline ::proto_ff::GodRelicsTaskEntry* mutable_entrys(int index);
  inline ::proto_ff::GodRelicsTaskEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >*
      mutable_entrys();

  // optional int32 normal_reward_state = 3;
  inline bool has_normal_reward_state() const;
  inline void clear_normal_reward_state();
  static const int kNormalRewardStateFieldNumber = 3;
  inline ::google::protobuf::int32 normal_reward_state() const;
  inline void set_normal_reward_state(::google::protobuf::int32 value);

  // optional uint64 create_time = 5;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 create_time() const;
  inline void set_create_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodRelicsTaskGroupEntry)
 private:
  inline void set_has_group_cfg_id();
  inline void clear_has_group_cfg_id();
  inline void set_has_normal_reward_state();
  inline void clear_has_normal_reward_state();
  inline void set_has_create_time();
  inline void clear_has_create_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 group_cfg_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry > entrys_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::int32 normal_reward_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodRelicsTaskGroupEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskEntry : public ::google::protobuf::Message {
 public:
  DailyTaskEntry();
  virtual ~DailyTaskEntry();

  DailyTaskEntry(const DailyTaskEntry& from);

  inline DailyTaskEntry& operator=(const DailyTaskEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskEntry& default_instance();

  void Swap(DailyTaskEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskEntry& from);
  void MergeFrom(const DailyTaskEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // optional uint64 last_time = 4;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // optional int32 buy_num = 5;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 5;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::uint64 last_time_;
  ::google::protobuf::int32 buy_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskLimitEntry : public ::google::protobuf::Message {
 public:
  DailyTaskLimitEntry();
  virtual ~DailyTaskLimitEntry();

  DailyTaskLimitEntry(const DailyTaskLimitEntry& from);

  inline DailyTaskLimitEntry& operator=(const DailyTaskLimitEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskLimitEntry& default_instance();

  void Swap(DailyTaskLimitEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskLimitEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskLimitEntry& from);
  void MergeFrom(const DailyTaskLimitEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // optional uint64 last_time = 4;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // optional int32 buy_num = 5;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 5;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // optional bool ready_add = 6;
  inline bool has_ready_add() const;
  inline void clear_ready_add();
  static const int kReadyAddFieldNumber = 6;
  inline bool ready_add() const;
  inline void set_ready_add(bool value);

  // optional bool is_open = 7;
  inline bool has_is_open() const;
  inline void clear_is_open();
  static const int kIsOpenFieldNumber = 7;
  inline bool is_open() const;
  inline void set_is_open(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskLimitEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();
  inline void set_has_ready_add();
  inline void clear_has_ready_add();
  inline void set_has_is_open();
  inline void clear_has_is_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::uint64 last_time_;
  ::google::protobuf::int32 buy_num_;
  bool ready_add_;
  bool is_open_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskLimitEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskBackDayEntry : public ::google::protobuf::Message {
 public:
  DailyTaskBackDayEntry();
  virtual ~DailyTaskBackDayEntry();

  DailyTaskBackDayEntry(const DailyTaskBackDayEntry& from);

  inline DailyTaskBackDayEntry& operator=(const DailyTaskBackDayEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskBackDayEntry& default_instance();

  void Swap(DailyTaskBackDayEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskBackDayEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskBackDayEntry& from);
  void MergeFrom(const DailyTaskBackDayEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 left_num = 1;
  inline bool has_left_num() const;
  inline void clear_left_num();
  static const int kLeftNumFieldNumber = 1;
  inline ::google::protobuf::int32 left_num() const;
  inline void set_left_num(::google::protobuf::int32 value);

  // optional int32 external_left_num = 2;
  inline bool has_external_left_num() const;
  inline void clear_external_left_num();
  static const int kExternalLeftNumFieldNumber = 2;
  inline ::google::protobuf::int32 external_left_num() const;
  inline void set_external_left_num(::google::protobuf::int32 value);

  // optional int64 last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline ::google::protobuf::int64 last_time() const;
  inline void set_last_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskBackDayEntry)
 private:
  inline void set_has_left_num();
  inline void clear_has_left_num();
  inline void set_has_external_left_num();
  inline void clear_has_external_left_num();
  inline void set_has_last_time();
  inline void clear_has_last_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 left_num_;
  ::google::protobuf::int32 external_left_num_;
  ::google::protobuf::int64 last_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskBackDayEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskBackEntry : public ::google::protobuf::Message {
 public:
  DailyTaskBackEntry();
  virtual ~DailyTaskBackEntry();

  DailyTaskBackEntry(const DailyTaskBackEntry& from);

  inline DailyTaskBackEntry& operator=(const DailyTaskBackEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskBackEntry& default_instance();

  void Swap(DailyTaskBackEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskBackEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskBackEntry& from);
  void MergeFrom(const DailyTaskBackEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // repeated .proto_ff.DailyTaskBackDayEntry day_data = 4;
  inline int day_data_size() const;
  inline void clear_day_data();
  static const int kDayDataFieldNumber = 4;
  inline const ::proto_ff::DailyTaskBackDayEntry& day_data(int index) const;
  inline ::proto_ff::DailyTaskBackDayEntry* mutable_day_data(int index);
  inline ::proto_ff::DailyTaskBackDayEntry* add_day_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >&
      day_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >*
      mutable_day_data();

  // optional int32 left_num = 5;
  inline bool has_left_num() const;
  inline void clear_left_num();
  static const int kLeftNumFieldNumber = 5;
  inline ::google::protobuf::int32 left_num() const;
  inline void set_left_num(::google::protobuf::int32 value);

  // optional int32 external_left_num = 6;
  inline bool has_external_left_num() const;
  inline void clear_external_left_num();
  static const int kExternalLeftNumFieldNumber = 6;
  inline ::google::protobuf::int32 external_left_num() const;
  inline void set_external_left_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskBackEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_left_num();
  inline void clear_has_left_num();
  inline void set_has_external_left_num();
  inline void clear_has_external_left_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry > day_data_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::int32 left_num_;
  ::google::protobuf::int32 external_left_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskBackEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskRewardEntry : public ::google::protobuf::Message {
 public:
  DailyTaskRewardEntry();
  virtual ~DailyTaskRewardEntry();

  DailyTaskRewardEntry(const DailyTaskRewardEntry& from);

  inline DailyTaskRewardEntry& operator=(const DailyTaskRewardEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskRewardEntry& default_instance();

  void Swap(DailyTaskRewardEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskRewardEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskRewardEntry& from);
  void MergeFrom(const DailyTaskRewardEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 reward_id = 1;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 1;
  inline ::google::protobuf::uint64 reward_id() const;
  inline void set_reward_id(::google::protobuf::uint64 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskRewardEntry)
 private:
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 reward_id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskRewardEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskAllData : public ::google::protobuf::Message {
 public:
  DailyTaskAllData();
  virtual ~DailyTaskAllData();

  DailyTaskAllData(const DailyTaskAllData& from);

  inline DailyTaskAllData& operator=(const DailyTaskAllData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskAllData& default_instance();

  void Swap(DailyTaskAllData* other);

  // implements Message ----------------------------------------------

  DailyTaskAllData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskAllData& from);
  void MergeFrom(const DailyTaskAllData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DailyTaskEntry task_data = 1;
  inline int task_data_size() const;
  inline void clear_task_data();
  static const int kTaskDataFieldNumber = 1;
  inline const ::proto_ff::DailyTaskEntry& task_data(int index) const;
  inline ::proto_ff::DailyTaskEntry* mutable_task_data(int index);
  inline ::proto_ff::DailyTaskEntry* add_task_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >&
      task_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >*
      mutable_task_data();

  // repeated .proto_ff.DailyTaskLimitEntry task_limit_data = 2;
  inline int task_limit_data_size() const;
  inline void clear_task_limit_data();
  static const int kTaskLimitDataFieldNumber = 2;
  inline const ::proto_ff::DailyTaskLimitEntry& task_limit_data(int index) const;
  inline ::proto_ff::DailyTaskLimitEntry* mutable_task_limit_data(int index);
  inline ::proto_ff::DailyTaskLimitEntry* add_task_limit_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >&
      task_limit_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >*
      mutable_task_limit_data();

  // repeated .proto_ff.DailyTaskBackEntry back_data = 3;
  inline int back_data_size() const;
  inline void clear_back_data();
  static const int kBackDataFieldNumber = 3;
  inline const ::proto_ff::DailyTaskBackEntry& back_data(int index) const;
  inline ::proto_ff::DailyTaskBackEntry* mutable_back_data(int index);
  inline ::proto_ff::DailyTaskBackEntry* add_back_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >&
      back_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >*
      mutable_back_data();

  // repeated .proto_ff.DailyTaskRewardEntry reward_data = 4;
  inline int reward_data_size() const;
  inline void clear_reward_data();
  static const int kRewardDataFieldNumber = 4;
  inline const ::proto_ff::DailyTaskRewardEntry& reward_data(int index) const;
  inline ::proto_ff::DailyTaskRewardEntry* mutable_reward_data(int index);
  inline ::proto_ff::DailyTaskRewardEntry* add_reward_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >&
      reward_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >*
      mutable_reward_data();

  // optional uint32 daily_score = 5;
  inline bool has_daily_score() const;
  inline void clear_daily_score();
  static const int kDailyScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 daily_score() const;
  inline void set_daily_score(::google::protobuf::uint32 value);

  // optional uint32 daily_level = 6;
  inline bool has_daily_level() const;
  inline void clear_daily_level();
  static const int kDailyLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 daily_level() const;
  inline void set_daily_level(::google::protobuf::uint32 value);

  // optional uint64 create_time = 7;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 create_time() const;
  inline void set_create_time(::google::protobuf::uint64 value);

  // optional uint64 daily_exp = 8;
  inline bool has_daily_exp() const;
  inline void clear_daily_exp();
  static const int kDailyExpFieldNumber = 8;
  inline ::google::protobuf::uint64 daily_exp() const;
  inline void set_daily_exp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskAllData)
 private:
  inline void set_has_daily_score();
  inline void clear_has_daily_score();
  inline void set_has_daily_level();
  inline void clear_has_daily_level();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_daily_exp();
  inline void clear_has_daily_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry > task_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry > task_limit_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry > back_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry > reward_data_;
  ::google::protobuf::uint32 daily_score_;
  ::google::protobuf::uint32 daily_level_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::uint64 daily_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskAllData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBRecentSubmitMission : public ::google::protobuf::Message {
 public:
  CharacterDBRecentSubmitMission();
  virtual ~CharacterDBRecentSubmitMission();

  CharacterDBRecentSubmitMission(const CharacterDBRecentSubmitMission& from);

  inline CharacterDBRecentSubmitMission& operator=(const CharacterDBRecentSubmitMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBRecentSubmitMission& default_instance();

  void Swap(CharacterDBRecentSubmitMission* other);

  // implements Message ----------------------------------------------

  CharacterDBRecentSubmitMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBRecentSubmitMission& from);
  void MergeFrom(const CharacterDBRecentSubmitMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 mission_type() const;
  inline void set_mission_type(::google::protobuf::int32 value);

  // optional uint64 mission_id = 2;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mission_id() const;
  inline void set_mission_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBRecentSubmitMission)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_mission_id();
  inline void clear_has_mission_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mission_id_;
  ::google::protobuf::int32 mission_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBRecentSubmitMission* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMissionItemInfo : public ::google::protobuf::Message {
 public:
  CharacterDBMissionItemInfo();
  virtual ~CharacterDBMissionItemInfo();

  CharacterDBMissionItemInfo(const CharacterDBMissionItemInfo& from);

  inline CharacterDBMissionItemInfo& operator=(const CharacterDBMissionItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMissionItemInfo& default_instance();

  void Swap(CharacterDBMissionItemInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBMissionItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMissionItemInfo& from);
  void MergeFrom(const CharacterDBMissionItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 currentValue = 3;
  inline bool has_currentvalue() const;
  inline void clear_currentvalue();
  static const int kCurrentValueFieldNumber = 3;
  inline ::google::protobuf::uint32 currentvalue() const;
  inline void set_currentvalue(::google::protobuf::uint32 value);

  // optional uint32 finalValue = 4;
  inline bool has_finalvalue() const;
  inline void clear_finalvalue();
  static const int kFinalValueFieldNumber = 4;
  inline ::google::protobuf::uint32 finalvalue() const;
  inline void set_finalvalue(::google::protobuf::uint32 value);

  // optional bool completedFlag = 5;
  inline bool has_completedflag() const;
  inline void clear_completedflag();
  static const int kCompletedFlagFieldNumber = 5;
  inline bool completedflag() const;
  inline void set_completedflag(bool value);

  // optional uint64 parma1 = 6;
  inline bool has_parma1() const;
  inline void clear_parma1();
  static const int kParma1FieldNumber = 6;
  inline ::google::protobuf::uint64 parma1() const;
  inline void set_parma1(::google::protobuf::uint64 value);

  // optional uint64 parma2 = 7;
  inline bool has_parma2() const;
  inline void clear_parma2();
  static const int kParma2FieldNumber = 7;
  inline ::google::protobuf::uint64 parma2() const;
  inline void set_parma2(::google::protobuf::uint64 value);

  // optional uint64 parma3 = 8;
  inline bool has_parma3() const;
  inline void clear_parma3();
  static const int kParma3FieldNumber = 8;
  inline ::google::protobuf::uint64 parma3() const;
  inline void set_parma3(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMissionItemInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_currentvalue();
  inline void clear_has_currentvalue();
  inline void set_has_finalvalue();
  inline void clear_has_finalvalue();
  inline void set_has_completedflag();
  inline void clear_has_completedflag();
  inline void set_has_parma1();
  inline void clear_has_parma1();
  inline void set_has_parma2();
  inline void clear_has_parma2();
  inline void set_has_parma3();
  inline void clear_has_parma3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 currentvalue_;
  ::google::protobuf::uint32 finalvalue_;
  bool completedflag_;
  ::google::protobuf::uint64 parma1_;
  ::google::protobuf::uint64 parma2_;
  ::google::protobuf::uint64 parma3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMissionItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMissionTrack : public ::google::protobuf::Message {
 public:
  CharacterDBMissionTrack();
  virtual ~CharacterDBMissionTrack();

  CharacterDBMissionTrack(const CharacterDBMissionTrack& from);

  inline CharacterDBMissionTrack& operator=(const CharacterDBMissionTrack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMissionTrack& default_instance();

  void Swap(CharacterDBMissionTrack* other);

  // implements Message ----------------------------------------------

  CharacterDBMissionTrack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMissionTrack& from);
  void MergeFrom(const CharacterDBMissionTrack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 missionid() const;
  inline void set_missionid(::google::protobuf::uint64 value);

  // optional uint64 dynamicid = 2;
  inline bool has_dynamicid() const;
  inline void clear_dynamicid();
  static const int kDynamicidFieldNumber = 2;
  inline ::google::protobuf::uint64 dynamicid() const;
  inline void set_dynamicid(::google::protobuf::uint64 value);

  // optional uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint64 acceptMissionTime = 4;
  inline bool has_acceptmissiontime() const;
  inline void clear_acceptmissiontime();
  static const int kAcceptMissionTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 acceptmissiontime() const;
  inline void set_acceptmissiontime(::google::protobuf::uint64 value);

  // repeated .proto_ff.CharacterDBMissionItemInfo itemInfo = 5;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 5;
  inline const ::proto_ff::CharacterDBMissionItemInfo& iteminfo(int index) const;
  inline ::proto_ff::CharacterDBMissionItemInfo* mutable_iteminfo(int index);
  inline ::proto_ff::CharacterDBMissionItemInfo* add_iteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >&
      iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >*
      mutable_iteminfo();

  // optional uint64 textid = 6;
  inline bool has_textid() const;
  inline void clear_textid();
  static const int kTextidFieldNumber = 6;
  inline ::google::protobuf::uint64 textid() const;
  inline void set_textid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMissionTrack)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_dynamicid();
  inline void clear_has_dynamicid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_acceptmissiontime();
  inline void clear_has_acceptmissiontime();
  inline void set_has_textid();
  inline void clear_has_textid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 missionid_;
  ::google::protobuf::uint64 dynamicid_;
  ::google::protobuf::uint64 acceptmissiontime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo > iteminfo_;
  ::google::protobuf::uint64 textid_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMissionTrack* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBDyMissionInfo : public ::google::protobuf::Message {
 public:
  CharacterDBDyMissionInfo();
  virtual ~CharacterDBDyMissionInfo();

  CharacterDBDyMissionInfo(const CharacterDBDyMissionInfo& from);

  inline CharacterDBDyMissionInfo& operator=(const CharacterDBDyMissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBDyMissionInfo& default_instance();

  void Swap(CharacterDBDyMissionInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBDyMissionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBDyMissionInfo& from);
  void MergeFrom(const CharacterDBDyMissionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 mission_type() const;
  inline void set_mission_type(::google::protobuf::int32 value);

  // optional uint64 lastfresh = 2;
  inline bool has_lastfresh() const;
  inline void clear_lastfresh();
  static const int kLastfreshFieldNumber = 2;
  inline ::google::protobuf::uint64 lastfresh() const;
  inline void set_lastfresh(::google::protobuf::uint64 value);

  // optional int32 accept_num = 3;
  inline bool has_accept_num() const;
  inline void clear_accept_num();
  static const int kAcceptNumFieldNumber = 3;
  inline ::google::protobuf::int32 accept_num() const;
  inline void set_accept_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBDyMissionInfo)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_lastfresh();
  inline void clear_has_lastfresh();
  inline void set_has_accept_num();
  inline void clear_has_accept_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 lastfresh_;
  ::google::protobuf::int32 mission_type_;
  ::google::protobuf::int32 accept_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBDyMissionInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBTaskData : public ::google::protobuf::Message {
 public:
  CharacterDBTaskData();
  virtual ~CharacterDBTaskData();

  CharacterDBTaskData(const CharacterDBTaskData& from);

  inline CharacterDBTaskData& operator=(const CharacterDBTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBTaskData& default_instance();

  void Swap(CharacterDBTaskData* other);

  // implements Message ----------------------------------------------

  CharacterDBTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBTaskData& from);
  void MergeFrom(const CharacterDBTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterDBMissionTrack missionTrack = 1;
  inline int missiontrack_size() const;
  inline void clear_missiontrack();
  static const int kMissionTrackFieldNumber = 1;
  inline const ::proto_ff::CharacterDBMissionTrack& missiontrack(int index) const;
  inline ::proto_ff::CharacterDBMissionTrack* mutable_missiontrack(int index);
  inline ::proto_ff::CharacterDBMissionTrack* add_missiontrack();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >&
      missiontrack() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >*
      mutable_missiontrack();

  // repeated .proto_ff.CharacterDBDyMissionInfo dyinfo = 2;
  inline int dyinfo_size() const;
  inline void clear_dyinfo();
  static const int kDyinfoFieldNumber = 2;
  inline const ::proto_ff::CharacterDBDyMissionInfo& dyinfo(int index) const;
  inline ::proto_ff::CharacterDBDyMissionInfo* mutable_dyinfo(int index);
  inline ::proto_ff::CharacterDBDyMissionInfo* add_dyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >&
      dyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >*
      mutable_dyinfo();

  // repeated uint64 already_submit = 3;
  inline int already_submit_size() const;
  inline void clear_already_submit();
  static const int kAlreadySubmitFieldNumber = 3;
  inline ::google::protobuf::uint64 already_submit(int index) const;
  inline void set_already_submit(int index, ::google::protobuf::uint64 value);
  inline void add_already_submit(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      already_submit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_already_submit();

  // repeated .proto_ff.CharacterDBRecentSubmitMission recent_submit = 4;
  inline int recent_submit_size() const;
  inline void clear_recent_submit();
  static const int kRecentSubmitFieldNumber = 4;
  inline const ::proto_ff::CharacterDBRecentSubmitMission& recent_submit(int index) const;
  inline ::proto_ff::CharacterDBRecentSubmitMission* mutable_recent_submit(int index);
  inline ::proto_ff::CharacterDBRecentSubmitMission* add_recent_submit();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >&
      recent_submit() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >*
      mutable_recent_submit();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBTaskData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack > missiontrack_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo > dyinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > already_submit_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission > recent_submit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBTaskData* default_instance_;
};
// -------------------------------------------------------------------

class NotifyVipDataRsp : public ::google::protobuf::Message {
 public:
  NotifyVipDataRsp();
  virtual ~NotifyVipDataRsp();

  NotifyVipDataRsp(const NotifyVipDataRsp& from);

  inline NotifyVipDataRsp& operator=(const NotifyVipDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyVipDataRsp& default_instance();

  void Swap(NotifyVipDataRsp* other);

  // implements Message ----------------------------------------------

  NotifyVipDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyVipDataRsp& from);
  void MergeFrom(const NotifyVipDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // repeated int32 ids = 2;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 2;
  inline ::google::protobuf::int32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int32 value);
  inline void add_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyVipDataRsp)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyVipDataRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// EmptyMessage

// -------------------------------------------------------------------

// ComPair

// optional uint32 key = 1;
inline bool ComPair::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComPair::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComPair::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComPair::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ComPair::key() const {
  return key_;
}
inline void ComPair::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// optional uint32 value = 2;
inline bool ComPair::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComPair::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComPair::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComPair::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ComPair::value() const {
  return value_;
}
inline void ComPair::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ComPair64

// optional uint64 key = 1;
inline bool ComPair64::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComPair64::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComPair64::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComPair64::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::uint64 ComPair64::key() const {
  return key_;
}
inline void ComPair64::set_key(::google::protobuf::uint64 value) {
  set_has_key();
  key_ = value;
}

// optional uint64 value = 2;
inline bool ComPair64::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComPair64::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComPair64::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComPair64::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 ComPair64::value() const {
  return value_;
}
inline void ComPair64::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ComPairBool

// optional uint32 key = 1;
inline bool ComPairBool::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComPairBool::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComPairBool::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComPairBool::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ComPairBool::key() const {
  return key_;
}
inline void ComPairBool::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// optional bool value = 2;
inline bool ComPairBool::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComPairBool::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComPairBool::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComPairBool::clear_value() {
  value_ = false;
  clear_has_value();
}
inline bool ComPairBool::value() const {
  return value_;
}
inline void ComPairBool::set_value(bool value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// Vector3PB

// optional float x = 1;
inline bool Vector3PB::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vector3PB::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vector3PB::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vector3PB::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Vector3PB::x() const {
  return x_;
}
inline void Vector3PB::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float y = 2;
inline bool Vector3PB::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vector3PB::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vector3PB::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vector3PB::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Vector3PB::y() const {
  return y_;
}
inline void Vector3PB::set_y(float value) {
  set_has_y();
  y_ = value;
}

// optional float z = 3;
inline bool Vector3PB::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Vector3PB::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Vector3PB::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Vector3PB::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Vector3PB::z() const {
  return z_;
}
inline void Vector3PB::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// Vector2PB

// optional float x = 1;
inline bool Vector2PB::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vector2PB::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vector2PB::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vector2PB::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Vector2PB::x() const {
  return x_;
}
inline void Vector2PB::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float y = 2;
inline bool Vector2PB::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vector2PB::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vector2PB::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vector2PB::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Vector2PB::y() const {
  return y_;
}
inline void Vector2PB::set_y(float value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// Attr64

// optional uint32 id = 1;
inline bool Attr64::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attr64::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attr64::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attr64::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Attr64::id() const {
  return id_;
}
inline void Attr64::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 value = 2;
inline bool Attr64::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attr64::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attr64::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attr64::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 Attr64::value() const {
  return value_;
}
inline void Attr64::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// RoleFacadeProto

// repeated .proto_ff.Attr64 growFacade = 1;
inline int RoleFacadeProto::growfacade_size() const {
  return growfacade_.size();
}
inline void RoleFacadeProto::clear_growfacade() {
  growfacade_.Clear();
}
inline const ::proto_ff::Attr64& RoleFacadeProto::growfacade(int index) const {
  return growfacade_.Get(index);
}
inline ::proto_ff::Attr64* RoleFacadeProto::mutable_growfacade(int index) {
  return growfacade_.Mutable(index);
}
inline ::proto_ff::Attr64* RoleFacadeProto::add_growfacade() {
  return growfacade_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >&
RoleFacadeProto::growfacade() const {
  return growfacade_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >*
RoleFacadeProto::mutable_growfacade() {
  return &growfacade_;
}

// optional int32 color = 2;
inline bool RoleFacadeProto::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleFacadeProto::set_has_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleFacadeProto::clear_has_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleFacadeProto::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 RoleFacadeProto::color() const {
  return color_;
}
inline void RoleFacadeProto::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}

// -------------------------------------------------------------------

// RoleListDBProto

// optional uint64 cid = 1;
inline bool RoleListDBProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleListDBProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleListDBProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleListDBProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RoleListDBProto::cid() const {
  return cid_;
}
inline void RoleListDBProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional string name = 2;
inline bool RoleListDBProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleListDBProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleListDBProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleListDBProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleListDBProto::name() const {
  return *name_;
}
inline void RoleListDBProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleListDBProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleListDBProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleListDBProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleListDBProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleListDBProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 prof = 3;
inline bool RoleListDBProto::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleListDBProto::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleListDBProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleListDBProto::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 RoleListDBProto::prof() const {
  return prof_;
}
inline void RoleListDBProto::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 4;
inline bool RoleListDBProto::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleListDBProto::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleListDBProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleListDBProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoleListDBProto::level() const {
  return level_;
}
inline void RoleListDBProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 fight = 5;
inline bool RoleListDBProto::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleListDBProto::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleListDBProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleListDBProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 RoleListDBProto::fight() const {
  return fight_;
}
inline void RoleListDBProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 createtime = 6;
inline bool RoleListDBProto::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleListDBProto::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleListDBProto::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleListDBProto::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 RoleListDBProto::createtime() const {
  return createtime_;
}
inline void RoleListDBProto::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 7;
inline bool RoleListDBProto::has_facade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleListDBProto::set_has_facade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleListDBProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleListDBProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& RoleListDBProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* RoleListDBProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* RoleListDBProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void RoleListDBProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint64 sceneid = 8;
inline bool RoleListDBProto::has_sceneid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleListDBProto::set_has_sceneid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleListDBProto::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleListDBProto::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 RoleListDBProto::sceneid() const {
  return sceneid_;
}
inline void RoleListDBProto::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 mapid = 9;
inline bool RoleListDBProto::has_mapid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleListDBProto::set_has_mapid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleListDBProto::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleListDBProto::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 RoleListDBProto::mapid() const {
  return mapid_;
}
inline void RoleListDBProto::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional .proto_ff.Vector3PB pos = 10;
inline bool RoleListDBProto::has_pos() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleListDBProto::set_has_pos() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleListDBProto::clear_has_pos() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleListDBProto::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& RoleListDBProto::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RoleListDBProto::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional uint64 lastsceneid = 11;
inline bool RoleListDBProto::has_lastsceneid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleListDBProto::set_has_lastsceneid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleListDBProto::clear_has_lastsceneid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleListDBProto::clear_lastsceneid() {
  lastsceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastsceneid();
}
inline ::google::protobuf::uint64 RoleListDBProto::lastsceneid() const {
  return lastsceneid_;
}
inline void RoleListDBProto::set_lastsceneid(::google::protobuf::uint64 value) {
  set_has_lastsceneid();
  lastsceneid_ = value;
}

// optional uint64 lastmapid = 12;
inline bool RoleListDBProto::has_lastmapid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleListDBProto::set_has_lastmapid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleListDBProto::clear_has_lastmapid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleListDBProto::clear_lastmapid() {
  lastmapid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastmapid();
}
inline ::google::protobuf::uint64 RoleListDBProto::lastmapid() const {
  return lastmapid_;
}
inline void RoleListDBProto::set_lastmapid(::google::protobuf::uint64 value) {
  set_has_lastmapid();
  lastmapid_ = value;
}

// optional .proto_ff.Vector3PB lastpos = 13;
inline bool RoleListDBProto::has_lastpos() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleListDBProto::set_has_lastpos() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleListDBProto::clear_has_lastpos() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleListDBProto::clear_lastpos() {
  if (lastpos_ != NULL) lastpos_->::proto_ff::Vector3PB::Clear();
  clear_has_lastpos();
}
inline const ::proto_ff::Vector3PB& RoleListDBProto::lastpos() const {
  return lastpos_ != NULL ? *lastpos_ : *default_instance_->lastpos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::mutable_lastpos() {
  set_has_lastpos();
  if (lastpos_ == NULL) lastpos_ = new ::proto_ff::Vector3PB;
  return lastpos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::release_lastpos() {
  clear_has_lastpos();
  ::proto_ff::Vector3PB* temp = lastpos_;
  lastpos_ = NULL;
  return temp;
}
inline void RoleListDBProto::set_allocated_lastpos(::proto_ff::Vector3PB* lastpos) {
  delete lastpos_;
  lastpos_ = lastpos;
  if (lastpos) {
    set_has_lastpos();
  } else {
    clear_has_lastpos();
  }
}

// -------------------------------------------------------------------

// LoginRoleProto

// optional uint64 cid = 1;
inline bool LoginRoleProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRoleProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRoleProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRoleProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 LoginRoleProto::cid() const {
  return cid_;
}
inline void LoginRoleProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional string name = 2;
inline bool LoginRoleProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRoleProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRoleProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRoleProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& LoginRoleProto::name() const {
  return *name_;
}
inline void LoginRoleProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LoginRoleProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LoginRoleProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginRoleProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* LoginRoleProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginRoleProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 prof = 3;
inline bool LoginRoleProto::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRoleProto::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRoleProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRoleProto::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 LoginRoleProto::prof() const {
  return prof_;
}
inline void LoginRoleProto::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 4;
inline bool LoginRoleProto::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRoleProto::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRoleProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRoleProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LoginRoleProto::level() const {
  return level_;
}
inline void LoginRoleProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 fight = 5;
inline bool LoginRoleProto::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginRoleProto::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginRoleProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginRoleProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 LoginRoleProto::fight() const {
  return fight_;
}
inline void LoginRoleProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 createtime = 6;
inline bool LoginRoleProto::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginRoleProto::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginRoleProto::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginRoleProto::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 LoginRoleProto::createtime() const {
  return createtime_;
}
inline void LoginRoleProto::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 7;
inline bool LoginRoleProto::has_facade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginRoleProto::set_has_facade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginRoleProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginRoleProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& LoginRoleProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* LoginRoleProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* LoginRoleProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void LoginRoleProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// -------------------------------------------------------------------

// LoginSyncProto

// optional uint32 guild_id = 1;
inline bool LoginSyncProto::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginSyncProto::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginSyncProto::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginSyncProto::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 LoginSyncProto::guild_id() const {
  return guild_id_;
}
inline void LoginSyncProto::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// optional string guild_name = 2;
inline bool LoginSyncProto::has_guild_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginSyncProto::set_has_guild_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginSyncProto::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginSyncProto::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& LoginSyncProto::guild_name() const {
  return *guild_name_;
}
inline void LoginSyncProto::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void LoginSyncProto::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void LoginSyncProto::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginSyncProto::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  return guild_name_;
}
inline ::std::string* LoginSyncProto::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginSyncProto::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 guild_duty = 3;
inline bool LoginSyncProto::has_guild_duty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginSyncProto::set_has_guild_duty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginSyncProto::clear_has_guild_duty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginSyncProto::clear_guild_duty() {
  guild_duty_ = 0;
  clear_has_guild_duty();
}
inline ::google::protobuf::int32 LoginSyncProto::guild_duty() const {
  return guild_duty_;
}
inline void LoginSyncProto::set_guild_duty(::google::protobuf::int32 value) {
  set_has_guild_duty();
  guild_duty_ = value;
}

// optional uint64 guild_leader = 4;
inline bool LoginSyncProto::has_guild_leader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginSyncProto::set_has_guild_leader() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginSyncProto::clear_has_guild_leader() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginSyncProto::clear_guild_leader() {
  guild_leader_ = GOOGLE_ULONGLONG(0);
  clear_has_guild_leader();
}
inline ::google::protobuf::uint64 LoginSyncProto::guild_leader() const {
  return guild_leader_;
}
inline void LoginSyncProto::set_guild_leader(::google::protobuf::uint64 value) {
  set_has_guild_leader();
  guild_leader_ = value;
}

// optional uint32 team_id = 5;
inline bool LoginSyncProto::has_team_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginSyncProto::set_has_team_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginSyncProto::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginSyncProto::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 LoginSyncProto::team_id() const {
  return team_id_;
}
inline void LoginSyncProto::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
}

// optional uint64 leader = 6;
inline bool LoginSyncProto::has_leader() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginSyncProto::set_has_leader() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginSyncProto::clear_has_leader() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginSyncProto::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
inline ::google::protobuf::uint64 LoginSyncProto::leader() const {
  return leader_;
}
inline void LoginSyncProto::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
}

// optional int32 mem_count = 7;
inline bool LoginSyncProto::has_mem_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginSyncProto::set_has_mem_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginSyncProto::clear_has_mem_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginSyncProto::clear_mem_count() {
  mem_count_ = 0;
  clear_has_mem_count();
}
inline ::google::protobuf::int32 LoginSyncProto::mem_count() const {
  return mem_count_;
}
inline void LoginSyncProto::set_mem_count(::google::protobuf::int32 value) {
  set_has_mem_count();
  mem_count_ = value;
}

// optional int32 cloness_lev = 8;
inline bool LoginSyncProto::has_cloness_lev() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoginSyncProto::set_has_cloness_lev() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoginSyncProto::clear_has_cloness_lev() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoginSyncProto::clear_cloness_lev() {
  cloness_lev_ = 0;
  clear_has_cloness_lev();
}
inline ::google::protobuf::int32 LoginSyncProto::cloness_lev() const {
  return cloness_lev_;
}
inline void LoginSyncProto::set_cloness_lev(::google::protobuf::int32 value) {
  set_has_cloness_lev();
  cloness_lev_ = value;
}

// -------------------------------------------------------------------

// CenterRoleProto

// optional uint64 cid = 1;
inline bool CenterRoleProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterRoleProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterRoleProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterRoleProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CenterRoleProto::cid() const {
  return cid_;
}
inline void CenterRoleProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 uid = 2;
inline bool CenterRoleProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterRoleProto::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterRoleProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterRoleProto::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CenterRoleProto::uid() const {
  return uid_;
}
inline void CenterRoleProto::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional bytes name = 3;
inline bool CenterRoleProto::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterRoleProto::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterRoleProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterRoleProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CenterRoleProto::name() const {
  return *name_;
}
inline void CenterRoleProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CenterRoleProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CenterRoleProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CenterRoleProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CenterRoleProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CenterRoleProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 prof = 4;
inline bool CenterRoleProto::has_prof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CenterRoleProto::set_has_prof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CenterRoleProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CenterRoleProto::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 CenterRoleProto::prof() const {
  return prof_;
}
inline void CenterRoleProto::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 5;
inline bool CenterRoleProto::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CenterRoleProto::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CenterRoleProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CenterRoleProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CenterRoleProto::level() const {
  return level_;
}
inline void CenterRoleProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 fight = 6;
inline bool CenterRoleProto::has_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CenterRoleProto::set_has_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CenterRoleProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CenterRoleProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 CenterRoleProto::fight() const {
  return fight_;
}
inline void CenterRoleProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 lastlogout = 7;
inline bool CenterRoleProto::has_lastlogout() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CenterRoleProto::set_has_lastlogout() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CenterRoleProto::clear_has_lastlogout() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CenterRoleProto::clear_lastlogout() {
  lastlogout_ = GOOGLE_ULONGLONG(0);
  clear_has_lastlogout();
}
inline ::google::protobuf::uint64 CenterRoleProto::lastlogout() const {
  return lastlogout_;
}
inline void CenterRoleProto::set_lastlogout(::google::protobuf::uint64 value) {
  set_has_lastlogout();
  lastlogout_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 8;
inline bool CenterRoleProto::has_facade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CenterRoleProto::set_has_facade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CenterRoleProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CenterRoleProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& CenterRoleProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* CenterRoleProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* CenterRoleProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void CenterRoleProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint32 vip_level = 9;
inline bool CenterRoleProto::has_vip_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CenterRoleProto::set_has_vip_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CenterRoleProto::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CenterRoleProto::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 CenterRoleProto::vip_level() const {
  return vip_level_;
}
inline void CenterRoleProto::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional int64 hp = 10;
inline bool CenterRoleProto::has_hp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CenterRoleProto::set_has_hp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CenterRoleProto::clear_has_hp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CenterRoleProto::clear_hp() {
  hp_ = GOOGLE_LONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::int64 CenterRoleProto::hp() const {
  return hp_;
}
inline void CenterRoleProto::set_hp(::google::protobuf::int64 value) {
  set_has_hp();
  hp_ = value;
}

// optional int64 max_hp = 11;
inline bool CenterRoleProto::has_max_hp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CenterRoleProto::set_has_max_hp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CenterRoleProto::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CenterRoleProto::clear_max_hp() {
  max_hp_ = GOOGLE_LONGLONG(0);
  clear_has_max_hp();
}
inline ::google::protobuf::int64 CenterRoleProto::max_hp() const {
  return max_hp_;
}
inline void CenterRoleProto::set_max_hp(::google::protobuf::int64 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// -------------------------------------------------------------------

// SocialRoleProto

// optional uint64 cid = 1;
inline bool SocialRoleProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialRoleProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialRoleProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialRoleProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 SocialRoleProto::cid() const {
  return cid_;
}
inline void SocialRoleProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 uid = 2;
inline bool SocialRoleProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialRoleProto::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialRoleProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialRoleProto::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 SocialRoleProto::uid() const {
  return uid_;
}
inline void SocialRoleProto::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional bytes name = 3;
inline bool SocialRoleProto::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialRoleProto::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialRoleProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialRoleProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SocialRoleProto::name() const {
  return *name_;
}
inline void SocialRoleProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SocialRoleProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SocialRoleProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SocialRoleProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* SocialRoleProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SocialRoleProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 prof = 4;
inline bool SocialRoleProto::has_prof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SocialRoleProto::set_has_prof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SocialRoleProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SocialRoleProto::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 SocialRoleProto::prof() const {
  return prof_;
}
inline void SocialRoleProto::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 5;
inline bool SocialRoleProto::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SocialRoleProto::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SocialRoleProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SocialRoleProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SocialRoleProto::level() const {
  return level_;
}
inline void SocialRoleProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 fight = 6;
inline bool SocialRoleProto::has_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SocialRoleProto::set_has_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SocialRoleProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SocialRoleProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 SocialRoleProto::fight() const {
  return fight_;
}
inline void SocialRoleProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 lastlogout = 7;
inline bool SocialRoleProto::has_lastlogout() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SocialRoleProto::set_has_lastlogout() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SocialRoleProto::clear_has_lastlogout() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SocialRoleProto::clear_lastlogout() {
  lastlogout_ = GOOGLE_ULONGLONG(0);
  clear_has_lastlogout();
}
inline ::google::protobuf::uint64 SocialRoleProto::lastlogout() const {
  return lastlogout_;
}
inline void SocialRoleProto::set_lastlogout(::google::protobuf::uint64 value) {
  set_has_lastlogout();
  lastlogout_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 8;
inline bool SocialRoleProto::has_facade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SocialRoleProto::set_has_facade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SocialRoleProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SocialRoleProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& SocialRoleProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* SocialRoleProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* SocialRoleProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void SocialRoleProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint32 vip_level = 9;
inline bool SocialRoleProto::has_vip_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SocialRoleProto::set_has_vip_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SocialRoleProto::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SocialRoleProto::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 SocialRoleProto::vip_level() const {
  return vip_level_;
}
inline void SocialRoleProto::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional uint32 zid = 10;
inline bool SocialRoleProto::has_zid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SocialRoleProto::set_has_zid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SocialRoleProto::clear_has_zid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SocialRoleProto::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 SocialRoleProto::zid() const {
  return zid_;
}
inline void SocialRoleProto::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional bool isonline = 11;
inline bool SocialRoleProto::has_isonline() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SocialRoleProto::set_has_isonline() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SocialRoleProto::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SocialRoleProto::clear_isonline() {
  isonline_ = false;
  clear_has_isonline();
}
inline bool SocialRoleProto::isonline() const {
  return isonline_;
}
inline void SocialRoleProto::set_isonline(bool value) {
  set_has_isonline();
  isonline_ = value;
}

// optional int64 hp = 12;
inline bool SocialRoleProto::has_hp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SocialRoleProto::set_has_hp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SocialRoleProto::clear_has_hp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SocialRoleProto::clear_hp() {
  hp_ = GOOGLE_LONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::int64 SocialRoleProto::hp() const {
  return hp_;
}
inline void SocialRoleProto::set_hp(::google::protobuf::int64 value) {
  set_has_hp();
  hp_ = value;
}

// optional int64 max_hp = 13;
inline bool SocialRoleProto::has_max_hp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SocialRoleProto::set_has_max_hp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SocialRoleProto::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SocialRoleProto::clear_max_hp() {
  max_hp_ = GOOGLE_LONGLONG(0);
  clear_has_max_hp();
}
inline ::google::protobuf::int64 SocialRoleProto::max_hp() const {
  return max_hp_;
}
inline void SocialRoleProto::set_max_hp(::google::protobuf::int64 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// -------------------------------------------------------------------

// Attr

// optional uint32 id = 1;
inline bool Attr::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attr::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attr::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attr::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Attr::id() const {
  return id_;
}
inline void Attr::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 value = 2;
inline bool Attr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attr::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 Attr::value() const {
  return value_;
}
inline void Attr::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// BlueStarAttr

// optional uint32 id = 1;
inline bool BlueStarAttr::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlueStarAttr::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlueStarAttr::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlueStarAttr::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BlueStarAttr::id() const {
  return id_;
}
inline void BlueStarAttr::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 value = 2;
inline bool BlueStarAttr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlueStarAttr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BlueStarAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BlueStarAttr::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 BlueStarAttr::value() const {
  return value_;
}
inline void BlueStarAttr::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// optional int32 lv_part = 3;
inline bool BlueStarAttr::has_lv_part() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlueStarAttr::set_has_lv_part() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlueStarAttr::clear_has_lv_part() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlueStarAttr::clear_lv_part() {
  lv_part_ = 0;
  clear_has_lv_part();
}
inline ::google::protobuf::int32 BlueStarAttr::lv_part() const {
  return lv_part_;
}
inline void BlueStarAttr::set_lv_part(::google::protobuf::int32 value) {
  set_has_lv_part();
  lv_part_ = value;
}

// -------------------------------------------------------------------

// ItemProtoInfo

// optional int32 index = 1;
inline bool ItemProtoInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemProtoInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemProtoInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemProtoInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ItemProtoInfo::index() const {
  return index_;
}
inline void ItemProtoInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional uint64 item_id = 2;
inline bool ItemProtoInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemProtoInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemProtoInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemProtoInfo::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 ItemProtoInfo::item_id() const {
  return item_id_;
}
inline void ItemProtoInfo::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional int64 item_num = 3;
inline bool ItemProtoInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemProtoInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemProtoInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemProtoInfo::clear_item_num() {
  item_num_ = GOOGLE_LONGLONG(0);
  clear_has_item_num();
}
inline ::google::protobuf::int64 ItemProtoInfo::item_num() const {
  return item_num_;
}
inline void ItemProtoInfo::set_item_num(::google::protobuf::int64 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional int32 bind = 4;
inline bool ItemProtoInfo::has_bind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemProtoInfo::set_has_bind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemProtoInfo::clear_has_bind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemProtoInfo::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 ItemProtoInfo::bind() const {
  return bind_;
}
inline void ItemProtoInfo::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
}

// optional int32 level = 5;
inline bool ItemProtoInfo::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemProtoInfo::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemProtoInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemProtoInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ItemProtoInfo::level() const {
  return level_;
}
inline void ItemProtoInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// repeated .proto_ff.Attr base = 6;
inline int ItemProtoInfo::base_size() const {
  return base_.size();
}
inline void ItemProtoInfo::clear_base() {
  base_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::base(int index) const {
  return base_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_base(int index) {
  return base_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_base() {
  return base_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::base() const {
  return base_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_base() {
  return &base_;
}

// repeated .proto_ff.Attr refine = 7;
inline int ItemProtoInfo::refine_size() const {
  return refine_.size();
}
inline void ItemProtoInfo::clear_refine() {
  refine_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::refine(int index) const {
  return refine_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_refine(int index) {
  return refine_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_refine() {
  return refine_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::refine() const {
  return refine_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_refine() {
  return &refine_;
}

// repeated .proto_ff.BlueStarAttr blue = 8;
inline int ItemProtoInfo::blue_size() const {
  return blue_.size();
}
inline void ItemProtoInfo::clear_blue() {
  blue_.Clear();
}
inline const ::proto_ff::BlueStarAttr& ItemProtoInfo::blue(int index) const {
  return blue_.Get(index);
}
inline ::proto_ff::BlueStarAttr* ItemProtoInfo::mutable_blue(int index) {
  return blue_.Mutable(index);
}
inline ::proto_ff::BlueStarAttr* ItemProtoInfo::add_blue() {
  return blue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >&
ItemProtoInfo::blue() const {
  return blue_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >*
ItemProtoInfo::mutable_blue() {
  return &blue_;
}

// repeated .proto_ff.Attr god = 9;
inline int ItemProtoInfo::god_size() const {
  return god_.size();
}
inline void ItemProtoInfo::clear_god() {
  god_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::god(int index) const {
  return god_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_god(int index) {
  return god_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_god() {
  return god_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::god() const {
  return god_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_god() {
  return &god_;
}

// repeated .proto_ff.Attr special = 10;
inline int ItemProtoInfo::special_size() const {
  return special_.size();
}
inline void ItemProtoInfo::clear_special() {
  special_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::special(int index) const {
  return special_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_special(int index) {
  return special_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_special() {
  return special_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::special() const {
  return special_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_special() {
  return &special_;
}

// optional uint64 expireTime = 11;
inline bool ItemProtoInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemProtoInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemProtoInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemProtoInfo::clear_expiretime() {
  expiretime_ = GOOGLE_ULONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::uint64 ItemProtoInfo::expiretime() const {
  return expiretime_;
}
inline void ItemProtoInfo::set_expiretime(::google::protobuf::uint64 value) {
  set_has_expiretime();
  expiretime_ = value;
}

// -------------------------------------------------------------------

// EquipSlotInfo

// optional int32 slot_pos = 1;
inline bool EquipSlotInfo::has_slot_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSlotInfo::set_has_slot_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSlotInfo::clear_has_slot_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSlotInfo::clear_slot_pos() {
  slot_pos_ = 0;
  clear_has_slot_pos();
}
inline ::google::protobuf::int32 EquipSlotInfo::slot_pos() const {
  return slot_pos_;
}
inline void EquipSlotInfo::set_slot_pos(::google::protobuf::int32 value) {
  set_has_slot_pos();
  slot_pos_ = value;
}

// optional int64 total_score = 2;
inline bool EquipSlotInfo::has_total_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSlotInfo::set_has_total_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSlotInfo::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSlotInfo::clear_total_score() {
  total_score_ = GOOGLE_LONGLONG(0);
  clear_has_total_score();
}
inline ::google::protobuf::int64 EquipSlotInfo::total_score() const {
  return total_score_;
}
inline void EquipSlotInfo::set_total_score(::google::protobuf::int64 value) {
  set_has_total_score();
  total_score_ = value;
}

// -------------------------------------------------------------------

// EquipInfo

// optional int32 pos = 1;
inline bool EquipInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 EquipInfo::pos() const {
  return pos_;
}
inline void EquipInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// optional .proto_ff.ItemProtoInfo equip = 2;
inline bool EquipInfo::has_equip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipInfo::set_has_equip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipInfo::clear_has_equip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipInfo::clear_equip() {
  if (equip_ != NULL) equip_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_equip();
}
inline const ::proto_ff::ItemProtoInfo& EquipInfo::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::proto_ff::ItemProtoInfo* EquipInfo::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::proto_ff::ItemProtoInfo;
  return equip_;
}
inline ::proto_ff::ItemProtoInfo* EquipInfo::release_equip() {
  clear_has_equip();
  ::proto_ff::ItemProtoInfo* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void EquipInfo::set_allocated_equip(::proto_ff::ItemProtoInfo* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
}

// optional .proto_ff.EquipSlotInfo slot = 3;
inline bool EquipInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipInfo::clear_slot() {
  if (slot_ != NULL) slot_->::proto_ff::EquipSlotInfo::Clear();
  clear_has_slot();
}
inline const ::proto_ff::EquipSlotInfo& EquipInfo::slot() const {
  return slot_ != NULL ? *slot_ : *default_instance_->slot_;
}
inline ::proto_ff::EquipSlotInfo* EquipInfo::mutable_slot() {
  set_has_slot();
  if (slot_ == NULL) slot_ = new ::proto_ff::EquipSlotInfo;
  return slot_;
}
inline ::proto_ff::EquipSlotInfo* EquipInfo::release_slot() {
  clear_has_slot();
  ::proto_ff::EquipSlotInfo* temp = slot_;
  slot_ = NULL;
  return temp;
}
inline void EquipInfo::set_allocated_slot(::proto_ff::EquipSlotInfo* slot) {
  delete slot_;
  slot_ = slot;
  if (slot) {
    set_has_slot();
  } else {
    clear_has_slot();
  }
}

// -------------------------------------------------------------------

// ItemSimpleProto

// optional uint64 itemid = 1;
inline bool ItemSimpleProto::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemSimpleProto::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemSimpleProto::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemSimpleProto::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 ItemSimpleProto::itemid() const {
  return itemid_;
}
inline void ItemSimpleProto::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int64 num = 2;
inline bool ItemSimpleProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemSimpleProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemSimpleProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemSimpleProto::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::int64 ItemSimpleProto::num() const {
  return num_;
}
inline void ItemSimpleProto::set_num(::google::protobuf::int64 value) {
  set_has_num();
  num_ = value;
}

// optional int32 bind = 3;
inline bool ItemSimpleProto::has_bind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemSimpleProto::set_has_bind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemSimpleProto::clear_has_bind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemSimpleProto::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 ItemSimpleProto::bind() const {
  return bind_;
}
inline void ItemSimpleProto::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
}

// -------------------------------------------------------------------

// MultItemSimpleProto

// repeated .proto_ff.ItemSimpleProto info = 1;
inline int MultItemSimpleProto::info_size() const {
  return info_.size();
}
inline void MultItemSimpleProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::ItemSimpleProto& MultItemSimpleProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::ItemSimpleProto* MultItemSimpleProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::ItemSimpleProto* MultItemSimpleProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >&
MultItemSimpleProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >*
MultItemSimpleProto::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// MailParamProto

// optional uint64 cfgid = 1;
inline bool MailParamProto::has_cfgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailParamProto::set_has_cfgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailParamProto::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailParamProto::clear_cfgid() {
  cfgid_ = GOOGLE_ULONGLONG(0);
  clear_has_cfgid();
}
inline ::google::protobuf::uint64 MailParamProto::cfgid() const {
  return cfgid_;
}
inline void MailParamProto::set_cfgid(::google::protobuf::uint64 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// repeated bytes str_param = 2;
inline int MailParamProto::str_param_size() const {
  return str_param_.size();
}
inline void MailParamProto::clear_str_param() {
  str_param_.Clear();
}
inline const ::std::string& MailParamProto::str_param(int index) const {
  return str_param_.Get(index);
}
inline ::std::string* MailParamProto::mutable_str_param(int index) {
  return str_param_.Mutable(index);
}
inline void MailParamProto::set_str_param(int index, const ::std::string& value) {
  str_param_.Mutable(index)->assign(value);
}
inline void MailParamProto::set_str_param(int index, const char* value) {
  str_param_.Mutable(index)->assign(value);
}
inline void MailParamProto::set_str_param(int index, const void* value, size_t size) {
  str_param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailParamProto::add_str_param() {
  return str_param_.Add();
}
inline void MailParamProto::add_str_param(const ::std::string& value) {
  str_param_.Add()->assign(value);
}
inline void MailParamProto::add_str_param(const char* value) {
  str_param_.Add()->assign(value);
}
inline void MailParamProto::add_str_param(const void* value, size_t size) {
  str_param_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MailParamProto::str_param() const {
  return str_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MailParamProto::mutable_str_param() {
  return &str_param_;
}

// repeated uint64 int_param = 3;
inline int MailParamProto::int_param_size() const {
  return int_param_.size();
}
inline void MailParamProto::clear_int_param() {
  int_param_.Clear();
}
inline ::google::protobuf::uint64 MailParamProto::int_param(int index) const {
  return int_param_.Get(index);
}
inline void MailParamProto::set_int_param(int index, ::google::protobuf::uint64 value) {
  int_param_.Set(index, value);
}
inline void MailParamProto::add_int_param(::google::protobuf::uint64 value) {
  int_param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MailParamProto::int_param() const {
  return int_param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MailParamProto::mutable_int_param() {
  return &int_param_;
}

// -------------------------------------------------------------------

// MailStrProto

// optional bytes str = 1;
inline bool MailStrProto::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailStrProto::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailStrProto::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailStrProto::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& MailStrProto::str() const {
  return *str_;
}
inline void MailStrProto::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void MailStrProto::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void MailStrProto::set_str(const void* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailStrProto::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* MailStrProto::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailStrProto::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_ff.MailParamProto param = 2;
inline bool MailStrProto::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailStrProto::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailStrProto::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailStrProto::clear_param() {
  if (param_ != NULL) param_->::proto_ff::MailParamProto::Clear();
  clear_has_param();
}
inline const ::proto_ff::MailParamProto& MailStrProto::param() const {
  return param_ != NULL ? *param_ : *default_instance_->param_;
}
inline ::proto_ff::MailParamProto* MailStrProto::mutable_param() {
  set_has_param();
  if (param_ == NULL) param_ = new ::proto_ff::MailParamProto;
  return param_;
}
inline ::proto_ff::MailParamProto* MailStrProto::release_param() {
  clear_has_param();
  ::proto_ff::MailParamProto* temp = param_;
  param_ = NULL;
  return temp;
}
inline void MailStrProto::set_allocated_param(::proto_ff::MailParamProto* param) {
  delete param_;
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
}

// -------------------------------------------------------------------

// MailAttachmentList

// repeated .proto_ff.ItemProtoInfo itemInfo = 1;
inline int MailAttachmentList::iteminfo_size() const {
  return iteminfo_.size();
}
inline void MailAttachmentList::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& MailAttachmentList::iteminfo(int index) const {
  return iteminfo_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* MailAttachmentList::mutable_iteminfo(int index) {
  return iteminfo_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* MailAttachmentList::add_iteminfo() {
  return iteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
MailAttachmentList::iteminfo() const {
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
MailAttachmentList::mutable_iteminfo() {
  return &iteminfo_;
}

// -------------------------------------------------------------------

// MailHead

// optional uint64 mailId = 1;
inline bool MailHead::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailHead::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailHead::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailHead::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 MailHead::mailid() const {
  return mailid_;
}
inline void MailHead::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional uint32 type = 2;
inline bool MailHead::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailHead::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailHead::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailHead::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MailHead::type() const {
  return type_;
}
inline void MailHead::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 sendPlayerId = 3;
inline bool MailHead::has_sendplayerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailHead::set_has_sendplayerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailHead::clear_has_sendplayerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailHead::clear_sendplayerid() {
  sendplayerid_ = GOOGLE_ULONGLONG(0);
  clear_has_sendplayerid();
}
inline ::google::protobuf::uint64 MailHead::sendplayerid() const {
  return sendplayerid_;
}
inline void MailHead::set_sendplayerid(::google::protobuf::uint64 value) {
  set_has_sendplayerid();
  sendplayerid_ = value;
}

// optional bytes sendPlayerName = 4;
inline bool MailHead::has_sendplayername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailHead::set_has_sendplayername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailHead::clear_has_sendplayername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailHead::clear_sendplayername() {
  if (sendplayername_ != &::google::protobuf::internal::kEmptyString) {
    sendplayername_->clear();
  }
  clear_has_sendplayername();
}
inline const ::std::string& MailHead::sendplayername() const {
  return *sendplayername_;
}
inline void MailHead::set_sendplayername(const ::std::string& value) {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  sendplayername_->assign(value);
}
inline void MailHead::set_sendplayername(const char* value) {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  sendplayername_->assign(value);
}
inline void MailHead::set_sendplayername(const void* value, size_t size) {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  sendplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailHead::mutable_sendplayername() {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  return sendplayername_;
}
inline ::std::string* MailHead::release_sendplayername() {
  clear_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sendplayername_;
    sendplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailHead::set_allocated_sendplayername(::std::string* sendplayername) {
  if (sendplayername_ != &::google::protobuf::internal::kEmptyString) {
    delete sendplayername_;
  }
  if (sendplayername) {
    set_has_sendplayername();
    sendplayername_ = sendplayername;
  } else {
    clear_has_sendplayername();
    sendplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 destPlayerId = 5;
inline bool MailHead::has_destplayerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailHead::set_has_destplayerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailHead::clear_has_destplayerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailHead::clear_destplayerid() {
  destplayerid_ = GOOGLE_ULONGLONG(0);
  clear_has_destplayerid();
}
inline ::google::protobuf::uint64 MailHead::destplayerid() const {
  return destplayerid_;
}
inline void MailHead::set_destplayerid(::google::protobuf::uint64 value) {
  set_has_destplayerid();
  destplayerid_ = value;
}

// optional .proto_ff.MailStrProto topic = 6;
inline bool MailHead::has_topic() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailHead::set_has_topic() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailHead::clear_has_topic() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailHead::clear_topic() {
  if (topic_ != NULL) topic_->::proto_ff::MailStrProto::Clear();
  clear_has_topic();
}
inline const ::proto_ff::MailStrProto& MailHead::topic() const {
  return topic_ != NULL ? *topic_ : *default_instance_->topic_;
}
inline ::proto_ff::MailStrProto* MailHead::mutable_topic() {
  set_has_topic();
  if (topic_ == NULL) topic_ = new ::proto_ff::MailStrProto;
  return topic_;
}
inline ::proto_ff::MailStrProto* MailHead::release_topic() {
  clear_has_topic();
  ::proto_ff::MailStrProto* temp = topic_;
  topic_ = NULL;
  return temp;
}
inline void MailHead::set_allocated_topic(::proto_ff::MailStrProto* topic) {
  delete topic_;
  topic_ = topic;
  if (topic) {
    set_has_topic();
  } else {
    clear_has_topic();
  }
}

// optional uint64 createTime = 7;
inline bool MailHead::has_createtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailHead::set_has_createtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailHead::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailHead::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 MailHead::createtime() const {
  return createtime_;
}
inline void MailHead::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional uint32 status = 8;
inline bool MailHead::has_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailHead::set_has_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailHead::clear_has_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailHead::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 MailHead::status() const {
  return status_;
}
inline void MailHead::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 fetch = 9;
inline bool MailHead::has_fetch() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailHead::set_has_fetch() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailHead::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailHead::clear_fetch() {
  fetch_ = 0;
  clear_has_fetch();
}
inline ::google::protobuf::int32 MailHead::fetch() const {
  return fetch_;
}
inline void MailHead::set_fetch(::google::protobuf::int32 value) {
  set_has_fetch();
  fetch_ = value;
}

// optional int32 has_attach = 10;
inline bool MailHead::has_has_attach() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailHead::set_has_has_attach() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailHead::clear_has_has_attach() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailHead::clear_has_attach() {
  has_attach_ = 0;
  clear_has_has_attach();
}
inline ::google::protobuf::int32 MailHead::has_attach() const {
  return has_attach_;
}
inline void MailHead::set_has_attach(::google::protobuf::int32 value) {
  set_has_has_attach();
  has_attach_ = value;
}

// optional uint64 begin_time = 11;
inline bool MailHead::has_begin_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MailHead::set_has_begin_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MailHead::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MailHead::clear_begin_time() {
  begin_time_ = GOOGLE_ULONGLONG(0);
  clear_has_begin_time();
}
inline ::google::protobuf::uint64 MailHead::begin_time() const {
  return begin_time_;
}
inline void MailHead::set_begin_time(::google::protobuf::uint64 value) {
  set_has_begin_time();
  begin_time_ = value;
}

// optional uint64 end_time = 12;
inline bool MailHead::has_end_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MailHead::set_has_end_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MailHead::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MailHead::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 MailHead::end_time() const {
  return end_time_;
}
inline void MailHead::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// -------------------------------------------------------------------

// MailInfo

// optional .proto_ff.MailHead mailHead = 1;
inline bool MailInfo::has_mailhead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailInfo::set_has_mailhead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailInfo::clear_has_mailhead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailInfo::clear_mailhead() {
  if (mailhead_ != NULL) mailhead_->::proto_ff::MailHead::Clear();
  clear_has_mailhead();
}
inline const ::proto_ff::MailHead& MailInfo::mailhead() const {
  return mailhead_ != NULL ? *mailhead_ : *default_instance_->mailhead_;
}
inline ::proto_ff::MailHead* MailInfo::mutable_mailhead() {
  set_has_mailhead();
  if (mailhead_ == NULL) mailhead_ = new ::proto_ff::MailHead;
  return mailhead_;
}
inline ::proto_ff::MailHead* MailInfo::release_mailhead() {
  clear_has_mailhead();
  ::proto_ff::MailHead* temp = mailhead_;
  mailhead_ = NULL;
  return temp;
}
inline void MailInfo::set_allocated_mailhead(::proto_ff::MailHead* mailhead) {
  delete mailhead_;
  mailhead_ = mailhead;
  if (mailhead) {
    set_has_mailhead();
  } else {
    clear_has_mailhead();
  }
}

// optional .proto_ff.MailStrProto content = 2;
inline bool MailInfo::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailInfo::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailInfo::clear_content() {
  if (content_ != NULL) content_->::proto_ff::MailStrProto::Clear();
  clear_has_content();
}
inline const ::proto_ff::MailStrProto& MailInfo::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::proto_ff::MailStrProto* MailInfo::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::proto_ff::MailStrProto;
  return content_;
}
inline ::proto_ff::MailStrProto* MailInfo::release_content() {
  clear_has_content();
  ::proto_ff::MailStrProto* temp = content_;
  content_ = NULL;
  return temp;
}
inline void MailInfo::set_allocated_content(::proto_ff::MailStrProto* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// optional uint64 gold = 3;
inline bool MailInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailInfo::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::uint64 MailInfo::gold() const {
  return gold_;
}
inline void MailInfo::set_gold(::google::protobuf::uint64 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint64 diamond = 4;
inline bool MailInfo::has_diamond() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailInfo::set_has_diamond() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailInfo::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailInfo::clear_diamond() {
  diamond_ = GOOGLE_ULONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::uint64 MailInfo::diamond() const {
  return diamond_;
}
inline void MailInfo::set_diamond(::google::protobuf::uint64 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint64 bindDiamond = 5;
inline bool MailInfo::has_binddiamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailInfo::set_has_binddiamond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailInfo::clear_has_binddiamond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailInfo::clear_binddiamond() {
  binddiamond_ = GOOGLE_ULONGLONG(0);
  clear_has_binddiamond();
}
inline ::google::protobuf::uint64 MailInfo::binddiamond() const {
  return binddiamond_;
}
inline void MailInfo::set_binddiamond(::google::protobuf::uint64 value) {
  set_has_binddiamond();
  binddiamond_ = value;
}

// optional uint64 magiccrystal = 6;
inline bool MailInfo::has_magiccrystal() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailInfo::set_has_magiccrystal() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailInfo::clear_has_magiccrystal() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailInfo::clear_magiccrystal() {
  magiccrystal_ = GOOGLE_ULONGLONG(0);
  clear_has_magiccrystal();
}
inline ::google::protobuf::uint64 MailInfo::magiccrystal() const {
  return magiccrystal_;
}
inline void MailInfo::set_magiccrystal(::google::protobuf::uint64 value) {
  set_has_magiccrystal();
  magiccrystal_ = value;
}

// optional uint64 prestige = 7;
inline bool MailInfo::has_prestige() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailInfo::set_has_prestige() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailInfo::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailInfo::clear_prestige() {
  prestige_ = GOOGLE_ULONGLONG(0);
  clear_has_prestige();
}
inline ::google::protobuf::uint64 MailInfo::prestige() const {
  return prestige_;
}
inline void MailInfo::set_prestige(::google::protobuf::uint64 value) {
  set_has_prestige();
  prestige_ = value;
}

// optional .proto_ff.MailAttachmentList attachmentList = 8;
inline bool MailInfo::has_attachmentlist() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailInfo::set_has_attachmentlist() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailInfo::clear_has_attachmentlist() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailInfo::clear_attachmentlist() {
  if (attachmentlist_ != NULL) attachmentlist_->::proto_ff::MailAttachmentList::Clear();
  clear_has_attachmentlist();
}
inline const ::proto_ff::MailAttachmentList& MailInfo::attachmentlist() const {
  return attachmentlist_ != NULL ? *attachmentlist_ : *default_instance_->attachmentlist_;
}
inline ::proto_ff::MailAttachmentList* MailInfo::mutable_attachmentlist() {
  set_has_attachmentlist();
  if (attachmentlist_ == NULL) attachmentlist_ = new ::proto_ff::MailAttachmentList;
  return attachmentlist_;
}
inline ::proto_ff::MailAttachmentList* MailInfo::release_attachmentlist() {
  clear_has_attachmentlist();
  ::proto_ff::MailAttachmentList* temp = attachmentlist_;
  attachmentlist_ = NULL;
  return temp;
}
inline void MailInfo::set_allocated_attachmentlist(::proto_ff::MailAttachmentList* attachmentlist) {
  delete attachmentlist_;
  attachmentlist_ = attachmentlist;
  if (attachmentlist) {
    set_has_attachmentlist();
  } else {
    clear_has_attachmentlist();
  }
}

// optional int32 source = 9;
inline bool MailInfo::has_source() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailInfo::set_has_source() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailInfo::clear_has_source() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailInfo::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::google::protobuf::int32 MailInfo::source() const {
  return source_;
}
inline void MailInfo::set_source(::google::protobuf::int32 value) {
  set_has_source();
  source_ = value;
}

// optional int64 sourceVal = 10;
inline bool MailInfo::has_sourceval() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailInfo::set_has_sourceval() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailInfo::clear_has_sourceval() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailInfo::clear_sourceval() {
  sourceval_ = GOOGLE_LONGLONG(0);
  clear_has_sourceval();
}
inline ::google::protobuf::int64 MailInfo::sourceval() const {
  return sourceval_;
}
inline void MailInfo::set_sourceval(::google::protobuf::int64 value) {
  set_has_sourceval();
  sourceval_ = value;
}

// -------------------------------------------------------------------

// WebMailItemProto

// optional uint64 id = 1;
inline bool WebMailItemProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebMailItemProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebMailItemProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebMailItemProto::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 WebMailItemProto::id() const {
  return id_;
}
inline void WebMailItemProto::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 num = 2;
inline bool WebMailItemProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebMailItemProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebMailItemProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebMailItemProto::clear_num() {
  num_ = GOOGLE_ULONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::uint64 WebMailItemProto::num() const {
  return num_;
}
inline void WebMailItemProto::set_num(::google::protobuf::uint64 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// WebMailDataProto

// optional uint64 mailId = 1;
inline bool WebMailDataProto::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebMailDataProto::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebMailDataProto::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebMailDataProto::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 WebMailDataProto::mailid() const {
  return mailid_;
}
inline void WebMailDataProto::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional uint64 createTime = 2;
inline bool WebMailDataProto::has_createtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebMailDataProto::set_has_createtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebMailDataProto::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebMailDataProto::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 WebMailDataProto::createtime() const {
  return createtime_;
}
inline void WebMailDataProto::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional .proto_ff.MailStrProto topic = 3;
inline bool WebMailDataProto::has_topic() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebMailDataProto::set_has_topic() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebMailDataProto::clear_has_topic() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebMailDataProto::clear_topic() {
  if (topic_ != NULL) topic_->::proto_ff::MailStrProto::Clear();
  clear_has_topic();
}
inline const ::proto_ff::MailStrProto& WebMailDataProto::topic() const {
  return topic_ != NULL ? *topic_ : *default_instance_->topic_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::mutable_topic() {
  set_has_topic();
  if (topic_ == NULL) topic_ = new ::proto_ff::MailStrProto;
  return topic_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::release_topic() {
  clear_has_topic();
  ::proto_ff::MailStrProto* temp = topic_;
  topic_ = NULL;
  return temp;
}
inline void WebMailDataProto::set_allocated_topic(::proto_ff::MailStrProto* topic) {
  delete topic_;
  topic_ = topic;
  if (topic) {
    set_has_topic();
  } else {
    clear_has_topic();
  }
}

// optional int32 fetch = 4;
inline bool WebMailDataProto::has_fetch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebMailDataProto::set_has_fetch() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebMailDataProto::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebMailDataProto::clear_fetch() {
  fetch_ = 0;
  clear_has_fetch();
}
inline ::google::protobuf::int32 WebMailDataProto::fetch() const {
  return fetch_;
}
inline void WebMailDataProto::set_fetch(::google::protobuf::int32 value) {
  set_has_fetch();
  fetch_ = value;
}

// optional .proto_ff.MailStrProto content = 5;
inline bool WebMailDataProto::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebMailDataProto::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebMailDataProto::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebMailDataProto::clear_content() {
  if (content_ != NULL) content_->::proto_ff::MailStrProto::Clear();
  clear_has_content();
}
inline const ::proto_ff::MailStrProto& WebMailDataProto::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::proto_ff::MailStrProto;
  return content_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::release_content() {
  clear_has_content();
  ::proto_ff::MailStrProto* temp = content_;
  content_ = NULL;
  return temp;
}
inline void WebMailDataProto::set_allocated_content(::proto_ff::MailStrProto* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// optional uint64 gold = 6;
inline bool WebMailDataProto::has_gold() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebMailDataProto::set_has_gold() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebMailDataProto::clear_has_gold() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebMailDataProto::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::uint64 WebMailDataProto::gold() const {
  return gold_;
}
inline void WebMailDataProto::set_gold(::google::protobuf::uint64 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint64 diamond = 7;
inline bool WebMailDataProto::has_diamond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebMailDataProto::set_has_diamond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebMailDataProto::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebMailDataProto::clear_diamond() {
  diamond_ = GOOGLE_ULONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::uint64 WebMailDataProto::diamond() const {
  return diamond_;
}
inline void WebMailDataProto::set_diamond(::google::protobuf::uint64 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint64 bindDiamond = 8;
inline bool WebMailDataProto::has_binddiamond() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WebMailDataProto::set_has_binddiamond() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WebMailDataProto::clear_has_binddiamond() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WebMailDataProto::clear_binddiamond() {
  binddiamond_ = GOOGLE_ULONGLONG(0);
  clear_has_binddiamond();
}
inline ::google::protobuf::uint64 WebMailDataProto::binddiamond() const {
  return binddiamond_;
}
inline void WebMailDataProto::set_binddiamond(::google::protobuf::uint64 value) {
  set_has_binddiamond();
  binddiamond_ = value;
}

// optional uint64 arenaScore = 9;
inline bool WebMailDataProto::has_arenascore() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WebMailDataProto::set_has_arenascore() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WebMailDataProto::clear_has_arenascore() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WebMailDataProto::clear_arenascore() {
  arenascore_ = GOOGLE_ULONGLONG(0);
  clear_has_arenascore();
}
inline ::google::protobuf::uint64 WebMailDataProto::arenascore() const {
  return arenascore_;
}
inline void WebMailDataProto::set_arenascore(::google::protobuf::uint64 value) {
  set_has_arenascore();
  arenascore_ = value;
}

// optional uint64 magiccrystal = 10;
inline bool WebMailDataProto::has_magiccrystal() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WebMailDataProto::set_has_magiccrystal() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WebMailDataProto::clear_has_magiccrystal() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WebMailDataProto::clear_magiccrystal() {
  magiccrystal_ = GOOGLE_ULONGLONG(0);
  clear_has_magiccrystal();
}
inline ::google::protobuf::uint64 WebMailDataProto::magiccrystal() const {
  return magiccrystal_;
}
inline void WebMailDataProto::set_magiccrystal(::google::protobuf::uint64 value) {
  set_has_magiccrystal();
  magiccrystal_ = value;
}

// optional uint64 prestige = 11;
inline bool WebMailDataProto::has_prestige() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WebMailDataProto::set_has_prestige() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WebMailDataProto::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WebMailDataProto::clear_prestige() {
  prestige_ = GOOGLE_ULONGLONG(0);
  clear_has_prestige();
}
inline ::google::protobuf::uint64 WebMailDataProto::prestige() const {
  return prestige_;
}
inline void WebMailDataProto::set_prestige(::google::protobuf::uint64 value) {
  set_has_prestige();
  prestige_ = value;
}

// repeated .proto_ff.WebMailItemProto itemList = 12;
inline int WebMailDataProto::itemlist_size() const {
  return itemlist_.size();
}
inline void WebMailDataProto::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::proto_ff::WebMailItemProto& WebMailDataProto::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::proto_ff::WebMailItemProto* WebMailDataProto::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::proto_ff::WebMailItemProto* WebMailDataProto::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >&
WebMailDataProto::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >*
WebMailDataProto::mutable_itemlist() {
  return &itemlist_;
}

// -------------------------------------------------------------------

// UseItemArgProto

// optional int64 int_param = 1;
inline bool UseItemArgProto::has_int_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseItemArgProto::set_has_int_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseItemArgProto::clear_has_int_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseItemArgProto::clear_int_param() {
  int_param_ = GOOGLE_LONGLONG(0);
  clear_has_int_param();
}
inline ::google::protobuf::int64 UseItemArgProto::int_param() const {
  return int_param_;
}
inline void UseItemArgProto::set_int_param(::google::protobuf::int64 value) {
  set_has_int_param();
  int_param_ = value;
}

// optional bytes str_param = 2;
inline bool UseItemArgProto::has_str_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseItemArgProto::set_has_str_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseItemArgProto::clear_has_str_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseItemArgProto::clear_str_param() {
  if (str_param_ != &::google::protobuf::internal::kEmptyString) {
    str_param_->clear();
  }
  clear_has_str_param();
}
inline const ::std::string& UseItemArgProto::str_param() const {
  return *str_param_;
}
inline void UseItemArgProto::set_str_param(const ::std::string& value) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(value);
}
inline void UseItemArgProto::set_str_param(const char* value) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(value);
}
inline void UseItemArgProto::set_str_param(const void* value, size_t size) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UseItemArgProto::mutable_str_param() {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  return str_param_;
}
inline ::std::string* UseItemArgProto::release_str_param() {
  clear_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_param_;
    str_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UseItemArgProto::set_allocated_str_param(::std::string* str_param) {
  if (str_param_ != &::google::protobuf::internal::kEmptyString) {
    delete str_param_;
  }
  if (str_param) {
    set_has_str_param();
    str_param_ = str_param;
  } else {
    clear_has_str_param();
    str_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated uint64 item_lst = 3;
inline int UseItemArgProto::item_lst_size() const {
  return item_lst_.size();
}
inline void UseItemArgProto::clear_item_lst() {
  item_lst_.Clear();
}
inline ::google::protobuf::uint64 UseItemArgProto::item_lst(int index) const {
  return item_lst_.Get(index);
}
inline void UseItemArgProto::set_item_lst(int index, ::google::protobuf::uint64 value) {
  item_lst_.Set(index, value);
}
inline void UseItemArgProto::add_item_lst(::google::protobuf::uint64 value) {
  item_lst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UseItemArgProto::item_lst() const {
  return item_lst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UseItemArgProto::mutable_item_lst() {
  return &item_lst_;
}

// -------------------------------------------------------------------

// NotifyRoleFacadeCastRsp

// optional uint64 roleid = 1;
inline bool NotifyRoleFacadeCastRsp::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRoleFacadeCastRsp::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRoleFacadeCastRsp::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRoleFacadeCastRsp::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 NotifyRoleFacadeCastRsp::roleid() const {
  return roleid_;
}
inline void NotifyRoleFacadeCastRsp::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 2;
inline bool NotifyRoleFacadeCastRsp::has_facade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRoleFacadeCastRsp::set_has_facade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRoleFacadeCastRsp::clear_has_facade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRoleFacadeCastRsp::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& NotifyRoleFacadeCastRsp::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* NotifyRoleFacadeCastRsp::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* NotifyRoleFacadeCastRsp::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void NotifyRoleFacadeCastRsp::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// -------------------------------------------------------------------

// FunctionUnlockInfoData

// optional uint64 unlockId = 1;
inline bool FunctionUnlockInfoData::has_unlockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionUnlockInfoData::set_has_unlockid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionUnlockInfoData::clear_has_unlockid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionUnlockInfoData::clear_unlockid() {
  unlockid_ = GOOGLE_ULONGLONG(0);
  clear_has_unlockid();
}
inline ::google::protobuf::uint64 FunctionUnlockInfoData::unlockid() const {
  return unlockid_;
}
inline void FunctionUnlockInfoData::set_unlockid(::google::protobuf::uint64 value) {
  set_has_unlockid();
  unlockid_ = value;
}

// optional bool get_reward = 2;
inline bool FunctionUnlockInfoData::has_get_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionUnlockInfoData::set_has_get_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunctionUnlockInfoData::clear_has_get_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunctionUnlockInfoData::clear_get_reward() {
  get_reward_ = false;
  clear_has_get_reward();
}
inline bool FunctionUnlockInfoData::get_reward() const {
  return get_reward_;
}
inline void FunctionUnlockInfoData::set_get_reward(bool value) {
  set_has_get_reward();
  get_reward_ = value;
}

// -------------------------------------------------------------------

// FunctionUnlockInfo

// repeated .proto_ff.FunctionUnlockInfoData data = 1;
inline int FunctionUnlockInfo::data_size() const {
  return data_.size();
}
inline void FunctionUnlockInfo::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::FunctionUnlockInfoData& FunctionUnlockInfo::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::FunctionUnlockInfoData* FunctionUnlockInfo::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::FunctionUnlockInfoData* FunctionUnlockInfo::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >&
FunctionUnlockInfo::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >*
FunctionUnlockInfo::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// RolePlayerMiniInfo

// optional uint64 playerId = 1;
inline bool RolePlayerMiniInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RolePlayerMiniInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RolePlayerMiniInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RolePlayerMiniInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::playerid() const {
  return playerid_;
}
inline void RolePlayerMiniInfo::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string playerName = 2;
inline bool RolePlayerMiniInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RolePlayerMiniInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RolePlayerMiniInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RolePlayerMiniInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& RolePlayerMiniInfo::playername() const {
  return *playername_;
}
inline void RolePlayerMiniInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void RolePlayerMiniInfo::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void RolePlayerMiniInfo::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RolePlayerMiniInfo::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* RolePlayerMiniInfo::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RolePlayerMiniInfo::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 zid = 3;
inline bool RolePlayerMiniInfo::has_zid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RolePlayerMiniInfo::set_has_zid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RolePlayerMiniInfo::clear_has_zid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RolePlayerMiniInfo::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::zid() const {
  return zid_;
}
inline void RolePlayerMiniInfo::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint32 level = 5;
inline bool RolePlayerMiniInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RolePlayerMiniInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RolePlayerMiniInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RolePlayerMiniInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::level() const {
  return level_;
}
inline void RolePlayerMiniInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 closeness = 6;
inline bool RolePlayerMiniInfo::has_closeness() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RolePlayerMiniInfo::set_has_closeness() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RolePlayerMiniInfo::clear_has_closeness() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RolePlayerMiniInfo::clear_closeness() {
  closeness_ = 0u;
  clear_has_closeness();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::closeness() const {
  return closeness_;
}
inline void RolePlayerMiniInfo::set_closeness(::google::protobuf::uint32 value) {
  set_has_closeness();
  closeness_ = value;
}

// optional uint32 recentType = 7;
inline bool RolePlayerMiniInfo::has_recenttype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RolePlayerMiniInfo::set_has_recenttype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RolePlayerMiniInfo::clear_has_recenttype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RolePlayerMiniInfo::clear_recenttype() {
  recenttype_ = 0u;
  clear_has_recenttype();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::recenttype() const {
  return recenttype_;
}
inline void RolePlayerMiniInfo::set_recenttype(::google::protobuf::uint32 value) {
  set_has_recenttype();
  recenttype_ = value;
}

// optional uint64 recentTime = 8;
inline bool RolePlayerMiniInfo::has_recenttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RolePlayerMiniInfo::set_has_recenttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RolePlayerMiniInfo::clear_has_recenttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RolePlayerMiniInfo::clear_recenttime() {
  recenttime_ = GOOGLE_ULONGLONG(0);
  clear_has_recenttime();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::recenttime() const {
  return recenttime_;
}
inline void RolePlayerMiniInfo::set_recenttime(::google::protobuf::uint64 value) {
  set_has_recenttime();
  recenttime_ = value;
}

// optional uint32 prof = 9;
inline bool RolePlayerMiniInfo::has_prof() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RolePlayerMiniInfo::set_has_prof() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RolePlayerMiniInfo::clear_has_prof() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RolePlayerMiniInfo::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::prof() const {
  return prof_;
}
inline void RolePlayerMiniInfo::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 teamId = 10;
inline bool RolePlayerMiniInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RolePlayerMiniInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RolePlayerMiniInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RolePlayerMiniInfo::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::teamid() const {
  return teamid_;
}
inline void RolePlayerMiniInfo::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint32 unionId = 11;
inline bool RolePlayerMiniInfo::has_unionid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RolePlayerMiniInfo::set_has_unionid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RolePlayerMiniInfo::clear_has_unionid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RolePlayerMiniInfo::clear_unionid() {
  unionid_ = 0u;
  clear_has_unionid();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::unionid() const {
  return unionid_;
}
inline void RolePlayerMiniInfo::set_unionid(::google::protobuf::uint32 value) {
  set_has_unionid();
  unionid_ = value;
}

// optional uint64 fightPower = 12;
inline bool RolePlayerMiniInfo::has_fightpower() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RolePlayerMiniInfo::set_has_fightpower() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RolePlayerMiniInfo::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RolePlayerMiniInfo::clear_fightpower() {
  fightpower_ = GOOGLE_ULONGLONG(0);
  clear_has_fightpower();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::fightpower() const {
  return fightpower_;
}
inline void RolePlayerMiniInfo::set_fightpower(::google::protobuf::uint64 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional uint32 killMeTimes = 13;
inline bool RolePlayerMiniInfo::has_killmetimes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RolePlayerMiniInfo::set_has_killmetimes() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RolePlayerMiniInfo::clear_has_killmetimes() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RolePlayerMiniInfo::clear_killmetimes() {
  killmetimes_ = 0u;
  clear_has_killmetimes();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::killmetimes() const {
  return killmetimes_;
}
inline void RolePlayerMiniInfo::set_killmetimes(::google::protobuf::uint32 value) {
  set_has_killmetimes();
  killmetimes_ = value;
}

// optional uint64 offlineTime = 14;
inline bool RolePlayerMiniInfo::has_offlinetime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_offlinetime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RolePlayerMiniInfo::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RolePlayerMiniInfo::clear_offlinetime() {
  offlinetime_ = GOOGLE_ULONGLONG(0);
  clear_has_offlinetime();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::offlinetime() const {
  return offlinetime_;
}
inline void RolePlayerMiniInfo::set_offlinetime(::google::protobuf::uint64 value) {
  set_has_offlinetime();
  offlinetime_ = value;
}

// optional string connect = 15;
inline bool RolePlayerMiniInfo::has_connect() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_connect() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RolePlayerMiniInfo::clear_has_connect() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RolePlayerMiniInfo::clear_connect() {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    connect_->clear();
  }
  clear_has_connect();
}
inline const ::std::string& RolePlayerMiniInfo::connect() const {
  return *connect_;
}
inline void RolePlayerMiniInfo::set_connect(const ::std::string& value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void RolePlayerMiniInfo::set_connect(const char* value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void RolePlayerMiniInfo::set_connect(const char* value, size_t size) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RolePlayerMiniInfo::mutable_connect() {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  return connect_;
}
inline ::std::string* RolePlayerMiniInfo::release_connect() {
  clear_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = connect_;
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RolePlayerMiniInfo::set_allocated_connect(::std::string* connect) {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    delete connect_;
  }
  if (connect) {
    set_has_connect();
    connect_ = connect;
  } else {
    clear_has_connect();
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool online = 16;
inline bool RolePlayerMiniInfo::has_online() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_online() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RolePlayerMiniInfo::clear_has_online() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RolePlayerMiniInfo::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool RolePlayerMiniInfo::online() const {
  return online_;
}
inline void RolePlayerMiniInfo::set_online(bool value) {
  set_has_online();
  online_ = value;
}

// optional uint32 vipLevel = 17;
inline bool RolePlayerMiniInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RolePlayerMiniInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RolePlayerMiniInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::viplevel() const {
  return viplevel_;
}
inline void RolePlayerMiniInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 18;
inline bool RolePlayerMiniInfo::has_facade() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_facade() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RolePlayerMiniInfo::clear_has_facade() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RolePlayerMiniInfo::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& RolePlayerMiniInfo::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* RolePlayerMiniInfo::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* RolePlayerMiniInfo::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void RolePlayerMiniInfo::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint32 marry = 19;
inline bool RolePlayerMiniInfo::has_marry() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_marry() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RolePlayerMiniInfo::clear_has_marry() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RolePlayerMiniInfo::clear_marry() {
  marry_ = 0u;
  clear_has_marry();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::marry() const {
  return marry_;
}
inline void RolePlayerMiniInfo::set_marry(::google::protobuf::uint32 value) {
  set_has_marry();
  marry_ = value;
}

// -------------------------------------------------------------------

// FriendInfo

// optional uint64 id = 1;
inline bool FriendInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 FriendInfo::id() const {
  return id_;
}
inline void FriendInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 closeness = 2;
inline bool FriendInfo::has_closeness() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendInfo::set_has_closeness() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendInfo::clear_has_closeness() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendInfo::clear_closeness() {
  closeness_ = 0u;
  clear_has_closeness();
}
inline ::google::protobuf::uint32 FriendInfo::closeness() const {
  return closeness_;
}
inline void FriendInfo::set_closeness(::google::protobuf::uint32 value) {
  set_has_closeness();
  closeness_ = value;
}

// optional uint32 todayCloseness = 3;
inline bool FriendInfo::has_todaycloseness() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendInfo::set_has_todaycloseness() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendInfo::clear_has_todaycloseness() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendInfo::clear_todaycloseness() {
  todaycloseness_ = 0u;
  clear_has_todaycloseness();
}
inline ::google::protobuf::uint32 FriendInfo::todaycloseness() const {
  return todaycloseness_;
}
inline void FriendInfo::set_todaycloseness(::google::protobuf::uint32 value) {
  set_has_todaycloseness();
  todaycloseness_ = value;
}

// optional uint64 updateTime = 4;
inline bool FriendInfo::has_updatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendInfo::set_has_updatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendInfo::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendInfo::clear_updatetime() {
  updatetime_ = GOOGLE_ULONGLONG(0);
  clear_has_updatetime();
}
inline ::google::protobuf::uint64 FriendInfo::updatetime() const {
  return updatetime_;
}
inline void FriendInfo::set_updatetime(::google::protobuf::uint64 value) {
  set_has_updatetime();
  updatetime_ = value;
}

// -------------------------------------------------------------------

// FriendApplyInfo

// optional uint64 id = 1;
inline bool FriendApplyInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendApplyInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendApplyInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendApplyInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 FriendApplyInfo::id() const {
  return id_;
}
inline void FriendApplyInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional string connect = 2;
inline bool FriendApplyInfo::has_connect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendApplyInfo::set_has_connect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendApplyInfo::clear_has_connect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendApplyInfo::clear_connect() {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    connect_->clear();
  }
  clear_has_connect();
}
inline const ::std::string& FriendApplyInfo::connect() const {
  return *connect_;
}
inline void FriendApplyInfo::set_connect(const ::std::string& value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void FriendApplyInfo::set_connect(const char* value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void FriendApplyInfo::set_connect(const char* value, size_t size) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendApplyInfo::mutable_connect() {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  return connect_;
}
inline ::std::string* FriendApplyInfo::release_connect() {
  clear_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = connect_;
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendApplyInfo::set_allocated_connect(::std::string* connect) {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    delete connect_;
  }
  if (connect) {
    set_has_connect();
    connect_ = connect;
  } else {
    clear_has_connect();
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RelationHateInfo

// optional uint64 id = 1;
inline bool RelationHateInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RelationHateInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RelationHateInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RelationHateInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RelationHateInfo::id() const {
  return id_;
}
inline void RelationHateInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 killMeTimes = 2;
inline bool RelationHateInfo::has_killmetimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RelationHateInfo::set_has_killmetimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RelationHateInfo::clear_has_killmetimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RelationHateInfo::clear_killmetimes() {
  killmetimes_ = 0u;
  clear_has_killmetimes();
}
inline ::google::protobuf::uint32 RelationHateInfo::killmetimes() const {
  return killmetimes_;
}
inline void RelationHateInfo::set_killmetimes(::google::protobuf::uint32 value) {
  set_has_killmetimes();
  killmetimes_ = value;
}

// -------------------------------------------------------------------

// RelationGiftRecord

// optional uint64 friendId = 1;
inline bool RelationGiftRecord::has_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RelationGiftRecord::set_has_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RelationGiftRecord::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RelationGiftRecord::clear_friendid() {
  friendid_ = GOOGLE_ULONGLONG(0);
  clear_has_friendid();
}
inline ::google::protobuf::uint64 RelationGiftRecord::friendid() const {
  return friendid_;
}
inline void RelationGiftRecord::set_friendid(::google::protobuf::uint64 value) {
  set_has_friendid();
  friendid_ = value;
}

// optional uint64 itemId = 2;
inline bool RelationGiftRecord::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RelationGiftRecord::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RelationGiftRecord::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RelationGiftRecord::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 RelationGiftRecord::itemid() const {
  return itemid_;
}
inline void RelationGiftRecord::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 isThanks = 3;
inline bool RelationGiftRecord::has_isthanks() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RelationGiftRecord::set_has_isthanks() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RelationGiftRecord::clear_has_isthanks() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RelationGiftRecord::clear_isthanks() {
  isthanks_ = 0u;
  clear_has_isthanks();
}
inline ::google::protobuf::uint32 RelationGiftRecord::isthanks() const {
  return isthanks_;
}
inline void RelationGiftRecord::set_isthanks(::google::protobuf::uint32 value) {
  set_has_isthanks();
  isthanks_ = value;
}

// -------------------------------------------------------------------

// RelationDBInfo

// repeated .proto_ff.FriendInfo friendList = 1;
inline int RelationDBInfo::friendlist_size() const {
  return friendlist_.size();
}
inline void RelationDBInfo::clear_friendlist() {
  friendlist_.Clear();
}
inline const ::proto_ff::FriendInfo& RelationDBInfo::friendlist(int index) const {
  return friendlist_.Get(index);
}
inline ::proto_ff::FriendInfo* RelationDBInfo::mutable_friendlist(int index) {
  return friendlist_.Mutable(index);
}
inline ::proto_ff::FriendInfo* RelationDBInfo::add_friendlist() {
  return friendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >&
RelationDBInfo::friendlist() const {
  return friendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >*
RelationDBInfo::mutable_friendlist() {
  return &friendlist_;
}

// repeated uint64 blackList = 2;
inline int RelationDBInfo::blacklist_size() const {
  return blacklist_.size();
}
inline void RelationDBInfo::clear_blacklist() {
  blacklist_.Clear();
}
inline ::google::protobuf::uint64 RelationDBInfo::blacklist(int index) const {
  return blacklist_.Get(index);
}
inline void RelationDBInfo::set_blacklist(int index, ::google::protobuf::uint64 value) {
  blacklist_.Set(index, value);
}
inline void RelationDBInfo::add_blacklist(::google::protobuf::uint64 value) {
  blacklist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RelationDBInfo::blacklist() const {
  return blacklist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RelationDBInfo::mutable_blacklist() {
  return &blacklist_;
}

// repeated .proto_ff.RelationHateInfo hateList = 3;
inline int RelationDBInfo::hatelist_size() const {
  return hatelist_.size();
}
inline void RelationDBInfo::clear_hatelist() {
  hatelist_.Clear();
}
inline const ::proto_ff::RelationHateInfo& RelationDBInfo::hatelist(int index) const {
  return hatelist_.Get(index);
}
inline ::proto_ff::RelationHateInfo* RelationDBInfo::mutable_hatelist(int index) {
  return hatelist_.Mutable(index);
}
inline ::proto_ff::RelationHateInfo* RelationDBInfo::add_hatelist() {
  return hatelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >&
RelationDBInfo::hatelist() const {
  return hatelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >*
RelationDBInfo::mutable_hatelist() {
  return &hatelist_;
}

// repeated .proto_ff.FriendApplyInfo applyList = 4;
inline int RelationDBInfo::applylist_size() const {
  return applylist_.size();
}
inline void RelationDBInfo::clear_applylist() {
  applylist_.Clear();
}
inline const ::proto_ff::FriendApplyInfo& RelationDBInfo::applylist(int index) const {
  return applylist_.Get(index);
}
inline ::proto_ff::FriendApplyInfo* RelationDBInfo::mutable_applylist(int index) {
  return applylist_.Mutable(index);
}
inline ::proto_ff::FriendApplyInfo* RelationDBInfo::add_applylist() {
  return applylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >&
RelationDBInfo::applylist() const {
  return applylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >*
RelationDBInfo::mutable_applylist() {
  return &applylist_;
}

// optional uint32 friends_add = 5;
inline bool RelationDBInfo::has_friends_add() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RelationDBInfo::set_has_friends_add() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RelationDBInfo::clear_has_friends_add() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RelationDBInfo::clear_friends_add() {
  friends_add_ = 0u;
  clear_has_friends_add();
}
inline ::google::protobuf::uint32 RelationDBInfo::friends_add() const {
  return friends_add_;
}
inline void RelationDBInfo::set_friends_add(::google::protobuf::uint32 value) {
  set_has_friends_add();
  friends_add_ = value;
}

// repeated .proto_ff.RelationGiftRecord giftRecords = 6;
inline int RelationDBInfo::giftrecords_size() const {
  return giftrecords_.size();
}
inline void RelationDBInfo::clear_giftrecords() {
  giftrecords_.Clear();
}
inline const ::proto_ff::RelationGiftRecord& RelationDBInfo::giftrecords(int index) const {
  return giftrecords_.Get(index);
}
inline ::proto_ff::RelationGiftRecord* RelationDBInfo::mutable_giftrecords(int index) {
  return giftrecords_.Mutable(index);
}
inline ::proto_ff::RelationGiftRecord* RelationDBInfo::add_giftrecords() {
  return giftrecords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >&
RelationDBInfo::giftrecords() const {
  return giftrecords_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >*
RelationDBInfo::mutable_giftrecords() {
  return &giftrecords_;
}

// -------------------------------------------------------------------

// DigPerfor

// optional uint32 type = 1;
inline bool DigPerfor::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DigPerfor::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DigPerfor::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DigPerfor::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 DigPerfor::type() const {
  return type_;
}
inline void DigPerfor::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 value = 2;
inline bool DigPerfor::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DigPerfor::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DigPerfor::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DigPerfor::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 DigPerfor::value() const {
  return value_;
}
inline void DigPerfor::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// BuffProto

// optional uint64 buff_index = 1;
inline bool BuffProto::has_buff_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffProto::set_has_buff_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffProto::clear_has_buff_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffProto::clear_buff_index() {
  buff_index_ = GOOGLE_ULONGLONG(0);
  clear_has_buff_index();
}
inline ::google::protobuf::uint64 BuffProto::buff_index() const {
  return buff_index_;
}
inline void BuffProto::set_buff_index(::google::protobuf::uint64 value) {
  set_has_buff_index();
  buff_index_ = value;
}

// optional uint64 buff_id = 2;
inline bool BuffProto::has_buff_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffProto::set_has_buff_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffProto::clear_has_buff_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffProto::clear_buff_id() {
  buff_id_ = GOOGLE_ULONGLONG(0);
  clear_has_buff_id();
}
inline ::google::protobuf::uint64 BuffProto::buff_id() const {
  return buff_id_;
}
inline void BuffProto::set_buff_id(::google::protobuf::uint64 value) {
  set_has_buff_id();
  buff_id_ = value;
}

// optional uint64 recver_cid = 3;
inline bool BuffProto::has_recver_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffProto::set_has_recver_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffProto::clear_has_recver_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffProto::clear_recver_cid() {
  recver_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_recver_cid();
}
inline ::google::protobuf::uint64 BuffProto::recver_cid() const {
  return recver_cid_;
}
inline void BuffProto::set_recver_cid(::google::protobuf::uint64 value) {
  set_has_recver_cid();
  recver_cid_ = value;
}

// optional int32 left_msec = 4;
inline bool BuffProto::has_left_msec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffProto::set_has_left_msec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffProto::clear_has_left_msec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffProto::clear_left_msec() {
  left_msec_ = 0;
  clear_has_left_msec();
}
inline ::google::protobuf::int32 BuffProto::left_msec() const {
  return left_msec_;
}
inline void BuffProto::set_left_msec(::google::protobuf::int32 value) {
  set_has_left_msec();
  left_msec_ = value;
}

// optional uint64 skill_id = 5;
inline bool BuffProto::has_skill_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffProto::set_has_skill_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffProto::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffProto::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 BuffProto::skill_id() const {
  return skill_id_;
}
inline void BuffProto::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional int32 skill_lev = 6;
inline bool BuffProto::has_skill_lev() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuffProto::set_has_skill_lev() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuffProto::clear_has_skill_lev() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuffProto::clear_skill_lev() {
  skill_lev_ = 0;
  clear_has_skill_lev();
}
inline ::google::protobuf::int32 BuffProto::skill_lev() const {
  return skill_lev_;
}
inline void BuffProto::set_skill_lev(::google::protobuf::int32 value) {
  set_has_skill_lev();
  skill_lev_ = value;
}

// optional int32 is_effect = 7;
inline bool BuffProto::has_is_effect() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuffProto::set_has_is_effect() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuffProto::clear_has_is_effect() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuffProto::clear_is_effect() {
  is_effect_ = 0;
  clear_has_is_effect();
}
inline ::google::protobuf::int32 BuffProto::is_effect() const {
  return is_effect_;
}
inline void BuffProto::set_is_effect(::google::protobuf::int32 value) {
  set_has_is_effect();
  is_effect_ = value;
}

// -------------------------------------------------------------------

// BuffListProto

// optional uint64 cid = 1;
inline bool BuffListProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffListProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffListProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffListProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 BuffListProto::cid() const {
  return cid_;
}
inline void BuffListProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// repeated .proto_ff.BuffProto info = 2;
inline int BuffListProto::info_size() const {
  return info_.size();
}
inline void BuffListProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::BuffProto& BuffListProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::BuffProto* BuffListProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::BuffProto* BuffListProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >&
BuffListProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >*
BuffListProto::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// SkillPosProto

// optional uint64 skill_id = 1;
inline bool SkillPosProto::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillPosProto::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillPosProto::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillPosProto::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 SkillPosProto::skill_id() const {
  return skill_id_;
}
inline void SkillPosProto::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 pos = 2;
inline bool SkillPosProto::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillPosProto::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillPosProto::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillPosProto::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 SkillPosProto::pos() const {
  return pos_;
}
inline void SkillPosProto::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// optional int32 cd = 3;
inline bool SkillPosProto::has_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillPosProto::set_has_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillPosProto::clear_has_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillPosProto::clear_cd() {
  cd_ = 0;
  clear_has_cd();
}
inline ::google::protobuf::int32 SkillPosProto::cd() const {
  return cd_;
}
inline void SkillPosProto::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
}

// -------------------------------------------------------------------

// SkillGroupProto

// optional uint32 group = 1;
inline bool SkillGroupProto::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillGroupProto::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillGroupProto::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillGroupProto::clear_group() {
  group_ = 0u;
  clear_has_group();
}
inline ::google::protobuf::uint32 SkillGroupProto::group() const {
  return group_;
}
inline void SkillGroupProto::set_group(::google::protobuf::uint32 value) {
  set_has_group();
  group_ = value;
}

// optional int32 cd = 2;
inline bool SkillGroupProto::has_cd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillGroupProto::set_has_cd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillGroupProto::clear_has_cd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillGroupProto::clear_cd() {
  cd_ = 0;
  clear_has_cd();
}
inline ::google::protobuf::int32 SkillGroupProto::cd() const {
  return cd_;
}
inline void SkillGroupProto::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
}

// repeated .proto_ff.SkillPosProto lst = 3;
inline int SkillGroupProto::lst_size() const {
  return lst_.size();
}
inline void SkillGroupProto::clear_lst() {
  lst_.Clear();
}
inline const ::proto_ff::SkillPosProto& SkillGroupProto::lst(int index) const {
  return lst_.Get(index);
}
inline ::proto_ff::SkillPosProto* SkillGroupProto::mutable_lst(int index) {
  return lst_.Mutable(index);
}
inline ::proto_ff::SkillPosProto* SkillGroupProto::add_lst() {
  return lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >&
SkillGroupProto::lst() const {
  return lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >*
SkillGroupProto::mutable_lst() {
  return &lst_;
}

// -------------------------------------------------------------------

// SkillGroupListProto

// repeated .proto_ff.SkillGroupProto info = 1;
inline int SkillGroupListProto::info_size() const {
  return info_.size();
}
inline void SkillGroupListProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::SkillGroupProto& SkillGroupListProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::SkillGroupProto* SkillGroupListProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::SkillGroupProto* SkillGroupListProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >&
SkillGroupListProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >*
SkillGroupListProto::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// FacadeFantasyData

// optional uint64 fantasy_id = 1;
inline bool FacadeFantasyData::has_fantasy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFantasyData::set_has_fantasy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFantasyData::clear_has_fantasy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFantasyData::clear_fantasy_id() {
  fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_id();
}
inline ::google::protobuf::uint64 FacadeFantasyData::fantasy_id() const {
  return fantasy_id_;
}
inline void FacadeFantasyData::set_fantasy_id(::google::protobuf::uint64 value) {
  set_has_fantasy_id();
  fantasy_id_ = value;
}

// optional uint32 fantasy_lev = 2;
inline bool FacadeFantasyData::has_fantasy_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFantasyData::set_has_fantasy_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFantasyData::clear_has_fantasy_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFantasyData::clear_fantasy_lev() {
  fantasy_lev_ = 0u;
  clear_has_fantasy_lev();
}
inline ::google::protobuf::uint32 FacadeFantasyData::fantasy_lev() const {
  return fantasy_lev_;
}
inline void FacadeFantasyData::set_fantasy_lev(::google::protobuf::uint32 value) {
  set_has_fantasy_lev();
  fantasy_lev_ = value;
}

// -------------------------------------------------------------------

// FacadeFragmentData

// optional uint64 fragment_id = 1;
inline bool FacadeFragmentData::has_fragment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFragmentData::set_has_fragment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFragmentData::clear_has_fragment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFragmentData::clear_fragment_id() {
  fragment_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fragment_id();
}
inline ::google::protobuf::uint64 FacadeFragmentData::fragment_id() const {
  return fragment_id_;
}
inline void FacadeFragmentData::set_fragment_id(::google::protobuf::uint64 value) {
  set_has_fragment_id();
  fragment_id_ = value;
}

// optional uint32 use_times = 2;
inline bool FacadeFragmentData::has_use_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFragmentData::set_has_use_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFragmentData::clear_has_use_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFragmentData::clear_use_times() {
  use_times_ = 0u;
  clear_has_use_times();
}
inline ::google::protobuf::uint32 FacadeFragmentData::use_times() const {
  return use_times_;
}
inline void FacadeFragmentData::set_use_times(::google::protobuf::uint32 value) {
  set_has_use_times();
  use_times_ = value;
}

// -------------------------------------------------------------------

// FacadeSkillData

// optional uint64 skill_id = 1;
inline bool FacadeSkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSkillData::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 FacadeSkillData::skill_id() const {
  return skill_id_;
}
inline void FacadeSkillData::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 skill_lev = 2;
inline bool FacadeSkillData::has_skill_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSkillData::set_has_skill_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSkillData::clear_has_skill_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSkillData::clear_skill_lev() {
  skill_lev_ = 0u;
  clear_has_skill_lev();
}
inline ::google::protobuf::uint32 FacadeSkillData::skill_lev() const {
  return skill_lev_;
}
inline void FacadeSkillData::set_skill_lev(::google::protobuf::uint32 value) {
  set_has_skill_lev();
  skill_lev_ = value;
}

// -------------------------------------------------------------------

// StatisticDataProto

// optional int32 level = 1;
inline bool StatisticDataProto::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatisticDataProto::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatisticDataProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatisticDataProto::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 StatisticDataProto::level() const {
  return level_;
}
inline void StatisticDataProto::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 total_login_day = 2;
inline bool StatisticDataProto::has_total_login_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatisticDataProto::set_has_total_login_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatisticDataProto::clear_has_total_login_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatisticDataProto::clear_total_login_day() {
  total_login_day_ = 0u;
  clear_has_total_login_day();
}
inline ::google::protobuf::uint32 StatisticDataProto::total_login_day() const {
  return total_login_day_;
}
inline void StatisticDataProto::set_total_login_day(::google::protobuf::uint32 value) {
  set_has_total_login_day();
  total_login_day_ = value;
}

// optional uint32 total_rmb = 3;
inline bool StatisticDataProto::has_total_rmb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatisticDataProto::set_has_total_rmb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatisticDataProto::clear_has_total_rmb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatisticDataProto::clear_total_rmb() {
  total_rmb_ = 0u;
  clear_has_total_rmb();
}
inline ::google::protobuf::uint32 StatisticDataProto::total_rmb() const {
  return total_rmb_;
}
inline void StatisticDataProto::set_total_rmb(::google::protobuf::uint32 value) {
  set_has_total_rmb();
  total_rmb_ = value;
}

// optional uint32 today_rmb = 4;
inline bool StatisticDataProto::has_today_rmb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatisticDataProto::set_has_today_rmb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatisticDataProto::clear_has_today_rmb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatisticDataProto::clear_today_rmb() {
  today_rmb_ = 0u;
  clear_has_today_rmb();
}
inline ::google::protobuf::uint32 StatisticDataProto::today_rmb() const {
  return today_rmb_;
}
inline void StatisticDataProto::set_today_rmb(::google::protobuf::uint32 value) {
  set_has_today_rmb();
  today_rmb_ = value;
}

// optional uint32 total_activityCount = 5;
inline bool StatisticDataProto::has_total_activitycount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StatisticDataProto::set_has_total_activitycount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StatisticDataProto::clear_has_total_activitycount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StatisticDataProto::clear_total_activitycount() {
  total_activitycount_ = 0u;
  clear_has_total_activitycount();
}
inline ::google::protobuf::uint32 StatisticDataProto::total_activitycount() const {
  return total_activitycount_;
}
inline void StatisticDataProto::set_total_activitycount(::google::protobuf::uint32 value) {
  set_has_total_activitycount();
  total_activitycount_ = value;
}

// -------------------------------------------------------------------

// GodRelicsTaskEntry

// optional uint64 task_cfg_id = 1;
inline bool GodRelicsTaskEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodRelicsTaskEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodRelicsTaskEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodRelicsTaskEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 GodRelicsTaskEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void GodRelicsTaskEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool GodRelicsTaskEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodRelicsTaskEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodRelicsTaskEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodRelicsTaskEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 GodRelicsTaskEntry::cur_num() const {
  return cur_num_;
}
inline void GodRelicsTaskEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool GodRelicsTaskEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodRelicsTaskEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodRelicsTaskEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodRelicsTaskEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 GodRelicsTaskEntry::task_state() const {
  return task_state_;
}
inline void GodRelicsTaskEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// -------------------------------------------------------------------

// GodRelicsTaskGroupEntry

// optional uint64 group_cfg_id = 1;
inline bool GodRelicsTaskGroupEntry::has_group_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodRelicsTaskGroupEntry::set_has_group_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodRelicsTaskGroupEntry::clear_has_group_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodRelicsTaskGroupEntry::clear_group_cfg_id() {
  group_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_cfg_id();
}
inline ::google::protobuf::uint64 GodRelicsTaskGroupEntry::group_cfg_id() const {
  return group_cfg_id_;
}
inline void GodRelicsTaskGroupEntry::set_group_cfg_id(::google::protobuf::uint64 value) {
  set_has_group_cfg_id();
  group_cfg_id_ = value;
}

// repeated .proto_ff.GodRelicsTaskEntry entrys = 2;
inline int GodRelicsTaskGroupEntry::entrys_size() const {
  return entrys_.size();
}
inline void GodRelicsTaskGroupEntry::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::GodRelicsTaskEntry& GodRelicsTaskGroupEntry::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::GodRelicsTaskEntry* GodRelicsTaskGroupEntry::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::GodRelicsTaskEntry* GodRelicsTaskGroupEntry::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >&
GodRelicsTaskGroupEntry::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >*
GodRelicsTaskGroupEntry::mutable_entrys() {
  return &entrys_;
}

// optional int32 normal_reward_state = 3;
inline bool GodRelicsTaskGroupEntry::has_normal_reward_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodRelicsTaskGroupEntry::set_has_normal_reward_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodRelicsTaskGroupEntry::clear_has_normal_reward_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodRelicsTaskGroupEntry::clear_normal_reward_state() {
  normal_reward_state_ = 0;
  clear_has_normal_reward_state();
}
inline ::google::protobuf::int32 GodRelicsTaskGroupEntry::normal_reward_state() const {
  return normal_reward_state_;
}
inline void GodRelicsTaskGroupEntry::set_normal_reward_state(::google::protobuf::int32 value) {
  set_has_normal_reward_state();
  normal_reward_state_ = value;
}

// optional uint64 create_time = 5;
inline bool GodRelicsTaskGroupEntry::has_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GodRelicsTaskGroupEntry::set_has_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GodRelicsTaskGroupEntry::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GodRelicsTaskGroupEntry::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 GodRelicsTaskGroupEntry::create_time() const {
  return create_time_;
}
inline void GodRelicsTaskGroupEntry::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
}

// -------------------------------------------------------------------

// DailyTaskEntry

// optional uint64 task_cfg_id = 1;
inline bool DailyTaskEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 DailyTaskEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void DailyTaskEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool DailyTaskEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 DailyTaskEntry::cur_num() const {
  return cur_num_;
}
inline void DailyTaskEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool DailyTaskEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 DailyTaskEntry::task_state() const {
  return task_state_;
}
inline void DailyTaskEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// optional uint64 last_time = 4;
inline bool DailyTaskEntry::has_last_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskEntry::set_has_last_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskEntry::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskEntry::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 DailyTaskEntry::last_time() const {
  return last_time_;
}
inline void DailyTaskEntry::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// optional int32 buy_num = 5;
inline bool DailyTaskEntry::has_buy_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskEntry::set_has_buy_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskEntry::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskEntry::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 DailyTaskEntry::buy_num() const {
  return buy_num_;
}
inline void DailyTaskEntry::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// -------------------------------------------------------------------

// DailyTaskLimitEntry

// optional uint64 task_cfg_id = 1;
inline bool DailyTaskLimitEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskLimitEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskLimitEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskLimitEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 DailyTaskLimitEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void DailyTaskLimitEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool DailyTaskLimitEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskLimitEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskLimitEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskLimitEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 DailyTaskLimitEntry::cur_num() const {
  return cur_num_;
}
inline void DailyTaskLimitEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool DailyTaskLimitEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskLimitEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskLimitEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskLimitEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 DailyTaskLimitEntry::task_state() const {
  return task_state_;
}
inline void DailyTaskLimitEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// optional uint64 last_time = 4;
inline bool DailyTaskLimitEntry::has_last_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskLimitEntry::set_has_last_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskLimitEntry::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskLimitEntry::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 DailyTaskLimitEntry::last_time() const {
  return last_time_;
}
inline void DailyTaskLimitEntry::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// optional int32 buy_num = 5;
inline bool DailyTaskLimitEntry::has_buy_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskLimitEntry::set_has_buy_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskLimitEntry::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskLimitEntry::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 DailyTaskLimitEntry::buy_num() const {
  return buy_num_;
}
inline void DailyTaskLimitEntry::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// optional bool ready_add = 6;
inline bool DailyTaskLimitEntry::has_ready_add() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyTaskLimitEntry::set_has_ready_add() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyTaskLimitEntry::clear_has_ready_add() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyTaskLimitEntry::clear_ready_add() {
  ready_add_ = false;
  clear_has_ready_add();
}
inline bool DailyTaskLimitEntry::ready_add() const {
  return ready_add_;
}
inline void DailyTaskLimitEntry::set_ready_add(bool value) {
  set_has_ready_add();
  ready_add_ = value;
}

// optional bool is_open = 7;
inline bool DailyTaskLimitEntry::has_is_open() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DailyTaskLimitEntry::set_has_is_open() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DailyTaskLimitEntry::clear_has_is_open() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DailyTaskLimitEntry::clear_is_open() {
  is_open_ = false;
  clear_has_is_open();
}
inline bool DailyTaskLimitEntry::is_open() const {
  return is_open_;
}
inline void DailyTaskLimitEntry::set_is_open(bool value) {
  set_has_is_open();
  is_open_ = value;
}

// -------------------------------------------------------------------

// DailyTaskBackDayEntry

// optional int32 left_num = 1;
inline bool DailyTaskBackDayEntry::has_left_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskBackDayEntry::set_has_left_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskBackDayEntry::clear_has_left_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskBackDayEntry::clear_left_num() {
  left_num_ = 0;
  clear_has_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackDayEntry::left_num() const {
  return left_num_;
}
inline void DailyTaskBackDayEntry::set_left_num(::google::protobuf::int32 value) {
  set_has_left_num();
  left_num_ = value;
}

// optional int32 external_left_num = 2;
inline bool DailyTaskBackDayEntry::has_external_left_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskBackDayEntry::set_has_external_left_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskBackDayEntry::clear_has_external_left_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskBackDayEntry::clear_external_left_num() {
  external_left_num_ = 0;
  clear_has_external_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackDayEntry::external_left_num() const {
  return external_left_num_;
}
inline void DailyTaskBackDayEntry::set_external_left_num(::google::protobuf::int32 value) {
  set_has_external_left_num();
  external_left_num_ = value;
}

// optional int64 last_time = 3;
inline bool DailyTaskBackDayEntry::has_last_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskBackDayEntry::set_has_last_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskBackDayEntry::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskBackDayEntry::clear_last_time() {
  last_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::int64 DailyTaskBackDayEntry::last_time() const {
  return last_time_;
}
inline void DailyTaskBackDayEntry::set_last_time(::google::protobuf::int64 value) {
  set_has_last_time();
  last_time_ = value;
}

// -------------------------------------------------------------------

// DailyTaskBackEntry

// optional uint64 task_cfg_id = 1;
inline bool DailyTaskBackEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskBackEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskBackEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskBackEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 DailyTaskBackEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void DailyTaskBackEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 task_state = 3;
inline bool DailyTaskBackEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskBackEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskBackEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskBackEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 DailyTaskBackEntry::task_state() const {
  return task_state_;
}
inline void DailyTaskBackEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// repeated .proto_ff.DailyTaskBackDayEntry day_data = 4;
inline int DailyTaskBackEntry::day_data_size() const {
  return day_data_.size();
}
inline void DailyTaskBackEntry::clear_day_data() {
  day_data_.Clear();
}
inline const ::proto_ff::DailyTaskBackDayEntry& DailyTaskBackEntry::day_data(int index) const {
  return day_data_.Get(index);
}
inline ::proto_ff::DailyTaskBackDayEntry* DailyTaskBackEntry::mutable_day_data(int index) {
  return day_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskBackDayEntry* DailyTaskBackEntry::add_day_data() {
  return day_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >&
DailyTaskBackEntry::day_data() const {
  return day_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >*
DailyTaskBackEntry::mutable_day_data() {
  return &day_data_;
}

// optional int32 left_num = 5;
inline bool DailyTaskBackEntry::has_left_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskBackEntry::set_has_left_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskBackEntry::clear_has_left_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskBackEntry::clear_left_num() {
  left_num_ = 0;
  clear_has_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackEntry::left_num() const {
  return left_num_;
}
inline void DailyTaskBackEntry::set_left_num(::google::protobuf::int32 value) {
  set_has_left_num();
  left_num_ = value;
}

// optional int32 external_left_num = 6;
inline bool DailyTaskBackEntry::has_external_left_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskBackEntry::set_has_external_left_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskBackEntry::clear_has_external_left_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskBackEntry::clear_external_left_num() {
  external_left_num_ = 0;
  clear_has_external_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackEntry::external_left_num() const {
  return external_left_num_;
}
inline void DailyTaskBackEntry::set_external_left_num(::google::protobuf::int32 value) {
  set_has_external_left_num();
  external_left_num_ = value;
}

// -------------------------------------------------------------------

// DailyTaskRewardEntry

// optional uint64 reward_id = 1;
inline bool DailyTaskRewardEntry::has_reward_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskRewardEntry::set_has_reward_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskRewardEntry::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskRewardEntry::clear_reward_id() {
  reward_id_ = GOOGLE_ULONGLONG(0);
  clear_has_reward_id();
}
inline ::google::protobuf::uint64 DailyTaskRewardEntry::reward_id() const {
  return reward_id_;
}
inline void DailyTaskRewardEntry::set_reward_id(::google::protobuf::uint64 value) {
  set_has_reward_id();
  reward_id_ = value;
}

// optional int32 state = 2;
inline bool DailyTaskRewardEntry::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskRewardEntry::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskRewardEntry::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskRewardEntry::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DailyTaskRewardEntry::state() const {
  return state_;
}
inline void DailyTaskRewardEntry::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// DailyTaskAllData

// repeated .proto_ff.DailyTaskEntry task_data = 1;
inline int DailyTaskAllData::task_data_size() const {
  return task_data_.size();
}
inline void DailyTaskAllData::clear_task_data() {
  task_data_.Clear();
}
inline const ::proto_ff::DailyTaskEntry& DailyTaskAllData::task_data(int index) const {
  return task_data_.Get(index);
}
inline ::proto_ff::DailyTaskEntry* DailyTaskAllData::mutable_task_data(int index) {
  return task_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskEntry* DailyTaskAllData::add_task_data() {
  return task_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >&
DailyTaskAllData::task_data() const {
  return task_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >*
DailyTaskAllData::mutable_task_data() {
  return &task_data_;
}

// repeated .proto_ff.DailyTaskLimitEntry task_limit_data = 2;
inline int DailyTaskAllData::task_limit_data_size() const {
  return task_limit_data_.size();
}
inline void DailyTaskAllData::clear_task_limit_data() {
  task_limit_data_.Clear();
}
inline const ::proto_ff::DailyTaskLimitEntry& DailyTaskAllData::task_limit_data(int index) const {
  return task_limit_data_.Get(index);
}
inline ::proto_ff::DailyTaskLimitEntry* DailyTaskAllData::mutable_task_limit_data(int index) {
  return task_limit_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskLimitEntry* DailyTaskAllData::add_task_limit_data() {
  return task_limit_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >&
DailyTaskAllData::task_limit_data() const {
  return task_limit_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >*
DailyTaskAllData::mutable_task_limit_data() {
  return &task_limit_data_;
}

// repeated .proto_ff.DailyTaskBackEntry back_data = 3;
inline int DailyTaskAllData::back_data_size() const {
  return back_data_.size();
}
inline void DailyTaskAllData::clear_back_data() {
  back_data_.Clear();
}
inline const ::proto_ff::DailyTaskBackEntry& DailyTaskAllData::back_data(int index) const {
  return back_data_.Get(index);
}
inline ::proto_ff::DailyTaskBackEntry* DailyTaskAllData::mutable_back_data(int index) {
  return back_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskBackEntry* DailyTaskAllData::add_back_data() {
  return back_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >&
DailyTaskAllData::back_data() const {
  return back_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >*
DailyTaskAllData::mutable_back_data() {
  return &back_data_;
}

// repeated .proto_ff.DailyTaskRewardEntry reward_data = 4;
inline int DailyTaskAllData::reward_data_size() const {
  return reward_data_.size();
}
inline void DailyTaskAllData::clear_reward_data() {
  reward_data_.Clear();
}
inline const ::proto_ff::DailyTaskRewardEntry& DailyTaskAllData::reward_data(int index) const {
  return reward_data_.Get(index);
}
inline ::proto_ff::DailyTaskRewardEntry* DailyTaskAllData::mutable_reward_data(int index) {
  return reward_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskRewardEntry* DailyTaskAllData::add_reward_data() {
  return reward_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >&
DailyTaskAllData::reward_data() const {
  return reward_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >*
DailyTaskAllData::mutable_reward_data() {
  return &reward_data_;
}

// optional uint32 daily_score = 5;
inline bool DailyTaskAllData::has_daily_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskAllData::set_has_daily_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskAllData::clear_has_daily_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskAllData::clear_daily_score() {
  daily_score_ = 0u;
  clear_has_daily_score();
}
inline ::google::protobuf::uint32 DailyTaskAllData::daily_score() const {
  return daily_score_;
}
inline void DailyTaskAllData::set_daily_score(::google::protobuf::uint32 value) {
  set_has_daily_score();
  daily_score_ = value;
}

// optional uint32 daily_level = 6;
inline bool DailyTaskAllData::has_daily_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyTaskAllData::set_has_daily_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyTaskAllData::clear_has_daily_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyTaskAllData::clear_daily_level() {
  daily_level_ = 0u;
  clear_has_daily_level();
}
inline ::google::protobuf::uint32 DailyTaskAllData::daily_level() const {
  return daily_level_;
}
inline void DailyTaskAllData::set_daily_level(::google::protobuf::uint32 value) {
  set_has_daily_level();
  daily_level_ = value;
}

// optional uint64 create_time = 7;
inline bool DailyTaskAllData::has_create_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DailyTaskAllData::set_has_create_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DailyTaskAllData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DailyTaskAllData::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 DailyTaskAllData::create_time() const {
  return create_time_;
}
inline void DailyTaskAllData::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
}

// optional uint64 daily_exp = 8;
inline bool DailyTaskAllData::has_daily_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DailyTaskAllData::set_has_daily_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DailyTaskAllData::clear_has_daily_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DailyTaskAllData::clear_daily_exp() {
  daily_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_daily_exp();
}
inline ::google::protobuf::uint64 DailyTaskAllData::daily_exp() const {
  return daily_exp_;
}
inline void DailyTaskAllData::set_daily_exp(::google::protobuf::uint64 value) {
  set_has_daily_exp();
  daily_exp_ = value;
}

// -------------------------------------------------------------------

// CharacterDBRecentSubmitMission

// optional int32 mission_type = 1;
inline bool CharacterDBRecentSubmitMission::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBRecentSubmitMission::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBRecentSubmitMission::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBRecentSubmitMission::clear_mission_type() {
  mission_type_ = 0;
  clear_has_mission_type();
}
inline ::google::protobuf::int32 CharacterDBRecentSubmitMission::mission_type() const {
  return mission_type_;
}
inline void CharacterDBRecentSubmitMission::set_mission_type(::google::protobuf::int32 value) {
  set_has_mission_type();
  mission_type_ = value;
}

// optional uint64 mission_id = 2;
inline bool CharacterDBRecentSubmitMission::has_mission_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBRecentSubmitMission::set_has_mission_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBRecentSubmitMission::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBRecentSubmitMission::clear_mission_id() {
  mission_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mission_id();
}
inline ::google::protobuf::uint64 CharacterDBRecentSubmitMission::mission_id() const {
  return mission_id_;
}
inline void CharacterDBRecentSubmitMission::set_mission_id(::google::protobuf::uint64 value) {
  set_has_mission_id();
  mission_id_ = value;
}

// -------------------------------------------------------------------

// CharacterDBMissionItemInfo

// optional uint32 type = 1;
inline bool CharacterDBMissionItemInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBMissionItemInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBMissionItemInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::type() const {
  return type_;
}
inline void CharacterDBMissionItemInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 id = 2;
inline bool CharacterDBMissionItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBMissionItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBMissionItemInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::id() const {
  return id_;
}
inline void CharacterDBMissionItemInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 currentValue = 3;
inline bool CharacterDBMissionItemInfo::has_currentvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_currentvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBMissionItemInfo::clear_has_currentvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBMissionItemInfo::clear_currentvalue() {
  currentvalue_ = 0u;
  clear_has_currentvalue();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::currentvalue() const {
  return currentvalue_;
}
inline void CharacterDBMissionItemInfo::set_currentvalue(::google::protobuf::uint32 value) {
  set_has_currentvalue();
  currentvalue_ = value;
}

// optional uint32 finalValue = 4;
inline bool CharacterDBMissionItemInfo::has_finalvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_finalvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBMissionItemInfo::clear_has_finalvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBMissionItemInfo::clear_finalvalue() {
  finalvalue_ = 0u;
  clear_has_finalvalue();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::finalvalue() const {
  return finalvalue_;
}
inline void CharacterDBMissionItemInfo::set_finalvalue(::google::protobuf::uint32 value) {
  set_has_finalvalue();
  finalvalue_ = value;
}

// optional bool completedFlag = 5;
inline bool CharacterDBMissionItemInfo::has_completedflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_completedflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBMissionItemInfo::clear_has_completedflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBMissionItemInfo::clear_completedflag() {
  completedflag_ = false;
  clear_has_completedflag();
}
inline bool CharacterDBMissionItemInfo::completedflag() const {
  return completedflag_;
}
inline void CharacterDBMissionItemInfo::set_completedflag(bool value) {
  set_has_completedflag();
  completedflag_ = value;
}

// optional uint64 parma1 = 6;
inline bool CharacterDBMissionItemInfo::has_parma1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBMissionItemInfo::clear_parma1() {
  parma1_ = GOOGLE_ULONGLONG(0);
  clear_has_parma1();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma1() const {
  return parma1_;
}
inline void CharacterDBMissionItemInfo::set_parma1(::google::protobuf::uint64 value) {
  set_has_parma1();
  parma1_ = value;
}

// optional uint64 parma2 = 7;
inline bool CharacterDBMissionItemInfo::has_parma2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBMissionItemInfo::clear_parma2() {
  parma2_ = GOOGLE_ULONGLONG(0);
  clear_has_parma2();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma2() const {
  return parma2_;
}
inline void CharacterDBMissionItemInfo::set_parma2(::google::protobuf::uint64 value) {
  set_has_parma2();
  parma2_ = value;
}

// optional uint64 parma3 = 8;
inline bool CharacterDBMissionItemInfo::has_parma3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBMissionItemInfo::clear_parma3() {
  parma3_ = GOOGLE_ULONGLONG(0);
  clear_has_parma3();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma3() const {
  return parma3_;
}
inline void CharacterDBMissionItemInfo::set_parma3(::google::protobuf::uint64 value) {
  set_has_parma3();
  parma3_ = value;
}

// -------------------------------------------------------------------

// CharacterDBMissionTrack

// optional uint64 missionId = 1;
inline bool CharacterDBMissionTrack::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBMissionTrack::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBMissionTrack::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBMissionTrack::clear_missionid() {
  missionid_ = GOOGLE_ULONGLONG(0);
  clear_has_missionid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::missionid() const {
  return missionid_;
}
inline void CharacterDBMissionTrack::set_missionid(::google::protobuf::uint64 value) {
  set_has_missionid();
  missionid_ = value;
}

// optional uint64 dynamicid = 2;
inline bool CharacterDBMissionTrack::has_dynamicid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBMissionTrack::set_has_dynamicid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBMissionTrack::clear_has_dynamicid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBMissionTrack::clear_dynamicid() {
  dynamicid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynamicid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::dynamicid() const {
  return dynamicid_;
}
inline void CharacterDBMissionTrack::set_dynamicid(::google::protobuf::uint64 value) {
  set_has_dynamicid();
  dynamicid_ = value;
}

// optional uint32 status = 3;
inline bool CharacterDBMissionTrack::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBMissionTrack::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBMissionTrack::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBMissionTrack::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CharacterDBMissionTrack::status() const {
  return status_;
}
inline void CharacterDBMissionTrack::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint64 acceptMissionTime = 4;
inline bool CharacterDBMissionTrack::has_acceptmissiontime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBMissionTrack::set_has_acceptmissiontime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBMissionTrack::clear_has_acceptmissiontime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBMissionTrack::clear_acceptmissiontime() {
  acceptmissiontime_ = GOOGLE_ULONGLONG(0);
  clear_has_acceptmissiontime();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::acceptmissiontime() const {
  return acceptmissiontime_;
}
inline void CharacterDBMissionTrack::set_acceptmissiontime(::google::protobuf::uint64 value) {
  set_has_acceptmissiontime();
  acceptmissiontime_ = value;
}

// repeated .proto_ff.CharacterDBMissionItemInfo itemInfo = 5;
inline int CharacterDBMissionTrack::iteminfo_size() const {
  return iteminfo_.size();
}
inline void CharacterDBMissionTrack::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::proto_ff::CharacterDBMissionItemInfo& CharacterDBMissionTrack::iteminfo(int index) const {
  return iteminfo_.Get(index);
}
inline ::proto_ff::CharacterDBMissionItemInfo* CharacterDBMissionTrack::mutable_iteminfo(int index) {
  return iteminfo_.Mutable(index);
}
inline ::proto_ff::CharacterDBMissionItemInfo* CharacterDBMissionTrack::add_iteminfo() {
  return iteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >&
CharacterDBMissionTrack::iteminfo() const {
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >*
CharacterDBMissionTrack::mutable_iteminfo() {
  return &iteminfo_;
}

// optional uint64 textid = 6;
inline bool CharacterDBMissionTrack::has_textid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBMissionTrack::set_has_textid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBMissionTrack::clear_has_textid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBMissionTrack::clear_textid() {
  textid_ = GOOGLE_ULONGLONG(0);
  clear_has_textid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::textid() const {
  return textid_;
}
inline void CharacterDBMissionTrack::set_textid(::google::protobuf::uint64 value) {
  set_has_textid();
  textid_ = value;
}

// -------------------------------------------------------------------

// CharacterDBDyMissionInfo

// optional int32 mission_type = 1;
inline bool CharacterDBDyMissionInfo::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBDyMissionInfo::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBDyMissionInfo::clear_mission_type() {
  mission_type_ = 0;
  clear_has_mission_type();
}
inline ::google::protobuf::int32 CharacterDBDyMissionInfo::mission_type() const {
  return mission_type_;
}
inline void CharacterDBDyMissionInfo::set_mission_type(::google::protobuf::int32 value) {
  set_has_mission_type();
  mission_type_ = value;
}

// optional uint64 lastfresh = 2;
inline bool CharacterDBDyMissionInfo::has_lastfresh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_lastfresh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBDyMissionInfo::clear_has_lastfresh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBDyMissionInfo::clear_lastfresh() {
  lastfresh_ = GOOGLE_ULONGLONG(0);
  clear_has_lastfresh();
}
inline ::google::protobuf::uint64 CharacterDBDyMissionInfo::lastfresh() const {
  return lastfresh_;
}
inline void CharacterDBDyMissionInfo::set_lastfresh(::google::protobuf::uint64 value) {
  set_has_lastfresh();
  lastfresh_ = value;
}

// optional int32 accept_num = 3;
inline bool CharacterDBDyMissionInfo::has_accept_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_accept_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBDyMissionInfo::clear_has_accept_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBDyMissionInfo::clear_accept_num() {
  accept_num_ = 0;
  clear_has_accept_num();
}
inline ::google::protobuf::int32 CharacterDBDyMissionInfo::accept_num() const {
  return accept_num_;
}
inline void CharacterDBDyMissionInfo::set_accept_num(::google::protobuf::int32 value) {
  set_has_accept_num();
  accept_num_ = value;
}

// -------------------------------------------------------------------

// CharacterDBTaskData

// repeated .proto_ff.CharacterDBMissionTrack missionTrack = 1;
inline int CharacterDBTaskData::missiontrack_size() const {
  return missiontrack_.size();
}
inline void CharacterDBTaskData::clear_missiontrack() {
  missiontrack_.Clear();
}
inline const ::proto_ff::CharacterDBMissionTrack& CharacterDBTaskData::missiontrack(int index) const {
  return missiontrack_.Get(index);
}
inline ::proto_ff::CharacterDBMissionTrack* CharacterDBTaskData::mutable_missiontrack(int index) {
  return missiontrack_.Mutable(index);
}
inline ::proto_ff::CharacterDBMissionTrack* CharacterDBTaskData::add_missiontrack() {
  return missiontrack_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >&
CharacterDBTaskData::missiontrack() const {
  return missiontrack_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >*
CharacterDBTaskData::mutable_missiontrack() {
  return &missiontrack_;
}

// repeated .proto_ff.CharacterDBDyMissionInfo dyinfo = 2;
inline int CharacterDBTaskData::dyinfo_size() const {
  return dyinfo_.size();
}
inline void CharacterDBTaskData::clear_dyinfo() {
  dyinfo_.Clear();
}
inline const ::proto_ff::CharacterDBDyMissionInfo& CharacterDBTaskData::dyinfo(int index) const {
  return dyinfo_.Get(index);
}
inline ::proto_ff::CharacterDBDyMissionInfo* CharacterDBTaskData::mutable_dyinfo(int index) {
  return dyinfo_.Mutable(index);
}
inline ::proto_ff::CharacterDBDyMissionInfo* CharacterDBTaskData::add_dyinfo() {
  return dyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >&
CharacterDBTaskData::dyinfo() const {
  return dyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >*
CharacterDBTaskData::mutable_dyinfo() {
  return &dyinfo_;
}

// repeated uint64 already_submit = 3;
inline int CharacterDBTaskData::already_submit_size() const {
  return already_submit_.size();
}
inline void CharacterDBTaskData::clear_already_submit() {
  already_submit_.Clear();
}
inline ::google::protobuf::uint64 CharacterDBTaskData::already_submit(int index) const {
  return already_submit_.Get(index);
}
inline void CharacterDBTaskData::set_already_submit(int index, ::google::protobuf::uint64 value) {
  already_submit_.Set(index, value);
}
inline void CharacterDBTaskData::add_already_submit(::google::protobuf::uint64 value) {
  already_submit_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CharacterDBTaskData::already_submit() const {
  return already_submit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CharacterDBTaskData::mutable_already_submit() {
  return &already_submit_;
}

// repeated .proto_ff.CharacterDBRecentSubmitMission recent_submit = 4;
inline int CharacterDBTaskData::recent_submit_size() const {
  return recent_submit_.size();
}
inline void CharacterDBTaskData::clear_recent_submit() {
  recent_submit_.Clear();
}
inline const ::proto_ff::CharacterDBRecentSubmitMission& CharacterDBTaskData::recent_submit(int index) const {
  return recent_submit_.Get(index);
}
inline ::proto_ff::CharacterDBRecentSubmitMission* CharacterDBTaskData::mutable_recent_submit(int index) {
  return recent_submit_.Mutable(index);
}
inline ::proto_ff::CharacterDBRecentSubmitMission* CharacterDBTaskData::add_recent_submit() {
  return recent_submit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >&
CharacterDBTaskData::recent_submit() const {
  return recent_submit_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >*
CharacterDBTaskData::mutable_recent_submit() {
  return &recent_submit_;
}

// -------------------------------------------------------------------

// NotifyVipDataRsp

// optional int32 exp = 1;
inline bool NotifyVipDataRsp::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyVipDataRsp::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyVipDataRsp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyVipDataRsp::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::exp() const {
  return exp_;
}
inline void NotifyVipDataRsp::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// repeated int32 ids = 2;
inline int NotifyVipDataRsp::ids_size() const {
  return ids_.size();
}
inline void NotifyVipDataRsp::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::ids(int index) const {
  return ids_.Get(index);
}
inline void NotifyVipDataRsp::set_ids(int index, ::google::protobuf::int32 value) {
  ids_.Set(index, value);
}
inline void NotifyVipDataRsp::add_ids(::google::protobuf::int32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyVipDataRsp::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyVipDataRsp::mutable_ids() {
  return &ids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::ECState>() {
  return ::proto_ff::ECState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EAttrGroup>() {
  return ::proto_ff::EAttrGroup_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::GrowType>() {
  return ::proto_ff::GrowType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::ECreatureAttr>() {
  return ::proto_ff::ECreatureAttr_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::DigPerforType>() {
  return ::proto_ff::DigPerforType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_GODRELICS_TASK_STATUS>() {
  return ::proto_ff::EN_GODRELICS_TASK_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_GODRELICS_GROUP_TASK_STATUS>() {
  return ::proto_ff::EN_GODRELICS_GROUP_TASK_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_DAILY_TASK_STATUS>() {
  return ::proto_ff::EN_DAILY_TASK_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_DAILY_TASK_REWARD_STATUS>() {
  return ::proto_ff::EN_DAILY_TASK_REWARD_STATUS_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Com_2eproto__INCLUDED
