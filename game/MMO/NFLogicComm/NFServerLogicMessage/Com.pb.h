// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Com.proto

#ifndef PROTOBUF_Com_2eproto__INCLUDED
#define PROTOBUF_Com_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Com_2eproto();
void protobuf_AssignDesc_Com_2eproto();
void protobuf_ShutdownFile_Com_2eproto();

class EmptyMessage;
class ComPair;
class ComPair64;
class ComPairBool;
class ComItem;
class ComItemWithType;
class Vector3PB;
class Vector2PB;
class Attr64;
class RoleFacadeProto;
class RoleListDBProto;
class LoginRoleProto;
class LoginSyncProto;
class CenterRoleProto;
class SocialRoleProto;
class Attr;
class BlueStarAttr;
class PetInfo;
class PetHatchInfo;
class ItemProtoInfo;
class StoneSlotInfo;
class WashSlotInfo;
class EquipSlotInfo;
class EquipInfo;
class EquipLvAttrInfo;
class ItemSimpleProto;
class MultItemSimpleProto;
class MailParamProto;
class MailStrProto;
class MailAttachmentList;
class MailHead;
class MailInfo;
class WebMailItemProto;
class WebMailDataProto;
class UseItemArgProto;
class NotifyRoleFacadeCastRsp;
class FunctionUnlockInfoData;
class FunctionUnlockInfo;
class RolePlayerMiniInfo;
class FriendInfo;
class FriendApplyInfo;
class RelationHateInfo;
class RelationGiftRecord;
class RelationDBInfo;
class DigPerfor;
class BuffProto;
class BuffListProto;
class SkillPosProto;
class SkillGroupProto;
class SkillGroupListProto;
class GodEvilTaskProto;
class GodEvilTaskListProto;
class GodEvilStageProto;
class GodEvilProto;
class FacadeFantasyData;
class FacadeFragmentData;
class FacadeSkillData;
class MountFantasyData;
class MountFragmentData;
class MountSkillData;
class MountKunData;
class MountBloodData;
class MountBabySlotData;
class StatisticDataProto;
class GodRelicsTaskEntry;
class GodRelicsTaskGroupEntry;
class DailyTaskEntry;
class DailyTaskLimitEntry;
class DailyTaskBackDayEntry;
class DailyTaskBackEntry;
class DailyTaskRewardEntry;
class DailyTaskAllData;
class CharacterDBRecentSubmitMission;
class CharacterDBMissionItemInfo;
class CharacterDBMissionTrack;
class CharacterDBDyMissionBountyParam;
class CharacterDBDyMissionInfo;
class GuildPrestigeMissionDBData;
class GuildPrestigeMissionDB;
class CharacterDBTaskData;
class NotifyVipDataRsp;
class ArenaChallResult;
class DailyArenaReward;
class ChallArenaReward;
class NotifyServerFlag;
class FacadeSoulSkillData;
class FacadeSoulActivityData;
class FacadeSoulData;
class ItemSellProto;
class DeityFantasySkillData;
class DeityEquipData;
class DeityEquipSuitData;
class DeityFantasyData;
class DeityFragmentData;
class DeitySkillData;
class DeityBattleSlotData;
class ArmorSuitState;
class ArmorInfo;
class TitleInfo;
class OccupationMissionSoulData;
class OccupationMissionStageData;
class OccupationMissionGradeData;
class OccupationMissionData;
class BestEQEquipInfo;
class BestEQBreak;
class BestEQSlotInfo;
class BestEQTask;

enum ECState {
  state_init = 0,
  state_normal = 1,
  state_dead = 2,
  state_seat = 3,
  state_fight = 4
};
bool ECState_IsValid(int value);
const ECState ECState_MIN = state_init;
const ECState ECState_MAX = state_fight;
const int ECState_ARRAYSIZE = ECState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECState_descriptor();
inline const ::std::string& ECState_Name(ECState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECState_descriptor(), value);
}
inline bool ECState_Parse(
    const ::std::string& name, ECState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECState>(
    ECState_descriptor(), name, value);
}
enum EAttrGroup {
  EAttrGroup_Level = 1,
  EAttrGroup_Skill = 2,
  EAttrGroup_Buff = 3,
  EAttrGroup_Equip = 4,
  EAttrGroup_Grow = 5,
  EAttrGroup_Facade = 6,
  EAttrGroup_Gm = 7,
  EAttrGroup_MOUNT = 8,
  EAttrGroup_Pet = 9,
  EAttrGroup_DEITY = 10,
  EAttrGroup_Armor = 11,
  EAttrGroup_Title = 12,
  EAttrGroup_GodEvil = 13,
  EAttrGroup_BestEQ = 14
};
bool EAttrGroup_IsValid(int value);
const EAttrGroup EAttrGroup_MIN = EAttrGroup_Level;
const EAttrGroup EAttrGroup_MAX = EAttrGroup_BestEQ;
const int EAttrGroup_ARRAYSIZE = EAttrGroup_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAttrGroup_descriptor();
inline const ::std::string& EAttrGroup_Name(EAttrGroup value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAttrGroup_descriptor(), value);
}
inline bool EAttrGroup_Parse(
    const ::std::string& name, EAttrGroup* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAttrGroup>(
    EAttrGroup_descriptor(), name, value);
}
enum GrowType {
  GrowType_clothes = 1,
  GrowType_weapon = 2,
  GrowType_eye_awn = 3,
  GrowType_face_des = 4,
  GrowType_waist_des = 5,
  GrowType_tail = 6,
  GrowType_bracelet = 7,
  GrowType_footprint = 8,
  GrowType_med = 9,
  GrowType_halo = 10,
  GrowType_proto_frame = 11,
  GrowType_bubble = 12,
  GrowType_head = 13,
  GrowType_WING_TYPE = 14,
  GrowType_TREASURE_TYPE = 15,
  GrowType_ARTIFACT_TYPE = 16,
  GrowType_PARTNER_TYPE = 17,
  GrowType_MOUNT_TYPE = 18,
  GrowType_DEITY_TYPE = 19
};
bool GrowType_IsValid(int value);
const GrowType GrowType_MIN = GrowType_clothes;
const GrowType GrowType_MAX = GrowType_DEITY_TYPE;
const int GrowType_ARRAYSIZE = GrowType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GrowType_descriptor();
inline const ::std::string& GrowType_Name(GrowType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GrowType_descriptor(), value);
}
inline bool GrowType_Parse(
    const ::std::string& name, GrowType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GrowType>(
    GrowType_descriptor(), name, value);
}
enum ECreatureAttr {
  A_NONE = 0,
  A_MAX_HP = 1,
  A_ATK = 2,
  A_DEF = 3,
  A_BRK_ARMOR = 4,
  A_FIVE_DAM = 5,
  A_FIVE_ARMOR = 6,
  A_THUMP_RATE = 7,
  A_THUMP_RESIST = 8,
  A_SKY = 9,
  A_SKY_DAM = 10,
  A_SKY_REDU_RESIST = 11,
  A_SKY_RESIST = 12,
  A_KILL_GOD = 13,
  A_GOD_BODY = 14,
  A_MORTAL_RATE = 15,
  A_MORTAL_RESIST = 16,
  A_FAIRY_RATE = 17,
  A_FAIRY_RESIST = 18,
  A_GOD_RATE = 19,
  A_GOD_RESIST = 20,
  A_CRIT_RATE = 21,
  A_CRIT_RESIT_RATE = 22,
  A_CRIT_DAM = 23,
  A_CRIT_REDU = 24,
  A_BATTER_RATE = 25,
  A_BATTER_RESIST = 26,
  A_BATTER_DAM = 27,
  A_BATTER_REDU = 28,
  A_BRKDOWN_RATE = 29,
  A_BRKDOWN_RESIST = 30,
  A_DAM_ADD = 31,
  A_DAM_REDU = 32,
  A_ALL_ADD = 33,
  A_ALL_REDU = 34,
  A_SKILL_ADD = 35,
  A_SKILL_REDU = 36,
  A_REBOUND_DAM = 37,
  A_HP_STEAL = 38,
  A_DODGE_RATE = 39,
  A_HIT_RATE = 40,
  A_BLK_RATE = 41,
  A_BRK_BLK_RATE = 42,
  A_BLK_FREE = 43,
  A_BLK_PIERCE = 44,
  A_REL_ARMOR = 45,
  A_REL_DAM = 46,
  A_FIVE_RESIST = 47,
  A_FIVE_RESIST_REDU = 48,
  A_FIRE_ADD = 49,
  A_FIRE_REDU = 50,
  A_ICE_ADD = 51,
  A_ICE_REDU = 52,
  A_THUNDER_ADD = 53,
  A_THUNDER_RDU = 54,
  A_PLAYER_REDU = 55,
  A_PLAYER_ADD = 56,
  A_LEADER_REDU = 57,
  A_LEADER_ADD = 58,
  A_MON_REDU = 59,
  A_MON_ADD = 60,
  A_VAR_REDU = 61,
  A_VAR_ADD = 62,
  A_UNUSUAL_RESIST = 63,
  A_UNUSUAL_HIT = 64,
  A_HP_RECOVER = 65,
  A_UNUSUAL_ADD = 66,
  A_FIX_RECOVER = 67,
  A_HIGH_HP_ADD = 68,
  A_RECOVER_HP_ADD = 69,
  A_WEEK_ADD = 70,
  A_MAG_SHIELD = 71,
  A_MAG_ATK = 72,
  A_MAG_DEF = 73,
  A_MAG_DAM = 74,
  A_MAG_SHIELD_ADD = 75,
  A_MAG_REDU = 76,
  A_MAG_ATK_ADD = 77,
  A_MAG_DEF_ADD = 78,
  A_MAG_VAR_COOL = 79,
  A_GOD_SHIELD = 80,
  A_SHIELD = 81,
  A_VAR_TIME = 82,
  A_COOL_TIME = 83,
  A_SPEED = 84,
  A_HP_ADD = 85,
  A_ATK_ADD = 86,
  A_DEF_ADD = 87,
  A_ARMOR_ADD = 88,
  A_FIVE_DAM_ADD = 89,
  A_FIVE_ARMOR_ADD = 90,
  A_DROP = 91,
  A_EXP_ADD = 92,
  A_GOLD_DROP = 93,
  A_LEV_ALL_ADD = 94,
  A_SKY_ADD = 95,
  A_GONG_ABS_ADD = 96,
  A_MERI_ABS_ADD = 97,
  A_WING_ALL_ADD = 98,
  A_MAG_WEAPON_ALL_ADD = 99,
  A_ARTIFACT_ALL_ADD = 100,
  A_SWORD_ALL_ADD = 101,
  A_GOD_ALL_ADD = 102,
  A_MOUNT_ALL_ADD = 103,
  A_STONE_ALL_ADD = 104,
  A_GOD_EQU_BA = 105,
  A_WEAPON_BA = 106,
  A_WEAPON_WAKE_BA = 107,
  A_GODS_QI_SHA = 108,
  A_GODS_PO_JUN = 109,
  A_GODS_ZI_WEI = 110,
  A_GODS_WU_QU = 111,
  A_GODS_TAI_YANG = 112,
  A_GODS_LIAN_ZHEN = 113,
  A_GODS_TAN_LANG = 114,
  A_GODS_TIAN_FU = 115,
  A_GODS_TIAN_XIANG = 116,
  A_GODS_JU_MEN = 117,
  A_MAIN_WEAPON_BA_ADD = 118,
  A_DEPUTY_WEAPON_BA_ADD = 119,
  A_CAP_BA_ADD = 120,
  A_CLOTH_BA_ADD = 121,
  A_HAND_BA_ADD = 122,
  A_BELT_BA_ADD = 123,
  A_SHOE_BA_ADD = 124,
  A_NECK_BA_ADD = 125,
  A_BRACELET_BA_ADD = 126,
  A_RING_BA_ADD = 127,
  A_EQU_WAKE_BA_ADD = 128,
  A_SUIT_ZHU_MO_BA_ADD = 129,
  A_SUIT_ZHU_XIAN_BA_ADD = 130,
  A_SUIT_ZHU_SHEN_BA_ADD = 131,
  A_EQU_FLY_BA_ADD = 132,
  A_EIGHT_BA_ADD = 133,
  A_EIGHT_EYE_BA_ADD = 134,
  A_COM_SHIELD = 135,
  A_FIGHT_END = 200,
  A_GOLD = 201,
  A_MAGIC = 202,
  A_DIA = 203,
  A_BD_DIA = 204,
  A_PRESTIGE = 205,
  A_FIGHT = 206,
  A_EXP = 207,
  A_CUR_HP = 208,
  A_PROF = 209,
  A_LEVEL = 210,
  A_VIP_LEVEL = 211,
  A_TEAM_ID = 212,
  A_TEAM_LEADER = 213,
  A_ARENA_COIN = 214,
  A_TITLE_ID = 215,
  A_FRIEND_COUNT = 220,
  A_HANGUP_TIME = 221,
  A_WORLD_EXP_ADD = 222,
  A_FUSHI_TIME = 223,
  A_DUP_ID = 224,
  A_CAMP_ID = 226,
  A_DAILY_EXP = 227,
  A_FACTION_ID = 228,
  A_FACTION_LEADER = 229,
  A_FACTION_LEVEL = 230,
  A_FACTION_DUTY = 231,
  A_CONTRI = 232,
  A_ESCORT_ID = 233,
  A_GODEVIL_EXP = 234,
  A_GODEVIL_LEV = 235,
  A_TEMP_CAMP_ID = 236,
  A_BEST_AQ = 237,
  A_BEST_LJ = 238,
  A_COMMON_END = 400
};
bool ECreatureAttr_IsValid(int value);
const ECreatureAttr ECreatureAttr_MIN = A_NONE;
const ECreatureAttr ECreatureAttr_MAX = A_COMMON_END;
const int ECreatureAttr_ARRAYSIZE = ECreatureAttr_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECreatureAttr_descriptor();
inline const ::std::string& ECreatureAttr_Name(ECreatureAttr value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECreatureAttr_descriptor(), value);
}
inline bool ECreatureAttr_Parse(
    const ::std::string& name, ECreatureAttr* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECreatureAttr>(
    ECreatureAttr_descriptor(), name, value);
}
enum DigPerforType {
  addhp = 1,
  reducehp = 2,
  crit = 3,
  dodge = 4,
  absorb = 5,
  normalimmune = 6,
  fiveimmune = 7,
  godimmune = 8,
  injury = 9,
  invincible = 10,
  effectivearea = 11,
  steal = 12,
  kill = 13,
  bosscountlimit = 14,
  breakdown = 15,
  conti = 16,
  pet1 = 17,
  pet2 = 18,
  pet3 = 19,
  block = 20
};
bool DigPerforType_IsValid(int value);
const DigPerforType DigPerforType_MIN = addhp;
const DigPerforType DigPerforType_MAX = block;
const int DigPerforType_ARRAYSIZE = DigPerforType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DigPerforType_descriptor();
inline const ::std::string& DigPerforType_Name(DigPerforType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DigPerforType_descriptor(), value);
}
inline bool DigPerforType_Parse(
    const ::std::string& name, DigPerforType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DigPerforType>(
    DigPerforType_descriptor(), name, value);
}
enum MountBloodState {
  MOUNT_BLOOD_STATE_NOT_ACTIVE = 0,
  MOUNT_BLOOD_STATE_CAN_ACTIVE = 1,
  MOUNT_BLOOD_STATE_ACTIVED = 2
};
bool MountBloodState_IsValid(int value);
const MountBloodState MountBloodState_MIN = MOUNT_BLOOD_STATE_NOT_ACTIVE;
const MountBloodState MountBloodState_MAX = MOUNT_BLOOD_STATE_ACTIVED;
const int MountBloodState_ARRAYSIZE = MountBloodState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MountBloodState_descriptor();
inline const ::std::string& MountBloodState_Name(MountBloodState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MountBloodState_descriptor(), value);
}
inline bool MountBloodState_Parse(
    const ::std::string& name, MountBloodState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MountBloodState>(
    MountBloodState_descriptor(), name, value);
}
enum MountBabySlotState {
  MOUNT_BABY_SLOT_STATE_LOCK = 0,
  MOUNT_BABY_SLOT_STATE_EMPTY = 1,
  MOUNT_BABY_SLOT_STATE_USING = 2,
  MOUNT_BABY_SLOT_STATE_DUING_SUCCESS = 3
};
bool MountBabySlotState_IsValid(int value);
const MountBabySlotState MountBabySlotState_MIN = MOUNT_BABY_SLOT_STATE_LOCK;
const MountBabySlotState MountBabySlotState_MAX = MOUNT_BABY_SLOT_STATE_DUING_SUCCESS;
const int MountBabySlotState_ARRAYSIZE = MountBabySlotState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MountBabySlotState_descriptor();
inline const ::std::string& MountBabySlotState_Name(MountBabySlotState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MountBabySlotState_descriptor(), value);
}
inline bool MountBabySlotState_Parse(
    const ::std::string& name, MountBabySlotState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MountBabySlotState>(
    MountBabySlotState_descriptor(), name, value);
}
enum EN_GODRELICS_TASK_STATUS {
  EN_GODRELICS_TASK_STATUS_NOT_FINISH = 0,
  EN_GODRELICS_TASK_STATUS_FINISH = 1,
  EN_GODRELICS_TASK_STATUS_GET_REWARD = 2
};
bool EN_GODRELICS_TASK_STATUS_IsValid(int value);
const EN_GODRELICS_TASK_STATUS EN_GODRELICS_TASK_STATUS_MIN = EN_GODRELICS_TASK_STATUS_NOT_FINISH;
const EN_GODRELICS_TASK_STATUS EN_GODRELICS_TASK_STATUS_MAX = EN_GODRELICS_TASK_STATUS_GET_REWARD;
const int EN_GODRELICS_TASK_STATUS_ARRAYSIZE = EN_GODRELICS_TASK_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_GODRELICS_TASK_STATUS_descriptor();
inline const ::std::string& EN_GODRELICS_TASK_STATUS_Name(EN_GODRELICS_TASK_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_GODRELICS_TASK_STATUS_descriptor(), value);
}
inline bool EN_GODRELICS_TASK_STATUS_Parse(
    const ::std::string& name, EN_GODRELICS_TASK_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_GODRELICS_TASK_STATUS>(
    EN_GODRELICS_TASK_STATUS_descriptor(), name, value);
}
enum EN_GODRELICS_GROUP_TASK_STATUS {
  EN_GODRELICS_GROUP_TASK_STATUS_NOT_UNLOCK = 0,
  EN_GODRELICS_GROUP_TASK_STATUS_NOT_FINISH = 1,
  EN_GODRELICS_GROUP_TASK_STATUS_FINISH = 2,
  EN_GODRELICS_GROUP_TASK_STATUS_GET_REWARD = 3
};
bool EN_GODRELICS_GROUP_TASK_STATUS_IsValid(int value);
const EN_GODRELICS_GROUP_TASK_STATUS EN_GODRELICS_GROUP_TASK_STATUS_MIN = EN_GODRELICS_GROUP_TASK_STATUS_NOT_UNLOCK;
const EN_GODRELICS_GROUP_TASK_STATUS EN_GODRELICS_GROUP_TASK_STATUS_MAX = EN_GODRELICS_GROUP_TASK_STATUS_GET_REWARD;
const int EN_GODRELICS_GROUP_TASK_STATUS_ARRAYSIZE = EN_GODRELICS_GROUP_TASK_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_GODRELICS_GROUP_TASK_STATUS_descriptor();
inline const ::std::string& EN_GODRELICS_GROUP_TASK_STATUS_Name(EN_GODRELICS_GROUP_TASK_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_GODRELICS_GROUP_TASK_STATUS_descriptor(), value);
}
inline bool EN_GODRELICS_GROUP_TASK_STATUS_Parse(
    const ::std::string& name, EN_GODRELICS_GROUP_TASK_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_GODRELICS_GROUP_TASK_STATUS>(
    EN_GODRELICS_GROUP_TASK_STATUS_descriptor(), name, value);
}
enum EN_DAILY_TASK_STATUS {
  EN_DAILY_TASK_STATUS_NOT_UNLOCK = 0,
  EN_DAILY_TASK_STATUS_NOT_FINISH = 1,
  EN_DAILY_TASK_STATUS_FINISH = 2
};
bool EN_DAILY_TASK_STATUS_IsValid(int value);
const EN_DAILY_TASK_STATUS EN_DAILY_TASK_STATUS_MIN = EN_DAILY_TASK_STATUS_NOT_UNLOCK;
const EN_DAILY_TASK_STATUS EN_DAILY_TASK_STATUS_MAX = EN_DAILY_TASK_STATUS_FINISH;
const int EN_DAILY_TASK_STATUS_ARRAYSIZE = EN_DAILY_TASK_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_DAILY_TASK_STATUS_descriptor();
inline const ::std::string& EN_DAILY_TASK_STATUS_Name(EN_DAILY_TASK_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_DAILY_TASK_STATUS_descriptor(), value);
}
inline bool EN_DAILY_TASK_STATUS_Parse(
    const ::std::string& name, EN_DAILY_TASK_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_DAILY_TASK_STATUS>(
    EN_DAILY_TASK_STATUS_descriptor(), name, value);
}
enum EN_DAILY_TASK_REWARD_STATUS {
  EN_DAILY_TASK_REWARD_STATUS_NOT_GET = 0,
  EN_DAILY_TASK_REWARD_STATUS_CAN_GET = 1,
  EN_DAILY_TASK_REWARD_STATUS_GET = 2
};
bool EN_DAILY_TASK_REWARD_STATUS_IsValid(int value);
const EN_DAILY_TASK_REWARD_STATUS EN_DAILY_TASK_REWARD_STATUS_MIN = EN_DAILY_TASK_REWARD_STATUS_NOT_GET;
const EN_DAILY_TASK_REWARD_STATUS EN_DAILY_TASK_REWARD_STATUS_MAX = EN_DAILY_TASK_REWARD_STATUS_GET;
const int EN_DAILY_TASK_REWARD_STATUS_ARRAYSIZE = EN_DAILY_TASK_REWARD_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_DAILY_TASK_REWARD_STATUS_descriptor();
inline const ::std::string& EN_DAILY_TASK_REWARD_STATUS_Name(EN_DAILY_TASK_REWARD_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_DAILY_TASK_REWARD_STATUS_descriptor(), value);
}
inline bool EN_DAILY_TASK_REWARD_STATUS_Parse(
    const ::std::string& name, EN_DAILY_TASK_REWARD_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_DAILY_TASK_REWARD_STATUS>(
    EN_DAILY_TASK_REWARD_STATUS_descriptor(), name, value);
}
enum FacadeSoulSkillStatus {
  FACADE_SOUL_SKILL_STATUS_NONE = 0,
  FACADE_SOUL_SKILL_STATUS_ACTIVED = 1
};
bool FacadeSoulSkillStatus_IsValid(int value);
const FacadeSoulSkillStatus FacadeSoulSkillStatus_MIN = FACADE_SOUL_SKILL_STATUS_NONE;
const FacadeSoulSkillStatus FacadeSoulSkillStatus_MAX = FACADE_SOUL_SKILL_STATUS_ACTIVED;
const int FacadeSoulSkillStatus_ARRAYSIZE = FacadeSoulSkillStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* FacadeSoulSkillStatus_descriptor();
inline const ::std::string& FacadeSoulSkillStatus_Name(FacadeSoulSkillStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    FacadeSoulSkillStatus_descriptor(), value);
}
inline bool FacadeSoulSkillStatus_Parse(
    const ::std::string& name, FacadeSoulSkillStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FacadeSoulSkillStatus>(
    FacadeSoulSkillStatus_descriptor(), name, value);
}
enum FacadeSoulActivitytatus {
  FACADE_SOUL_ACTIVITY_STATUS_NONE = 0,
  FACADE_SOUL_ACTIVITY_STATUS_CAN_RECV = 1,
  FACADE_SOUL_ACTIVITY_STATUS_RECVed = 2
};
bool FacadeSoulActivitytatus_IsValid(int value);
const FacadeSoulActivitytatus FacadeSoulActivitytatus_MIN = FACADE_SOUL_ACTIVITY_STATUS_NONE;
const FacadeSoulActivitytatus FacadeSoulActivitytatus_MAX = FACADE_SOUL_ACTIVITY_STATUS_RECVed;
const int FacadeSoulActivitytatus_ARRAYSIZE = FacadeSoulActivitytatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* FacadeSoulActivitytatus_descriptor();
inline const ::std::string& FacadeSoulActivitytatus_Name(FacadeSoulActivitytatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    FacadeSoulActivitytatus_descriptor(), value);
}
inline bool FacadeSoulActivitytatus_Parse(
    const ::std::string& name, FacadeSoulActivitytatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FacadeSoulActivitytatus>(
    FacadeSoulActivitytatus_descriptor(), name, value);
}
enum EDeityEquipSuitStatus {
  EDeityEquipSuitStatus_NONE = 0,
  EDeityEquipSuitStatus_NOT_ACTIVE = 1,
  EDeityEquipSuitStatus_ACTIVE = 2
};
bool EDeityEquipSuitStatus_IsValid(int value);
const EDeityEquipSuitStatus EDeityEquipSuitStatus_MIN = EDeityEquipSuitStatus_NONE;
const EDeityEquipSuitStatus EDeityEquipSuitStatus_MAX = EDeityEquipSuitStatus_ACTIVE;
const int EDeityEquipSuitStatus_ARRAYSIZE = EDeityEquipSuitStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDeityEquipSuitStatus_descriptor();
inline const ::std::string& EDeityEquipSuitStatus_Name(EDeityEquipSuitStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDeityEquipSuitStatus_descriptor(), value);
}
inline bool EDeityEquipSuitStatus_Parse(
    const ::std::string& name, EDeityEquipSuitStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDeityEquipSuitStatus>(
    EDeityEquipSuitStatus_descriptor(), name, value);
}
enum DeityBattleSlotState {
  DEITY_BATTLE_SLOT_STATE_LOCK = 0,
  DEITY_BATTLE_SLOT_STATE_EMPTY = 1,
  DEITY_BATTLE_SLOT_STATE_USING = 2
};
bool DeityBattleSlotState_IsValid(int value);
const DeityBattleSlotState DeityBattleSlotState_MIN = DEITY_BATTLE_SLOT_STATE_LOCK;
const DeityBattleSlotState DeityBattleSlotState_MAX = DEITY_BATTLE_SLOT_STATE_USING;
const int DeityBattleSlotState_ARRAYSIZE = DeityBattleSlotState_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeityBattleSlotState_descriptor();
inline const ::std::string& DeityBattleSlotState_Name(DeityBattleSlotState value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeityBattleSlotState_descriptor(), value);
}
inline bool DeityBattleSlotState_Parse(
    const ::std::string& name, DeityBattleSlotState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeityBattleSlotState>(
    DeityBattleSlotState_descriptor(), name, value);
}
enum ETitleStatus {
  E_TITLE_STATUS_NONE = 0,
  E_TITLE_STATUS_CAN_ACTIVE = 1,
  E_TITLE_STATUS_ACTIVED = 2,
  E_TITLE_STATUS_WEARING = 3
};
bool ETitleStatus_IsValid(int value);
const ETitleStatus ETitleStatus_MIN = E_TITLE_STATUS_NONE;
const ETitleStatus ETitleStatus_MAX = E_TITLE_STATUS_WEARING;
const int ETitleStatus_ARRAYSIZE = ETitleStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETitleStatus_descriptor();
inline const ::std::string& ETitleStatus_Name(ETitleStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETitleStatus_descriptor(), value);
}
inline bool ETitleStatus_Parse(
    const ::std::string& name, ETitleStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETitleStatus>(
    ETitleStatus_descriptor(), name, value);
}
// ===================================================================

class EmptyMessage : public ::google::protobuf::Message {
 public:
  EmptyMessage();
  virtual ~EmptyMessage();

  EmptyMessage(const EmptyMessage& from);

  inline EmptyMessage& operator=(const EmptyMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyMessage& default_instance();

  void Swap(EmptyMessage* other);

  // implements Message ----------------------------------------------

  EmptyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmptyMessage& from);
  void MergeFrom(const EmptyMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.EmptyMessage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EmptyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ComPair : public ::google::protobuf::Message {
 public:
  ComPair();
  virtual ~ComPair();

  ComPair(const ComPair& from);

  inline ComPair& operator=(const ComPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComPair& default_instance();

  void Swap(ComPair* other);

  // implements Message ----------------------------------------------

  ComPair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComPair& from);
  void MergeFrom(const ComPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComPair)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComPair* default_instance_;
};
// -------------------------------------------------------------------

class ComPair64 : public ::google::protobuf::Message {
 public:
  ComPair64();
  virtual ~ComPair64();

  ComPair64(const ComPair64& from);

  inline ComPair64& operator=(const ComPair64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComPair64& default_instance();

  void Swap(ComPair64* other);

  // implements Message ----------------------------------------------

  ComPair64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComPair64& from);
  void MergeFrom(const ComPair64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);

  // optional uint64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComPair64)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint64 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComPair64* default_instance_;
};
// -------------------------------------------------------------------

class ComPairBool : public ::google::protobuf::Message {
 public:
  ComPairBool();
  virtual ~ComPairBool();

  ComPairBool(const ComPairBool& from);

  inline ComPairBool& operator=(const ComPairBool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComPairBool& default_instance();

  void Swap(ComPairBool* other);

  // implements Message ----------------------------------------------

  ComPairBool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComPairBool& from);
  void MergeFrom(const ComPairBool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // optional bool value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline bool value() const;
  inline void set_value(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComPairBool)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 key_;
  bool value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComPairBool* default_instance_;
};
// -------------------------------------------------------------------

class ComItem : public ::google::protobuf::Message {
 public:
  ComItem();
  virtual ~ComItem();

  ComItem(const ComItem& from);

  inline ComItem& operator=(const ComItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComItem& default_instance();

  void Swap(ComItem* other);

  // implements Message ----------------------------------------------

  ComItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComItem& from);
  void MergeFrom(const ComItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional uint64 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint64 item_num() const;
  inline void set_item_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 item_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComItem* default_instance_;
};
// -------------------------------------------------------------------

class ComItemWithType : public ::google::protobuf::Message {
 public:
  ComItemWithType();
  virtual ~ComItemWithType();

  ComItemWithType(const ComItemWithType& from);

  inline ComItemWithType& operator=(const ComItemWithType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComItemWithType& default_instance();

  void Swap(ComItemWithType* other);

  // implements Message ----------------------------------------------

  ComItemWithType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComItemWithType& from);
  void MergeFrom(const ComItemWithType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional uint64 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint64 item_num() const;
  inline void set_item_num(::google::protobuf::uint64 value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComItemWithType)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 item_num_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ComItemWithType* default_instance_;
};
// -------------------------------------------------------------------

class Vector3PB : public ::google::protobuf::Message {
 public:
  Vector3PB();
  virtual ~Vector3PB();

  Vector3PB(const Vector3PB& from);

  inline Vector3PB& operator=(const Vector3PB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector3PB& default_instance();

  void Swap(Vector3PB* other);

  // implements Message ----------------------------------------------

  Vector3PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vector3PB& from);
  void MergeFrom(const Vector3PB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // required float z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);

  // @@protoc_insertion_point(class_scope:proto_ff.Vector3PB)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  float z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Vector3PB* default_instance_;
};
// -------------------------------------------------------------------

class Vector2PB : public ::google::protobuf::Message {
 public:
  Vector2PB();
  virtual ~Vector2PB();

  Vector2PB(const Vector2PB& from);

  inline Vector2PB& operator=(const Vector2PB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector2PB& default_instance();

  void Swap(Vector2PB* other);

  // implements Message ----------------------------------------------

  Vector2PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vector2PB& from);
  void MergeFrom(const Vector2PB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:proto_ff.Vector2PB)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Vector2PB* default_instance_;
};
// -------------------------------------------------------------------

class Attr64 : public ::google::protobuf::Message {
 public:
  Attr64();
  virtual ~Attr64();

  Attr64(const Attr64& from);

  inline Attr64& operator=(const Attr64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attr64& default_instance();

  void Swap(Attr64* other);

  // implements Message ----------------------------------------------

  Attr64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attr64& from);
  void MergeFrom(const Attr64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Attr64)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Attr64* default_instance_;
};
// -------------------------------------------------------------------

class RoleFacadeProto : public ::google::protobuf::Message {
 public:
  RoleFacadeProto();
  virtual ~RoleFacadeProto();

  RoleFacadeProto(const RoleFacadeProto& from);

  inline RoleFacadeProto& operator=(const RoleFacadeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleFacadeProto& default_instance();

  void Swap(RoleFacadeProto* other);

  // implements Message ----------------------------------------------

  RoleFacadeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleFacadeProto& from);
  void MergeFrom(const RoleFacadeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.Attr64 growFacade = 1;
  inline int growfacade_size() const;
  inline void clear_growfacade();
  static const int kGrowFacadeFieldNumber = 1;
  inline const ::proto_ff::Attr64& growfacade(int index) const;
  inline ::proto_ff::Attr64* mutable_growfacade(int index);
  inline ::proto_ff::Attr64* add_growfacade();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >&
      growfacade() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >*
      mutable_growfacade();

  // optional int32 color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // optional int32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleFacadeProto)
 private:
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_prof();
  inline void clear_has_prof();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 > growfacade_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 prof_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RoleFacadeProto* default_instance_;
};
// -------------------------------------------------------------------

class RoleListDBProto : public ::google::protobuf::Message {
 public:
  RoleListDBProto();
  virtual ~RoleListDBProto();

  RoleListDBProto(const RoleListDBProto& from);

  inline RoleListDBProto& operator=(const RoleListDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListDBProto& default_instance();

  void Swap(RoleListDBProto* other);

  // implements Message ----------------------------------------------

  RoleListDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListDBProto& from);
  void MergeFrom(const RoleListDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 createtime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 6;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 7;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 7;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint64 sceneid = 8;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 8;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 9;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 9;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 10;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 10;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // optional uint64 lastsceneid = 11;
  inline bool has_lastsceneid() const;
  inline void clear_lastsceneid();
  static const int kLastsceneidFieldNumber = 11;
  inline ::google::protobuf::uint64 lastsceneid() const;
  inline void set_lastsceneid(::google::protobuf::uint64 value);

  // optional uint64 lastmapid = 12;
  inline bool has_lastmapid() const;
  inline void clear_lastmapid();
  static const int kLastmapidFieldNumber = 12;
  inline ::google::protobuf::uint64 lastmapid() const;
  inline void set_lastmapid(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB lastpos = 13;
  inline bool has_lastpos() const;
  inline void clear_lastpos();
  static const int kLastposFieldNumber = 13;
  inline const ::proto_ff::Vector3PB& lastpos() const;
  inline ::proto_ff::Vector3PB* mutable_lastpos();
  inline ::proto_ff::Vector3PB* release_lastpos();
  inline void set_allocated_lastpos(::proto_ff::Vector3PB* lastpos);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleListDBProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_lastsceneid();
  inline void clear_has_lastsceneid();
  inline void set_has_lastmapid();
  inline void clear_has_lastmapid();
  inline void set_has_lastpos();
  inline void clear_has_lastpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 createtime_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 mapid_;
  ::proto_ff::Vector3PB* pos_;
  ::google::protobuf::uint64 lastsceneid_;
  ::google::protobuf::uint64 lastmapid_;
  ::proto_ff::Vector3PB* lastpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RoleListDBProto* default_instance_;
};
// -------------------------------------------------------------------

class LoginRoleProto : public ::google::protobuf::Message {
 public:
  LoginRoleProto();
  virtual ~LoginRoleProto();

  LoginRoleProto(const LoginRoleProto& from);

  inline LoginRoleProto& operator=(const LoginRoleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRoleProto& default_instance();

  void Swap(LoginRoleProto* other);

  // implements Message ----------------------------------------------

  LoginRoleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRoleProto& from);
  void MergeFrom(const LoginRoleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 createtime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 6;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 7;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 7;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // @@protoc_insertion_point(class_scope:proto_ff.LoginRoleProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_facade();
  inline void clear_has_facade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 createtime_;
  ::proto_ff::RoleFacadeProto* facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LoginRoleProto* default_instance_;
};
// -------------------------------------------------------------------

class LoginSyncProto : public ::google::protobuf::Message {
 public:
  LoginSyncProto();
  virtual ~LoginSyncProto();

  LoginSyncProto(const LoginSyncProto& from);

  inline LoginSyncProto& operator=(const LoginSyncProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginSyncProto& default_instance();

  void Swap(LoginSyncProto* other);

  // implements Message ----------------------------------------------

  LoginSyncProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginSyncProto& from);
  void MergeFrom(const LoginSyncProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 faction_id = 1;
  inline bool has_faction_id() const;
  inline void clear_faction_id();
  static const int kFactionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 faction_id() const;
  inline void set_faction_id(::google::protobuf::uint32 value);

  // optional string faction_name = 2;
  inline bool has_faction_name() const;
  inline void clear_faction_name();
  static const int kFactionNameFieldNumber = 2;
  inline const ::std::string& faction_name() const;
  inline void set_faction_name(const ::std::string& value);
  inline void set_faction_name(const char* value);
  inline void set_faction_name(const char* value, size_t size);
  inline ::std::string* mutable_faction_name();
  inline ::std::string* release_faction_name();
  inline void set_allocated_faction_name(::std::string* faction_name);

  // optional int32 duty = 3;
  inline bool has_duty() const;
  inline void clear_duty();
  static const int kDutyFieldNumber = 3;
  inline ::google::protobuf::int32 duty() const;
  inline void set_duty(::google::protobuf::int32 value);

  // optional uint64 faction_leader = 4;
  inline bool has_faction_leader() const;
  inline void clear_faction_leader();
  static const int kFactionLeaderFieldNumber = 4;
  inline ::google::protobuf::uint64 faction_leader() const;
  inline void set_faction_leader(::google::protobuf::uint64 value);

  // optional int32 faction_level = 5;
  inline bool has_faction_level() const;
  inline void clear_faction_level();
  static const int kFactionLevelFieldNumber = 5;
  inline ::google::protobuf::int32 faction_level() const;
  inline void set_faction_level(::google::protobuf::int32 value);

  // optional uint32 team_id = 6;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 6;
  inline ::google::protobuf::uint32 team_id() const;
  inline void set_team_id(::google::protobuf::uint32 value);

  // optional uint64 leader = 7;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 7;
  inline ::google::protobuf::uint64 leader() const;
  inline void set_leader(::google::protobuf::uint64 value);

  // optional int32 mem_count = 8;
  inline bool has_mem_count() const;
  inline void clear_mem_count();
  static const int kMemCountFieldNumber = 8;
  inline ::google::protobuf::int32 mem_count() const;
  inline void set_mem_count(::google::protobuf::int32 value);

  // optional int32 cloness_lev = 9;
  inline bool has_cloness_lev() const;
  inline void clear_cloness_lev();
  static const int kClonessLevFieldNumber = 9;
  inline ::google::protobuf::int32 cloness_lev() const;
  inline void set_cloness_lev(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LoginSyncProto)
 private:
  inline void set_has_faction_id();
  inline void clear_has_faction_id();
  inline void set_has_faction_name();
  inline void clear_has_faction_name();
  inline void set_has_duty();
  inline void clear_has_duty();
  inline void set_has_faction_leader();
  inline void clear_has_faction_leader();
  inline void set_has_faction_level();
  inline void clear_has_faction_level();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_mem_count();
  inline void clear_has_mem_count();
  inline void set_has_cloness_lev();
  inline void clear_has_cloness_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* faction_name_;
  ::google::protobuf::uint32 faction_id_;
  ::google::protobuf::int32 duty_;
  ::google::protobuf::uint64 faction_leader_;
  ::google::protobuf::int32 faction_level_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint64 leader_;
  ::google::protobuf::int32 mem_count_;
  ::google::protobuf::int32 cloness_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static LoginSyncProto* default_instance_;
};
// -------------------------------------------------------------------

class CenterRoleProto : public ::google::protobuf::Message {
 public:
  CenterRoleProto();
  virtual ~CenterRoleProto();

  CenterRoleProto(const CenterRoleProto& from);

  inline CenterRoleProto& operator=(const CenterRoleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterRoleProto& default_instance();

  void Swap(CenterRoleProto* other);

  // implements Message ----------------------------------------------

  CenterRoleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterRoleProto& from);
  void MergeFrom(const CenterRoleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 lastlogout = 6;
  inline bool has_lastlogout() const;
  inline void clear_lastlogout();
  static const int kLastlogoutFieldNumber = 6;
  inline ::google::protobuf::uint64 lastlogout() const;
  inline void set_lastlogout(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 7;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 7;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint32 vip_level = 8;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional int64 hp = 9;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 9;
  inline ::google::protobuf::int64 hp() const;
  inline void set_hp(::google::protobuf::int64 value);

  // optional int64 max_hp = 10;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 10;
  inline ::google::protobuf::int64 max_hp() const;
  inline void set_max_hp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CenterRoleProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_lastlogout();
  inline void clear_has_lastlogout();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 lastlogout_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::int64 hp_;
  ::google::protobuf::int64 max_hp_;
  ::google::protobuf::uint32 vip_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CenterRoleProto* default_instance_;
};
// -------------------------------------------------------------------

class SocialRoleProto : public ::google::protobuf::Message {
 public:
  SocialRoleProto();
  virtual ~SocialRoleProto();

  SocialRoleProto(const SocialRoleProto& from);

  inline SocialRoleProto& operator=(const SocialRoleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialRoleProto& default_instance();

  void Swap(SocialRoleProto* other);

  // implements Message ----------------------------------------------

  SocialRoleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialRoleProto& from);
  void MergeFrom(const SocialRoleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 prof = 4;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 4;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 fight = 6;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 6;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 lastlogout = 7;
  inline bool has_lastlogout() const;
  inline void clear_lastlogout();
  static const int kLastlogoutFieldNumber = 7;
  inline ::google::protobuf::uint64 lastlogout() const;
  inline void set_lastlogout(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 8;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 8;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint32 vip_level = 9;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional uint32 zid = 10;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 10;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional bool isonline = 11;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsonlineFieldNumber = 11;
  inline bool isonline() const;
  inline void set_isonline(bool value);

  // optional int64 hp = 12;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 12;
  inline ::google::protobuf::int64 hp() const;
  inline void set_hp(::google::protobuf::int64 value);

  // optional int64 max_hp = 13;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 13;
  inline ::google::protobuf::int64 max_hp() const;
  inline void set_max_hp(::google::protobuf::int64 value);

  // optional uint64 sceneid = 14;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 14;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 15;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 15;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SocialRoleProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_lastlogout();
  inline void clear_has_lastlogout();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_isonline();
  inline void clear_has_isonline();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 lastlogout_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 vip_level_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint32 zid_;
  bool isonline_;
  ::google::protobuf::int64 hp_;
  ::google::protobuf::int64 max_hp_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SocialRoleProto* default_instance_;
};
// -------------------------------------------------------------------

class Attr : public ::google::protobuf::Message {
 public:
  Attr();
  virtual ~Attr();

  Attr(const Attr& from);

  inline Attr& operator=(const Attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attr& default_instance();

  void Swap(Attr* other);

  // implements Message ----------------------------------------------

  Attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attr& from);
  void MergeFrom(const Attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Attr)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static Attr* default_instance_;
};
// -------------------------------------------------------------------

class BlueStarAttr : public ::google::protobuf::Message {
 public:
  BlueStarAttr();
  virtual ~BlueStarAttr();

  BlueStarAttr(const BlueStarAttr& from);

  inline BlueStarAttr& operator=(const BlueStarAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlueStarAttr& default_instance();

  void Swap(BlueStarAttr* other);

  // implements Message ----------------------------------------------

  BlueStarAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlueStarAttr& from);
  void MergeFrom(const BlueStarAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // optional int32 lv_part = 3;
  inline bool has_lv_part() const;
  inline void clear_lv_part();
  static const int kLvPartFieldNumber = 3;
  inline ::google::protobuf::int32 lv_part() const;
  inline void set_lv_part(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BlueStarAttr)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_lv_part();
  inline void clear_has_lv_part();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 lv_part_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BlueStarAttr* default_instance_;
};
// -------------------------------------------------------------------

class PetInfo : public ::google::protobuf::Message {
 public:
  PetInfo();
  virtual ~PetInfo();

  PetInfo(const PetInfo& from);

  inline PetInfo& operator=(const PetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetInfo& default_instance();

  void Swap(PetInfo* other);

  // implements Message ----------------------------------------------

  PetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetInfo& from);
  void MergeFrom(const PetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 instId = 1;
  inline bool has_instid() const;
  inline void clear_instid();
  static const int kInstIdFieldNumber = 1;
  inline ::google::protobuf::int32 instid() const;
  inline void set_instid(::google::protobuf::int32 value);

  // optional int64 cfgid = 2;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgidFieldNumber = 2;
  inline ::google::protobuf::int64 cfgid() const;
  inline void set_cfgid(::google::protobuf::int64 value);

  // optional int32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 steplv = 4;
  inline bool has_steplv() const;
  inline void clear_steplv();
  static const int kSteplvFieldNumber = 4;
  inline ::google::protobuf::int32 steplv() const;
  inline void set_steplv(::google::protobuf::int32 value);

  // optional int32 starlv = 5;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarlvFieldNumber = 5;
  inline ::google::protobuf::int32 starlv() const;
  inline void set_starlv(::google::protobuf::int32 value);

  // optional int32 activeSkillLv = 6;
  inline bool has_activeskilllv() const;
  inline void clear_activeskilllv();
  static const int kActiveSkillLvFieldNumber = 6;
  inline ::google::protobuf::int32 activeskilllv() const;
  inline void set_activeskilllv(::google::protobuf::int32 value);

  // repeated int32 exclusiveSkillLvVec = 7;
  inline int exclusiveskilllvvec_size() const;
  inline void clear_exclusiveskilllvvec();
  static const int kExclusiveSkillLvVecFieldNumber = 7;
  inline ::google::protobuf::int32 exclusiveskilllvvec(int index) const;
  inline void set_exclusiveskilllvvec(int index, ::google::protobuf::int32 value);
  inline void add_exclusiveskilllvvec(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      exclusiveskilllvvec() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_exclusiveskilllvvec();

  // repeated int32 passiveSkillLvVec = 8;
  inline int passiveskilllvvec_size() const;
  inline void clear_passiveskilllvvec();
  static const int kPassiveSkillLvVecFieldNumber = 8;
  inline ::google::protobuf::int32 passiveskilllvvec(int index) const;
  inline void set_passiveskilllvvec(int index, ::google::protobuf::int32 value);
  inline void add_passiveskilllvvec(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      passiveskilllvvec() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_passiveskilllvvec();

  // optional float initgrow = 9;
  inline bool has_initgrow() const;
  inline void clear_initgrow();
  static const int kInitgrowFieldNumber = 9;
  inline float initgrow() const;
  inline void set_initgrow(float value);

  // optional int32 slot = 10;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 10;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 lvexp = 11;
  inline bool has_lvexp() const;
  inline void clear_lvexp();
  static const int kLvexpFieldNumber = 11;
  inline ::google::protobuf::int32 lvexp() const;
  inline void set_lvexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PetInfo)
 private:
  inline void set_has_instid();
  inline void clear_has_instid();
  inline void set_has_cfgid();
  inline void clear_has_cfgid();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_steplv();
  inline void clear_has_steplv();
  inline void set_has_starlv();
  inline void clear_has_starlv();
  inline void set_has_activeskilllv();
  inline void clear_has_activeskilllv();
  inline void set_has_initgrow();
  inline void clear_has_initgrow();
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_lvexp();
  inline void clear_has_lvexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cfgid_;
  ::google::protobuf::int32 instid_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 steplv_;
  ::google::protobuf::int32 starlv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > exclusiveskilllvvec_;
  ::google::protobuf::int32 activeskilllv_;
  float initgrow_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > passiveskilllvvec_;
  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 lvexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PetInfo* default_instance_;
};
// -------------------------------------------------------------------

class PetHatchInfo : public ::google::protobuf::Message {
 public:
  PetHatchInfo();
  virtual ~PetHatchInfo();

  PetHatchInfo(const PetHatchInfo& from);

  inline PetHatchInfo& operator=(const PetHatchInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetHatchInfo& default_instance();

  void Swap(PetHatchInfo* other);

  // implements Message ----------------------------------------------

  PetHatchInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetHatchInfo& from);
  void MergeFrom(const PetHatchInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 unlock = 2;
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 2;
  inline ::google::protobuf::int32 unlock() const;
  inline void set_unlock(::google::protobuf::int32 value);

  // optional int64 eggid = 3;
  inline bool has_eggid() const;
  inline void clear_eggid();
  static const int kEggidFieldNumber = 3;
  inline ::google::protobuf::int64 eggid() const;
  inline void set_eggid(::google::protobuf::int64 value);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PetHatchInfo)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_unlock();
  inline void clear_has_unlock();
  inline void set_has_eggid();
  inline void clear_has_eggid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 unlock_;
  ::google::protobuf::int64 eggid_;
  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static PetHatchInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemProtoInfo : public ::google::protobuf::Message {
 public:
  ItemProtoInfo();
  virtual ~ItemProtoInfo();

  ItemProtoInfo(const ItemProtoInfo& from);

  inline ItemProtoInfo& operator=(const ItemProtoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemProtoInfo& default_instance();

  void Swap(ItemProtoInfo* other);

  // implements Message ----------------------------------------------

  ItemProtoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemProtoInfo& from);
  void MergeFrom(const ItemProtoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional uint64 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional int64 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int64 item_num() const;
  inline void set_item_num(::google::protobuf::int64 value);

  // optional int32 bind = 4;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 4;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated .proto_ff.Attr base = 6;
  inline int base_size() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 6;
  inline const ::proto_ff::Attr& base(int index) const;
  inline ::proto_ff::Attr* mutable_base(int index);
  inline ::proto_ff::Attr* add_base();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      base() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_base();

  // repeated .proto_ff.Attr refine = 7;
  inline int refine_size() const;
  inline void clear_refine();
  static const int kRefineFieldNumber = 7;
  inline const ::proto_ff::Attr& refine(int index) const;
  inline ::proto_ff::Attr* mutable_refine(int index);
  inline ::proto_ff::Attr* add_refine();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      refine() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_refine();

  // repeated .proto_ff.BlueStarAttr blue = 8;
  inline int blue_size() const;
  inline void clear_blue();
  static const int kBlueFieldNumber = 8;
  inline const ::proto_ff::BlueStarAttr& blue(int index) const;
  inline ::proto_ff::BlueStarAttr* mutable_blue(int index);
  inline ::proto_ff::BlueStarAttr* add_blue();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >&
      blue() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >*
      mutable_blue();

  // repeated .proto_ff.Attr god = 9;
  inline int god_size() const;
  inline void clear_god();
  static const int kGodFieldNumber = 9;
  inline const ::proto_ff::Attr& god(int index) const;
  inline ::proto_ff::Attr* mutable_god(int index);
  inline ::proto_ff::Attr* add_god();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      god() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_god();

  // repeated .proto_ff.Attr special = 10;
  inline int special_size() const;
  inline void clear_special();
  static const int kSpecialFieldNumber = 10;
  inline const ::proto_ff::Attr& special(int index) const;
  inline ::proto_ff::Attr* mutable_special(int index);
  inline ::proto_ff::Attr* add_special();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      special() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_special();

  // optional uint64 expireTime = 11;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 11;
  inline ::google::protobuf::uint64 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint64 value);

  // optional int32 strong_lv = 12;
  inline bool has_strong_lv() const;
  inline void clear_strong_lv();
  static const int kStrongLvFieldNumber = 12;
  inline ::google::protobuf::int32 strong_lv() const;
  inline void set_strong_lv(::google::protobuf::int32 value);

  // optional int32 strong_wear_quality = 13;
  inline bool has_strong_wear_quality() const;
  inline void clear_strong_wear_quality();
  static const int kStrongWearQualityFieldNumber = 13;
  inline ::google::protobuf::int32 strong_wear_quality() const;
  inline void set_strong_wear_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemProtoInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_strong_lv();
  inline void clear_has_strong_lv();
  inline void set_has_strong_wear_quality();
  inline void clear_has_strong_wear_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 bind_;
  ::google::protobuf::int64 item_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > base_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > refine_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr > blue_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 strong_lv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > god_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > special_;
  ::google::protobuf::uint64 expiretime_;
  ::google::protobuf::int32 strong_wear_quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ItemProtoInfo* default_instance_;
};
// -------------------------------------------------------------------

class StoneSlotInfo : public ::google::protobuf::Message {
 public:
  StoneSlotInfo();
  virtual ~StoneSlotInfo();

  StoneSlotInfo(const StoneSlotInfo& from);

  inline StoneSlotInfo& operator=(const StoneSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoneSlotInfo& default_instance();

  void Swap(StoneSlotInfo* other);

  // implements Message ----------------------------------------------

  StoneSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoneSlotInfo& from);
  void MergeFrom(const StoneSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stone_pos = 1;
  inline bool has_stone_pos() const;
  inline void clear_stone_pos();
  static const int kStonePosFieldNumber = 1;
  inline ::google::protobuf::int32 stone_pos() const;
  inline void set_stone_pos(::google::protobuf::int32 value);

  // optional int64 stoneid = 2;
  inline bool has_stoneid() const;
  inline void clear_stoneid();
  static const int kStoneidFieldNumber = 2;
  inline ::google::protobuf::int64 stoneid() const;
  inline void set_stoneid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StoneSlotInfo)
 private:
  inline void set_has_stone_pos();
  inline void clear_has_stone_pos();
  inline void set_has_stoneid();
  inline void clear_has_stoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 stoneid_;
  ::google::protobuf::int32 stone_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StoneSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class WashSlotInfo : public ::google::protobuf::Message {
 public:
  WashSlotInfo();
  virtual ~WashSlotInfo();

  WashSlotInfo(const WashSlotInfo& from);

  inline WashSlotInfo& operator=(const WashSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WashSlotInfo& default_instance();

  void Swap(WashSlotInfo* other);

  // implements Message ----------------------------------------------

  WashSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WashSlotInfo& from);
  void MergeFrom(const WashSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 lock = 3;
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 3;
  inline ::google::protobuf::int32 lock() const;
  inline void set_lock(::google::protobuf::int32 value);

  // optional int32 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WashSlotInfo)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_lock();
  inline void clear_has_lock();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 lock_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WashSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipSlotInfo : public ::google::protobuf::Message {
 public:
  EquipSlotInfo();
  virtual ~EquipSlotInfo();

  EquipSlotInfo(const EquipSlotInfo& from);

  inline EquipSlotInfo& operator=(const EquipSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSlotInfo& default_instance();

  void Swap(EquipSlotInfo* other);

  // implements Message ----------------------------------------------

  EquipSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSlotInfo& from);
  void MergeFrom(const EquipSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot_pos = 1;
  inline bool has_slot_pos() const;
  inline void clear_slot_pos();
  static const int kSlotPosFieldNumber = 1;
  inline ::google::protobuf::int32 slot_pos() const;
  inline void set_slot_pos(::google::protobuf::int32 value);

  // optional int64 total_score = 2;
  inline bool has_total_score() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 2;
  inline ::google::protobuf::int64 total_score() const;
  inline void set_total_score(::google::protobuf::int64 value);

  // optional int32 stronglv = 3;
  inline bool has_stronglv() const;
  inline void clear_stronglv();
  static const int kStronglvFieldNumber = 3;
  inline ::google::protobuf::int32 stronglv() const;
  inline void set_stronglv(::google::protobuf::int32 value);

  // repeated .proto_ff.StoneSlotInfo stones = 4;
  inline int stones_size() const;
  inline void clear_stones();
  static const int kStonesFieldNumber = 4;
  inline const ::proto_ff::StoneSlotInfo& stones(int index) const;
  inline ::proto_ff::StoneSlotInfo* mutable_stones(int index);
  inline ::proto_ff::StoneSlotInfo* add_stones();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StoneSlotInfo >&
      stones() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StoneSlotInfo >*
      mutable_stones();

  // optional int32 stone_pay_slot_open = 5;
  inline bool has_stone_pay_slot_open() const;
  inline void clear_stone_pay_slot_open();
  static const int kStonePaySlotOpenFieldNumber = 5;
  inline ::google::protobuf::int32 stone_pay_slot_open() const;
  inline void set_stone_pay_slot_open(::google::protobuf::int32 value);

  // repeated .proto_ff.WashSlotInfo washs = 6;
  inline int washs_size() const;
  inline void clear_washs();
  static const int kWashsFieldNumber = 6;
  inline const ::proto_ff::WashSlotInfo& washs(int index) const;
  inline ::proto_ff::WashSlotInfo* mutable_washs(int index);
  inline ::proto_ff::WashSlotInfo* add_washs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WashSlotInfo >&
      washs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WashSlotInfo >*
      mutable_washs();

  // optional int32 suitlv = 7;
  inline bool has_suitlv() const;
  inline void clear_suitlv();
  static const int kSuitlvFieldNumber = 7;
  inline ::google::protobuf::int32 suitlv() const;
  inline void set_suitlv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EquipSlotInfo)
 private:
  inline void set_has_slot_pos();
  inline void clear_has_slot_pos();
  inline void set_has_total_score();
  inline void clear_has_total_score();
  inline void set_has_stronglv();
  inline void clear_has_stronglv();
  inline void set_has_stone_pay_slot_open();
  inline void clear_has_stone_pay_slot_open();
  inline void set_has_suitlv();
  inline void clear_has_suitlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 total_score_;
  ::google::protobuf::int32 slot_pos_;
  ::google::protobuf::int32 stronglv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::StoneSlotInfo > stones_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WashSlotInfo > washs_;
  ::google::protobuf::int32 stone_pay_slot_open_;
  ::google::protobuf::int32 suitlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EquipSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipInfo : public ::google::protobuf::Message {
 public:
  EquipInfo();
  virtual ~EquipInfo();

  EquipInfo(const EquipInfo& from);

  inline EquipInfo& operator=(const EquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipInfo& default_instance();

  void Swap(EquipInfo* other);

  // implements Message ----------------------------------------------

  EquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipInfo& from);
  void MergeFrom(const EquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional .proto_ff.ItemProtoInfo equip = 2;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 2;
  inline const ::proto_ff::ItemProtoInfo& equip() const;
  inline ::proto_ff::ItemProtoInfo* mutable_equip();
  inline ::proto_ff::ItemProtoInfo* release_equip();
  inline void set_allocated_equip(::proto_ff::ItemProtoInfo* equip);

  // optional .proto_ff.EquipSlotInfo slot = 3;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 3;
  inline const ::proto_ff::EquipSlotInfo& slot() const;
  inline ::proto_ff::EquipSlotInfo* mutable_slot();
  inline ::proto_ff::EquipSlotInfo* release_slot();
  inline void set_allocated_slot(::proto_ff::EquipSlotInfo* slot);

  // @@protoc_insertion_point(class_scope:proto_ff.EquipInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_equip();
  inline void clear_has_equip();
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::ItemProtoInfo* equip_;
  ::proto_ff::EquipSlotInfo* slot_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipLvAttrInfo : public ::google::protobuf::Message {
 public:
  EquipLvAttrInfo();
  virtual ~EquipLvAttrInfo();

  EquipLvAttrInfo(const EquipLvAttrInfo& from);

  inline EquipLvAttrInfo& operator=(const EquipLvAttrInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipLvAttrInfo& default_instance();

  void Swap(EquipLvAttrInfo* other);

  // implements Message ----------------------------------------------

  EquipLvAttrInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipLvAttrInfo& from);
  void MergeFrom(const EquipLvAttrInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EquipLvAttrInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static EquipLvAttrInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemSimpleProto : public ::google::protobuf::Message {
 public:
  ItemSimpleProto();
  virtual ~ItemSimpleProto();

  ItemSimpleProto(const ItemSimpleProto& from);

  inline ItemSimpleProto& operator=(const ItemSimpleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemSimpleProto& default_instance();

  void Swap(ItemSimpleProto* other);

  // implements Message ----------------------------------------------

  ItemSimpleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemSimpleProto& from);
  void MergeFrom(const ItemSimpleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional int64 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int64 num() const;
  inline void set_num(::google::protobuf::int64 value);

  // optional int32 bind = 3;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 3;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemSimpleProto)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_bind();
  inline void clear_has_bind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::int64 num_;
  ::google::protobuf::int32 bind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ItemSimpleProto* default_instance_;
};
// -------------------------------------------------------------------

class MultItemSimpleProto : public ::google::protobuf::Message {
 public:
  MultItemSimpleProto();
  virtual ~MultItemSimpleProto();

  MultItemSimpleProto(const MultItemSimpleProto& from);

  inline MultItemSimpleProto& operator=(const MultItemSimpleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MultItemSimpleProto& default_instance();

  void Swap(MultItemSimpleProto* other);

  // implements Message ----------------------------------------------

  MultItemSimpleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MultItemSimpleProto& from);
  void MergeFrom(const MultItemSimpleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ItemSimpleProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::ItemSimpleProto& info(int index) const;
  inline ::proto_ff::ItemSimpleProto* mutable_info(int index);
  inline ::proto_ff::ItemSimpleProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.MultItemSimpleProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MultItemSimpleProto* default_instance_;
};
// -------------------------------------------------------------------

class MailParamProto : public ::google::protobuf::Message {
 public:
  MailParamProto();
  virtual ~MailParamProto();

  MailParamProto(const MailParamProto& from);

  inline MailParamProto& operator=(const MailParamProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailParamProto& default_instance();

  void Swap(MailParamProto* other);

  // implements Message ----------------------------------------------

  MailParamProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailParamProto& from);
  void MergeFrom(const MailParamProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cfgid = 1;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgidFieldNumber = 1;
  inline ::google::protobuf::uint64 cfgid() const;
  inline void set_cfgid(::google::protobuf::uint64 value);

  // repeated bytes str_param = 2;
  inline int str_param_size() const;
  inline void clear_str_param();
  static const int kStrParamFieldNumber = 2;
  inline const ::std::string& str_param(int index) const;
  inline ::std::string* mutable_str_param(int index);
  inline void set_str_param(int index, const ::std::string& value);
  inline void set_str_param(int index, const char* value);
  inline void set_str_param(int index, const void* value, size_t size);
  inline ::std::string* add_str_param();
  inline void add_str_param(const ::std::string& value);
  inline void add_str_param(const char* value);
  inline void add_str_param(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& str_param() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_str_param();

  // repeated uint64 int_param = 3;
  inline int int_param_size() const;
  inline void clear_int_param();
  static const int kIntParamFieldNumber = 3;
  inline ::google::protobuf::uint64 int_param(int index) const;
  inline void set_int_param(int index, ::google::protobuf::uint64 value);
  inline void add_int_param(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      int_param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_int_param();

  // @@protoc_insertion_point(class_scope:proto_ff.MailParamProto)
 private:
  inline void set_has_cfgid();
  inline void clear_has_cfgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cfgid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> str_param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > int_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailParamProto* default_instance_;
};
// -------------------------------------------------------------------

class MailStrProto : public ::google::protobuf::Message {
 public:
  MailStrProto();
  virtual ~MailStrProto();

  MailStrProto(const MailStrProto& from);

  inline MailStrProto& operator=(const MailStrProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailStrProto& default_instance();

  void Swap(MailStrProto* other);

  // implements Message ----------------------------------------------

  MailStrProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailStrProto& from);
  void MergeFrom(const MailStrProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const void* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // optional .proto_ff.MailParamProto param = 2;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline const ::proto_ff::MailParamProto& param() const;
  inline ::proto_ff::MailParamProto* mutable_param();
  inline ::proto_ff::MailParamProto* release_param();
  inline void set_allocated_param(::proto_ff::MailParamProto* param);

  // @@protoc_insertion_point(class_scope:proto_ff.MailStrProto)
 private:
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* str_;
  ::proto_ff::MailParamProto* param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailStrProto* default_instance_;
};
// -------------------------------------------------------------------

class MailAttachmentList : public ::google::protobuf::Message {
 public:
  MailAttachmentList();
  virtual ~MailAttachmentList();

  MailAttachmentList(const MailAttachmentList& from);

  inline MailAttachmentList& operator=(const MailAttachmentList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailAttachmentList& default_instance();

  void Swap(MailAttachmentList* other);

  // implements Message ----------------------------------------------

  MailAttachmentList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailAttachmentList& from);
  void MergeFrom(const MailAttachmentList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ItemProtoInfo itemInfo = 1;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 1;
  inline const ::proto_ff::ItemProtoInfo& iteminfo(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_iteminfo(int index);
  inline ::proto_ff::ItemProtoInfo* add_iteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_iteminfo();

  // @@protoc_insertion_point(class_scope:proto_ff.MailAttachmentList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > iteminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailAttachmentList* default_instance_;
};
// -------------------------------------------------------------------

class MailHead : public ::google::protobuf::Message {
 public:
  MailHead();
  virtual ~MailHead();

  MailHead(const MailHead& from);

  inline MailHead& operator=(const MailHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailHead& default_instance();

  void Swap(MailHead* other);

  // implements Message ----------------------------------------------

  MailHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailHead& from);
  void MergeFrom(const MailHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 sendPlayerId = 3;
  inline bool has_sendplayerid() const;
  inline void clear_sendplayerid();
  static const int kSendPlayerIdFieldNumber = 3;
  inline ::google::protobuf::uint64 sendplayerid() const;
  inline void set_sendplayerid(::google::protobuf::uint64 value);

  // optional bytes sendPlayerName = 4;
  inline bool has_sendplayername() const;
  inline void clear_sendplayername();
  static const int kSendPlayerNameFieldNumber = 4;
  inline const ::std::string& sendplayername() const;
  inline void set_sendplayername(const ::std::string& value);
  inline void set_sendplayername(const char* value);
  inline void set_sendplayername(const void* value, size_t size);
  inline ::std::string* mutable_sendplayername();
  inline ::std::string* release_sendplayername();
  inline void set_allocated_sendplayername(::std::string* sendplayername);

  // optional uint64 destPlayerId = 5;
  inline bool has_destplayerid() const;
  inline void clear_destplayerid();
  static const int kDestPlayerIdFieldNumber = 5;
  inline ::google::protobuf::uint64 destplayerid() const;
  inline void set_destplayerid(::google::protobuf::uint64 value);

  // optional .proto_ff.MailStrProto topic = 6;
  inline bool has_topic() const;
  inline void clear_topic();
  static const int kTopicFieldNumber = 6;
  inline const ::proto_ff::MailStrProto& topic() const;
  inline ::proto_ff::MailStrProto* mutable_topic();
  inline ::proto_ff::MailStrProto* release_topic();
  inline void set_allocated_topic(::proto_ff::MailStrProto* topic);

  // optional uint64 createTime = 7;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional uint32 status = 8;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 8;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional int32 fetch = 9;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 9;
  inline ::google::protobuf::int32 fetch() const;
  inline void set_fetch(::google::protobuf::int32 value);

  // optional int32 has_attach = 10;
  inline bool has_has_attach() const;
  inline void clear_has_attach();
  static const int kHasAttachFieldNumber = 10;
  inline ::google::protobuf::int32 has_attach() const;
  inline void set_has_attach(::google::protobuf::int32 value);

  // optional uint64 begin_time = 11;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 11;
  inline ::google::protobuf::uint64 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint64 value);

  // optional uint64 end_time = 12;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 12;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MailHead)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_sendplayerid();
  inline void clear_has_sendplayerid();
  inline void set_has_sendplayername();
  inline void clear_has_sendplayername();
  inline void set_has_destplayerid();
  inline void clear_has_destplayerid();
  inline void set_has_topic();
  inline void clear_has_topic();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_has_attach();
  inline void clear_has_has_attach();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::uint64 sendplayerid_;
  ::std::string* sendplayername_;
  ::google::protobuf::uint64 destplayerid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 status_;
  ::proto_ff::MailStrProto* topic_;
  ::google::protobuf::uint64 createtime_;
  ::google::protobuf::int32 fetch_;
  ::google::protobuf::int32 has_attach_;
  ::google::protobuf::uint64 begin_time_;
  ::google::protobuf::uint64 end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailHead* default_instance_;
};
// -------------------------------------------------------------------

class MailInfo : public ::google::protobuf::Message {
 public:
  MailInfo();
  virtual ~MailInfo();

  MailInfo(const MailInfo& from);

  inline MailInfo& operator=(const MailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailInfo& default_instance();

  void Swap(MailInfo* other);

  // implements Message ----------------------------------------------

  MailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailInfo& from);
  void MergeFrom(const MailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.MailHead mailHead = 1;
  inline bool has_mailhead() const;
  inline void clear_mailhead();
  static const int kMailHeadFieldNumber = 1;
  inline const ::proto_ff::MailHead& mailhead() const;
  inline ::proto_ff::MailHead* mutable_mailhead();
  inline ::proto_ff::MailHead* release_mailhead();
  inline void set_allocated_mailhead(::proto_ff::MailHead* mailhead);

  // optional .proto_ff.MailStrProto content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::proto_ff::MailStrProto& content() const;
  inline ::proto_ff::MailStrProto* mutable_content();
  inline ::proto_ff::MailStrProto* release_content();
  inline void set_allocated_content(::proto_ff::MailStrProto* content);

  // optional uint64 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::uint64 gold() const;
  inline void set_gold(::google::protobuf::uint64 value);

  // optional uint64 diamond = 4;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 4;
  inline ::google::protobuf::uint64 diamond() const;
  inline void set_diamond(::google::protobuf::uint64 value);

  // optional uint64 bindDiamond = 5;
  inline bool has_binddiamond() const;
  inline void clear_binddiamond();
  static const int kBindDiamondFieldNumber = 5;
  inline ::google::protobuf::uint64 binddiamond() const;
  inline void set_binddiamond(::google::protobuf::uint64 value);

  // optional uint64 magiccrystal = 6;
  inline bool has_magiccrystal() const;
  inline void clear_magiccrystal();
  static const int kMagiccrystalFieldNumber = 6;
  inline ::google::protobuf::uint64 magiccrystal() const;
  inline void set_magiccrystal(::google::protobuf::uint64 value);

  // optional uint64 prestige = 7;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 7;
  inline ::google::protobuf::uint64 prestige() const;
  inline void set_prestige(::google::protobuf::uint64 value);

  // optional .proto_ff.MailAttachmentList attachmentList = 8;
  inline bool has_attachmentlist() const;
  inline void clear_attachmentlist();
  static const int kAttachmentListFieldNumber = 8;
  inline const ::proto_ff::MailAttachmentList& attachmentlist() const;
  inline ::proto_ff::MailAttachmentList* mutable_attachmentlist();
  inline ::proto_ff::MailAttachmentList* release_attachmentlist();
  inline void set_allocated_attachmentlist(::proto_ff::MailAttachmentList* attachmentlist);

  // optional int32 source = 9;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 9;
  inline ::google::protobuf::int32 source() const;
  inline void set_source(::google::protobuf::int32 value);

  // optional int64 sourceVal = 10;
  inline bool has_sourceval() const;
  inline void clear_sourceval();
  static const int kSourceValFieldNumber = 10;
  inline ::google::protobuf::int64 sourceval() const;
  inline void set_sourceval(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MailInfo)
 private:
  inline void set_has_mailhead();
  inline void clear_has_mailhead();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_binddiamond();
  inline void clear_has_binddiamond();
  inline void set_has_magiccrystal();
  inline void clear_has_magiccrystal();
  inline void set_has_prestige();
  inline void clear_has_prestige();
  inline void set_has_attachmentlist();
  inline void clear_has_attachmentlist();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_sourceval();
  inline void clear_has_sourceval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::MailHead* mailhead_;
  ::proto_ff::MailStrProto* content_;
  ::google::protobuf::uint64 gold_;
  ::google::protobuf::uint64 diamond_;
  ::google::protobuf::uint64 binddiamond_;
  ::google::protobuf::uint64 magiccrystal_;
  ::google::protobuf::uint64 prestige_;
  ::proto_ff::MailAttachmentList* attachmentlist_;
  ::google::protobuf::int64 sourceval_;
  ::google::protobuf::int32 source_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MailInfo* default_instance_;
};
// -------------------------------------------------------------------

class WebMailItemProto : public ::google::protobuf::Message {
 public:
  WebMailItemProto();
  virtual ~WebMailItemProto();

  WebMailItemProto(const WebMailItemProto& from);

  inline WebMailItemProto& operator=(const WebMailItemProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebMailItemProto& default_instance();

  void Swap(WebMailItemProto* other);

  // implements Message ----------------------------------------------

  WebMailItemProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebMailItemProto& from);
  void MergeFrom(const WebMailItemProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint64 num() const;
  inline void set_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WebMailItemProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WebMailItemProto* default_instance_;
};
// -------------------------------------------------------------------

class WebMailDataProto : public ::google::protobuf::Message {
 public:
  WebMailDataProto();
  virtual ~WebMailDataProto();

  WebMailDataProto(const WebMailDataProto& from);

  inline WebMailDataProto& operator=(const WebMailDataProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebMailDataProto& default_instance();

  void Swap(WebMailDataProto* other);

  // implements Message ----------------------------------------------

  WebMailDataProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebMailDataProto& from);
  void MergeFrom(const WebMailDataProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // optional uint64 createTime = 2;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional .proto_ff.MailStrProto topic = 3;
  inline bool has_topic() const;
  inline void clear_topic();
  static const int kTopicFieldNumber = 3;
  inline const ::proto_ff::MailStrProto& topic() const;
  inline ::proto_ff::MailStrProto* mutable_topic();
  inline ::proto_ff::MailStrProto* release_topic();
  inline void set_allocated_topic(::proto_ff::MailStrProto* topic);

  // optional int32 fetch = 4;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 4;
  inline ::google::protobuf::int32 fetch() const;
  inline void set_fetch(::google::protobuf::int32 value);

  // optional .proto_ff.MailStrProto content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::proto_ff::MailStrProto& content() const;
  inline ::proto_ff::MailStrProto* mutable_content();
  inline ::proto_ff::MailStrProto* release_content();
  inline void set_allocated_content(::proto_ff::MailStrProto* content);

  // optional uint64 gold = 6;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 6;
  inline ::google::protobuf::uint64 gold() const;
  inline void set_gold(::google::protobuf::uint64 value);

  // optional uint64 diamond = 7;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 7;
  inline ::google::protobuf::uint64 diamond() const;
  inline void set_diamond(::google::protobuf::uint64 value);

  // optional uint64 bindDiamond = 8;
  inline bool has_binddiamond() const;
  inline void clear_binddiamond();
  static const int kBindDiamondFieldNumber = 8;
  inline ::google::protobuf::uint64 binddiamond() const;
  inline void set_binddiamond(::google::protobuf::uint64 value);

  // optional uint64 arenaScore = 9;
  inline bool has_arenascore() const;
  inline void clear_arenascore();
  static const int kArenaScoreFieldNumber = 9;
  inline ::google::protobuf::uint64 arenascore() const;
  inline void set_arenascore(::google::protobuf::uint64 value);

  // optional uint64 magiccrystal = 10;
  inline bool has_magiccrystal() const;
  inline void clear_magiccrystal();
  static const int kMagiccrystalFieldNumber = 10;
  inline ::google::protobuf::uint64 magiccrystal() const;
  inline void set_magiccrystal(::google::protobuf::uint64 value);

  // optional uint64 prestige = 11;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 11;
  inline ::google::protobuf::uint64 prestige() const;
  inline void set_prestige(::google::protobuf::uint64 value);

  // repeated .proto_ff.WebMailItemProto itemList = 12;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 12;
  inline const ::proto_ff::WebMailItemProto& itemlist(int index) const;
  inline ::proto_ff::WebMailItemProto* mutable_itemlist(int index);
  inline ::proto_ff::WebMailItemProto* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:proto_ff.WebMailDataProto)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_topic();
  inline void clear_has_topic();
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_binddiamond();
  inline void clear_has_binddiamond();
  inline void set_has_arenascore();
  inline void clear_has_arenascore();
  inline void set_has_magiccrystal();
  inline void clear_has_magiccrystal();
  inline void set_has_prestige();
  inline void clear_has_prestige();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::uint64 createtime_;
  ::proto_ff::MailStrProto* topic_;
  ::proto_ff::MailStrProto* content_;
  ::google::protobuf::uint64 gold_;
  ::google::protobuf::uint64 diamond_;
  ::google::protobuf::uint64 binddiamond_;
  ::google::protobuf::uint64 arenascore_;
  ::google::protobuf::uint64 magiccrystal_;
  ::google::protobuf::uint64 prestige_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto > itemlist_;
  ::google::protobuf::int32 fetch_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static WebMailDataProto* default_instance_;
};
// -------------------------------------------------------------------

class UseItemArgProto : public ::google::protobuf::Message {
 public:
  UseItemArgProto();
  virtual ~UseItemArgProto();

  UseItemArgProto(const UseItemArgProto& from);

  inline UseItemArgProto& operator=(const UseItemArgProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseItemArgProto& default_instance();

  void Swap(UseItemArgProto* other);

  // implements Message ----------------------------------------------

  UseItemArgProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseItemArgProto& from);
  void MergeFrom(const UseItemArgProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 int_param = 1;
  inline bool has_int_param() const;
  inline void clear_int_param();
  static const int kIntParamFieldNumber = 1;
  inline ::google::protobuf::int64 int_param() const;
  inline void set_int_param(::google::protobuf::int64 value);

  // optional bytes str_param = 2;
  inline bool has_str_param() const;
  inline void clear_str_param();
  static const int kStrParamFieldNumber = 2;
  inline const ::std::string& str_param() const;
  inline void set_str_param(const ::std::string& value);
  inline void set_str_param(const char* value);
  inline void set_str_param(const void* value, size_t size);
  inline ::std::string* mutable_str_param();
  inline ::std::string* release_str_param();
  inline void set_allocated_str_param(::std::string* str_param);

  // repeated uint64 item_lst = 3;
  inline int item_lst_size() const;
  inline void clear_item_lst();
  static const int kItemLstFieldNumber = 3;
  inline ::google::protobuf::uint64 item_lst(int index) const;
  inline void set_item_lst(int index, ::google::protobuf::uint64 value);
  inline void add_item_lst(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      item_lst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_item_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.UseItemArgProto)
 private:
  inline void set_has_int_param();
  inline void clear_has_int_param();
  inline void set_has_str_param();
  inline void clear_has_str_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 int_param_;
  ::std::string* str_param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > item_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static UseItemArgProto* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRoleFacadeCastRsp : public ::google::protobuf::Message {
 public:
  NotifyRoleFacadeCastRsp();
  virtual ~NotifyRoleFacadeCastRsp();

  NotifyRoleFacadeCastRsp(const NotifyRoleFacadeCastRsp& from);

  inline NotifyRoleFacadeCastRsp& operator=(const NotifyRoleFacadeCastRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRoleFacadeCastRsp& default_instance();

  void Swap(NotifyRoleFacadeCastRsp* other);

  // implements Message ----------------------------------------------

  NotifyRoleFacadeCastRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRoleFacadeCastRsp& from);
  void MergeFrom(const NotifyRoleFacadeCastRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleFacadeProto facade = 2;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 2;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyRoleFacadeCastRsp)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_facade();
  inline void clear_has_facade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::proto_ff::RoleFacadeProto* facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyRoleFacadeCastRsp* default_instance_;
};
// -------------------------------------------------------------------

class FunctionUnlockInfoData : public ::google::protobuf::Message {
 public:
  FunctionUnlockInfoData();
  virtual ~FunctionUnlockInfoData();

  FunctionUnlockInfoData(const FunctionUnlockInfoData& from);

  inline FunctionUnlockInfoData& operator=(const FunctionUnlockInfoData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockInfoData& default_instance();

  void Swap(FunctionUnlockInfoData* other);

  // implements Message ----------------------------------------------

  FunctionUnlockInfoData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockInfoData& from);
  void MergeFrom(const FunctionUnlockInfoData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 unlockId = 1;
  inline bool has_unlockid() const;
  inline void clear_unlockid();
  static const int kUnlockIdFieldNumber = 1;
  inline ::google::protobuf::uint64 unlockid() const;
  inline void set_unlockid(::google::protobuf::uint64 value);

  // optional bool get_reward = 2;
  inline bool has_get_reward() const;
  inline void clear_get_reward();
  static const int kGetRewardFieldNumber = 2;
  inline bool get_reward() const;
  inline void set_get_reward(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockInfoData)
 private:
  inline void set_has_unlockid();
  inline void clear_has_unlockid();
  inline void set_has_get_reward();
  inline void clear_has_get_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 unlockid_;
  bool get_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockInfoData* default_instance_;
};
// -------------------------------------------------------------------

class FunctionUnlockInfo : public ::google::protobuf::Message {
 public:
  FunctionUnlockInfo();
  virtual ~FunctionUnlockInfo();

  FunctionUnlockInfo(const FunctionUnlockInfo& from);

  inline FunctionUnlockInfo& operator=(const FunctionUnlockInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockInfo& default_instance();

  void Swap(FunctionUnlockInfo* other);

  // implements Message ----------------------------------------------

  FunctionUnlockInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockInfo& from);
  void MergeFrom(const FunctionUnlockInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FunctionUnlockInfoData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::FunctionUnlockInfoData& data(int index) const;
  inline ::proto_ff::FunctionUnlockInfoData* mutable_data(int index);
  inline ::proto_ff::FunctionUnlockInfoData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockInfo* default_instance_;
};
// -------------------------------------------------------------------

class RolePlayerMiniInfo : public ::google::protobuf::Message {
 public:
  RolePlayerMiniInfo();
  virtual ~RolePlayerMiniInfo();

  RolePlayerMiniInfo(const RolePlayerMiniInfo& from);

  inline RolePlayerMiniInfo& operator=(const RolePlayerMiniInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RolePlayerMiniInfo& default_instance();

  void Swap(RolePlayerMiniInfo* other);

  // implements Message ----------------------------------------------

  RolePlayerMiniInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RolePlayerMiniInfo& from);
  void MergeFrom(const RolePlayerMiniInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional string playerName = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional uint32 zid = 3;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 3;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 closeness = 6;
  inline bool has_closeness() const;
  inline void clear_closeness();
  static const int kClosenessFieldNumber = 6;
  inline ::google::protobuf::uint32 closeness() const;
  inline void set_closeness(::google::protobuf::uint32 value);

  // optional uint32 recentType = 7;
  inline bool has_recenttype() const;
  inline void clear_recenttype();
  static const int kRecentTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 recenttype() const;
  inline void set_recenttype(::google::protobuf::uint32 value);

  // optional uint64 recentTime = 8;
  inline bool has_recenttime() const;
  inline void clear_recenttime();
  static const int kRecentTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 recenttime() const;
  inline void set_recenttime(::google::protobuf::uint64 value);

  // optional uint32 prof = 9;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 9;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 teamId = 10;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 10;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint32 unionId = 11;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIdFieldNumber = 11;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);

  // optional uint64 fightPower = 12;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightPowerFieldNumber = 12;
  inline ::google::protobuf::uint64 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint64 value);

  // optional uint32 killMeTimes = 13;
  inline bool has_killmetimes() const;
  inline void clear_killmetimes();
  static const int kKillMeTimesFieldNumber = 13;
  inline ::google::protobuf::uint32 killmetimes() const;
  inline void set_killmetimes(::google::protobuf::uint32 value);

  // optional uint64 offlineTime = 14;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflineTimeFieldNumber = 14;
  inline ::google::protobuf::uint64 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint64 value);

  // optional string connect = 15;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 15;
  inline const ::std::string& connect() const;
  inline void set_connect(const ::std::string& value);
  inline void set_connect(const char* value);
  inline void set_connect(const char* value, size_t size);
  inline ::std::string* mutable_connect();
  inline ::std::string* release_connect();
  inline void set_allocated_connect(::std::string* connect);

  // optional bool online = 16;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 16;
  inline bool online() const;
  inline void set_online(bool value);

  // optional uint32 vipLevel = 17;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 17;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleFacadeProto facade = 18;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 18;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint32 marry = 19;
  inline bool has_marry() const;
  inline void clear_marry();
  static const int kMarryFieldNumber = 19;
  inline ::google::protobuf::uint32 marry() const;
  inline void set_marry(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RolePlayerMiniInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_closeness();
  inline void clear_has_closeness();
  inline void set_has_recenttype();
  inline void clear_has_recenttype();
  inline void set_has_recenttime();
  inline void clear_has_recenttime();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_unionid();
  inline void clear_has_unionid();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_killmetimes();
  inline void clear_has_killmetimes();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_connect();
  inline void clear_has_connect();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_marry();
  inline void clear_has_marry();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::std::string* playername_;
  ::google::protobuf::uint32 zid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 closeness_;
  ::google::protobuf::uint32 recenttype_;
  ::google::protobuf::uint64 recenttime_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint64 fightpower_;
  ::google::protobuf::uint32 unionid_;
  ::google::protobuf::uint32 killmetimes_;
  ::google::protobuf::uint64 offlinetime_;
  ::std::string* connect_;
  bool online_;
  ::google::protobuf::uint32 viplevel_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint32 marry_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RolePlayerMiniInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendInfo : public ::google::protobuf::Message {
 public:
  FriendInfo();
  virtual ~FriendInfo();

  FriendInfo(const FriendInfo& from);

  inline FriendInfo& operator=(const FriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInfo& default_instance();

  void Swap(FriendInfo* other);

  // implements Message ----------------------------------------------

  FriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendInfo& from);
  void MergeFrom(const FriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 closeness = 2;
  inline bool has_closeness() const;
  inline void clear_closeness();
  static const int kClosenessFieldNumber = 2;
  inline ::google::protobuf::uint32 closeness() const;
  inline void set_closeness(::google::protobuf::uint32 value);

  // optional uint32 todayCloseness = 3;
  inline bool has_todaycloseness() const;
  inline void clear_todaycloseness();
  static const int kTodayClosenessFieldNumber = 3;
  inline ::google::protobuf::uint32 todaycloseness() const;
  inline void set_todaycloseness(::google::protobuf::uint32 value);

  // optional uint64 updateTime = 4;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 updatetime() const;
  inline void set_updatetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FriendInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_closeness();
  inline void clear_has_closeness();
  inline void set_has_todaycloseness();
  inline void clear_has_todaycloseness();
  inline void set_has_updatetime();
  inline void clear_has_updatetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 closeness_;
  ::google::protobuf::uint32 todaycloseness_;
  ::google::protobuf::uint64 updatetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendApplyInfo : public ::google::protobuf::Message {
 public:
  FriendApplyInfo();
  virtual ~FriendApplyInfo();

  FriendApplyInfo(const FriendApplyInfo& from);

  inline FriendApplyInfo& operator=(const FriendApplyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendApplyInfo& default_instance();

  void Swap(FriendApplyInfo* other);

  // implements Message ----------------------------------------------

  FriendApplyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendApplyInfo& from);
  void MergeFrom(const FriendApplyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional string connect = 2;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 2;
  inline const ::std::string& connect() const;
  inline void set_connect(const ::std::string& value);
  inline void set_connect(const char* value);
  inline void set_connect(const char* value, size_t size);
  inline ::std::string* mutable_connect();
  inline ::std::string* release_connect();
  inline void set_allocated_connect(::std::string* connect);

  // @@protoc_insertion_point(class_scope:proto_ff.FriendApplyInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_connect();
  inline void clear_has_connect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::std::string* connect_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FriendApplyInfo* default_instance_;
};
// -------------------------------------------------------------------

class RelationHateInfo : public ::google::protobuf::Message {
 public:
  RelationHateInfo();
  virtual ~RelationHateInfo();

  RelationHateInfo(const RelationHateInfo& from);

  inline RelationHateInfo& operator=(const RelationHateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelationHateInfo& default_instance();

  void Swap(RelationHateInfo* other);

  // implements Message ----------------------------------------------

  RelationHateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelationHateInfo& from);
  void MergeFrom(const RelationHateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 killMeTimes = 2;
  inline bool has_killmetimes() const;
  inline void clear_killmetimes();
  static const int kKillMeTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 killmetimes() const;
  inline void set_killmetimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RelationHateInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_killmetimes();
  inline void clear_has_killmetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 killmetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RelationHateInfo* default_instance_;
};
// -------------------------------------------------------------------

class RelationGiftRecord : public ::google::protobuf::Message {
 public:
  RelationGiftRecord();
  virtual ~RelationGiftRecord();

  RelationGiftRecord(const RelationGiftRecord& from);

  inline RelationGiftRecord& operator=(const RelationGiftRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelationGiftRecord& default_instance();

  void Swap(RelationGiftRecord* other);

  // implements Message ----------------------------------------------

  RelationGiftRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelationGiftRecord& from);
  void MergeFrom(const RelationGiftRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friendId = 1;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friendid() const;
  inline void set_friendid(::google::protobuf::uint64 value);

  // optional uint64 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 isThanks = 3;
  inline bool has_isthanks() const;
  inline void clear_isthanks();
  static const int kIsThanksFieldNumber = 3;
  inline ::google::protobuf::uint32 isthanks() const;
  inline void set_isthanks(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RelationGiftRecord)
 private:
  inline void set_has_friendid();
  inline void clear_has_friendid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_isthanks();
  inline void clear_has_isthanks();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friendid_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 isthanks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RelationGiftRecord* default_instance_;
};
// -------------------------------------------------------------------

class RelationDBInfo : public ::google::protobuf::Message {
 public:
  RelationDBInfo();
  virtual ~RelationDBInfo();

  RelationDBInfo(const RelationDBInfo& from);

  inline RelationDBInfo& operator=(const RelationDBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelationDBInfo& default_instance();

  void Swap(RelationDBInfo* other);

  // implements Message ----------------------------------------------

  RelationDBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelationDBInfo& from);
  void MergeFrom(const RelationDBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FriendInfo friendList = 1;
  inline int friendlist_size() const;
  inline void clear_friendlist();
  static const int kFriendListFieldNumber = 1;
  inline const ::proto_ff::FriendInfo& friendlist(int index) const;
  inline ::proto_ff::FriendInfo* mutable_friendlist(int index);
  inline ::proto_ff::FriendInfo* add_friendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >&
      friendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >*
      mutable_friendlist();

  // repeated uint64 blackList = 2;
  inline int blacklist_size() const;
  inline void clear_blacklist();
  static const int kBlackListFieldNumber = 2;
  inline ::google::protobuf::uint64 blacklist(int index) const;
  inline void set_blacklist(int index, ::google::protobuf::uint64 value);
  inline void add_blacklist(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      blacklist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_blacklist();

  // repeated .proto_ff.RelationHateInfo hateList = 3;
  inline int hatelist_size() const;
  inline void clear_hatelist();
  static const int kHateListFieldNumber = 3;
  inline const ::proto_ff::RelationHateInfo& hatelist(int index) const;
  inline ::proto_ff::RelationHateInfo* mutable_hatelist(int index);
  inline ::proto_ff::RelationHateInfo* add_hatelist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >&
      hatelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >*
      mutable_hatelist();

  // repeated .proto_ff.FriendApplyInfo applyList = 4;
  inline int applylist_size() const;
  inline void clear_applylist();
  static const int kApplyListFieldNumber = 4;
  inline const ::proto_ff::FriendApplyInfo& applylist(int index) const;
  inline ::proto_ff::FriendApplyInfo* mutable_applylist(int index);
  inline ::proto_ff::FriendApplyInfo* add_applylist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >&
      applylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >*
      mutable_applylist();

  // optional uint32 friends_add = 5;
  inline bool has_friends_add() const;
  inline void clear_friends_add();
  static const int kFriendsAddFieldNumber = 5;
  inline ::google::protobuf::uint32 friends_add() const;
  inline void set_friends_add(::google::protobuf::uint32 value);

  // repeated .proto_ff.RelationGiftRecord giftRecords = 6;
  inline int giftrecords_size() const;
  inline void clear_giftrecords();
  static const int kGiftRecordsFieldNumber = 6;
  inline const ::proto_ff::RelationGiftRecord& giftrecords(int index) const;
  inline ::proto_ff::RelationGiftRecord* mutable_giftrecords(int index);
  inline ::proto_ff::RelationGiftRecord* add_giftrecords();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >&
      giftrecords() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >*
      mutable_giftrecords();

  // @@protoc_insertion_point(class_scope:proto_ff.RelationDBInfo)
 private:
  inline void set_has_friends_add();
  inline void clear_has_friends_add();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo > friendlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > blacklist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo > hatelist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo > applylist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord > giftrecords_;
  ::google::protobuf::uint32 friends_add_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static RelationDBInfo* default_instance_;
};
// -------------------------------------------------------------------

class DigPerfor : public ::google::protobuf::Message {
 public:
  DigPerfor();
  virtual ~DigPerfor();

  DigPerfor(const DigPerfor& from);

  inline DigPerfor& operator=(const DigPerfor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DigPerfor& default_instance();

  void Swap(DigPerfor* other);

  // implements Message ----------------------------------------------

  DigPerfor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DigPerfor& from);
  void MergeFrom(const DigPerfor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DigPerfor)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DigPerfor* default_instance_;
};
// -------------------------------------------------------------------

class BuffProto : public ::google::protobuf::Message {
 public:
  BuffProto();
  virtual ~BuffProto();

  BuffProto(const BuffProto& from);

  inline BuffProto& operator=(const BuffProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffProto& default_instance();

  void Swap(BuffProto* other);

  // implements Message ----------------------------------------------

  BuffProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffProto& from);
  void MergeFrom(const BuffProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 buff_index = 1;
  inline bool has_buff_index() const;
  inline void clear_buff_index();
  static const int kBuffIndexFieldNumber = 1;
  inline ::google::protobuf::uint64 buff_index() const;
  inline void set_buff_index(::google::protobuf::uint64 value);

  // required uint64 buff_id = 2;
  inline bool has_buff_id() const;
  inline void clear_buff_id();
  static const int kBuffIdFieldNumber = 2;
  inline ::google::protobuf::uint64 buff_id() const;
  inline void set_buff_id(::google::protobuf::uint64 value);

  // optional uint64 recver_cid = 3;
  inline bool has_recver_cid() const;
  inline void clear_recver_cid();
  static const int kRecverCidFieldNumber = 3;
  inline ::google::protobuf::uint64 recver_cid() const;
  inline void set_recver_cid(::google::protobuf::uint64 value);

  // optional int64 left_msec = 4;
  inline bool has_left_msec() const;
  inline void clear_left_msec();
  static const int kLeftMsecFieldNumber = 4;
  inline ::google::protobuf::int64 left_msec() const;
  inline void set_left_msec(::google::protobuf::int64 value);

  // optional uint64 skill_id = 5;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 5;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional int32 skill_lev = 6;
  inline bool has_skill_lev() const;
  inline void clear_skill_lev();
  static const int kSkillLevFieldNumber = 6;
  inline ::google::protobuf::int32 skill_lev() const;
  inline void set_skill_lev(::google::protobuf::int32 value);

  // optional int32 is_effect = 7;
  inline bool has_is_effect() const;
  inline void clear_is_effect();
  static const int kIsEffectFieldNumber = 7;
  inline ::google::protobuf::int32 is_effect() const;
  inline void set_is_effect(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuffProto)
 private:
  inline void set_has_buff_index();
  inline void clear_has_buff_index();
  inline void set_has_buff_id();
  inline void clear_has_buff_id();
  inline void set_has_recver_cid();
  inline void clear_has_recver_cid();
  inline void set_has_left_msec();
  inline void clear_has_left_msec();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_lev();
  inline void clear_has_skill_lev();
  inline void set_has_is_effect();
  inline void clear_has_is_effect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 buff_index_;
  ::google::protobuf::uint64 buff_id_;
  ::google::protobuf::uint64 recver_cid_;
  ::google::protobuf::int64 left_msec_;
  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::int32 skill_lev_;
  ::google::protobuf::int32 is_effect_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BuffProto* default_instance_;
};
// -------------------------------------------------------------------

class BuffListProto : public ::google::protobuf::Message {
 public:
  BuffListProto();
  virtual ~BuffListProto();

  BuffListProto(const BuffListProto& from);

  inline BuffListProto& operator=(const BuffListProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffListProto& default_instance();

  void Swap(BuffListProto* other);

  // implements Message ----------------------------------------------

  BuffListProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffListProto& from);
  void MergeFrom(const BuffListProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // repeated .proto_ff.BuffProto info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::BuffProto& info(int index) const;
  inline ::proto_ff::BuffProto* mutable_info(int index);
  inline ::proto_ff::BuffProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.BuffListProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BuffListProto* default_instance_;
};
// -------------------------------------------------------------------

class SkillPosProto : public ::google::protobuf::Message {
 public:
  SkillPosProto();
  virtual ~SkillPosProto();

  SkillPosProto(const SkillPosProto& from);

  inline SkillPosProto& operator=(const SkillPosProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillPosProto& default_instance();

  void Swap(SkillPosProto* other);

  // implements Message ----------------------------------------------

  SkillPosProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillPosProto& from);
  void MergeFrom(const SkillPosProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional int32 cd = 3;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 3;
  inline ::google::protobuf::int32 cd() const;
  inline void set_cd(::google::protobuf::int32 value);

  // optional int32 use = 4;
  inline bool has_use() const;
  inline void clear_use();
  static const int kUseFieldNumber = 4;
  inline ::google::protobuf::int32 use() const;
  inline void set_use(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SkillPosProto)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_use();
  inline void clear_has_use();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::int32 cd_;
  ::google::protobuf::int32 use_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SkillPosProto* default_instance_;
};
// -------------------------------------------------------------------

class SkillGroupProto : public ::google::protobuf::Message {
 public:
  SkillGroupProto();
  virtual ~SkillGroupProto();

  SkillGroupProto(const SkillGroupProto& from);

  inline SkillGroupProto& operator=(const SkillGroupProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillGroupProto& default_instance();

  void Swap(SkillGroupProto* other);

  // implements Message ----------------------------------------------

  SkillGroupProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillGroupProto& from);
  void MergeFrom(const SkillGroupProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::uint32 group() const;
  inline void set_group(::google::protobuf::uint32 value);

  // repeated .proto_ff.SkillPosProto lst = 2;
  inline int lst_size() const;
  inline void clear_lst();
  static const int kLstFieldNumber = 2;
  inline const ::proto_ff::SkillPosProto& lst(int index) const;
  inline ::proto_ff::SkillPosProto* mutable_lst(int index);
  inline ::proto_ff::SkillPosProto* add_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >&
      lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >*
      mutable_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.SkillGroupProto)
 private:
  inline void set_has_group();
  inline void clear_has_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto > lst_;
  ::google::protobuf::uint32 group_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SkillGroupProto* default_instance_;
};
// -------------------------------------------------------------------

class SkillGroupListProto : public ::google::protobuf::Message {
 public:
  SkillGroupListProto();
  virtual ~SkillGroupListProto();

  SkillGroupListProto(const SkillGroupListProto& from);

  inline SkillGroupListProto& operator=(const SkillGroupListProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillGroupListProto& default_instance();

  void Swap(SkillGroupListProto* other);

  // implements Message ----------------------------------------------

  SkillGroupListProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillGroupListProto& from);
  void MergeFrom(const SkillGroupListProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.SkillGroupProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::SkillGroupProto& info(int index) const;
  inline ::proto_ff::SkillGroupProto* mutable_info(int index);
  inline ::proto_ff::SkillGroupProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >*
      mutable_info();

  // optional uint32 cur_skill_group = 2;
  inline bool has_cur_skill_group() const;
  inline void clear_cur_skill_group();
  static const int kCurSkillGroupFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_skill_group() const;
  inline void set_cur_skill_group(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SkillGroupListProto)
 private:
  inline void set_has_cur_skill_group();
  inline void clear_has_cur_skill_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto > info_;
  ::google::protobuf::uint32 cur_skill_group_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static SkillGroupListProto* default_instance_;
};
// -------------------------------------------------------------------

class GodEvilTaskProto : public ::google::protobuf::Message {
 public:
  GodEvilTaskProto();
  virtual ~GodEvilTaskProto();

  GodEvilTaskProto(const GodEvilTaskProto& from);

  inline GodEvilTaskProto& operator=(const GodEvilTaskProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodEvilTaskProto& default_instance();

  void Swap(GodEvilTaskProto* other);

  // implements Message ----------------------------------------------

  GodEvilTaskProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodEvilTaskProto& from);
  void MergeFrom(const GodEvilTaskProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 cur = 2;
  inline bool has_cur() const;
  inline void clear_cur();
  static const int kCurFieldNumber = 2;
  inline ::google::protobuf::int32 cur() const;
  inline void set_cur(::google::protobuf::int32 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodEvilTaskProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cur();
  inline void clear_has_cur();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cur_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodEvilTaskProto* default_instance_;
};
// -------------------------------------------------------------------

class GodEvilTaskListProto : public ::google::protobuf::Message {
 public:
  GodEvilTaskListProto();
  virtual ~GodEvilTaskListProto();

  GodEvilTaskListProto(const GodEvilTaskListProto& from);

  inline GodEvilTaskListProto& operator=(const GodEvilTaskListProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodEvilTaskListProto& default_instance();

  void Swap(GodEvilTaskListProto* other);

  // implements Message ----------------------------------------------

  GodEvilTaskListProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodEvilTaskListProto& from);
  void MergeFrom(const GodEvilTaskListProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GodEvilTaskProto lst = 1;
  inline int lst_size() const;
  inline void clear_lst();
  static const int kLstFieldNumber = 1;
  inline const ::proto_ff::GodEvilTaskProto& lst(int index) const;
  inline ::proto_ff::GodEvilTaskProto* mutable_lst(int index);
  inline ::proto_ff::GodEvilTaskProto* add_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodEvilTaskProto >&
      lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodEvilTaskProto >*
      mutable_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.GodEvilTaskListProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GodEvilTaskProto > lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodEvilTaskListProto* default_instance_;
};
// -------------------------------------------------------------------

class GodEvilStageProto : public ::google::protobuf::Message {
 public:
  GodEvilStageProto();
  virtual ~GodEvilStageProto();

  GodEvilStageProto(const GodEvilStageProto& from);

  inline GodEvilStageProto& operator=(const GodEvilStageProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodEvilStageProto& default_instance();

  void Swap(GodEvilStageProto* other);

  // implements Message ----------------------------------------------

  GodEvilStageProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodEvilStageProto& from);
  void MergeFrom(const GodEvilStageProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stage = 1;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // optional .proto_ff.GodEvilTaskListProto task = 2;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 2;
  inline const ::proto_ff::GodEvilTaskListProto& task() const;
  inline ::proto_ff::GodEvilTaskListProto* mutable_task();
  inline ::proto_ff::GodEvilTaskListProto* release_task();
  inline void set_allocated_task(::proto_ff::GodEvilTaskListProto* task);

  // optional int32 finish = 3;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 3;
  inline ::google::protobuf::int32 finish() const;
  inline void set_finish(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodEvilStageProto)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_task();
  inline void clear_has_task();
  inline void set_has_finish();
  inline void clear_has_finish();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GodEvilTaskListProto* task_;
  ::google::protobuf::int32 stage_;
  ::google::protobuf::int32 finish_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodEvilStageProto* default_instance_;
};
// -------------------------------------------------------------------

class GodEvilProto : public ::google::protobuf::Message {
 public:
  GodEvilProto();
  virtual ~GodEvilProto();

  GodEvilProto(const GodEvilProto& from);

  inline GodEvilProto& operator=(const GodEvilProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodEvilProto& default_instance();

  void Swap(GodEvilProto* other);

  // implements Message ----------------------------------------------

  GodEvilProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodEvilProto& from);
  void MergeFrom(const GodEvilProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fetch = 1;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 1;
  inline ::google::protobuf::int32 fetch() const;
  inline void set_fetch(::google::protobuf::int32 value);

  // optional .proto_ff.GodEvilStageProto stage = 2;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  inline const ::proto_ff::GodEvilStageProto& stage() const;
  inline ::proto_ff::GodEvilStageProto* mutable_stage();
  inline ::proto_ff::GodEvilStageProto* release_stage();
  inline void set_allocated_stage(::proto_ff::GodEvilStageProto* stage);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 cd = 4;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 4;
  inline ::google::protobuf::int32 cd() const;
  inline void set_cd(::google::protobuf::int32 value);

  // optional int32 vessel_lev = 5;
  inline bool has_vessel_lev() const;
  inline void clear_vessel_lev();
  static const int kVesselLevFieldNumber = 5;
  inline ::google::protobuf::int32 vessel_lev() const;
  inline void set_vessel_lev(::google::protobuf::int32 value);

  // optional int32 mirror_lev = 6;
  inline bool has_mirror_lev() const;
  inline void clear_mirror_lev();
  static const int kMirrorLevFieldNumber = 6;
  inline ::google::protobuf::int32 mirror_lev() const;
  inline void set_mirror_lev(::google::protobuf::int32 value);

  // required int64 extra_exp = 7;
  inline bool has_extra_exp() const;
  inline void clear_extra_exp();
  static const int kExtraExpFieldNumber = 7;
  inline ::google::protobuf::int64 extra_exp() const;
  inline void set_extra_exp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodEvilProto)
 private:
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_vessel_lev();
  inline void clear_has_vessel_lev();
  inline void set_has_mirror_lev();
  inline void clear_has_mirror_lev();
  inline void set_has_extra_exp();
  inline void clear_has_extra_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GodEvilStageProto* stage_;
  ::google::protobuf::int32 fetch_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 cd_;
  ::google::protobuf::int32 vessel_lev_;
  ::google::protobuf::int64 extra_exp_;
  ::google::protobuf::int32 mirror_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodEvilProto* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFantasyData : public ::google::protobuf::Message {
 public:
  FacadeFantasyData();
  virtual ~FacadeFantasyData();

  FacadeFantasyData(const FacadeFantasyData& from);

  inline FacadeFantasyData& operator=(const FacadeFantasyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFantasyData& default_instance();

  void Swap(FacadeFantasyData* other);

  // implements Message ----------------------------------------------

  FacadeFantasyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFantasyData& from);
  void MergeFrom(const FacadeFantasyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fantasy_id = 1;
  inline bool has_fantasy_id() const;
  inline void clear_fantasy_id();
  static const int kFantasyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fantasy_id() const;
  inline void set_fantasy_id(::google::protobuf::uint64 value);

  // optional uint32 fantasy_lev = 2;
  inline bool has_fantasy_lev() const;
  inline void clear_fantasy_lev();
  static const int kFantasyLevFieldNumber = 2;
  inline ::google::protobuf::uint32 fantasy_lev() const;
  inline void set_fantasy_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFantasyData)
 private:
  inline void set_has_fantasy_id();
  inline void clear_has_fantasy_id();
  inline void set_has_fantasy_lev();
  inline void clear_has_fantasy_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fantasy_id_;
  ::google::protobuf::uint32 fantasy_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeFantasyData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFragmentData : public ::google::protobuf::Message {
 public:
  FacadeFragmentData();
  virtual ~FacadeFragmentData();

  FacadeFragmentData(const FacadeFragmentData& from);

  inline FacadeFragmentData& operator=(const FacadeFragmentData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFragmentData& default_instance();

  void Swap(FacadeFragmentData* other);

  // implements Message ----------------------------------------------

  FacadeFragmentData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFragmentData& from);
  void MergeFrom(const FacadeFragmentData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fragment_id = 1;
  inline bool has_fragment_id() const;
  inline void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fragment_id() const;
  inline void set_fragment_id(::google::protobuf::uint64 value);

  // optional uint32 use_times = 2;
  inline bool has_use_times() const;
  inline void clear_use_times();
  static const int kUseTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 use_times() const;
  inline void set_use_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFragmentData)
 private:
  inline void set_has_fragment_id();
  inline void clear_has_fragment_id();
  inline void set_has_use_times();
  inline void clear_has_use_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fragment_id_;
  ::google::protobuf::uint32 use_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeFragmentData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSkillData : public ::google::protobuf::Message {
 public:
  FacadeSkillData();
  virtual ~FacadeSkillData();

  FacadeSkillData(const FacadeSkillData& from);

  inline FacadeSkillData& operator=(const FacadeSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSkillData& default_instance();

  void Swap(FacadeSkillData* other);

  // implements Message ----------------------------------------------

  FacadeSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSkillData& from);
  void MergeFrom(const FacadeSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 skill_lev = 2;
  inline bool has_skill_lev() const;
  inline void clear_skill_lev();
  static const int kSkillLevFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_lev() const;
  inline void set_skill_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_lev();
  inline void clear_has_skill_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 skill_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeSkillData* default_instance_;
};
// -------------------------------------------------------------------

class MountFantasyData : public ::google::protobuf::Message {
 public:
  MountFantasyData();
  virtual ~MountFantasyData();

  MountFantasyData(const MountFantasyData& from);

  inline MountFantasyData& operator=(const MountFantasyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountFantasyData& default_instance();

  void Swap(MountFantasyData* other);

  // implements Message ----------------------------------------------

  MountFantasyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountFantasyData& from);
  void MergeFrom(const MountFantasyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fantasy_id = 1;
  inline bool has_fantasy_id() const;
  inline void clear_fantasy_id();
  static const int kFantasyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fantasy_id() const;
  inline void set_fantasy_id(::google::protobuf::uint64 value);

  // optional uint32 fantasy_lev = 2;
  inline bool has_fantasy_lev() const;
  inline void clear_fantasy_lev();
  static const int kFantasyLevFieldNumber = 2;
  inline ::google::protobuf::uint32 fantasy_lev() const;
  inline void set_fantasy_lev(::google::protobuf::uint32 value);

  // optional uint64 fantasy_lev_exp = 3;
  inline bool has_fantasy_lev_exp() const;
  inline void clear_fantasy_lev_exp();
  static const int kFantasyLevExpFieldNumber = 3;
  inline ::google::protobuf::uint64 fantasy_lev_exp() const;
  inline void set_fantasy_lev_exp(::google::protobuf::uint64 value);

  // optional uint32 fantasy_star = 4;
  inline bool has_fantasy_star() const;
  inline void clear_fantasy_star();
  static const int kFantasyStarFieldNumber = 4;
  inline ::google::protobuf::uint32 fantasy_star() const;
  inline void set_fantasy_star(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountFantasyData)
 private:
  inline void set_has_fantasy_id();
  inline void clear_has_fantasy_id();
  inline void set_has_fantasy_lev();
  inline void clear_has_fantasy_lev();
  inline void set_has_fantasy_lev_exp();
  inline void clear_has_fantasy_lev_exp();
  inline void set_has_fantasy_star();
  inline void clear_has_fantasy_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fantasy_id_;
  ::google::protobuf::uint64 fantasy_lev_exp_;
  ::google::protobuf::uint32 fantasy_lev_;
  ::google::protobuf::uint32 fantasy_star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountFantasyData* default_instance_;
};
// -------------------------------------------------------------------

class MountFragmentData : public ::google::protobuf::Message {
 public:
  MountFragmentData();
  virtual ~MountFragmentData();

  MountFragmentData(const MountFragmentData& from);

  inline MountFragmentData& operator=(const MountFragmentData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountFragmentData& default_instance();

  void Swap(MountFragmentData* other);

  // implements Message ----------------------------------------------

  MountFragmentData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountFragmentData& from);
  void MergeFrom(const MountFragmentData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fragment_id = 1;
  inline bool has_fragment_id() const;
  inline void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fragment_id() const;
  inline void set_fragment_id(::google::protobuf::uint64 value);

  // optional uint32 use_times = 2;
  inline bool has_use_times() const;
  inline void clear_use_times();
  static const int kUseTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 use_times() const;
  inline void set_use_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountFragmentData)
 private:
  inline void set_has_fragment_id();
  inline void clear_has_fragment_id();
  inline void set_has_use_times();
  inline void clear_has_use_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fragment_id_;
  ::google::protobuf::uint32 use_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountFragmentData* default_instance_;
};
// -------------------------------------------------------------------

class MountSkillData : public ::google::protobuf::Message {
 public:
  MountSkillData();
  virtual ~MountSkillData();

  MountSkillData(const MountSkillData& from);

  inline MountSkillData& operator=(const MountSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountSkillData& default_instance();

  void Swap(MountSkillData* other);

  // implements Message ----------------------------------------------

  MountSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountSkillData& from);
  void MergeFrom(const MountSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 skill_lev = 2;
  inline bool has_skill_lev() const;
  inline void clear_skill_lev();
  static const int kSkillLevFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_lev() const;
  inline void set_skill_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountSkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_lev();
  inline void clear_has_skill_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 skill_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountSkillData* default_instance_;
};
// -------------------------------------------------------------------

class MountKunData : public ::google::protobuf::Message {
 public:
  MountKunData();
  virtual ~MountKunData();

  MountKunData(const MountKunData& from);

  inline MountKunData& operator=(const MountKunData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountKunData& default_instance();

  void Swap(MountKunData* other);

  // implements Message ----------------------------------------------

  MountKunData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountKunData& from);
  void MergeFrom(const MountKunData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 kun_id = 1;
  inline bool has_kun_id() const;
  inline void clear_kun_id();
  static const int kKunIdFieldNumber = 1;
  inline ::google::protobuf::uint64 kun_id() const;
  inline void set_kun_id(::google::protobuf::uint64 value);

  // optional uint32 kun_lev = 2;
  inline bool has_kun_lev() const;
  inline void clear_kun_lev();
  static const int kKunLevFieldNumber = 2;
  inline ::google::protobuf::uint32 kun_lev() const;
  inline void set_kun_lev(::google::protobuf::uint32 value);

  // optional uint64 kun_lev_exp = 3;
  inline bool has_kun_lev_exp() const;
  inline void clear_kun_lev_exp();
  static const int kKunLevExpFieldNumber = 3;
  inline ::google::protobuf::uint64 kun_lev_exp() const;
  inline void set_kun_lev_exp(::google::protobuf::uint64 value);

  // optional uint32 kun_star = 4;
  inline bool has_kun_star() const;
  inline void clear_kun_star();
  static const int kKunStarFieldNumber = 4;
  inline ::google::protobuf::uint32 kun_star() const;
  inline void set_kun_star(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountKunData)
 private:
  inline void set_has_kun_id();
  inline void clear_has_kun_id();
  inline void set_has_kun_lev();
  inline void clear_has_kun_lev();
  inline void set_has_kun_lev_exp();
  inline void clear_has_kun_lev_exp();
  inline void set_has_kun_star();
  inline void clear_has_kun_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 kun_id_;
  ::google::protobuf::uint64 kun_lev_exp_;
  ::google::protobuf::uint32 kun_lev_;
  ::google::protobuf::uint32 kun_star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountKunData* default_instance_;
};
// -------------------------------------------------------------------

class MountBloodData : public ::google::protobuf::Message {
 public:
  MountBloodData();
  virtual ~MountBloodData();

  MountBloodData(const MountBloodData& from);

  inline MountBloodData& operator=(const MountBloodData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountBloodData& default_instance();

  void Swap(MountBloodData* other);

  // implements Message ----------------------------------------------

  MountBloodData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountBloodData& from);
  void MergeFrom(const MountBloodData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 blood_id = 1;
  inline bool has_blood_id() const;
  inline void clear_blood_id();
  static const int kBloodIdFieldNumber = 1;
  inline ::google::protobuf::uint64 blood_id() const;
  inline void set_blood_id(::google::protobuf::uint64 value);

  // optional uint32 blood_state = 2;
  inline bool has_blood_state() const;
  inline void clear_blood_state();
  static const int kBloodStateFieldNumber = 2;
  inline ::google::protobuf::uint32 blood_state() const;
  inline void set_blood_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountBloodData)
 private:
  inline void set_has_blood_id();
  inline void clear_has_blood_id();
  inline void set_has_blood_state();
  inline void clear_has_blood_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 blood_id_;
  ::google::protobuf::uint32 blood_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountBloodData* default_instance_;
};
// -------------------------------------------------------------------

class MountBabySlotData : public ::google::protobuf::Message {
 public:
  MountBabySlotData();
  virtual ~MountBabySlotData();

  MountBabySlotData(const MountBabySlotData& from);

  inline MountBabySlotData& operator=(const MountBabySlotData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountBabySlotData& default_instance();

  void Swap(MountBabySlotData* other);

  // implements Message ----------------------------------------------

  MountBabySlotData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountBabySlotData& from);
  void MergeFrom(const MountBabySlotData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // optional uint32 cur_state = 2;
  inline bool has_cur_state() const;
  inline void clear_cur_state();
  static const int kCurStateFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_state() const;
  inline void set_cur_state(::google::protobuf::uint32 value);

  // optional int64 cur_baby_eggid = 3;
  inline bool has_cur_baby_eggid() const;
  inline void clear_cur_baby_eggid();
  static const int kCurBabyEggidFieldNumber = 3;
  inline ::google::protobuf::int64 cur_baby_eggid() const;
  inline void set_cur_baby_eggid(::google::protobuf::int64 value);

  // optional int64 cur_baby_create_time = 4;
  inline bool has_cur_baby_create_time() const;
  inline void clear_cur_baby_create_time();
  static const int kCurBabyCreateTimeFieldNumber = 4;
  inline ::google::protobuf::int64 cur_baby_create_time() const;
  inline void set_cur_baby_create_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MountBabySlotData)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_cur_state();
  inline void clear_has_cur_state();
  inline void set_has_cur_baby_eggid();
  inline void clear_has_cur_baby_eggid();
  inline void set_has_cur_baby_create_time();
  inline void clear_has_cur_baby_create_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 slot_;
  ::google::protobuf::uint32 cur_state_;
  ::google::protobuf::int64 cur_baby_eggid_;
  ::google::protobuf::int64 cur_baby_create_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static MountBabySlotData* default_instance_;
};
// -------------------------------------------------------------------

class StatisticDataProto : public ::google::protobuf::Message {
 public:
  StatisticDataProto();
  virtual ~StatisticDataProto();

  StatisticDataProto(const StatisticDataProto& from);

  inline StatisticDataProto& operator=(const StatisticDataProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatisticDataProto& default_instance();

  void Swap(StatisticDataProto* other);

  // implements Message ----------------------------------------------

  StatisticDataProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatisticDataProto& from);
  void MergeFrom(const StatisticDataProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional uint32 total_login_day = 2;
  inline bool has_total_login_day() const;
  inline void clear_total_login_day();
  static const int kTotalLoginDayFieldNumber = 2;
  inline ::google::protobuf::uint32 total_login_day() const;
  inline void set_total_login_day(::google::protobuf::uint32 value);

  // optional uint32 total_rmb = 3;
  inline bool has_total_rmb() const;
  inline void clear_total_rmb();
  static const int kTotalRmbFieldNumber = 3;
  inline ::google::protobuf::uint32 total_rmb() const;
  inline void set_total_rmb(::google::protobuf::uint32 value);

  // optional uint32 today_rmb = 4;
  inline bool has_today_rmb() const;
  inline void clear_today_rmb();
  static const int kTodayRmbFieldNumber = 4;
  inline ::google::protobuf::uint32 today_rmb() const;
  inline void set_today_rmb(::google::protobuf::uint32 value);

  // optional uint32 total_activityCount = 5;
  inline bool has_total_activitycount() const;
  inline void clear_total_activitycount();
  static const int kTotalActivityCountFieldNumber = 5;
  inline ::google::protobuf::uint32 total_activitycount() const;
  inline void set_total_activitycount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.StatisticDataProto)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_total_login_day();
  inline void clear_has_total_login_day();
  inline void set_has_total_rmb();
  inline void clear_has_total_rmb();
  inline void set_has_today_rmb();
  inline void clear_has_today_rmb();
  inline void set_has_total_activitycount();
  inline void clear_has_total_activitycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;
  ::google::protobuf::uint32 total_login_day_;
  ::google::protobuf::uint32 total_rmb_;
  ::google::protobuf::uint32 today_rmb_;
  ::google::protobuf::uint32 total_activitycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static StatisticDataProto* default_instance_;
};
// -------------------------------------------------------------------

class GodRelicsTaskEntry : public ::google::protobuf::Message {
 public:
  GodRelicsTaskEntry();
  virtual ~GodRelicsTaskEntry();

  GodRelicsTaskEntry(const GodRelicsTaskEntry& from);

  inline GodRelicsTaskEntry& operator=(const GodRelicsTaskEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodRelicsTaskEntry& default_instance();

  void Swap(GodRelicsTaskEntry* other);

  // implements Message ----------------------------------------------

  GodRelicsTaskEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodRelicsTaskEntry& from);
  void MergeFrom(const GodRelicsTaskEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodRelicsTaskEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodRelicsTaskEntry* default_instance_;
};
// -------------------------------------------------------------------

class GodRelicsTaskGroupEntry : public ::google::protobuf::Message {
 public:
  GodRelicsTaskGroupEntry();
  virtual ~GodRelicsTaskGroupEntry();

  GodRelicsTaskGroupEntry(const GodRelicsTaskGroupEntry& from);

  inline GodRelicsTaskGroupEntry& operator=(const GodRelicsTaskGroupEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodRelicsTaskGroupEntry& default_instance();

  void Swap(GodRelicsTaskGroupEntry* other);

  // implements Message ----------------------------------------------

  GodRelicsTaskGroupEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodRelicsTaskGroupEntry& from);
  void MergeFrom(const GodRelicsTaskGroupEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_cfg_id = 1;
  inline bool has_group_cfg_id() const;
  inline void clear_group_cfg_id();
  static const int kGroupCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_cfg_id() const;
  inline void set_group_cfg_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.GodRelicsTaskEntry entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::GodRelicsTaskEntry& entrys(int index) const;
  inline ::proto_ff::GodRelicsTaskEntry* mutable_entrys(int index);
  inline ::proto_ff::GodRelicsTaskEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >*
      mutable_entrys();

  // optional int32 normal_reward_state = 3;
  inline bool has_normal_reward_state() const;
  inline void clear_normal_reward_state();
  static const int kNormalRewardStateFieldNumber = 3;
  inline ::google::protobuf::int32 normal_reward_state() const;
  inline void set_normal_reward_state(::google::protobuf::int32 value);

  // optional uint64 create_time = 5;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 create_time() const;
  inline void set_create_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodRelicsTaskGroupEntry)
 private:
  inline void set_has_group_cfg_id();
  inline void clear_has_group_cfg_id();
  inline void set_has_normal_reward_state();
  inline void clear_has_normal_reward_state();
  inline void set_has_create_time();
  inline void clear_has_create_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 group_cfg_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry > entrys_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::int32 normal_reward_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GodRelicsTaskGroupEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskEntry : public ::google::protobuf::Message {
 public:
  DailyTaskEntry();
  virtual ~DailyTaskEntry();

  DailyTaskEntry(const DailyTaskEntry& from);

  inline DailyTaskEntry& operator=(const DailyTaskEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskEntry& default_instance();

  void Swap(DailyTaskEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskEntry& from);
  void MergeFrom(const DailyTaskEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // optional uint64 last_time = 4;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // optional int32 buy_num = 5;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 5;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::uint64 last_time_;
  ::google::protobuf::int32 buy_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskLimitEntry : public ::google::protobuf::Message {
 public:
  DailyTaskLimitEntry();
  virtual ~DailyTaskLimitEntry();

  DailyTaskLimitEntry(const DailyTaskLimitEntry& from);

  inline DailyTaskLimitEntry& operator=(const DailyTaskLimitEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskLimitEntry& default_instance();

  void Swap(DailyTaskLimitEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskLimitEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskLimitEntry& from);
  void MergeFrom(const DailyTaskLimitEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // optional uint64 last_time = 4;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // optional int32 buy_num = 5;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 5;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // optional bool ready_add = 6;
  inline bool has_ready_add() const;
  inline void clear_ready_add();
  static const int kReadyAddFieldNumber = 6;
  inline bool ready_add() const;
  inline void set_ready_add(bool value);

  // optional bool is_open = 7;
  inline bool has_is_open() const;
  inline void clear_is_open();
  static const int kIsOpenFieldNumber = 7;
  inline bool is_open() const;
  inline void set_is_open(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskLimitEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();
  inline void set_has_ready_add();
  inline void clear_has_ready_add();
  inline void set_has_is_open();
  inline void clear_has_is_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::uint64 last_time_;
  ::google::protobuf::int32 buy_num_;
  bool ready_add_;
  bool is_open_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskLimitEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskBackDayEntry : public ::google::protobuf::Message {
 public:
  DailyTaskBackDayEntry();
  virtual ~DailyTaskBackDayEntry();

  DailyTaskBackDayEntry(const DailyTaskBackDayEntry& from);

  inline DailyTaskBackDayEntry& operator=(const DailyTaskBackDayEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskBackDayEntry& default_instance();

  void Swap(DailyTaskBackDayEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskBackDayEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskBackDayEntry& from);
  void MergeFrom(const DailyTaskBackDayEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 left_num = 1;
  inline bool has_left_num() const;
  inline void clear_left_num();
  static const int kLeftNumFieldNumber = 1;
  inline ::google::protobuf::int32 left_num() const;
  inline void set_left_num(::google::protobuf::int32 value);

  // optional int32 external_left_num = 2;
  inline bool has_external_left_num() const;
  inline void clear_external_left_num();
  static const int kExternalLeftNumFieldNumber = 2;
  inline ::google::protobuf::int32 external_left_num() const;
  inline void set_external_left_num(::google::protobuf::int32 value);

  // optional int64 last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline ::google::protobuf::int64 last_time() const;
  inline void set_last_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskBackDayEntry)
 private:
  inline void set_has_left_num();
  inline void clear_has_left_num();
  inline void set_has_external_left_num();
  inline void clear_has_external_left_num();
  inline void set_has_last_time();
  inline void clear_has_last_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 left_num_;
  ::google::protobuf::int32 external_left_num_;
  ::google::protobuf::int64 last_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskBackDayEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskBackEntry : public ::google::protobuf::Message {
 public:
  DailyTaskBackEntry();
  virtual ~DailyTaskBackEntry();

  DailyTaskBackEntry(const DailyTaskBackEntry& from);

  inline DailyTaskBackEntry& operator=(const DailyTaskBackEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskBackEntry& default_instance();

  void Swap(DailyTaskBackEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskBackEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskBackEntry& from);
  void MergeFrom(const DailyTaskBackEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // repeated .proto_ff.DailyTaskBackDayEntry day_data = 4;
  inline int day_data_size() const;
  inline void clear_day_data();
  static const int kDayDataFieldNumber = 4;
  inline const ::proto_ff::DailyTaskBackDayEntry& day_data(int index) const;
  inline ::proto_ff::DailyTaskBackDayEntry* mutable_day_data(int index);
  inline ::proto_ff::DailyTaskBackDayEntry* add_day_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >&
      day_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >*
      mutable_day_data();

  // optional int32 left_num = 5;
  inline bool has_left_num() const;
  inline void clear_left_num();
  static const int kLeftNumFieldNumber = 5;
  inline ::google::protobuf::int32 left_num() const;
  inline void set_left_num(::google::protobuf::int32 value);

  // optional int32 external_left_num = 6;
  inline bool has_external_left_num() const;
  inline void clear_external_left_num();
  static const int kExternalLeftNumFieldNumber = 6;
  inline ::google::protobuf::int32 external_left_num() const;
  inline void set_external_left_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskBackEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_left_num();
  inline void clear_has_left_num();
  inline void set_has_external_left_num();
  inline void clear_has_external_left_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry > day_data_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::int32 left_num_;
  ::google::protobuf::int32 external_left_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskBackEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskRewardEntry : public ::google::protobuf::Message {
 public:
  DailyTaskRewardEntry();
  virtual ~DailyTaskRewardEntry();

  DailyTaskRewardEntry(const DailyTaskRewardEntry& from);

  inline DailyTaskRewardEntry& operator=(const DailyTaskRewardEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskRewardEntry& default_instance();

  void Swap(DailyTaskRewardEntry* other);

  // implements Message ----------------------------------------------

  DailyTaskRewardEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskRewardEntry& from);
  void MergeFrom(const DailyTaskRewardEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 reward_id = 1;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 1;
  inline ::google::protobuf::uint64 reward_id() const;
  inline void set_reward_id(::google::protobuf::uint64 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskRewardEntry)
 private:
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 reward_id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskRewardEntry* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskAllData : public ::google::protobuf::Message {
 public:
  DailyTaskAllData();
  virtual ~DailyTaskAllData();

  DailyTaskAllData(const DailyTaskAllData& from);

  inline DailyTaskAllData& operator=(const DailyTaskAllData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskAllData& default_instance();

  void Swap(DailyTaskAllData* other);

  // implements Message ----------------------------------------------

  DailyTaskAllData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskAllData& from);
  void MergeFrom(const DailyTaskAllData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DailyTaskEntry task_data = 1;
  inline int task_data_size() const;
  inline void clear_task_data();
  static const int kTaskDataFieldNumber = 1;
  inline const ::proto_ff::DailyTaskEntry& task_data(int index) const;
  inline ::proto_ff::DailyTaskEntry* mutable_task_data(int index);
  inline ::proto_ff::DailyTaskEntry* add_task_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >&
      task_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >*
      mutable_task_data();

  // repeated .proto_ff.DailyTaskLimitEntry task_limit_data = 2;
  inline int task_limit_data_size() const;
  inline void clear_task_limit_data();
  static const int kTaskLimitDataFieldNumber = 2;
  inline const ::proto_ff::DailyTaskLimitEntry& task_limit_data(int index) const;
  inline ::proto_ff::DailyTaskLimitEntry* mutable_task_limit_data(int index);
  inline ::proto_ff::DailyTaskLimitEntry* add_task_limit_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >&
      task_limit_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >*
      mutable_task_limit_data();

  // repeated .proto_ff.DailyTaskBackEntry back_data = 3;
  inline int back_data_size() const;
  inline void clear_back_data();
  static const int kBackDataFieldNumber = 3;
  inline const ::proto_ff::DailyTaskBackEntry& back_data(int index) const;
  inline ::proto_ff::DailyTaskBackEntry* mutable_back_data(int index);
  inline ::proto_ff::DailyTaskBackEntry* add_back_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >&
      back_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >*
      mutable_back_data();

  // repeated .proto_ff.DailyTaskRewardEntry reward_data = 4;
  inline int reward_data_size() const;
  inline void clear_reward_data();
  static const int kRewardDataFieldNumber = 4;
  inline const ::proto_ff::DailyTaskRewardEntry& reward_data(int index) const;
  inline ::proto_ff::DailyTaskRewardEntry* mutable_reward_data(int index);
  inline ::proto_ff::DailyTaskRewardEntry* add_reward_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >&
      reward_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >*
      mutable_reward_data();

  // optional uint32 daily_score = 5;
  inline bool has_daily_score() const;
  inline void clear_daily_score();
  static const int kDailyScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 daily_score() const;
  inline void set_daily_score(::google::protobuf::uint32 value);

  // optional uint32 daily_level = 6;
  inline bool has_daily_level() const;
  inline void clear_daily_level();
  static const int kDailyLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 daily_level() const;
  inline void set_daily_level(::google::protobuf::uint32 value);

  // optional uint64 create_time = 7;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 create_time() const;
  inline void set_create_time(::google::protobuf::uint64 value);

  // optional uint64 daily_exp = 8;
  inline bool has_daily_exp() const;
  inline void clear_daily_exp();
  static const int kDailyExpFieldNumber = 8;
  inline ::google::protobuf::uint64 daily_exp() const;
  inline void set_daily_exp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskAllData)
 private:
  inline void set_has_daily_score();
  inline void clear_has_daily_score();
  inline void set_has_daily_level();
  inline void clear_has_daily_level();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_daily_exp();
  inline void clear_has_daily_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry > task_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry > task_limit_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry > back_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry > reward_data_;
  ::google::protobuf::uint32 daily_score_;
  ::google::protobuf::uint32 daily_level_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::uint64 daily_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskAllData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBRecentSubmitMission : public ::google::protobuf::Message {
 public:
  CharacterDBRecentSubmitMission();
  virtual ~CharacterDBRecentSubmitMission();

  CharacterDBRecentSubmitMission(const CharacterDBRecentSubmitMission& from);

  inline CharacterDBRecentSubmitMission& operator=(const CharacterDBRecentSubmitMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBRecentSubmitMission& default_instance();

  void Swap(CharacterDBRecentSubmitMission* other);

  // implements Message ----------------------------------------------

  CharacterDBRecentSubmitMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBRecentSubmitMission& from);
  void MergeFrom(const CharacterDBRecentSubmitMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 mission_type() const;
  inline void set_mission_type(::google::protobuf::int32 value);

  // optional uint64 mission_id = 2;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mission_id() const;
  inline void set_mission_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBRecentSubmitMission)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_mission_id();
  inline void clear_has_mission_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mission_id_;
  ::google::protobuf::int32 mission_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBRecentSubmitMission* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMissionItemInfo : public ::google::protobuf::Message {
 public:
  CharacterDBMissionItemInfo();
  virtual ~CharacterDBMissionItemInfo();

  CharacterDBMissionItemInfo(const CharacterDBMissionItemInfo& from);

  inline CharacterDBMissionItemInfo& operator=(const CharacterDBMissionItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMissionItemInfo& default_instance();

  void Swap(CharacterDBMissionItemInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBMissionItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMissionItemInfo& from);
  void MergeFrom(const CharacterDBMissionItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 currentValue = 3;
  inline bool has_currentvalue() const;
  inline void clear_currentvalue();
  static const int kCurrentValueFieldNumber = 3;
  inline ::google::protobuf::uint32 currentvalue() const;
  inline void set_currentvalue(::google::protobuf::uint32 value);

  // optional uint32 finalValue = 4;
  inline bool has_finalvalue() const;
  inline void clear_finalvalue();
  static const int kFinalValueFieldNumber = 4;
  inline ::google::protobuf::uint32 finalvalue() const;
  inline void set_finalvalue(::google::protobuf::uint32 value);

  // optional bool completedFlag = 5;
  inline bool has_completedflag() const;
  inline void clear_completedflag();
  static const int kCompletedFlagFieldNumber = 5;
  inline bool completedflag() const;
  inline void set_completedflag(bool value);

  // optional uint64 parma1 = 6;
  inline bool has_parma1() const;
  inline void clear_parma1();
  static const int kParma1FieldNumber = 6;
  inline ::google::protobuf::uint64 parma1() const;
  inline void set_parma1(::google::protobuf::uint64 value);

  // optional uint64 parma2 = 7;
  inline bool has_parma2() const;
  inline void clear_parma2();
  static const int kParma2FieldNumber = 7;
  inline ::google::protobuf::uint64 parma2() const;
  inline void set_parma2(::google::protobuf::uint64 value);

  // optional uint64 parma3 = 8;
  inline bool has_parma3() const;
  inline void clear_parma3();
  static const int kParma3FieldNumber = 8;
  inline ::google::protobuf::uint64 parma3() const;
  inline void set_parma3(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMissionItemInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_currentvalue();
  inline void clear_has_currentvalue();
  inline void set_has_finalvalue();
  inline void clear_has_finalvalue();
  inline void set_has_completedflag();
  inline void clear_has_completedflag();
  inline void set_has_parma1();
  inline void clear_has_parma1();
  inline void set_has_parma2();
  inline void clear_has_parma2();
  inline void set_has_parma3();
  inline void clear_has_parma3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 currentvalue_;
  ::google::protobuf::uint32 finalvalue_;
  bool completedflag_;
  ::google::protobuf::uint64 parma1_;
  ::google::protobuf::uint64 parma2_;
  ::google::protobuf::uint64 parma3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMissionItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMissionTrack : public ::google::protobuf::Message {
 public:
  CharacterDBMissionTrack();
  virtual ~CharacterDBMissionTrack();

  CharacterDBMissionTrack(const CharacterDBMissionTrack& from);

  inline CharacterDBMissionTrack& operator=(const CharacterDBMissionTrack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMissionTrack& default_instance();

  void Swap(CharacterDBMissionTrack* other);

  // implements Message ----------------------------------------------

  CharacterDBMissionTrack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMissionTrack& from);
  void MergeFrom(const CharacterDBMissionTrack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 missionid() const;
  inline void set_missionid(::google::protobuf::uint64 value);

  // optional uint64 dynamicid = 2;
  inline bool has_dynamicid() const;
  inline void clear_dynamicid();
  static const int kDynamicidFieldNumber = 2;
  inline ::google::protobuf::uint64 dynamicid() const;
  inline void set_dynamicid(::google::protobuf::uint64 value);

  // optional uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint64 acceptMissionTime = 4;
  inline bool has_acceptmissiontime() const;
  inline void clear_acceptmissiontime();
  static const int kAcceptMissionTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 acceptmissiontime() const;
  inline void set_acceptmissiontime(::google::protobuf::uint64 value);

  // repeated .proto_ff.CharacterDBMissionItemInfo itemInfo = 5;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 5;
  inline const ::proto_ff::CharacterDBMissionItemInfo& iteminfo(int index) const;
  inline ::proto_ff::CharacterDBMissionItemInfo* mutable_iteminfo(int index);
  inline ::proto_ff::CharacterDBMissionItemInfo* add_iteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >&
      iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >*
      mutable_iteminfo();

  // optional uint64 textid = 6;
  inline bool has_textid() const;
  inline void clear_textid();
  static const int kTextidFieldNumber = 6;
  inline ::google::protobuf::uint64 textid() const;
  inline void set_textid(::google::protobuf::uint64 value);

  // optional uint32 missionType = 7;
  inline bool has_missiontype() const;
  inline void clear_missiontype();
  static const int kMissionTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 missiontype() const;
  inline void set_missiontype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMissionTrack)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_dynamicid();
  inline void clear_has_dynamicid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_acceptmissiontime();
  inline void clear_has_acceptmissiontime();
  inline void set_has_textid();
  inline void clear_has_textid();
  inline void set_has_missiontype();
  inline void clear_has_missiontype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 missionid_;
  ::google::protobuf::uint64 dynamicid_;
  ::google::protobuf::uint64 acceptmissiontime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo > iteminfo_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 missiontype_;
  ::google::protobuf::uint64 textid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMissionTrack* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBDyMissionBountyParam : public ::google::protobuf::Message {
 public:
  CharacterDBDyMissionBountyParam();
  virtual ~CharacterDBDyMissionBountyParam();

  CharacterDBDyMissionBountyParam(const CharacterDBDyMissionBountyParam& from);

  inline CharacterDBDyMissionBountyParam& operator=(const CharacterDBDyMissionBountyParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBDyMissionBountyParam& default_instance();

  void Swap(CharacterDBDyMissionBountyParam* other);

  // implements Message ----------------------------------------------

  CharacterDBDyMissionBountyParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBDyMissionBountyParam& from);
  void MergeFrom(const CharacterDBDyMissionBountyParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ten_state = 1;
  inline bool has_ten_state() const;
  inline void clear_ten_state();
  static const int kTenStateFieldNumber = 1;
  inline ::google::protobuf::uint32 ten_state() const;
  inline void set_ten_state(::google::protobuf::uint32 value);

  // optional uint32 twenty_state = 2;
  inline bool has_twenty_state() const;
  inline void clear_twenty_state();
  static const int kTwentyStateFieldNumber = 2;
  inline ::google::protobuf::uint32 twenty_state() const;
  inline void set_twenty_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBDyMissionBountyParam)
 private:
  inline void set_has_ten_state();
  inline void clear_has_ten_state();
  inline void set_has_twenty_state();
  inline void clear_has_twenty_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ten_state_;
  ::google::protobuf::uint32 twenty_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBDyMissionBountyParam* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBDyMissionInfo : public ::google::protobuf::Message {
 public:
  CharacterDBDyMissionInfo();
  virtual ~CharacterDBDyMissionInfo();

  CharacterDBDyMissionInfo(const CharacterDBDyMissionInfo& from);

  inline CharacterDBDyMissionInfo& operator=(const CharacterDBDyMissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBDyMissionInfo& default_instance();

  void Swap(CharacterDBDyMissionInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBDyMissionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBDyMissionInfo& from);
  void MergeFrom(const CharacterDBDyMissionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 mission_type() const;
  inline void set_mission_type(::google::protobuf::int32 value);

  // optional uint64 lastfresh = 2;
  inline bool has_lastfresh() const;
  inline void clear_lastfresh();
  static const int kLastfreshFieldNumber = 2;
  inline ::google::protobuf::uint64 lastfresh() const;
  inline void set_lastfresh(::google::protobuf::uint64 value);

  // optional int32 accept_num = 3;
  inline bool has_accept_num() const;
  inline void clear_accept_num();
  static const int kAcceptNumFieldNumber = 3;
  inline ::google::protobuf::int32 accept_num() const;
  inline void set_accept_num(::google::protobuf::int32 value);

  // optional .proto_ff.CharacterDBDyMissionBountyParam bounty_param = 4;
  inline bool has_bounty_param() const;
  inline void clear_bounty_param();
  static const int kBountyParamFieldNumber = 4;
  inline const ::proto_ff::CharacterDBDyMissionBountyParam& bounty_param() const;
  inline ::proto_ff::CharacterDBDyMissionBountyParam* mutable_bounty_param();
  inline ::proto_ff::CharacterDBDyMissionBountyParam* release_bounty_param();
  inline void set_allocated_bounty_param(::proto_ff::CharacterDBDyMissionBountyParam* bounty_param);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBDyMissionInfo)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_lastfresh();
  inline void clear_has_lastfresh();
  inline void set_has_accept_num();
  inline void clear_has_accept_num();
  inline void set_has_bounty_param();
  inline void clear_has_bounty_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 lastfresh_;
  ::google::protobuf::int32 mission_type_;
  ::google::protobuf::int32 accept_num_;
  ::proto_ff::CharacterDBDyMissionBountyParam* bounty_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBDyMissionInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildPrestigeMissionDBData : public ::google::protobuf::Message {
 public:
  GuildPrestigeMissionDBData();
  virtual ~GuildPrestigeMissionDBData();

  GuildPrestigeMissionDBData(const GuildPrestigeMissionDBData& from);

  inline GuildPrestigeMissionDBData& operator=(const GuildPrestigeMissionDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildPrestigeMissionDBData& default_instance();

  void Swap(GuildPrestigeMissionDBData* other);

  // implements Message ----------------------------------------------

  GuildPrestigeMissionDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildPrestigeMissionDBData& from);
  void MergeFrom(const GuildPrestigeMissionDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 prestige_id = 1;
  inline bool has_prestige_id() const;
  inline void clear_prestige_id();
  static const int kPrestigeIdFieldNumber = 1;
  inline ::google::protobuf::int64 prestige_id() const;
  inline void set_prestige_id(::google::protobuf::int64 value);

  // optional int64 task_id = 2;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  inline ::google::protobuf::int64 task_id() const;
  inline void set_task_id(::google::protobuf::int64 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // optional int32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional .proto_ff.CharacterDBMissionTrack track = 5;
  inline bool has_track() const;
  inline void clear_track();
  static const int kTrackFieldNumber = 5;
  inline const ::proto_ff::CharacterDBMissionTrack& track() const;
  inline ::proto_ff::CharacterDBMissionTrack* mutable_track();
  inline ::proto_ff::CharacterDBMissionTrack* release_track();
  inline void set_allocated_track(::proto_ff::CharacterDBMissionTrack* track);

  // @@protoc_insertion_point(class_scope:proto_ff.GuildPrestigeMissionDBData)
 private:
  inline void set_has_prestige_id();
  inline void clear_has_prestige_id();
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_task_state();
  inline void clear_has_task_state();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_track();
  inline void clear_has_track();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 prestige_id_;
  ::google::protobuf::int64 task_id_;
  ::google::protobuf::int32 task_state_;
  ::google::protobuf::int32 index_;
  ::proto_ff::CharacterDBMissionTrack* track_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GuildPrestigeMissionDBData* default_instance_;
};
// -------------------------------------------------------------------

class GuildPrestigeMissionDB : public ::google::protobuf::Message {
 public:
  GuildPrestigeMissionDB();
  virtual ~GuildPrestigeMissionDB();

  GuildPrestigeMissionDB(const GuildPrestigeMissionDB& from);

  inline GuildPrestigeMissionDB& operator=(const GuildPrestigeMissionDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildPrestigeMissionDB& default_instance();

  void Swap(GuildPrestigeMissionDB* other);

  // implements Message ----------------------------------------------

  GuildPrestigeMissionDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildPrestigeMissionDB& from);
  void MergeFrom(const GuildPrestigeMissionDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 refresh_num = 1;
  inline bool has_refresh_num() const;
  inline void clear_refresh_num();
  static const int kRefreshNumFieldNumber = 1;
  inline ::google::protobuf::int32 refresh_num() const;
  inline void set_refresh_num(::google::protobuf::int32 value);

  // optional int32 all_refresh_num = 2;
  inline bool has_all_refresh_num() const;
  inline void clear_all_refresh_num();
  static const int kAllRefreshNumFieldNumber = 2;
  inline ::google::protobuf::int32 all_refresh_num() const;
  inline void set_all_refresh_num(::google::protobuf::int32 value);

  // optional int32 accept_num = 3;
  inline bool has_accept_num() const;
  inline void clear_accept_num();
  static const int kAcceptNumFieldNumber = 3;
  inline ::google::protobuf::int32 accept_num() const;
  inline void set_accept_num(::google::protobuf::int32 value);

  // optional int32 all_accept_num = 4;
  inline bool has_all_accept_num() const;
  inline void clear_all_accept_num();
  static const int kAllAcceptNumFieldNumber = 4;
  inline ::google::protobuf::int32 all_accept_num() const;
  inline void set_all_accept_num(::google::protobuf::int32 value);

  // repeated .proto_ff.GuildPrestigeMissionDBData task_pool = 5;
  inline int task_pool_size() const;
  inline void clear_task_pool();
  static const int kTaskPoolFieldNumber = 5;
  inline const ::proto_ff::GuildPrestigeMissionDBData& task_pool(int index) const;
  inline ::proto_ff::GuildPrestigeMissionDBData* mutable_task_pool(int index);
  inline ::proto_ff::GuildPrestigeMissionDBData* add_task_pool();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GuildPrestigeMissionDBData >&
      task_pool() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GuildPrestigeMissionDBData >*
      mutable_task_pool();

  // optional int64 last_refresh_time = 7;
  inline bool has_last_refresh_time() const;
  inline void clear_last_refresh_time();
  static const int kLastRefreshTimeFieldNumber = 7;
  inline ::google::protobuf::int64 last_refresh_time() const;
  inline void set_last_refresh_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GuildPrestigeMissionDB)
 private:
  inline void set_has_refresh_num();
  inline void clear_has_refresh_num();
  inline void set_has_all_refresh_num();
  inline void clear_has_all_refresh_num();
  inline void set_has_accept_num();
  inline void clear_has_accept_num();
  inline void set_has_all_accept_num();
  inline void clear_has_all_accept_num();
  inline void set_has_last_refresh_time();
  inline void clear_has_last_refresh_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 refresh_num_;
  ::google::protobuf::int32 all_refresh_num_;
  ::google::protobuf::int32 accept_num_;
  ::google::protobuf::int32 all_accept_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::GuildPrestigeMissionDBData > task_pool_;
  ::google::protobuf::int64 last_refresh_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static GuildPrestigeMissionDB* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBTaskData : public ::google::protobuf::Message {
 public:
  CharacterDBTaskData();
  virtual ~CharacterDBTaskData();

  CharacterDBTaskData(const CharacterDBTaskData& from);

  inline CharacterDBTaskData& operator=(const CharacterDBTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBTaskData& default_instance();

  void Swap(CharacterDBTaskData* other);

  // implements Message ----------------------------------------------

  CharacterDBTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBTaskData& from);
  void MergeFrom(const CharacterDBTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterDBMissionTrack missionTrack = 1;
  inline int missiontrack_size() const;
  inline void clear_missiontrack();
  static const int kMissionTrackFieldNumber = 1;
  inline const ::proto_ff::CharacterDBMissionTrack& missiontrack(int index) const;
  inline ::proto_ff::CharacterDBMissionTrack* mutable_missiontrack(int index);
  inline ::proto_ff::CharacterDBMissionTrack* add_missiontrack();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >&
      missiontrack() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >*
      mutable_missiontrack();

  // repeated .proto_ff.CharacterDBDyMissionInfo dyinfo = 2;
  inline int dyinfo_size() const;
  inline void clear_dyinfo();
  static const int kDyinfoFieldNumber = 2;
  inline const ::proto_ff::CharacterDBDyMissionInfo& dyinfo(int index) const;
  inline ::proto_ff::CharacterDBDyMissionInfo* mutable_dyinfo(int index);
  inline ::proto_ff::CharacterDBDyMissionInfo* add_dyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >&
      dyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >*
      mutable_dyinfo();

  // repeated uint64 already_submit = 3;
  inline int already_submit_size() const;
  inline void clear_already_submit();
  static const int kAlreadySubmitFieldNumber = 3;
  inline ::google::protobuf::uint64 already_submit(int index) const;
  inline void set_already_submit(int index, ::google::protobuf::uint64 value);
  inline void add_already_submit(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      already_submit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_already_submit();

  // repeated .proto_ff.CharacterDBRecentSubmitMission recent_submit = 4;
  inline int recent_submit_size() const;
  inline void clear_recent_submit();
  static const int kRecentSubmitFieldNumber = 4;
  inline const ::proto_ff::CharacterDBRecentSubmitMission& recent_submit(int index) const;
  inline ::proto_ff::CharacterDBRecentSubmitMission* mutable_recent_submit(int index);
  inline ::proto_ff::CharacterDBRecentSubmitMission* add_recent_submit();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >&
      recent_submit() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >*
      mutable_recent_submit();

  // optional .proto_ff.GuildPrestigeMissionDB prestige_mission = 5;
  inline bool has_prestige_mission() const;
  inline void clear_prestige_mission();
  static const int kPrestigeMissionFieldNumber = 5;
  inline const ::proto_ff::GuildPrestigeMissionDB& prestige_mission() const;
  inline ::proto_ff::GuildPrestigeMissionDB* mutable_prestige_mission();
  inline ::proto_ff::GuildPrestigeMissionDB* release_prestige_mission();
  inline void set_allocated_prestige_mission(::proto_ff::GuildPrestigeMissionDB* prestige_mission);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBTaskData)
 private:
  inline void set_has_prestige_mission();
  inline void clear_has_prestige_mission();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack > missiontrack_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo > dyinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > already_submit_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission > recent_submit_;
  ::proto_ff::GuildPrestigeMissionDB* prestige_mission_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBTaskData* default_instance_;
};
// -------------------------------------------------------------------

class NotifyVipDataRsp : public ::google::protobuf::Message {
 public:
  NotifyVipDataRsp();
  virtual ~NotifyVipDataRsp();

  NotifyVipDataRsp(const NotifyVipDataRsp& from);

  inline NotifyVipDataRsp& operator=(const NotifyVipDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyVipDataRsp& default_instance();

  void Swap(NotifyVipDataRsp* other);

  // implements Message ----------------------------------------------

  NotifyVipDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyVipDataRsp& from);
  void MergeFrom(const NotifyVipDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // repeated int32 ids = 2;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 2;
  inline ::google::protobuf::int32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int32 value);
  inline void add_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyVipDataRsp)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyVipDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class ArenaChallResult : public ::google::protobuf::Message {
 public:
  ArenaChallResult();
  virtual ~ArenaChallResult();

  ArenaChallResult(const ArenaChallResult& from);

  inline ArenaChallResult& operator=(const ArenaChallResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaChallResult& default_instance();

  void Swap(ArenaChallResult* other);

  // implements Message ----------------------------------------------

  ArenaChallResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaChallResult& from);
  void MergeFrom(const ArenaChallResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bool chall = 2;
  inline bool has_chall() const;
  inline void clear_chall();
  static const int kChallFieldNumber = 2;
  inline bool chall() const;
  inline void set_chall(bool value);

  // optional int64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // optional string dst_name = 4;
  inline bool has_dst_name() const;
  inline void clear_dst_name();
  static const int kDstNameFieldNumber = 4;
  inline const ::std::string& dst_name() const;
  inline void set_dst_name(const ::std::string& value);
  inline void set_dst_name(const char* value);
  inline void set_dst_name(const char* value, size_t size);
  inline ::std::string* mutable_dst_name();
  inline ::std::string* release_dst_name();
  inline void set_allocated_dst_name(::std::string* dst_name);

  // optional int32 src_rank_id = 5;
  inline bool has_src_rank_id() const;
  inline void clear_src_rank_id();
  static const int kSrcRankIdFieldNumber = 5;
  inline ::google::protobuf::int32 src_rank_id() const;
  inline void set_src_rank_id(::google::protobuf::int32 value);

  // optional int32 dst_rank_id = 6;
  inline bool has_dst_rank_id() const;
  inline void clear_dst_rank_id();
  static const int kDstRankIdFieldNumber = 6;
  inline ::google::protobuf::int32 dst_rank_id() const;
  inline void set_dst_rank_id(::google::protobuf::int32 value);

  // repeated .proto_ff.ComItem items = 7;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 7;
  inline const ::proto_ff::ComItem& items(int index) const;
  inline ::proto_ff::ComItem* mutable_items(int index);
  inline ::proto_ff::ComItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
      mutable_items();

  // optional int64 dup_id = 8;
  inline bool has_dup_id() const;
  inline void clear_dup_id();
  static const int kDupIdFieldNumber = 8;
  inline ::google::protobuf::int64 dup_id() const;
  inline void set_dup_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ArenaChallResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_chall();
  inline void clear_has_chall();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_dst_name();
  inline void clear_has_dst_name();
  inline void set_has_src_rank_id();
  inline void clear_has_src_rank_id();
  inline void set_has_dst_rank_id();
  inline void clear_has_dst_rank_id();
  inline void set_has_dup_id();
  inline void clear_has_dup_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  bool chall_;
  ::google::protobuf::int64 time_;
  ::std::string* dst_name_;
  ::google::protobuf::int32 src_rank_id_;
  ::google::protobuf::int32 dst_rank_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem > items_;
  ::google::protobuf::int64 dup_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ArenaChallResult* default_instance_;
};
// -------------------------------------------------------------------

class DailyArenaReward : public ::google::protobuf::Message {
 public:
  DailyArenaReward();
  virtual ~DailyArenaReward();

  DailyArenaReward(const DailyArenaReward& from);

  inline DailyArenaReward& operator=(const DailyArenaReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyArenaReward& default_instance();

  void Swap(DailyArenaReward* other);

  // implements Message ----------------------------------------------

  DailyArenaReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyArenaReward& from);
  void MergeFrom(const DailyArenaReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cfg_id = 1;
  inline bool has_cfg_id() const;
  inline void clear_cfg_id();
  static const int kCfgIdFieldNumber = 1;
  inline ::google::protobuf::int32 cfg_id() const;
  inline void set_cfg_id(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyArenaReward)
 private:
  inline void set_has_cfg_id();
  inline void clear_has_cfg_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cfg_id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DailyArenaReward* default_instance_;
};
// -------------------------------------------------------------------

class ChallArenaReward : public ::google::protobuf::Message {
 public:
  ChallArenaReward();
  virtual ~ChallArenaReward();

  ChallArenaReward(const ChallArenaReward& from);

  inline ChallArenaReward& operator=(const ChallArenaReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChallArenaReward& default_instance();

  void Swap(ChallArenaReward* other);

  // implements Message ----------------------------------------------

  ChallArenaReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChallArenaReward& from);
  void MergeFrom(const ChallArenaReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cfg_id = 1;
  inline bool has_cfg_id() const;
  inline void clear_cfg_id();
  static const int kCfgIdFieldNumber = 1;
  inline ::google::protobuf::int32 cfg_id() const;
  inline void set_cfg_id(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ChallArenaReward)
 private:
  inline void set_has_cfg_id();
  inline void clear_has_cfg_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cfg_id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ChallArenaReward* default_instance_;
};
// -------------------------------------------------------------------

class NotifyServerFlag : public ::google::protobuf::Message {
 public:
  NotifyServerFlag();
  virtual ~NotifyServerFlag();

  NotifyServerFlag(const NotifyServerFlag& from);

  inline NotifyServerFlag& operator=(const NotifyServerFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyServerFlag& default_instance();

  void Swap(NotifyServerFlag* other);

  // implements Message ----------------------------------------------

  NotifyServerFlag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyServerFlag& from);
  void MergeFrom(const NotifyServerFlag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bt_dup = 1;
  inline bool has_bt_dup() const;
  inline void clear_bt_dup();
  static const int kBtDupFieldNumber = 1;
  inline ::google::protobuf::int32 bt_dup() const;
  inline void set_bt_dup(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyServerFlag)
 private:
  inline void set_has_bt_dup();
  inline void clear_has_bt_dup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bt_dup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static NotifyServerFlag* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSoulSkillData : public ::google::protobuf::Message {
 public:
  FacadeSoulSkillData();
  virtual ~FacadeSoulSkillData();

  FacadeSoulSkillData(const FacadeSoulSkillData& from);

  inline FacadeSoulSkillData& operator=(const FacadeSoulSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSoulSkillData& default_instance();

  void Swap(FacadeSoulSkillData* other);

  // implements Message ----------------------------------------------

  FacadeSoulSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSoulSkillData& from);
  void MergeFrom(const FacadeSoulSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int64 skill_id() const;
  inline void set_skill_id(::google::protobuf::int64 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSoulSkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 skill_id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeSoulSkillData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSoulActivityData : public ::google::protobuf::Message {
 public:
  FacadeSoulActivityData();
  virtual ~FacadeSoulActivityData();

  FacadeSoulActivityData(const FacadeSoulActivityData& from);

  inline FacadeSoulActivityData& operator=(const FacadeSoulActivityData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSoulActivityData& default_instance();

  void Swap(FacadeSoulActivityData* other);

  // implements Message ----------------------------------------------

  FacadeSoulActivityData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSoulActivityData& from);
  void MergeFrom(const FacadeSoulActivityData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::int64 activity_id() const;
  inline void set_activity_id(::google::protobuf::int64 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSoulActivityData)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 activity_id_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeSoulActivityData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSoulData : public ::google::protobuf::Message {
 public:
  FacadeSoulData();
  virtual ~FacadeSoulData();

  FacadeSoulData(const FacadeSoulData& from);

  inline FacadeSoulData& operator=(const FacadeSoulData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSoulData& default_instance();

  void Swap(FacadeSoulData* other);

  // implements Message ----------------------------------------------

  FacadeSoulData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSoulData& from);
  void MergeFrom(const FacadeSoulData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 soul_id = 1;
  inline bool has_soul_id() const;
  inline void clear_soul_id();
  static const int kSoulIdFieldNumber = 1;
  inline ::google::protobuf::uint32 soul_id() const;
  inline void set_soul_id(::google::protobuf::uint32 value);

  // optional bool soul_active = 2;
  inline bool has_soul_active() const;
  inline void clear_soul_active();
  static const int kSoulActiveFieldNumber = 2;
  inline bool soul_active() const;
  inline void set_soul_active(bool value);

  // optional uint32 soul_level = 3;
  inline bool has_soul_level() const;
  inline void clear_soul_level();
  static const int kSoulLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 soul_level() const;
  inline void set_soul_level(::google::protobuf::uint32 value);

  // repeated .proto_ff.FacadeSoulSkillData skill_data = 5;
  inline int skill_data_size() const;
  inline void clear_skill_data();
  static const int kSkillDataFieldNumber = 5;
  inline const ::proto_ff::FacadeSoulSkillData& skill_data(int index) const;
  inline ::proto_ff::FacadeSoulSkillData* mutable_skill_data(int index);
  inline ::proto_ff::FacadeSoulSkillData* add_skill_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulSkillData >&
      skill_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulSkillData >*
      mutable_skill_data();

  // repeated .proto_ff.FacadeSoulActivityData acviity_data = 6;
  inline int acviity_data_size() const;
  inline void clear_acviity_data();
  static const int kAcviityDataFieldNumber = 6;
  inline const ::proto_ff::FacadeSoulActivityData& acviity_data(int index) const;
  inline ::proto_ff::FacadeSoulActivityData* mutable_acviity_data(int index);
  inline ::proto_ff::FacadeSoulActivityData* add_acviity_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulActivityData >&
      acviity_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulActivityData >*
      mutable_acviity_data();

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSoulData)
 private:
  inline void set_has_soul_id();
  inline void clear_has_soul_id();
  inline void set_has_soul_active();
  inline void clear_has_soul_active();
  inline void set_has_soul_level();
  inline void clear_has_soul_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 soul_id_;
  bool soul_active_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulSkillData > skill_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulActivityData > acviity_data_;
  ::google::protobuf::uint32 soul_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static FacadeSoulData* default_instance_;
};
// -------------------------------------------------------------------

class ItemSellProto : public ::google::protobuf::Message {
 public:
  ItemSellProto();
  virtual ~ItemSellProto();

  ItemSellProto(const ItemSellProto& from);

  inline ItemSellProto& operator=(const ItemSellProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemSellProto& default_instance();

  void Swap(ItemSellProto* other);

  // implements Message ----------------------------------------------

  ItemSellProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemSellProto& from);
  void MergeFrom(const ItemSellProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemSellProto)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ItemSellProto* default_instance_;
};
// -------------------------------------------------------------------

class DeityFantasySkillData : public ::google::protobuf::Message {
 public:
  DeityFantasySkillData();
  virtual ~DeityFantasySkillData();

  DeityFantasySkillData(const DeityFantasySkillData& from);

  inline DeityFantasySkillData& operator=(const DeityFantasySkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityFantasySkillData& default_instance();

  void Swap(DeityFantasySkillData* other);

  // implements Message ----------------------------------------------

  DeityFantasySkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityFantasySkillData& from);
  void MergeFrom(const DeityFantasySkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 skill_state = 2;
  inline bool has_skill_state() const;
  inline void clear_skill_state();
  static const int kSkillStateFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_state() const;
  inline void set_skill_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityFantasySkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_state();
  inline void clear_has_skill_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 skill_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityFantasySkillData* default_instance_;
};
// -------------------------------------------------------------------

class DeityEquipData : public ::google::protobuf::Message {
 public:
  DeityEquipData();
  virtual ~DeityEquipData();

  DeityEquipData(const DeityEquipData& from);

  inline DeityEquipData& operator=(const DeityEquipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityEquipData& default_instance();

  void Swap(DeityEquipData* other);

  // implements Message ----------------------------------------------

  DeityEquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityEquipData& from);
  void MergeFrom(const DeityEquipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.EquipInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::EquipInfo& infos(int index) const;
  inline ::proto_ff::EquipInfo* mutable_infos(int index);
  inline ::proto_ff::EquipInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >*
      mutable_infos();

  // repeated .proto_ff.EquipLvAttrInfo lv_attr = 2;
  inline int lv_attr_size() const;
  inline void clear_lv_attr();
  static const int kLvAttrFieldNumber = 2;
  inline const ::proto_ff::EquipLvAttrInfo& lv_attr(int index) const;
  inline ::proto_ff::EquipLvAttrInfo* mutable_lv_attr(int index);
  inline ::proto_ff::EquipLvAttrInfo* add_lv_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >&
      lv_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >*
      mutable_lv_attr();

  // @@protoc_insertion_point(class_scope:proto_ff.DeityEquipData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo > infos_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo > lv_attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityEquipData* default_instance_;
};
// -------------------------------------------------------------------

class DeityEquipSuitData : public ::google::protobuf::Message {
 public:
  DeityEquipSuitData();
  virtual ~DeityEquipSuitData();

  DeityEquipSuitData(const DeityEquipSuitData& from);

  inline DeityEquipSuitData& operator=(const DeityEquipSuitData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityEquipSuitData& default_instance();

  void Swap(DeityEquipSuitData* other);

  // implements Message ----------------------------------------------

  DeityEquipSuitData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityEquipSuitData& from);
  void MergeFrom(const DeityEquipSuitData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityEquipSuitData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityEquipSuitData* default_instance_;
};
// -------------------------------------------------------------------

class DeityFantasyData : public ::google::protobuf::Message {
 public:
  DeityFantasyData();
  virtual ~DeityFantasyData();

  DeityFantasyData(const DeityFantasyData& from);

  inline DeityFantasyData& operator=(const DeityFantasyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityFantasyData& default_instance();

  void Swap(DeityFantasyData* other);

  // implements Message ----------------------------------------------

  DeityFantasyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityFantasyData& from);
  void MergeFrom(const DeityFantasyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fantasy_id = 1;
  inline bool has_fantasy_id() const;
  inline void clear_fantasy_id();
  static const int kFantasyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fantasy_id() const;
  inline void set_fantasy_id(::google::protobuf::uint64 value);

  // optional uint32 fantasy_lev = 2;
  inline bool has_fantasy_lev() const;
  inline void clear_fantasy_lev();
  static const int kFantasyLevFieldNumber = 2;
  inline ::google::protobuf::uint32 fantasy_lev() const;
  inline void set_fantasy_lev(::google::protobuf::uint32 value);

  // optional uint64 fantasy_lev_exp = 3;
  inline bool has_fantasy_lev_exp() const;
  inline void clear_fantasy_lev_exp();
  static const int kFantasyLevExpFieldNumber = 3;
  inline ::google::protobuf::uint64 fantasy_lev_exp() const;
  inline void set_fantasy_lev_exp(::google::protobuf::uint64 value);

  // optional uint32 fantasy_star = 4;
  inline bool has_fantasy_star() const;
  inline void clear_fantasy_star();
  static const int kFantasyStarFieldNumber = 4;
  inline ::google::protobuf::uint32 fantasy_star() const;
  inline void set_fantasy_star(::google::protobuf::uint32 value);

  // repeated .proto_ff.DeityFantasySkillData skill_data = 5;
  inline int skill_data_size() const;
  inline void clear_skill_data();
  static const int kSkillDataFieldNumber = 5;
  inline const ::proto_ff::DeityFantasySkillData& skill_data(int index) const;
  inline ::proto_ff::DeityFantasySkillData* mutable_skill_data(int index);
  inline ::proto_ff::DeityFantasySkillData* add_skill_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityFantasySkillData >&
      skill_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityFantasySkillData >*
      mutable_skill_data();

  // optional uint64 fantasy_fight = 6;
  inline bool has_fantasy_fight() const;
  inline void clear_fantasy_fight();
  static const int kFantasyFightFieldNumber = 6;
  inline ::google::protobuf::uint64 fantasy_fight() const;
  inline void set_fantasy_fight(::google::protobuf::uint64 value);

  // optional .proto_ff.DeityEquipData equip_data = 7;
  inline bool has_equip_data() const;
  inline void clear_equip_data();
  static const int kEquipDataFieldNumber = 7;
  inline const ::proto_ff::DeityEquipData& equip_data() const;
  inline ::proto_ff::DeityEquipData* mutable_equip_data();
  inline ::proto_ff::DeityEquipData* release_equip_data();
  inline void set_allocated_equip_data(::proto_ff::DeityEquipData* equip_data);

  // repeated .proto_ff.DeityEquipSuitData equip_suit_data = 8;
  inline int equip_suit_data_size() const;
  inline void clear_equip_suit_data();
  static const int kEquipSuitDataFieldNumber = 8;
  inline const ::proto_ff::DeityEquipSuitData& equip_suit_data(int index) const;
  inline ::proto_ff::DeityEquipSuitData* mutable_equip_suit_data(int index);
  inline ::proto_ff::DeityEquipSuitData* add_equip_suit_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityEquipSuitData >&
      equip_suit_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityEquipSuitData >*
      mutable_equip_suit_data();

  // @@protoc_insertion_point(class_scope:proto_ff.DeityFantasyData)
 private:
  inline void set_has_fantasy_id();
  inline void clear_has_fantasy_id();
  inline void set_has_fantasy_lev();
  inline void clear_has_fantasy_lev();
  inline void set_has_fantasy_lev_exp();
  inline void clear_has_fantasy_lev_exp();
  inline void set_has_fantasy_star();
  inline void clear_has_fantasy_star();
  inline void set_has_fantasy_fight();
  inline void clear_has_fantasy_fight();
  inline void set_has_equip_data();
  inline void clear_has_equip_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fantasy_id_;
  ::google::protobuf::uint64 fantasy_lev_exp_;
  ::google::protobuf::uint32 fantasy_lev_;
  ::google::protobuf::uint32 fantasy_star_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityFantasySkillData > skill_data_;
  ::google::protobuf::uint64 fantasy_fight_;
  ::proto_ff::DeityEquipData* equip_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityEquipSuitData > equip_suit_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityFantasyData* default_instance_;
};
// -------------------------------------------------------------------

class DeityFragmentData : public ::google::protobuf::Message {
 public:
  DeityFragmentData();
  virtual ~DeityFragmentData();

  DeityFragmentData(const DeityFragmentData& from);

  inline DeityFragmentData& operator=(const DeityFragmentData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityFragmentData& default_instance();

  void Swap(DeityFragmentData* other);

  // implements Message ----------------------------------------------

  DeityFragmentData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityFragmentData& from);
  void MergeFrom(const DeityFragmentData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fragment_id = 1;
  inline bool has_fragment_id() const;
  inline void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fragment_id() const;
  inline void set_fragment_id(::google::protobuf::uint64 value);

  // optional uint32 use_times = 2;
  inline bool has_use_times() const;
  inline void clear_use_times();
  static const int kUseTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 use_times() const;
  inline void set_use_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityFragmentData)
 private:
  inline void set_has_fragment_id();
  inline void clear_has_fragment_id();
  inline void set_has_use_times();
  inline void clear_has_use_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fragment_id_;
  ::google::protobuf::uint32 use_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityFragmentData* default_instance_;
};
// -------------------------------------------------------------------

class DeitySkillData : public ::google::protobuf::Message {
 public:
  DeitySkillData();
  virtual ~DeitySkillData();

  DeitySkillData(const DeitySkillData& from);

  inline DeitySkillData& operator=(const DeitySkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeitySkillData& default_instance();

  void Swap(DeitySkillData* other);

  // implements Message ----------------------------------------------

  DeitySkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeitySkillData& from);
  void MergeFrom(const DeitySkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 skill_lev = 2;
  inline bool has_skill_lev() const;
  inline void clear_skill_lev();
  static const int kSkillLevFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_lev() const;
  inline void set_skill_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeitySkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_lev();
  inline void clear_has_skill_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 skill_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeitySkillData* default_instance_;
};
// -------------------------------------------------------------------

class DeityBattleSlotData : public ::google::protobuf::Message {
 public:
  DeityBattleSlotData();
  virtual ~DeityBattleSlotData();

  DeityBattleSlotData(const DeityBattleSlotData& from);

  inline DeityBattleSlotData& operator=(const DeityBattleSlotData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityBattleSlotData& default_instance();

  void Swap(DeityBattleSlotData* other);

  // implements Message ----------------------------------------------

  DeityBattleSlotData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityBattleSlotData& from);
  void MergeFrom(const DeityBattleSlotData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 cur_state = 2;
  inline bool has_cur_state() const;
  inline void clear_cur_state();
  static const int kCurStateFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_state() const;
  inline void set_cur_state(::google::protobuf::uint32 value);

  // optional int64 deity_id = 3;
  inline bool has_deity_id() const;
  inline void clear_deity_id();
  static const int kDeityIdFieldNumber = 3;
  inline ::google::protobuf::int64 deity_id() const;
  inline void set_deity_id(::google::protobuf::int64 value);

  // optional int64 enter_war_time = 4;
  inline bool has_enter_war_time() const;
  inline void clear_enter_war_time();
  static const int kEnterWarTimeFieldNumber = 4;
  inline ::google::protobuf::int64 enter_war_time() const;
  inline void set_enter_war_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityBattleSlotData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cur_state();
  inline void clear_has_cur_state();
  inline void set_has_deity_id();
  inline void clear_has_deity_id();
  inline void set_has_enter_war_time();
  inline void clear_has_enter_war_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cur_state_;
  ::google::protobuf::int64 deity_id_;
  ::google::protobuf::int64 enter_war_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static DeityBattleSlotData* default_instance_;
};
// -------------------------------------------------------------------

class ArmorSuitState : public ::google::protobuf::Message {
 public:
  ArmorSuitState();
  virtual ~ArmorSuitState();

  ArmorSuitState(const ArmorSuitState& from);

  inline ArmorSuitState& operator=(const ArmorSuitState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmorSuitState& default_instance();

  void Swap(ArmorSuitState* other);

  // implements Message ----------------------------------------------

  ArmorSuitState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArmorSuitState& from);
  void MergeFrom(const ArmorSuitState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ArmorSuitState)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ArmorSuitState* default_instance_;
};
// -------------------------------------------------------------------

class ArmorInfo : public ::google::protobuf::Message {
 public:
  ArmorInfo();
  virtual ~ArmorInfo();

  ArmorInfo(const ArmorInfo& from);

  inline ArmorInfo& operator=(const ArmorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmorInfo& default_instance();

  void Swap(ArmorInfo* other);

  // implements Message ----------------------------------------------

  ArmorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArmorInfo& from);
  void MergeFrom(const ArmorInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .proto_ff.ArmorSuitState suits = 2;
  inline int suits_size() const;
  inline void clear_suits();
  static const int kSuitsFieldNumber = 2;
  inline const ::proto_ff::ArmorSuitState& suits(int index) const;
  inline ::proto_ff::ArmorSuitState* mutable_suits(int index);
  inline ::proto_ff::ArmorSuitState* add_suits();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArmorSuitState >&
      suits() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArmorSuitState >*
      mutable_suits();

  // optional int32 allstate = 3;
  inline bool has_allstate() const;
  inline void clear_allstate();
  static const int kAllstateFieldNumber = 3;
  inline ::google::protobuf::int32 allstate() const;
  inline void set_allstate(::google::protobuf::int32 value);

  // repeated int32 pos = 4;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline ::google::protobuf::int32 pos(int index) const;
  inline void set_pos(int index, ::google::protobuf::int32 value);
  inline void add_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:proto_ff.ArmorInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_allstate();
  inline void clear_has_allstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ArmorSuitState > suits_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 allstate_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static ArmorInfo* default_instance_;
};
// -------------------------------------------------------------------

class TitleInfo : public ::google::protobuf::Message {
 public:
  TitleInfo();
  virtual ~TitleInfo();

  TitleInfo(const TitleInfo& from);

  inline TitleInfo& operator=(const TitleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleInfo& default_instance();

  void Swap(TitleInfo* other);

  // implements Message ----------------------------------------------

  TitleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleInfo& from);
  void MergeFrom(const TitleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 title_id = 1;
  inline bool has_title_id() const;
  inline void clear_title_id();
  static const int kTitleIdFieldNumber = 1;
  inline ::google::protobuf::int64 title_id() const;
  inline void set_title_id(::google::protobuf::int64 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int64 start_time = 3;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // optional int64 end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // optional int32 star = 5;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 5;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TitleInfo)
 private:
  inline void set_has_title_id();
  inline void clear_has_title_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 title_id_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int64 end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static TitleInfo* default_instance_;
};
// -------------------------------------------------------------------

class OccupationMissionSoulData : public ::google::protobuf::Message {
 public:
  OccupationMissionSoulData();
  virtual ~OccupationMissionSoulData();

  OccupationMissionSoulData(const OccupationMissionSoulData& from);

  inline OccupationMissionSoulData& operator=(const OccupationMissionSoulData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupationMissionSoulData& default_instance();

  void Swap(OccupationMissionSoulData* other);

  // implements Message ----------------------------------------------

  OccupationMissionSoulData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupationMissionSoulData& from);
  void MergeFrom(const OccupationMissionSoulData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 soul_type = 1;
  inline bool has_soul_type() const;
  inline void clear_soul_type();
  static const int kSoulTypeFieldNumber = 1;
  inline ::google::protobuf::int32 soul_type() const;
  inline void set_soul_type(::google::protobuf::int32 value);

  // optional int32 soul_pos = 2;
  inline bool has_soul_pos() const;
  inline void clear_soul_pos();
  static const int kSoulPosFieldNumber = 2;
  inline ::google::protobuf::int32 soul_pos() const;
  inline void set_soul_pos(::google::protobuf::int32 value);

  // optional int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OccupationMissionSoulData)
 private:
  inline void set_has_soul_type();
  inline void clear_has_soul_type();
  inline void set_has_soul_pos();
  inline void clear_has_soul_pos();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 soul_type_;
  ::google::protobuf::int32 soul_pos_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OccupationMissionSoulData* default_instance_;
};
// -------------------------------------------------------------------

class OccupationMissionStageData : public ::google::protobuf::Message {
 public:
  OccupationMissionStageData();
  virtual ~OccupationMissionStageData();

  OccupationMissionStageData(const OccupationMissionStageData& from);

  inline OccupationMissionStageData& operator=(const OccupationMissionStageData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupationMissionStageData& default_instance();

  void Swap(OccupationMissionStageData* other);

  // implements Message ----------------------------------------------

  OccupationMissionStageData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupationMissionStageData& from);
  void MergeFrom(const OccupationMissionStageData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stage = 1;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .proto_ff.OccupationMissionSoulData soul_data = 3;
  inline int soul_data_size() const;
  inline void clear_soul_data();
  static const int kSoulDataFieldNumber = 3;
  inline const ::proto_ff::OccupationMissionSoulData& soul_data(int index) const;
  inline ::proto_ff::OccupationMissionSoulData* mutable_soul_data(int index);
  inline ::proto_ff::OccupationMissionSoulData* add_soul_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionSoulData >&
      soul_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionSoulData >*
      mutable_soul_data();

  // @@protoc_insertion_point(class_scope:proto_ff.OccupationMissionStageData)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stage_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionSoulData > soul_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OccupationMissionStageData* default_instance_;
};
// -------------------------------------------------------------------

class OccupationMissionGradeData : public ::google::protobuf::Message {
 public:
  OccupationMissionGradeData();
  virtual ~OccupationMissionGradeData();

  OccupationMissionGradeData(const OccupationMissionGradeData& from);

  inline OccupationMissionGradeData& operator=(const OccupationMissionGradeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupationMissionGradeData& default_instance();

  void Swap(OccupationMissionGradeData* other);

  // implements Message ----------------------------------------------

  OccupationMissionGradeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupationMissionGradeData& from);
  void MergeFrom(const OccupationMissionGradeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .proto_ff.OccupationMissionStageData stage_data = 3;
  inline int stage_data_size() const;
  inline void clear_stage_data();
  static const int kStageDataFieldNumber = 3;
  inline const ::proto_ff::OccupationMissionStageData& stage_data(int index) const;
  inline ::proto_ff::OccupationMissionStageData* mutable_stage_data(int index);
  inline ::proto_ff::OccupationMissionStageData* add_stage_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionStageData >&
      stage_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionStageData >*
      mutable_stage_data();

  // @@protoc_insertion_point(class_scope:proto_ff.OccupationMissionGradeData)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionStageData > stage_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OccupationMissionGradeData* default_instance_;
};
// -------------------------------------------------------------------

class OccupationMissionData : public ::google::protobuf::Message {
 public:
  OccupationMissionData();
  virtual ~OccupationMissionData();

  OccupationMissionData(const OccupationMissionData& from);

  inline OccupationMissionData& operator=(const OccupationMissionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupationMissionData& default_instance();

  void Swap(OccupationMissionData* other);

  // implements Message ----------------------------------------------

  OccupationMissionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupationMissionData& from);
  void MergeFrom(const OccupationMissionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.OccupationMissionGradeData grade_data = 1;
  inline int grade_data_size() const;
  inline void clear_grade_data();
  static const int kGradeDataFieldNumber = 1;
  inline const ::proto_ff::OccupationMissionGradeData& grade_data(int index) const;
  inline ::proto_ff::OccupationMissionGradeData* mutable_grade_data(int index);
  inline ::proto_ff::OccupationMissionGradeData* add_grade_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionGradeData >&
      grade_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionGradeData >*
      mutable_grade_data();

  // @@protoc_insertion_point(class_scope:proto_ff.OccupationMissionData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionGradeData > grade_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static OccupationMissionData* default_instance_;
};
// -------------------------------------------------------------------

class BestEQEquipInfo : public ::google::protobuf::Message {
 public:
  BestEQEquipInfo();
  virtual ~BestEQEquipInfo();

  BestEQEquipInfo(const BestEQEquipInfo& from);

  inline BestEQEquipInfo& operator=(const BestEQEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BestEQEquipInfo& default_instance();

  void Swap(BestEQEquipInfo* other);

  // implements Message ----------------------------------------------

  BestEQEquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BestEQEquipInfo& from);
  void MergeFrom(const BestEQEquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 instId = 1;
  inline bool has_instid() const;
  inline void clear_instid();
  static const int kInstIdFieldNumber = 1;
  inline ::google::protobuf::int32 instid() const;
  inline void set_instid(::google::protobuf::int32 value);

  // optional int32 cfgId = 2;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgIdFieldNumber = 2;
  inline ::google::protobuf::int32 cfgid() const;
  inline void set_cfgid(::google::protobuf::int32 value);

  // optional int32 makeId = 3;
  inline bool has_makeid() const;
  inline void clear_makeid();
  static const int kMakeIdFieldNumber = 3;
  inline ::google::protobuf::int32 makeid() const;
  inline void set_makeid(::google::protobuf::int32 value);

  // repeated .proto_ff.ComPair skills = 4;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 4;
  inline const ::proto_ff::ComPair& skills(int index) const;
  inline ::proto_ff::ComPair* mutable_skills(int index);
  inline ::proto_ff::ComPair* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:proto_ff.BestEQEquipInfo)
 private:
  inline void set_has_instid();
  inline void clear_has_instid();
  inline void set_has_cfgid();
  inline void clear_has_cfgid();
  inline void set_has_makeid();
  inline void clear_has_makeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 instid_;
  ::google::protobuf::int32 cfgid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > skills_;
  ::google::protobuf::int32 makeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BestEQEquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class BestEQBreak : public ::google::protobuf::Message {
 public:
  BestEQBreak();
  virtual ~BestEQBreak();

  BestEQBreak(const BestEQBreak& from);

  inline BestEQBreak& operator=(const BestEQBreak& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BestEQBreak& default_instance();

  void Swap(BestEQBreak* other);

  // implements Message ----------------------------------------------

  BestEQBreak* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BestEQBreak& from);
  void MergeFrom(const BestEQBreak& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // repeated int32 exps = 2;
  inline int exps_size() const;
  inline void clear_exps();
  static const int kExpsFieldNumber = 2;
  inline ::google::protobuf::int32 exps(int index) const;
  inline void set_exps(int index, ::google::protobuf::int32 value);
  inline void add_exps(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      exps() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_exps();

  // repeated .proto_ff.ComPair genAttr = 3;
  inline int genattr_size() const;
  inline void clear_genattr();
  static const int kGenAttrFieldNumber = 3;
  inline const ::proto_ff::ComPair& genattr(int index) const;
  inline ::proto_ff::ComPair* mutable_genattr(int index);
  inline ::proto_ff::ComPair* add_genattr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      genattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_genattr();

  // @@protoc_insertion_point(class_scope:proto_ff.BestEQBreak)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > exps_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > genattr_;
  ::google::protobuf::int32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BestEQBreak* default_instance_;
};
// -------------------------------------------------------------------

class BestEQSlotInfo : public ::google::protobuf::Message {
 public:
  BestEQSlotInfo();
  virtual ~BestEQSlotInfo();

  BestEQSlotInfo(const BestEQSlotInfo& from);

  inline BestEQSlotInfo& operator=(const BestEQSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BestEQSlotInfo& default_instance();

  void Swap(BestEQSlotInfo* other);

  // implements Message ----------------------------------------------

  BestEQSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BestEQSlotInfo& from);
  void MergeFrom(const BestEQSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 instId = 2;
  inline bool has_instid() const;
  inline void clear_instid();
  static const int kInstIdFieldNumber = 2;
  inline ::google::protobuf::int32 instid() const;
  inline void set_instid(::google::protobuf::int32 value);

  // optional int32 pourId = 3;
  inline bool has_pourid() const;
  inline void clear_pourid();
  static const int kPourIdFieldNumber = 3;
  inline ::google::protobuf::int32 pourid() const;
  inline void set_pourid(::google::protobuf::int32 value);

  // optional int32 pourExp = 4;
  inline bool has_pourexp() const;
  inline void clear_pourexp();
  static const int kPourExpFieldNumber = 4;
  inline ::google::protobuf::int32 pourexp() const;
  inline void set_pourexp(::google::protobuf::int32 value);

  // optional int32 pourUnLock = 5;
  inline bool has_pourunlock() const;
  inline void clear_pourunlock();
  static const int kPourUnLockFieldNumber = 5;
  inline ::google::protobuf::int32 pourunlock() const;
  inline void set_pourunlock(::google::protobuf::int32 value);

  // optional .proto_ff.BestEQBreak breakInfo = 6;
  inline bool has_breakinfo() const;
  inline void clear_breakinfo();
  static const int kBreakInfoFieldNumber = 6;
  inline const ::proto_ff::BestEQBreak& breakinfo() const;
  inline ::proto_ff::BestEQBreak* mutable_breakinfo();
  inline ::proto_ff::BestEQBreak* release_breakinfo();
  inline void set_allocated_breakinfo(::proto_ff::BestEQBreak* breakinfo);

  // optional int32 awakenLv = 7;
  inline bool has_awakenlv() const;
  inline void clear_awakenlv();
  static const int kAwakenLvFieldNumber = 7;
  inline ::google::protobuf::int32 awakenlv() const;
  inline void set_awakenlv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BestEQSlotInfo)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_instid();
  inline void clear_has_instid();
  inline void set_has_pourid();
  inline void clear_has_pourid();
  inline void set_has_pourexp();
  inline void clear_has_pourexp();
  inline void set_has_pourunlock();
  inline void clear_has_pourunlock();
  inline void set_has_breakinfo();
  inline void clear_has_breakinfo();
  inline void set_has_awakenlv();
  inline void clear_has_awakenlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 instid_;
  ::google::protobuf::int32 pourid_;
  ::google::protobuf::int32 pourexp_;
  ::proto_ff::BestEQBreak* breakinfo_;
  ::google::protobuf::int32 pourunlock_;
  ::google::protobuf::int32 awakenlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BestEQSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class BestEQTask : public ::google::protobuf::Message {
 public:
  BestEQTask();
  virtual ~BestEQTask();

  BestEQTask(const BestEQTask& from);

  inline BestEQTask& operator=(const BestEQTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BestEQTask& default_instance();

  void Swap(BestEQTask* other);

  // implements Message ----------------------------------------------

  BestEQTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BestEQTask& from);
  void MergeFrom(const BestEQTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BestEQTask)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Com_2eproto();
  friend void protobuf_AssignDesc_Com_2eproto();
  friend void protobuf_ShutdownFile_Com_2eproto();

  void InitAsDefaultInstance();
  static BestEQTask* default_instance_;
};
// ===================================================================


// ===================================================================

// EmptyMessage

// -------------------------------------------------------------------

// ComPair

// optional uint32 key = 1;
inline bool ComPair::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComPair::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComPair::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComPair::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ComPair::key() const {
  return key_;
}
inline void ComPair::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// optional uint32 value = 2;
inline bool ComPair::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComPair::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComPair::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComPair::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ComPair::value() const {
  return value_;
}
inline void ComPair::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ComPair64

// optional uint64 key = 1;
inline bool ComPair64::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComPair64::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComPair64::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComPair64::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::uint64 ComPair64::key() const {
  return key_;
}
inline void ComPair64::set_key(::google::protobuf::uint64 value) {
  set_has_key();
  key_ = value;
}

// optional uint64 value = 2;
inline bool ComPair64::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComPair64::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComPair64::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComPair64::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 ComPair64::value() const {
  return value_;
}
inline void ComPair64::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ComPairBool

// optional uint32 key = 1;
inline bool ComPairBool::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComPairBool::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComPairBool::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComPairBool::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ComPairBool::key() const {
  return key_;
}
inline void ComPairBool::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// optional bool value = 2;
inline bool ComPairBool::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComPairBool::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComPairBool::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComPairBool::clear_value() {
  value_ = false;
  clear_has_value();
}
inline bool ComPairBool::value() const {
  return value_;
}
inline void ComPairBool::set_value(bool value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ComItem

// optional uint64 item_id = 1;
inline bool ComItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 ComItem::item_id() const {
  return item_id_;
}
inline void ComItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint64 item_num = 2;
inline bool ComItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComItem::clear_item_num() {
  item_num_ = GOOGLE_ULONGLONG(0);
  clear_has_item_num();
}
inline ::google::protobuf::uint64 ComItem::item_num() const {
  return item_num_;
}
inline void ComItem::set_item_num(::google::protobuf::uint64 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// ComItemWithType

// optional uint64 item_id = 1;
inline bool ComItemWithType::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComItemWithType::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComItemWithType::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComItemWithType::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 ComItemWithType::item_id() const {
  return item_id_;
}
inline void ComItemWithType::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint64 item_num = 2;
inline bool ComItemWithType::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComItemWithType::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComItemWithType::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComItemWithType::clear_item_num() {
  item_num_ = GOOGLE_ULONGLONG(0);
  clear_has_item_num();
}
inline ::google::protobuf::uint64 ComItemWithType::item_num() const {
  return item_num_;
}
inline void ComItemWithType::set_item_num(::google::protobuf::uint64 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional uint32 type = 3;
inline bool ComItemWithType::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComItemWithType::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComItemWithType::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComItemWithType::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ComItemWithType::type() const {
  return type_;
}
inline void ComItemWithType::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// Vector3PB

// required float x = 1;
inline bool Vector3PB::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vector3PB::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vector3PB::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vector3PB::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Vector3PB::x() const {
  return x_;
}
inline void Vector3PB::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Vector3PB::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vector3PB::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vector3PB::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vector3PB::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Vector3PB::y() const {
  return y_;
}
inline void Vector3PB::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float z = 3;
inline bool Vector3PB::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Vector3PB::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Vector3PB::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Vector3PB::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Vector3PB::z() const {
  return z_;
}
inline void Vector3PB::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// Vector2PB

// required float x = 1;
inline bool Vector2PB::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vector2PB::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vector2PB::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vector2PB::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Vector2PB::x() const {
  return x_;
}
inline void Vector2PB::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Vector2PB::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vector2PB::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vector2PB::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vector2PB::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Vector2PB::y() const {
  return y_;
}
inline void Vector2PB::set_y(float value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// Attr64

// required uint32 id = 1;
inline bool Attr64::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attr64::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attr64::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attr64::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Attr64::id() const {
  return id_;
}
inline void Attr64::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required int64 value = 2;
inline bool Attr64::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attr64::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attr64::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attr64::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 Attr64::value() const {
  return value_;
}
inline void Attr64::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// RoleFacadeProto

// repeated .proto_ff.Attr64 growFacade = 1;
inline int RoleFacadeProto::growfacade_size() const {
  return growfacade_.size();
}
inline void RoleFacadeProto::clear_growfacade() {
  growfacade_.Clear();
}
inline const ::proto_ff::Attr64& RoleFacadeProto::growfacade(int index) const {
  return growfacade_.Get(index);
}
inline ::proto_ff::Attr64* RoleFacadeProto::mutable_growfacade(int index) {
  return growfacade_.Mutable(index);
}
inline ::proto_ff::Attr64* RoleFacadeProto::add_growfacade() {
  return growfacade_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >&
RoleFacadeProto::growfacade() const {
  return growfacade_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >*
RoleFacadeProto::mutable_growfacade() {
  return &growfacade_;
}

// optional int32 color = 2;
inline bool RoleFacadeProto::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleFacadeProto::set_has_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleFacadeProto::clear_has_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleFacadeProto::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 RoleFacadeProto::color() const {
  return color_;
}
inline void RoleFacadeProto::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}

// optional int32 prof = 3;
inline bool RoleFacadeProto::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleFacadeProto::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleFacadeProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleFacadeProto::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 RoleFacadeProto::prof() const {
  return prof_;
}
inline void RoleFacadeProto::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
}

// -------------------------------------------------------------------

// RoleListDBProto

// required uint64 cid = 1;
inline bool RoleListDBProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleListDBProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleListDBProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleListDBProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RoleListDBProto::cid() const {
  return cid_;
}
inline void RoleListDBProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required string name = 2;
inline bool RoleListDBProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleListDBProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleListDBProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleListDBProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleListDBProto::name() const {
  return *name_;
}
inline void RoleListDBProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleListDBProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleListDBProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleListDBProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleListDBProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleListDBProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 prof = 3;
inline bool RoleListDBProto::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleListDBProto::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleListDBProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleListDBProto::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 RoleListDBProto::prof() const {
  return prof_;
}
inline void RoleListDBProto::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// required uint32 level = 4;
inline bool RoleListDBProto::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleListDBProto::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleListDBProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleListDBProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoleListDBProto::level() const {
  return level_;
}
inline void RoleListDBProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint64 fight = 5;
inline bool RoleListDBProto::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleListDBProto::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleListDBProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleListDBProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 RoleListDBProto::fight() const {
  return fight_;
}
inline void RoleListDBProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 createtime = 6;
inline bool RoleListDBProto::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleListDBProto::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleListDBProto::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleListDBProto::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 RoleListDBProto::createtime() const {
  return createtime_;
}
inline void RoleListDBProto::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 7;
inline bool RoleListDBProto::has_facade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleListDBProto::set_has_facade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleListDBProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleListDBProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& RoleListDBProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* RoleListDBProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* RoleListDBProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void RoleListDBProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint64 sceneid = 8;
inline bool RoleListDBProto::has_sceneid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleListDBProto::set_has_sceneid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleListDBProto::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleListDBProto::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 RoleListDBProto::sceneid() const {
  return sceneid_;
}
inline void RoleListDBProto::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 mapid = 9;
inline bool RoleListDBProto::has_mapid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleListDBProto::set_has_mapid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleListDBProto::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleListDBProto::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 RoleListDBProto::mapid() const {
  return mapid_;
}
inline void RoleListDBProto::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional .proto_ff.Vector3PB pos = 10;
inline bool RoleListDBProto::has_pos() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleListDBProto::set_has_pos() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleListDBProto::clear_has_pos() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleListDBProto::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& RoleListDBProto::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RoleListDBProto::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional uint64 lastsceneid = 11;
inline bool RoleListDBProto::has_lastsceneid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleListDBProto::set_has_lastsceneid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleListDBProto::clear_has_lastsceneid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleListDBProto::clear_lastsceneid() {
  lastsceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastsceneid();
}
inline ::google::protobuf::uint64 RoleListDBProto::lastsceneid() const {
  return lastsceneid_;
}
inline void RoleListDBProto::set_lastsceneid(::google::protobuf::uint64 value) {
  set_has_lastsceneid();
  lastsceneid_ = value;
}

// optional uint64 lastmapid = 12;
inline bool RoleListDBProto::has_lastmapid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleListDBProto::set_has_lastmapid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleListDBProto::clear_has_lastmapid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleListDBProto::clear_lastmapid() {
  lastmapid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastmapid();
}
inline ::google::protobuf::uint64 RoleListDBProto::lastmapid() const {
  return lastmapid_;
}
inline void RoleListDBProto::set_lastmapid(::google::protobuf::uint64 value) {
  set_has_lastmapid();
  lastmapid_ = value;
}

// optional .proto_ff.Vector3PB lastpos = 13;
inline bool RoleListDBProto::has_lastpos() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleListDBProto::set_has_lastpos() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleListDBProto::clear_has_lastpos() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleListDBProto::clear_lastpos() {
  if (lastpos_ != NULL) lastpos_->::proto_ff::Vector3PB::Clear();
  clear_has_lastpos();
}
inline const ::proto_ff::Vector3PB& RoleListDBProto::lastpos() const {
  return lastpos_ != NULL ? *lastpos_ : *default_instance_->lastpos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::mutable_lastpos() {
  set_has_lastpos();
  if (lastpos_ == NULL) lastpos_ = new ::proto_ff::Vector3PB;
  return lastpos_;
}
inline ::proto_ff::Vector3PB* RoleListDBProto::release_lastpos() {
  clear_has_lastpos();
  ::proto_ff::Vector3PB* temp = lastpos_;
  lastpos_ = NULL;
  return temp;
}
inline void RoleListDBProto::set_allocated_lastpos(::proto_ff::Vector3PB* lastpos) {
  delete lastpos_;
  lastpos_ = lastpos;
  if (lastpos) {
    set_has_lastpos();
  } else {
    clear_has_lastpos();
  }
}

// -------------------------------------------------------------------

// LoginRoleProto

// required uint64 cid = 1;
inline bool LoginRoleProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRoleProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRoleProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRoleProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 LoginRoleProto::cid() const {
  return cid_;
}
inline void LoginRoleProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required string name = 2;
inline bool LoginRoleProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRoleProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRoleProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRoleProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& LoginRoleProto::name() const {
  return *name_;
}
inline void LoginRoleProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LoginRoleProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LoginRoleProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginRoleProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* LoginRoleProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginRoleProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 prof = 3;
inline bool LoginRoleProto::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRoleProto::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRoleProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRoleProto::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 LoginRoleProto::prof() const {
  return prof_;
}
inline void LoginRoleProto::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// required uint32 level = 4;
inline bool LoginRoleProto::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRoleProto::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRoleProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRoleProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LoginRoleProto::level() const {
  return level_;
}
inline void LoginRoleProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 fight = 5;
inline bool LoginRoleProto::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginRoleProto::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginRoleProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginRoleProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 LoginRoleProto::fight() const {
  return fight_;
}
inline void LoginRoleProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 createtime = 6;
inline bool LoginRoleProto::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginRoleProto::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginRoleProto::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginRoleProto::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 LoginRoleProto::createtime() const {
  return createtime_;
}
inline void LoginRoleProto::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 7;
inline bool LoginRoleProto::has_facade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginRoleProto::set_has_facade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginRoleProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginRoleProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& LoginRoleProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* LoginRoleProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* LoginRoleProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void LoginRoleProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// -------------------------------------------------------------------

// LoginSyncProto

// optional uint32 faction_id = 1;
inline bool LoginSyncProto::has_faction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginSyncProto::set_has_faction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginSyncProto::clear_has_faction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginSyncProto::clear_faction_id() {
  faction_id_ = 0u;
  clear_has_faction_id();
}
inline ::google::protobuf::uint32 LoginSyncProto::faction_id() const {
  return faction_id_;
}
inline void LoginSyncProto::set_faction_id(::google::protobuf::uint32 value) {
  set_has_faction_id();
  faction_id_ = value;
}

// optional string faction_name = 2;
inline bool LoginSyncProto::has_faction_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginSyncProto::set_has_faction_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginSyncProto::clear_has_faction_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginSyncProto::clear_faction_name() {
  if (faction_name_ != &::google::protobuf::internal::kEmptyString) {
    faction_name_->clear();
  }
  clear_has_faction_name();
}
inline const ::std::string& LoginSyncProto::faction_name() const {
  return *faction_name_;
}
inline void LoginSyncProto::set_faction_name(const ::std::string& value) {
  set_has_faction_name();
  if (faction_name_ == &::google::protobuf::internal::kEmptyString) {
    faction_name_ = new ::std::string;
  }
  faction_name_->assign(value);
}
inline void LoginSyncProto::set_faction_name(const char* value) {
  set_has_faction_name();
  if (faction_name_ == &::google::protobuf::internal::kEmptyString) {
    faction_name_ = new ::std::string;
  }
  faction_name_->assign(value);
}
inline void LoginSyncProto::set_faction_name(const char* value, size_t size) {
  set_has_faction_name();
  if (faction_name_ == &::google::protobuf::internal::kEmptyString) {
    faction_name_ = new ::std::string;
  }
  faction_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginSyncProto::mutable_faction_name() {
  set_has_faction_name();
  if (faction_name_ == &::google::protobuf::internal::kEmptyString) {
    faction_name_ = new ::std::string;
  }
  return faction_name_;
}
inline ::std::string* LoginSyncProto::release_faction_name() {
  clear_has_faction_name();
  if (faction_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = faction_name_;
    faction_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginSyncProto::set_allocated_faction_name(::std::string* faction_name) {
  if (faction_name_ != &::google::protobuf::internal::kEmptyString) {
    delete faction_name_;
  }
  if (faction_name) {
    set_has_faction_name();
    faction_name_ = faction_name;
  } else {
    clear_has_faction_name();
    faction_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 duty = 3;
inline bool LoginSyncProto::has_duty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginSyncProto::set_has_duty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginSyncProto::clear_has_duty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginSyncProto::clear_duty() {
  duty_ = 0;
  clear_has_duty();
}
inline ::google::protobuf::int32 LoginSyncProto::duty() const {
  return duty_;
}
inline void LoginSyncProto::set_duty(::google::protobuf::int32 value) {
  set_has_duty();
  duty_ = value;
}

// optional uint64 faction_leader = 4;
inline bool LoginSyncProto::has_faction_leader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginSyncProto::set_has_faction_leader() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginSyncProto::clear_has_faction_leader() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginSyncProto::clear_faction_leader() {
  faction_leader_ = GOOGLE_ULONGLONG(0);
  clear_has_faction_leader();
}
inline ::google::protobuf::uint64 LoginSyncProto::faction_leader() const {
  return faction_leader_;
}
inline void LoginSyncProto::set_faction_leader(::google::protobuf::uint64 value) {
  set_has_faction_leader();
  faction_leader_ = value;
}

// optional int32 faction_level = 5;
inline bool LoginSyncProto::has_faction_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginSyncProto::set_has_faction_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginSyncProto::clear_has_faction_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginSyncProto::clear_faction_level() {
  faction_level_ = 0;
  clear_has_faction_level();
}
inline ::google::protobuf::int32 LoginSyncProto::faction_level() const {
  return faction_level_;
}
inline void LoginSyncProto::set_faction_level(::google::protobuf::int32 value) {
  set_has_faction_level();
  faction_level_ = value;
}

// optional uint32 team_id = 6;
inline bool LoginSyncProto::has_team_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginSyncProto::set_has_team_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginSyncProto::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginSyncProto::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 LoginSyncProto::team_id() const {
  return team_id_;
}
inline void LoginSyncProto::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
}

// optional uint64 leader = 7;
inline bool LoginSyncProto::has_leader() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginSyncProto::set_has_leader() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginSyncProto::clear_has_leader() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginSyncProto::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
inline ::google::protobuf::uint64 LoginSyncProto::leader() const {
  return leader_;
}
inline void LoginSyncProto::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
}

// optional int32 mem_count = 8;
inline bool LoginSyncProto::has_mem_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoginSyncProto::set_has_mem_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoginSyncProto::clear_has_mem_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoginSyncProto::clear_mem_count() {
  mem_count_ = 0;
  clear_has_mem_count();
}
inline ::google::protobuf::int32 LoginSyncProto::mem_count() const {
  return mem_count_;
}
inline void LoginSyncProto::set_mem_count(::google::protobuf::int32 value) {
  set_has_mem_count();
  mem_count_ = value;
}

// optional int32 cloness_lev = 9;
inline bool LoginSyncProto::has_cloness_lev() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LoginSyncProto::set_has_cloness_lev() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LoginSyncProto::clear_has_cloness_lev() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LoginSyncProto::clear_cloness_lev() {
  cloness_lev_ = 0;
  clear_has_cloness_lev();
}
inline ::google::protobuf::int32 LoginSyncProto::cloness_lev() const {
  return cloness_lev_;
}
inline void LoginSyncProto::set_cloness_lev(::google::protobuf::int32 value) {
  set_has_cloness_lev();
  cloness_lev_ = value;
}

// -------------------------------------------------------------------

// CenterRoleProto

// optional uint64 cid = 1;
inline bool CenterRoleProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterRoleProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterRoleProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterRoleProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CenterRoleProto::cid() const {
  return cid_;
}
inline void CenterRoleProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 uid = 2;
inline bool CenterRoleProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterRoleProto::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterRoleProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterRoleProto::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CenterRoleProto::uid() const {
  return uid_;
}
inline void CenterRoleProto::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional bytes name = 3;
inline bool CenterRoleProto::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterRoleProto::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterRoleProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterRoleProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CenterRoleProto::name() const {
  return *name_;
}
inline void CenterRoleProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CenterRoleProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CenterRoleProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CenterRoleProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CenterRoleProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CenterRoleProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 level = 4;
inline bool CenterRoleProto::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CenterRoleProto::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CenterRoleProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CenterRoleProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CenterRoleProto::level() const {
  return level_;
}
inline void CenterRoleProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 fight = 5;
inline bool CenterRoleProto::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CenterRoleProto::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CenterRoleProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CenterRoleProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 CenterRoleProto::fight() const {
  return fight_;
}
inline void CenterRoleProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 lastlogout = 6;
inline bool CenterRoleProto::has_lastlogout() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CenterRoleProto::set_has_lastlogout() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CenterRoleProto::clear_has_lastlogout() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CenterRoleProto::clear_lastlogout() {
  lastlogout_ = GOOGLE_ULONGLONG(0);
  clear_has_lastlogout();
}
inline ::google::protobuf::uint64 CenterRoleProto::lastlogout() const {
  return lastlogout_;
}
inline void CenterRoleProto::set_lastlogout(::google::protobuf::uint64 value) {
  set_has_lastlogout();
  lastlogout_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 7;
inline bool CenterRoleProto::has_facade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CenterRoleProto::set_has_facade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CenterRoleProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CenterRoleProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& CenterRoleProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* CenterRoleProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* CenterRoleProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void CenterRoleProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint32 vip_level = 8;
inline bool CenterRoleProto::has_vip_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CenterRoleProto::set_has_vip_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CenterRoleProto::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CenterRoleProto::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 CenterRoleProto::vip_level() const {
  return vip_level_;
}
inline void CenterRoleProto::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional int64 hp = 9;
inline bool CenterRoleProto::has_hp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CenterRoleProto::set_has_hp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CenterRoleProto::clear_has_hp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CenterRoleProto::clear_hp() {
  hp_ = GOOGLE_LONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::int64 CenterRoleProto::hp() const {
  return hp_;
}
inline void CenterRoleProto::set_hp(::google::protobuf::int64 value) {
  set_has_hp();
  hp_ = value;
}

// optional int64 max_hp = 10;
inline bool CenterRoleProto::has_max_hp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CenterRoleProto::set_has_max_hp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CenterRoleProto::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CenterRoleProto::clear_max_hp() {
  max_hp_ = GOOGLE_LONGLONG(0);
  clear_has_max_hp();
}
inline ::google::protobuf::int64 CenterRoleProto::max_hp() const {
  return max_hp_;
}
inline void CenterRoleProto::set_max_hp(::google::protobuf::int64 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// -------------------------------------------------------------------

// SocialRoleProto

// optional uint64 cid = 1;
inline bool SocialRoleProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialRoleProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialRoleProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialRoleProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 SocialRoleProto::cid() const {
  return cid_;
}
inline void SocialRoleProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 uid = 2;
inline bool SocialRoleProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialRoleProto::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialRoleProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialRoleProto::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 SocialRoleProto::uid() const {
  return uid_;
}
inline void SocialRoleProto::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional bytes name = 3;
inline bool SocialRoleProto::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialRoleProto::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialRoleProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialRoleProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SocialRoleProto::name() const {
  return *name_;
}
inline void SocialRoleProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SocialRoleProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SocialRoleProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SocialRoleProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* SocialRoleProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SocialRoleProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 prof = 4;
inline bool SocialRoleProto::has_prof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SocialRoleProto::set_has_prof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SocialRoleProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SocialRoleProto::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 SocialRoleProto::prof() const {
  return prof_;
}
inline void SocialRoleProto::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 5;
inline bool SocialRoleProto::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SocialRoleProto::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SocialRoleProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SocialRoleProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SocialRoleProto::level() const {
  return level_;
}
inline void SocialRoleProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 fight = 6;
inline bool SocialRoleProto::has_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SocialRoleProto::set_has_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SocialRoleProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SocialRoleProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 SocialRoleProto::fight() const {
  return fight_;
}
inline void SocialRoleProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 lastlogout = 7;
inline bool SocialRoleProto::has_lastlogout() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SocialRoleProto::set_has_lastlogout() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SocialRoleProto::clear_has_lastlogout() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SocialRoleProto::clear_lastlogout() {
  lastlogout_ = GOOGLE_ULONGLONG(0);
  clear_has_lastlogout();
}
inline ::google::protobuf::uint64 SocialRoleProto::lastlogout() const {
  return lastlogout_;
}
inline void SocialRoleProto::set_lastlogout(::google::protobuf::uint64 value) {
  set_has_lastlogout();
  lastlogout_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 8;
inline bool SocialRoleProto::has_facade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SocialRoleProto::set_has_facade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SocialRoleProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SocialRoleProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& SocialRoleProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* SocialRoleProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* SocialRoleProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void SocialRoleProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint32 vip_level = 9;
inline bool SocialRoleProto::has_vip_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SocialRoleProto::set_has_vip_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SocialRoleProto::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SocialRoleProto::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 SocialRoleProto::vip_level() const {
  return vip_level_;
}
inline void SocialRoleProto::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional uint32 zid = 10;
inline bool SocialRoleProto::has_zid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SocialRoleProto::set_has_zid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SocialRoleProto::clear_has_zid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SocialRoleProto::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 SocialRoleProto::zid() const {
  return zid_;
}
inline void SocialRoleProto::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional bool isonline = 11;
inline bool SocialRoleProto::has_isonline() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SocialRoleProto::set_has_isonline() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SocialRoleProto::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SocialRoleProto::clear_isonline() {
  isonline_ = false;
  clear_has_isonline();
}
inline bool SocialRoleProto::isonline() const {
  return isonline_;
}
inline void SocialRoleProto::set_isonline(bool value) {
  set_has_isonline();
  isonline_ = value;
}

// optional int64 hp = 12;
inline bool SocialRoleProto::has_hp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SocialRoleProto::set_has_hp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SocialRoleProto::clear_has_hp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SocialRoleProto::clear_hp() {
  hp_ = GOOGLE_LONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::int64 SocialRoleProto::hp() const {
  return hp_;
}
inline void SocialRoleProto::set_hp(::google::protobuf::int64 value) {
  set_has_hp();
  hp_ = value;
}

// optional int64 max_hp = 13;
inline bool SocialRoleProto::has_max_hp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SocialRoleProto::set_has_max_hp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SocialRoleProto::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SocialRoleProto::clear_max_hp() {
  max_hp_ = GOOGLE_LONGLONG(0);
  clear_has_max_hp();
}
inline ::google::protobuf::int64 SocialRoleProto::max_hp() const {
  return max_hp_;
}
inline void SocialRoleProto::set_max_hp(::google::protobuf::int64 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// optional uint64 sceneid = 14;
inline bool SocialRoleProto::has_sceneid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SocialRoleProto::set_has_sceneid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SocialRoleProto::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SocialRoleProto::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 SocialRoleProto::sceneid() const {
  return sceneid_;
}
inline void SocialRoleProto::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 mapid = 15;
inline bool SocialRoleProto::has_mapid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SocialRoleProto::set_has_mapid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SocialRoleProto::clear_has_mapid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SocialRoleProto::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 SocialRoleProto::mapid() const {
  return mapid_;
}
inline void SocialRoleProto::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// Attr

// required uint32 id = 1;
inline bool Attr::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attr::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attr::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attr::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Attr::id() const {
  return id_;
}
inline void Attr::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 value = 2;
inline bool Attr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attr::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 Attr::value() const {
  return value_;
}
inline void Attr::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// BlueStarAttr

// optional uint32 id = 1;
inline bool BlueStarAttr::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlueStarAttr::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlueStarAttr::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlueStarAttr::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BlueStarAttr::id() const {
  return id_;
}
inline void BlueStarAttr::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 value = 2;
inline bool BlueStarAttr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlueStarAttr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BlueStarAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BlueStarAttr::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 BlueStarAttr::value() const {
  return value_;
}
inline void BlueStarAttr::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// optional int32 lv_part = 3;
inline bool BlueStarAttr::has_lv_part() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlueStarAttr::set_has_lv_part() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlueStarAttr::clear_has_lv_part() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlueStarAttr::clear_lv_part() {
  lv_part_ = 0;
  clear_has_lv_part();
}
inline ::google::protobuf::int32 BlueStarAttr::lv_part() const {
  return lv_part_;
}
inline void BlueStarAttr::set_lv_part(::google::protobuf::int32 value) {
  set_has_lv_part();
  lv_part_ = value;
}

// -------------------------------------------------------------------

// PetInfo

// optional int32 instId = 1;
inline bool PetInfo::has_instid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetInfo::set_has_instid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetInfo::clear_has_instid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetInfo::clear_instid() {
  instid_ = 0;
  clear_has_instid();
}
inline ::google::protobuf::int32 PetInfo::instid() const {
  return instid_;
}
inline void PetInfo::set_instid(::google::protobuf::int32 value) {
  set_has_instid();
  instid_ = value;
}

// optional int64 cfgid = 2;
inline bool PetInfo::has_cfgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetInfo::set_has_cfgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetInfo::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetInfo::clear_cfgid() {
  cfgid_ = GOOGLE_LONGLONG(0);
  clear_has_cfgid();
}
inline ::google::protobuf::int64 PetInfo::cfgid() const {
  return cfgid_;
}
inline void PetInfo::set_cfgid(::google::protobuf::int64 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// optional int32 lv = 3;
inline bool PetInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetInfo::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 PetInfo::lv() const {
  return lv_;
}
inline void PetInfo::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 steplv = 4;
inline bool PetInfo::has_steplv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetInfo::set_has_steplv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetInfo::clear_has_steplv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetInfo::clear_steplv() {
  steplv_ = 0;
  clear_has_steplv();
}
inline ::google::protobuf::int32 PetInfo::steplv() const {
  return steplv_;
}
inline void PetInfo::set_steplv(::google::protobuf::int32 value) {
  set_has_steplv();
  steplv_ = value;
}

// optional int32 starlv = 5;
inline bool PetInfo::has_starlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetInfo::set_has_starlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetInfo::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetInfo::clear_starlv() {
  starlv_ = 0;
  clear_has_starlv();
}
inline ::google::protobuf::int32 PetInfo::starlv() const {
  return starlv_;
}
inline void PetInfo::set_starlv(::google::protobuf::int32 value) {
  set_has_starlv();
  starlv_ = value;
}

// optional int32 activeSkillLv = 6;
inline bool PetInfo::has_activeskilllv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PetInfo::set_has_activeskilllv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PetInfo::clear_has_activeskilllv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PetInfo::clear_activeskilllv() {
  activeskilllv_ = 0;
  clear_has_activeskilllv();
}
inline ::google::protobuf::int32 PetInfo::activeskilllv() const {
  return activeskilllv_;
}
inline void PetInfo::set_activeskilllv(::google::protobuf::int32 value) {
  set_has_activeskilllv();
  activeskilllv_ = value;
}

// repeated int32 exclusiveSkillLvVec = 7;
inline int PetInfo::exclusiveskilllvvec_size() const {
  return exclusiveskilllvvec_.size();
}
inline void PetInfo::clear_exclusiveskilllvvec() {
  exclusiveskilllvvec_.Clear();
}
inline ::google::protobuf::int32 PetInfo::exclusiveskilllvvec(int index) const {
  return exclusiveskilllvvec_.Get(index);
}
inline void PetInfo::set_exclusiveskilllvvec(int index, ::google::protobuf::int32 value) {
  exclusiveskilllvvec_.Set(index, value);
}
inline void PetInfo::add_exclusiveskilllvvec(::google::protobuf::int32 value) {
  exclusiveskilllvvec_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PetInfo::exclusiveskilllvvec() const {
  return exclusiveskilllvvec_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PetInfo::mutable_exclusiveskilllvvec() {
  return &exclusiveskilllvvec_;
}

// repeated int32 passiveSkillLvVec = 8;
inline int PetInfo::passiveskilllvvec_size() const {
  return passiveskilllvvec_.size();
}
inline void PetInfo::clear_passiveskilllvvec() {
  passiveskilllvvec_.Clear();
}
inline ::google::protobuf::int32 PetInfo::passiveskilllvvec(int index) const {
  return passiveskilllvvec_.Get(index);
}
inline void PetInfo::set_passiveskilllvvec(int index, ::google::protobuf::int32 value) {
  passiveskilllvvec_.Set(index, value);
}
inline void PetInfo::add_passiveskilllvvec(::google::protobuf::int32 value) {
  passiveskilllvvec_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PetInfo::passiveskilllvvec() const {
  return passiveskilllvvec_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PetInfo::mutable_passiveskilllvvec() {
  return &passiveskilllvvec_;
}

// optional float initgrow = 9;
inline bool PetInfo::has_initgrow() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PetInfo::set_has_initgrow() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PetInfo::clear_has_initgrow() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PetInfo::clear_initgrow() {
  initgrow_ = 0;
  clear_has_initgrow();
}
inline float PetInfo::initgrow() const {
  return initgrow_;
}
inline void PetInfo::set_initgrow(float value) {
  set_has_initgrow();
  initgrow_ = value;
}

// optional int32 slot = 10;
inline bool PetInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PetInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PetInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PetInfo::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 PetInfo::slot() const {
  return slot_;
}
inline void PetInfo::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// optional int32 lvexp = 11;
inline bool PetInfo::has_lvexp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PetInfo::set_has_lvexp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PetInfo::clear_has_lvexp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PetInfo::clear_lvexp() {
  lvexp_ = 0;
  clear_has_lvexp();
}
inline ::google::protobuf::int32 PetInfo::lvexp() const {
  return lvexp_;
}
inline void PetInfo::set_lvexp(::google::protobuf::int32 value) {
  set_has_lvexp();
  lvexp_ = value;
}

// -------------------------------------------------------------------

// PetHatchInfo

// optional int32 slot = 1;
inline bool PetHatchInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetHatchInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetHatchInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetHatchInfo::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 PetHatchInfo::slot() const {
  return slot_;
}
inline void PetHatchInfo::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// optional int32 unlock = 2;
inline bool PetHatchInfo::has_unlock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetHatchInfo::set_has_unlock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetHatchInfo::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetHatchInfo::clear_unlock() {
  unlock_ = 0;
  clear_has_unlock();
}
inline ::google::protobuf::int32 PetHatchInfo::unlock() const {
  return unlock_;
}
inline void PetHatchInfo::set_unlock(::google::protobuf::int32 value) {
  set_has_unlock();
  unlock_ = value;
}

// optional int64 eggid = 3;
inline bool PetHatchInfo::has_eggid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetHatchInfo::set_has_eggid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetHatchInfo::clear_has_eggid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetHatchInfo::clear_eggid() {
  eggid_ = GOOGLE_LONGLONG(0);
  clear_has_eggid();
}
inline ::google::protobuf::int64 PetHatchInfo::eggid() const {
  return eggid_;
}
inline void PetHatchInfo::set_eggid(::google::protobuf::int64 value) {
  set_has_eggid();
  eggid_ = value;
}

// optional int64 time = 4;
inline bool PetHatchInfo::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetHatchInfo::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetHatchInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetHatchInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 PetHatchInfo::time() const {
  return time_;
}
inline void PetHatchInfo::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ItemProtoInfo

// optional int32 index = 1;
inline bool ItemProtoInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemProtoInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemProtoInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemProtoInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ItemProtoInfo::index() const {
  return index_;
}
inline void ItemProtoInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional uint64 item_id = 2;
inline bool ItemProtoInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemProtoInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemProtoInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemProtoInfo::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 ItemProtoInfo::item_id() const {
  return item_id_;
}
inline void ItemProtoInfo::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional int64 item_num = 3;
inline bool ItemProtoInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemProtoInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemProtoInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemProtoInfo::clear_item_num() {
  item_num_ = GOOGLE_LONGLONG(0);
  clear_has_item_num();
}
inline ::google::protobuf::int64 ItemProtoInfo::item_num() const {
  return item_num_;
}
inline void ItemProtoInfo::set_item_num(::google::protobuf::int64 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional int32 bind = 4;
inline bool ItemProtoInfo::has_bind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemProtoInfo::set_has_bind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemProtoInfo::clear_has_bind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemProtoInfo::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 ItemProtoInfo::bind() const {
  return bind_;
}
inline void ItemProtoInfo::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
}

// optional int32 level = 5;
inline bool ItemProtoInfo::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemProtoInfo::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemProtoInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemProtoInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ItemProtoInfo::level() const {
  return level_;
}
inline void ItemProtoInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// repeated .proto_ff.Attr base = 6;
inline int ItemProtoInfo::base_size() const {
  return base_.size();
}
inline void ItemProtoInfo::clear_base() {
  base_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::base(int index) const {
  return base_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_base(int index) {
  return base_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_base() {
  return base_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::base() const {
  return base_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_base() {
  return &base_;
}

// repeated .proto_ff.Attr refine = 7;
inline int ItemProtoInfo::refine_size() const {
  return refine_.size();
}
inline void ItemProtoInfo::clear_refine() {
  refine_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::refine(int index) const {
  return refine_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_refine(int index) {
  return refine_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_refine() {
  return refine_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::refine() const {
  return refine_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_refine() {
  return &refine_;
}

// repeated .proto_ff.BlueStarAttr blue = 8;
inline int ItemProtoInfo::blue_size() const {
  return blue_.size();
}
inline void ItemProtoInfo::clear_blue() {
  blue_.Clear();
}
inline const ::proto_ff::BlueStarAttr& ItemProtoInfo::blue(int index) const {
  return blue_.Get(index);
}
inline ::proto_ff::BlueStarAttr* ItemProtoInfo::mutable_blue(int index) {
  return blue_.Mutable(index);
}
inline ::proto_ff::BlueStarAttr* ItemProtoInfo::add_blue() {
  return blue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >&
ItemProtoInfo::blue() const {
  return blue_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BlueStarAttr >*
ItemProtoInfo::mutable_blue() {
  return &blue_;
}

// repeated .proto_ff.Attr god = 9;
inline int ItemProtoInfo::god_size() const {
  return god_.size();
}
inline void ItemProtoInfo::clear_god() {
  god_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::god(int index) const {
  return god_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_god(int index) {
  return god_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_god() {
  return god_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::god() const {
  return god_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_god() {
  return &god_;
}

// repeated .proto_ff.Attr special = 10;
inline int ItemProtoInfo::special_size() const {
  return special_.size();
}
inline void ItemProtoInfo::clear_special() {
  special_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::special(int index) const {
  return special_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_special(int index) {
  return special_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_special() {
  return special_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::special() const {
  return special_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_special() {
  return &special_;
}

// optional uint64 expireTime = 11;
inline bool ItemProtoInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemProtoInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemProtoInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemProtoInfo::clear_expiretime() {
  expiretime_ = GOOGLE_ULONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::uint64 ItemProtoInfo::expiretime() const {
  return expiretime_;
}
inline void ItemProtoInfo::set_expiretime(::google::protobuf::uint64 value) {
  set_has_expiretime();
  expiretime_ = value;
}

// optional int32 strong_lv = 12;
inline bool ItemProtoInfo::has_strong_lv() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemProtoInfo::set_has_strong_lv() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemProtoInfo::clear_has_strong_lv() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemProtoInfo::clear_strong_lv() {
  strong_lv_ = 0;
  clear_has_strong_lv();
}
inline ::google::protobuf::int32 ItemProtoInfo::strong_lv() const {
  return strong_lv_;
}
inline void ItemProtoInfo::set_strong_lv(::google::protobuf::int32 value) {
  set_has_strong_lv();
  strong_lv_ = value;
}

// optional int32 strong_wear_quality = 13;
inline bool ItemProtoInfo::has_strong_wear_quality() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemProtoInfo::set_has_strong_wear_quality() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemProtoInfo::clear_has_strong_wear_quality() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemProtoInfo::clear_strong_wear_quality() {
  strong_wear_quality_ = 0;
  clear_has_strong_wear_quality();
}
inline ::google::protobuf::int32 ItemProtoInfo::strong_wear_quality() const {
  return strong_wear_quality_;
}
inline void ItemProtoInfo::set_strong_wear_quality(::google::protobuf::int32 value) {
  set_has_strong_wear_quality();
  strong_wear_quality_ = value;
}

// -------------------------------------------------------------------

// StoneSlotInfo

// optional int32 stone_pos = 1;
inline bool StoneSlotInfo::has_stone_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoneSlotInfo::set_has_stone_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoneSlotInfo::clear_has_stone_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoneSlotInfo::clear_stone_pos() {
  stone_pos_ = 0;
  clear_has_stone_pos();
}
inline ::google::protobuf::int32 StoneSlotInfo::stone_pos() const {
  return stone_pos_;
}
inline void StoneSlotInfo::set_stone_pos(::google::protobuf::int32 value) {
  set_has_stone_pos();
  stone_pos_ = value;
}

// optional int64 stoneid = 2;
inline bool StoneSlotInfo::has_stoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoneSlotInfo::set_has_stoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoneSlotInfo::clear_has_stoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoneSlotInfo::clear_stoneid() {
  stoneid_ = GOOGLE_LONGLONG(0);
  clear_has_stoneid();
}
inline ::google::protobuf::int64 StoneSlotInfo::stoneid() const {
  return stoneid_;
}
inline void StoneSlotInfo::set_stoneid(::google::protobuf::int64 value) {
  set_has_stoneid();
  stoneid_ = value;
}

// -------------------------------------------------------------------

// WashSlotInfo

// optional int32 slot = 1;
inline bool WashSlotInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WashSlotInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WashSlotInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WashSlotInfo::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 WashSlotInfo::slot() const {
  return slot_;
}
inline void WashSlotInfo::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// optional int32 quality = 2;
inline bool WashSlotInfo::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WashSlotInfo::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WashSlotInfo::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WashSlotInfo::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 WashSlotInfo::quality() const {
  return quality_;
}
inline void WashSlotInfo::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 lock = 3;
inline bool WashSlotInfo::has_lock() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WashSlotInfo::set_has_lock() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WashSlotInfo::clear_has_lock() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WashSlotInfo::clear_lock() {
  lock_ = 0;
  clear_has_lock();
}
inline ::google::protobuf::int32 WashSlotInfo::lock() const {
  return lock_;
}
inline void WashSlotInfo::set_lock(::google::protobuf::int32 value) {
  set_has_lock();
  lock_ = value;
}

// optional int32 id = 4;
inline bool WashSlotInfo::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WashSlotInfo::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WashSlotInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WashSlotInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WashSlotInfo::id() const {
  return id_;
}
inline void WashSlotInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 value = 5;
inline bool WashSlotInfo::has_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WashSlotInfo::set_has_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WashSlotInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WashSlotInfo::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 WashSlotInfo::value() const {
  return value_;
}
inline void WashSlotInfo::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// EquipSlotInfo

// optional int32 slot_pos = 1;
inline bool EquipSlotInfo::has_slot_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSlotInfo::set_has_slot_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSlotInfo::clear_has_slot_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSlotInfo::clear_slot_pos() {
  slot_pos_ = 0;
  clear_has_slot_pos();
}
inline ::google::protobuf::int32 EquipSlotInfo::slot_pos() const {
  return slot_pos_;
}
inline void EquipSlotInfo::set_slot_pos(::google::protobuf::int32 value) {
  set_has_slot_pos();
  slot_pos_ = value;
}

// optional int64 total_score = 2;
inline bool EquipSlotInfo::has_total_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSlotInfo::set_has_total_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSlotInfo::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSlotInfo::clear_total_score() {
  total_score_ = GOOGLE_LONGLONG(0);
  clear_has_total_score();
}
inline ::google::protobuf::int64 EquipSlotInfo::total_score() const {
  return total_score_;
}
inline void EquipSlotInfo::set_total_score(::google::protobuf::int64 value) {
  set_has_total_score();
  total_score_ = value;
}

// optional int32 stronglv = 3;
inline bool EquipSlotInfo::has_stronglv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipSlotInfo::set_has_stronglv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipSlotInfo::clear_has_stronglv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipSlotInfo::clear_stronglv() {
  stronglv_ = 0;
  clear_has_stronglv();
}
inline ::google::protobuf::int32 EquipSlotInfo::stronglv() const {
  return stronglv_;
}
inline void EquipSlotInfo::set_stronglv(::google::protobuf::int32 value) {
  set_has_stronglv();
  stronglv_ = value;
}

// repeated .proto_ff.StoneSlotInfo stones = 4;
inline int EquipSlotInfo::stones_size() const {
  return stones_.size();
}
inline void EquipSlotInfo::clear_stones() {
  stones_.Clear();
}
inline const ::proto_ff::StoneSlotInfo& EquipSlotInfo::stones(int index) const {
  return stones_.Get(index);
}
inline ::proto_ff::StoneSlotInfo* EquipSlotInfo::mutable_stones(int index) {
  return stones_.Mutable(index);
}
inline ::proto_ff::StoneSlotInfo* EquipSlotInfo::add_stones() {
  return stones_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::StoneSlotInfo >&
EquipSlotInfo::stones() const {
  return stones_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::StoneSlotInfo >*
EquipSlotInfo::mutable_stones() {
  return &stones_;
}

// optional int32 stone_pay_slot_open = 5;
inline bool EquipSlotInfo::has_stone_pay_slot_open() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipSlotInfo::set_has_stone_pay_slot_open() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipSlotInfo::clear_has_stone_pay_slot_open() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipSlotInfo::clear_stone_pay_slot_open() {
  stone_pay_slot_open_ = 0;
  clear_has_stone_pay_slot_open();
}
inline ::google::protobuf::int32 EquipSlotInfo::stone_pay_slot_open() const {
  return stone_pay_slot_open_;
}
inline void EquipSlotInfo::set_stone_pay_slot_open(::google::protobuf::int32 value) {
  set_has_stone_pay_slot_open();
  stone_pay_slot_open_ = value;
}

// repeated .proto_ff.WashSlotInfo washs = 6;
inline int EquipSlotInfo::washs_size() const {
  return washs_.size();
}
inline void EquipSlotInfo::clear_washs() {
  washs_.Clear();
}
inline const ::proto_ff::WashSlotInfo& EquipSlotInfo::washs(int index) const {
  return washs_.Get(index);
}
inline ::proto_ff::WashSlotInfo* EquipSlotInfo::mutable_washs(int index) {
  return washs_.Mutable(index);
}
inline ::proto_ff::WashSlotInfo* EquipSlotInfo::add_washs() {
  return washs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WashSlotInfo >&
EquipSlotInfo::washs() const {
  return washs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WashSlotInfo >*
EquipSlotInfo::mutable_washs() {
  return &washs_;
}

// optional int32 suitlv = 7;
inline bool EquipSlotInfo::has_suitlv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EquipSlotInfo::set_has_suitlv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EquipSlotInfo::clear_has_suitlv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EquipSlotInfo::clear_suitlv() {
  suitlv_ = 0;
  clear_has_suitlv();
}
inline ::google::protobuf::int32 EquipSlotInfo::suitlv() const {
  return suitlv_;
}
inline void EquipSlotInfo::set_suitlv(::google::protobuf::int32 value) {
  set_has_suitlv();
  suitlv_ = value;
}

// -------------------------------------------------------------------

// EquipInfo

// optional int32 pos = 1;
inline bool EquipInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 EquipInfo::pos() const {
  return pos_;
}
inline void EquipInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// optional .proto_ff.ItemProtoInfo equip = 2;
inline bool EquipInfo::has_equip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipInfo::set_has_equip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipInfo::clear_has_equip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipInfo::clear_equip() {
  if (equip_ != NULL) equip_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_equip();
}
inline const ::proto_ff::ItemProtoInfo& EquipInfo::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::proto_ff::ItemProtoInfo* EquipInfo::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::proto_ff::ItemProtoInfo;
  return equip_;
}
inline ::proto_ff::ItemProtoInfo* EquipInfo::release_equip() {
  clear_has_equip();
  ::proto_ff::ItemProtoInfo* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void EquipInfo::set_allocated_equip(::proto_ff::ItemProtoInfo* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
}

// optional .proto_ff.EquipSlotInfo slot = 3;
inline bool EquipInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipInfo::clear_slot() {
  if (slot_ != NULL) slot_->::proto_ff::EquipSlotInfo::Clear();
  clear_has_slot();
}
inline const ::proto_ff::EquipSlotInfo& EquipInfo::slot() const {
  return slot_ != NULL ? *slot_ : *default_instance_->slot_;
}
inline ::proto_ff::EquipSlotInfo* EquipInfo::mutable_slot() {
  set_has_slot();
  if (slot_ == NULL) slot_ = new ::proto_ff::EquipSlotInfo;
  return slot_;
}
inline ::proto_ff::EquipSlotInfo* EquipInfo::release_slot() {
  clear_has_slot();
  ::proto_ff::EquipSlotInfo* temp = slot_;
  slot_ = NULL;
  return temp;
}
inline void EquipInfo::set_allocated_slot(::proto_ff::EquipSlotInfo* slot) {
  delete slot_;
  slot_ = slot;
  if (slot) {
    set_has_slot();
  } else {
    clear_has_slot();
  }
}

// -------------------------------------------------------------------

// EquipLvAttrInfo

// optional int32 type = 1;
inline bool EquipLvAttrInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipLvAttrInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipLvAttrInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipLvAttrInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 EquipLvAttrInfo::type() const {
  return type_;
}
inline void EquipLvAttrInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 id = 2;
inline bool EquipLvAttrInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipLvAttrInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipLvAttrInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipLvAttrInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 EquipLvAttrInfo::id() const {
  return id_;
}
inline void EquipLvAttrInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ItemSimpleProto

// optional uint64 itemid = 1;
inline bool ItemSimpleProto::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemSimpleProto::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemSimpleProto::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemSimpleProto::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 ItemSimpleProto::itemid() const {
  return itemid_;
}
inline void ItemSimpleProto::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int64 num = 2;
inline bool ItemSimpleProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemSimpleProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemSimpleProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemSimpleProto::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::int64 ItemSimpleProto::num() const {
  return num_;
}
inline void ItemSimpleProto::set_num(::google::protobuf::int64 value) {
  set_has_num();
  num_ = value;
}

// optional int32 bind = 3;
inline bool ItemSimpleProto::has_bind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemSimpleProto::set_has_bind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemSimpleProto::clear_has_bind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemSimpleProto::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 ItemSimpleProto::bind() const {
  return bind_;
}
inline void ItemSimpleProto::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
}

// -------------------------------------------------------------------

// MultItemSimpleProto

// repeated .proto_ff.ItemSimpleProto info = 1;
inline int MultItemSimpleProto::info_size() const {
  return info_.size();
}
inline void MultItemSimpleProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::ItemSimpleProto& MultItemSimpleProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::ItemSimpleProto* MultItemSimpleProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::ItemSimpleProto* MultItemSimpleProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >&
MultItemSimpleProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemSimpleProto >*
MultItemSimpleProto::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// MailParamProto

// optional uint64 cfgid = 1;
inline bool MailParamProto::has_cfgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailParamProto::set_has_cfgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailParamProto::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailParamProto::clear_cfgid() {
  cfgid_ = GOOGLE_ULONGLONG(0);
  clear_has_cfgid();
}
inline ::google::protobuf::uint64 MailParamProto::cfgid() const {
  return cfgid_;
}
inline void MailParamProto::set_cfgid(::google::protobuf::uint64 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// repeated bytes str_param = 2;
inline int MailParamProto::str_param_size() const {
  return str_param_.size();
}
inline void MailParamProto::clear_str_param() {
  str_param_.Clear();
}
inline const ::std::string& MailParamProto::str_param(int index) const {
  return str_param_.Get(index);
}
inline ::std::string* MailParamProto::mutable_str_param(int index) {
  return str_param_.Mutable(index);
}
inline void MailParamProto::set_str_param(int index, const ::std::string& value) {
  str_param_.Mutable(index)->assign(value);
}
inline void MailParamProto::set_str_param(int index, const char* value) {
  str_param_.Mutable(index)->assign(value);
}
inline void MailParamProto::set_str_param(int index, const void* value, size_t size) {
  str_param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailParamProto::add_str_param() {
  return str_param_.Add();
}
inline void MailParamProto::add_str_param(const ::std::string& value) {
  str_param_.Add()->assign(value);
}
inline void MailParamProto::add_str_param(const char* value) {
  str_param_.Add()->assign(value);
}
inline void MailParamProto::add_str_param(const void* value, size_t size) {
  str_param_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MailParamProto::str_param() const {
  return str_param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MailParamProto::mutable_str_param() {
  return &str_param_;
}

// repeated uint64 int_param = 3;
inline int MailParamProto::int_param_size() const {
  return int_param_.size();
}
inline void MailParamProto::clear_int_param() {
  int_param_.Clear();
}
inline ::google::protobuf::uint64 MailParamProto::int_param(int index) const {
  return int_param_.Get(index);
}
inline void MailParamProto::set_int_param(int index, ::google::protobuf::uint64 value) {
  int_param_.Set(index, value);
}
inline void MailParamProto::add_int_param(::google::protobuf::uint64 value) {
  int_param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MailParamProto::int_param() const {
  return int_param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MailParamProto::mutable_int_param() {
  return &int_param_;
}

// -------------------------------------------------------------------

// MailStrProto

// optional bytes str = 1;
inline bool MailStrProto::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailStrProto::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailStrProto::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailStrProto::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& MailStrProto::str() const {
  return *str_;
}
inline void MailStrProto::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void MailStrProto::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void MailStrProto::set_str(const void* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailStrProto::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* MailStrProto::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailStrProto::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_ff.MailParamProto param = 2;
inline bool MailStrProto::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailStrProto::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailStrProto::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailStrProto::clear_param() {
  if (param_ != NULL) param_->::proto_ff::MailParamProto::Clear();
  clear_has_param();
}
inline const ::proto_ff::MailParamProto& MailStrProto::param() const {
  return param_ != NULL ? *param_ : *default_instance_->param_;
}
inline ::proto_ff::MailParamProto* MailStrProto::mutable_param() {
  set_has_param();
  if (param_ == NULL) param_ = new ::proto_ff::MailParamProto;
  return param_;
}
inline ::proto_ff::MailParamProto* MailStrProto::release_param() {
  clear_has_param();
  ::proto_ff::MailParamProto* temp = param_;
  param_ = NULL;
  return temp;
}
inline void MailStrProto::set_allocated_param(::proto_ff::MailParamProto* param) {
  delete param_;
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
}

// -------------------------------------------------------------------

// MailAttachmentList

// repeated .proto_ff.ItemProtoInfo itemInfo = 1;
inline int MailAttachmentList::iteminfo_size() const {
  return iteminfo_.size();
}
inline void MailAttachmentList::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& MailAttachmentList::iteminfo(int index) const {
  return iteminfo_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* MailAttachmentList::mutable_iteminfo(int index) {
  return iteminfo_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* MailAttachmentList::add_iteminfo() {
  return iteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
MailAttachmentList::iteminfo() const {
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
MailAttachmentList::mutable_iteminfo() {
  return &iteminfo_;
}

// -------------------------------------------------------------------

// MailHead

// optional uint64 mailId = 1;
inline bool MailHead::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailHead::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailHead::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailHead::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 MailHead::mailid() const {
  return mailid_;
}
inline void MailHead::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional uint32 type = 2;
inline bool MailHead::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailHead::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailHead::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailHead::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MailHead::type() const {
  return type_;
}
inline void MailHead::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 sendPlayerId = 3;
inline bool MailHead::has_sendplayerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailHead::set_has_sendplayerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailHead::clear_has_sendplayerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailHead::clear_sendplayerid() {
  sendplayerid_ = GOOGLE_ULONGLONG(0);
  clear_has_sendplayerid();
}
inline ::google::protobuf::uint64 MailHead::sendplayerid() const {
  return sendplayerid_;
}
inline void MailHead::set_sendplayerid(::google::protobuf::uint64 value) {
  set_has_sendplayerid();
  sendplayerid_ = value;
}

// optional bytes sendPlayerName = 4;
inline bool MailHead::has_sendplayername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailHead::set_has_sendplayername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailHead::clear_has_sendplayername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailHead::clear_sendplayername() {
  if (sendplayername_ != &::google::protobuf::internal::kEmptyString) {
    sendplayername_->clear();
  }
  clear_has_sendplayername();
}
inline const ::std::string& MailHead::sendplayername() const {
  return *sendplayername_;
}
inline void MailHead::set_sendplayername(const ::std::string& value) {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  sendplayername_->assign(value);
}
inline void MailHead::set_sendplayername(const char* value) {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  sendplayername_->assign(value);
}
inline void MailHead::set_sendplayername(const void* value, size_t size) {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  sendplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailHead::mutable_sendplayername() {
  set_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    sendplayername_ = new ::std::string;
  }
  return sendplayername_;
}
inline ::std::string* MailHead::release_sendplayername() {
  clear_has_sendplayername();
  if (sendplayername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sendplayername_;
    sendplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailHead::set_allocated_sendplayername(::std::string* sendplayername) {
  if (sendplayername_ != &::google::protobuf::internal::kEmptyString) {
    delete sendplayername_;
  }
  if (sendplayername) {
    set_has_sendplayername();
    sendplayername_ = sendplayername;
  } else {
    clear_has_sendplayername();
    sendplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 destPlayerId = 5;
inline bool MailHead::has_destplayerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailHead::set_has_destplayerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailHead::clear_has_destplayerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailHead::clear_destplayerid() {
  destplayerid_ = GOOGLE_ULONGLONG(0);
  clear_has_destplayerid();
}
inline ::google::protobuf::uint64 MailHead::destplayerid() const {
  return destplayerid_;
}
inline void MailHead::set_destplayerid(::google::protobuf::uint64 value) {
  set_has_destplayerid();
  destplayerid_ = value;
}

// optional .proto_ff.MailStrProto topic = 6;
inline bool MailHead::has_topic() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailHead::set_has_topic() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailHead::clear_has_topic() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailHead::clear_topic() {
  if (topic_ != NULL) topic_->::proto_ff::MailStrProto::Clear();
  clear_has_topic();
}
inline const ::proto_ff::MailStrProto& MailHead::topic() const {
  return topic_ != NULL ? *topic_ : *default_instance_->topic_;
}
inline ::proto_ff::MailStrProto* MailHead::mutable_topic() {
  set_has_topic();
  if (topic_ == NULL) topic_ = new ::proto_ff::MailStrProto;
  return topic_;
}
inline ::proto_ff::MailStrProto* MailHead::release_topic() {
  clear_has_topic();
  ::proto_ff::MailStrProto* temp = topic_;
  topic_ = NULL;
  return temp;
}
inline void MailHead::set_allocated_topic(::proto_ff::MailStrProto* topic) {
  delete topic_;
  topic_ = topic;
  if (topic) {
    set_has_topic();
  } else {
    clear_has_topic();
  }
}

// optional uint64 createTime = 7;
inline bool MailHead::has_createtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailHead::set_has_createtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailHead::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailHead::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 MailHead::createtime() const {
  return createtime_;
}
inline void MailHead::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional uint32 status = 8;
inline bool MailHead::has_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailHead::set_has_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailHead::clear_has_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailHead::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 MailHead::status() const {
  return status_;
}
inline void MailHead::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 fetch = 9;
inline bool MailHead::has_fetch() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailHead::set_has_fetch() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailHead::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailHead::clear_fetch() {
  fetch_ = 0;
  clear_has_fetch();
}
inline ::google::protobuf::int32 MailHead::fetch() const {
  return fetch_;
}
inline void MailHead::set_fetch(::google::protobuf::int32 value) {
  set_has_fetch();
  fetch_ = value;
}

// optional int32 has_attach = 10;
inline bool MailHead::has_has_attach() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailHead::set_has_has_attach() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailHead::clear_has_has_attach() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailHead::clear_has_attach() {
  has_attach_ = 0;
  clear_has_has_attach();
}
inline ::google::protobuf::int32 MailHead::has_attach() const {
  return has_attach_;
}
inline void MailHead::set_has_attach(::google::protobuf::int32 value) {
  set_has_has_attach();
  has_attach_ = value;
}

// optional uint64 begin_time = 11;
inline bool MailHead::has_begin_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MailHead::set_has_begin_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MailHead::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MailHead::clear_begin_time() {
  begin_time_ = GOOGLE_ULONGLONG(0);
  clear_has_begin_time();
}
inline ::google::protobuf::uint64 MailHead::begin_time() const {
  return begin_time_;
}
inline void MailHead::set_begin_time(::google::protobuf::uint64 value) {
  set_has_begin_time();
  begin_time_ = value;
}

// optional uint64 end_time = 12;
inline bool MailHead::has_end_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MailHead::set_has_end_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MailHead::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MailHead::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 MailHead::end_time() const {
  return end_time_;
}
inline void MailHead::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// -------------------------------------------------------------------

// MailInfo

// optional .proto_ff.MailHead mailHead = 1;
inline bool MailInfo::has_mailhead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailInfo::set_has_mailhead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailInfo::clear_has_mailhead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailInfo::clear_mailhead() {
  if (mailhead_ != NULL) mailhead_->::proto_ff::MailHead::Clear();
  clear_has_mailhead();
}
inline const ::proto_ff::MailHead& MailInfo::mailhead() const {
  return mailhead_ != NULL ? *mailhead_ : *default_instance_->mailhead_;
}
inline ::proto_ff::MailHead* MailInfo::mutable_mailhead() {
  set_has_mailhead();
  if (mailhead_ == NULL) mailhead_ = new ::proto_ff::MailHead;
  return mailhead_;
}
inline ::proto_ff::MailHead* MailInfo::release_mailhead() {
  clear_has_mailhead();
  ::proto_ff::MailHead* temp = mailhead_;
  mailhead_ = NULL;
  return temp;
}
inline void MailInfo::set_allocated_mailhead(::proto_ff::MailHead* mailhead) {
  delete mailhead_;
  mailhead_ = mailhead;
  if (mailhead) {
    set_has_mailhead();
  } else {
    clear_has_mailhead();
  }
}

// optional .proto_ff.MailStrProto content = 2;
inline bool MailInfo::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailInfo::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailInfo::clear_content() {
  if (content_ != NULL) content_->::proto_ff::MailStrProto::Clear();
  clear_has_content();
}
inline const ::proto_ff::MailStrProto& MailInfo::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::proto_ff::MailStrProto* MailInfo::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::proto_ff::MailStrProto;
  return content_;
}
inline ::proto_ff::MailStrProto* MailInfo::release_content() {
  clear_has_content();
  ::proto_ff::MailStrProto* temp = content_;
  content_ = NULL;
  return temp;
}
inline void MailInfo::set_allocated_content(::proto_ff::MailStrProto* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// optional uint64 gold = 3;
inline bool MailInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailInfo::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::uint64 MailInfo::gold() const {
  return gold_;
}
inline void MailInfo::set_gold(::google::protobuf::uint64 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint64 diamond = 4;
inline bool MailInfo::has_diamond() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailInfo::set_has_diamond() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailInfo::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailInfo::clear_diamond() {
  diamond_ = GOOGLE_ULONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::uint64 MailInfo::diamond() const {
  return diamond_;
}
inline void MailInfo::set_diamond(::google::protobuf::uint64 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint64 bindDiamond = 5;
inline bool MailInfo::has_binddiamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailInfo::set_has_binddiamond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailInfo::clear_has_binddiamond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailInfo::clear_binddiamond() {
  binddiamond_ = GOOGLE_ULONGLONG(0);
  clear_has_binddiamond();
}
inline ::google::protobuf::uint64 MailInfo::binddiamond() const {
  return binddiamond_;
}
inline void MailInfo::set_binddiamond(::google::protobuf::uint64 value) {
  set_has_binddiamond();
  binddiamond_ = value;
}

// optional uint64 magiccrystal = 6;
inline bool MailInfo::has_magiccrystal() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailInfo::set_has_magiccrystal() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailInfo::clear_has_magiccrystal() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailInfo::clear_magiccrystal() {
  magiccrystal_ = GOOGLE_ULONGLONG(0);
  clear_has_magiccrystal();
}
inline ::google::protobuf::uint64 MailInfo::magiccrystal() const {
  return magiccrystal_;
}
inline void MailInfo::set_magiccrystal(::google::protobuf::uint64 value) {
  set_has_magiccrystal();
  magiccrystal_ = value;
}

// optional uint64 prestige = 7;
inline bool MailInfo::has_prestige() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailInfo::set_has_prestige() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailInfo::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailInfo::clear_prestige() {
  prestige_ = GOOGLE_ULONGLONG(0);
  clear_has_prestige();
}
inline ::google::protobuf::uint64 MailInfo::prestige() const {
  return prestige_;
}
inline void MailInfo::set_prestige(::google::protobuf::uint64 value) {
  set_has_prestige();
  prestige_ = value;
}

// optional .proto_ff.MailAttachmentList attachmentList = 8;
inline bool MailInfo::has_attachmentlist() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailInfo::set_has_attachmentlist() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailInfo::clear_has_attachmentlist() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailInfo::clear_attachmentlist() {
  if (attachmentlist_ != NULL) attachmentlist_->::proto_ff::MailAttachmentList::Clear();
  clear_has_attachmentlist();
}
inline const ::proto_ff::MailAttachmentList& MailInfo::attachmentlist() const {
  return attachmentlist_ != NULL ? *attachmentlist_ : *default_instance_->attachmentlist_;
}
inline ::proto_ff::MailAttachmentList* MailInfo::mutable_attachmentlist() {
  set_has_attachmentlist();
  if (attachmentlist_ == NULL) attachmentlist_ = new ::proto_ff::MailAttachmentList;
  return attachmentlist_;
}
inline ::proto_ff::MailAttachmentList* MailInfo::release_attachmentlist() {
  clear_has_attachmentlist();
  ::proto_ff::MailAttachmentList* temp = attachmentlist_;
  attachmentlist_ = NULL;
  return temp;
}
inline void MailInfo::set_allocated_attachmentlist(::proto_ff::MailAttachmentList* attachmentlist) {
  delete attachmentlist_;
  attachmentlist_ = attachmentlist;
  if (attachmentlist) {
    set_has_attachmentlist();
  } else {
    clear_has_attachmentlist();
  }
}

// optional int32 source = 9;
inline bool MailInfo::has_source() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailInfo::set_has_source() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailInfo::clear_has_source() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailInfo::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::google::protobuf::int32 MailInfo::source() const {
  return source_;
}
inline void MailInfo::set_source(::google::protobuf::int32 value) {
  set_has_source();
  source_ = value;
}

// optional int64 sourceVal = 10;
inline bool MailInfo::has_sourceval() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailInfo::set_has_sourceval() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailInfo::clear_has_sourceval() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailInfo::clear_sourceval() {
  sourceval_ = GOOGLE_LONGLONG(0);
  clear_has_sourceval();
}
inline ::google::protobuf::int64 MailInfo::sourceval() const {
  return sourceval_;
}
inline void MailInfo::set_sourceval(::google::protobuf::int64 value) {
  set_has_sourceval();
  sourceval_ = value;
}

// -------------------------------------------------------------------

// WebMailItemProto

// optional uint64 id = 1;
inline bool WebMailItemProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebMailItemProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebMailItemProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebMailItemProto::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 WebMailItemProto::id() const {
  return id_;
}
inline void WebMailItemProto::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 num = 2;
inline bool WebMailItemProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebMailItemProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebMailItemProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebMailItemProto::clear_num() {
  num_ = GOOGLE_ULONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::uint64 WebMailItemProto::num() const {
  return num_;
}
inline void WebMailItemProto::set_num(::google::protobuf::uint64 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// WebMailDataProto

// optional uint64 mailId = 1;
inline bool WebMailDataProto::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebMailDataProto::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebMailDataProto::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebMailDataProto::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 WebMailDataProto::mailid() const {
  return mailid_;
}
inline void WebMailDataProto::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional uint64 createTime = 2;
inline bool WebMailDataProto::has_createtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebMailDataProto::set_has_createtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebMailDataProto::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebMailDataProto::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 WebMailDataProto::createtime() const {
  return createtime_;
}
inline void WebMailDataProto::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional .proto_ff.MailStrProto topic = 3;
inline bool WebMailDataProto::has_topic() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebMailDataProto::set_has_topic() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebMailDataProto::clear_has_topic() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebMailDataProto::clear_topic() {
  if (topic_ != NULL) topic_->::proto_ff::MailStrProto::Clear();
  clear_has_topic();
}
inline const ::proto_ff::MailStrProto& WebMailDataProto::topic() const {
  return topic_ != NULL ? *topic_ : *default_instance_->topic_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::mutable_topic() {
  set_has_topic();
  if (topic_ == NULL) topic_ = new ::proto_ff::MailStrProto;
  return topic_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::release_topic() {
  clear_has_topic();
  ::proto_ff::MailStrProto* temp = topic_;
  topic_ = NULL;
  return temp;
}
inline void WebMailDataProto::set_allocated_topic(::proto_ff::MailStrProto* topic) {
  delete topic_;
  topic_ = topic;
  if (topic) {
    set_has_topic();
  } else {
    clear_has_topic();
  }
}

// optional int32 fetch = 4;
inline bool WebMailDataProto::has_fetch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebMailDataProto::set_has_fetch() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebMailDataProto::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebMailDataProto::clear_fetch() {
  fetch_ = 0;
  clear_has_fetch();
}
inline ::google::protobuf::int32 WebMailDataProto::fetch() const {
  return fetch_;
}
inline void WebMailDataProto::set_fetch(::google::protobuf::int32 value) {
  set_has_fetch();
  fetch_ = value;
}

// optional .proto_ff.MailStrProto content = 5;
inline bool WebMailDataProto::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebMailDataProto::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebMailDataProto::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebMailDataProto::clear_content() {
  if (content_ != NULL) content_->::proto_ff::MailStrProto::Clear();
  clear_has_content();
}
inline const ::proto_ff::MailStrProto& WebMailDataProto::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::proto_ff::MailStrProto;
  return content_;
}
inline ::proto_ff::MailStrProto* WebMailDataProto::release_content() {
  clear_has_content();
  ::proto_ff::MailStrProto* temp = content_;
  content_ = NULL;
  return temp;
}
inline void WebMailDataProto::set_allocated_content(::proto_ff::MailStrProto* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// optional uint64 gold = 6;
inline bool WebMailDataProto::has_gold() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebMailDataProto::set_has_gold() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebMailDataProto::clear_has_gold() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebMailDataProto::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::uint64 WebMailDataProto::gold() const {
  return gold_;
}
inline void WebMailDataProto::set_gold(::google::protobuf::uint64 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint64 diamond = 7;
inline bool WebMailDataProto::has_diamond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebMailDataProto::set_has_diamond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebMailDataProto::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebMailDataProto::clear_diamond() {
  diamond_ = GOOGLE_ULONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::uint64 WebMailDataProto::diamond() const {
  return diamond_;
}
inline void WebMailDataProto::set_diamond(::google::protobuf::uint64 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint64 bindDiamond = 8;
inline bool WebMailDataProto::has_binddiamond() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WebMailDataProto::set_has_binddiamond() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WebMailDataProto::clear_has_binddiamond() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WebMailDataProto::clear_binddiamond() {
  binddiamond_ = GOOGLE_ULONGLONG(0);
  clear_has_binddiamond();
}
inline ::google::protobuf::uint64 WebMailDataProto::binddiamond() const {
  return binddiamond_;
}
inline void WebMailDataProto::set_binddiamond(::google::protobuf::uint64 value) {
  set_has_binddiamond();
  binddiamond_ = value;
}

// optional uint64 arenaScore = 9;
inline bool WebMailDataProto::has_arenascore() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WebMailDataProto::set_has_arenascore() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WebMailDataProto::clear_has_arenascore() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WebMailDataProto::clear_arenascore() {
  arenascore_ = GOOGLE_ULONGLONG(0);
  clear_has_arenascore();
}
inline ::google::protobuf::uint64 WebMailDataProto::arenascore() const {
  return arenascore_;
}
inline void WebMailDataProto::set_arenascore(::google::protobuf::uint64 value) {
  set_has_arenascore();
  arenascore_ = value;
}

// optional uint64 magiccrystal = 10;
inline bool WebMailDataProto::has_magiccrystal() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WebMailDataProto::set_has_magiccrystal() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WebMailDataProto::clear_has_magiccrystal() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WebMailDataProto::clear_magiccrystal() {
  magiccrystal_ = GOOGLE_ULONGLONG(0);
  clear_has_magiccrystal();
}
inline ::google::protobuf::uint64 WebMailDataProto::magiccrystal() const {
  return magiccrystal_;
}
inline void WebMailDataProto::set_magiccrystal(::google::protobuf::uint64 value) {
  set_has_magiccrystal();
  magiccrystal_ = value;
}

// optional uint64 prestige = 11;
inline bool WebMailDataProto::has_prestige() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WebMailDataProto::set_has_prestige() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WebMailDataProto::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WebMailDataProto::clear_prestige() {
  prestige_ = GOOGLE_ULONGLONG(0);
  clear_has_prestige();
}
inline ::google::protobuf::uint64 WebMailDataProto::prestige() const {
  return prestige_;
}
inline void WebMailDataProto::set_prestige(::google::protobuf::uint64 value) {
  set_has_prestige();
  prestige_ = value;
}

// repeated .proto_ff.WebMailItemProto itemList = 12;
inline int WebMailDataProto::itemlist_size() const {
  return itemlist_.size();
}
inline void WebMailDataProto::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::proto_ff::WebMailItemProto& WebMailDataProto::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::proto_ff::WebMailItemProto* WebMailDataProto::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::proto_ff::WebMailItemProto* WebMailDataProto::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >&
WebMailDataProto::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailItemProto >*
WebMailDataProto::mutable_itemlist() {
  return &itemlist_;
}

// -------------------------------------------------------------------

// UseItemArgProto

// optional int64 int_param = 1;
inline bool UseItemArgProto::has_int_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseItemArgProto::set_has_int_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseItemArgProto::clear_has_int_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseItemArgProto::clear_int_param() {
  int_param_ = GOOGLE_LONGLONG(0);
  clear_has_int_param();
}
inline ::google::protobuf::int64 UseItemArgProto::int_param() const {
  return int_param_;
}
inline void UseItemArgProto::set_int_param(::google::protobuf::int64 value) {
  set_has_int_param();
  int_param_ = value;
}

// optional bytes str_param = 2;
inline bool UseItemArgProto::has_str_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseItemArgProto::set_has_str_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseItemArgProto::clear_has_str_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseItemArgProto::clear_str_param() {
  if (str_param_ != &::google::protobuf::internal::kEmptyString) {
    str_param_->clear();
  }
  clear_has_str_param();
}
inline const ::std::string& UseItemArgProto::str_param() const {
  return *str_param_;
}
inline void UseItemArgProto::set_str_param(const ::std::string& value) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(value);
}
inline void UseItemArgProto::set_str_param(const char* value) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(value);
}
inline void UseItemArgProto::set_str_param(const void* value, size_t size) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UseItemArgProto::mutable_str_param() {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  return str_param_;
}
inline ::std::string* UseItemArgProto::release_str_param() {
  clear_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_param_;
    str_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UseItemArgProto::set_allocated_str_param(::std::string* str_param) {
  if (str_param_ != &::google::protobuf::internal::kEmptyString) {
    delete str_param_;
  }
  if (str_param) {
    set_has_str_param();
    str_param_ = str_param;
  } else {
    clear_has_str_param();
    str_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated uint64 item_lst = 3;
inline int UseItemArgProto::item_lst_size() const {
  return item_lst_.size();
}
inline void UseItemArgProto::clear_item_lst() {
  item_lst_.Clear();
}
inline ::google::protobuf::uint64 UseItemArgProto::item_lst(int index) const {
  return item_lst_.Get(index);
}
inline void UseItemArgProto::set_item_lst(int index, ::google::protobuf::uint64 value) {
  item_lst_.Set(index, value);
}
inline void UseItemArgProto::add_item_lst(::google::protobuf::uint64 value) {
  item_lst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UseItemArgProto::item_lst() const {
  return item_lst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UseItemArgProto::mutable_item_lst() {
  return &item_lst_;
}

// -------------------------------------------------------------------

// NotifyRoleFacadeCastRsp

// required uint64 roleid = 1;
inline bool NotifyRoleFacadeCastRsp::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRoleFacadeCastRsp::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRoleFacadeCastRsp::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRoleFacadeCastRsp::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 NotifyRoleFacadeCastRsp::roleid() const {
  return roleid_;
}
inline void NotifyRoleFacadeCastRsp::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 2;
inline bool NotifyRoleFacadeCastRsp::has_facade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRoleFacadeCastRsp::set_has_facade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRoleFacadeCastRsp::clear_has_facade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRoleFacadeCastRsp::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& NotifyRoleFacadeCastRsp::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* NotifyRoleFacadeCastRsp::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* NotifyRoleFacadeCastRsp::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void NotifyRoleFacadeCastRsp::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// -------------------------------------------------------------------

// FunctionUnlockInfoData

// optional uint64 unlockId = 1;
inline bool FunctionUnlockInfoData::has_unlockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionUnlockInfoData::set_has_unlockid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionUnlockInfoData::clear_has_unlockid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionUnlockInfoData::clear_unlockid() {
  unlockid_ = GOOGLE_ULONGLONG(0);
  clear_has_unlockid();
}
inline ::google::protobuf::uint64 FunctionUnlockInfoData::unlockid() const {
  return unlockid_;
}
inline void FunctionUnlockInfoData::set_unlockid(::google::protobuf::uint64 value) {
  set_has_unlockid();
  unlockid_ = value;
}

// optional bool get_reward = 2;
inline bool FunctionUnlockInfoData::has_get_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionUnlockInfoData::set_has_get_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunctionUnlockInfoData::clear_has_get_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunctionUnlockInfoData::clear_get_reward() {
  get_reward_ = false;
  clear_has_get_reward();
}
inline bool FunctionUnlockInfoData::get_reward() const {
  return get_reward_;
}
inline void FunctionUnlockInfoData::set_get_reward(bool value) {
  set_has_get_reward();
  get_reward_ = value;
}

// -------------------------------------------------------------------

// FunctionUnlockInfo

// repeated .proto_ff.FunctionUnlockInfoData data = 1;
inline int FunctionUnlockInfo::data_size() const {
  return data_.size();
}
inline void FunctionUnlockInfo::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::FunctionUnlockInfoData& FunctionUnlockInfo::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::FunctionUnlockInfoData* FunctionUnlockInfo::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::FunctionUnlockInfoData* FunctionUnlockInfo::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >&
FunctionUnlockInfo::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >*
FunctionUnlockInfo::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// RolePlayerMiniInfo

// optional uint64 playerId = 1;
inline bool RolePlayerMiniInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RolePlayerMiniInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RolePlayerMiniInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RolePlayerMiniInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::playerid() const {
  return playerid_;
}
inline void RolePlayerMiniInfo::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string playerName = 2;
inline bool RolePlayerMiniInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RolePlayerMiniInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RolePlayerMiniInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RolePlayerMiniInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& RolePlayerMiniInfo::playername() const {
  return *playername_;
}
inline void RolePlayerMiniInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void RolePlayerMiniInfo::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void RolePlayerMiniInfo::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RolePlayerMiniInfo::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* RolePlayerMiniInfo::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RolePlayerMiniInfo::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 zid = 3;
inline bool RolePlayerMiniInfo::has_zid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RolePlayerMiniInfo::set_has_zid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RolePlayerMiniInfo::clear_has_zid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RolePlayerMiniInfo::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::zid() const {
  return zid_;
}
inline void RolePlayerMiniInfo::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint32 level = 5;
inline bool RolePlayerMiniInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RolePlayerMiniInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RolePlayerMiniInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RolePlayerMiniInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::level() const {
  return level_;
}
inline void RolePlayerMiniInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 closeness = 6;
inline bool RolePlayerMiniInfo::has_closeness() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RolePlayerMiniInfo::set_has_closeness() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RolePlayerMiniInfo::clear_has_closeness() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RolePlayerMiniInfo::clear_closeness() {
  closeness_ = 0u;
  clear_has_closeness();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::closeness() const {
  return closeness_;
}
inline void RolePlayerMiniInfo::set_closeness(::google::protobuf::uint32 value) {
  set_has_closeness();
  closeness_ = value;
}

// optional uint32 recentType = 7;
inline bool RolePlayerMiniInfo::has_recenttype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RolePlayerMiniInfo::set_has_recenttype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RolePlayerMiniInfo::clear_has_recenttype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RolePlayerMiniInfo::clear_recenttype() {
  recenttype_ = 0u;
  clear_has_recenttype();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::recenttype() const {
  return recenttype_;
}
inline void RolePlayerMiniInfo::set_recenttype(::google::protobuf::uint32 value) {
  set_has_recenttype();
  recenttype_ = value;
}

// optional uint64 recentTime = 8;
inline bool RolePlayerMiniInfo::has_recenttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RolePlayerMiniInfo::set_has_recenttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RolePlayerMiniInfo::clear_has_recenttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RolePlayerMiniInfo::clear_recenttime() {
  recenttime_ = GOOGLE_ULONGLONG(0);
  clear_has_recenttime();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::recenttime() const {
  return recenttime_;
}
inline void RolePlayerMiniInfo::set_recenttime(::google::protobuf::uint64 value) {
  set_has_recenttime();
  recenttime_ = value;
}

// optional uint32 prof = 9;
inline bool RolePlayerMiniInfo::has_prof() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RolePlayerMiniInfo::set_has_prof() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RolePlayerMiniInfo::clear_has_prof() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RolePlayerMiniInfo::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::prof() const {
  return prof_;
}
inline void RolePlayerMiniInfo::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 teamId = 10;
inline bool RolePlayerMiniInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RolePlayerMiniInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RolePlayerMiniInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RolePlayerMiniInfo::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::teamid() const {
  return teamid_;
}
inline void RolePlayerMiniInfo::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint32 unionId = 11;
inline bool RolePlayerMiniInfo::has_unionid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RolePlayerMiniInfo::set_has_unionid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RolePlayerMiniInfo::clear_has_unionid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RolePlayerMiniInfo::clear_unionid() {
  unionid_ = 0u;
  clear_has_unionid();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::unionid() const {
  return unionid_;
}
inline void RolePlayerMiniInfo::set_unionid(::google::protobuf::uint32 value) {
  set_has_unionid();
  unionid_ = value;
}

// optional uint64 fightPower = 12;
inline bool RolePlayerMiniInfo::has_fightpower() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RolePlayerMiniInfo::set_has_fightpower() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RolePlayerMiniInfo::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RolePlayerMiniInfo::clear_fightpower() {
  fightpower_ = GOOGLE_ULONGLONG(0);
  clear_has_fightpower();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::fightpower() const {
  return fightpower_;
}
inline void RolePlayerMiniInfo::set_fightpower(::google::protobuf::uint64 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional uint32 killMeTimes = 13;
inline bool RolePlayerMiniInfo::has_killmetimes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RolePlayerMiniInfo::set_has_killmetimes() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RolePlayerMiniInfo::clear_has_killmetimes() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RolePlayerMiniInfo::clear_killmetimes() {
  killmetimes_ = 0u;
  clear_has_killmetimes();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::killmetimes() const {
  return killmetimes_;
}
inline void RolePlayerMiniInfo::set_killmetimes(::google::protobuf::uint32 value) {
  set_has_killmetimes();
  killmetimes_ = value;
}

// optional uint64 offlineTime = 14;
inline bool RolePlayerMiniInfo::has_offlinetime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_offlinetime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RolePlayerMiniInfo::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RolePlayerMiniInfo::clear_offlinetime() {
  offlinetime_ = GOOGLE_ULONGLONG(0);
  clear_has_offlinetime();
}
inline ::google::protobuf::uint64 RolePlayerMiniInfo::offlinetime() const {
  return offlinetime_;
}
inline void RolePlayerMiniInfo::set_offlinetime(::google::protobuf::uint64 value) {
  set_has_offlinetime();
  offlinetime_ = value;
}

// optional string connect = 15;
inline bool RolePlayerMiniInfo::has_connect() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_connect() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RolePlayerMiniInfo::clear_has_connect() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RolePlayerMiniInfo::clear_connect() {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    connect_->clear();
  }
  clear_has_connect();
}
inline const ::std::string& RolePlayerMiniInfo::connect() const {
  return *connect_;
}
inline void RolePlayerMiniInfo::set_connect(const ::std::string& value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void RolePlayerMiniInfo::set_connect(const char* value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void RolePlayerMiniInfo::set_connect(const char* value, size_t size) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RolePlayerMiniInfo::mutable_connect() {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  return connect_;
}
inline ::std::string* RolePlayerMiniInfo::release_connect() {
  clear_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = connect_;
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RolePlayerMiniInfo::set_allocated_connect(::std::string* connect) {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    delete connect_;
  }
  if (connect) {
    set_has_connect();
    connect_ = connect;
  } else {
    clear_has_connect();
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool online = 16;
inline bool RolePlayerMiniInfo::has_online() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_online() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RolePlayerMiniInfo::clear_has_online() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RolePlayerMiniInfo::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool RolePlayerMiniInfo::online() const {
  return online_;
}
inline void RolePlayerMiniInfo::set_online(bool value) {
  set_has_online();
  online_ = value;
}

// optional uint32 vipLevel = 17;
inline bool RolePlayerMiniInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RolePlayerMiniInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RolePlayerMiniInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::viplevel() const {
  return viplevel_;
}
inline void RolePlayerMiniInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 18;
inline bool RolePlayerMiniInfo::has_facade() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_facade() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RolePlayerMiniInfo::clear_has_facade() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RolePlayerMiniInfo::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& RolePlayerMiniInfo::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* RolePlayerMiniInfo::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* RolePlayerMiniInfo::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void RolePlayerMiniInfo::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint32 marry = 19;
inline bool RolePlayerMiniInfo::has_marry() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RolePlayerMiniInfo::set_has_marry() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RolePlayerMiniInfo::clear_has_marry() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RolePlayerMiniInfo::clear_marry() {
  marry_ = 0u;
  clear_has_marry();
}
inline ::google::protobuf::uint32 RolePlayerMiniInfo::marry() const {
  return marry_;
}
inline void RolePlayerMiniInfo::set_marry(::google::protobuf::uint32 value) {
  set_has_marry();
  marry_ = value;
}

// -------------------------------------------------------------------

// FriendInfo

// optional uint64 id = 1;
inline bool FriendInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 FriendInfo::id() const {
  return id_;
}
inline void FriendInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 closeness = 2;
inline bool FriendInfo::has_closeness() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendInfo::set_has_closeness() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendInfo::clear_has_closeness() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendInfo::clear_closeness() {
  closeness_ = 0u;
  clear_has_closeness();
}
inline ::google::protobuf::uint32 FriendInfo::closeness() const {
  return closeness_;
}
inline void FriendInfo::set_closeness(::google::protobuf::uint32 value) {
  set_has_closeness();
  closeness_ = value;
}

// optional uint32 todayCloseness = 3;
inline bool FriendInfo::has_todaycloseness() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendInfo::set_has_todaycloseness() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendInfo::clear_has_todaycloseness() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendInfo::clear_todaycloseness() {
  todaycloseness_ = 0u;
  clear_has_todaycloseness();
}
inline ::google::protobuf::uint32 FriendInfo::todaycloseness() const {
  return todaycloseness_;
}
inline void FriendInfo::set_todaycloseness(::google::protobuf::uint32 value) {
  set_has_todaycloseness();
  todaycloseness_ = value;
}

// optional uint64 updateTime = 4;
inline bool FriendInfo::has_updatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendInfo::set_has_updatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendInfo::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendInfo::clear_updatetime() {
  updatetime_ = GOOGLE_ULONGLONG(0);
  clear_has_updatetime();
}
inline ::google::protobuf::uint64 FriendInfo::updatetime() const {
  return updatetime_;
}
inline void FriendInfo::set_updatetime(::google::protobuf::uint64 value) {
  set_has_updatetime();
  updatetime_ = value;
}

// -------------------------------------------------------------------

// FriendApplyInfo

// optional uint64 id = 1;
inline bool FriendApplyInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendApplyInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendApplyInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendApplyInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 FriendApplyInfo::id() const {
  return id_;
}
inline void FriendApplyInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional string connect = 2;
inline bool FriendApplyInfo::has_connect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendApplyInfo::set_has_connect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendApplyInfo::clear_has_connect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendApplyInfo::clear_connect() {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    connect_->clear();
  }
  clear_has_connect();
}
inline const ::std::string& FriendApplyInfo::connect() const {
  return *connect_;
}
inline void FriendApplyInfo::set_connect(const ::std::string& value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void FriendApplyInfo::set_connect(const char* value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void FriendApplyInfo::set_connect(const char* value, size_t size) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  connect_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendApplyInfo::mutable_connect() {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    connect_ = new ::std::string;
  }
  return connect_;
}
inline ::std::string* FriendApplyInfo::release_connect() {
  clear_has_connect();
  if (connect_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = connect_;
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendApplyInfo::set_allocated_connect(::std::string* connect) {
  if (connect_ != &::google::protobuf::internal::kEmptyString) {
    delete connect_;
  }
  if (connect) {
    set_has_connect();
    connect_ = connect;
  } else {
    clear_has_connect();
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RelationHateInfo

// optional uint64 id = 1;
inline bool RelationHateInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RelationHateInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RelationHateInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RelationHateInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RelationHateInfo::id() const {
  return id_;
}
inline void RelationHateInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 killMeTimes = 2;
inline bool RelationHateInfo::has_killmetimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RelationHateInfo::set_has_killmetimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RelationHateInfo::clear_has_killmetimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RelationHateInfo::clear_killmetimes() {
  killmetimes_ = 0u;
  clear_has_killmetimes();
}
inline ::google::protobuf::uint32 RelationHateInfo::killmetimes() const {
  return killmetimes_;
}
inline void RelationHateInfo::set_killmetimes(::google::protobuf::uint32 value) {
  set_has_killmetimes();
  killmetimes_ = value;
}

// -------------------------------------------------------------------

// RelationGiftRecord

// optional uint64 friendId = 1;
inline bool RelationGiftRecord::has_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RelationGiftRecord::set_has_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RelationGiftRecord::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RelationGiftRecord::clear_friendid() {
  friendid_ = GOOGLE_ULONGLONG(0);
  clear_has_friendid();
}
inline ::google::protobuf::uint64 RelationGiftRecord::friendid() const {
  return friendid_;
}
inline void RelationGiftRecord::set_friendid(::google::protobuf::uint64 value) {
  set_has_friendid();
  friendid_ = value;
}

// optional uint64 itemId = 2;
inline bool RelationGiftRecord::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RelationGiftRecord::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RelationGiftRecord::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RelationGiftRecord::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 RelationGiftRecord::itemid() const {
  return itemid_;
}
inline void RelationGiftRecord::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 isThanks = 3;
inline bool RelationGiftRecord::has_isthanks() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RelationGiftRecord::set_has_isthanks() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RelationGiftRecord::clear_has_isthanks() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RelationGiftRecord::clear_isthanks() {
  isthanks_ = 0u;
  clear_has_isthanks();
}
inline ::google::protobuf::uint32 RelationGiftRecord::isthanks() const {
  return isthanks_;
}
inline void RelationGiftRecord::set_isthanks(::google::protobuf::uint32 value) {
  set_has_isthanks();
  isthanks_ = value;
}

// -------------------------------------------------------------------

// RelationDBInfo

// repeated .proto_ff.FriendInfo friendList = 1;
inline int RelationDBInfo::friendlist_size() const {
  return friendlist_.size();
}
inline void RelationDBInfo::clear_friendlist() {
  friendlist_.Clear();
}
inline const ::proto_ff::FriendInfo& RelationDBInfo::friendlist(int index) const {
  return friendlist_.Get(index);
}
inline ::proto_ff::FriendInfo* RelationDBInfo::mutable_friendlist(int index) {
  return friendlist_.Mutable(index);
}
inline ::proto_ff::FriendInfo* RelationDBInfo::add_friendlist() {
  return friendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >&
RelationDBInfo::friendlist() const {
  return friendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendInfo >*
RelationDBInfo::mutable_friendlist() {
  return &friendlist_;
}

// repeated uint64 blackList = 2;
inline int RelationDBInfo::blacklist_size() const {
  return blacklist_.size();
}
inline void RelationDBInfo::clear_blacklist() {
  blacklist_.Clear();
}
inline ::google::protobuf::uint64 RelationDBInfo::blacklist(int index) const {
  return blacklist_.Get(index);
}
inline void RelationDBInfo::set_blacklist(int index, ::google::protobuf::uint64 value) {
  blacklist_.Set(index, value);
}
inline void RelationDBInfo::add_blacklist(::google::protobuf::uint64 value) {
  blacklist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RelationDBInfo::blacklist() const {
  return blacklist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RelationDBInfo::mutable_blacklist() {
  return &blacklist_;
}

// repeated .proto_ff.RelationHateInfo hateList = 3;
inline int RelationDBInfo::hatelist_size() const {
  return hatelist_.size();
}
inline void RelationDBInfo::clear_hatelist() {
  hatelist_.Clear();
}
inline const ::proto_ff::RelationHateInfo& RelationDBInfo::hatelist(int index) const {
  return hatelist_.Get(index);
}
inline ::proto_ff::RelationHateInfo* RelationDBInfo::mutable_hatelist(int index) {
  return hatelist_.Mutable(index);
}
inline ::proto_ff::RelationHateInfo* RelationDBInfo::add_hatelist() {
  return hatelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >&
RelationDBInfo::hatelist() const {
  return hatelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationHateInfo >*
RelationDBInfo::mutable_hatelist() {
  return &hatelist_;
}

// repeated .proto_ff.FriendApplyInfo applyList = 4;
inline int RelationDBInfo::applylist_size() const {
  return applylist_.size();
}
inline void RelationDBInfo::clear_applylist() {
  applylist_.Clear();
}
inline const ::proto_ff::FriendApplyInfo& RelationDBInfo::applylist(int index) const {
  return applylist_.Get(index);
}
inline ::proto_ff::FriendApplyInfo* RelationDBInfo::mutable_applylist(int index) {
  return applylist_.Mutable(index);
}
inline ::proto_ff::FriendApplyInfo* RelationDBInfo::add_applylist() {
  return applylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >&
RelationDBInfo::applylist() const {
  return applylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendApplyInfo >*
RelationDBInfo::mutable_applylist() {
  return &applylist_;
}

// optional uint32 friends_add = 5;
inline bool RelationDBInfo::has_friends_add() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RelationDBInfo::set_has_friends_add() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RelationDBInfo::clear_has_friends_add() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RelationDBInfo::clear_friends_add() {
  friends_add_ = 0u;
  clear_has_friends_add();
}
inline ::google::protobuf::uint32 RelationDBInfo::friends_add() const {
  return friends_add_;
}
inline void RelationDBInfo::set_friends_add(::google::protobuf::uint32 value) {
  set_has_friends_add();
  friends_add_ = value;
}

// repeated .proto_ff.RelationGiftRecord giftRecords = 6;
inline int RelationDBInfo::giftrecords_size() const {
  return giftrecords_.size();
}
inline void RelationDBInfo::clear_giftrecords() {
  giftrecords_.Clear();
}
inline const ::proto_ff::RelationGiftRecord& RelationDBInfo::giftrecords(int index) const {
  return giftrecords_.Get(index);
}
inline ::proto_ff::RelationGiftRecord* RelationDBInfo::mutable_giftrecords(int index) {
  return giftrecords_.Mutable(index);
}
inline ::proto_ff::RelationGiftRecord* RelationDBInfo::add_giftrecords() {
  return giftrecords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >&
RelationDBInfo::giftrecords() const {
  return giftrecords_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RelationGiftRecord >*
RelationDBInfo::mutable_giftrecords() {
  return &giftrecords_;
}

// -------------------------------------------------------------------

// DigPerfor

// required uint32 type = 1;
inline bool DigPerfor::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DigPerfor::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DigPerfor::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DigPerfor::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 DigPerfor::type() const {
  return type_;
}
inline void DigPerfor::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 value = 2;
inline bool DigPerfor::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DigPerfor::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DigPerfor::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DigPerfor::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 DigPerfor::value() const {
  return value_;
}
inline void DigPerfor::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// BuffProto

// required uint64 buff_index = 1;
inline bool BuffProto::has_buff_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffProto::set_has_buff_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffProto::clear_has_buff_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffProto::clear_buff_index() {
  buff_index_ = GOOGLE_ULONGLONG(0);
  clear_has_buff_index();
}
inline ::google::protobuf::uint64 BuffProto::buff_index() const {
  return buff_index_;
}
inline void BuffProto::set_buff_index(::google::protobuf::uint64 value) {
  set_has_buff_index();
  buff_index_ = value;
}

// required uint64 buff_id = 2;
inline bool BuffProto::has_buff_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffProto::set_has_buff_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffProto::clear_has_buff_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffProto::clear_buff_id() {
  buff_id_ = GOOGLE_ULONGLONG(0);
  clear_has_buff_id();
}
inline ::google::protobuf::uint64 BuffProto::buff_id() const {
  return buff_id_;
}
inline void BuffProto::set_buff_id(::google::protobuf::uint64 value) {
  set_has_buff_id();
  buff_id_ = value;
}

// optional uint64 recver_cid = 3;
inline bool BuffProto::has_recver_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffProto::set_has_recver_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffProto::clear_has_recver_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffProto::clear_recver_cid() {
  recver_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_recver_cid();
}
inline ::google::protobuf::uint64 BuffProto::recver_cid() const {
  return recver_cid_;
}
inline void BuffProto::set_recver_cid(::google::protobuf::uint64 value) {
  set_has_recver_cid();
  recver_cid_ = value;
}

// optional int64 left_msec = 4;
inline bool BuffProto::has_left_msec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffProto::set_has_left_msec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffProto::clear_has_left_msec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffProto::clear_left_msec() {
  left_msec_ = GOOGLE_LONGLONG(0);
  clear_has_left_msec();
}
inline ::google::protobuf::int64 BuffProto::left_msec() const {
  return left_msec_;
}
inline void BuffProto::set_left_msec(::google::protobuf::int64 value) {
  set_has_left_msec();
  left_msec_ = value;
}

// optional uint64 skill_id = 5;
inline bool BuffProto::has_skill_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffProto::set_has_skill_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffProto::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffProto::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 BuffProto::skill_id() const {
  return skill_id_;
}
inline void BuffProto::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional int32 skill_lev = 6;
inline bool BuffProto::has_skill_lev() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuffProto::set_has_skill_lev() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuffProto::clear_has_skill_lev() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuffProto::clear_skill_lev() {
  skill_lev_ = 0;
  clear_has_skill_lev();
}
inline ::google::protobuf::int32 BuffProto::skill_lev() const {
  return skill_lev_;
}
inline void BuffProto::set_skill_lev(::google::protobuf::int32 value) {
  set_has_skill_lev();
  skill_lev_ = value;
}

// optional int32 is_effect = 7;
inline bool BuffProto::has_is_effect() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuffProto::set_has_is_effect() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuffProto::clear_has_is_effect() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuffProto::clear_is_effect() {
  is_effect_ = 0;
  clear_has_is_effect();
}
inline ::google::protobuf::int32 BuffProto::is_effect() const {
  return is_effect_;
}
inline void BuffProto::set_is_effect(::google::protobuf::int32 value) {
  set_has_is_effect();
  is_effect_ = value;
}

// -------------------------------------------------------------------

// BuffListProto

// optional uint64 cid = 1;
inline bool BuffListProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffListProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffListProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffListProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 BuffListProto::cid() const {
  return cid_;
}
inline void BuffListProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// repeated .proto_ff.BuffProto info = 2;
inline int BuffListProto::info_size() const {
  return info_.size();
}
inline void BuffListProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::BuffProto& BuffListProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::BuffProto* BuffListProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::BuffProto* BuffListProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >&
BuffListProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffProto >*
BuffListProto::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// SkillPosProto

// optional uint64 skill_id = 1;
inline bool SkillPosProto::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillPosProto::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillPosProto::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillPosProto::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 SkillPosProto::skill_id() const {
  return skill_id_;
}
inline void SkillPosProto::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 pos = 2;
inline bool SkillPosProto::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillPosProto::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillPosProto::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillPosProto::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 SkillPosProto::pos() const {
  return pos_;
}
inline void SkillPosProto::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// optional int32 cd = 3;
inline bool SkillPosProto::has_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillPosProto::set_has_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillPosProto::clear_has_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillPosProto::clear_cd() {
  cd_ = 0;
  clear_has_cd();
}
inline ::google::protobuf::int32 SkillPosProto::cd() const {
  return cd_;
}
inline void SkillPosProto::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
}

// optional int32 use = 4;
inline bool SkillPosProto::has_use() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillPosProto::set_has_use() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillPosProto::clear_has_use() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillPosProto::clear_use() {
  use_ = 0;
  clear_has_use();
}
inline ::google::protobuf::int32 SkillPosProto::use() const {
  return use_;
}
inline void SkillPosProto::set_use(::google::protobuf::int32 value) {
  set_has_use();
  use_ = value;
}

// -------------------------------------------------------------------

// SkillGroupProto

// optional uint32 group = 1;
inline bool SkillGroupProto::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillGroupProto::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillGroupProto::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillGroupProto::clear_group() {
  group_ = 0u;
  clear_has_group();
}
inline ::google::protobuf::uint32 SkillGroupProto::group() const {
  return group_;
}
inline void SkillGroupProto::set_group(::google::protobuf::uint32 value) {
  set_has_group();
  group_ = value;
}

// repeated .proto_ff.SkillPosProto lst = 2;
inline int SkillGroupProto::lst_size() const {
  return lst_.size();
}
inline void SkillGroupProto::clear_lst() {
  lst_.Clear();
}
inline const ::proto_ff::SkillPosProto& SkillGroupProto::lst(int index) const {
  return lst_.Get(index);
}
inline ::proto_ff::SkillPosProto* SkillGroupProto::mutable_lst(int index) {
  return lst_.Mutable(index);
}
inline ::proto_ff::SkillPosProto* SkillGroupProto::add_lst() {
  return lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >&
SkillGroupProto::lst() const {
  return lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillPosProto >*
SkillGroupProto::mutable_lst() {
  return &lst_;
}

// -------------------------------------------------------------------

// SkillGroupListProto

// repeated .proto_ff.SkillGroupProto info = 1;
inline int SkillGroupListProto::info_size() const {
  return info_.size();
}
inline void SkillGroupListProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::SkillGroupProto& SkillGroupListProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::SkillGroupProto* SkillGroupListProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::SkillGroupProto* SkillGroupListProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >&
SkillGroupListProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillGroupProto >*
SkillGroupListProto::mutable_info() {
  return &info_;
}

// optional uint32 cur_skill_group = 2;
inline bool SkillGroupListProto::has_cur_skill_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillGroupListProto::set_has_cur_skill_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillGroupListProto::clear_has_cur_skill_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillGroupListProto::clear_cur_skill_group() {
  cur_skill_group_ = 0u;
  clear_has_cur_skill_group();
}
inline ::google::protobuf::uint32 SkillGroupListProto::cur_skill_group() const {
  return cur_skill_group_;
}
inline void SkillGroupListProto::set_cur_skill_group(::google::protobuf::uint32 value) {
  set_has_cur_skill_group();
  cur_skill_group_ = value;
}

// -------------------------------------------------------------------

// GodEvilTaskProto

// optional int32 id = 1;
inline bool GodEvilTaskProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodEvilTaskProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodEvilTaskProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodEvilTaskProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GodEvilTaskProto::id() const {
  return id_;
}
inline void GodEvilTaskProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 cur = 2;
inline bool GodEvilTaskProto::has_cur() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodEvilTaskProto::set_has_cur() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodEvilTaskProto::clear_has_cur() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodEvilTaskProto::clear_cur() {
  cur_ = 0;
  clear_has_cur();
}
inline ::google::protobuf::int32 GodEvilTaskProto::cur() const {
  return cur_;
}
inline void GodEvilTaskProto::set_cur(::google::protobuf::int32 value) {
  set_has_cur();
  cur_ = value;
}

// optional int32 state = 3;
inline bool GodEvilTaskProto::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodEvilTaskProto::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodEvilTaskProto::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodEvilTaskProto::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GodEvilTaskProto::state() const {
  return state_;
}
inline void GodEvilTaskProto::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// GodEvilTaskListProto

// repeated .proto_ff.GodEvilTaskProto lst = 1;
inline int GodEvilTaskListProto::lst_size() const {
  return lst_.size();
}
inline void GodEvilTaskListProto::clear_lst() {
  lst_.Clear();
}
inline const ::proto_ff::GodEvilTaskProto& GodEvilTaskListProto::lst(int index) const {
  return lst_.Get(index);
}
inline ::proto_ff::GodEvilTaskProto* GodEvilTaskListProto::mutable_lst(int index) {
  return lst_.Mutable(index);
}
inline ::proto_ff::GodEvilTaskProto* GodEvilTaskListProto::add_lst() {
  return lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodEvilTaskProto >&
GodEvilTaskListProto::lst() const {
  return lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodEvilTaskProto >*
GodEvilTaskListProto::mutable_lst() {
  return &lst_;
}

// -------------------------------------------------------------------

// GodEvilStageProto

// optional int32 stage = 1;
inline bool GodEvilStageProto::has_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodEvilStageProto::set_has_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodEvilStageProto::clear_has_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodEvilStageProto::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 GodEvilStageProto::stage() const {
  return stage_;
}
inline void GodEvilStageProto::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// optional .proto_ff.GodEvilTaskListProto task = 2;
inline bool GodEvilStageProto::has_task() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodEvilStageProto::set_has_task() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodEvilStageProto::clear_has_task() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodEvilStageProto::clear_task() {
  if (task_ != NULL) task_->::proto_ff::GodEvilTaskListProto::Clear();
  clear_has_task();
}
inline const ::proto_ff::GodEvilTaskListProto& GodEvilStageProto::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::proto_ff::GodEvilTaskListProto* GodEvilStageProto::mutable_task() {
  set_has_task();
  if (task_ == NULL) task_ = new ::proto_ff::GodEvilTaskListProto;
  return task_;
}
inline ::proto_ff::GodEvilTaskListProto* GodEvilStageProto::release_task() {
  clear_has_task();
  ::proto_ff::GodEvilTaskListProto* temp = task_;
  task_ = NULL;
  return temp;
}
inline void GodEvilStageProto::set_allocated_task(::proto_ff::GodEvilTaskListProto* task) {
  delete task_;
  task_ = task;
  if (task) {
    set_has_task();
  } else {
    clear_has_task();
  }
}

// optional int32 finish = 3;
inline bool GodEvilStageProto::has_finish() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodEvilStageProto::set_has_finish() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodEvilStageProto::clear_has_finish() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodEvilStageProto::clear_finish() {
  finish_ = 0;
  clear_has_finish();
}
inline ::google::protobuf::int32 GodEvilStageProto::finish() const {
  return finish_;
}
inline void GodEvilStageProto::set_finish(::google::protobuf::int32 value) {
  set_has_finish();
  finish_ = value;
}

// -------------------------------------------------------------------

// GodEvilProto

// optional int32 fetch = 1;
inline bool GodEvilProto::has_fetch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodEvilProto::set_has_fetch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodEvilProto::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodEvilProto::clear_fetch() {
  fetch_ = 0;
  clear_has_fetch();
}
inline ::google::protobuf::int32 GodEvilProto::fetch() const {
  return fetch_;
}
inline void GodEvilProto::set_fetch(::google::protobuf::int32 value) {
  set_has_fetch();
  fetch_ = value;
}

// optional .proto_ff.GodEvilStageProto stage = 2;
inline bool GodEvilProto::has_stage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodEvilProto::set_has_stage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodEvilProto::clear_has_stage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodEvilProto::clear_stage() {
  if (stage_ != NULL) stage_->::proto_ff::GodEvilStageProto::Clear();
  clear_has_stage();
}
inline const ::proto_ff::GodEvilStageProto& GodEvilProto::stage() const {
  return stage_ != NULL ? *stage_ : *default_instance_->stage_;
}
inline ::proto_ff::GodEvilStageProto* GodEvilProto::mutable_stage() {
  set_has_stage();
  if (stage_ == NULL) stage_ = new ::proto_ff::GodEvilStageProto;
  return stage_;
}
inline ::proto_ff::GodEvilStageProto* GodEvilProto::release_stage() {
  clear_has_stage();
  ::proto_ff::GodEvilStageProto* temp = stage_;
  stage_ = NULL;
  return temp;
}
inline void GodEvilProto::set_allocated_stage(::proto_ff::GodEvilStageProto* stage) {
  delete stage_;
  stage_ = stage;
  if (stage) {
    set_has_stage();
  } else {
    clear_has_stage();
  }
}

// optional int32 type = 3;
inline bool GodEvilProto::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodEvilProto::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodEvilProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodEvilProto::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GodEvilProto::type() const {
  return type_;
}
inline void GodEvilProto::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 cd = 4;
inline bool GodEvilProto::has_cd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GodEvilProto::set_has_cd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GodEvilProto::clear_has_cd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GodEvilProto::clear_cd() {
  cd_ = 0;
  clear_has_cd();
}
inline ::google::protobuf::int32 GodEvilProto::cd() const {
  return cd_;
}
inline void GodEvilProto::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
}

// optional int32 vessel_lev = 5;
inline bool GodEvilProto::has_vessel_lev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GodEvilProto::set_has_vessel_lev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GodEvilProto::clear_has_vessel_lev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GodEvilProto::clear_vessel_lev() {
  vessel_lev_ = 0;
  clear_has_vessel_lev();
}
inline ::google::protobuf::int32 GodEvilProto::vessel_lev() const {
  return vessel_lev_;
}
inline void GodEvilProto::set_vessel_lev(::google::protobuf::int32 value) {
  set_has_vessel_lev();
  vessel_lev_ = value;
}

// optional int32 mirror_lev = 6;
inline bool GodEvilProto::has_mirror_lev() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GodEvilProto::set_has_mirror_lev() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GodEvilProto::clear_has_mirror_lev() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GodEvilProto::clear_mirror_lev() {
  mirror_lev_ = 0;
  clear_has_mirror_lev();
}
inline ::google::protobuf::int32 GodEvilProto::mirror_lev() const {
  return mirror_lev_;
}
inline void GodEvilProto::set_mirror_lev(::google::protobuf::int32 value) {
  set_has_mirror_lev();
  mirror_lev_ = value;
}

// required int64 extra_exp = 7;
inline bool GodEvilProto::has_extra_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GodEvilProto::set_has_extra_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GodEvilProto::clear_has_extra_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GodEvilProto::clear_extra_exp() {
  extra_exp_ = GOOGLE_LONGLONG(0);
  clear_has_extra_exp();
}
inline ::google::protobuf::int64 GodEvilProto::extra_exp() const {
  return extra_exp_;
}
inline void GodEvilProto::set_extra_exp(::google::protobuf::int64 value) {
  set_has_extra_exp();
  extra_exp_ = value;
}

// -------------------------------------------------------------------

// FacadeFantasyData

// optional uint64 fantasy_id = 1;
inline bool FacadeFantasyData::has_fantasy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFantasyData::set_has_fantasy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFantasyData::clear_has_fantasy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFantasyData::clear_fantasy_id() {
  fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_id();
}
inline ::google::protobuf::uint64 FacadeFantasyData::fantasy_id() const {
  return fantasy_id_;
}
inline void FacadeFantasyData::set_fantasy_id(::google::protobuf::uint64 value) {
  set_has_fantasy_id();
  fantasy_id_ = value;
}

// optional uint32 fantasy_lev = 2;
inline bool FacadeFantasyData::has_fantasy_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFantasyData::set_has_fantasy_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFantasyData::clear_has_fantasy_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFantasyData::clear_fantasy_lev() {
  fantasy_lev_ = 0u;
  clear_has_fantasy_lev();
}
inline ::google::protobuf::uint32 FacadeFantasyData::fantasy_lev() const {
  return fantasy_lev_;
}
inline void FacadeFantasyData::set_fantasy_lev(::google::protobuf::uint32 value) {
  set_has_fantasy_lev();
  fantasy_lev_ = value;
}

// -------------------------------------------------------------------

// FacadeFragmentData

// optional uint64 fragment_id = 1;
inline bool FacadeFragmentData::has_fragment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFragmentData::set_has_fragment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFragmentData::clear_has_fragment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFragmentData::clear_fragment_id() {
  fragment_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fragment_id();
}
inline ::google::protobuf::uint64 FacadeFragmentData::fragment_id() const {
  return fragment_id_;
}
inline void FacadeFragmentData::set_fragment_id(::google::protobuf::uint64 value) {
  set_has_fragment_id();
  fragment_id_ = value;
}

// optional uint32 use_times = 2;
inline bool FacadeFragmentData::has_use_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFragmentData::set_has_use_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFragmentData::clear_has_use_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFragmentData::clear_use_times() {
  use_times_ = 0u;
  clear_has_use_times();
}
inline ::google::protobuf::uint32 FacadeFragmentData::use_times() const {
  return use_times_;
}
inline void FacadeFragmentData::set_use_times(::google::protobuf::uint32 value) {
  set_has_use_times();
  use_times_ = value;
}

// -------------------------------------------------------------------

// FacadeSkillData

// optional uint64 skill_id = 1;
inline bool FacadeSkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSkillData::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 FacadeSkillData::skill_id() const {
  return skill_id_;
}
inline void FacadeSkillData::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 skill_lev = 2;
inline bool FacadeSkillData::has_skill_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSkillData::set_has_skill_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSkillData::clear_has_skill_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSkillData::clear_skill_lev() {
  skill_lev_ = 0u;
  clear_has_skill_lev();
}
inline ::google::protobuf::uint32 FacadeSkillData::skill_lev() const {
  return skill_lev_;
}
inline void FacadeSkillData::set_skill_lev(::google::protobuf::uint32 value) {
  set_has_skill_lev();
  skill_lev_ = value;
}

// -------------------------------------------------------------------

// MountFantasyData

// optional uint64 fantasy_id = 1;
inline bool MountFantasyData::has_fantasy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountFantasyData::set_has_fantasy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountFantasyData::clear_has_fantasy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountFantasyData::clear_fantasy_id() {
  fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_id();
}
inline ::google::protobuf::uint64 MountFantasyData::fantasy_id() const {
  return fantasy_id_;
}
inline void MountFantasyData::set_fantasy_id(::google::protobuf::uint64 value) {
  set_has_fantasy_id();
  fantasy_id_ = value;
}

// optional uint32 fantasy_lev = 2;
inline bool MountFantasyData::has_fantasy_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountFantasyData::set_has_fantasy_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountFantasyData::clear_has_fantasy_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountFantasyData::clear_fantasy_lev() {
  fantasy_lev_ = 0u;
  clear_has_fantasy_lev();
}
inline ::google::protobuf::uint32 MountFantasyData::fantasy_lev() const {
  return fantasy_lev_;
}
inline void MountFantasyData::set_fantasy_lev(::google::protobuf::uint32 value) {
  set_has_fantasy_lev();
  fantasy_lev_ = value;
}

// optional uint64 fantasy_lev_exp = 3;
inline bool MountFantasyData::has_fantasy_lev_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountFantasyData::set_has_fantasy_lev_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountFantasyData::clear_has_fantasy_lev_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountFantasyData::clear_fantasy_lev_exp() {
  fantasy_lev_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_lev_exp();
}
inline ::google::protobuf::uint64 MountFantasyData::fantasy_lev_exp() const {
  return fantasy_lev_exp_;
}
inline void MountFantasyData::set_fantasy_lev_exp(::google::protobuf::uint64 value) {
  set_has_fantasy_lev_exp();
  fantasy_lev_exp_ = value;
}

// optional uint32 fantasy_star = 4;
inline bool MountFantasyData::has_fantasy_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountFantasyData::set_has_fantasy_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountFantasyData::clear_has_fantasy_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountFantasyData::clear_fantasy_star() {
  fantasy_star_ = 0u;
  clear_has_fantasy_star();
}
inline ::google::protobuf::uint32 MountFantasyData::fantasy_star() const {
  return fantasy_star_;
}
inline void MountFantasyData::set_fantasy_star(::google::protobuf::uint32 value) {
  set_has_fantasy_star();
  fantasy_star_ = value;
}

// -------------------------------------------------------------------

// MountFragmentData

// optional uint64 fragment_id = 1;
inline bool MountFragmentData::has_fragment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountFragmentData::set_has_fragment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountFragmentData::clear_has_fragment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountFragmentData::clear_fragment_id() {
  fragment_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fragment_id();
}
inline ::google::protobuf::uint64 MountFragmentData::fragment_id() const {
  return fragment_id_;
}
inline void MountFragmentData::set_fragment_id(::google::protobuf::uint64 value) {
  set_has_fragment_id();
  fragment_id_ = value;
}

// optional uint32 use_times = 2;
inline bool MountFragmentData::has_use_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountFragmentData::set_has_use_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountFragmentData::clear_has_use_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountFragmentData::clear_use_times() {
  use_times_ = 0u;
  clear_has_use_times();
}
inline ::google::protobuf::uint32 MountFragmentData::use_times() const {
  return use_times_;
}
inline void MountFragmentData::set_use_times(::google::protobuf::uint32 value) {
  set_has_use_times();
  use_times_ = value;
}

// -------------------------------------------------------------------

// MountSkillData

// optional uint64 skill_id = 1;
inline bool MountSkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountSkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountSkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountSkillData::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 MountSkillData::skill_id() const {
  return skill_id_;
}
inline void MountSkillData::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 skill_lev = 2;
inline bool MountSkillData::has_skill_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountSkillData::set_has_skill_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountSkillData::clear_has_skill_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountSkillData::clear_skill_lev() {
  skill_lev_ = 0u;
  clear_has_skill_lev();
}
inline ::google::protobuf::uint32 MountSkillData::skill_lev() const {
  return skill_lev_;
}
inline void MountSkillData::set_skill_lev(::google::protobuf::uint32 value) {
  set_has_skill_lev();
  skill_lev_ = value;
}

// -------------------------------------------------------------------

// MountKunData

// optional uint64 kun_id = 1;
inline bool MountKunData::has_kun_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountKunData::set_has_kun_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountKunData::clear_has_kun_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountKunData::clear_kun_id() {
  kun_id_ = GOOGLE_ULONGLONG(0);
  clear_has_kun_id();
}
inline ::google::protobuf::uint64 MountKunData::kun_id() const {
  return kun_id_;
}
inline void MountKunData::set_kun_id(::google::protobuf::uint64 value) {
  set_has_kun_id();
  kun_id_ = value;
}

// optional uint32 kun_lev = 2;
inline bool MountKunData::has_kun_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountKunData::set_has_kun_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountKunData::clear_has_kun_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountKunData::clear_kun_lev() {
  kun_lev_ = 0u;
  clear_has_kun_lev();
}
inline ::google::protobuf::uint32 MountKunData::kun_lev() const {
  return kun_lev_;
}
inline void MountKunData::set_kun_lev(::google::protobuf::uint32 value) {
  set_has_kun_lev();
  kun_lev_ = value;
}

// optional uint64 kun_lev_exp = 3;
inline bool MountKunData::has_kun_lev_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountKunData::set_has_kun_lev_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountKunData::clear_has_kun_lev_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountKunData::clear_kun_lev_exp() {
  kun_lev_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_kun_lev_exp();
}
inline ::google::protobuf::uint64 MountKunData::kun_lev_exp() const {
  return kun_lev_exp_;
}
inline void MountKunData::set_kun_lev_exp(::google::protobuf::uint64 value) {
  set_has_kun_lev_exp();
  kun_lev_exp_ = value;
}

// optional uint32 kun_star = 4;
inline bool MountKunData::has_kun_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountKunData::set_has_kun_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountKunData::clear_has_kun_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountKunData::clear_kun_star() {
  kun_star_ = 0u;
  clear_has_kun_star();
}
inline ::google::protobuf::uint32 MountKunData::kun_star() const {
  return kun_star_;
}
inline void MountKunData::set_kun_star(::google::protobuf::uint32 value) {
  set_has_kun_star();
  kun_star_ = value;
}

// -------------------------------------------------------------------

// MountBloodData

// optional uint64 blood_id = 1;
inline bool MountBloodData::has_blood_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountBloodData::set_has_blood_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountBloodData::clear_has_blood_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountBloodData::clear_blood_id() {
  blood_id_ = GOOGLE_ULONGLONG(0);
  clear_has_blood_id();
}
inline ::google::protobuf::uint64 MountBloodData::blood_id() const {
  return blood_id_;
}
inline void MountBloodData::set_blood_id(::google::protobuf::uint64 value) {
  set_has_blood_id();
  blood_id_ = value;
}

// optional uint32 blood_state = 2;
inline bool MountBloodData::has_blood_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountBloodData::set_has_blood_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountBloodData::clear_has_blood_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountBloodData::clear_blood_state() {
  blood_state_ = 0u;
  clear_has_blood_state();
}
inline ::google::protobuf::uint32 MountBloodData::blood_state() const {
  return blood_state_;
}
inline void MountBloodData::set_blood_state(::google::protobuf::uint32 value) {
  set_has_blood_state();
  blood_state_ = value;
}

// -------------------------------------------------------------------

// MountBabySlotData

// optional uint32 slot = 1;
inline bool MountBabySlotData::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountBabySlotData::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountBabySlotData::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountBabySlotData::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 MountBabySlotData::slot() const {
  return slot_;
}
inline void MountBabySlotData::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
}

// optional uint32 cur_state = 2;
inline bool MountBabySlotData::has_cur_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountBabySlotData::set_has_cur_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountBabySlotData::clear_has_cur_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountBabySlotData::clear_cur_state() {
  cur_state_ = 0u;
  clear_has_cur_state();
}
inline ::google::protobuf::uint32 MountBabySlotData::cur_state() const {
  return cur_state_;
}
inline void MountBabySlotData::set_cur_state(::google::protobuf::uint32 value) {
  set_has_cur_state();
  cur_state_ = value;
}

// optional int64 cur_baby_eggid = 3;
inline bool MountBabySlotData::has_cur_baby_eggid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountBabySlotData::set_has_cur_baby_eggid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountBabySlotData::clear_has_cur_baby_eggid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountBabySlotData::clear_cur_baby_eggid() {
  cur_baby_eggid_ = GOOGLE_LONGLONG(0);
  clear_has_cur_baby_eggid();
}
inline ::google::protobuf::int64 MountBabySlotData::cur_baby_eggid() const {
  return cur_baby_eggid_;
}
inline void MountBabySlotData::set_cur_baby_eggid(::google::protobuf::int64 value) {
  set_has_cur_baby_eggid();
  cur_baby_eggid_ = value;
}

// optional int64 cur_baby_create_time = 4;
inline bool MountBabySlotData::has_cur_baby_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountBabySlotData::set_has_cur_baby_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountBabySlotData::clear_has_cur_baby_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountBabySlotData::clear_cur_baby_create_time() {
  cur_baby_create_time_ = GOOGLE_LONGLONG(0);
  clear_has_cur_baby_create_time();
}
inline ::google::protobuf::int64 MountBabySlotData::cur_baby_create_time() const {
  return cur_baby_create_time_;
}
inline void MountBabySlotData::set_cur_baby_create_time(::google::protobuf::int64 value) {
  set_has_cur_baby_create_time();
  cur_baby_create_time_ = value;
}

// -------------------------------------------------------------------

// StatisticDataProto

// optional int32 level = 1;
inline bool StatisticDataProto::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatisticDataProto::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatisticDataProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatisticDataProto::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 StatisticDataProto::level() const {
  return level_;
}
inline void StatisticDataProto::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 total_login_day = 2;
inline bool StatisticDataProto::has_total_login_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatisticDataProto::set_has_total_login_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatisticDataProto::clear_has_total_login_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatisticDataProto::clear_total_login_day() {
  total_login_day_ = 0u;
  clear_has_total_login_day();
}
inline ::google::protobuf::uint32 StatisticDataProto::total_login_day() const {
  return total_login_day_;
}
inline void StatisticDataProto::set_total_login_day(::google::protobuf::uint32 value) {
  set_has_total_login_day();
  total_login_day_ = value;
}

// optional uint32 total_rmb = 3;
inline bool StatisticDataProto::has_total_rmb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatisticDataProto::set_has_total_rmb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatisticDataProto::clear_has_total_rmb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatisticDataProto::clear_total_rmb() {
  total_rmb_ = 0u;
  clear_has_total_rmb();
}
inline ::google::protobuf::uint32 StatisticDataProto::total_rmb() const {
  return total_rmb_;
}
inline void StatisticDataProto::set_total_rmb(::google::protobuf::uint32 value) {
  set_has_total_rmb();
  total_rmb_ = value;
}

// optional uint32 today_rmb = 4;
inline bool StatisticDataProto::has_today_rmb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatisticDataProto::set_has_today_rmb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatisticDataProto::clear_has_today_rmb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatisticDataProto::clear_today_rmb() {
  today_rmb_ = 0u;
  clear_has_today_rmb();
}
inline ::google::protobuf::uint32 StatisticDataProto::today_rmb() const {
  return today_rmb_;
}
inline void StatisticDataProto::set_today_rmb(::google::protobuf::uint32 value) {
  set_has_today_rmb();
  today_rmb_ = value;
}

// optional uint32 total_activityCount = 5;
inline bool StatisticDataProto::has_total_activitycount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StatisticDataProto::set_has_total_activitycount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StatisticDataProto::clear_has_total_activitycount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StatisticDataProto::clear_total_activitycount() {
  total_activitycount_ = 0u;
  clear_has_total_activitycount();
}
inline ::google::protobuf::uint32 StatisticDataProto::total_activitycount() const {
  return total_activitycount_;
}
inline void StatisticDataProto::set_total_activitycount(::google::protobuf::uint32 value) {
  set_has_total_activitycount();
  total_activitycount_ = value;
}

// -------------------------------------------------------------------

// GodRelicsTaskEntry

// optional uint64 task_cfg_id = 1;
inline bool GodRelicsTaskEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodRelicsTaskEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodRelicsTaskEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodRelicsTaskEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 GodRelicsTaskEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void GodRelicsTaskEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool GodRelicsTaskEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodRelicsTaskEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodRelicsTaskEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodRelicsTaskEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 GodRelicsTaskEntry::cur_num() const {
  return cur_num_;
}
inline void GodRelicsTaskEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool GodRelicsTaskEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodRelicsTaskEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodRelicsTaskEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodRelicsTaskEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 GodRelicsTaskEntry::task_state() const {
  return task_state_;
}
inline void GodRelicsTaskEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// -------------------------------------------------------------------

// GodRelicsTaskGroupEntry

// optional uint64 group_cfg_id = 1;
inline bool GodRelicsTaskGroupEntry::has_group_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodRelicsTaskGroupEntry::set_has_group_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodRelicsTaskGroupEntry::clear_has_group_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodRelicsTaskGroupEntry::clear_group_cfg_id() {
  group_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_cfg_id();
}
inline ::google::protobuf::uint64 GodRelicsTaskGroupEntry::group_cfg_id() const {
  return group_cfg_id_;
}
inline void GodRelicsTaskGroupEntry::set_group_cfg_id(::google::protobuf::uint64 value) {
  set_has_group_cfg_id();
  group_cfg_id_ = value;
}

// repeated .proto_ff.GodRelicsTaskEntry entrys = 2;
inline int GodRelicsTaskGroupEntry::entrys_size() const {
  return entrys_.size();
}
inline void GodRelicsTaskGroupEntry::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::GodRelicsTaskEntry& GodRelicsTaskGroupEntry::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::GodRelicsTaskEntry* GodRelicsTaskGroupEntry::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::GodRelicsTaskEntry* GodRelicsTaskGroupEntry::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >&
GodRelicsTaskGroupEntry::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskEntry >*
GodRelicsTaskGroupEntry::mutable_entrys() {
  return &entrys_;
}

// optional int32 normal_reward_state = 3;
inline bool GodRelicsTaskGroupEntry::has_normal_reward_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodRelicsTaskGroupEntry::set_has_normal_reward_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodRelicsTaskGroupEntry::clear_has_normal_reward_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodRelicsTaskGroupEntry::clear_normal_reward_state() {
  normal_reward_state_ = 0;
  clear_has_normal_reward_state();
}
inline ::google::protobuf::int32 GodRelicsTaskGroupEntry::normal_reward_state() const {
  return normal_reward_state_;
}
inline void GodRelicsTaskGroupEntry::set_normal_reward_state(::google::protobuf::int32 value) {
  set_has_normal_reward_state();
  normal_reward_state_ = value;
}

// optional uint64 create_time = 5;
inline bool GodRelicsTaskGroupEntry::has_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GodRelicsTaskGroupEntry::set_has_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GodRelicsTaskGroupEntry::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GodRelicsTaskGroupEntry::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 GodRelicsTaskGroupEntry::create_time() const {
  return create_time_;
}
inline void GodRelicsTaskGroupEntry::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
}

// -------------------------------------------------------------------

// DailyTaskEntry

// optional uint64 task_cfg_id = 1;
inline bool DailyTaskEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 DailyTaskEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void DailyTaskEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool DailyTaskEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 DailyTaskEntry::cur_num() const {
  return cur_num_;
}
inline void DailyTaskEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool DailyTaskEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 DailyTaskEntry::task_state() const {
  return task_state_;
}
inline void DailyTaskEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// optional uint64 last_time = 4;
inline bool DailyTaskEntry::has_last_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskEntry::set_has_last_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskEntry::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskEntry::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 DailyTaskEntry::last_time() const {
  return last_time_;
}
inline void DailyTaskEntry::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// optional int32 buy_num = 5;
inline bool DailyTaskEntry::has_buy_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskEntry::set_has_buy_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskEntry::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskEntry::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 DailyTaskEntry::buy_num() const {
  return buy_num_;
}
inline void DailyTaskEntry::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// -------------------------------------------------------------------

// DailyTaskLimitEntry

// optional uint64 task_cfg_id = 1;
inline bool DailyTaskLimitEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskLimitEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskLimitEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskLimitEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 DailyTaskLimitEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void DailyTaskLimitEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool DailyTaskLimitEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskLimitEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskLimitEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskLimitEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 DailyTaskLimitEntry::cur_num() const {
  return cur_num_;
}
inline void DailyTaskLimitEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool DailyTaskLimitEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskLimitEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskLimitEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskLimitEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 DailyTaskLimitEntry::task_state() const {
  return task_state_;
}
inline void DailyTaskLimitEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// optional uint64 last_time = 4;
inline bool DailyTaskLimitEntry::has_last_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskLimitEntry::set_has_last_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskLimitEntry::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskLimitEntry::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 DailyTaskLimitEntry::last_time() const {
  return last_time_;
}
inline void DailyTaskLimitEntry::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// optional int32 buy_num = 5;
inline bool DailyTaskLimitEntry::has_buy_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskLimitEntry::set_has_buy_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskLimitEntry::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskLimitEntry::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 DailyTaskLimitEntry::buy_num() const {
  return buy_num_;
}
inline void DailyTaskLimitEntry::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// optional bool ready_add = 6;
inline bool DailyTaskLimitEntry::has_ready_add() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyTaskLimitEntry::set_has_ready_add() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyTaskLimitEntry::clear_has_ready_add() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyTaskLimitEntry::clear_ready_add() {
  ready_add_ = false;
  clear_has_ready_add();
}
inline bool DailyTaskLimitEntry::ready_add() const {
  return ready_add_;
}
inline void DailyTaskLimitEntry::set_ready_add(bool value) {
  set_has_ready_add();
  ready_add_ = value;
}

// optional bool is_open = 7;
inline bool DailyTaskLimitEntry::has_is_open() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DailyTaskLimitEntry::set_has_is_open() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DailyTaskLimitEntry::clear_has_is_open() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DailyTaskLimitEntry::clear_is_open() {
  is_open_ = false;
  clear_has_is_open();
}
inline bool DailyTaskLimitEntry::is_open() const {
  return is_open_;
}
inline void DailyTaskLimitEntry::set_is_open(bool value) {
  set_has_is_open();
  is_open_ = value;
}

// -------------------------------------------------------------------

// DailyTaskBackDayEntry

// optional int32 left_num = 1;
inline bool DailyTaskBackDayEntry::has_left_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskBackDayEntry::set_has_left_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskBackDayEntry::clear_has_left_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskBackDayEntry::clear_left_num() {
  left_num_ = 0;
  clear_has_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackDayEntry::left_num() const {
  return left_num_;
}
inline void DailyTaskBackDayEntry::set_left_num(::google::protobuf::int32 value) {
  set_has_left_num();
  left_num_ = value;
}

// optional int32 external_left_num = 2;
inline bool DailyTaskBackDayEntry::has_external_left_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskBackDayEntry::set_has_external_left_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskBackDayEntry::clear_has_external_left_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskBackDayEntry::clear_external_left_num() {
  external_left_num_ = 0;
  clear_has_external_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackDayEntry::external_left_num() const {
  return external_left_num_;
}
inline void DailyTaskBackDayEntry::set_external_left_num(::google::protobuf::int32 value) {
  set_has_external_left_num();
  external_left_num_ = value;
}

// optional int64 last_time = 3;
inline bool DailyTaskBackDayEntry::has_last_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskBackDayEntry::set_has_last_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskBackDayEntry::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskBackDayEntry::clear_last_time() {
  last_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::int64 DailyTaskBackDayEntry::last_time() const {
  return last_time_;
}
inline void DailyTaskBackDayEntry::set_last_time(::google::protobuf::int64 value) {
  set_has_last_time();
  last_time_ = value;
}

// -------------------------------------------------------------------

// DailyTaskBackEntry

// optional uint64 task_cfg_id = 1;
inline bool DailyTaskBackEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskBackEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskBackEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskBackEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 DailyTaskBackEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void DailyTaskBackEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 task_state = 3;
inline bool DailyTaskBackEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskBackEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskBackEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskBackEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 DailyTaskBackEntry::task_state() const {
  return task_state_;
}
inline void DailyTaskBackEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// repeated .proto_ff.DailyTaskBackDayEntry day_data = 4;
inline int DailyTaskBackEntry::day_data_size() const {
  return day_data_.size();
}
inline void DailyTaskBackEntry::clear_day_data() {
  day_data_.Clear();
}
inline const ::proto_ff::DailyTaskBackDayEntry& DailyTaskBackEntry::day_data(int index) const {
  return day_data_.Get(index);
}
inline ::proto_ff::DailyTaskBackDayEntry* DailyTaskBackEntry::mutable_day_data(int index) {
  return day_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskBackDayEntry* DailyTaskBackEntry::add_day_data() {
  return day_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >&
DailyTaskBackEntry::day_data() const {
  return day_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackDayEntry >*
DailyTaskBackEntry::mutable_day_data() {
  return &day_data_;
}

// optional int32 left_num = 5;
inline bool DailyTaskBackEntry::has_left_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskBackEntry::set_has_left_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskBackEntry::clear_has_left_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskBackEntry::clear_left_num() {
  left_num_ = 0;
  clear_has_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackEntry::left_num() const {
  return left_num_;
}
inline void DailyTaskBackEntry::set_left_num(::google::protobuf::int32 value) {
  set_has_left_num();
  left_num_ = value;
}

// optional int32 external_left_num = 6;
inline bool DailyTaskBackEntry::has_external_left_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskBackEntry::set_has_external_left_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskBackEntry::clear_has_external_left_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskBackEntry::clear_external_left_num() {
  external_left_num_ = 0;
  clear_has_external_left_num();
}
inline ::google::protobuf::int32 DailyTaskBackEntry::external_left_num() const {
  return external_left_num_;
}
inline void DailyTaskBackEntry::set_external_left_num(::google::protobuf::int32 value) {
  set_has_external_left_num();
  external_left_num_ = value;
}

// -------------------------------------------------------------------

// DailyTaskRewardEntry

// optional uint64 reward_id = 1;
inline bool DailyTaskRewardEntry::has_reward_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskRewardEntry::set_has_reward_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskRewardEntry::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskRewardEntry::clear_reward_id() {
  reward_id_ = GOOGLE_ULONGLONG(0);
  clear_has_reward_id();
}
inline ::google::protobuf::uint64 DailyTaskRewardEntry::reward_id() const {
  return reward_id_;
}
inline void DailyTaskRewardEntry::set_reward_id(::google::protobuf::uint64 value) {
  set_has_reward_id();
  reward_id_ = value;
}

// optional int32 state = 2;
inline bool DailyTaskRewardEntry::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskRewardEntry::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskRewardEntry::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskRewardEntry::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DailyTaskRewardEntry::state() const {
  return state_;
}
inline void DailyTaskRewardEntry::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// DailyTaskAllData

// repeated .proto_ff.DailyTaskEntry task_data = 1;
inline int DailyTaskAllData::task_data_size() const {
  return task_data_.size();
}
inline void DailyTaskAllData::clear_task_data() {
  task_data_.Clear();
}
inline const ::proto_ff::DailyTaskEntry& DailyTaskAllData::task_data(int index) const {
  return task_data_.Get(index);
}
inline ::proto_ff::DailyTaskEntry* DailyTaskAllData::mutable_task_data(int index) {
  return task_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskEntry* DailyTaskAllData::add_task_data() {
  return task_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >&
DailyTaskAllData::task_data() const {
  return task_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >*
DailyTaskAllData::mutable_task_data() {
  return &task_data_;
}

// repeated .proto_ff.DailyTaskLimitEntry task_limit_data = 2;
inline int DailyTaskAllData::task_limit_data_size() const {
  return task_limit_data_.size();
}
inline void DailyTaskAllData::clear_task_limit_data() {
  task_limit_data_.Clear();
}
inline const ::proto_ff::DailyTaskLimitEntry& DailyTaskAllData::task_limit_data(int index) const {
  return task_limit_data_.Get(index);
}
inline ::proto_ff::DailyTaskLimitEntry* DailyTaskAllData::mutable_task_limit_data(int index) {
  return task_limit_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskLimitEntry* DailyTaskAllData::add_task_limit_data() {
  return task_limit_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >&
DailyTaskAllData::task_limit_data() const {
  return task_limit_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >*
DailyTaskAllData::mutable_task_limit_data() {
  return &task_limit_data_;
}

// repeated .proto_ff.DailyTaskBackEntry back_data = 3;
inline int DailyTaskAllData::back_data_size() const {
  return back_data_.size();
}
inline void DailyTaskAllData::clear_back_data() {
  back_data_.Clear();
}
inline const ::proto_ff::DailyTaskBackEntry& DailyTaskAllData::back_data(int index) const {
  return back_data_.Get(index);
}
inline ::proto_ff::DailyTaskBackEntry* DailyTaskAllData::mutable_back_data(int index) {
  return back_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskBackEntry* DailyTaskAllData::add_back_data() {
  return back_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >&
DailyTaskAllData::back_data() const {
  return back_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >*
DailyTaskAllData::mutable_back_data() {
  return &back_data_;
}

// repeated .proto_ff.DailyTaskRewardEntry reward_data = 4;
inline int DailyTaskAllData::reward_data_size() const {
  return reward_data_.size();
}
inline void DailyTaskAllData::clear_reward_data() {
  reward_data_.Clear();
}
inline const ::proto_ff::DailyTaskRewardEntry& DailyTaskAllData::reward_data(int index) const {
  return reward_data_.Get(index);
}
inline ::proto_ff::DailyTaskRewardEntry* DailyTaskAllData::mutable_reward_data(int index) {
  return reward_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskRewardEntry* DailyTaskAllData::add_reward_data() {
  return reward_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >&
DailyTaskAllData::reward_data() const {
  return reward_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >*
DailyTaskAllData::mutable_reward_data() {
  return &reward_data_;
}

// optional uint32 daily_score = 5;
inline bool DailyTaskAllData::has_daily_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskAllData::set_has_daily_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskAllData::clear_has_daily_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskAllData::clear_daily_score() {
  daily_score_ = 0u;
  clear_has_daily_score();
}
inline ::google::protobuf::uint32 DailyTaskAllData::daily_score() const {
  return daily_score_;
}
inline void DailyTaskAllData::set_daily_score(::google::protobuf::uint32 value) {
  set_has_daily_score();
  daily_score_ = value;
}

// optional uint32 daily_level = 6;
inline bool DailyTaskAllData::has_daily_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyTaskAllData::set_has_daily_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyTaskAllData::clear_has_daily_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyTaskAllData::clear_daily_level() {
  daily_level_ = 0u;
  clear_has_daily_level();
}
inline ::google::protobuf::uint32 DailyTaskAllData::daily_level() const {
  return daily_level_;
}
inline void DailyTaskAllData::set_daily_level(::google::protobuf::uint32 value) {
  set_has_daily_level();
  daily_level_ = value;
}

// optional uint64 create_time = 7;
inline bool DailyTaskAllData::has_create_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DailyTaskAllData::set_has_create_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DailyTaskAllData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DailyTaskAllData::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 DailyTaskAllData::create_time() const {
  return create_time_;
}
inline void DailyTaskAllData::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
}

// optional uint64 daily_exp = 8;
inline bool DailyTaskAllData::has_daily_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DailyTaskAllData::set_has_daily_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DailyTaskAllData::clear_has_daily_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DailyTaskAllData::clear_daily_exp() {
  daily_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_daily_exp();
}
inline ::google::protobuf::uint64 DailyTaskAllData::daily_exp() const {
  return daily_exp_;
}
inline void DailyTaskAllData::set_daily_exp(::google::protobuf::uint64 value) {
  set_has_daily_exp();
  daily_exp_ = value;
}

// -------------------------------------------------------------------

// CharacterDBRecentSubmitMission

// optional int32 mission_type = 1;
inline bool CharacterDBRecentSubmitMission::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBRecentSubmitMission::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBRecentSubmitMission::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBRecentSubmitMission::clear_mission_type() {
  mission_type_ = 0;
  clear_has_mission_type();
}
inline ::google::protobuf::int32 CharacterDBRecentSubmitMission::mission_type() const {
  return mission_type_;
}
inline void CharacterDBRecentSubmitMission::set_mission_type(::google::protobuf::int32 value) {
  set_has_mission_type();
  mission_type_ = value;
}

// optional uint64 mission_id = 2;
inline bool CharacterDBRecentSubmitMission::has_mission_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBRecentSubmitMission::set_has_mission_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBRecentSubmitMission::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBRecentSubmitMission::clear_mission_id() {
  mission_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mission_id();
}
inline ::google::protobuf::uint64 CharacterDBRecentSubmitMission::mission_id() const {
  return mission_id_;
}
inline void CharacterDBRecentSubmitMission::set_mission_id(::google::protobuf::uint64 value) {
  set_has_mission_id();
  mission_id_ = value;
}

// -------------------------------------------------------------------

// CharacterDBMissionItemInfo

// optional uint32 type = 1;
inline bool CharacterDBMissionItemInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBMissionItemInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBMissionItemInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::type() const {
  return type_;
}
inline void CharacterDBMissionItemInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 id = 2;
inline bool CharacterDBMissionItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBMissionItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBMissionItemInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::id() const {
  return id_;
}
inline void CharacterDBMissionItemInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 currentValue = 3;
inline bool CharacterDBMissionItemInfo::has_currentvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_currentvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBMissionItemInfo::clear_has_currentvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBMissionItemInfo::clear_currentvalue() {
  currentvalue_ = 0u;
  clear_has_currentvalue();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::currentvalue() const {
  return currentvalue_;
}
inline void CharacterDBMissionItemInfo::set_currentvalue(::google::protobuf::uint32 value) {
  set_has_currentvalue();
  currentvalue_ = value;
}

// optional uint32 finalValue = 4;
inline bool CharacterDBMissionItemInfo::has_finalvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_finalvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBMissionItemInfo::clear_has_finalvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBMissionItemInfo::clear_finalvalue() {
  finalvalue_ = 0u;
  clear_has_finalvalue();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::finalvalue() const {
  return finalvalue_;
}
inline void CharacterDBMissionItemInfo::set_finalvalue(::google::protobuf::uint32 value) {
  set_has_finalvalue();
  finalvalue_ = value;
}

// optional bool completedFlag = 5;
inline bool CharacterDBMissionItemInfo::has_completedflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_completedflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBMissionItemInfo::clear_has_completedflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBMissionItemInfo::clear_completedflag() {
  completedflag_ = false;
  clear_has_completedflag();
}
inline bool CharacterDBMissionItemInfo::completedflag() const {
  return completedflag_;
}
inline void CharacterDBMissionItemInfo::set_completedflag(bool value) {
  set_has_completedflag();
  completedflag_ = value;
}

// optional uint64 parma1 = 6;
inline bool CharacterDBMissionItemInfo::has_parma1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBMissionItemInfo::clear_parma1() {
  parma1_ = GOOGLE_ULONGLONG(0);
  clear_has_parma1();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma1() const {
  return parma1_;
}
inline void CharacterDBMissionItemInfo::set_parma1(::google::protobuf::uint64 value) {
  set_has_parma1();
  parma1_ = value;
}

// optional uint64 parma2 = 7;
inline bool CharacterDBMissionItemInfo::has_parma2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBMissionItemInfo::clear_parma2() {
  parma2_ = GOOGLE_ULONGLONG(0);
  clear_has_parma2();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma2() const {
  return parma2_;
}
inline void CharacterDBMissionItemInfo::set_parma2(::google::protobuf::uint64 value) {
  set_has_parma2();
  parma2_ = value;
}

// optional uint64 parma3 = 8;
inline bool CharacterDBMissionItemInfo::has_parma3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBMissionItemInfo::clear_parma3() {
  parma3_ = GOOGLE_ULONGLONG(0);
  clear_has_parma3();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma3() const {
  return parma3_;
}
inline void CharacterDBMissionItemInfo::set_parma3(::google::protobuf::uint64 value) {
  set_has_parma3();
  parma3_ = value;
}

// -------------------------------------------------------------------

// CharacterDBMissionTrack

// optional uint64 missionId = 1;
inline bool CharacterDBMissionTrack::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBMissionTrack::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBMissionTrack::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBMissionTrack::clear_missionid() {
  missionid_ = GOOGLE_ULONGLONG(0);
  clear_has_missionid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::missionid() const {
  return missionid_;
}
inline void CharacterDBMissionTrack::set_missionid(::google::protobuf::uint64 value) {
  set_has_missionid();
  missionid_ = value;
}

// optional uint64 dynamicid = 2;
inline bool CharacterDBMissionTrack::has_dynamicid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBMissionTrack::set_has_dynamicid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBMissionTrack::clear_has_dynamicid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBMissionTrack::clear_dynamicid() {
  dynamicid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynamicid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::dynamicid() const {
  return dynamicid_;
}
inline void CharacterDBMissionTrack::set_dynamicid(::google::protobuf::uint64 value) {
  set_has_dynamicid();
  dynamicid_ = value;
}

// optional uint32 status = 3;
inline bool CharacterDBMissionTrack::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBMissionTrack::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBMissionTrack::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBMissionTrack::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CharacterDBMissionTrack::status() const {
  return status_;
}
inline void CharacterDBMissionTrack::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint64 acceptMissionTime = 4;
inline bool CharacterDBMissionTrack::has_acceptmissiontime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBMissionTrack::set_has_acceptmissiontime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBMissionTrack::clear_has_acceptmissiontime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBMissionTrack::clear_acceptmissiontime() {
  acceptmissiontime_ = GOOGLE_ULONGLONG(0);
  clear_has_acceptmissiontime();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::acceptmissiontime() const {
  return acceptmissiontime_;
}
inline void CharacterDBMissionTrack::set_acceptmissiontime(::google::protobuf::uint64 value) {
  set_has_acceptmissiontime();
  acceptmissiontime_ = value;
}

// repeated .proto_ff.CharacterDBMissionItemInfo itemInfo = 5;
inline int CharacterDBMissionTrack::iteminfo_size() const {
  return iteminfo_.size();
}
inline void CharacterDBMissionTrack::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::proto_ff::CharacterDBMissionItemInfo& CharacterDBMissionTrack::iteminfo(int index) const {
  return iteminfo_.Get(index);
}
inline ::proto_ff::CharacterDBMissionItemInfo* CharacterDBMissionTrack::mutable_iteminfo(int index) {
  return iteminfo_.Mutable(index);
}
inline ::proto_ff::CharacterDBMissionItemInfo* CharacterDBMissionTrack::add_iteminfo() {
  return iteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >&
CharacterDBMissionTrack::iteminfo() const {
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >*
CharacterDBMissionTrack::mutable_iteminfo() {
  return &iteminfo_;
}

// optional uint64 textid = 6;
inline bool CharacterDBMissionTrack::has_textid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBMissionTrack::set_has_textid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBMissionTrack::clear_has_textid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBMissionTrack::clear_textid() {
  textid_ = GOOGLE_ULONGLONG(0);
  clear_has_textid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::textid() const {
  return textid_;
}
inline void CharacterDBMissionTrack::set_textid(::google::protobuf::uint64 value) {
  set_has_textid();
  textid_ = value;
}

// optional uint32 missionType = 7;
inline bool CharacterDBMissionTrack::has_missiontype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBMissionTrack::set_has_missiontype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBMissionTrack::clear_has_missiontype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBMissionTrack::clear_missiontype() {
  missiontype_ = 0u;
  clear_has_missiontype();
}
inline ::google::protobuf::uint32 CharacterDBMissionTrack::missiontype() const {
  return missiontype_;
}
inline void CharacterDBMissionTrack::set_missiontype(::google::protobuf::uint32 value) {
  set_has_missiontype();
  missiontype_ = value;
}

// -------------------------------------------------------------------

// CharacterDBDyMissionBountyParam

// optional uint32 ten_state = 1;
inline bool CharacterDBDyMissionBountyParam::has_ten_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBDyMissionBountyParam::set_has_ten_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBDyMissionBountyParam::clear_has_ten_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBDyMissionBountyParam::clear_ten_state() {
  ten_state_ = 0u;
  clear_has_ten_state();
}
inline ::google::protobuf::uint32 CharacterDBDyMissionBountyParam::ten_state() const {
  return ten_state_;
}
inline void CharacterDBDyMissionBountyParam::set_ten_state(::google::protobuf::uint32 value) {
  set_has_ten_state();
  ten_state_ = value;
}

// optional uint32 twenty_state = 2;
inline bool CharacterDBDyMissionBountyParam::has_twenty_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBDyMissionBountyParam::set_has_twenty_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBDyMissionBountyParam::clear_has_twenty_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBDyMissionBountyParam::clear_twenty_state() {
  twenty_state_ = 0u;
  clear_has_twenty_state();
}
inline ::google::protobuf::uint32 CharacterDBDyMissionBountyParam::twenty_state() const {
  return twenty_state_;
}
inline void CharacterDBDyMissionBountyParam::set_twenty_state(::google::protobuf::uint32 value) {
  set_has_twenty_state();
  twenty_state_ = value;
}

// -------------------------------------------------------------------

// CharacterDBDyMissionInfo

// optional int32 mission_type = 1;
inline bool CharacterDBDyMissionInfo::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBDyMissionInfo::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBDyMissionInfo::clear_mission_type() {
  mission_type_ = 0;
  clear_has_mission_type();
}
inline ::google::protobuf::int32 CharacterDBDyMissionInfo::mission_type() const {
  return mission_type_;
}
inline void CharacterDBDyMissionInfo::set_mission_type(::google::protobuf::int32 value) {
  set_has_mission_type();
  mission_type_ = value;
}

// optional uint64 lastfresh = 2;
inline bool CharacterDBDyMissionInfo::has_lastfresh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_lastfresh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBDyMissionInfo::clear_has_lastfresh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBDyMissionInfo::clear_lastfresh() {
  lastfresh_ = GOOGLE_ULONGLONG(0);
  clear_has_lastfresh();
}
inline ::google::protobuf::uint64 CharacterDBDyMissionInfo::lastfresh() const {
  return lastfresh_;
}
inline void CharacterDBDyMissionInfo::set_lastfresh(::google::protobuf::uint64 value) {
  set_has_lastfresh();
  lastfresh_ = value;
}

// optional int32 accept_num = 3;
inline bool CharacterDBDyMissionInfo::has_accept_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_accept_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBDyMissionInfo::clear_has_accept_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBDyMissionInfo::clear_accept_num() {
  accept_num_ = 0;
  clear_has_accept_num();
}
inline ::google::protobuf::int32 CharacterDBDyMissionInfo::accept_num() const {
  return accept_num_;
}
inline void CharacterDBDyMissionInfo::set_accept_num(::google::protobuf::int32 value) {
  set_has_accept_num();
  accept_num_ = value;
}

// optional .proto_ff.CharacterDBDyMissionBountyParam bounty_param = 4;
inline bool CharacterDBDyMissionInfo::has_bounty_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_bounty_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBDyMissionInfo::clear_has_bounty_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBDyMissionInfo::clear_bounty_param() {
  if (bounty_param_ != NULL) bounty_param_->::proto_ff::CharacterDBDyMissionBountyParam::Clear();
  clear_has_bounty_param();
}
inline const ::proto_ff::CharacterDBDyMissionBountyParam& CharacterDBDyMissionInfo::bounty_param() const {
  return bounty_param_ != NULL ? *bounty_param_ : *default_instance_->bounty_param_;
}
inline ::proto_ff::CharacterDBDyMissionBountyParam* CharacterDBDyMissionInfo::mutable_bounty_param() {
  set_has_bounty_param();
  if (bounty_param_ == NULL) bounty_param_ = new ::proto_ff::CharacterDBDyMissionBountyParam;
  return bounty_param_;
}
inline ::proto_ff::CharacterDBDyMissionBountyParam* CharacterDBDyMissionInfo::release_bounty_param() {
  clear_has_bounty_param();
  ::proto_ff::CharacterDBDyMissionBountyParam* temp = bounty_param_;
  bounty_param_ = NULL;
  return temp;
}
inline void CharacterDBDyMissionInfo::set_allocated_bounty_param(::proto_ff::CharacterDBDyMissionBountyParam* bounty_param) {
  delete bounty_param_;
  bounty_param_ = bounty_param;
  if (bounty_param) {
    set_has_bounty_param();
  } else {
    clear_has_bounty_param();
  }
}

// -------------------------------------------------------------------

// GuildPrestigeMissionDBData

// optional int64 prestige_id = 1;
inline bool GuildPrestigeMissionDBData::has_prestige_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildPrestigeMissionDBData::set_has_prestige_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildPrestigeMissionDBData::clear_has_prestige_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildPrestigeMissionDBData::clear_prestige_id() {
  prestige_id_ = GOOGLE_LONGLONG(0);
  clear_has_prestige_id();
}
inline ::google::protobuf::int64 GuildPrestigeMissionDBData::prestige_id() const {
  return prestige_id_;
}
inline void GuildPrestigeMissionDBData::set_prestige_id(::google::protobuf::int64 value) {
  set_has_prestige_id();
  prestige_id_ = value;
}

// optional int64 task_id = 2;
inline bool GuildPrestigeMissionDBData::has_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildPrestigeMissionDBData::set_has_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildPrestigeMissionDBData::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildPrestigeMissionDBData::clear_task_id() {
  task_id_ = GOOGLE_LONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::int64 GuildPrestigeMissionDBData::task_id() const {
  return task_id_;
}
inline void GuildPrestigeMissionDBData::set_task_id(::google::protobuf::int64 value) {
  set_has_task_id();
  task_id_ = value;
}

// optional int32 task_state = 3;
inline bool GuildPrestigeMissionDBData::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildPrestigeMissionDBData::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildPrestigeMissionDBData::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildPrestigeMissionDBData::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDBData::task_state() const {
  return task_state_;
}
inline void GuildPrestigeMissionDBData::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// optional int32 index = 4;
inline bool GuildPrestigeMissionDBData::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildPrestigeMissionDBData::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildPrestigeMissionDBData::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildPrestigeMissionDBData::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDBData::index() const {
  return index_;
}
inline void GuildPrestigeMissionDBData::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional .proto_ff.CharacterDBMissionTrack track = 5;
inline bool GuildPrestigeMissionDBData::has_track() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildPrestigeMissionDBData::set_has_track() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildPrestigeMissionDBData::clear_has_track() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildPrestigeMissionDBData::clear_track() {
  if (track_ != NULL) track_->::proto_ff::CharacterDBMissionTrack::Clear();
  clear_has_track();
}
inline const ::proto_ff::CharacterDBMissionTrack& GuildPrestigeMissionDBData::track() const {
  return track_ != NULL ? *track_ : *default_instance_->track_;
}
inline ::proto_ff::CharacterDBMissionTrack* GuildPrestigeMissionDBData::mutable_track() {
  set_has_track();
  if (track_ == NULL) track_ = new ::proto_ff::CharacterDBMissionTrack;
  return track_;
}
inline ::proto_ff::CharacterDBMissionTrack* GuildPrestigeMissionDBData::release_track() {
  clear_has_track();
  ::proto_ff::CharacterDBMissionTrack* temp = track_;
  track_ = NULL;
  return temp;
}
inline void GuildPrestigeMissionDBData::set_allocated_track(::proto_ff::CharacterDBMissionTrack* track) {
  delete track_;
  track_ = track;
  if (track) {
    set_has_track();
  } else {
    clear_has_track();
  }
}

// -------------------------------------------------------------------

// GuildPrestigeMissionDB

// optional int32 refresh_num = 1;
inline bool GuildPrestigeMissionDB::has_refresh_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildPrestigeMissionDB::set_has_refresh_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildPrestigeMissionDB::clear_has_refresh_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildPrestigeMissionDB::clear_refresh_num() {
  refresh_num_ = 0;
  clear_has_refresh_num();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDB::refresh_num() const {
  return refresh_num_;
}
inline void GuildPrestigeMissionDB::set_refresh_num(::google::protobuf::int32 value) {
  set_has_refresh_num();
  refresh_num_ = value;
}

// optional int32 all_refresh_num = 2;
inline bool GuildPrestigeMissionDB::has_all_refresh_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildPrestigeMissionDB::set_has_all_refresh_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildPrestigeMissionDB::clear_has_all_refresh_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildPrestigeMissionDB::clear_all_refresh_num() {
  all_refresh_num_ = 0;
  clear_has_all_refresh_num();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDB::all_refresh_num() const {
  return all_refresh_num_;
}
inline void GuildPrestigeMissionDB::set_all_refresh_num(::google::protobuf::int32 value) {
  set_has_all_refresh_num();
  all_refresh_num_ = value;
}

// optional int32 accept_num = 3;
inline bool GuildPrestigeMissionDB::has_accept_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildPrestigeMissionDB::set_has_accept_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildPrestigeMissionDB::clear_has_accept_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildPrestigeMissionDB::clear_accept_num() {
  accept_num_ = 0;
  clear_has_accept_num();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDB::accept_num() const {
  return accept_num_;
}
inline void GuildPrestigeMissionDB::set_accept_num(::google::protobuf::int32 value) {
  set_has_accept_num();
  accept_num_ = value;
}

// optional int32 all_accept_num = 4;
inline bool GuildPrestigeMissionDB::has_all_accept_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildPrestigeMissionDB::set_has_all_accept_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildPrestigeMissionDB::clear_has_all_accept_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildPrestigeMissionDB::clear_all_accept_num() {
  all_accept_num_ = 0;
  clear_has_all_accept_num();
}
inline ::google::protobuf::int32 GuildPrestigeMissionDB::all_accept_num() const {
  return all_accept_num_;
}
inline void GuildPrestigeMissionDB::set_all_accept_num(::google::protobuf::int32 value) {
  set_has_all_accept_num();
  all_accept_num_ = value;
}

// repeated .proto_ff.GuildPrestigeMissionDBData task_pool = 5;
inline int GuildPrestigeMissionDB::task_pool_size() const {
  return task_pool_.size();
}
inline void GuildPrestigeMissionDB::clear_task_pool() {
  task_pool_.Clear();
}
inline const ::proto_ff::GuildPrestigeMissionDBData& GuildPrestigeMissionDB::task_pool(int index) const {
  return task_pool_.Get(index);
}
inline ::proto_ff::GuildPrestigeMissionDBData* GuildPrestigeMissionDB::mutable_task_pool(int index) {
  return task_pool_.Mutable(index);
}
inline ::proto_ff::GuildPrestigeMissionDBData* GuildPrestigeMissionDB::add_task_pool() {
  return task_pool_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GuildPrestigeMissionDBData >&
GuildPrestigeMissionDB::task_pool() const {
  return task_pool_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GuildPrestigeMissionDBData >*
GuildPrestigeMissionDB::mutable_task_pool() {
  return &task_pool_;
}

// optional int64 last_refresh_time = 7;
inline bool GuildPrestigeMissionDB::has_last_refresh_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildPrestigeMissionDB::set_has_last_refresh_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildPrestigeMissionDB::clear_has_last_refresh_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildPrestigeMissionDB::clear_last_refresh_time() {
  last_refresh_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_refresh_time();
}
inline ::google::protobuf::int64 GuildPrestigeMissionDB::last_refresh_time() const {
  return last_refresh_time_;
}
inline void GuildPrestigeMissionDB::set_last_refresh_time(::google::protobuf::int64 value) {
  set_has_last_refresh_time();
  last_refresh_time_ = value;
}

// -------------------------------------------------------------------

// CharacterDBTaskData

// repeated .proto_ff.CharacterDBMissionTrack missionTrack = 1;
inline int CharacterDBTaskData::missiontrack_size() const {
  return missiontrack_.size();
}
inline void CharacterDBTaskData::clear_missiontrack() {
  missiontrack_.Clear();
}
inline const ::proto_ff::CharacterDBMissionTrack& CharacterDBTaskData::missiontrack(int index) const {
  return missiontrack_.Get(index);
}
inline ::proto_ff::CharacterDBMissionTrack* CharacterDBTaskData::mutable_missiontrack(int index) {
  return missiontrack_.Mutable(index);
}
inline ::proto_ff::CharacterDBMissionTrack* CharacterDBTaskData::add_missiontrack() {
  return missiontrack_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >&
CharacterDBTaskData::missiontrack() const {
  return missiontrack_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >*
CharacterDBTaskData::mutable_missiontrack() {
  return &missiontrack_;
}

// repeated .proto_ff.CharacterDBDyMissionInfo dyinfo = 2;
inline int CharacterDBTaskData::dyinfo_size() const {
  return dyinfo_.size();
}
inline void CharacterDBTaskData::clear_dyinfo() {
  dyinfo_.Clear();
}
inline const ::proto_ff::CharacterDBDyMissionInfo& CharacterDBTaskData::dyinfo(int index) const {
  return dyinfo_.Get(index);
}
inline ::proto_ff::CharacterDBDyMissionInfo* CharacterDBTaskData::mutable_dyinfo(int index) {
  return dyinfo_.Mutable(index);
}
inline ::proto_ff::CharacterDBDyMissionInfo* CharacterDBTaskData::add_dyinfo() {
  return dyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >&
CharacterDBTaskData::dyinfo() const {
  return dyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >*
CharacterDBTaskData::mutable_dyinfo() {
  return &dyinfo_;
}

// repeated uint64 already_submit = 3;
inline int CharacterDBTaskData::already_submit_size() const {
  return already_submit_.size();
}
inline void CharacterDBTaskData::clear_already_submit() {
  already_submit_.Clear();
}
inline ::google::protobuf::uint64 CharacterDBTaskData::already_submit(int index) const {
  return already_submit_.Get(index);
}
inline void CharacterDBTaskData::set_already_submit(int index, ::google::protobuf::uint64 value) {
  already_submit_.Set(index, value);
}
inline void CharacterDBTaskData::add_already_submit(::google::protobuf::uint64 value) {
  already_submit_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CharacterDBTaskData::already_submit() const {
  return already_submit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CharacterDBTaskData::mutable_already_submit() {
  return &already_submit_;
}

// repeated .proto_ff.CharacterDBRecentSubmitMission recent_submit = 4;
inline int CharacterDBTaskData::recent_submit_size() const {
  return recent_submit_.size();
}
inline void CharacterDBTaskData::clear_recent_submit() {
  recent_submit_.Clear();
}
inline const ::proto_ff::CharacterDBRecentSubmitMission& CharacterDBTaskData::recent_submit(int index) const {
  return recent_submit_.Get(index);
}
inline ::proto_ff::CharacterDBRecentSubmitMission* CharacterDBTaskData::mutable_recent_submit(int index) {
  return recent_submit_.Mutable(index);
}
inline ::proto_ff::CharacterDBRecentSubmitMission* CharacterDBTaskData::add_recent_submit() {
  return recent_submit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >&
CharacterDBTaskData::recent_submit() const {
  return recent_submit_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >*
CharacterDBTaskData::mutable_recent_submit() {
  return &recent_submit_;
}

// optional .proto_ff.GuildPrestigeMissionDB prestige_mission = 5;
inline bool CharacterDBTaskData::has_prestige_mission() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBTaskData::set_has_prestige_mission() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBTaskData::clear_has_prestige_mission() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBTaskData::clear_prestige_mission() {
  if (prestige_mission_ != NULL) prestige_mission_->::proto_ff::GuildPrestigeMissionDB::Clear();
  clear_has_prestige_mission();
}
inline const ::proto_ff::GuildPrestigeMissionDB& CharacterDBTaskData::prestige_mission() const {
  return prestige_mission_ != NULL ? *prestige_mission_ : *default_instance_->prestige_mission_;
}
inline ::proto_ff::GuildPrestigeMissionDB* CharacterDBTaskData::mutable_prestige_mission() {
  set_has_prestige_mission();
  if (prestige_mission_ == NULL) prestige_mission_ = new ::proto_ff::GuildPrestigeMissionDB;
  return prestige_mission_;
}
inline ::proto_ff::GuildPrestigeMissionDB* CharacterDBTaskData::release_prestige_mission() {
  clear_has_prestige_mission();
  ::proto_ff::GuildPrestigeMissionDB* temp = prestige_mission_;
  prestige_mission_ = NULL;
  return temp;
}
inline void CharacterDBTaskData::set_allocated_prestige_mission(::proto_ff::GuildPrestigeMissionDB* prestige_mission) {
  delete prestige_mission_;
  prestige_mission_ = prestige_mission;
  if (prestige_mission) {
    set_has_prestige_mission();
  } else {
    clear_has_prestige_mission();
  }
}

// -------------------------------------------------------------------

// NotifyVipDataRsp

// optional int32 exp = 1;
inline bool NotifyVipDataRsp::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyVipDataRsp::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyVipDataRsp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyVipDataRsp::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::exp() const {
  return exp_;
}
inline void NotifyVipDataRsp::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// repeated int32 ids = 2;
inline int NotifyVipDataRsp::ids_size() const {
  return ids_.size();
}
inline void NotifyVipDataRsp::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int32 NotifyVipDataRsp::ids(int index) const {
  return ids_.Get(index);
}
inline void NotifyVipDataRsp::set_ids(int index, ::google::protobuf::int32 value) {
  ids_.Set(index, value);
}
inline void NotifyVipDataRsp::add_ids(::google::protobuf::int32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyVipDataRsp::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyVipDataRsp::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// ArenaChallResult

// optional int32 result = 1;
inline bool ArenaChallResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaChallResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaChallResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaChallResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ArenaChallResult::result() const {
  return result_;
}
inline void ArenaChallResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional bool chall = 2;
inline bool ArenaChallResult::has_chall() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaChallResult::set_has_chall() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaChallResult::clear_has_chall() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaChallResult::clear_chall() {
  chall_ = false;
  clear_has_chall();
}
inline bool ArenaChallResult::chall() const {
  return chall_;
}
inline void ArenaChallResult::set_chall(bool value) {
  set_has_chall();
  chall_ = value;
}

// optional int64 time = 3;
inline bool ArenaChallResult::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaChallResult::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaChallResult::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaChallResult::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 ArenaChallResult::time() const {
  return time_;
}
inline void ArenaChallResult::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// optional string dst_name = 4;
inline bool ArenaChallResult::has_dst_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArenaChallResult::set_has_dst_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArenaChallResult::clear_has_dst_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArenaChallResult::clear_dst_name() {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    dst_name_->clear();
  }
  clear_has_dst_name();
}
inline const ::std::string& ArenaChallResult::dst_name() const {
  return *dst_name_;
}
inline void ArenaChallResult::set_dst_name(const ::std::string& value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void ArenaChallResult::set_dst_name(const char* value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void ArenaChallResult::set_dst_name(const char* value, size_t size) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaChallResult::mutable_dst_name() {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  return dst_name_;
}
inline ::std::string* ArenaChallResult::release_dst_name() {
  clear_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dst_name_;
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaChallResult::set_allocated_dst_name(::std::string* dst_name) {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_name_;
  }
  if (dst_name) {
    set_has_dst_name();
    dst_name_ = dst_name;
  } else {
    clear_has_dst_name();
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 src_rank_id = 5;
inline bool ArenaChallResult::has_src_rank_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArenaChallResult::set_has_src_rank_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArenaChallResult::clear_has_src_rank_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArenaChallResult::clear_src_rank_id() {
  src_rank_id_ = 0;
  clear_has_src_rank_id();
}
inline ::google::protobuf::int32 ArenaChallResult::src_rank_id() const {
  return src_rank_id_;
}
inline void ArenaChallResult::set_src_rank_id(::google::protobuf::int32 value) {
  set_has_src_rank_id();
  src_rank_id_ = value;
}

// optional int32 dst_rank_id = 6;
inline bool ArenaChallResult::has_dst_rank_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ArenaChallResult::set_has_dst_rank_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ArenaChallResult::clear_has_dst_rank_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ArenaChallResult::clear_dst_rank_id() {
  dst_rank_id_ = 0;
  clear_has_dst_rank_id();
}
inline ::google::protobuf::int32 ArenaChallResult::dst_rank_id() const {
  return dst_rank_id_;
}
inline void ArenaChallResult::set_dst_rank_id(::google::protobuf::int32 value) {
  set_has_dst_rank_id();
  dst_rank_id_ = value;
}

// repeated .proto_ff.ComItem items = 7;
inline int ArenaChallResult::items_size() const {
  return items_.size();
}
inline void ArenaChallResult::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ComItem& ArenaChallResult::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ComItem* ArenaChallResult::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ComItem* ArenaChallResult::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
ArenaChallResult::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
ArenaChallResult::mutable_items() {
  return &items_;
}

// optional int64 dup_id = 8;
inline bool ArenaChallResult::has_dup_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ArenaChallResult::set_has_dup_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ArenaChallResult::clear_has_dup_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ArenaChallResult::clear_dup_id() {
  dup_id_ = GOOGLE_LONGLONG(0);
  clear_has_dup_id();
}
inline ::google::protobuf::int64 ArenaChallResult::dup_id() const {
  return dup_id_;
}
inline void ArenaChallResult::set_dup_id(::google::protobuf::int64 value) {
  set_has_dup_id();
  dup_id_ = value;
}

// -------------------------------------------------------------------

// DailyArenaReward

// optional int32 cfg_id = 1;
inline bool DailyArenaReward::has_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyArenaReward::set_has_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyArenaReward::clear_has_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyArenaReward::clear_cfg_id() {
  cfg_id_ = 0;
  clear_has_cfg_id();
}
inline ::google::protobuf::int32 DailyArenaReward::cfg_id() const {
  return cfg_id_;
}
inline void DailyArenaReward::set_cfg_id(::google::protobuf::int32 value) {
  set_has_cfg_id();
  cfg_id_ = value;
}

// optional int32 state = 2;
inline bool DailyArenaReward::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyArenaReward::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyArenaReward::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyArenaReward::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DailyArenaReward::state() const {
  return state_;
}
inline void DailyArenaReward::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// ChallArenaReward

// optional int32 cfg_id = 1;
inline bool ChallArenaReward::has_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChallArenaReward::set_has_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChallArenaReward::clear_has_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChallArenaReward::clear_cfg_id() {
  cfg_id_ = 0;
  clear_has_cfg_id();
}
inline ::google::protobuf::int32 ChallArenaReward::cfg_id() const {
  return cfg_id_;
}
inline void ChallArenaReward::set_cfg_id(::google::protobuf::int32 value) {
  set_has_cfg_id();
  cfg_id_ = value;
}

// optional int32 state = 2;
inline bool ChallArenaReward::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChallArenaReward::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChallArenaReward::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChallArenaReward::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ChallArenaReward::state() const {
  return state_;
}
inline void ChallArenaReward::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// NotifyServerFlag

// optional int32 bt_dup = 1;
inline bool NotifyServerFlag::has_bt_dup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyServerFlag::set_has_bt_dup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyServerFlag::clear_has_bt_dup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyServerFlag::clear_bt_dup() {
  bt_dup_ = 0;
  clear_has_bt_dup();
}
inline ::google::protobuf::int32 NotifyServerFlag::bt_dup() const {
  return bt_dup_;
}
inline void NotifyServerFlag::set_bt_dup(::google::protobuf::int32 value) {
  set_has_bt_dup();
  bt_dup_ = value;
}

// -------------------------------------------------------------------

// FacadeSoulSkillData

// optional int64 skill_id = 1;
inline bool FacadeSoulSkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSoulSkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSoulSkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSoulSkillData::clear_skill_id() {
  skill_id_ = GOOGLE_LONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::int64 FacadeSoulSkillData::skill_id() const {
  return skill_id_;
}
inline void FacadeSoulSkillData::set_skill_id(::google::protobuf::int64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 status = 2;
inline bool FacadeSoulSkillData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSoulSkillData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSoulSkillData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSoulSkillData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FacadeSoulSkillData::status() const {
  return status_;
}
inline void FacadeSoulSkillData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FacadeSoulActivityData

// optional int64 activity_id = 1;
inline bool FacadeSoulActivityData::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSoulActivityData::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSoulActivityData::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSoulActivityData::clear_activity_id() {
  activity_id_ = GOOGLE_LONGLONG(0);
  clear_has_activity_id();
}
inline ::google::protobuf::int64 FacadeSoulActivityData::activity_id() const {
  return activity_id_;
}
inline void FacadeSoulActivityData::set_activity_id(::google::protobuf::int64 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// optional uint32 status = 2;
inline bool FacadeSoulActivityData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSoulActivityData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSoulActivityData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSoulActivityData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FacadeSoulActivityData::status() const {
  return status_;
}
inline void FacadeSoulActivityData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// FacadeSoulData

// optional uint32 soul_id = 1;
inline bool FacadeSoulData::has_soul_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSoulData::set_has_soul_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSoulData::clear_has_soul_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSoulData::clear_soul_id() {
  soul_id_ = 0u;
  clear_has_soul_id();
}
inline ::google::protobuf::uint32 FacadeSoulData::soul_id() const {
  return soul_id_;
}
inline void FacadeSoulData::set_soul_id(::google::protobuf::uint32 value) {
  set_has_soul_id();
  soul_id_ = value;
}

// optional bool soul_active = 2;
inline bool FacadeSoulData::has_soul_active() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSoulData::set_has_soul_active() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSoulData::clear_has_soul_active() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSoulData::clear_soul_active() {
  soul_active_ = false;
  clear_has_soul_active();
}
inline bool FacadeSoulData::soul_active() const {
  return soul_active_;
}
inline void FacadeSoulData::set_soul_active(bool value) {
  set_has_soul_active();
  soul_active_ = value;
}

// optional uint32 soul_level = 3;
inline bool FacadeSoulData::has_soul_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeSoulData::set_has_soul_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeSoulData::clear_has_soul_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeSoulData::clear_soul_level() {
  soul_level_ = 0u;
  clear_has_soul_level();
}
inline ::google::protobuf::uint32 FacadeSoulData::soul_level() const {
  return soul_level_;
}
inline void FacadeSoulData::set_soul_level(::google::protobuf::uint32 value) {
  set_has_soul_level();
  soul_level_ = value;
}

// repeated .proto_ff.FacadeSoulSkillData skill_data = 5;
inline int FacadeSoulData::skill_data_size() const {
  return skill_data_.size();
}
inline void FacadeSoulData::clear_skill_data() {
  skill_data_.Clear();
}
inline const ::proto_ff::FacadeSoulSkillData& FacadeSoulData::skill_data(int index) const {
  return skill_data_.Get(index);
}
inline ::proto_ff::FacadeSoulSkillData* FacadeSoulData::mutable_skill_data(int index) {
  return skill_data_.Mutable(index);
}
inline ::proto_ff::FacadeSoulSkillData* FacadeSoulData::add_skill_data() {
  return skill_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulSkillData >&
FacadeSoulData::skill_data() const {
  return skill_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulSkillData >*
FacadeSoulData::mutable_skill_data() {
  return &skill_data_;
}

// repeated .proto_ff.FacadeSoulActivityData acviity_data = 6;
inline int FacadeSoulData::acviity_data_size() const {
  return acviity_data_.size();
}
inline void FacadeSoulData::clear_acviity_data() {
  acviity_data_.Clear();
}
inline const ::proto_ff::FacadeSoulActivityData& FacadeSoulData::acviity_data(int index) const {
  return acviity_data_.Get(index);
}
inline ::proto_ff::FacadeSoulActivityData* FacadeSoulData::mutable_acviity_data(int index) {
  return acviity_data_.Mutable(index);
}
inline ::proto_ff::FacadeSoulActivityData* FacadeSoulData::add_acviity_data() {
  return acviity_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulActivityData >&
FacadeSoulData::acviity_data() const {
  return acviity_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSoulActivityData >*
FacadeSoulData::mutable_acviity_data() {
  return &acviity_data_;
}

// -------------------------------------------------------------------

// ItemSellProto

// required uint32 index = 1;
inline bool ItemSellProto::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemSellProto::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemSellProto::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemSellProto::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ItemSellProto::index() const {
  return index_;
}
inline void ItemSellProto::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 num = 2;
inline bool ItemSellProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemSellProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemSellProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemSellProto::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ItemSellProto::num() const {
  return num_;
}
inline void ItemSellProto::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// DeityFantasySkillData

// optional uint64 skill_id = 1;
inline bool DeityFantasySkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityFantasySkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityFantasySkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityFantasySkillData::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 DeityFantasySkillData::skill_id() const {
  return skill_id_;
}
inline void DeityFantasySkillData::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 skill_state = 2;
inline bool DeityFantasySkillData::has_skill_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityFantasySkillData::set_has_skill_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityFantasySkillData::clear_has_skill_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityFantasySkillData::clear_skill_state() {
  skill_state_ = 0u;
  clear_has_skill_state();
}
inline ::google::protobuf::uint32 DeityFantasySkillData::skill_state() const {
  return skill_state_;
}
inline void DeityFantasySkillData::set_skill_state(::google::protobuf::uint32 value) {
  set_has_skill_state();
  skill_state_ = value;
}

// -------------------------------------------------------------------

// DeityEquipData

// repeated .proto_ff.EquipInfo infos = 1;
inline int DeityEquipData::infos_size() const {
  return infos_.size();
}
inline void DeityEquipData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::EquipInfo& DeityEquipData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::EquipInfo* DeityEquipData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::EquipInfo* DeityEquipData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >&
DeityEquipData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >*
DeityEquipData::mutable_infos() {
  return &infos_;
}

// repeated .proto_ff.EquipLvAttrInfo lv_attr = 2;
inline int DeityEquipData::lv_attr_size() const {
  return lv_attr_.size();
}
inline void DeityEquipData::clear_lv_attr() {
  lv_attr_.Clear();
}
inline const ::proto_ff::EquipLvAttrInfo& DeityEquipData::lv_attr(int index) const {
  return lv_attr_.Get(index);
}
inline ::proto_ff::EquipLvAttrInfo* DeityEquipData::mutable_lv_attr(int index) {
  return lv_attr_.Mutable(index);
}
inline ::proto_ff::EquipLvAttrInfo* DeityEquipData::add_lv_attr() {
  return lv_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >&
DeityEquipData::lv_attr() const {
  return lv_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipLvAttrInfo >*
DeityEquipData::mutable_lv_attr() {
  return &lv_attr_;
}

// -------------------------------------------------------------------

// DeityEquipSuitData

// optional int64 id = 1;
inline bool DeityEquipSuitData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityEquipSuitData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityEquipSuitData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityEquipSuitData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 DeityEquipSuitData::id() const {
  return id_;
}
inline void DeityEquipSuitData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 state = 2;
inline bool DeityEquipSuitData::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityEquipSuitData::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityEquipSuitData::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityEquipSuitData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 DeityEquipSuitData::state() const {
  return state_;
}
inline void DeityEquipSuitData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// DeityFantasyData

// optional uint64 fantasy_id = 1;
inline bool DeityFantasyData::has_fantasy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityFantasyData::set_has_fantasy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityFantasyData::clear_has_fantasy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityFantasyData::clear_fantasy_id() {
  fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_id();
}
inline ::google::protobuf::uint64 DeityFantasyData::fantasy_id() const {
  return fantasy_id_;
}
inline void DeityFantasyData::set_fantasy_id(::google::protobuf::uint64 value) {
  set_has_fantasy_id();
  fantasy_id_ = value;
}

// optional uint32 fantasy_lev = 2;
inline bool DeityFantasyData::has_fantasy_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityFantasyData::set_has_fantasy_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityFantasyData::clear_has_fantasy_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityFantasyData::clear_fantasy_lev() {
  fantasy_lev_ = 0u;
  clear_has_fantasy_lev();
}
inline ::google::protobuf::uint32 DeityFantasyData::fantasy_lev() const {
  return fantasy_lev_;
}
inline void DeityFantasyData::set_fantasy_lev(::google::protobuf::uint32 value) {
  set_has_fantasy_lev();
  fantasy_lev_ = value;
}

// optional uint64 fantasy_lev_exp = 3;
inline bool DeityFantasyData::has_fantasy_lev_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeityFantasyData::set_has_fantasy_lev_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeityFantasyData::clear_has_fantasy_lev_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeityFantasyData::clear_fantasy_lev_exp() {
  fantasy_lev_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_lev_exp();
}
inline ::google::protobuf::uint64 DeityFantasyData::fantasy_lev_exp() const {
  return fantasy_lev_exp_;
}
inline void DeityFantasyData::set_fantasy_lev_exp(::google::protobuf::uint64 value) {
  set_has_fantasy_lev_exp();
  fantasy_lev_exp_ = value;
}

// optional uint32 fantasy_star = 4;
inline bool DeityFantasyData::has_fantasy_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeityFantasyData::set_has_fantasy_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeityFantasyData::clear_has_fantasy_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeityFantasyData::clear_fantasy_star() {
  fantasy_star_ = 0u;
  clear_has_fantasy_star();
}
inline ::google::protobuf::uint32 DeityFantasyData::fantasy_star() const {
  return fantasy_star_;
}
inline void DeityFantasyData::set_fantasy_star(::google::protobuf::uint32 value) {
  set_has_fantasy_star();
  fantasy_star_ = value;
}

// repeated .proto_ff.DeityFantasySkillData skill_data = 5;
inline int DeityFantasyData::skill_data_size() const {
  return skill_data_.size();
}
inline void DeityFantasyData::clear_skill_data() {
  skill_data_.Clear();
}
inline const ::proto_ff::DeityFantasySkillData& DeityFantasyData::skill_data(int index) const {
  return skill_data_.Get(index);
}
inline ::proto_ff::DeityFantasySkillData* DeityFantasyData::mutable_skill_data(int index) {
  return skill_data_.Mutable(index);
}
inline ::proto_ff::DeityFantasySkillData* DeityFantasyData::add_skill_data() {
  return skill_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityFantasySkillData >&
DeityFantasyData::skill_data() const {
  return skill_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityFantasySkillData >*
DeityFantasyData::mutable_skill_data() {
  return &skill_data_;
}

// optional uint64 fantasy_fight = 6;
inline bool DeityFantasyData::has_fantasy_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DeityFantasyData::set_has_fantasy_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DeityFantasyData::clear_has_fantasy_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DeityFantasyData::clear_fantasy_fight() {
  fantasy_fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_fight();
}
inline ::google::protobuf::uint64 DeityFantasyData::fantasy_fight() const {
  return fantasy_fight_;
}
inline void DeityFantasyData::set_fantasy_fight(::google::protobuf::uint64 value) {
  set_has_fantasy_fight();
  fantasy_fight_ = value;
}

// optional .proto_ff.DeityEquipData equip_data = 7;
inline bool DeityFantasyData::has_equip_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DeityFantasyData::set_has_equip_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DeityFantasyData::clear_has_equip_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DeityFantasyData::clear_equip_data() {
  if (equip_data_ != NULL) equip_data_->::proto_ff::DeityEquipData::Clear();
  clear_has_equip_data();
}
inline const ::proto_ff::DeityEquipData& DeityFantasyData::equip_data() const {
  return equip_data_ != NULL ? *equip_data_ : *default_instance_->equip_data_;
}
inline ::proto_ff::DeityEquipData* DeityFantasyData::mutable_equip_data() {
  set_has_equip_data();
  if (equip_data_ == NULL) equip_data_ = new ::proto_ff::DeityEquipData;
  return equip_data_;
}
inline ::proto_ff::DeityEquipData* DeityFantasyData::release_equip_data() {
  clear_has_equip_data();
  ::proto_ff::DeityEquipData* temp = equip_data_;
  equip_data_ = NULL;
  return temp;
}
inline void DeityFantasyData::set_allocated_equip_data(::proto_ff::DeityEquipData* equip_data) {
  delete equip_data_;
  equip_data_ = equip_data;
  if (equip_data) {
    set_has_equip_data();
  } else {
    clear_has_equip_data();
  }
}

// repeated .proto_ff.DeityEquipSuitData equip_suit_data = 8;
inline int DeityFantasyData::equip_suit_data_size() const {
  return equip_suit_data_.size();
}
inline void DeityFantasyData::clear_equip_suit_data() {
  equip_suit_data_.Clear();
}
inline const ::proto_ff::DeityEquipSuitData& DeityFantasyData::equip_suit_data(int index) const {
  return equip_suit_data_.Get(index);
}
inline ::proto_ff::DeityEquipSuitData* DeityFantasyData::mutable_equip_suit_data(int index) {
  return equip_suit_data_.Mutable(index);
}
inline ::proto_ff::DeityEquipSuitData* DeityFantasyData::add_equip_suit_data() {
  return equip_suit_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityEquipSuitData >&
DeityFantasyData::equip_suit_data() const {
  return equip_suit_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DeityEquipSuitData >*
DeityFantasyData::mutable_equip_suit_data() {
  return &equip_suit_data_;
}

// -------------------------------------------------------------------

// DeityFragmentData

// optional uint64 fragment_id = 1;
inline bool DeityFragmentData::has_fragment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityFragmentData::set_has_fragment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityFragmentData::clear_has_fragment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityFragmentData::clear_fragment_id() {
  fragment_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fragment_id();
}
inline ::google::protobuf::uint64 DeityFragmentData::fragment_id() const {
  return fragment_id_;
}
inline void DeityFragmentData::set_fragment_id(::google::protobuf::uint64 value) {
  set_has_fragment_id();
  fragment_id_ = value;
}

// optional uint32 use_times = 2;
inline bool DeityFragmentData::has_use_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityFragmentData::set_has_use_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityFragmentData::clear_has_use_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityFragmentData::clear_use_times() {
  use_times_ = 0u;
  clear_has_use_times();
}
inline ::google::protobuf::uint32 DeityFragmentData::use_times() const {
  return use_times_;
}
inline void DeityFragmentData::set_use_times(::google::protobuf::uint32 value) {
  set_has_use_times();
  use_times_ = value;
}

// -------------------------------------------------------------------

// DeitySkillData

// optional uint64 skill_id = 1;
inline bool DeitySkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeitySkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeitySkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeitySkillData::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 DeitySkillData::skill_id() const {
  return skill_id_;
}
inline void DeitySkillData::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 skill_lev = 2;
inline bool DeitySkillData::has_skill_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeitySkillData::set_has_skill_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeitySkillData::clear_has_skill_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeitySkillData::clear_skill_lev() {
  skill_lev_ = 0u;
  clear_has_skill_lev();
}
inline ::google::protobuf::uint32 DeitySkillData::skill_lev() const {
  return skill_lev_;
}
inline void DeitySkillData::set_skill_lev(::google::protobuf::uint32 value) {
  set_has_skill_lev();
  skill_lev_ = value;
}

// -------------------------------------------------------------------

// DeityBattleSlotData

// optional uint32 id = 1;
inline bool DeityBattleSlotData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityBattleSlotData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityBattleSlotData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityBattleSlotData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DeityBattleSlotData::id() const {
  return id_;
}
inline void DeityBattleSlotData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 cur_state = 2;
inline bool DeityBattleSlotData::has_cur_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeityBattleSlotData::set_has_cur_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeityBattleSlotData::clear_has_cur_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeityBattleSlotData::clear_cur_state() {
  cur_state_ = 0u;
  clear_has_cur_state();
}
inline ::google::protobuf::uint32 DeityBattleSlotData::cur_state() const {
  return cur_state_;
}
inline void DeityBattleSlotData::set_cur_state(::google::protobuf::uint32 value) {
  set_has_cur_state();
  cur_state_ = value;
}

// optional int64 deity_id = 3;
inline bool DeityBattleSlotData::has_deity_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeityBattleSlotData::set_has_deity_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeityBattleSlotData::clear_has_deity_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeityBattleSlotData::clear_deity_id() {
  deity_id_ = GOOGLE_LONGLONG(0);
  clear_has_deity_id();
}
inline ::google::protobuf::int64 DeityBattleSlotData::deity_id() const {
  return deity_id_;
}
inline void DeityBattleSlotData::set_deity_id(::google::protobuf::int64 value) {
  set_has_deity_id();
  deity_id_ = value;
}

// optional int64 enter_war_time = 4;
inline bool DeityBattleSlotData::has_enter_war_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeityBattleSlotData::set_has_enter_war_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeityBattleSlotData::clear_has_enter_war_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeityBattleSlotData::clear_enter_war_time() {
  enter_war_time_ = GOOGLE_LONGLONG(0);
  clear_has_enter_war_time();
}
inline ::google::protobuf::int64 DeityBattleSlotData::enter_war_time() const {
  return enter_war_time_;
}
inline void DeityBattleSlotData::set_enter_war_time(::google::protobuf::int64 value) {
  set_has_enter_war_time();
  enter_war_time_ = value;
}

// -------------------------------------------------------------------

// ArmorSuitState

// optional int32 index = 1;
inline bool ArmorSuitState::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArmorSuitState::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArmorSuitState::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArmorSuitState::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ArmorSuitState::index() const {
  return index_;
}
inline void ArmorSuitState::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 state = 2;
inline bool ArmorSuitState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArmorSuitState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArmorSuitState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArmorSuitState::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ArmorSuitState::state() const {
  return state_;
}
inline void ArmorSuitState::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// ArmorInfo

// optional int32 id = 1;
inline bool ArmorInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArmorInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArmorInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArmorInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ArmorInfo::id() const {
  return id_;
}
inline void ArmorInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.ArmorSuitState suits = 2;
inline int ArmorInfo::suits_size() const {
  return suits_.size();
}
inline void ArmorInfo::clear_suits() {
  suits_.Clear();
}
inline const ::proto_ff::ArmorSuitState& ArmorInfo::suits(int index) const {
  return suits_.Get(index);
}
inline ::proto_ff::ArmorSuitState* ArmorInfo::mutable_suits(int index) {
  return suits_.Mutable(index);
}
inline ::proto_ff::ArmorSuitState* ArmorInfo::add_suits() {
  return suits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArmorSuitState >&
ArmorInfo::suits() const {
  return suits_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArmorSuitState >*
ArmorInfo::mutable_suits() {
  return &suits_;
}

// optional int32 allstate = 3;
inline bool ArmorInfo::has_allstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArmorInfo::set_has_allstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArmorInfo::clear_has_allstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArmorInfo::clear_allstate() {
  allstate_ = 0;
  clear_has_allstate();
}
inline ::google::protobuf::int32 ArmorInfo::allstate() const {
  return allstate_;
}
inline void ArmorInfo::set_allstate(::google::protobuf::int32 value) {
  set_has_allstate();
  allstate_ = value;
}

// repeated int32 pos = 4;
inline int ArmorInfo::pos_size() const {
  return pos_.size();
}
inline void ArmorInfo::clear_pos() {
  pos_.Clear();
}
inline ::google::protobuf::int32 ArmorInfo::pos(int index) const {
  return pos_.Get(index);
}
inline void ArmorInfo::set_pos(int index, ::google::protobuf::int32 value) {
  pos_.Set(index, value);
}
inline void ArmorInfo::add_pos(::google::protobuf::int32 value) {
  pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ArmorInfo::pos() const {
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ArmorInfo::mutable_pos() {
  return &pos_;
}

// -------------------------------------------------------------------

// TitleInfo

// optional int64 title_id = 1;
inline bool TitleInfo::has_title_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleInfo::set_has_title_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleInfo::clear_has_title_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleInfo::clear_title_id() {
  title_id_ = GOOGLE_LONGLONG(0);
  clear_has_title_id();
}
inline ::google::protobuf::int64 TitleInfo::title_id() const {
  return title_id_;
}
inline void TitleInfo::set_title_id(::google::protobuf::int64 value) {
  set_has_title_id();
  title_id_ = value;
}

// optional int32 status = 2;
inline bool TitleInfo::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleInfo::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 TitleInfo::status() const {
  return status_;
}
inline void TitleInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int64 start_time = 3;
inline bool TitleInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TitleInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TitleInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TitleInfo::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 TitleInfo::start_time() const {
  return start_time_;
}
inline void TitleInfo::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional int64 end_time = 4;
inline bool TitleInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TitleInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TitleInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TitleInfo::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 TitleInfo::end_time() const {
  return end_time_;
}
inline void TitleInfo::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional int32 star = 5;
inline bool TitleInfo::has_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TitleInfo::set_has_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TitleInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TitleInfo::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 TitleInfo::star() const {
  return star_;
}
inline void TitleInfo::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// OccupationMissionSoulData

// optional int32 soul_type = 1;
inline bool OccupationMissionSoulData::has_soul_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupationMissionSoulData::set_has_soul_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OccupationMissionSoulData::clear_has_soul_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OccupationMissionSoulData::clear_soul_type() {
  soul_type_ = 0;
  clear_has_soul_type();
}
inline ::google::protobuf::int32 OccupationMissionSoulData::soul_type() const {
  return soul_type_;
}
inline void OccupationMissionSoulData::set_soul_type(::google::protobuf::int32 value) {
  set_has_soul_type();
  soul_type_ = value;
}

// optional int32 soul_pos = 2;
inline bool OccupationMissionSoulData::has_soul_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupationMissionSoulData::set_has_soul_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OccupationMissionSoulData::clear_has_soul_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OccupationMissionSoulData::clear_soul_pos() {
  soul_pos_ = 0;
  clear_has_soul_pos();
}
inline ::google::protobuf::int32 OccupationMissionSoulData::soul_pos() const {
  return soul_pos_;
}
inline void OccupationMissionSoulData::set_soul_pos(::google::protobuf::int32 value) {
  set_has_soul_pos();
  soul_pos_ = value;
}

// optional int32 status = 3;
inline bool OccupationMissionSoulData::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OccupationMissionSoulData::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OccupationMissionSoulData::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OccupationMissionSoulData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OccupationMissionSoulData::status() const {
  return status_;
}
inline void OccupationMissionSoulData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// OccupationMissionStageData

// optional int32 stage = 1;
inline bool OccupationMissionStageData::has_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupationMissionStageData::set_has_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OccupationMissionStageData::clear_has_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OccupationMissionStageData::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 OccupationMissionStageData::stage() const {
  return stage_;
}
inline void OccupationMissionStageData::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// optional int32 status = 2;
inline bool OccupationMissionStageData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupationMissionStageData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OccupationMissionStageData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OccupationMissionStageData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OccupationMissionStageData::status() const {
  return status_;
}
inline void OccupationMissionStageData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated .proto_ff.OccupationMissionSoulData soul_data = 3;
inline int OccupationMissionStageData::soul_data_size() const {
  return soul_data_.size();
}
inline void OccupationMissionStageData::clear_soul_data() {
  soul_data_.Clear();
}
inline const ::proto_ff::OccupationMissionSoulData& OccupationMissionStageData::soul_data(int index) const {
  return soul_data_.Get(index);
}
inline ::proto_ff::OccupationMissionSoulData* OccupationMissionStageData::mutable_soul_data(int index) {
  return soul_data_.Mutable(index);
}
inline ::proto_ff::OccupationMissionSoulData* OccupationMissionStageData::add_soul_data() {
  return soul_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionSoulData >&
OccupationMissionStageData::soul_data() const {
  return soul_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionSoulData >*
OccupationMissionStageData::mutable_soul_data() {
  return &soul_data_;
}

// -------------------------------------------------------------------

// OccupationMissionGradeData

// optional int32 grade = 1;
inline bool OccupationMissionGradeData::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupationMissionGradeData::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OccupationMissionGradeData::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OccupationMissionGradeData::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 OccupationMissionGradeData::grade() const {
  return grade_;
}
inline void OccupationMissionGradeData::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
}

// optional int32 status = 2;
inline bool OccupationMissionGradeData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupationMissionGradeData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OccupationMissionGradeData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OccupationMissionGradeData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OccupationMissionGradeData::status() const {
  return status_;
}
inline void OccupationMissionGradeData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated .proto_ff.OccupationMissionStageData stage_data = 3;
inline int OccupationMissionGradeData::stage_data_size() const {
  return stage_data_.size();
}
inline void OccupationMissionGradeData::clear_stage_data() {
  stage_data_.Clear();
}
inline const ::proto_ff::OccupationMissionStageData& OccupationMissionGradeData::stage_data(int index) const {
  return stage_data_.Get(index);
}
inline ::proto_ff::OccupationMissionStageData* OccupationMissionGradeData::mutable_stage_data(int index) {
  return stage_data_.Mutable(index);
}
inline ::proto_ff::OccupationMissionStageData* OccupationMissionGradeData::add_stage_data() {
  return stage_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionStageData >&
OccupationMissionGradeData::stage_data() const {
  return stage_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionStageData >*
OccupationMissionGradeData::mutable_stage_data() {
  return &stage_data_;
}

// -------------------------------------------------------------------

// OccupationMissionData

// repeated .proto_ff.OccupationMissionGradeData grade_data = 1;
inline int OccupationMissionData::grade_data_size() const {
  return grade_data_.size();
}
inline void OccupationMissionData::clear_grade_data() {
  grade_data_.Clear();
}
inline const ::proto_ff::OccupationMissionGradeData& OccupationMissionData::grade_data(int index) const {
  return grade_data_.Get(index);
}
inline ::proto_ff::OccupationMissionGradeData* OccupationMissionData::mutable_grade_data(int index) {
  return grade_data_.Mutable(index);
}
inline ::proto_ff::OccupationMissionGradeData* OccupationMissionData::add_grade_data() {
  return grade_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionGradeData >&
OccupationMissionData::grade_data() const {
  return grade_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationMissionGradeData >*
OccupationMissionData::mutable_grade_data() {
  return &grade_data_;
}

// -------------------------------------------------------------------

// BestEQEquipInfo

// optional int32 instId = 1;
inline bool BestEQEquipInfo::has_instid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BestEQEquipInfo::set_has_instid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BestEQEquipInfo::clear_has_instid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BestEQEquipInfo::clear_instid() {
  instid_ = 0;
  clear_has_instid();
}
inline ::google::protobuf::int32 BestEQEquipInfo::instid() const {
  return instid_;
}
inline void BestEQEquipInfo::set_instid(::google::protobuf::int32 value) {
  set_has_instid();
  instid_ = value;
}

// optional int32 cfgId = 2;
inline bool BestEQEquipInfo::has_cfgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BestEQEquipInfo::set_has_cfgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BestEQEquipInfo::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BestEQEquipInfo::clear_cfgid() {
  cfgid_ = 0;
  clear_has_cfgid();
}
inline ::google::protobuf::int32 BestEQEquipInfo::cfgid() const {
  return cfgid_;
}
inline void BestEQEquipInfo::set_cfgid(::google::protobuf::int32 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// optional int32 makeId = 3;
inline bool BestEQEquipInfo::has_makeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BestEQEquipInfo::set_has_makeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BestEQEquipInfo::clear_has_makeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BestEQEquipInfo::clear_makeid() {
  makeid_ = 0;
  clear_has_makeid();
}
inline ::google::protobuf::int32 BestEQEquipInfo::makeid() const {
  return makeid_;
}
inline void BestEQEquipInfo::set_makeid(::google::protobuf::int32 value) {
  set_has_makeid();
  makeid_ = value;
}

// repeated .proto_ff.ComPair skills = 4;
inline int BestEQEquipInfo::skills_size() const {
  return skills_.size();
}
inline void BestEQEquipInfo::clear_skills() {
  skills_.Clear();
}
inline const ::proto_ff::ComPair& BestEQEquipInfo::skills(int index) const {
  return skills_.Get(index);
}
inline ::proto_ff::ComPair* BestEQEquipInfo::mutable_skills(int index) {
  return skills_.Mutable(index);
}
inline ::proto_ff::ComPair* BestEQEquipInfo::add_skills() {
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
BestEQEquipInfo::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
BestEQEquipInfo::mutable_skills() {
  return &skills_;
}

// -------------------------------------------------------------------

// BestEQBreak

// optional int32 lv = 1;
inline bool BestEQBreak::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BestEQBreak::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BestEQBreak::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BestEQBreak::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 BestEQBreak::lv() const {
  return lv_;
}
inline void BestEQBreak::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// repeated int32 exps = 2;
inline int BestEQBreak::exps_size() const {
  return exps_.size();
}
inline void BestEQBreak::clear_exps() {
  exps_.Clear();
}
inline ::google::protobuf::int32 BestEQBreak::exps(int index) const {
  return exps_.Get(index);
}
inline void BestEQBreak::set_exps(int index, ::google::protobuf::int32 value) {
  exps_.Set(index, value);
}
inline void BestEQBreak::add_exps(::google::protobuf::int32 value) {
  exps_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BestEQBreak::exps() const {
  return exps_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BestEQBreak::mutable_exps() {
  return &exps_;
}

// repeated .proto_ff.ComPair genAttr = 3;
inline int BestEQBreak::genattr_size() const {
  return genattr_.size();
}
inline void BestEQBreak::clear_genattr() {
  genattr_.Clear();
}
inline const ::proto_ff::ComPair& BestEQBreak::genattr(int index) const {
  return genattr_.Get(index);
}
inline ::proto_ff::ComPair* BestEQBreak::mutable_genattr(int index) {
  return genattr_.Mutable(index);
}
inline ::proto_ff::ComPair* BestEQBreak::add_genattr() {
  return genattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
BestEQBreak::genattr() const {
  return genattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
BestEQBreak::mutable_genattr() {
  return &genattr_;
}

// -------------------------------------------------------------------

// BestEQSlotInfo

// optional int32 slot = 1;
inline bool BestEQSlotInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BestEQSlotInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BestEQSlotInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BestEQSlotInfo::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 BestEQSlotInfo::slot() const {
  return slot_;
}
inline void BestEQSlotInfo::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// optional int32 instId = 2;
inline bool BestEQSlotInfo::has_instid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BestEQSlotInfo::set_has_instid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BestEQSlotInfo::clear_has_instid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BestEQSlotInfo::clear_instid() {
  instid_ = 0;
  clear_has_instid();
}
inline ::google::protobuf::int32 BestEQSlotInfo::instid() const {
  return instid_;
}
inline void BestEQSlotInfo::set_instid(::google::protobuf::int32 value) {
  set_has_instid();
  instid_ = value;
}

// optional int32 pourId = 3;
inline bool BestEQSlotInfo::has_pourid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BestEQSlotInfo::set_has_pourid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BestEQSlotInfo::clear_has_pourid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BestEQSlotInfo::clear_pourid() {
  pourid_ = 0;
  clear_has_pourid();
}
inline ::google::protobuf::int32 BestEQSlotInfo::pourid() const {
  return pourid_;
}
inline void BestEQSlotInfo::set_pourid(::google::protobuf::int32 value) {
  set_has_pourid();
  pourid_ = value;
}

// optional int32 pourExp = 4;
inline bool BestEQSlotInfo::has_pourexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BestEQSlotInfo::set_has_pourexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BestEQSlotInfo::clear_has_pourexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BestEQSlotInfo::clear_pourexp() {
  pourexp_ = 0;
  clear_has_pourexp();
}
inline ::google::protobuf::int32 BestEQSlotInfo::pourexp() const {
  return pourexp_;
}
inline void BestEQSlotInfo::set_pourexp(::google::protobuf::int32 value) {
  set_has_pourexp();
  pourexp_ = value;
}

// optional int32 pourUnLock = 5;
inline bool BestEQSlotInfo::has_pourunlock() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BestEQSlotInfo::set_has_pourunlock() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BestEQSlotInfo::clear_has_pourunlock() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BestEQSlotInfo::clear_pourunlock() {
  pourunlock_ = 0;
  clear_has_pourunlock();
}
inline ::google::protobuf::int32 BestEQSlotInfo::pourunlock() const {
  return pourunlock_;
}
inline void BestEQSlotInfo::set_pourunlock(::google::protobuf::int32 value) {
  set_has_pourunlock();
  pourunlock_ = value;
}

// optional .proto_ff.BestEQBreak breakInfo = 6;
inline bool BestEQSlotInfo::has_breakinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BestEQSlotInfo::set_has_breakinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BestEQSlotInfo::clear_has_breakinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BestEQSlotInfo::clear_breakinfo() {
  if (breakinfo_ != NULL) breakinfo_->::proto_ff::BestEQBreak::Clear();
  clear_has_breakinfo();
}
inline const ::proto_ff::BestEQBreak& BestEQSlotInfo::breakinfo() const {
  return breakinfo_ != NULL ? *breakinfo_ : *default_instance_->breakinfo_;
}
inline ::proto_ff::BestEQBreak* BestEQSlotInfo::mutable_breakinfo() {
  set_has_breakinfo();
  if (breakinfo_ == NULL) breakinfo_ = new ::proto_ff::BestEQBreak;
  return breakinfo_;
}
inline ::proto_ff::BestEQBreak* BestEQSlotInfo::release_breakinfo() {
  clear_has_breakinfo();
  ::proto_ff::BestEQBreak* temp = breakinfo_;
  breakinfo_ = NULL;
  return temp;
}
inline void BestEQSlotInfo::set_allocated_breakinfo(::proto_ff::BestEQBreak* breakinfo) {
  delete breakinfo_;
  breakinfo_ = breakinfo;
  if (breakinfo) {
    set_has_breakinfo();
  } else {
    clear_has_breakinfo();
  }
}

// optional int32 awakenLv = 7;
inline bool BestEQSlotInfo::has_awakenlv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BestEQSlotInfo::set_has_awakenlv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BestEQSlotInfo::clear_has_awakenlv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BestEQSlotInfo::clear_awakenlv() {
  awakenlv_ = 0;
  clear_has_awakenlv();
}
inline ::google::protobuf::int32 BestEQSlotInfo::awakenlv() const {
  return awakenlv_;
}
inline void BestEQSlotInfo::set_awakenlv(::google::protobuf::int32 value) {
  set_has_awakenlv();
  awakenlv_ = value;
}

// -------------------------------------------------------------------

// BestEQTask

// optional int32 id = 1;
inline bool BestEQTask::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BestEQTask::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BestEQTask::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BestEQTask::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BestEQTask::id() const {
  return id_;
}
inline void BestEQTask::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 state = 2;
inline bool BestEQTask::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BestEQTask::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BestEQTask::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BestEQTask::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 BestEQTask::state() const {
  return state_;
}
inline void BestEQTask::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::ECState>() {
  return ::proto_ff::ECState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EAttrGroup>() {
  return ::proto_ff::EAttrGroup_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::GrowType>() {
  return ::proto_ff::GrowType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::ECreatureAttr>() {
  return ::proto_ff::ECreatureAttr_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::DigPerforType>() {
  return ::proto_ff::DigPerforType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::MountBloodState>() {
  return ::proto_ff::MountBloodState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::MountBabySlotState>() {
  return ::proto_ff::MountBabySlotState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_GODRELICS_TASK_STATUS>() {
  return ::proto_ff::EN_GODRELICS_TASK_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_GODRELICS_GROUP_TASK_STATUS>() {
  return ::proto_ff::EN_GODRELICS_GROUP_TASK_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_DAILY_TASK_STATUS>() {
  return ::proto_ff::EN_DAILY_TASK_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EN_DAILY_TASK_REWARD_STATUS>() {
  return ::proto_ff::EN_DAILY_TASK_REWARD_STATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::FacadeSoulSkillStatus>() {
  return ::proto_ff::FacadeSoulSkillStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::FacadeSoulActivitytatus>() {
  return ::proto_ff::FacadeSoulActivitytatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EDeityEquipSuitStatus>() {
  return ::proto_ff::EDeityEquipSuitStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::DeityBattleSlotState>() {
  return ::proto_ff::DeityBattleSlotState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::ETitleStatus>() {
  return ::proto_ff::ETitleStatus_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Com_2eproto__INCLUDED
