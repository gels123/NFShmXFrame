// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GodValleyBattle.proto

#ifndef PROTOBUF_GodValleyBattle_2eproto__INCLUDED
#define PROTOBUF_GodValleyBattle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
#include "Skill.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GodValleyBattle_2eproto();
void protobuf_AssignDesc_GodValleyBattle_2eproto();
void protobuf_ShutdownFile_GodValleyBattle_2eproto();

class GVBEnterReq;
class GVBEnterRsp;
class GVBSCrystalCollectReq;
class GVBCrystallSubmitReq;
class GVBExitReq;
class GVBTransFailed;
class GVBMonster;
class GVBDataReq;
class GVBDatasRsp;
class GVBRankReq;
class GVBRankPlayerInfo;
class GVBRankRsp;
class GVBPlayerInfo;
class GVBResultBC;
class GVBM1AttrChgBC;
class GVBM2AttrChgBC;
class GVBM3AttrChgBC;
class GVBSelfInfoUpdateNT;
class GVBKillPlayerInfo;
class GVBKillPlayerBC;
class GVBResPointChg;
class GVBCrystalStateBC;
class GVBCrystalCollectReq;
class GVBCrystalCollectRsp;
class GVBDailyScoreDataReq;
class GVBDailyScoreDataRsp;
class GVBDailyScoreRewardRcvReq;
class GVBDailyScoreRewardRcvRsp;
class GVBRoomReq;
class GVBRoomRsp;
class GVBRoomCloseReq;
class GVBCrystalOwnerPosReq;
class GVBCrystalOwnerPosRsp;
class WPPEnterReq;
class WPPExitReq;
class WPPEnterRsp;
class WPPPairPracticeReq;
class WPPPairPracticeRsp;
class WPPMassageReq;
class WPPMassageRsp;
class WPPSplashReq;
class WPPSplashRsp;
class WPPCollectRsp;
class WPPExpAddNt;
class WPPCollectCDNt;
class WPPActionNt;
class WPPCancelCurActReq;
class WPPCancelCurActRsp;
class CTPEnterReq;
class CTPExitReq;
class CTPPlayerInfo;
class CTPResult;
class CTPEnterRsp;
class CTPReadyStart;
class CTPRoundStart;
class CTPScoreRankNt;
class CTPScoreChgNt;
class CTPKillPlayerInfo;
class CTPKillNt;
class CTPPlayersChgNt;
class GVBEnterError;
class GMADatas;
class GMABossInfo;
class GMABossInfoReqData;
class GMABossInfoReq;
class GMABossInfoRsp;
class GMABossInfoSingleReq;
class GMABossInfoSingleRsp;
class GMAPauseReq;
class GMAPauseRsp;
class GMAPayReq;
class GMAPayRsp;
class GMAEnterReq;
class GMAGotoFloorReq;
class GMAGotoFloorRsp;
class GMATimeRechargeReq;
class GMATimeRechargeRsp;
class GMAExitReq;
class GMAResultReq;
class GMAResultRsp;

// ===================================================================

class GVBEnterReq : public ::google::protobuf::Message {
 public:
  GVBEnterReq();
  virtual ~GVBEnterReq();

  GVBEnterReq(const GVBEnterReq& from);

  inline GVBEnterReq& operator=(const GVBEnterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBEnterReq& default_instance();

  void Swap(GVBEnterReq* other);

  // implements Message ----------------------------------------------

  GVBEnterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBEnterReq& from);
  void MergeFrom(const GVBEnterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unused = 1;
  inline bool has_unused() const;
  inline void clear_unused();
  static const int kUnusedFieldNumber = 1;
  inline ::google::protobuf::uint32 unused() const;
  inline void set_unused(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBEnterReq)
 private:
  inline void set_has_unused();
  inline void clear_has_unused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 unused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBEnterReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBEnterRsp : public ::google::protobuf::Message {
 public:
  GVBEnterRsp();
  virtual ~GVBEnterRsp();

  GVBEnterRsp(const GVBEnterRsp& from);

  inline GVBEnterRsp& operator=(const GVBEnterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBEnterRsp& default_instance();

  void Swap(GVBEnterRsp* other);

  // implements Message ----------------------------------------------

  GVBEnterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBEnterRsp& from);
  void MergeFrom(const GVBEnterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBEnterRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBEnterRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBSCrystalCollectReq : public ::google::protobuf::Message {
 public:
  GVBSCrystalCollectReq();
  virtual ~GVBSCrystalCollectReq();

  GVBSCrystalCollectReq(const GVBSCrystalCollectReq& from);

  inline GVBSCrystalCollectReq& operator=(const GVBSCrystalCollectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBSCrystalCollectReq& default_instance();

  void Swap(GVBSCrystalCollectReq* other);

  // implements Message ----------------------------------------------

  GVBSCrystalCollectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBSCrystalCollectReq& from);
  void MergeFrom(const GVBSCrystalCollectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBSCrystalCollectReq)
 private:
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBSCrystalCollectReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBCrystallSubmitReq : public ::google::protobuf::Message {
 public:
  GVBCrystallSubmitReq();
  virtual ~GVBCrystallSubmitReq();

  GVBCrystallSubmitReq(const GVBCrystallSubmitReq& from);

  inline GVBCrystallSubmitReq& operator=(const GVBCrystallSubmitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBCrystallSubmitReq& default_instance();

  void Swap(GVBCrystallSubmitReq* other);

  // implements Message ----------------------------------------------

  GVBCrystallSubmitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBCrystallSubmitReq& from);
  void MergeFrom(const GVBCrystallSubmitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 monsterEid = 1;
  inline bool has_monstereid() const;
  inline void clear_monstereid();
  static const int kMonsterEidFieldNumber = 1;
  inline ::google::protobuf::uint64 monstereid() const;
  inline void set_monstereid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBCrystallSubmitReq)
 private:
  inline void set_has_monstereid();
  inline void clear_has_monstereid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 monstereid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBCrystallSubmitReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBExitReq : public ::google::protobuf::Message {
 public:
  GVBExitReq();
  virtual ~GVBExitReq();

  GVBExitReq(const GVBExitReq& from);

  inline GVBExitReq& operator=(const GVBExitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBExitReq& default_instance();

  void Swap(GVBExitReq* other);

  // implements Message ----------------------------------------------

  GVBExitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBExitReq& from);
  void MergeFrom(const GVBExitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unused = 1;
  inline bool has_unused() const;
  inline void clear_unused();
  static const int kUnusedFieldNumber = 1;
  inline ::google::protobuf::uint32 unused() const;
  inline void set_unused(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBExitReq)
 private:
  inline void set_has_unused();
  inline void clear_has_unused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 unused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBExitReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBTransFailed : public ::google::protobuf::Message {
 public:
  GVBTransFailed();
  virtual ~GVBTransFailed();

  GVBTransFailed(const GVBTransFailed& from);

  inline GVBTransFailed& operator=(const GVBTransFailed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBTransFailed& default_instance();

  void Swap(GVBTransFailed* other);

  // implements Message ----------------------------------------------

  GVBTransFailed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBTransFailed& from);
  void MergeFrom(const GVBTransFailed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBTransFailed)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBTransFailed* default_instance_;
};
// -------------------------------------------------------------------

class GVBMonster : public ::google::protobuf::Message {
 public:
  GVBMonster();
  virtual ~GVBMonster();

  GVBMonster(const GVBMonster& from);

  inline GVBMonster& operator=(const GVBMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBMonster& default_instance();

  void Swap(GVBMonster* other);

  // implements Message ----------------------------------------------

  GVBMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBMonster& from);
  void MergeFrom(const GVBMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // required uint64 hp = 2;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 2;
  inline ::google::protobuf::uint64 hp() const;
  inline void set_hp(::google::protobuf::uint64 value);

  // required uint64 hpmax = 3;
  inline bool has_hpmax() const;
  inline void clear_hpmax();
  static const int kHpmaxFieldNumber = 3;
  inline ::google::protobuf::uint64 hpmax() const;
  inline void set_hpmax(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBMonster)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_hpmax();
  inline void clear_has_hpmax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 hp_;
  ::google::protobuf::uint64 hpmax_;
  ::google::protobuf::uint32 team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBMonster* default_instance_;
};
// -------------------------------------------------------------------

class GVBDataReq : public ::google::protobuf::Message {
 public:
  GVBDataReq();
  virtual ~GVBDataReq();

  GVBDataReq(const GVBDataReq& from);

  inline GVBDataReq& operator=(const GVBDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBDataReq& default_instance();

  void Swap(GVBDataReq* other);

  // implements Message ----------------------------------------------

  GVBDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBDataReq& from);
  void MergeFrom(const GVBDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unused = 1;
  inline bool has_unused() const;
  inline void clear_unused();
  static const int kUnusedFieldNumber = 1;
  inline ::google::protobuf::uint32 unused() const;
  inline void set_unused(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBDataReq)
 private:
  inline void set_has_unused();
  inline void clear_has_unused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 unused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBDataReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBDatasRsp : public ::google::protobuf::Message {
 public:
  GVBDatasRsp();
  virtual ~GVBDatasRsp();

  GVBDatasRsp(const GVBDatasRsp& from);

  inline GVBDatasRsp& operator=(const GVBDatasRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBDatasRsp& default_instance();

  void Swap(GVBDatasRsp* other);

  // implements Message ----------------------------------------------

  GVBDatasRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBDatasRsp& from);
  void MergeFrom(const GVBDatasRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // required uint32 countdown = 2;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 2;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);

  // optional uint32 team1Score = 3;
  inline bool has_team1score() const;
  inline void clear_team1score();
  static const int kTeam1ScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 team1score() const;
  inline void set_team1score(::google::protobuf::uint32 value);

  // optional uint32 team2Score = 4;
  inline bool has_team2score() const;
  inline void clear_team2score();
  static const int kTeam2ScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 team2score() const;
  inline void set_team2score(::google::protobuf::uint32 value);

  // optional uint32 selfScore = 5;
  inline bool has_selfscore() const;
  inline void clear_selfscore();
  static const int kSelfScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 selfscore() const;
  inline void set_selfscore(::google::protobuf::uint32 value);

  // optional uint32 selfTeam = 6;
  inline bool has_selfteam() const;
  inline void clear_selfteam();
  static const int kSelfTeamFieldNumber = 6;
  inline ::google::protobuf::uint32 selfteam() const;
  inline void set_selfteam(::google::protobuf::uint32 value);

  // optional uint32 crystalState = 7;
  inline bool has_crystalstate() const;
  inline void clear_crystalstate();
  static const int kCrystalStateFieldNumber = 7;
  inline ::google::protobuf::uint32 crystalstate() const;
  inline void set_crystalstate(::google::protobuf::uint32 value);

  // optional uint64 crystalOwner = 8;
  inline bool has_crystalowner() const;
  inline void clear_crystalowner();
  static const int kCrystalOwnerFieldNumber = 8;
  inline ::google::protobuf::uint64 crystalowner() const;
  inline void set_crystalowner(::google::protobuf::uint64 value);

  // optional uint32 crystalBornCountdown = 9;
  inline bool has_crystalborncountdown() const;
  inline void clear_crystalborncountdown();
  static const int kCrystalBornCountdownFieldNumber = 9;
  inline ::google::protobuf::uint32 crystalborncountdown() const;
  inline void set_crystalborncountdown(::google::protobuf::uint32 value);

  // optional uint32 crystalOwnerTeam = 10;
  inline bool has_crystalownerteam() const;
  inline void clear_crystalownerteam();
  static const int kCrystalOwnerTeamFieldNumber = 10;
  inline ::google::protobuf::uint32 crystalownerteam() const;
  inline void set_crystalownerteam(::google::protobuf::uint32 value);

  // optional uint32 crystalOwnerProfession = 11;
  inline bool has_crystalownerprofession() const;
  inline void clear_crystalownerprofession();
  static const int kCrystalOwnerProfessionFieldNumber = 11;
  inline ::google::protobuf::uint32 crystalownerprofession() const;
  inline void set_crystalownerprofession(::google::protobuf::uint32 value);

  // optional .proto_ff.GVBMonster m1 = 12;
  inline bool has_m1() const;
  inline void clear_m1();
  static const int kM1FieldNumber = 12;
  inline const ::proto_ff::GVBMonster& m1() const;
  inline ::proto_ff::GVBMonster* mutable_m1();
  inline ::proto_ff::GVBMonster* release_m1();
  inline void set_allocated_m1(::proto_ff::GVBMonster* m1);

  // optional .proto_ff.GVBMonster m2 = 13;
  inline bool has_m2() const;
  inline void clear_m2();
  static const int kM2FieldNumber = 13;
  inline const ::proto_ff::GVBMonster& m2() const;
  inline ::proto_ff::GVBMonster* mutable_m2();
  inline ::proto_ff::GVBMonster* release_m2();
  inline void set_allocated_m2(::proto_ff::GVBMonster* m2);

  // optional .proto_ff.GVBMonster m3 = 14;
  inline bool has_m3() const;
  inline void clear_m3();
  static const int kM3FieldNumber = 14;
  inline const ::proto_ff::GVBMonster& m3() const;
  inline ::proto_ff::GVBMonster* mutable_m3();
  inline ::proto_ff::GVBMonster* release_m3();
  inline void set_allocated_m3(::proto_ff::GVBMonster* m3);

  // optional uint32 killCount = 15;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillCountFieldNumber = 15;
  inline ::google::protobuf::uint32 killcount() const;
  inline void set_killcount(::google::protobuf::uint32 value);

  // optional uint32 killsCount = 16;
  inline bool has_killscount() const;
  inline void clear_killscount();
  static const int kKillsCountFieldNumber = 16;
  inline ::google::protobuf::uint32 killscount() const;
  inline void set_killscount(::google::protobuf::uint32 value);

  // optional uint32 breakKillsCount = 17;
  inline bool has_breakkillscount() const;
  inline void clear_breakkillscount();
  static const int kBreakKillsCountFieldNumber = 17;
  inline ::google::protobuf::uint32 breakkillscount() const;
  inline void set_breakkillscount(::google::protobuf::uint32 value);

  // optional uint32 interceptCount = 18;
  inline bool has_interceptcount() const;
  inline void clear_interceptcount();
  static const int kInterceptCountFieldNumber = 18;
  inline ::google::protobuf::uint32 interceptcount() const;
  inline void set_interceptcount(::google::protobuf::uint32 value);

  // optional uint32 crystalCount = 19;
  inline bool has_crystalcount() const;
  inline void clear_crystalcount();
  static const int kCrystalCountFieldNumber = 19;
  inline ::google::protobuf::uint32 crystalcount() const;
  inline void set_crystalcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBDatasRsp)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_team1score();
  inline void clear_has_team1score();
  inline void set_has_team2score();
  inline void clear_has_team2score();
  inline void set_has_selfscore();
  inline void clear_has_selfscore();
  inline void set_has_selfteam();
  inline void clear_has_selfteam();
  inline void set_has_crystalstate();
  inline void clear_has_crystalstate();
  inline void set_has_crystalowner();
  inline void clear_has_crystalowner();
  inline void set_has_crystalborncountdown();
  inline void clear_has_crystalborncountdown();
  inline void set_has_crystalownerteam();
  inline void clear_has_crystalownerteam();
  inline void set_has_crystalownerprofession();
  inline void clear_has_crystalownerprofession();
  inline void set_has_m1();
  inline void clear_has_m1();
  inline void set_has_m2();
  inline void clear_has_m2();
  inline void set_has_m3();
  inline void clear_has_m3();
  inline void set_has_killcount();
  inline void clear_has_killcount();
  inline void set_has_killscount();
  inline void clear_has_killscount();
  inline void set_has_breakkillscount();
  inline void clear_has_breakkillscount();
  inline void set_has_interceptcount();
  inline void clear_has_interceptcount();
  inline void set_has_crystalcount();
  inline void clear_has_crystalcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 countdown_;
  ::google::protobuf::uint32 team1score_;
  ::google::protobuf::uint32 team2score_;
  ::google::protobuf::uint32 selfscore_;
  ::google::protobuf::uint32 selfteam_;
  ::google::protobuf::uint64 crystalowner_;
  ::google::protobuf::uint32 crystalstate_;
  ::google::protobuf::uint32 crystalborncountdown_;
  ::google::protobuf::uint32 crystalownerteam_;
  ::google::protobuf::uint32 crystalownerprofession_;
  ::proto_ff::GVBMonster* m1_;
  ::proto_ff::GVBMonster* m2_;
  ::proto_ff::GVBMonster* m3_;
  ::google::protobuf::uint32 killcount_;
  ::google::protobuf::uint32 killscount_;
  ::google::protobuf::uint32 breakkillscount_;
  ::google::protobuf::uint32 interceptcount_;
  ::google::protobuf::uint32 crystalcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBDatasRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBRankReq : public ::google::protobuf::Message {
 public:
  GVBRankReq();
  virtual ~GVBRankReq();

  GVBRankReq(const GVBRankReq& from);

  inline GVBRankReq& operator=(const GVBRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBRankReq& default_instance();

  void Swap(GVBRankReq* other);

  // implements Message ----------------------------------------------

  GVBRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBRankReq& from);
  void MergeFrom(const GVBRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unused = 1;
  inline bool has_unused() const;
  inline void clear_unused();
  static const int kUnusedFieldNumber = 1;
  inline ::google::protobuf::uint32 unused() const;
  inline void set_unused(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBRankReq)
 private:
  inline void set_has_unused();
  inline void clear_has_unused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 unused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBRankReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBRankPlayerInfo : public ::google::protobuf::Message {
 public:
  GVBRankPlayerInfo();
  virtual ~GVBRankPlayerInfo();

  GVBRankPlayerInfo(const GVBRankPlayerInfo& from);

  inline GVBRankPlayerInfo& operator=(const GVBRankPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBRankPlayerInfo& default_instance();

  void Swap(GVBRankPlayerInfo* other);

  // implements Message ----------------------------------------------

  GVBRankPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBRankPlayerInfo& from);
  void MergeFrom(const GVBRankPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required uint32 team = 4;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 4;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // required uint64 cid = 5;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 5;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBRankPlayerInfo)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBRankPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class GVBRankRsp : public ::google::protobuf::Message {
 public:
  GVBRankRsp();
  virtual ~GVBRankRsp();

  GVBRankRsp(const GVBRankRsp& from);

  inline GVBRankRsp& operator=(const GVBRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBRankRsp& default_instance();

  void Swap(GVBRankRsp* other);

  // implements Message ----------------------------------------------

  GVBRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBRankRsp& from);
  void MergeFrom(const GVBRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GVBRankPlayerInfo players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::proto_ff::GVBRankPlayerInfo& players(int index) const;
  inline ::proto_ff::GVBRankPlayerInfo* mutable_players(int index);
  inline ::proto_ff::GVBRankPlayerInfo* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBRankPlayerInfo >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBRankPlayerInfo >*
      mutable_players();

  // @@protoc_insertion_point(class_scope:proto_ff.GVBRankRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBRankPlayerInfo > players_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBRankRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBPlayerInfo : public ::google::protobuf::Message {
 public:
  GVBPlayerInfo();
  virtual ~GVBPlayerInfo();

  GVBPlayerInfo(const GVBPlayerInfo& from);

  inline GVBPlayerInfo& operator=(const GVBPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBPlayerInfo& default_instance();

  void Swap(GVBPlayerInfo* other);

  // implements Message ----------------------------------------------

  GVBPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBPlayerInfo& from);
  void MergeFrom(const GVBPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required uint32 killCount = 2;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillCountFieldNumber = 2;
  inline ::google::protobuf::uint32 killcount() const;
  inline void set_killcount(::google::protobuf::uint32 value);

  // required uint32 dieCount = 3;
  inline bool has_diecount() const;
  inline void clear_diecount();
  static const int kDieCountFieldNumber = 3;
  inline ::google::protobuf::uint32 diecount() const;
  inline void set_diecount(::google::protobuf::uint32 value);

  // required uint32 interceptCount = 4;
  inline bool has_interceptcount() const;
  inline void clear_interceptcount();
  static const int kInterceptCountFieldNumber = 4;
  inline ::google::protobuf::uint32 interceptcount() const;
  inline void set_interceptcount(::google::protobuf::uint32 value);

  // required uint32 crystalCount = 5;
  inline bool has_crystalcount() const;
  inline void clear_crystalcount();
  static const int kCrystalCountFieldNumber = 5;
  inline ::google::protobuf::uint32 crystalcount() const;
  inline void set_crystalcount(::google::protobuf::uint32 value);

  // required string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 team = 7;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 7;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // required uint32 killMonsterCount = 8;
  inline bool has_killmonstercount() const;
  inline void clear_killmonstercount();
  static const int kKillMonsterCountFieldNumber = 8;
  inline ::google::protobuf::uint32 killmonstercount() const;
  inline void set_killmonstercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBPlayerInfo)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_killcount();
  inline void clear_has_killcount();
  inline void set_has_diecount();
  inline void clear_has_diecount();
  inline void set_has_interceptcount();
  inline void clear_has_interceptcount();
  inline void set_has_crystalcount();
  inline void clear_has_crystalcount();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_killmonstercount();
  inline void clear_has_killmonstercount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 killcount_;
  ::google::protobuf::uint32 diecount_;
  ::google::protobuf::uint32 interceptcount_;
  ::std::string* name_;
  ::google::protobuf::uint32 crystalcount_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 killmonstercount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class GVBResultBC : public ::google::protobuf::Message {
 public:
  GVBResultBC();
  virtual ~GVBResultBC();

  GVBResultBC(const GVBResultBC& from);

  inline GVBResultBC& operator=(const GVBResultBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBResultBC& default_instance();

  void Swap(GVBResultBC* other);

  // implements Message ----------------------------------------------

  GVBResultBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBResultBC& from);
  void MergeFrom(const GVBResultBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 winTeam = 1;
  inline bool has_winteam() const;
  inline void clear_winteam();
  static const int kWinTeamFieldNumber = 1;
  inline ::google::protobuf::uint32 winteam() const;
  inline void set_winteam(::google::protobuf::uint32 value);

  // repeated .proto_ff.GVBPlayerInfo players = 2;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 2;
  inline const ::proto_ff::GVBPlayerInfo& players(int index) const;
  inline ::proto_ff::GVBPlayerInfo* mutable_players(int index);
  inline ::proto_ff::GVBPlayerInfo* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBPlayerInfo >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBPlayerInfo >*
      mutable_players();

  // @@protoc_insertion_point(class_scope:proto_ff.GVBResultBC)
 private:
  inline void set_has_winteam();
  inline void clear_has_winteam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBPlayerInfo > players_;
  ::google::protobuf::uint32 winteam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBResultBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBM1AttrChgBC : public ::google::protobuf::Message {
 public:
  GVBM1AttrChgBC();
  virtual ~GVBM1AttrChgBC();

  GVBM1AttrChgBC(const GVBM1AttrChgBC& from);

  inline GVBM1AttrChgBC& operator=(const GVBM1AttrChgBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBM1AttrChgBC& default_instance();

  void Swap(GVBM1AttrChgBC* other);

  // implements Message ----------------------------------------------

  GVBM1AttrChgBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBM1AttrChgBC& from);
  void MergeFrom(const GVBM1AttrChgBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.GVBMonster m1 = 1;
  inline bool has_m1() const;
  inline void clear_m1();
  static const int kM1FieldNumber = 1;
  inline const ::proto_ff::GVBMonster& m1() const;
  inline ::proto_ff::GVBMonster* mutable_m1();
  inline ::proto_ff::GVBMonster* release_m1();
  inline void set_allocated_m1(::proto_ff::GVBMonster* m1);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBM1AttrChgBC)
 private:
  inline void set_has_m1();
  inline void clear_has_m1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GVBMonster* m1_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBM1AttrChgBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBM2AttrChgBC : public ::google::protobuf::Message {
 public:
  GVBM2AttrChgBC();
  virtual ~GVBM2AttrChgBC();

  GVBM2AttrChgBC(const GVBM2AttrChgBC& from);

  inline GVBM2AttrChgBC& operator=(const GVBM2AttrChgBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBM2AttrChgBC& default_instance();

  void Swap(GVBM2AttrChgBC* other);

  // implements Message ----------------------------------------------

  GVBM2AttrChgBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBM2AttrChgBC& from);
  void MergeFrom(const GVBM2AttrChgBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.GVBMonster m2 = 1;
  inline bool has_m2() const;
  inline void clear_m2();
  static const int kM2FieldNumber = 1;
  inline const ::proto_ff::GVBMonster& m2() const;
  inline ::proto_ff::GVBMonster* mutable_m2();
  inline ::proto_ff::GVBMonster* release_m2();
  inline void set_allocated_m2(::proto_ff::GVBMonster* m2);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBM2AttrChgBC)
 private:
  inline void set_has_m2();
  inline void clear_has_m2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GVBMonster* m2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBM2AttrChgBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBM3AttrChgBC : public ::google::protobuf::Message {
 public:
  GVBM3AttrChgBC();
  virtual ~GVBM3AttrChgBC();

  GVBM3AttrChgBC(const GVBM3AttrChgBC& from);

  inline GVBM3AttrChgBC& operator=(const GVBM3AttrChgBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBM3AttrChgBC& default_instance();

  void Swap(GVBM3AttrChgBC* other);

  // implements Message ----------------------------------------------

  GVBM3AttrChgBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBM3AttrChgBC& from);
  void MergeFrom(const GVBM3AttrChgBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.GVBMonster m3 = 1;
  inline bool has_m3() const;
  inline void clear_m3();
  static const int kM3FieldNumber = 1;
  inline const ::proto_ff::GVBMonster& m3() const;
  inline ::proto_ff::GVBMonster* mutable_m3();
  inline ::proto_ff::GVBMonster* release_m3();
  inline void set_allocated_m3(::proto_ff::GVBMonster* m3);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBM3AttrChgBC)
 private:
  inline void set_has_m3();
  inline void clear_has_m3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GVBMonster* m3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBM3AttrChgBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBSelfInfoUpdateNT : public ::google::protobuf::Message {
 public:
  GVBSelfInfoUpdateNT();
  virtual ~GVBSelfInfoUpdateNT();

  GVBSelfInfoUpdateNT(const GVBSelfInfoUpdateNT& from);

  inline GVBSelfInfoUpdateNT& operator=(const GVBSelfInfoUpdateNT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBSelfInfoUpdateNT& default_instance();

  void Swap(GVBSelfInfoUpdateNT* other);

  // implements Message ----------------------------------------------

  GVBSelfInfoUpdateNT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBSelfInfoUpdateNT& from);
  void MergeFrom(const GVBSelfInfoUpdateNT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 killCount = 1;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillCountFieldNumber = 1;
  inline ::google::protobuf::uint32 killcount() const;
  inline void set_killcount(::google::protobuf::uint32 value);

  // optional uint32 killsCount = 2;
  inline bool has_killscount() const;
  inline void clear_killscount();
  static const int kKillsCountFieldNumber = 2;
  inline ::google::protobuf::uint32 killscount() const;
  inline void set_killscount(::google::protobuf::uint32 value);

  // optional uint32 breakKillsCount = 3;
  inline bool has_breakkillscount() const;
  inline void clear_breakkillscount();
  static const int kBreakKillsCountFieldNumber = 3;
  inline ::google::protobuf::uint32 breakkillscount() const;
  inline void set_breakkillscount(::google::protobuf::uint32 value);

  // optional uint32 interceptCount = 4;
  inline bool has_interceptcount() const;
  inline void clear_interceptcount();
  static const int kInterceptCountFieldNumber = 4;
  inline ::google::protobuf::uint32 interceptcount() const;
  inline void set_interceptcount(::google::protobuf::uint32 value);

  // optional uint32 crystalCount = 5;
  inline bool has_crystalcount() const;
  inline void clear_crystalcount();
  static const int kCrystalCountFieldNumber = 5;
  inline ::google::protobuf::uint32 crystalcount() const;
  inline void set_crystalcount(::google::protobuf::uint32 value);

  // optional uint32 selfScore = 6;
  inline bool has_selfscore() const;
  inline void clear_selfscore();
  static const int kSelfScoreFieldNumber = 6;
  inline ::google::protobuf::uint32 selfscore() const;
  inline void set_selfscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBSelfInfoUpdateNT)
 private:
  inline void set_has_killcount();
  inline void clear_has_killcount();
  inline void set_has_killscount();
  inline void clear_has_killscount();
  inline void set_has_breakkillscount();
  inline void clear_has_breakkillscount();
  inline void set_has_interceptcount();
  inline void clear_has_interceptcount();
  inline void set_has_crystalcount();
  inline void clear_has_crystalcount();
  inline void set_has_selfscore();
  inline void clear_has_selfscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 killcount_;
  ::google::protobuf::uint32 killscount_;
  ::google::protobuf::uint32 breakkillscount_;
  ::google::protobuf::uint32 interceptcount_;
  ::google::protobuf::uint32 crystalcount_;
  ::google::protobuf::uint32 selfscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBSelfInfoUpdateNT* default_instance_;
};
// -------------------------------------------------------------------

class GVBKillPlayerInfo : public ::google::protobuf::Message {
 public:
  GVBKillPlayerInfo();
  virtual ~GVBKillPlayerInfo();

  GVBKillPlayerInfo(const GVBKillPlayerInfo& from);

  inline GVBKillPlayerInfo& operator=(const GVBKillPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBKillPlayerInfo& default_instance();

  void Swap(GVBKillPlayerInfo* other);

  // implements Message ----------------------------------------------

  GVBKillPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBKillPlayerInfo& from);
  void MergeFrom(const GVBKillPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 killsCount = 1;
  inline bool has_killscount() const;
  inline void clear_killscount();
  static const int kKillsCountFieldNumber = 1;
  inline ::google::protobuf::uint32 killscount() const;
  inline void set_killscount(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .proto_ff.RoleFacadeProto facade = 3;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 3;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // required uint32 team = 4;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 4;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBKillPlayerInfo)
 private:
  inline void set_has_killscount();
  inline void clear_has_killscount();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 killscount_;
  ::google::protobuf::uint32 team_;
  ::proto_ff::RoleFacadeProto* facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBKillPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class GVBKillPlayerBC : public ::google::protobuf::Message {
 public:
  GVBKillPlayerBC();
  virtual ~GVBKillPlayerBC();

  GVBKillPlayerBC(const GVBKillPlayerBC& from);

  inline GVBKillPlayerBC& operator=(const GVBKillPlayerBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBKillPlayerBC& default_instance();

  void Swap(GVBKillPlayerBC* other);

  // implements Message ----------------------------------------------

  GVBKillPlayerBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBKillPlayerBC& from);
  void MergeFrom(const GVBKillPlayerBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.GVBKillPlayerInfo atker = 1;
  inline bool has_atker() const;
  inline void clear_atker();
  static const int kAtkerFieldNumber = 1;
  inline const ::proto_ff::GVBKillPlayerInfo& atker() const;
  inline ::proto_ff::GVBKillPlayerInfo* mutable_atker();
  inline ::proto_ff::GVBKillPlayerInfo* release_atker();
  inline void set_allocated_atker(::proto_ff::GVBKillPlayerInfo* atker);

  // required .proto_ff.GVBKillPlayerInfo behit = 2;
  inline bool has_behit() const;
  inline void clear_behit();
  static const int kBehitFieldNumber = 2;
  inline const ::proto_ff::GVBKillPlayerInfo& behit() const;
  inline ::proto_ff::GVBKillPlayerInfo* mutable_behit();
  inline ::proto_ff::GVBKillPlayerInfo* release_behit();
  inline void set_allocated_behit(::proto_ff::GVBKillPlayerInfo* behit);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBKillPlayerBC)
 private:
  inline void set_has_atker();
  inline void clear_has_atker();
  inline void set_has_behit();
  inline void clear_has_behit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GVBKillPlayerInfo* atker_;
  ::proto_ff::GVBKillPlayerInfo* behit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBKillPlayerBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBResPointChg : public ::google::protobuf::Message {
 public:
  GVBResPointChg();
  virtual ~GVBResPointChg();

  GVBResPointChg(const GVBResPointChg& from);

  inline GVBResPointChg& operator=(const GVBResPointChg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBResPointChg& default_instance();

  void Swap(GVBResPointChg* other);

  // implements Message ----------------------------------------------

  GVBResPointChg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBResPointChg& from);
  void MergeFrom(const GVBResPointChg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 team1Score = 1;
  inline bool has_team1score() const;
  inline void clear_team1score();
  static const int kTeam1ScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 team1score() const;
  inline void set_team1score(::google::protobuf::uint32 value);

  // required uint32 team2Score = 2;
  inline bool has_team2score() const;
  inline void clear_team2score();
  static const int kTeam2ScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 team2score() const;
  inline void set_team2score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBResPointChg)
 private:
  inline void set_has_team1score();
  inline void clear_has_team1score();
  inline void set_has_team2score();
  inline void clear_has_team2score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 team1score_;
  ::google::protobuf::uint32 team2score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBResPointChg* default_instance_;
};
// -------------------------------------------------------------------

class GVBCrystalStateBC : public ::google::protobuf::Message {
 public:
  GVBCrystalStateBC();
  virtual ~GVBCrystalStateBC();

  GVBCrystalStateBC(const GVBCrystalStateBC& from);

  inline GVBCrystalStateBC& operator=(const GVBCrystalStateBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBCrystalStateBC& default_instance();

  void Swap(GVBCrystalStateBC* other);

  // implements Message ----------------------------------------------

  GVBCrystalStateBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBCrystalStateBC& from);
  void MergeFrom(const GVBCrystalStateBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 crystalState = 1;
  inline bool has_crystalstate() const;
  inline void clear_crystalstate();
  static const int kCrystalStateFieldNumber = 1;
  inline ::google::protobuf::uint32 crystalstate() const;
  inline void set_crystalstate(::google::protobuf::uint32 value);

  // required uint32 crystalBornCountdown = 2;
  inline bool has_crystalborncountdown() const;
  inline void clear_crystalborncountdown();
  static const int kCrystalBornCountdownFieldNumber = 2;
  inline ::google::protobuf::uint32 crystalborncountdown() const;
  inline void set_crystalborncountdown(::google::protobuf::uint32 value);

  // optional uint64 crystalOwner = 3;
  inline bool has_crystalowner() const;
  inline void clear_crystalowner();
  static const int kCrystalOwnerFieldNumber = 3;
  inline ::google::protobuf::uint64 crystalowner() const;
  inline void set_crystalowner(::google::protobuf::uint64 value);

  // optional uint32 crystalOwnerTeam = 4;
  inline bool has_crystalownerteam() const;
  inline void clear_crystalownerteam();
  static const int kCrystalOwnerTeamFieldNumber = 4;
  inline ::google::protobuf::uint32 crystalownerteam() const;
  inline void set_crystalownerteam(::google::protobuf::uint32 value);

  // optional uint32 crystalOwnerProfession = 5;
  inline bool has_crystalownerprofession() const;
  inline void clear_crystalownerprofession();
  static const int kCrystalOwnerProfessionFieldNumber = 5;
  inline ::google::protobuf::uint32 crystalownerprofession() const;
  inline void set_crystalownerprofession(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBCrystalStateBC)
 private:
  inline void set_has_crystalstate();
  inline void clear_has_crystalstate();
  inline void set_has_crystalborncountdown();
  inline void clear_has_crystalborncountdown();
  inline void set_has_crystalowner();
  inline void clear_has_crystalowner();
  inline void set_has_crystalownerteam();
  inline void clear_has_crystalownerteam();
  inline void set_has_crystalownerprofession();
  inline void clear_has_crystalownerprofession();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 crystalstate_;
  ::google::protobuf::uint32 crystalborncountdown_;
  ::google::protobuf::uint64 crystalowner_;
  ::google::protobuf::uint32 crystalownerteam_;
  ::google::protobuf::uint32 crystalownerprofession_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBCrystalStateBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBCrystalCollectReq : public ::google::protobuf::Message {
 public:
  GVBCrystalCollectReq();
  virtual ~GVBCrystalCollectReq();

  GVBCrystalCollectReq(const GVBCrystalCollectReq& from);

  inline GVBCrystalCollectReq& operator=(const GVBCrystalCollectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBCrystalCollectReq& default_instance();

  void Swap(GVBCrystalCollectReq* other);

  // implements Message ----------------------------------------------

  GVBCrystalCollectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBCrystalCollectReq& from);
  void MergeFrom(const GVBCrystalCollectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBCrystalCollectReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBCrystalCollectReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBCrystalCollectRsp : public ::google::protobuf::Message {
 public:
  GVBCrystalCollectRsp();
  virtual ~GVBCrystalCollectRsp();

  GVBCrystalCollectRsp(const GVBCrystalCollectRsp& from);

  inline GVBCrystalCollectRsp& operator=(const GVBCrystalCollectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBCrystalCollectRsp& default_instance();

  void Swap(GVBCrystalCollectRsp* other);

  // implements Message ----------------------------------------------

  GVBCrystalCollectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBCrystalCollectRsp& from);
  void MergeFrom(const GVBCrystalCollectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBCrystalCollectRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBCrystalCollectRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBDailyScoreDataReq : public ::google::protobuf::Message {
 public:
  GVBDailyScoreDataReq();
  virtual ~GVBDailyScoreDataReq();

  GVBDailyScoreDataReq(const GVBDailyScoreDataReq& from);

  inline GVBDailyScoreDataReq& operator=(const GVBDailyScoreDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBDailyScoreDataReq& default_instance();

  void Swap(GVBDailyScoreDataReq* other);

  // implements Message ----------------------------------------------

  GVBDailyScoreDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBDailyScoreDataReq& from);
  void MergeFrom(const GVBDailyScoreDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.GVBDailyScoreDataReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBDailyScoreDataReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBDailyScoreDataRsp : public ::google::protobuf::Message {
 public:
  GVBDailyScoreDataRsp();
  virtual ~GVBDailyScoreDataRsp();

  GVBDailyScoreDataRsp(const GVBDailyScoreDataRsp& from);

  inline GVBDailyScoreDataRsp& operator=(const GVBDailyScoreDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBDailyScoreDataRsp& default_instance();

  void Swap(GVBDailyScoreDataRsp* other);

  // implements Message ----------------------------------------------

  GVBDailyScoreDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBDailyScoreDataRsp& from);
  void MergeFrom(const GVBDailyScoreDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 rewardsState = 1;
  inline int rewardsstate_size() const;
  inline void clear_rewardsstate();
  static const int kRewardsStateFieldNumber = 1;
  inline ::google::protobuf::uint32 rewardsstate(int index) const;
  inline void set_rewardsstate(int index, ::google::protobuf::uint32 value);
  inline void add_rewardsstate(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewardsstate() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewardsstate();

  // required uint32 dailyScore = 2;
  inline bool has_dailyscore() const;
  inline void clear_dailyscore();
  static const int kDailyScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 dailyscore() const;
  inline void set_dailyscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBDailyScoreDataRsp)
 private:
  inline void set_has_dailyscore();
  inline void clear_has_dailyscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewardsstate_;
  ::google::protobuf::uint32 dailyscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBDailyScoreDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBDailyScoreRewardRcvReq : public ::google::protobuf::Message {
 public:
  GVBDailyScoreRewardRcvReq();
  virtual ~GVBDailyScoreRewardRcvReq();

  GVBDailyScoreRewardRcvReq(const GVBDailyScoreRewardRcvReq& from);

  inline GVBDailyScoreRewardRcvReq& operator=(const GVBDailyScoreRewardRcvReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBDailyScoreRewardRcvReq& default_instance();

  void Swap(GVBDailyScoreRewardRcvReq* other);

  // implements Message ----------------------------------------------

  GVBDailyScoreRewardRcvReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBDailyScoreRewardRcvReq& from);
  void MergeFrom(const GVBDailyScoreRewardRcvReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBDailyScoreRewardRcvReq)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBDailyScoreRewardRcvReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBDailyScoreRewardRcvRsp : public ::google::protobuf::Message {
 public:
  GVBDailyScoreRewardRcvRsp();
  virtual ~GVBDailyScoreRewardRcvRsp();

  GVBDailyScoreRewardRcvRsp(const GVBDailyScoreRewardRcvRsp& from);

  inline GVBDailyScoreRewardRcvRsp& operator=(const GVBDailyScoreRewardRcvRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBDailyScoreRewardRcvRsp& default_instance();

  void Swap(GVBDailyScoreRewardRcvRsp* other);

  // implements Message ----------------------------------------------

  GVBDailyScoreRewardRcvRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBDailyScoreRewardRcvRsp& from);
  void MergeFrom(const GVBDailyScoreRewardRcvRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // optional uint32 idx = 2;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 2;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBDailyScoreRewardRcvRsp)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_idx();
  inline void clear_has_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_;
  ::google::protobuf::uint32 idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBDailyScoreRewardRcvRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBRoomReq : public ::google::protobuf::Message {
 public:
  GVBRoomReq();
  virtual ~GVBRoomReq();

  GVBRoomReq(const GVBRoomReq& from);

  inline GVBRoomReq& operator=(const GVBRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBRoomReq& default_instance();

  void Swap(GVBRoomReq* other);

  // implements Message ----------------------------------------------

  GVBRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBRoomReq& from);
  void MergeFrom(const GVBRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required uint64 fromLogicServerId = 2;
  inline bool has_fromlogicserverid() const;
  inline void clear_fromlogicserverid();
  static const int kFromLogicServerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 fromlogicserverid() const;
  inline void set_fromlogicserverid(::google::protobuf::uint64 value);

  // required uint64 fromZone = 3;
  inline bool has_fromzone() const;
  inline void clear_fromzone();
  static const int kFromZoneFieldNumber = 3;
  inline ::google::protobuf::uint64 fromzone() const;
  inline void set_fromzone(::google::protobuf::uint64 value);

  // required uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required bool enterPrev = 5;
  inline bool has_enterprev() const;
  inline void clear_enterprev();
  static const int kEnterPrevFieldNumber = 5;
  inline bool enterprev() const;
  inline void set_enterprev(bool value);

  // optional uint32 playersMax = 6;
  inline bool has_playersmax() const;
  inline void clear_playersmax();
  static const int kPlayersMaxFieldNumber = 6;
  inline ::google::protobuf::uint32 playersmax() const;
  inline void set_playersmax(::google::protobuf::uint32 value);

  // optional uint32 lifeTime = 7;
  inline bool has_lifetime() const;
  inline void clear_lifetime();
  static const int kLifeTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 lifetime() const;
  inline void set_lifetime(::google::protobuf::uint32 value);

  // required uint32 mapId = 8;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 8;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // required uint64 session = 9;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 9;
  inline ::google::protobuf::uint64 session() const;
  inline void set_session(::google::protobuf::uint64 value);

  // required uint32 actId = 10;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActIdFieldNumber = 10;
  inline ::google::protobuf::uint32 actid() const;
  inline void set_actid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBRoomReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_fromlogicserverid();
  inline void clear_has_fromlogicserverid();
  inline void set_has_fromzone();
  inline void clear_has_fromzone();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_enterprev();
  inline void clear_has_enterprev();
  inline void set_has_playersmax();
  inline void clear_has_playersmax();
  inline void set_has_lifetime();
  inline void clear_has_lifetime();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_session();
  inline void clear_has_session();
  inline void set_has_actid();
  inline void clear_has_actid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 fromlogicserverid_;
  ::google::protobuf::uint64 fromzone_;
  ::google::protobuf::uint32 type_;
  bool enterprev_;
  ::google::protobuf::uint32 playersmax_;
  ::google::protobuf::uint32 lifetime_;
  ::google::protobuf::uint64 session_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 actid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBRoomRsp : public ::google::protobuf::Message {
 public:
  GVBRoomRsp();
  virtual ~GVBRoomRsp();

  GVBRoomRsp(const GVBRoomRsp& from);

  inline GVBRoomRsp& operator=(const GVBRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBRoomRsp& default_instance();

  void Swap(GVBRoomRsp* other);

  // implements Message ----------------------------------------------

  GVBRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBRoomRsp& from);
  void MergeFrom(const GVBRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 roomId = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // required uint32 mapId = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // required uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint64 session = 5;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 5;
  inline ::google::protobuf::uint64 session() const;
  inline void set_session(::google::protobuf::uint64 value);

  // optional uint32 error = 6;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 6;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBRoomRsp)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_session();
  inline void clear_has_session();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint64 session_;
  ::google::protobuf::uint32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBRoomCloseReq : public ::google::protobuf::Message {
 public:
  GVBRoomCloseReq();
  virtual ~GVBRoomCloseReq();

  GVBRoomCloseReq(const GVBRoomCloseReq& from);

  inline GVBRoomCloseReq& operator=(const GVBRoomCloseReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBRoomCloseReq& default_instance();

  void Swap(GVBRoomCloseReq* other);

  // implements Message ----------------------------------------------

  GVBRoomCloseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBRoomCloseReq& from);
  void MergeFrom(const GVBRoomCloseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint64 roomId = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // required uint32 option = 3;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 3;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBRoomCloseReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_option();
  inline void clear_has_option();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 option_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBRoomCloseReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBCrystalOwnerPosReq : public ::google::protobuf::Message {
 public:
  GVBCrystalOwnerPosReq();
  virtual ~GVBCrystalOwnerPosReq();

  GVBCrystalOwnerPosReq(const GVBCrystalOwnerPosReq& from);

  inline GVBCrystalOwnerPosReq& operator=(const GVBCrystalOwnerPosReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBCrystalOwnerPosReq& default_instance();

  void Swap(GVBCrystalOwnerPosReq* other);

  // implements Message ----------------------------------------------

  GVBCrystalOwnerPosReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBCrystalOwnerPosReq& from);
  void MergeFrom(const GVBCrystalOwnerPosReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.GVBCrystalOwnerPosReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBCrystalOwnerPosReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBCrystalOwnerPosRsp : public ::google::protobuf::Message {
 public:
  GVBCrystalOwnerPosRsp();
  virtual ~GVBCrystalOwnerPosRsp();

  GVBCrystalOwnerPosRsp(const GVBCrystalOwnerPosRsp& from);

  inline GVBCrystalOwnerPosRsp& operator=(const GVBCrystalOwnerPosRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBCrystalOwnerPosRsp& default_instance();

  void Swap(GVBCrystalOwnerPosRsp* other);

  // implements Message ----------------------------------------------

  GVBCrystalOwnerPosRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBCrystalOwnerPosRsp& from);
  void MergeFrom(const GVBCrystalOwnerPosRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.Vector3PB pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBCrystalOwnerPosRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::Vector3PB* pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBCrystalOwnerPosRsp* default_instance_;
};
// -------------------------------------------------------------------

class WPPEnterReq : public ::google::protobuf::Message {
 public:
  WPPEnterReq();
  virtual ~WPPEnterReq();

  WPPEnterReq(const WPPEnterReq& from);

  inline WPPEnterReq& operator=(const WPPEnterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPEnterReq& default_instance();

  void Swap(WPPEnterReq* other);

  // implements Message ----------------------------------------------

  WPPEnterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPEnterReq& from);
  void MergeFrom(const WPPEnterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.WPPEnterReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPEnterReq* default_instance_;
};
// -------------------------------------------------------------------

class WPPExitReq : public ::google::protobuf::Message {
 public:
  WPPExitReq();
  virtual ~WPPExitReq();

  WPPExitReq(const WPPExitReq& from);

  inline WPPExitReq& operator=(const WPPExitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPExitReq& default_instance();

  void Swap(WPPExitReq* other);

  // implements Message ----------------------------------------------

  WPPExitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPExitReq& from);
  void MergeFrom(const WPPExitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.WPPExitReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPExitReq* default_instance_;
};
// -------------------------------------------------------------------

class WPPEnterRsp : public ::google::protobuf::Message {
 public:
  WPPEnterRsp();
  virtual ~WPPEnterRsp();

  WPPEnterRsp(const WPPEnterRsp& from);

  inline WPPEnterRsp& operator=(const WPPEnterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPEnterRsp& default_instance();

  void Swap(WPPEnterRsp* other);

  // implements Message ----------------------------------------------

  WPPEnterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPEnterRsp& from);
  void MergeFrom(const WPPEnterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 collectTimes = 1;
  inline bool has_collecttimes() const;
  inline void clear_collecttimes();
  static const int kCollectTimesFieldNumber = 1;
  inline ::google::protobuf::uint32 collecttimes() const;
  inline void set_collecttimes(::google::protobuf::uint32 value);

  // required uint64 expTotal = 2;
  inline bool has_exptotal() const;
  inline void clear_exptotal();
  static const int kExpTotalFieldNumber = 2;
  inline ::google::protobuf::uint64 exptotal() const;
  inline void set_exptotal(::google::protobuf::uint64 value);

  // required uint32 splashTimes = 3;
  inline bool has_splashtimes() const;
  inline void clear_splashtimes();
  static const int kSplashTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 splashtimes() const;
  inline void set_splashtimes(::google::protobuf::uint32 value);

  // required uint32 massageTimes = 4;
  inline bool has_massagetimes() const;
  inline void clear_massagetimes();
  static const int kMassageTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 massagetimes() const;
  inline void set_massagetimes(::google::protobuf::uint32 value);

  // required int64 collectCD = 5;
  inline bool has_collectcd() const;
  inline void clear_collectcd();
  static const int kCollectCDFieldNumber = 5;
  inline ::google::protobuf::int64 collectcd() const;
  inline void set_collectcd(::google::protobuf::int64 value);

  // required uint32 wpp_state = 6;
  inline bool has_wpp_state() const;
  inline void clear_wpp_state();
  static const int kWppStateFieldNumber = 6;
  inline ::google::protobuf::uint32 wpp_state() const;
  inline void set_wpp_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPEnterRsp)
 private:
  inline void set_has_collecttimes();
  inline void clear_has_collecttimes();
  inline void set_has_exptotal();
  inline void clear_has_exptotal();
  inline void set_has_splashtimes();
  inline void clear_has_splashtimes();
  inline void set_has_massagetimes();
  inline void clear_has_massagetimes();
  inline void set_has_collectcd();
  inline void clear_has_collectcd();
  inline void set_has_wpp_state();
  inline void clear_has_wpp_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 exptotal_;
  ::google::protobuf::uint32 collecttimes_;
  ::google::protobuf::uint32 splashtimes_;
  ::google::protobuf::int64 collectcd_;
  ::google::protobuf::uint32 massagetimes_;
  ::google::protobuf::uint32 wpp_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPEnterRsp* default_instance_;
};
// -------------------------------------------------------------------

class WPPPairPracticeReq : public ::google::protobuf::Message {
 public:
  WPPPairPracticeReq();
  virtual ~WPPPairPracticeReq();

  WPPPairPracticeReq(const WPPPairPracticeReq& from);

  inline WPPPairPracticeReq& operator=(const WPPPairPracticeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPPairPracticeReq& default_instance();

  void Swap(WPPPairPracticeReq* other);

  // implements Message ----------------------------------------------

  WPPPairPracticeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPPairPracticeReq& from);
  void MergeFrom(const WPPPairPracticeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline ::google::protobuf::uint64 target() const;
  inline void set_target(::google::protobuf::uint64 value);

  // required .proto_ff.Vector3PB selfPos = 2;
  inline bool has_selfpos() const;
  inline void clear_selfpos();
  static const int kSelfPosFieldNumber = 2;
  inline const ::proto_ff::Vector3PB& selfpos() const;
  inline ::proto_ff::Vector3PB* mutable_selfpos();
  inline ::proto_ff::Vector3PB* release_selfpos();
  inline void set_allocated_selfpos(::proto_ff::Vector3PB* selfpos);

  // required .proto_ff.Vector3PB selfDir = 3;
  inline bool has_selfdir() const;
  inline void clear_selfdir();
  static const int kSelfDirFieldNumber = 3;
  inline const ::proto_ff::Vector3PB& selfdir() const;
  inline ::proto_ff::Vector3PB* mutable_selfdir();
  inline ::proto_ff::Vector3PB* release_selfdir();
  inline void set_allocated_selfdir(::proto_ff::Vector3PB* selfdir);

  // required .proto_ff.Vector3PB targetPos = 4;
  inline bool has_targetpos() const;
  inline void clear_targetpos();
  static const int kTargetPosFieldNumber = 4;
  inline const ::proto_ff::Vector3PB& targetpos() const;
  inline ::proto_ff::Vector3PB* mutable_targetpos();
  inline ::proto_ff::Vector3PB* release_targetpos();
  inline void set_allocated_targetpos(::proto_ff::Vector3PB* targetpos);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPPairPracticeReq)
 private:
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_selfpos();
  inline void clear_has_selfpos();
  inline void set_has_selfdir();
  inline void clear_has_selfdir();
  inline void set_has_targetpos();
  inline void clear_has_targetpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 target_;
  ::proto_ff::Vector3PB* selfpos_;
  ::proto_ff::Vector3PB* selfdir_;
  ::proto_ff::Vector3PB* targetpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPPairPracticeReq* default_instance_;
};
// -------------------------------------------------------------------

class WPPPairPracticeRsp : public ::google::protobuf::Message {
 public:
  WPPPairPracticeRsp();
  virtual ~WPPPairPracticeRsp();

  WPPPairPracticeRsp(const WPPPairPracticeRsp& from);

  inline WPPPairPracticeRsp& operator=(const WPPPairPracticeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPPairPracticeRsp& default_instance();

  void Swap(WPPPairPracticeRsp* other);

  // implements Message ----------------------------------------------

  WPPPairPracticeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPPairPracticeRsp& from);
  void MergeFrom(const WPPPairPracticeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPPairPracticeRsp)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPPairPracticeRsp* default_instance_;
};
// -------------------------------------------------------------------

class WPPMassageReq : public ::google::protobuf::Message {
 public:
  WPPMassageReq();
  virtual ~WPPMassageReq();

  WPPMassageReq(const WPPMassageReq& from);

  inline WPPMassageReq& operator=(const WPPMassageReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPMassageReq& default_instance();

  void Swap(WPPMassageReq* other);

  // implements Message ----------------------------------------------

  WPPMassageReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPMassageReq& from);
  void MergeFrom(const WPPMassageReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline ::google::protobuf::uint64 target() const;
  inline void set_target(::google::protobuf::uint64 value);

  // required .proto_ff.Vector3PB selfPos = 2;
  inline bool has_selfpos() const;
  inline void clear_selfpos();
  static const int kSelfPosFieldNumber = 2;
  inline const ::proto_ff::Vector3PB& selfpos() const;
  inline ::proto_ff::Vector3PB* mutable_selfpos();
  inline ::proto_ff::Vector3PB* release_selfpos();
  inline void set_allocated_selfpos(::proto_ff::Vector3PB* selfpos);

  // required .proto_ff.Vector3PB selfDir = 3;
  inline bool has_selfdir() const;
  inline void clear_selfdir();
  static const int kSelfDirFieldNumber = 3;
  inline const ::proto_ff::Vector3PB& selfdir() const;
  inline ::proto_ff::Vector3PB* mutable_selfdir();
  inline ::proto_ff::Vector3PB* release_selfdir();
  inline void set_allocated_selfdir(::proto_ff::Vector3PB* selfdir);

  // required .proto_ff.Vector3PB targetPos = 4;
  inline bool has_targetpos() const;
  inline void clear_targetpos();
  static const int kTargetPosFieldNumber = 4;
  inline const ::proto_ff::Vector3PB& targetpos() const;
  inline ::proto_ff::Vector3PB* mutable_targetpos();
  inline ::proto_ff::Vector3PB* release_targetpos();
  inline void set_allocated_targetpos(::proto_ff::Vector3PB* targetpos);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPMassageReq)
 private:
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_selfpos();
  inline void clear_has_selfpos();
  inline void set_has_selfdir();
  inline void clear_has_selfdir();
  inline void set_has_targetpos();
  inline void clear_has_targetpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 target_;
  ::proto_ff::Vector3PB* selfpos_;
  ::proto_ff::Vector3PB* selfdir_;
  ::proto_ff::Vector3PB* targetpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPMassageReq* default_instance_;
};
// -------------------------------------------------------------------

class WPPMassageRsp : public ::google::protobuf::Message {
 public:
  WPPMassageRsp();
  virtual ~WPPMassageRsp();

  WPPMassageRsp(const WPPMassageRsp& from);

  inline WPPMassageRsp& operator=(const WPPMassageRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPMassageRsp& default_instance();

  void Swap(WPPMassageRsp* other);

  // implements Message ----------------------------------------------

  WPPMassageRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPMassageRsp& from);
  void MergeFrom(const WPPMassageRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // optional uint32 massageTimes = 2;
  inline bool has_massagetimes() const;
  inline void clear_massagetimes();
  static const int kMassageTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 massagetimes() const;
  inline void set_massagetimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPMassageRsp)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_massagetimes();
  inline void clear_has_massagetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_;
  ::google::protobuf::uint32 massagetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPMassageRsp* default_instance_;
};
// -------------------------------------------------------------------

class WPPSplashReq : public ::google::protobuf::Message {
 public:
  WPPSplashReq();
  virtual ~WPPSplashReq();

  WPPSplashReq(const WPPSplashReq& from);

  inline WPPSplashReq& operator=(const WPPSplashReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPSplashReq& default_instance();

  void Swap(WPPSplashReq* other);

  // implements Message ----------------------------------------------

  WPPSplashReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPSplashReq& from);
  void MergeFrom(const WPPSplashReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.SkillUseReq skillReq = 1;
  inline bool has_skillreq() const;
  inline void clear_skillreq();
  static const int kSkillReqFieldNumber = 1;
  inline const ::proto_ff::SkillUseReq& skillreq() const;
  inline ::proto_ff::SkillUseReq* mutable_skillreq();
  inline ::proto_ff::SkillUseReq* release_skillreq();
  inline void set_allocated_skillreq(::proto_ff::SkillUseReq* skillreq);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPSplashReq)
 private:
  inline void set_has_skillreq();
  inline void clear_has_skillreq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::SkillUseReq* skillreq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPSplashReq* default_instance_;
};
// -------------------------------------------------------------------

class WPPSplashRsp : public ::google::protobuf::Message {
 public:
  WPPSplashRsp();
  virtual ~WPPSplashRsp();

  WPPSplashRsp(const WPPSplashRsp& from);

  inline WPPSplashRsp& operator=(const WPPSplashRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPSplashRsp& default_instance();

  void Swap(WPPSplashRsp* other);

  // implements Message ----------------------------------------------

  WPPSplashRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPSplashRsp& from);
  void MergeFrom(const WPPSplashRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // required uint32 splashTimes = 2;
  inline bool has_splashtimes() const;
  inline void clear_splashtimes();
  static const int kSplashTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 splashtimes() const;
  inline void set_splashtimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPSplashRsp)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_splashtimes();
  inline void clear_has_splashtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_;
  ::google::protobuf::uint32 splashtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPSplashRsp* default_instance_;
};
// -------------------------------------------------------------------

class WPPCollectRsp : public ::google::protobuf::Message {
 public:
  WPPCollectRsp();
  virtual ~WPPCollectRsp();

  WPPCollectRsp(const WPPCollectRsp& from);

  inline WPPCollectRsp& operator=(const WPPCollectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPCollectRsp& default_instance();

  void Swap(WPPCollectRsp* other);

  // implements Message ----------------------------------------------

  WPPCollectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPCollectRsp& from);
  void MergeFrom(const WPPCollectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // optional uint32 collectTimes = 2;
  inline bool has_collecttimes() const;
  inline void clear_collecttimes();
  static const int kCollectTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 collecttimes() const;
  inline void set_collecttimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPCollectRsp)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_collecttimes();
  inline void clear_has_collecttimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_;
  ::google::protobuf::uint32 collecttimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPCollectRsp* default_instance_;
};
// -------------------------------------------------------------------

class WPPExpAddNt : public ::google::protobuf::Message {
 public:
  WPPExpAddNt();
  virtual ~WPPExpAddNt();

  WPPExpAddNt(const WPPExpAddNt& from);

  inline WPPExpAddNt& operator=(const WPPExpAddNt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPExpAddNt& default_instance();

  void Swap(WPPExpAddNt* other);

  // implements Message ----------------------------------------------

  WPPExpAddNt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPExpAddNt& from);
  void MergeFrom(const WPPExpAddNt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 expTotal = 1;
  inline bool has_exptotal() const;
  inline void clear_exptotal();
  static const int kExpTotalFieldNumber = 1;
  inline ::google::protobuf::uint64 exptotal() const;
  inline void set_exptotal(::google::protobuf::uint64 value);

  // required uint64 expAdd = 2;
  inline bool has_expadd() const;
  inline void clear_expadd();
  static const int kExpAddFieldNumber = 2;
  inline ::google::protobuf::uint64 expadd() const;
  inline void set_expadd(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPExpAddNt)
 private:
  inline void set_has_exptotal();
  inline void clear_has_exptotal();
  inline void set_has_expadd();
  inline void clear_has_expadd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 exptotal_;
  ::google::protobuf::uint64 expadd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPExpAddNt* default_instance_;
};
// -------------------------------------------------------------------

class WPPCollectCDNt : public ::google::protobuf::Message {
 public:
  WPPCollectCDNt();
  virtual ~WPPCollectCDNt();

  WPPCollectCDNt(const WPPCollectCDNt& from);

  inline WPPCollectCDNt& operator=(const WPPCollectCDNt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPCollectCDNt& default_instance();

  void Swap(WPPCollectCDNt* other);

  // implements Message ----------------------------------------------

  WPPCollectCDNt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPCollectCDNt& from);
  void MergeFrom(const WPPCollectCDNt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cd = 1;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 1;
  inline ::google::protobuf::uint64 cd() const;
  inline void set_cd(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPCollectCDNt)
 private:
  inline void set_has_cd();
  inline void clear_has_cd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPCollectCDNt* default_instance_;
};
// -------------------------------------------------------------------

class WPPActionNt : public ::google::protobuf::Message {
 public:
  WPPActionNt();
  virtual ~WPPActionNt();

  WPPActionNt(const WPPActionNt& from);

  inline WPPActionNt& operator=(const WPPActionNt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPActionNt& default_instance();

  void Swap(WPPActionNt* other);

  // implements Message ----------------------------------------------

  WPPActionNt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPActionNt& from);
  void MergeFrom(const WPPActionNt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 other = 3;
  inline bool has_other() const;
  inline void clear_other();
  static const int kOtherFieldNumber = 3;
  inline ::google::protobuf::uint64 other() const;
  inline void set_other(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // optional .proto_ff.Vector3PB dir = 5;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline const ::proto_ff::Vector3PB& dir() const;
  inline ::proto_ff::Vector3PB* mutable_dir();
  inline ::proto_ff::Vector3PB* release_dir();
  inline void set_allocated_dir(::proto_ff::Vector3PB* dir);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPActionNt)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_other();
  inline void clear_has_other();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 other_;
  ::proto_ff::Vector3PB* pos_;
  ::proto_ff::Vector3PB* dir_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPActionNt* default_instance_;
};
// -------------------------------------------------------------------

class WPPCancelCurActReq : public ::google::protobuf::Message {
 public:
  WPPCancelCurActReq();
  virtual ~WPPCancelCurActReq();

  WPPCancelCurActReq(const WPPCancelCurActReq& from);

  inline WPPCancelCurActReq& operator=(const WPPCancelCurActReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPCancelCurActReq& default_instance();

  void Swap(WPPCancelCurActReq* other);

  // implements Message ----------------------------------------------

  WPPCancelCurActReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPCancelCurActReq& from);
  void MergeFrom(const WPPCancelCurActReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.WPPCancelCurActReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPCancelCurActReq* default_instance_;
};
// -------------------------------------------------------------------

class WPPCancelCurActRsp : public ::google::protobuf::Message {
 public:
  WPPCancelCurActRsp();
  virtual ~WPPCancelCurActRsp();

  WPPCancelCurActRsp(const WPPCancelCurActRsp& from);

  inline WPPCancelCurActRsp& operator=(const WPPCancelCurActRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WPPCancelCurActRsp& default_instance();

  void Swap(WPPCancelCurActRsp* other);

  // implements Message ----------------------------------------------

  WPPCancelCurActRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WPPCancelCurActRsp& from);
  void MergeFrom(const WPPCancelCurActRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WPPCancelCurActRsp)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static WPPCancelCurActRsp* default_instance_;
};
// -------------------------------------------------------------------

class CTPEnterReq : public ::google::protobuf::Message {
 public:
  CTPEnterReq();
  virtual ~CTPEnterReq();

  CTPEnterReq(const CTPEnterReq& from);

  inline CTPEnterReq& operator=(const CTPEnterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPEnterReq& default_instance();

  void Swap(CTPEnterReq* other);

  // implements Message ----------------------------------------------

  CTPEnterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPEnterReq& from);
  void MergeFrom(const CTPEnterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.CTPEnterReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPEnterReq* default_instance_;
};
// -------------------------------------------------------------------

class CTPExitReq : public ::google::protobuf::Message {
 public:
  CTPExitReq();
  virtual ~CTPExitReq();

  CTPExitReq(const CTPExitReq& from);

  inline CTPExitReq& operator=(const CTPExitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPExitReq& default_instance();

  void Swap(CTPExitReq* other);

  // implements Message ----------------------------------------------

  CTPExitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPExitReq& from);
  void MergeFrom(const CTPExitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.CTPExitReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPExitReq* default_instance_;
};
// -------------------------------------------------------------------

class CTPPlayerInfo : public ::google::protobuf::Message {
 public:
  CTPPlayerInfo();
  virtual ~CTPPlayerInfo();

  CTPPlayerInfo(const CTPPlayerInfo& from);

  inline CTPPlayerInfo& operator=(const CTPPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPPlayerInfo& default_instance();

  void Swap(CTPPlayerInfo* other);

  // implements Message ----------------------------------------------

  CTPPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPPlayerInfo& from);
  void MergeFrom(const CTPPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 team = 3;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 3;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // required uint64 serverId = 4;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 4;
  inline ::google::protobuf::uint64 serverid() const;
  inline void set_serverid(::google::protobuf::uint64 value);

  // required uint32 killCount = 5;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillCountFieldNumber = 5;
  inline ::google::protobuf::uint32 killcount() const;
  inline void set_killcount(::google::protobuf::uint32 value);

  // required uint64 atkPower = 6;
  inline bool has_atkpower() const;
  inline void clear_atkpower();
  static const int kAtkPowerFieldNumber = 6;
  inline ::google::protobuf::uint64 atkpower() const;
  inline void set_atkpower(::google::protobuf::uint64 value);

  // required uint32 dieCount = 7;
  inline bool has_diecount() const;
  inline void clear_diecount();
  static const int kDieCountFieldNumber = 7;
  inline ::google::protobuf::uint32 diecount() const;
  inline void set_diecount(::google::protobuf::uint32 value);

  // required uint32 score = 8;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 8;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required bool isRebot = 9;
  inline bool has_isrebot() const;
  inline void clear_isrebot();
  static const int kIsRebotFieldNumber = 9;
  inline bool isrebot() const;
  inline void set_isrebot(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.CTPPlayerInfo)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_killcount();
  inline void clear_has_killcount();
  inline void set_has_atkpower();
  inline void clear_has_atkpower();
  inline void set_has_diecount();
  inline void clear_has_diecount();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_isrebot();
  inline void clear_has_isrebot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 killcount_;
  ::google::protobuf::uint64 atkpower_;
  ::google::protobuf::uint32 diecount_;
  ::google::protobuf::uint32 score_;
  bool isrebot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CTPResult : public ::google::protobuf::Message {
 public:
  CTPResult();
  virtual ~CTPResult();

  CTPResult(const CTPResult& from);

  inline CTPResult& operator=(const CTPResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPResult& default_instance();

  void Swap(CTPResult* other);

  // implements Message ----------------------------------------------

  CTPResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPResult& from);
  void MergeFrom(const CTPResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 winTeam = 1;
  inline bool has_winteam() const;
  inline void clear_winteam();
  static const int kWinTeamFieldNumber = 1;
  inline ::google::protobuf::uint32 winteam() const;
  inline void set_winteam(::google::protobuf::uint32 value);

  // repeated .proto_ff.CTPPlayerInfo rank = 2;
  inline int rank_size() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline const ::proto_ff::CTPPlayerInfo& rank(int index) const;
  inline ::proto_ff::CTPPlayerInfo* mutable_rank(int index);
  inline ::proto_ff::CTPPlayerInfo* add_rank();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >&
      rank() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >*
      mutable_rank();

  // required uint32 team1Score = 3;
  inline bool has_team1score() const;
  inline void clear_team1score();
  static const int kTeam1ScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 team1score() const;
  inline void set_team1score(::google::protobuf::uint32 value);

  // required uint32 team2Score = 4;
  inline bool has_team2score() const;
  inline void clear_team2score();
  static const int kTeam2ScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 team2score() const;
  inline void set_team2score(::google::protobuf::uint32 value);

  // required bool last = 5;
  inline bool has_last() const;
  inline void clear_last();
  static const int kLastFieldNumber = 5;
  inline bool last() const;
  inline void set_last(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.CTPResult)
 private:
  inline void set_has_winteam();
  inline void clear_has_winteam();
  inline void set_has_team1score();
  inline void clear_has_team1score();
  inline void set_has_team2score();
  inline void clear_has_team2score();
  inline void set_has_last();
  inline void clear_has_last();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo > rank_;
  ::google::protobuf::uint32 winteam_;
  ::google::protobuf::uint32 team1score_;
  ::google::protobuf::uint32 team2score_;
  bool last_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPResult* default_instance_;
};
// -------------------------------------------------------------------

class CTPEnterRsp : public ::google::protobuf::Message {
 public:
  CTPEnterRsp();
  virtual ~CTPEnterRsp();

  CTPEnterRsp(const CTPEnterRsp& from);

  inline CTPEnterRsp& operator=(const CTPEnterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPEnterRsp& default_instance();

  void Swap(CTPEnterRsp* other);

  // implements Message ----------------------------------------------

  CTPEnterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPEnterRsp& from);
  void MergeFrom(const CTPEnterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 matchStartTime = 1;
  inline bool has_matchstarttime() const;
  inline void clear_matchstarttime();
  static const int kMatchStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 matchstarttime() const;
  inline void set_matchstarttime(::google::protobuf::uint64 value);

  // optional uint64 readyStartTime = 2;
  inline bool has_readystarttime() const;
  inline void clear_readystarttime();
  static const int kReadyStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 readystarttime() const;
  inline void set_readystarttime(::google::protobuf::uint64 value);

  // optional uint64 relifeStartTime = 3;
  inline bool has_relifestarttime() const;
  inline void clear_relifestarttime();
  static const int kRelifeStartTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 relifestarttime() const;
  inline void set_relifestarttime(::google::protobuf::uint64 value);

  // optional uint64 roundStartTime = 4;
  inline bool has_roundstarttime() const;
  inline void clear_roundstarttime();
  static const int kRoundStartTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 roundstarttime() const;
  inline void set_roundstarttime(::google::protobuf::uint64 value);

  // optional uint32 roundStart = 5;
  inline bool has_roundstart() const;
  inline void clear_roundstart();
  static const int kRoundStartFieldNumber = 5;
  inline ::google::protobuf::uint32 roundstart() const;
  inline void set_roundstart(::google::protobuf::uint32 value);

  // required uint32 team1Score = 6;
  inline bool has_team1score() const;
  inline void clear_team1score();
  static const int kTeam1ScoreFieldNumber = 6;
  inline ::google::protobuf::uint32 team1score() const;
  inline void set_team1score(::google::protobuf::uint32 value);

  // required uint32 team2Score = 7;
  inline bool has_team2score() const;
  inline void clear_team2score();
  static const int kTeam2ScoreFieldNumber = 7;
  inline ::google::protobuf::uint32 team2score() const;
  inline void set_team2score(::google::protobuf::uint32 value);

  // required uint32 team1Players = 8;
  inline bool has_team1players() const;
  inline void clear_team1players();
  static const int kTeam1PlayersFieldNumber = 8;
  inline ::google::protobuf::uint32 team1players() const;
  inline void set_team1players(::google::protobuf::uint32 value);

  // required uint32 team2Players = 9;
  inline bool has_team2players() const;
  inline void clear_team2players();
  static const int kTeam2PlayersFieldNumber = 9;
  inline ::google::protobuf::uint32 team2players() const;
  inline void set_team2players(::google::protobuf::uint32 value);

  // required uint32 myScore = 10;
  inline bool has_myscore() const;
  inline void clear_myscore();
  static const int kMyScoreFieldNumber = 10;
  inline ::google::protobuf::uint32 myscore() const;
  inline void set_myscore(::google::protobuf::uint32 value);

  // repeated .proto_ff.CTPPlayerInfo rank = 11;
  inline int rank_size() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 11;
  inline const ::proto_ff::CTPPlayerInfo& rank(int index) const;
  inline ::proto_ff::CTPPlayerInfo* mutable_rank(int index);
  inline ::proto_ff::CTPPlayerInfo* add_rank();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >&
      rank() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >*
      mutable_rank();

  // required uint32 team = 12;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 12;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // repeated .proto_ff.CTPResult results = 13;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 13;
  inline const ::proto_ff::CTPResult& results(int index) const;
  inline ::proto_ff::CTPResult* mutable_results(int index);
  inline ::proto_ff::CTPResult* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPResult >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPResult >*
      mutable_results();

  // optional uint32 team1RealPlayers = 14;
  inline bool has_team1realplayers() const;
  inline void clear_team1realplayers();
  static const int kTeam1RealPlayersFieldNumber = 14;
  inline ::google::protobuf::uint32 team1realplayers() const;
  inline void set_team1realplayers(::google::protobuf::uint32 value);

  // optional uint32 team2RealPlayers = 15;
  inline bool has_team2realplayers() const;
  inline void clear_team2realplayers();
  static const int kTeam2RealPlayersFieldNumber = 15;
  inline ::google::protobuf::uint32 team2realplayers() const;
  inline void set_team2realplayers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CTPEnterRsp)
 private:
  inline void set_has_matchstarttime();
  inline void clear_has_matchstarttime();
  inline void set_has_readystarttime();
  inline void clear_has_readystarttime();
  inline void set_has_relifestarttime();
  inline void clear_has_relifestarttime();
  inline void set_has_roundstarttime();
  inline void clear_has_roundstarttime();
  inline void set_has_roundstart();
  inline void clear_has_roundstart();
  inline void set_has_team1score();
  inline void clear_has_team1score();
  inline void set_has_team2score();
  inline void clear_has_team2score();
  inline void set_has_team1players();
  inline void clear_has_team1players();
  inline void set_has_team2players();
  inline void clear_has_team2players();
  inline void set_has_myscore();
  inline void clear_has_myscore();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_team1realplayers();
  inline void clear_has_team1realplayers();
  inline void set_has_team2realplayers();
  inline void clear_has_team2realplayers();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 matchstarttime_;
  ::google::protobuf::uint64 readystarttime_;
  ::google::protobuf::uint64 relifestarttime_;
  ::google::protobuf::uint64 roundstarttime_;
  ::google::protobuf::uint32 roundstart_;
  ::google::protobuf::uint32 team1score_;
  ::google::protobuf::uint32 team2score_;
  ::google::protobuf::uint32 team1players_;
  ::google::protobuf::uint32 team2players_;
  ::google::protobuf::uint32 myscore_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo > rank_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPResult > results_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 team1realplayers_;
  ::google::protobuf::uint32 team2realplayers_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPEnterRsp* default_instance_;
};
// -------------------------------------------------------------------

class CTPReadyStart : public ::google::protobuf::Message {
 public:
  CTPReadyStart();
  virtual ~CTPReadyStart();

  CTPReadyStart(const CTPReadyStart& from);

  inline CTPReadyStart& operator=(const CTPReadyStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPReadyStart& default_instance();

  void Swap(CTPReadyStart* other);

  // implements Message ----------------------------------------------

  CTPReadyStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPReadyStart& from);
  void MergeFrom(const CTPReadyStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 readyStartTime = 1;
  inline bool has_readystarttime() const;
  inline void clear_readystarttime();
  static const int kReadyStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 readystarttime() const;
  inline void set_readystarttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CTPReadyStart)
 private:
  inline void set_has_readystarttime();
  inline void clear_has_readystarttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 readystarttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPReadyStart* default_instance_;
};
// -------------------------------------------------------------------

class CTPRoundStart : public ::google::protobuf::Message {
 public:
  CTPRoundStart();
  virtual ~CTPRoundStart();

  CTPRoundStart(const CTPRoundStart& from);

  inline CTPRoundStart& operator=(const CTPRoundStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPRoundStart& default_instance();

  void Swap(CTPRoundStart* other);

  // implements Message ----------------------------------------------

  CTPRoundStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPRoundStart& from);
  void MergeFrom(const CTPRoundStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 roundStartTime = 1;
  inline bool has_roundstarttime() const;
  inline void clear_roundstarttime();
  static const int kRoundStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 roundstarttime() const;
  inline void set_roundstarttime(::google::protobuf::uint64 value);

  // required uint32 roundStart = 2;
  inline bool has_roundstart() const;
  inline void clear_roundstart();
  static const int kRoundStartFieldNumber = 2;
  inline ::google::protobuf::uint32 roundstart() const;
  inline void set_roundstart(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CTPRoundStart)
 private:
  inline void set_has_roundstarttime();
  inline void clear_has_roundstarttime();
  inline void set_has_roundstart();
  inline void clear_has_roundstart();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roundstarttime_;
  ::google::protobuf::uint32 roundstart_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPRoundStart* default_instance_;
};
// -------------------------------------------------------------------

class CTPScoreRankNt : public ::google::protobuf::Message {
 public:
  CTPScoreRankNt();
  virtual ~CTPScoreRankNt();

  CTPScoreRankNt(const CTPScoreRankNt& from);

  inline CTPScoreRankNt& operator=(const CTPScoreRankNt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPScoreRankNt& default_instance();

  void Swap(CTPScoreRankNt* other);

  // implements Message ----------------------------------------------

  CTPScoreRankNt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPScoreRankNt& from);
  void MergeFrom(const CTPScoreRankNt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CTPPlayerInfo rank = 1;
  inline int rank_size() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline const ::proto_ff::CTPPlayerInfo& rank(int index) const;
  inline ::proto_ff::CTPPlayerInfo* mutable_rank(int index);
  inline ::proto_ff::CTPPlayerInfo* add_rank();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >&
      rank() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >*
      mutable_rank();

  // required uint32 team1Score = 2;
  inline bool has_team1score() const;
  inline void clear_team1score();
  static const int kTeam1ScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 team1score() const;
  inline void set_team1score(::google::protobuf::uint32 value);

  // required uint32 team2Score = 3;
  inline bool has_team2score() const;
  inline void clear_team2score();
  static const int kTeam2ScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 team2score() const;
  inline void set_team2score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CTPScoreRankNt)
 private:
  inline void set_has_team1score();
  inline void clear_has_team1score();
  inline void set_has_team2score();
  inline void clear_has_team2score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo > rank_;
  ::google::protobuf::uint32 team1score_;
  ::google::protobuf::uint32 team2score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPScoreRankNt* default_instance_;
};
// -------------------------------------------------------------------

class CTPScoreChgNt : public ::google::protobuf::Message {
 public:
  CTPScoreChgNt();
  virtual ~CTPScoreChgNt();

  CTPScoreChgNt(const CTPScoreChgNt& from);

  inline CTPScoreChgNt& operator=(const CTPScoreChgNt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPScoreChgNt& default_instance();

  void Swap(CTPScoreChgNt* other);

  // implements Message ----------------------------------------------

  CTPScoreChgNt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPScoreChgNt& from);
  void MergeFrom(const CTPScoreChgNt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required uint32 team1Score = 2;
  inline bool has_team1score() const;
  inline void clear_team1score();
  static const int kTeam1ScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 team1score() const;
  inline void set_team1score(::google::protobuf::uint32 value);

  // required uint32 team2Score = 3;
  inline bool has_team2score() const;
  inline void clear_team2score();
  static const int kTeam2ScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 team2score() const;
  inline void set_team2score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CTPScoreChgNt)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_team1score();
  inline void clear_has_team1score();
  inline void set_has_team2score();
  inline void clear_has_team2score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 team1score_;
  ::google::protobuf::uint32 team2score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPScoreChgNt* default_instance_;
};
// -------------------------------------------------------------------

class CTPKillPlayerInfo : public ::google::protobuf::Message {
 public:
  CTPKillPlayerInfo();
  virtual ~CTPKillPlayerInfo();

  CTPKillPlayerInfo(const CTPKillPlayerInfo& from);

  inline CTPKillPlayerInfo& operator=(const CTPKillPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPKillPlayerInfo& default_instance();

  void Swap(CTPKillPlayerInfo* other);

  // implements Message ----------------------------------------------

  CTPKillPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPKillPlayerInfo& from);
  void MergeFrom(const CTPKillPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 killsCount = 1;
  inline bool has_killscount() const;
  inline void clear_killscount();
  static const int kKillsCountFieldNumber = 1;
  inline ::google::protobuf::uint32 killscount() const;
  inline void set_killscount(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .proto_ff.RoleFacadeProto facade = 3;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 3;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // required uint32 team = 4;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 4;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CTPKillPlayerInfo)
 private:
  inline void set_has_killscount();
  inline void clear_has_killscount();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 killscount_;
  ::google::protobuf::uint32 team_;
  ::proto_ff::RoleFacadeProto* facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPKillPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CTPKillNt : public ::google::protobuf::Message {
 public:
  CTPKillNt();
  virtual ~CTPKillNt();

  CTPKillNt(const CTPKillNt& from);

  inline CTPKillNt& operator=(const CTPKillNt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPKillNt& default_instance();

  void Swap(CTPKillNt* other);

  // implements Message ----------------------------------------------

  CTPKillNt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPKillNt& from);
  void MergeFrom(const CTPKillNt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.CTPKillPlayerInfo atker = 1;
  inline bool has_atker() const;
  inline void clear_atker();
  static const int kAtkerFieldNumber = 1;
  inline const ::proto_ff::CTPKillPlayerInfo& atker() const;
  inline ::proto_ff::CTPKillPlayerInfo* mutable_atker();
  inline ::proto_ff::CTPKillPlayerInfo* release_atker();
  inline void set_allocated_atker(::proto_ff::CTPKillPlayerInfo* atker);

  // required .proto_ff.CTPKillPlayerInfo behit = 2;
  inline bool has_behit() const;
  inline void clear_behit();
  static const int kBehitFieldNumber = 2;
  inline const ::proto_ff::CTPKillPlayerInfo& behit() const;
  inline ::proto_ff::CTPKillPlayerInfo* mutable_behit();
  inline ::proto_ff::CTPKillPlayerInfo* release_behit();
  inline void set_allocated_behit(::proto_ff::CTPKillPlayerInfo* behit);

  // @@protoc_insertion_point(class_scope:proto_ff.CTPKillNt)
 private:
  inline void set_has_atker();
  inline void clear_has_atker();
  inline void set_has_behit();
  inline void clear_has_behit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CTPKillPlayerInfo* atker_;
  ::proto_ff::CTPKillPlayerInfo* behit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPKillNt* default_instance_;
};
// -------------------------------------------------------------------

class CTPPlayersChgNt : public ::google::protobuf::Message {
 public:
  CTPPlayersChgNt();
  virtual ~CTPPlayersChgNt();

  CTPPlayersChgNt(const CTPPlayersChgNt& from);

  inline CTPPlayersChgNt& operator=(const CTPPlayersChgNt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTPPlayersChgNt& default_instance();

  void Swap(CTPPlayersChgNt* other);

  // implements Message ----------------------------------------------

  CTPPlayersChgNt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTPPlayersChgNt& from);
  void MergeFrom(const CTPPlayersChgNt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 team1Players = 1;
  inline bool has_team1players() const;
  inline void clear_team1players();
  static const int kTeam1PlayersFieldNumber = 1;
  inline ::google::protobuf::uint32 team1players() const;
  inline void set_team1players(::google::protobuf::uint32 value);

  // required uint32 team2Players = 2;
  inline bool has_team2players() const;
  inline void clear_team2players();
  static const int kTeam2PlayersFieldNumber = 2;
  inline ::google::protobuf::uint32 team2players() const;
  inline void set_team2players(::google::protobuf::uint32 value);

  // required uint32 team1RealPlayers = 3;
  inline bool has_team1realplayers() const;
  inline void clear_team1realplayers();
  static const int kTeam1RealPlayersFieldNumber = 3;
  inline ::google::protobuf::uint32 team1realplayers() const;
  inline void set_team1realplayers(::google::protobuf::uint32 value);

  // required uint32 team2RealPlayers = 4;
  inline bool has_team2realplayers() const;
  inline void clear_team2realplayers();
  static const int kTeam2RealPlayersFieldNumber = 4;
  inline ::google::protobuf::uint32 team2realplayers() const;
  inline void set_team2realplayers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CTPPlayersChgNt)
 private:
  inline void set_has_team1players();
  inline void clear_has_team1players();
  inline void set_has_team2players();
  inline void clear_has_team2players();
  inline void set_has_team1realplayers();
  inline void clear_has_team1realplayers();
  inline void set_has_team2realplayers();
  inline void clear_has_team2realplayers();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 team1players_;
  ::google::protobuf::uint32 team2players_;
  ::google::protobuf::uint32 team1realplayers_;
  ::google::protobuf::uint32 team2realplayers_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static CTPPlayersChgNt* default_instance_;
};
// -------------------------------------------------------------------

class GVBEnterError : public ::google::protobuf::Message {
 public:
  GVBEnterError();
  virtual ~GVBEnterError();

  GVBEnterError(const GVBEnterError& from);

  inline GVBEnterError& operator=(const GVBEnterError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBEnterError& default_instance();

  void Swap(GVBEnterError* other);

  // implements Message ----------------------------------------------

  GVBEnterError* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBEnterError& from);
  void MergeFrom(const GVBEnterError& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBEnterError)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 errcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBEnterError* default_instance_;
};
// -------------------------------------------------------------------

class GMADatas : public ::google::protobuf::Message {
 public:
  GMADatas();
  virtual ~GMADatas();

  GMADatas(const GMADatas& from);

  inline GMADatas& operator=(const GMADatas& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMADatas& default_instance();

  void Swap(GMADatas* other);

  // implements Message ----------------------------------------------

  GMADatas* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMADatas& from);
  void MergeFrom(const GMADatas& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 remainTime = 1;
  inline bool has_remaintime() const;
  inline void clear_remaintime();
  static const int kRemainTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 remaintime() const;
  inline void set_remaintime(::google::protobuf::uint32 value);

  // optional uint32 freeTimeRemain = 2;
  inline bool has_freetimeremain() const;
  inline void clear_freetimeremain();
  static const int kFreeTimeRemainFieldNumber = 2;
  inline ::google::protobuf::uint32 freetimeremain() const;
  inline void set_freetimeremain(::google::protobuf::uint32 value);

  // optional uint32 freeTime = 3;
  inline bool has_freetime() const;
  inline void clear_freetime();
  static const int kFreeTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 freetime() const;
  inline void set_freetime(::google::protobuf::uint32 value);

  // optional uint32 privilege = 4;
  inline bool has_privilege() const;
  inline void clear_privilege();
  static const int kPrivilegeFieldNumber = 4;
  inline ::google::protobuf::uint32 privilege() const;
  inline void set_privilege(::google::protobuf::uint32 value);

  // optional uint64 recvFreeTimePrev = 5;
  inline bool has_recvfreetimeprev() const;
  inline void clear_recvfreetimeprev();
  static const int kRecvFreeTimePrevFieldNumber = 5;
  inline ::google::protobuf::uint64 recvfreetimeprev() const;
  inline void set_recvfreetimeprev(::google::protobuf::uint64 value);

  // optional bool isPause = 6;
  inline bool has_ispause() const;
  inline void clear_ispause();
  static const int kIsPauseFieldNumber = 6;
  inline bool ispause() const;
  inline void set_ispause(bool value);

  // optional uint32 expGet = 7;
  inline bool has_expget() const;
  inline void clear_expget();
  static const int kExpGetFieldNumber = 7;
  inline ::google::protobuf::uint32 expget() const;
  inline void set_expget(::google::protobuf::uint32 value);

  // optional uint32 getFreeTimeCD = 8;
  inline bool has_getfreetimecd() const;
  inline void clear_getfreetimecd();
  static const int kGetFreeTimeCDFieldNumber = 8;
  inline ::google::protobuf::uint32 getfreetimecd() const;
  inline void set_getfreetimecd(::google::protobuf::uint32 value);

  // optional int64 expTotal = 9;
  inline bool has_exptotal() const;
  inline void clear_exptotal();
  static const int kExpTotalFieldNumber = 9;
  inline ::google::protobuf::int64 exptotal() const;
  inline void set_exptotal(::google::protobuf::int64 value);

  // optional int64 expAccumulate = 10;
  inline bool has_expaccumulate() const;
  inline void clear_expaccumulate();
  static const int kExpAccumulateFieldNumber = 10;
  inline ::google::protobuf::int64 expaccumulate() const;
  inline void set_expaccumulate(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMADatas)
 private:
  inline void set_has_remaintime();
  inline void clear_has_remaintime();
  inline void set_has_freetimeremain();
  inline void clear_has_freetimeremain();
  inline void set_has_freetime();
  inline void clear_has_freetime();
  inline void set_has_privilege();
  inline void clear_has_privilege();
  inline void set_has_recvfreetimeprev();
  inline void clear_has_recvfreetimeprev();
  inline void set_has_ispause();
  inline void clear_has_ispause();
  inline void set_has_expget();
  inline void clear_has_expget();
  inline void set_has_getfreetimecd();
  inline void clear_has_getfreetimecd();
  inline void set_has_exptotal();
  inline void clear_has_exptotal();
  inline void set_has_expaccumulate();
  inline void clear_has_expaccumulate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 remaintime_;
  ::google::protobuf::uint32 freetimeremain_;
  ::google::protobuf::uint32 freetime_;
  ::google::protobuf::uint32 privilege_;
  ::google::protobuf::uint64 recvfreetimeprev_;
  bool ispause_;
  ::google::protobuf::uint32 expget_;
  ::google::protobuf::int64 exptotal_;
  ::google::protobuf::int64 expaccumulate_;
  ::google::protobuf::uint32 getfreetimecd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMADatas* default_instance_;
};
// -------------------------------------------------------------------

class GMABossInfo : public ::google::protobuf::Message {
 public:
  GMABossInfo();
  virtual ~GMABossInfo();

  GMABossInfo(const GMABossInfo& from);

  inline GMABossInfo& operator=(const GMABossInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMABossInfo& default_instance();

  void Swap(GMABossInfo* other);

  // implements Message ----------------------------------------------

  GMABossInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMABossInfo& from);
  void MergeFrom(const GMABossInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 players = 1;
  inline bool has_players() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline ::google::protobuf::uint32 players() const;
  inline void set_players(::google::protobuf::uint32 value);

  // required uint32 posId = 2;
  inline bool has_posid() const;
  inline void clear_posid();
  static const int kPosIdFieldNumber = 2;
  inline ::google::protobuf::uint32 posid() const;
  inline void set_posid(::google::protobuf::uint32 value);

  // required uint32 cfgId = 3;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgIdFieldNumber = 3;
  inline ::google::protobuf::uint32 cfgid() const;
  inline void set_cfgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMABossInfo)
 private:
  inline void set_has_players();
  inline void clear_has_players();
  inline void set_has_posid();
  inline void clear_has_posid();
  inline void set_has_cfgid();
  inline void clear_has_cfgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 players_;
  ::google::protobuf::uint32 posid_;
  ::google::protobuf::uint32 cfgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMABossInfo* default_instance_;
};
// -------------------------------------------------------------------

class GMABossInfoReqData : public ::google::protobuf::Message {
 public:
  GMABossInfoReqData();
  virtual ~GMABossInfoReqData();

  GMABossInfoReqData(const GMABossInfoReqData& from);

  inline GMABossInfoReqData& operator=(const GMABossInfoReqData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMABossInfoReqData& default_instance();

  void Swap(GMABossInfoReqData* other);

  // implements Message ----------------------------------------------

  GMABossInfoReqData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMABossInfoReqData& from);
  void MergeFrom(const GMABossInfoReqData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cfgId = 1;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cfgid() const;
  inline void set_cfgid(::google::protobuf::uint32 value);

  // required uint32 posId = 2;
  inline bool has_posid() const;
  inline void clear_posid();
  static const int kPosIdFieldNumber = 2;
  inline ::google::protobuf::uint32 posid() const;
  inline void set_posid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMABossInfoReqData)
 private:
  inline void set_has_cfgid();
  inline void clear_has_cfgid();
  inline void set_has_posid();
  inline void clear_has_posid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cfgid_;
  ::google::protobuf::uint32 posid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMABossInfoReqData* default_instance_;
};
// -------------------------------------------------------------------

class GMABossInfoReq : public ::google::protobuf::Message {
 public:
  GMABossInfoReq();
  virtual ~GMABossInfoReq();

  GMABossInfoReq(const GMABossInfoReq& from);

  inline GMABossInfoReq& operator=(const GMABossInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMABossInfoReq& default_instance();

  void Swap(GMABossInfoReq* other);

  // implements Message ----------------------------------------------

  GMABossInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMABossInfoReq& from);
  void MergeFrom(const GMABossInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GMABossInfoReqData list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::proto_ff::GMABossInfoReqData& list(int index) const;
  inline ::proto_ff::GMABossInfoReqData* mutable_list(int index);
  inline ::proto_ff::GMABossInfoReqData* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMABossInfoReqData >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMABossInfoReqData >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:proto_ff.GMABossInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GMABossInfoReqData > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMABossInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GMABossInfoRsp : public ::google::protobuf::Message {
 public:
  GMABossInfoRsp();
  virtual ~GMABossInfoRsp();

  GMABossInfoRsp(const GMABossInfoRsp& from);

  inline GMABossInfoRsp& operator=(const GMABossInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMABossInfoRsp& default_instance();

  void Swap(GMABossInfoRsp* other);

  // implements Message ----------------------------------------------

  GMABossInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMABossInfoRsp& from);
  void MergeFrom(const GMABossInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GMABossInfo bossListInfo = 1;
  inline int bosslistinfo_size() const;
  inline void clear_bosslistinfo();
  static const int kBossListInfoFieldNumber = 1;
  inline const ::proto_ff::GMABossInfo& bosslistinfo(int index) const;
  inline ::proto_ff::GMABossInfo* mutable_bosslistinfo(int index);
  inline ::proto_ff::GMABossInfo* add_bosslistinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMABossInfo >&
      bosslistinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMABossInfo >*
      mutable_bosslistinfo();

  // @@protoc_insertion_point(class_scope:proto_ff.GMABossInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GMABossInfo > bosslistinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMABossInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class GMABossInfoSingleReq : public ::google::protobuf::Message {
 public:
  GMABossInfoSingleReq();
  virtual ~GMABossInfoSingleReq();

  GMABossInfoSingleReq(const GMABossInfoSingleReq& from);

  inline GMABossInfoSingleReq& operator=(const GMABossInfoSingleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMABossInfoSingleReq& default_instance();

  void Swap(GMABossInfoSingleReq* other);

  // implements Message ----------------------------------------------

  GMABossInfoSingleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMABossInfoSingleReq& from);
  void MergeFrom(const GMABossInfoSingleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // required uint32 posId = 2;
  inline bool has_posid() const;
  inline void clear_posid();
  static const int kPosIdFieldNumber = 2;
  inline ::google::protobuf::uint32 posid() const;
  inline void set_posid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMABossInfoSingleReq)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_posid();
  inline void clear_has_posid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMABossInfoSingleReq* default_instance_;
};
// -------------------------------------------------------------------

class GMABossInfoSingleRsp : public ::google::protobuf::Message {
 public:
  GMABossInfoSingleRsp();
  virtual ~GMABossInfoSingleRsp();

  GMABossInfoSingleRsp(const GMABossInfoSingleRsp& from);

  inline GMABossInfoSingleRsp& operator=(const GMABossInfoSingleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMABossInfoSingleRsp& default_instance();

  void Swap(GMABossInfoSingleRsp* other);

  // implements Message ----------------------------------------------

  GMABossInfoSingleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMABossInfoSingleRsp& from);
  void MergeFrom(const GMABossInfoSingleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 players = 1;
  inline bool has_players() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline ::google::protobuf::uint32 players() const;
  inline void set_players(::google::protobuf::uint32 value);

  // required uint32 posId = 2;
  inline bool has_posid() const;
  inline void clear_posid();
  static const int kPosIdFieldNumber = 2;
  inline ::google::protobuf::uint32 posid() const;
  inline void set_posid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMABossInfoSingleRsp)
 private:
  inline void set_has_players();
  inline void clear_has_players();
  inline void set_has_posid();
  inline void clear_has_posid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 players_;
  ::google::protobuf::uint32 posid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMABossInfoSingleRsp* default_instance_;
};
// -------------------------------------------------------------------

class GMAPauseReq : public ::google::protobuf::Message {
 public:
  GMAPauseReq();
  virtual ~GMAPauseReq();

  GMAPauseReq(const GMAPauseReq& from);

  inline GMAPauseReq& operator=(const GMAPauseReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAPauseReq& default_instance();

  void Swap(GMAPauseReq* other);

  // implements Message ----------------------------------------------

  GMAPauseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAPauseReq& from);
  void MergeFrom(const GMAPauseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isPause = 1;
  inline bool has_ispause() const;
  inline void clear_ispause();
  static const int kIsPauseFieldNumber = 1;
  inline bool ispause() const;
  inline void set_ispause(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMAPauseReq)
 private:
  inline void set_has_ispause();
  inline void clear_has_ispause();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool ispause_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMAPauseReq* default_instance_;
};
// -------------------------------------------------------------------

class GMAPauseRsp : public ::google::protobuf::Message {
 public:
  GMAPauseRsp();
  virtual ~GMAPauseRsp();

  GMAPauseRsp(const GMAPauseRsp& from);

  inline GMAPauseRsp& operator=(const GMAPauseRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAPauseRsp& default_instance();

  void Swap(GMAPauseRsp* other);

  // implements Message ----------------------------------------------

  GMAPauseRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAPauseRsp& from);
  void MergeFrom(const GMAPauseRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isPause = 1;
  inline bool has_ispause() const;
  inline void clear_ispause();
  static const int kIsPauseFieldNumber = 1;
  inline bool ispause() const;
  inline void set_ispause(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMAPauseRsp)
 private:
  inline void set_has_ispause();
  inline void clear_has_ispause();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool ispause_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMAPauseRsp* default_instance_;
};
// -------------------------------------------------------------------

class GMAPayReq : public ::google::protobuf::Message {
 public:
  GMAPayReq();
  virtual ~GMAPayReq();

  GMAPayReq(const GMAPayReq& from);

  inline GMAPayReq& operator=(const GMAPayReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAPayReq& default_instance();

  void Swap(GMAPayReq* other);

  // implements Message ----------------------------------------------

  GMAPayReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAPayReq& from);
  void MergeFrom(const GMAPayReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.GMAPayReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMAPayReq* default_instance_;
};
// -------------------------------------------------------------------

class GMAPayRsp : public ::google::protobuf::Message {
 public:
  GMAPayRsp();
  virtual ~GMAPayRsp();

  GMAPayRsp(const GMAPayRsp& from);

  inline GMAPayRsp& operator=(const GMAPayRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAPayRsp& default_instance();

  void Swap(GMAPayRsp* other);

  // implements Message ----------------------------------------------

  GMAPayRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAPayRsp& from);
  void MergeFrom(const GMAPayRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // required uint32 privilege = 2;
  inline bool has_privilege() const;
  inline void clear_privilege();
  static const int kPrivilegeFieldNumber = 2;
  inline ::google::protobuf::uint32 privilege() const;
  inline void set_privilege(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMAPayRsp)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_privilege();
  inline void clear_has_privilege();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_;
  ::google::protobuf::uint32 privilege_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMAPayRsp* default_instance_;
};
// -------------------------------------------------------------------

class GMAEnterReq : public ::google::protobuf::Message {
 public:
  GMAEnterReq();
  virtual ~GMAEnterReq();

  GMAEnterReq(const GMAEnterReq& from);

  inline GMAEnterReq& operator=(const GMAEnterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAEnterReq& default_instance();

  void Swap(GMAEnterReq* other);

  // implements Message ----------------------------------------------

  GMAEnterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAEnterReq& from);
  void MergeFrom(const GMAEnterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.GMAEnterReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMAEnterReq* default_instance_;
};
// -------------------------------------------------------------------

class GMAGotoFloorReq : public ::google::protobuf::Message {
 public:
  GMAGotoFloorReq();
  virtual ~GMAGotoFloorReq();

  GMAGotoFloorReq(const GMAGotoFloorReq& from);

  inline GMAGotoFloorReq& operator=(const GMAGotoFloorReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAGotoFloorReq& default_instance();

  void Swap(GMAGotoFloorReq* other);

  // implements Message ----------------------------------------------

  GMAGotoFloorReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAGotoFloorReq& from);
  void MergeFrom(const GMAGotoFloorReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 posIdx = 1;
  inline bool has_posidx() const;
  inline void clear_posidx();
  static const int kPosIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 posidx() const;
  inline void set_posidx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMAGotoFloorReq)
 private:
  inline void set_has_posidx();
  inline void clear_has_posidx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 posidx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMAGotoFloorReq* default_instance_;
};
// -------------------------------------------------------------------

class GMAGotoFloorRsp : public ::google::protobuf::Message {
 public:
  GMAGotoFloorRsp();
  virtual ~GMAGotoFloorRsp();

  GMAGotoFloorRsp(const GMAGotoFloorRsp& from);

  inline GMAGotoFloorRsp& operator=(const GMAGotoFloorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAGotoFloorRsp& default_instance();

  void Swap(GMAGotoFloorRsp* other);

  // implements Message ----------------------------------------------

  GMAGotoFloorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAGotoFloorRsp& from);
  void MergeFrom(const GMAGotoFloorRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMAGotoFloorRsp)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMAGotoFloorRsp* default_instance_;
};
// -------------------------------------------------------------------

class GMATimeRechargeReq : public ::google::protobuf::Message {
 public:
  GMATimeRechargeReq();
  virtual ~GMATimeRechargeReq();

  GMATimeRechargeReq(const GMATimeRechargeReq& from);

  inline GMATimeRechargeReq& operator=(const GMATimeRechargeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMATimeRechargeReq& default_instance();

  void Swap(GMATimeRechargeReq* other);

  // implements Message ----------------------------------------------

  GMATimeRechargeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMATimeRechargeReq& from);
  void MergeFrom(const GMATimeRechargeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMATimeRechargeReq)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMATimeRechargeReq* default_instance_;
};
// -------------------------------------------------------------------

class GMATimeRechargeRsp : public ::google::protobuf::Message {
 public:
  GMATimeRechargeRsp();
  virtual ~GMATimeRechargeRsp();

  GMATimeRechargeRsp(const GMATimeRechargeRsp& from);

  inline GMATimeRechargeRsp& operator=(const GMATimeRechargeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMATimeRechargeRsp& default_instance();

  void Swap(GMATimeRechargeRsp* other);

  // implements Message ----------------------------------------------

  GMATimeRechargeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMATimeRechargeRsp& from);
  void MergeFrom(const GMATimeRechargeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMATimeRechargeRsp)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMATimeRechargeRsp* default_instance_;
};
// -------------------------------------------------------------------

class GMAExitReq : public ::google::protobuf::Message {
 public:
  GMAExitReq();
  virtual ~GMAExitReq();

  GMAExitReq(const GMAExitReq& from);

  inline GMAExitReq& operator=(const GMAExitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAExitReq& default_instance();

  void Swap(GMAExitReq* other);

  // implements Message ----------------------------------------------

  GMAExitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAExitReq& from);
  void MergeFrom(const GMAExitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.GMAExitReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMAExitReq* default_instance_;
};
// -------------------------------------------------------------------

class GMAResultReq : public ::google::protobuf::Message {
 public:
  GMAResultReq();
  virtual ~GMAResultReq();

  GMAResultReq(const GMAResultReq& from);

  inline GMAResultReq& operator=(const GMAResultReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAResultReq& default_instance();

  void Swap(GMAResultReq* other);

  // implements Message ----------------------------------------------

  GMAResultReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAResultReq& from);
  void MergeFrom(const GMAResultReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.GMAResultReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMAResultReq* default_instance_;
};
// -------------------------------------------------------------------

class GMAResultRsp : public ::google::protobuf::Message {
 public:
  GMAResultRsp();
  virtual ~GMAResultRsp();

  GMAResultRsp(const GMAResultRsp& from);

  inline GMAResultRsp& operator=(const GMAResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAResultRsp& default_instance();

  void Swap(GMAResultRsp* other);

  // implements Message ----------------------------------------------

  GMAResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAResultRsp& from);
  void MergeFrom(const GMAResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 itemIds = 1;
  inline int itemids_size() const;
  inline void clear_itemids();
  static const int kItemIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 itemids(int index) const;
  inline void set_itemids(int index, ::google::protobuf::uint64 value);
  inline void add_itemids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      itemids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_itemids();

  // repeated uint64 itemCounts = 2;
  inline int itemcounts_size() const;
  inline void clear_itemcounts();
  static const int kItemCountsFieldNumber = 2;
  inline ::google::protobuf::uint64 itemcounts(int index) const;
  inline void set_itemcounts(int index, ::google::protobuf::uint64 value);
  inline void add_itemcounts(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      itemcounts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_itemcounts();

  // required uint64 timeUsed = 3;
  inline bool has_timeused() const;
  inline void clear_timeused();
  static const int kTimeUsedFieldNumber = 3;
  inline ::google::protobuf::uint64 timeused() const;
  inline void set_timeused(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMAResultRsp)
 private:
  inline void set_has_timeused();
  inline void clear_has_timeused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > itemids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > itemcounts_;
  ::google::protobuf::uint64 timeused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GMAResultRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// GVBEnterReq

// required uint32 unused = 1;
inline bool GVBEnterReq::has_unused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBEnterReq::set_has_unused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBEnterReq::clear_has_unused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBEnterReq::clear_unused() {
  unused_ = 0u;
  clear_has_unused();
}
inline ::google::protobuf::uint32 GVBEnterReq::unused() const {
  return unused_;
}
inline void GVBEnterReq::set_unused(::google::protobuf::uint32 value) {
  set_has_unused();
  unused_ = value;
}

// -------------------------------------------------------------------

// GVBEnterRsp

// required uint32 Result = 1;
inline bool GVBEnterRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBEnterRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBEnterRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBEnterRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GVBEnterRsp::result() const {
  return result_;
}
inline void GVBEnterRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GVBSCrystalCollectReq

// required uint32 number = 1;
inline bool GVBSCrystalCollectReq::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBSCrystalCollectReq::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBSCrystalCollectReq::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBSCrystalCollectReq::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 GVBSCrystalCollectReq::number() const {
  return number_;
}
inline void GVBSCrystalCollectReq::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// GVBCrystallSubmitReq

// required uint64 monsterEid = 1;
inline bool GVBCrystallSubmitReq::has_monstereid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBCrystallSubmitReq::set_has_monstereid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBCrystallSubmitReq::clear_has_monstereid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBCrystallSubmitReq::clear_monstereid() {
  monstereid_ = GOOGLE_ULONGLONG(0);
  clear_has_monstereid();
}
inline ::google::protobuf::uint64 GVBCrystallSubmitReq::monstereid() const {
  return monstereid_;
}
inline void GVBCrystallSubmitReq::set_monstereid(::google::protobuf::uint64 value) {
  set_has_monstereid();
  monstereid_ = value;
}

// -------------------------------------------------------------------

// GVBExitReq

// required uint32 unused = 1;
inline bool GVBExitReq::has_unused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBExitReq::set_has_unused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBExitReq::clear_has_unused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBExitReq::clear_unused() {
  unused_ = 0u;
  clear_has_unused();
}
inline ::google::protobuf::uint32 GVBExitReq::unused() const {
  return unused_;
}
inline void GVBExitReq::set_unused(::google::protobuf::uint32 value) {
  set_has_unused();
  unused_ = value;
}

// -------------------------------------------------------------------

// GVBTransFailed

// required uint32 error = 1;
inline bool GVBTransFailed::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBTransFailed::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBTransFailed::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBTransFailed::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 GVBTransFailed::error() const {
  return error_;
}
inline void GVBTransFailed::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// GVBMonster

// required uint32 team = 1;
inline bool GVBMonster::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBMonster::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBMonster::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBMonster::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 GVBMonster::team() const {
  return team_;
}
inline void GVBMonster::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
}

// required uint64 hp = 2;
inline bool GVBMonster::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBMonster::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBMonster::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBMonster::clear_hp() {
  hp_ = GOOGLE_ULONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::uint64 GVBMonster::hp() const {
  return hp_;
}
inline void GVBMonster::set_hp(::google::protobuf::uint64 value) {
  set_has_hp();
  hp_ = value;
}

// required uint64 hpmax = 3;
inline bool GVBMonster::has_hpmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBMonster::set_has_hpmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBMonster::clear_has_hpmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBMonster::clear_hpmax() {
  hpmax_ = GOOGLE_ULONGLONG(0);
  clear_has_hpmax();
}
inline ::google::protobuf::uint64 GVBMonster::hpmax() const {
  return hpmax_;
}
inline void GVBMonster::set_hpmax(::google::protobuf::uint64 value) {
  set_has_hpmax();
  hpmax_ = value;
}

// -------------------------------------------------------------------

// GVBDataReq

// required uint32 unused = 1;
inline bool GVBDataReq::has_unused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBDataReq::set_has_unused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBDataReq::clear_has_unused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBDataReq::clear_unused() {
  unused_ = 0u;
  clear_has_unused();
}
inline ::google::protobuf::uint32 GVBDataReq::unused() const {
  return unused_;
}
inline void GVBDataReq::set_unused(::google::protobuf::uint32 value) {
  set_has_unused();
  unused_ = value;
}

// -------------------------------------------------------------------

// GVBDatasRsp

// required uint32 state = 1;
inline bool GVBDatasRsp::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBDatasRsp::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBDatasRsp::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBDatasRsp::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 GVBDatasRsp::state() const {
  return state_;
}
inline void GVBDatasRsp::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// required uint32 countdown = 2;
inline bool GVBDatasRsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBDatasRsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBDatasRsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBDatasRsp::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 GVBDatasRsp::countdown() const {
  return countdown_;
}
inline void GVBDatasRsp::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
}

// optional uint32 team1Score = 3;
inline bool GVBDatasRsp::has_team1score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBDatasRsp::set_has_team1score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBDatasRsp::clear_has_team1score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBDatasRsp::clear_team1score() {
  team1score_ = 0u;
  clear_has_team1score();
}
inline ::google::protobuf::uint32 GVBDatasRsp::team1score() const {
  return team1score_;
}
inline void GVBDatasRsp::set_team1score(::google::protobuf::uint32 value) {
  set_has_team1score();
  team1score_ = value;
}

// optional uint32 team2Score = 4;
inline bool GVBDatasRsp::has_team2score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBDatasRsp::set_has_team2score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBDatasRsp::clear_has_team2score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBDatasRsp::clear_team2score() {
  team2score_ = 0u;
  clear_has_team2score();
}
inline ::google::protobuf::uint32 GVBDatasRsp::team2score() const {
  return team2score_;
}
inline void GVBDatasRsp::set_team2score(::google::protobuf::uint32 value) {
  set_has_team2score();
  team2score_ = value;
}

// optional uint32 selfScore = 5;
inline bool GVBDatasRsp::has_selfscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBDatasRsp::set_has_selfscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBDatasRsp::clear_has_selfscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBDatasRsp::clear_selfscore() {
  selfscore_ = 0u;
  clear_has_selfscore();
}
inline ::google::protobuf::uint32 GVBDatasRsp::selfscore() const {
  return selfscore_;
}
inline void GVBDatasRsp::set_selfscore(::google::protobuf::uint32 value) {
  set_has_selfscore();
  selfscore_ = value;
}

// optional uint32 selfTeam = 6;
inline bool GVBDatasRsp::has_selfteam() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GVBDatasRsp::set_has_selfteam() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GVBDatasRsp::clear_has_selfteam() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GVBDatasRsp::clear_selfteam() {
  selfteam_ = 0u;
  clear_has_selfteam();
}
inline ::google::protobuf::uint32 GVBDatasRsp::selfteam() const {
  return selfteam_;
}
inline void GVBDatasRsp::set_selfteam(::google::protobuf::uint32 value) {
  set_has_selfteam();
  selfteam_ = value;
}

// optional uint32 crystalState = 7;
inline bool GVBDatasRsp::has_crystalstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GVBDatasRsp::set_has_crystalstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GVBDatasRsp::clear_has_crystalstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GVBDatasRsp::clear_crystalstate() {
  crystalstate_ = 0u;
  clear_has_crystalstate();
}
inline ::google::protobuf::uint32 GVBDatasRsp::crystalstate() const {
  return crystalstate_;
}
inline void GVBDatasRsp::set_crystalstate(::google::protobuf::uint32 value) {
  set_has_crystalstate();
  crystalstate_ = value;
}

// optional uint64 crystalOwner = 8;
inline bool GVBDatasRsp::has_crystalowner() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GVBDatasRsp::set_has_crystalowner() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GVBDatasRsp::clear_has_crystalowner() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GVBDatasRsp::clear_crystalowner() {
  crystalowner_ = GOOGLE_ULONGLONG(0);
  clear_has_crystalowner();
}
inline ::google::protobuf::uint64 GVBDatasRsp::crystalowner() const {
  return crystalowner_;
}
inline void GVBDatasRsp::set_crystalowner(::google::protobuf::uint64 value) {
  set_has_crystalowner();
  crystalowner_ = value;
}

// optional uint32 crystalBornCountdown = 9;
inline bool GVBDatasRsp::has_crystalborncountdown() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GVBDatasRsp::set_has_crystalborncountdown() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GVBDatasRsp::clear_has_crystalborncountdown() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GVBDatasRsp::clear_crystalborncountdown() {
  crystalborncountdown_ = 0u;
  clear_has_crystalborncountdown();
}
inline ::google::protobuf::uint32 GVBDatasRsp::crystalborncountdown() const {
  return crystalborncountdown_;
}
inline void GVBDatasRsp::set_crystalborncountdown(::google::protobuf::uint32 value) {
  set_has_crystalborncountdown();
  crystalborncountdown_ = value;
}

// optional uint32 crystalOwnerTeam = 10;
inline bool GVBDatasRsp::has_crystalownerteam() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GVBDatasRsp::set_has_crystalownerteam() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GVBDatasRsp::clear_has_crystalownerteam() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GVBDatasRsp::clear_crystalownerteam() {
  crystalownerteam_ = 0u;
  clear_has_crystalownerteam();
}
inline ::google::protobuf::uint32 GVBDatasRsp::crystalownerteam() const {
  return crystalownerteam_;
}
inline void GVBDatasRsp::set_crystalownerteam(::google::protobuf::uint32 value) {
  set_has_crystalownerteam();
  crystalownerteam_ = value;
}

// optional uint32 crystalOwnerProfession = 11;
inline bool GVBDatasRsp::has_crystalownerprofession() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GVBDatasRsp::set_has_crystalownerprofession() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GVBDatasRsp::clear_has_crystalownerprofession() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GVBDatasRsp::clear_crystalownerprofession() {
  crystalownerprofession_ = 0u;
  clear_has_crystalownerprofession();
}
inline ::google::protobuf::uint32 GVBDatasRsp::crystalownerprofession() const {
  return crystalownerprofession_;
}
inline void GVBDatasRsp::set_crystalownerprofession(::google::protobuf::uint32 value) {
  set_has_crystalownerprofession();
  crystalownerprofession_ = value;
}

// optional .proto_ff.GVBMonster m1 = 12;
inline bool GVBDatasRsp::has_m1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GVBDatasRsp::set_has_m1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GVBDatasRsp::clear_has_m1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GVBDatasRsp::clear_m1() {
  if (m1_ != NULL) m1_->::proto_ff::GVBMonster::Clear();
  clear_has_m1();
}
inline const ::proto_ff::GVBMonster& GVBDatasRsp::m1() const {
  return m1_ != NULL ? *m1_ : *default_instance_->m1_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::mutable_m1() {
  set_has_m1();
  if (m1_ == NULL) m1_ = new ::proto_ff::GVBMonster;
  return m1_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::release_m1() {
  clear_has_m1();
  ::proto_ff::GVBMonster* temp = m1_;
  m1_ = NULL;
  return temp;
}
inline void GVBDatasRsp::set_allocated_m1(::proto_ff::GVBMonster* m1) {
  delete m1_;
  m1_ = m1;
  if (m1) {
    set_has_m1();
  } else {
    clear_has_m1();
  }
}

// optional .proto_ff.GVBMonster m2 = 13;
inline bool GVBDatasRsp::has_m2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GVBDatasRsp::set_has_m2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GVBDatasRsp::clear_has_m2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GVBDatasRsp::clear_m2() {
  if (m2_ != NULL) m2_->::proto_ff::GVBMonster::Clear();
  clear_has_m2();
}
inline const ::proto_ff::GVBMonster& GVBDatasRsp::m2() const {
  return m2_ != NULL ? *m2_ : *default_instance_->m2_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::mutable_m2() {
  set_has_m2();
  if (m2_ == NULL) m2_ = new ::proto_ff::GVBMonster;
  return m2_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::release_m2() {
  clear_has_m2();
  ::proto_ff::GVBMonster* temp = m2_;
  m2_ = NULL;
  return temp;
}
inline void GVBDatasRsp::set_allocated_m2(::proto_ff::GVBMonster* m2) {
  delete m2_;
  m2_ = m2;
  if (m2) {
    set_has_m2();
  } else {
    clear_has_m2();
  }
}

// optional .proto_ff.GVBMonster m3 = 14;
inline bool GVBDatasRsp::has_m3() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GVBDatasRsp::set_has_m3() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GVBDatasRsp::clear_has_m3() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GVBDatasRsp::clear_m3() {
  if (m3_ != NULL) m3_->::proto_ff::GVBMonster::Clear();
  clear_has_m3();
}
inline const ::proto_ff::GVBMonster& GVBDatasRsp::m3() const {
  return m3_ != NULL ? *m3_ : *default_instance_->m3_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::mutable_m3() {
  set_has_m3();
  if (m3_ == NULL) m3_ = new ::proto_ff::GVBMonster;
  return m3_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::release_m3() {
  clear_has_m3();
  ::proto_ff::GVBMonster* temp = m3_;
  m3_ = NULL;
  return temp;
}
inline void GVBDatasRsp::set_allocated_m3(::proto_ff::GVBMonster* m3) {
  delete m3_;
  m3_ = m3;
  if (m3) {
    set_has_m3();
  } else {
    clear_has_m3();
  }
}

// optional uint32 killCount = 15;
inline bool GVBDatasRsp::has_killcount() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GVBDatasRsp::set_has_killcount() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GVBDatasRsp::clear_has_killcount() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GVBDatasRsp::clear_killcount() {
  killcount_ = 0u;
  clear_has_killcount();
}
inline ::google::protobuf::uint32 GVBDatasRsp::killcount() const {
  return killcount_;
}
inline void GVBDatasRsp::set_killcount(::google::protobuf::uint32 value) {
  set_has_killcount();
  killcount_ = value;
}

// optional uint32 killsCount = 16;
inline bool GVBDatasRsp::has_killscount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GVBDatasRsp::set_has_killscount() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GVBDatasRsp::clear_has_killscount() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GVBDatasRsp::clear_killscount() {
  killscount_ = 0u;
  clear_has_killscount();
}
inline ::google::protobuf::uint32 GVBDatasRsp::killscount() const {
  return killscount_;
}
inline void GVBDatasRsp::set_killscount(::google::protobuf::uint32 value) {
  set_has_killscount();
  killscount_ = value;
}

// optional uint32 breakKillsCount = 17;
inline bool GVBDatasRsp::has_breakkillscount() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GVBDatasRsp::set_has_breakkillscount() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GVBDatasRsp::clear_has_breakkillscount() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GVBDatasRsp::clear_breakkillscount() {
  breakkillscount_ = 0u;
  clear_has_breakkillscount();
}
inline ::google::protobuf::uint32 GVBDatasRsp::breakkillscount() const {
  return breakkillscount_;
}
inline void GVBDatasRsp::set_breakkillscount(::google::protobuf::uint32 value) {
  set_has_breakkillscount();
  breakkillscount_ = value;
}

// optional uint32 interceptCount = 18;
inline bool GVBDatasRsp::has_interceptcount() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GVBDatasRsp::set_has_interceptcount() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GVBDatasRsp::clear_has_interceptcount() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GVBDatasRsp::clear_interceptcount() {
  interceptcount_ = 0u;
  clear_has_interceptcount();
}
inline ::google::protobuf::uint32 GVBDatasRsp::interceptcount() const {
  return interceptcount_;
}
inline void GVBDatasRsp::set_interceptcount(::google::protobuf::uint32 value) {
  set_has_interceptcount();
  interceptcount_ = value;
}

// optional uint32 crystalCount = 19;
inline bool GVBDatasRsp::has_crystalcount() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GVBDatasRsp::set_has_crystalcount() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GVBDatasRsp::clear_has_crystalcount() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GVBDatasRsp::clear_crystalcount() {
  crystalcount_ = 0u;
  clear_has_crystalcount();
}
inline ::google::protobuf::uint32 GVBDatasRsp::crystalcount() const {
  return crystalcount_;
}
inline void GVBDatasRsp::set_crystalcount(::google::protobuf::uint32 value) {
  set_has_crystalcount();
  crystalcount_ = value;
}

// -------------------------------------------------------------------

// GVBRankReq

// required uint32 unused = 1;
inline bool GVBRankReq::has_unused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBRankReq::set_has_unused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBRankReq::clear_has_unused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBRankReq::clear_unused() {
  unused_ = 0u;
  clear_has_unused();
}
inline ::google::protobuf::uint32 GVBRankReq::unused() const {
  return unused_;
}
inline void GVBRankReq::set_unused(::google::protobuf::uint32 value) {
  set_has_unused();
  unused_ = value;
}

// -------------------------------------------------------------------

// GVBRankPlayerInfo

// required uint32 rank = 1;
inline bool GVBRankPlayerInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBRankPlayerInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBRankPlayerInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBRankPlayerInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 GVBRankPlayerInfo::rank() const {
  return rank_;
}
inline void GVBRankPlayerInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required string name = 2;
inline bool GVBRankPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBRankPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBRankPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBRankPlayerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GVBRankPlayerInfo::name() const {
  return *name_;
}
inline void GVBRankPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GVBRankPlayerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GVBRankPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GVBRankPlayerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GVBRankPlayerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GVBRankPlayerInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 score = 3;
inline bool GVBRankPlayerInfo::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBRankPlayerInfo::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBRankPlayerInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBRankPlayerInfo::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 GVBRankPlayerInfo::score() const {
  return score_;
}
inline void GVBRankPlayerInfo::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 team = 4;
inline bool GVBRankPlayerInfo::has_team() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBRankPlayerInfo::set_has_team() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBRankPlayerInfo::clear_has_team() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBRankPlayerInfo::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 GVBRankPlayerInfo::team() const {
  return team_;
}
inline void GVBRankPlayerInfo::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
}

// required uint64 cid = 5;
inline bool GVBRankPlayerInfo::has_cid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBRankPlayerInfo::set_has_cid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBRankPlayerInfo::clear_has_cid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBRankPlayerInfo::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 GVBRankPlayerInfo::cid() const {
  return cid_;
}
inline void GVBRankPlayerInfo::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// GVBRankRsp

// repeated .proto_ff.GVBRankPlayerInfo players = 1;
inline int GVBRankRsp::players_size() const {
  return players_.size();
}
inline void GVBRankRsp::clear_players() {
  players_.Clear();
}
inline const ::proto_ff::GVBRankPlayerInfo& GVBRankRsp::players(int index) const {
  return players_.Get(index);
}
inline ::proto_ff::GVBRankPlayerInfo* GVBRankRsp::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::proto_ff::GVBRankPlayerInfo* GVBRankRsp::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBRankPlayerInfo >&
GVBRankRsp::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBRankPlayerInfo >*
GVBRankRsp::mutable_players() {
  return &players_;
}

// -------------------------------------------------------------------

// GVBPlayerInfo

// required uint32 score = 1;
inline bool GVBPlayerInfo::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBPlayerInfo::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBPlayerInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBPlayerInfo::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::score() const {
  return score_;
}
inline void GVBPlayerInfo::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 killCount = 2;
inline bool GVBPlayerInfo::has_killcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBPlayerInfo::set_has_killcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBPlayerInfo::clear_has_killcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBPlayerInfo::clear_killcount() {
  killcount_ = 0u;
  clear_has_killcount();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::killcount() const {
  return killcount_;
}
inline void GVBPlayerInfo::set_killcount(::google::protobuf::uint32 value) {
  set_has_killcount();
  killcount_ = value;
}

// required uint32 dieCount = 3;
inline bool GVBPlayerInfo::has_diecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBPlayerInfo::set_has_diecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBPlayerInfo::clear_has_diecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBPlayerInfo::clear_diecount() {
  diecount_ = 0u;
  clear_has_diecount();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::diecount() const {
  return diecount_;
}
inline void GVBPlayerInfo::set_diecount(::google::protobuf::uint32 value) {
  set_has_diecount();
  diecount_ = value;
}

// required uint32 interceptCount = 4;
inline bool GVBPlayerInfo::has_interceptcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBPlayerInfo::set_has_interceptcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBPlayerInfo::clear_has_interceptcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBPlayerInfo::clear_interceptcount() {
  interceptcount_ = 0u;
  clear_has_interceptcount();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::interceptcount() const {
  return interceptcount_;
}
inline void GVBPlayerInfo::set_interceptcount(::google::protobuf::uint32 value) {
  set_has_interceptcount();
  interceptcount_ = value;
}

// required uint32 crystalCount = 5;
inline bool GVBPlayerInfo::has_crystalcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBPlayerInfo::set_has_crystalcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBPlayerInfo::clear_has_crystalcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBPlayerInfo::clear_crystalcount() {
  crystalcount_ = 0u;
  clear_has_crystalcount();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::crystalcount() const {
  return crystalcount_;
}
inline void GVBPlayerInfo::set_crystalcount(::google::protobuf::uint32 value) {
  set_has_crystalcount();
  crystalcount_ = value;
}

// required string name = 6;
inline bool GVBPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GVBPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GVBPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GVBPlayerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GVBPlayerInfo::name() const {
  return *name_;
}
inline void GVBPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GVBPlayerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GVBPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GVBPlayerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GVBPlayerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GVBPlayerInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 team = 7;
inline bool GVBPlayerInfo::has_team() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GVBPlayerInfo::set_has_team() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GVBPlayerInfo::clear_has_team() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GVBPlayerInfo::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::team() const {
  return team_;
}
inline void GVBPlayerInfo::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
}

// required uint32 killMonsterCount = 8;
inline bool GVBPlayerInfo::has_killmonstercount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GVBPlayerInfo::set_has_killmonstercount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GVBPlayerInfo::clear_has_killmonstercount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GVBPlayerInfo::clear_killmonstercount() {
  killmonstercount_ = 0u;
  clear_has_killmonstercount();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::killmonstercount() const {
  return killmonstercount_;
}
inline void GVBPlayerInfo::set_killmonstercount(::google::protobuf::uint32 value) {
  set_has_killmonstercount();
  killmonstercount_ = value;
}

// -------------------------------------------------------------------

// GVBResultBC

// required uint32 winTeam = 1;
inline bool GVBResultBC::has_winteam() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBResultBC::set_has_winteam() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBResultBC::clear_has_winteam() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBResultBC::clear_winteam() {
  winteam_ = 0u;
  clear_has_winteam();
}
inline ::google::protobuf::uint32 GVBResultBC::winteam() const {
  return winteam_;
}
inline void GVBResultBC::set_winteam(::google::protobuf::uint32 value) {
  set_has_winteam();
  winteam_ = value;
}

// repeated .proto_ff.GVBPlayerInfo players = 2;
inline int GVBResultBC::players_size() const {
  return players_.size();
}
inline void GVBResultBC::clear_players() {
  players_.Clear();
}
inline const ::proto_ff::GVBPlayerInfo& GVBResultBC::players(int index) const {
  return players_.Get(index);
}
inline ::proto_ff::GVBPlayerInfo* GVBResultBC::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::proto_ff::GVBPlayerInfo* GVBResultBC::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBPlayerInfo >&
GVBResultBC::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBPlayerInfo >*
GVBResultBC::mutable_players() {
  return &players_;
}

// -------------------------------------------------------------------

// GVBM1AttrChgBC

// required .proto_ff.GVBMonster m1 = 1;
inline bool GVBM1AttrChgBC::has_m1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBM1AttrChgBC::set_has_m1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBM1AttrChgBC::clear_has_m1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBM1AttrChgBC::clear_m1() {
  if (m1_ != NULL) m1_->::proto_ff::GVBMonster::Clear();
  clear_has_m1();
}
inline const ::proto_ff::GVBMonster& GVBM1AttrChgBC::m1() const {
  return m1_ != NULL ? *m1_ : *default_instance_->m1_;
}
inline ::proto_ff::GVBMonster* GVBM1AttrChgBC::mutable_m1() {
  set_has_m1();
  if (m1_ == NULL) m1_ = new ::proto_ff::GVBMonster;
  return m1_;
}
inline ::proto_ff::GVBMonster* GVBM1AttrChgBC::release_m1() {
  clear_has_m1();
  ::proto_ff::GVBMonster* temp = m1_;
  m1_ = NULL;
  return temp;
}
inline void GVBM1AttrChgBC::set_allocated_m1(::proto_ff::GVBMonster* m1) {
  delete m1_;
  m1_ = m1;
  if (m1) {
    set_has_m1();
  } else {
    clear_has_m1();
  }
}

// -------------------------------------------------------------------

// GVBM2AttrChgBC

// required .proto_ff.GVBMonster m2 = 1;
inline bool GVBM2AttrChgBC::has_m2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBM2AttrChgBC::set_has_m2() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBM2AttrChgBC::clear_has_m2() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBM2AttrChgBC::clear_m2() {
  if (m2_ != NULL) m2_->::proto_ff::GVBMonster::Clear();
  clear_has_m2();
}
inline const ::proto_ff::GVBMonster& GVBM2AttrChgBC::m2() const {
  return m2_ != NULL ? *m2_ : *default_instance_->m2_;
}
inline ::proto_ff::GVBMonster* GVBM2AttrChgBC::mutable_m2() {
  set_has_m2();
  if (m2_ == NULL) m2_ = new ::proto_ff::GVBMonster;
  return m2_;
}
inline ::proto_ff::GVBMonster* GVBM2AttrChgBC::release_m2() {
  clear_has_m2();
  ::proto_ff::GVBMonster* temp = m2_;
  m2_ = NULL;
  return temp;
}
inline void GVBM2AttrChgBC::set_allocated_m2(::proto_ff::GVBMonster* m2) {
  delete m2_;
  m2_ = m2;
  if (m2) {
    set_has_m2();
  } else {
    clear_has_m2();
  }
}

// -------------------------------------------------------------------

// GVBM3AttrChgBC

// required .proto_ff.GVBMonster m3 = 1;
inline bool GVBM3AttrChgBC::has_m3() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBM3AttrChgBC::set_has_m3() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBM3AttrChgBC::clear_has_m3() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBM3AttrChgBC::clear_m3() {
  if (m3_ != NULL) m3_->::proto_ff::GVBMonster::Clear();
  clear_has_m3();
}
inline const ::proto_ff::GVBMonster& GVBM3AttrChgBC::m3() const {
  return m3_ != NULL ? *m3_ : *default_instance_->m3_;
}
inline ::proto_ff::GVBMonster* GVBM3AttrChgBC::mutable_m3() {
  set_has_m3();
  if (m3_ == NULL) m3_ = new ::proto_ff::GVBMonster;
  return m3_;
}
inline ::proto_ff::GVBMonster* GVBM3AttrChgBC::release_m3() {
  clear_has_m3();
  ::proto_ff::GVBMonster* temp = m3_;
  m3_ = NULL;
  return temp;
}
inline void GVBM3AttrChgBC::set_allocated_m3(::proto_ff::GVBMonster* m3) {
  delete m3_;
  m3_ = m3;
  if (m3) {
    set_has_m3();
  } else {
    clear_has_m3();
  }
}

// -------------------------------------------------------------------

// GVBSelfInfoUpdateNT

// optional uint32 killCount = 1;
inline bool GVBSelfInfoUpdateNT::has_killcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_killcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBSelfInfoUpdateNT::clear_has_killcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBSelfInfoUpdateNT::clear_killcount() {
  killcount_ = 0u;
  clear_has_killcount();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::killcount() const {
  return killcount_;
}
inline void GVBSelfInfoUpdateNT::set_killcount(::google::protobuf::uint32 value) {
  set_has_killcount();
  killcount_ = value;
}

// optional uint32 killsCount = 2;
inline bool GVBSelfInfoUpdateNT::has_killscount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_killscount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBSelfInfoUpdateNT::clear_has_killscount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBSelfInfoUpdateNT::clear_killscount() {
  killscount_ = 0u;
  clear_has_killscount();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::killscount() const {
  return killscount_;
}
inline void GVBSelfInfoUpdateNT::set_killscount(::google::protobuf::uint32 value) {
  set_has_killscount();
  killscount_ = value;
}

// optional uint32 breakKillsCount = 3;
inline bool GVBSelfInfoUpdateNT::has_breakkillscount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_breakkillscount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBSelfInfoUpdateNT::clear_has_breakkillscount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBSelfInfoUpdateNT::clear_breakkillscount() {
  breakkillscount_ = 0u;
  clear_has_breakkillscount();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::breakkillscount() const {
  return breakkillscount_;
}
inline void GVBSelfInfoUpdateNT::set_breakkillscount(::google::protobuf::uint32 value) {
  set_has_breakkillscount();
  breakkillscount_ = value;
}

// optional uint32 interceptCount = 4;
inline bool GVBSelfInfoUpdateNT::has_interceptcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_interceptcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBSelfInfoUpdateNT::clear_has_interceptcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBSelfInfoUpdateNT::clear_interceptcount() {
  interceptcount_ = 0u;
  clear_has_interceptcount();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::interceptcount() const {
  return interceptcount_;
}
inline void GVBSelfInfoUpdateNT::set_interceptcount(::google::protobuf::uint32 value) {
  set_has_interceptcount();
  interceptcount_ = value;
}

// optional uint32 crystalCount = 5;
inline bool GVBSelfInfoUpdateNT::has_crystalcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_crystalcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBSelfInfoUpdateNT::clear_has_crystalcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBSelfInfoUpdateNT::clear_crystalcount() {
  crystalcount_ = 0u;
  clear_has_crystalcount();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::crystalcount() const {
  return crystalcount_;
}
inline void GVBSelfInfoUpdateNT::set_crystalcount(::google::protobuf::uint32 value) {
  set_has_crystalcount();
  crystalcount_ = value;
}

// optional uint32 selfScore = 6;
inline bool GVBSelfInfoUpdateNT::has_selfscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_selfscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GVBSelfInfoUpdateNT::clear_has_selfscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GVBSelfInfoUpdateNT::clear_selfscore() {
  selfscore_ = 0u;
  clear_has_selfscore();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::selfscore() const {
  return selfscore_;
}
inline void GVBSelfInfoUpdateNT::set_selfscore(::google::protobuf::uint32 value) {
  set_has_selfscore();
  selfscore_ = value;
}

// -------------------------------------------------------------------

// GVBKillPlayerInfo

// required uint32 killsCount = 1;
inline bool GVBKillPlayerInfo::has_killscount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBKillPlayerInfo::set_has_killscount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBKillPlayerInfo::clear_has_killscount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBKillPlayerInfo::clear_killscount() {
  killscount_ = 0u;
  clear_has_killscount();
}
inline ::google::protobuf::uint32 GVBKillPlayerInfo::killscount() const {
  return killscount_;
}
inline void GVBKillPlayerInfo::set_killscount(::google::protobuf::uint32 value) {
  set_has_killscount();
  killscount_ = value;
}

// required string name = 2;
inline bool GVBKillPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBKillPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBKillPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBKillPlayerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GVBKillPlayerInfo::name() const {
  return *name_;
}
inline void GVBKillPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GVBKillPlayerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GVBKillPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GVBKillPlayerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GVBKillPlayerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GVBKillPlayerInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .proto_ff.RoleFacadeProto facade = 3;
inline bool GVBKillPlayerInfo::has_facade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBKillPlayerInfo::set_has_facade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBKillPlayerInfo::clear_has_facade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBKillPlayerInfo::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& GVBKillPlayerInfo::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* GVBKillPlayerInfo::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* GVBKillPlayerInfo::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void GVBKillPlayerInfo::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// required uint32 team = 4;
inline bool GVBKillPlayerInfo::has_team() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBKillPlayerInfo::set_has_team() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBKillPlayerInfo::clear_has_team() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBKillPlayerInfo::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 GVBKillPlayerInfo::team() const {
  return team_;
}
inline void GVBKillPlayerInfo::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
}

// -------------------------------------------------------------------

// GVBKillPlayerBC

// required .proto_ff.GVBKillPlayerInfo atker = 1;
inline bool GVBKillPlayerBC::has_atker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBKillPlayerBC::set_has_atker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBKillPlayerBC::clear_has_atker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBKillPlayerBC::clear_atker() {
  if (atker_ != NULL) atker_->::proto_ff::GVBKillPlayerInfo::Clear();
  clear_has_atker();
}
inline const ::proto_ff::GVBKillPlayerInfo& GVBKillPlayerBC::atker() const {
  return atker_ != NULL ? *atker_ : *default_instance_->atker_;
}
inline ::proto_ff::GVBKillPlayerInfo* GVBKillPlayerBC::mutable_atker() {
  set_has_atker();
  if (atker_ == NULL) atker_ = new ::proto_ff::GVBKillPlayerInfo;
  return atker_;
}
inline ::proto_ff::GVBKillPlayerInfo* GVBKillPlayerBC::release_atker() {
  clear_has_atker();
  ::proto_ff::GVBKillPlayerInfo* temp = atker_;
  atker_ = NULL;
  return temp;
}
inline void GVBKillPlayerBC::set_allocated_atker(::proto_ff::GVBKillPlayerInfo* atker) {
  delete atker_;
  atker_ = atker;
  if (atker) {
    set_has_atker();
  } else {
    clear_has_atker();
  }
}

// required .proto_ff.GVBKillPlayerInfo behit = 2;
inline bool GVBKillPlayerBC::has_behit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBKillPlayerBC::set_has_behit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBKillPlayerBC::clear_has_behit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBKillPlayerBC::clear_behit() {
  if (behit_ != NULL) behit_->::proto_ff::GVBKillPlayerInfo::Clear();
  clear_has_behit();
}
inline const ::proto_ff::GVBKillPlayerInfo& GVBKillPlayerBC::behit() const {
  return behit_ != NULL ? *behit_ : *default_instance_->behit_;
}
inline ::proto_ff::GVBKillPlayerInfo* GVBKillPlayerBC::mutable_behit() {
  set_has_behit();
  if (behit_ == NULL) behit_ = new ::proto_ff::GVBKillPlayerInfo;
  return behit_;
}
inline ::proto_ff::GVBKillPlayerInfo* GVBKillPlayerBC::release_behit() {
  clear_has_behit();
  ::proto_ff::GVBKillPlayerInfo* temp = behit_;
  behit_ = NULL;
  return temp;
}
inline void GVBKillPlayerBC::set_allocated_behit(::proto_ff::GVBKillPlayerInfo* behit) {
  delete behit_;
  behit_ = behit;
  if (behit) {
    set_has_behit();
  } else {
    clear_has_behit();
  }
}

// -------------------------------------------------------------------

// GVBResPointChg

// required uint32 team1Score = 1;
inline bool GVBResPointChg::has_team1score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBResPointChg::set_has_team1score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBResPointChg::clear_has_team1score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBResPointChg::clear_team1score() {
  team1score_ = 0u;
  clear_has_team1score();
}
inline ::google::protobuf::uint32 GVBResPointChg::team1score() const {
  return team1score_;
}
inline void GVBResPointChg::set_team1score(::google::protobuf::uint32 value) {
  set_has_team1score();
  team1score_ = value;
}

// required uint32 team2Score = 2;
inline bool GVBResPointChg::has_team2score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBResPointChg::set_has_team2score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBResPointChg::clear_has_team2score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBResPointChg::clear_team2score() {
  team2score_ = 0u;
  clear_has_team2score();
}
inline ::google::protobuf::uint32 GVBResPointChg::team2score() const {
  return team2score_;
}
inline void GVBResPointChg::set_team2score(::google::protobuf::uint32 value) {
  set_has_team2score();
  team2score_ = value;
}

// -------------------------------------------------------------------

// GVBCrystalStateBC

// required uint32 crystalState = 1;
inline bool GVBCrystalStateBC::has_crystalstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBCrystalStateBC::set_has_crystalstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBCrystalStateBC::clear_has_crystalstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBCrystalStateBC::clear_crystalstate() {
  crystalstate_ = 0u;
  clear_has_crystalstate();
}
inline ::google::protobuf::uint32 GVBCrystalStateBC::crystalstate() const {
  return crystalstate_;
}
inline void GVBCrystalStateBC::set_crystalstate(::google::protobuf::uint32 value) {
  set_has_crystalstate();
  crystalstate_ = value;
}

// required uint32 crystalBornCountdown = 2;
inline bool GVBCrystalStateBC::has_crystalborncountdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBCrystalStateBC::set_has_crystalborncountdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBCrystalStateBC::clear_has_crystalborncountdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBCrystalStateBC::clear_crystalborncountdown() {
  crystalborncountdown_ = 0u;
  clear_has_crystalborncountdown();
}
inline ::google::protobuf::uint32 GVBCrystalStateBC::crystalborncountdown() const {
  return crystalborncountdown_;
}
inline void GVBCrystalStateBC::set_crystalborncountdown(::google::protobuf::uint32 value) {
  set_has_crystalborncountdown();
  crystalborncountdown_ = value;
}

// optional uint64 crystalOwner = 3;
inline bool GVBCrystalStateBC::has_crystalowner() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBCrystalStateBC::set_has_crystalowner() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBCrystalStateBC::clear_has_crystalowner() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBCrystalStateBC::clear_crystalowner() {
  crystalowner_ = GOOGLE_ULONGLONG(0);
  clear_has_crystalowner();
}
inline ::google::protobuf::uint64 GVBCrystalStateBC::crystalowner() const {
  return crystalowner_;
}
inline void GVBCrystalStateBC::set_crystalowner(::google::protobuf::uint64 value) {
  set_has_crystalowner();
  crystalowner_ = value;
}

// optional uint32 crystalOwnerTeam = 4;
inline bool GVBCrystalStateBC::has_crystalownerteam() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBCrystalStateBC::set_has_crystalownerteam() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBCrystalStateBC::clear_has_crystalownerteam() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBCrystalStateBC::clear_crystalownerteam() {
  crystalownerteam_ = 0u;
  clear_has_crystalownerteam();
}
inline ::google::protobuf::uint32 GVBCrystalStateBC::crystalownerteam() const {
  return crystalownerteam_;
}
inline void GVBCrystalStateBC::set_crystalownerteam(::google::protobuf::uint32 value) {
  set_has_crystalownerteam();
  crystalownerteam_ = value;
}

// optional uint32 crystalOwnerProfession = 5;
inline bool GVBCrystalStateBC::has_crystalownerprofession() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBCrystalStateBC::set_has_crystalownerprofession() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBCrystalStateBC::clear_has_crystalownerprofession() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBCrystalStateBC::clear_crystalownerprofession() {
  crystalownerprofession_ = 0u;
  clear_has_crystalownerprofession();
}
inline ::google::protobuf::uint32 GVBCrystalStateBC::crystalownerprofession() const {
  return crystalownerprofession_;
}
inline void GVBCrystalStateBC::set_crystalownerprofession(::google::protobuf::uint32 value) {
  set_has_crystalownerprofession();
  crystalownerprofession_ = value;
}

// -------------------------------------------------------------------

// GVBCrystalCollectReq

// required uint32 type = 1;
inline bool GVBCrystalCollectReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBCrystalCollectReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBCrystalCollectReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBCrystalCollectReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GVBCrystalCollectReq::type() const {
  return type_;
}
inline void GVBCrystalCollectReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GVBCrystalCollectRsp

// required uint32 type = 1;
inline bool GVBCrystalCollectRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBCrystalCollectRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBCrystalCollectRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBCrystalCollectRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GVBCrystalCollectRsp::type() const {
  return type_;
}
inline void GVBCrystalCollectRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GVBDailyScoreDataReq

// -------------------------------------------------------------------

// GVBDailyScoreDataRsp

// repeated uint32 rewardsState = 1;
inline int GVBDailyScoreDataRsp::rewardsstate_size() const {
  return rewardsstate_.size();
}
inline void GVBDailyScoreDataRsp::clear_rewardsstate() {
  rewardsstate_.Clear();
}
inline ::google::protobuf::uint32 GVBDailyScoreDataRsp::rewardsstate(int index) const {
  return rewardsstate_.Get(index);
}
inline void GVBDailyScoreDataRsp::set_rewardsstate(int index, ::google::protobuf::uint32 value) {
  rewardsstate_.Set(index, value);
}
inline void GVBDailyScoreDataRsp::add_rewardsstate(::google::protobuf::uint32 value) {
  rewardsstate_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GVBDailyScoreDataRsp::rewardsstate() const {
  return rewardsstate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GVBDailyScoreDataRsp::mutable_rewardsstate() {
  return &rewardsstate_;
}

// required uint32 dailyScore = 2;
inline bool GVBDailyScoreDataRsp::has_dailyscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBDailyScoreDataRsp::set_has_dailyscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBDailyScoreDataRsp::clear_has_dailyscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBDailyScoreDataRsp::clear_dailyscore() {
  dailyscore_ = 0u;
  clear_has_dailyscore();
}
inline ::google::protobuf::uint32 GVBDailyScoreDataRsp::dailyscore() const {
  return dailyscore_;
}
inline void GVBDailyScoreDataRsp::set_dailyscore(::google::protobuf::uint32 value) {
  set_has_dailyscore();
  dailyscore_ = value;
}

// -------------------------------------------------------------------

// GVBDailyScoreRewardRcvReq

// required uint32 idx = 1;
inline bool GVBDailyScoreRewardRcvReq::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBDailyScoreRewardRcvReq::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBDailyScoreRewardRcvReq::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBDailyScoreRewardRcvReq::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 GVBDailyScoreRewardRcvReq::idx() const {
  return idx_;
}
inline void GVBDailyScoreRewardRcvReq::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// -------------------------------------------------------------------

// GVBDailyScoreRewardRcvRsp

// required uint32 error = 1;
inline bool GVBDailyScoreRewardRcvRsp::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBDailyScoreRewardRcvRsp::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBDailyScoreRewardRcvRsp::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBDailyScoreRewardRcvRsp::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 GVBDailyScoreRewardRcvRsp::error() const {
  return error_;
}
inline void GVBDailyScoreRewardRcvRsp::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// optional uint32 idx = 2;
inline bool GVBDailyScoreRewardRcvRsp::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBDailyScoreRewardRcvRsp::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBDailyScoreRewardRcvRsp::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBDailyScoreRewardRcvRsp::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 GVBDailyScoreRewardRcvRsp::idx() const {
  return idx_;
}
inline void GVBDailyScoreRewardRcvRsp::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// -------------------------------------------------------------------

// GVBRoomReq

// required uint64 cid = 1;
inline bool GVBRoomReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBRoomReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBRoomReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBRoomReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 GVBRoomReq::cid() const {
  return cid_;
}
inline void GVBRoomReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required uint64 fromLogicServerId = 2;
inline bool GVBRoomReq::has_fromlogicserverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBRoomReq::set_has_fromlogicserverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBRoomReq::clear_has_fromlogicserverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBRoomReq::clear_fromlogicserverid() {
  fromlogicserverid_ = GOOGLE_ULONGLONG(0);
  clear_has_fromlogicserverid();
}
inline ::google::protobuf::uint64 GVBRoomReq::fromlogicserverid() const {
  return fromlogicserverid_;
}
inline void GVBRoomReq::set_fromlogicserverid(::google::protobuf::uint64 value) {
  set_has_fromlogicserverid();
  fromlogicserverid_ = value;
}

// required uint64 fromZone = 3;
inline bool GVBRoomReq::has_fromzone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBRoomReq::set_has_fromzone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBRoomReq::clear_has_fromzone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBRoomReq::clear_fromzone() {
  fromzone_ = GOOGLE_ULONGLONG(0);
  clear_has_fromzone();
}
inline ::google::protobuf::uint64 GVBRoomReq::fromzone() const {
  return fromzone_;
}
inline void GVBRoomReq::set_fromzone(::google::protobuf::uint64 value) {
  set_has_fromzone();
  fromzone_ = value;
}

// required uint32 type = 4;
inline bool GVBRoomReq::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBRoomReq::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBRoomReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBRoomReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GVBRoomReq::type() const {
  return type_;
}
inline void GVBRoomReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required bool enterPrev = 5;
inline bool GVBRoomReq::has_enterprev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBRoomReq::set_has_enterprev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBRoomReq::clear_has_enterprev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBRoomReq::clear_enterprev() {
  enterprev_ = false;
  clear_has_enterprev();
}
inline bool GVBRoomReq::enterprev() const {
  return enterprev_;
}
inline void GVBRoomReq::set_enterprev(bool value) {
  set_has_enterprev();
  enterprev_ = value;
}

// optional uint32 playersMax = 6;
inline bool GVBRoomReq::has_playersmax() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GVBRoomReq::set_has_playersmax() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GVBRoomReq::clear_has_playersmax() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GVBRoomReq::clear_playersmax() {
  playersmax_ = 0u;
  clear_has_playersmax();
}
inline ::google::protobuf::uint32 GVBRoomReq::playersmax() const {
  return playersmax_;
}
inline void GVBRoomReq::set_playersmax(::google::protobuf::uint32 value) {
  set_has_playersmax();
  playersmax_ = value;
}

// optional uint32 lifeTime = 7;
inline bool GVBRoomReq::has_lifetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GVBRoomReq::set_has_lifetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GVBRoomReq::clear_has_lifetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GVBRoomReq::clear_lifetime() {
  lifetime_ = 0u;
  clear_has_lifetime();
}
inline ::google::protobuf::uint32 GVBRoomReq::lifetime() const {
  return lifetime_;
}
inline void GVBRoomReq::set_lifetime(::google::protobuf::uint32 value) {
  set_has_lifetime();
  lifetime_ = value;
}

// required uint32 mapId = 8;
inline bool GVBRoomReq::has_mapid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GVBRoomReq::set_has_mapid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GVBRoomReq::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GVBRoomReq::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 GVBRoomReq::mapid() const {
  return mapid_;
}
inline void GVBRoomReq::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required uint64 session = 9;
inline bool GVBRoomReq::has_session() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GVBRoomReq::set_has_session() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GVBRoomReq::clear_has_session() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GVBRoomReq::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
  clear_has_session();
}
inline ::google::protobuf::uint64 GVBRoomReq::session() const {
  return session_;
}
inline void GVBRoomReq::set_session(::google::protobuf::uint64 value) {
  set_has_session();
  session_ = value;
}

// required uint32 actId = 10;
inline bool GVBRoomReq::has_actid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GVBRoomReq::set_has_actid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GVBRoomReq::clear_has_actid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GVBRoomReq::clear_actid() {
  actid_ = 0u;
  clear_has_actid();
}
inline ::google::protobuf::uint32 GVBRoomReq::actid() const {
  return actid_;
}
inline void GVBRoomReq::set_actid(::google::protobuf::uint32 value) {
  set_has_actid();
  actid_ = value;
}

// -------------------------------------------------------------------

// GVBRoomRsp

// required uint64 cid = 1;
inline bool GVBRoomRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBRoomRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBRoomRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBRoomRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 GVBRoomRsp::cid() const {
  return cid_;
}
inline void GVBRoomRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 roomId = 2;
inline bool GVBRoomRsp::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBRoomRsp::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBRoomRsp::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBRoomRsp::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 GVBRoomRsp::roomid() const {
  return roomid_;
}
inline void GVBRoomRsp::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
}

// required uint32 mapId = 3;
inline bool GVBRoomRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBRoomRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBRoomRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBRoomRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 GVBRoomRsp::mapid() const {
  return mapid_;
}
inline void GVBRoomRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required uint32 type = 4;
inline bool GVBRoomRsp::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBRoomRsp::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBRoomRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBRoomRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GVBRoomRsp::type() const {
  return type_;
}
inline void GVBRoomRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint64 session = 5;
inline bool GVBRoomRsp::has_session() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBRoomRsp::set_has_session() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBRoomRsp::clear_has_session() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBRoomRsp::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
  clear_has_session();
}
inline ::google::protobuf::uint64 GVBRoomRsp::session() const {
  return session_;
}
inline void GVBRoomRsp::set_session(::google::protobuf::uint64 value) {
  set_has_session();
  session_ = value;
}

// optional uint32 error = 6;
inline bool GVBRoomRsp::has_error() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GVBRoomRsp::set_has_error() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GVBRoomRsp::clear_has_error() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GVBRoomRsp::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 GVBRoomRsp::error() const {
  return error_;
}
inline void GVBRoomRsp::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// GVBRoomCloseReq

// required uint32 type = 1;
inline bool GVBRoomCloseReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBRoomCloseReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBRoomCloseReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBRoomCloseReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GVBRoomCloseReq::type() const {
  return type_;
}
inline void GVBRoomCloseReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint64 roomId = 2;
inline bool GVBRoomCloseReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBRoomCloseReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBRoomCloseReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBRoomCloseReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 GVBRoomCloseReq::roomid() const {
  return roomid_;
}
inline void GVBRoomCloseReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
}

// required uint32 option = 3;
inline bool GVBRoomCloseReq::has_option() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBRoomCloseReq::set_has_option() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBRoomCloseReq::clear_has_option() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBRoomCloseReq::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 GVBRoomCloseReq::option() const {
  return option_;
}
inline void GVBRoomCloseReq::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
}

// -------------------------------------------------------------------

// GVBCrystalOwnerPosReq

// -------------------------------------------------------------------

// GVBCrystalOwnerPosRsp

// required .proto_ff.Vector3PB pos = 1;
inline bool GVBCrystalOwnerPosRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBCrystalOwnerPosRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBCrystalOwnerPosRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBCrystalOwnerPosRsp::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& GVBCrystalOwnerPosRsp::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* GVBCrystalOwnerPosRsp::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* GVBCrystalOwnerPosRsp::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void GVBCrystalOwnerPosRsp::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// -------------------------------------------------------------------

// WPPEnterReq

// -------------------------------------------------------------------

// WPPExitReq

// -------------------------------------------------------------------

// WPPEnterRsp

// required uint32 collectTimes = 1;
inline bool WPPEnterRsp::has_collecttimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPEnterRsp::set_has_collecttimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPEnterRsp::clear_has_collecttimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPEnterRsp::clear_collecttimes() {
  collecttimes_ = 0u;
  clear_has_collecttimes();
}
inline ::google::protobuf::uint32 WPPEnterRsp::collecttimes() const {
  return collecttimes_;
}
inline void WPPEnterRsp::set_collecttimes(::google::protobuf::uint32 value) {
  set_has_collecttimes();
  collecttimes_ = value;
}

// required uint64 expTotal = 2;
inline bool WPPEnterRsp::has_exptotal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WPPEnterRsp::set_has_exptotal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WPPEnterRsp::clear_has_exptotal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WPPEnterRsp::clear_exptotal() {
  exptotal_ = GOOGLE_ULONGLONG(0);
  clear_has_exptotal();
}
inline ::google::protobuf::uint64 WPPEnterRsp::exptotal() const {
  return exptotal_;
}
inline void WPPEnterRsp::set_exptotal(::google::protobuf::uint64 value) {
  set_has_exptotal();
  exptotal_ = value;
}

// required uint32 splashTimes = 3;
inline bool WPPEnterRsp::has_splashtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WPPEnterRsp::set_has_splashtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WPPEnterRsp::clear_has_splashtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WPPEnterRsp::clear_splashtimes() {
  splashtimes_ = 0u;
  clear_has_splashtimes();
}
inline ::google::protobuf::uint32 WPPEnterRsp::splashtimes() const {
  return splashtimes_;
}
inline void WPPEnterRsp::set_splashtimes(::google::protobuf::uint32 value) {
  set_has_splashtimes();
  splashtimes_ = value;
}

// required uint32 massageTimes = 4;
inline bool WPPEnterRsp::has_massagetimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WPPEnterRsp::set_has_massagetimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WPPEnterRsp::clear_has_massagetimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WPPEnterRsp::clear_massagetimes() {
  massagetimes_ = 0u;
  clear_has_massagetimes();
}
inline ::google::protobuf::uint32 WPPEnterRsp::massagetimes() const {
  return massagetimes_;
}
inline void WPPEnterRsp::set_massagetimes(::google::protobuf::uint32 value) {
  set_has_massagetimes();
  massagetimes_ = value;
}

// required int64 collectCD = 5;
inline bool WPPEnterRsp::has_collectcd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WPPEnterRsp::set_has_collectcd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WPPEnterRsp::clear_has_collectcd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WPPEnterRsp::clear_collectcd() {
  collectcd_ = GOOGLE_LONGLONG(0);
  clear_has_collectcd();
}
inline ::google::protobuf::int64 WPPEnterRsp::collectcd() const {
  return collectcd_;
}
inline void WPPEnterRsp::set_collectcd(::google::protobuf::int64 value) {
  set_has_collectcd();
  collectcd_ = value;
}

// required uint32 wpp_state = 6;
inline bool WPPEnterRsp::has_wpp_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WPPEnterRsp::set_has_wpp_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WPPEnterRsp::clear_has_wpp_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WPPEnterRsp::clear_wpp_state() {
  wpp_state_ = 0u;
  clear_has_wpp_state();
}
inline ::google::protobuf::uint32 WPPEnterRsp::wpp_state() const {
  return wpp_state_;
}
inline void WPPEnterRsp::set_wpp_state(::google::protobuf::uint32 value) {
  set_has_wpp_state();
  wpp_state_ = value;
}

// -------------------------------------------------------------------

// WPPPairPracticeReq

// required uint64 target = 1;
inline bool WPPPairPracticeReq::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPPairPracticeReq::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPPairPracticeReq::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPPairPracticeReq::clear_target() {
  target_ = GOOGLE_ULONGLONG(0);
  clear_has_target();
}
inline ::google::protobuf::uint64 WPPPairPracticeReq::target() const {
  return target_;
}
inline void WPPPairPracticeReq::set_target(::google::protobuf::uint64 value) {
  set_has_target();
  target_ = value;
}

// required .proto_ff.Vector3PB selfPos = 2;
inline bool WPPPairPracticeReq::has_selfpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WPPPairPracticeReq::set_has_selfpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WPPPairPracticeReq::clear_has_selfpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WPPPairPracticeReq::clear_selfpos() {
  if (selfpos_ != NULL) selfpos_->::proto_ff::Vector3PB::Clear();
  clear_has_selfpos();
}
inline const ::proto_ff::Vector3PB& WPPPairPracticeReq::selfpos() const {
  return selfpos_ != NULL ? *selfpos_ : *default_instance_->selfpos_;
}
inline ::proto_ff::Vector3PB* WPPPairPracticeReq::mutable_selfpos() {
  set_has_selfpos();
  if (selfpos_ == NULL) selfpos_ = new ::proto_ff::Vector3PB;
  return selfpos_;
}
inline ::proto_ff::Vector3PB* WPPPairPracticeReq::release_selfpos() {
  clear_has_selfpos();
  ::proto_ff::Vector3PB* temp = selfpos_;
  selfpos_ = NULL;
  return temp;
}
inline void WPPPairPracticeReq::set_allocated_selfpos(::proto_ff::Vector3PB* selfpos) {
  delete selfpos_;
  selfpos_ = selfpos;
  if (selfpos) {
    set_has_selfpos();
  } else {
    clear_has_selfpos();
  }
}

// required .proto_ff.Vector3PB selfDir = 3;
inline bool WPPPairPracticeReq::has_selfdir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WPPPairPracticeReq::set_has_selfdir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WPPPairPracticeReq::clear_has_selfdir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WPPPairPracticeReq::clear_selfdir() {
  if (selfdir_ != NULL) selfdir_->::proto_ff::Vector3PB::Clear();
  clear_has_selfdir();
}
inline const ::proto_ff::Vector3PB& WPPPairPracticeReq::selfdir() const {
  return selfdir_ != NULL ? *selfdir_ : *default_instance_->selfdir_;
}
inline ::proto_ff::Vector3PB* WPPPairPracticeReq::mutable_selfdir() {
  set_has_selfdir();
  if (selfdir_ == NULL) selfdir_ = new ::proto_ff::Vector3PB;
  return selfdir_;
}
inline ::proto_ff::Vector3PB* WPPPairPracticeReq::release_selfdir() {
  clear_has_selfdir();
  ::proto_ff::Vector3PB* temp = selfdir_;
  selfdir_ = NULL;
  return temp;
}
inline void WPPPairPracticeReq::set_allocated_selfdir(::proto_ff::Vector3PB* selfdir) {
  delete selfdir_;
  selfdir_ = selfdir;
  if (selfdir) {
    set_has_selfdir();
  } else {
    clear_has_selfdir();
  }
}

// required .proto_ff.Vector3PB targetPos = 4;
inline bool WPPPairPracticeReq::has_targetpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WPPPairPracticeReq::set_has_targetpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WPPPairPracticeReq::clear_has_targetpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WPPPairPracticeReq::clear_targetpos() {
  if (targetpos_ != NULL) targetpos_->::proto_ff::Vector3PB::Clear();
  clear_has_targetpos();
}
inline const ::proto_ff::Vector3PB& WPPPairPracticeReq::targetpos() const {
  return targetpos_ != NULL ? *targetpos_ : *default_instance_->targetpos_;
}
inline ::proto_ff::Vector3PB* WPPPairPracticeReq::mutable_targetpos() {
  set_has_targetpos();
  if (targetpos_ == NULL) targetpos_ = new ::proto_ff::Vector3PB;
  return targetpos_;
}
inline ::proto_ff::Vector3PB* WPPPairPracticeReq::release_targetpos() {
  clear_has_targetpos();
  ::proto_ff::Vector3PB* temp = targetpos_;
  targetpos_ = NULL;
  return temp;
}
inline void WPPPairPracticeReq::set_allocated_targetpos(::proto_ff::Vector3PB* targetpos) {
  delete targetpos_;
  targetpos_ = targetpos;
  if (targetpos) {
    set_has_targetpos();
  } else {
    clear_has_targetpos();
  }
}

// -------------------------------------------------------------------

// WPPPairPracticeRsp

// required uint32 error = 1;
inline bool WPPPairPracticeRsp::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPPairPracticeRsp::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPPairPracticeRsp::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPPairPracticeRsp::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 WPPPairPracticeRsp::error() const {
  return error_;
}
inline void WPPPairPracticeRsp::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// WPPMassageReq

// required uint64 target = 1;
inline bool WPPMassageReq::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPMassageReq::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPMassageReq::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPMassageReq::clear_target() {
  target_ = GOOGLE_ULONGLONG(0);
  clear_has_target();
}
inline ::google::protobuf::uint64 WPPMassageReq::target() const {
  return target_;
}
inline void WPPMassageReq::set_target(::google::protobuf::uint64 value) {
  set_has_target();
  target_ = value;
}

// required .proto_ff.Vector3PB selfPos = 2;
inline bool WPPMassageReq::has_selfpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WPPMassageReq::set_has_selfpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WPPMassageReq::clear_has_selfpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WPPMassageReq::clear_selfpos() {
  if (selfpos_ != NULL) selfpos_->::proto_ff::Vector3PB::Clear();
  clear_has_selfpos();
}
inline const ::proto_ff::Vector3PB& WPPMassageReq::selfpos() const {
  return selfpos_ != NULL ? *selfpos_ : *default_instance_->selfpos_;
}
inline ::proto_ff::Vector3PB* WPPMassageReq::mutable_selfpos() {
  set_has_selfpos();
  if (selfpos_ == NULL) selfpos_ = new ::proto_ff::Vector3PB;
  return selfpos_;
}
inline ::proto_ff::Vector3PB* WPPMassageReq::release_selfpos() {
  clear_has_selfpos();
  ::proto_ff::Vector3PB* temp = selfpos_;
  selfpos_ = NULL;
  return temp;
}
inline void WPPMassageReq::set_allocated_selfpos(::proto_ff::Vector3PB* selfpos) {
  delete selfpos_;
  selfpos_ = selfpos;
  if (selfpos) {
    set_has_selfpos();
  } else {
    clear_has_selfpos();
  }
}

// required .proto_ff.Vector3PB selfDir = 3;
inline bool WPPMassageReq::has_selfdir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WPPMassageReq::set_has_selfdir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WPPMassageReq::clear_has_selfdir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WPPMassageReq::clear_selfdir() {
  if (selfdir_ != NULL) selfdir_->::proto_ff::Vector3PB::Clear();
  clear_has_selfdir();
}
inline const ::proto_ff::Vector3PB& WPPMassageReq::selfdir() const {
  return selfdir_ != NULL ? *selfdir_ : *default_instance_->selfdir_;
}
inline ::proto_ff::Vector3PB* WPPMassageReq::mutable_selfdir() {
  set_has_selfdir();
  if (selfdir_ == NULL) selfdir_ = new ::proto_ff::Vector3PB;
  return selfdir_;
}
inline ::proto_ff::Vector3PB* WPPMassageReq::release_selfdir() {
  clear_has_selfdir();
  ::proto_ff::Vector3PB* temp = selfdir_;
  selfdir_ = NULL;
  return temp;
}
inline void WPPMassageReq::set_allocated_selfdir(::proto_ff::Vector3PB* selfdir) {
  delete selfdir_;
  selfdir_ = selfdir;
  if (selfdir) {
    set_has_selfdir();
  } else {
    clear_has_selfdir();
  }
}

// required .proto_ff.Vector3PB targetPos = 4;
inline bool WPPMassageReq::has_targetpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WPPMassageReq::set_has_targetpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WPPMassageReq::clear_has_targetpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WPPMassageReq::clear_targetpos() {
  if (targetpos_ != NULL) targetpos_->::proto_ff::Vector3PB::Clear();
  clear_has_targetpos();
}
inline const ::proto_ff::Vector3PB& WPPMassageReq::targetpos() const {
  return targetpos_ != NULL ? *targetpos_ : *default_instance_->targetpos_;
}
inline ::proto_ff::Vector3PB* WPPMassageReq::mutable_targetpos() {
  set_has_targetpos();
  if (targetpos_ == NULL) targetpos_ = new ::proto_ff::Vector3PB;
  return targetpos_;
}
inline ::proto_ff::Vector3PB* WPPMassageReq::release_targetpos() {
  clear_has_targetpos();
  ::proto_ff::Vector3PB* temp = targetpos_;
  targetpos_ = NULL;
  return temp;
}
inline void WPPMassageReq::set_allocated_targetpos(::proto_ff::Vector3PB* targetpos) {
  delete targetpos_;
  targetpos_ = targetpos;
  if (targetpos) {
    set_has_targetpos();
  } else {
    clear_has_targetpos();
  }
}

// -------------------------------------------------------------------

// WPPMassageRsp

// required uint32 error = 1;
inline bool WPPMassageRsp::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPMassageRsp::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPMassageRsp::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPMassageRsp::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 WPPMassageRsp::error() const {
  return error_;
}
inline void WPPMassageRsp::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// optional uint32 massageTimes = 2;
inline bool WPPMassageRsp::has_massagetimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WPPMassageRsp::set_has_massagetimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WPPMassageRsp::clear_has_massagetimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WPPMassageRsp::clear_massagetimes() {
  massagetimes_ = 0u;
  clear_has_massagetimes();
}
inline ::google::protobuf::uint32 WPPMassageRsp::massagetimes() const {
  return massagetimes_;
}
inline void WPPMassageRsp::set_massagetimes(::google::protobuf::uint32 value) {
  set_has_massagetimes();
  massagetimes_ = value;
}

// -------------------------------------------------------------------

// WPPSplashReq

// required .proto_ff.SkillUseReq skillReq = 1;
inline bool WPPSplashReq::has_skillreq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPSplashReq::set_has_skillreq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPSplashReq::clear_has_skillreq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPSplashReq::clear_skillreq() {
  if (skillreq_ != NULL) skillreq_->::proto_ff::SkillUseReq::Clear();
  clear_has_skillreq();
}
inline const ::proto_ff::SkillUseReq& WPPSplashReq::skillreq() const {
  return skillreq_ != NULL ? *skillreq_ : *default_instance_->skillreq_;
}
inline ::proto_ff::SkillUseReq* WPPSplashReq::mutable_skillreq() {
  set_has_skillreq();
  if (skillreq_ == NULL) skillreq_ = new ::proto_ff::SkillUseReq;
  return skillreq_;
}
inline ::proto_ff::SkillUseReq* WPPSplashReq::release_skillreq() {
  clear_has_skillreq();
  ::proto_ff::SkillUseReq* temp = skillreq_;
  skillreq_ = NULL;
  return temp;
}
inline void WPPSplashReq::set_allocated_skillreq(::proto_ff::SkillUseReq* skillreq) {
  delete skillreq_;
  skillreq_ = skillreq;
  if (skillreq) {
    set_has_skillreq();
  } else {
    clear_has_skillreq();
  }
}

// -------------------------------------------------------------------

// WPPSplashRsp

// required uint32 error = 1;
inline bool WPPSplashRsp::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPSplashRsp::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPSplashRsp::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPSplashRsp::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 WPPSplashRsp::error() const {
  return error_;
}
inline void WPPSplashRsp::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// required uint32 splashTimes = 2;
inline bool WPPSplashRsp::has_splashtimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WPPSplashRsp::set_has_splashtimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WPPSplashRsp::clear_has_splashtimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WPPSplashRsp::clear_splashtimes() {
  splashtimes_ = 0u;
  clear_has_splashtimes();
}
inline ::google::protobuf::uint32 WPPSplashRsp::splashtimes() const {
  return splashtimes_;
}
inline void WPPSplashRsp::set_splashtimes(::google::protobuf::uint32 value) {
  set_has_splashtimes();
  splashtimes_ = value;
}

// -------------------------------------------------------------------

// WPPCollectRsp

// required uint32 error = 1;
inline bool WPPCollectRsp::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPCollectRsp::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPCollectRsp::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPCollectRsp::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 WPPCollectRsp::error() const {
  return error_;
}
inline void WPPCollectRsp::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// optional uint32 collectTimes = 2;
inline bool WPPCollectRsp::has_collecttimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WPPCollectRsp::set_has_collecttimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WPPCollectRsp::clear_has_collecttimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WPPCollectRsp::clear_collecttimes() {
  collecttimes_ = 0u;
  clear_has_collecttimes();
}
inline ::google::protobuf::uint32 WPPCollectRsp::collecttimes() const {
  return collecttimes_;
}
inline void WPPCollectRsp::set_collecttimes(::google::protobuf::uint32 value) {
  set_has_collecttimes();
  collecttimes_ = value;
}

// -------------------------------------------------------------------

// WPPExpAddNt

// required uint64 expTotal = 1;
inline bool WPPExpAddNt::has_exptotal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPExpAddNt::set_has_exptotal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPExpAddNt::clear_has_exptotal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPExpAddNt::clear_exptotal() {
  exptotal_ = GOOGLE_ULONGLONG(0);
  clear_has_exptotal();
}
inline ::google::protobuf::uint64 WPPExpAddNt::exptotal() const {
  return exptotal_;
}
inline void WPPExpAddNt::set_exptotal(::google::protobuf::uint64 value) {
  set_has_exptotal();
  exptotal_ = value;
}

// required uint64 expAdd = 2;
inline bool WPPExpAddNt::has_expadd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WPPExpAddNt::set_has_expadd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WPPExpAddNt::clear_has_expadd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WPPExpAddNt::clear_expadd() {
  expadd_ = GOOGLE_ULONGLONG(0);
  clear_has_expadd();
}
inline ::google::protobuf::uint64 WPPExpAddNt::expadd() const {
  return expadd_;
}
inline void WPPExpAddNt::set_expadd(::google::protobuf::uint64 value) {
  set_has_expadd();
  expadd_ = value;
}

// -------------------------------------------------------------------

// WPPCollectCDNt

// required uint64 cd = 1;
inline bool WPPCollectCDNt::has_cd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPCollectCDNt::set_has_cd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPCollectCDNt::clear_has_cd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPCollectCDNt::clear_cd() {
  cd_ = GOOGLE_ULONGLONG(0);
  clear_has_cd();
}
inline ::google::protobuf::uint64 WPPCollectCDNt::cd() const {
  return cd_;
}
inline void WPPCollectCDNt::set_cd(::google::protobuf::uint64 value) {
  set_has_cd();
  cd_ = value;
}

// -------------------------------------------------------------------

// WPPActionNt

// required uint32 type = 1;
inline bool WPPActionNt::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPActionNt::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPActionNt::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPActionNt::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 WPPActionNt::type() const {
  return type_;
}
inline void WPPActionNt::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint64 cid = 2;
inline bool WPPActionNt::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WPPActionNt::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WPPActionNt::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WPPActionNt::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 WPPActionNt::cid() const {
  return cid_;
}
inline void WPPActionNt::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 other = 3;
inline bool WPPActionNt::has_other() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WPPActionNt::set_has_other() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WPPActionNt::clear_has_other() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WPPActionNt::clear_other() {
  other_ = GOOGLE_ULONGLONG(0);
  clear_has_other();
}
inline ::google::protobuf::uint64 WPPActionNt::other() const {
  return other_;
}
inline void WPPActionNt::set_other(::google::protobuf::uint64 value) {
  set_has_other();
  other_ = value;
}

// optional .proto_ff.Vector3PB pos = 4;
inline bool WPPActionNt::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WPPActionNt::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WPPActionNt::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WPPActionNt::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& WPPActionNt::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* WPPActionNt::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* WPPActionNt::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void WPPActionNt::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional .proto_ff.Vector3PB dir = 5;
inline bool WPPActionNt::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WPPActionNt::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WPPActionNt::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WPPActionNt::clear_dir() {
  if (dir_ != NULL) dir_->::proto_ff::Vector3PB::Clear();
  clear_has_dir();
}
inline const ::proto_ff::Vector3PB& WPPActionNt::dir() const {
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::proto_ff::Vector3PB* WPPActionNt::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::proto_ff::Vector3PB;
  return dir_;
}
inline ::proto_ff::Vector3PB* WPPActionNt::release_dir() {
  clear_has_dir();
  ::proto_ff::Vector3PB* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void WPPActionNt::set_allocated_dir(::proto_ff::Vector3PB* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
}

// -------------------------------------------------------------------

// WPPCancelCurActReq

// -------------------------------------------------------------------

// WPPCancelCurActRsp

// required uint32 error = 1;
inline bool WPPCancelCurActRsp::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WPPCancelCurActRsp::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WPPCancelCurActRsp::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WPPCancelCurActRsp::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 WPPCancelCurActRsp::error() const {
  return error_;
}
inline void WPPCancelCurActRsp::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// CTPEnterReq

// -------------------------------------------------------------------

// CTPExitReq

// -------------------------------------------------------------------

// CTPPlayerInfo

// required uint64 cid = 1;
inline bool CTPPlayerInfo::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTPPlayerInfo::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTPPlayerInfo::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTPPlayerInfo::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CTPPlayerInfo::cid() const {
  return cid_;
}
inline void CTPPlayerInfo::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required string name = 2;
inline bool CTPPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTPPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTPPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTPPlayerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CTPPlayerInfo::name() const {
  return *name_;
}
inline void CTPPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CTPPlayerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CTPPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CTPPlayerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CTPPlayerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CTPPlayerInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 team = 3;
inline bool CTPPlayerInfo::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTPPlayerInfo::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTPPlayerInfo::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTPPlayerInfo::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CTPPlayerInfo::team() const {
  return team_;
}
inline void CTPPlayerInfo::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
}

// required uint64 serverId = 4;
inline bool CTPPlayerInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTPPlayerInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTPPlayerInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTPPlayerInfo::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::uint64 CTPPlayerInfo::serverid() const {
  return serverid_;
}
inline void CTPPlayerInfo::set_serverid(::google::protobuf::uint64 value) {
  set_has_serverid();
  serverid_ = value;
}

// required uint32 killCount = 5;
inline bool CTPPlayerInfo::has_killcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTPPlayerInfo::set_has_killcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CTPPlayerInfo::clear_has_killcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CTPPlayerInfo::clear_killcount() {
  killcount_ = 0u;
  clear_has_killcount();
}
inline ::google::protobuf::uint32 CTPPlayerInfo::killcount() const {
  return killcount_;
}
inline void CTPPlayerInfo::set_killcount(::google::protobuf::uint32 value) {
  set_has_killcount();
  killcount_ = value;
}

// required uint64 atkPower = 6;
inline bool CTPPlayerInfo::has_atkpower() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CTPPlayerInfo::set_has_atkpower() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CTPPlayerInfo::clear_has_atkpower() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CTPPlayerInfo::clear_atkpower() {
  atkpower_ = GOOGLE_ULONGLONG(0);
  clear_has_atkpower();
}
inline ::google::protobuf::uint64 CTPPlayerInfo::atkpower() const {
  return atkpower_;
}
inline void CTPPlayerInfo::set_atkpower(::google::protobuf::uint64 value) {
  set_has_atkpower();
  atkpower_ = value;
}

// required uint32 dieCount = 7;
inline bool CTPPlayerInfo::has_diecount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CTPPlayerInfo::set_has_diecount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CTPPlayerInfo::clear_has_diecount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CTPPlayerInfo::clear_diecount() {
  diecount_ = 0u;
  clear_has_diecount();
}
inline ::google::protobuf::uint32 CTPPlayerInfo::diecount() const {
  return diecount_;
}
inline void CTPPlayerInfo::set_diecount(::google::protobuf::uint32 value) {
  set_has_diecount();
  diecount_ = value;
}

// required uint32 score = 8;
inline bool CTPPlayerInfo::has_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CTPPlayerInfo::set_has_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CTPPlayerInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CTPPlayerInfo::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CTPPlayerInfo::score() const {
  return score_;
}
inline void CTPPlayerInfo::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required bool isRebot = 9;
inline bool CTPPlayerInfo::has_isrebot() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CTPPlayerInfo::set_has_isrebot() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CTPPlayerInfo::clear_has_isrebot() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CTPPlayerInfo::clear_isrebot() {
  isrebot_ = false;
  clear_has_isrebot();
}
inline bool CTPPlayerInfo::isrebot() const {
  return isrebot_;
}
inline void CTPPlayerInfo::set_isrebot(bool value) {
  set_has_isrebot();
  isrebot_ = value;
}

// -------------------------------------------------------------------

// CTPResult

// required uint32 winTeam = 1;
inline bool CTPResult::has_winteam() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTPResult::set_has_winteam() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTPResult::clear_has_winteam() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTPResult::clear_winteam() {
  winteam_ = 0u;
  clear_has_winteam();
}
inline ::google::protobuf::uint32 CTPResult::winteam() const {
  return winteam_;
}
inline void CTPResult::set_winteam(::google::protobuf::uint32 value) {
  set_has_winteam();
  winteam_ = value;
}

// repeated .proto_ff.CTPPlayerInfo rank = 2;
inline int CTPResult::rank_size() const {
  return rank_.size();
}
inline void CTPResult::clear_rank() {
  rank_.Clear();
}
inline const ::proto_ff::CTPPlayerInfo& CTPResult::rank(int index) const {
  return rank_.Get(index);
}
inline ::proto_ff::CTPPlayerInfo* CTPResult::mutable_rank(int index) {
  return rank_.Mutable(index);
}
inline ::proto_ff::CTPPlayerInfo* CTPResult::add_rank() {
  return rank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >&
CTPResult::rank() const {
  return rank_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >*
CTPResult::mutable_rank() {
  return &rank_;
}

// required uint32 team1Score = 3;
inline bool CTPResult::has_team1score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTPResult::set_has_team1score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTPResult::clear_has_team1score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTPResult::clear_team1score() {
  team1score_ = 0u;
  clear_has_team1score();
}
inline ::google::protobuf::uint32 CTPResult::team1score() const {
  return team1score_;
}
inline void CTPResult::set_team1score(::google::protobuf::uint32 value) {
  set_has_team1score();
  team1score_ = value;
}

// required uint32 team2Score = 4;
inline bool CTPResult::has_team2score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTPResult::set_has_team2score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTPResult::clear_has_team2score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTPResult::clear_team2score() {
  team2score_ = 0u;
  clear_has_team2score();
}
inline ::google::protobuf::uint32 CTPResult::team2score() const {
  return team2score_;
}
inline void CTPResult::set_team2score(::google::protobuf::uint32 value) {
  set_has_team2score();
  team2score_ = value;
}

// required bool last = 5;
inline bool CTPResult::has_last() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTPResult::set_has_last() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CTPResult::clear_has_last() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CTPResult::clear_last() {
  last_ = false;
  clear_has_last();
}
inline bool CTPResult::last() const {
  return last_;
}
inline void CTPResult::set_last(bool value) {
  set_has_last();
  last_ = value;
}

// -------------------------------------------------------------------

// CTPEnterRsp

// optional uint64 matchStartTime = 1;
inline bool CTPEnterRsp::has_matchstarttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTPEnterRsp::set_has_matchstarttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTPEnterRsp::clear_has_matchstarttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTPEnterRsp::clear_matchstarttime() {
  matchstarttime_ = GOOGLE_ULONGLONG(0);
  clear_has_matchstarttime();
}
inline ::google::protobuf::uint64 CTPEnterRsp::matchstarttime() const {
  return matchstarttime_;
}
inline void CTPEnterRsp::set_matchstarttime(::google::protobuf::uint64 value) {
  set_has_matchstarttime();
  matchstarttime_ = value;
}

// optional uint64 readyStartTime = 2;
inline bool CTPEnterRsp::has_readystarttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTPEnterRsp::set_has_readystarttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTPEnterRsp::clear_has_readystarttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTPEnterRsp::clear_readystarttime() {
  readystarttime_ = GOOGLE_ULONGLONG(0);
  clear_has_readystarttime();
}
inline ::google::protobuf::uint64 CTPEnterRsp::readystarttime() const {
  return readystarttime_;
}
inline void CTPEnterRsp::set_readystarttime(::google::protobuf::uint64 value) {
  set_has_readystarttime();
  readystarttime_ = value;
}

// optional uint64 relifeStartTime = 3;
inline bool CTPEnterRsp::has_relifestarttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTPEnterRsp::set_has_relifestarttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTPEnterRsp::clear_has_relifestarttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTPEnterRsp::clear_relifestarttime() {
  relifestarttime_ = GOOGLE_ULONGLONG(0);
  clear_has_relifestarttime();
}
inline ::google::protobuf::uint64 CTPEnterRsp::relifestarttime() const {
  return relifestarttime_;
}
inline void CTPEnterRsp::set_relifestarttime(::google::protobuf::uint64 value) {
  set_has_relifestarttime();
  relifestarttime_ = value;
}

// optional uint64 roundStartTime = 4;
inline bool CTPEnterRsp::has_roundstarttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTPEnterRsp::set_has_roundstarttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTPEnterRsp::clear_has_roundstarttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTPEnterRsp::clear_roundstarttime() {
  roundstarttime_ = GOOGLE_ULONGLONG(0);
  clear_has_roundstarttime();
}
inline ::google::protobuf::uint64 CTPEnterRsp::roundstarttime() const {
  return roundstarttime_;
}
inline void CTPEnterRsp::set_roundstarttime(::google::protobuf::uint64 value) {
  set_has_roundstarttime();
  roundstarttime_ = value;
}

// optional uint32 roundStart = 5;
inline bool CTPEnterRsp::has_roundstart() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTPEnterRsp::set_has_roundstart() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CTPEnterRsp::clear_has_roundstart() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CTPEnterRsp::clear_roundstart() {
  roundstart_ = 0u;
  clear_has_roundstart();
}
inline ::google::protobuf::uint32 CTPEnterRsp::roundstart() const {
  return roundstart_;
}
inline void CTPEnterRsp::set_roundstart(::google::protobuf::uint32 value) {
  set_has_roundstart();
  roundstart_ = value;
}

// required uint32 team1Score = 6;
inline bool CTPEnterRsp::has_team1score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CTPEnterRsp::set_has_team1score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CTPEnterRsp::clear_has_team1score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CTPEnterRsp::clear_team1score() {
  team1score_ = 0u;
  clear_has_team1score();
}
inline ::google::protobuf::uint32 CTPEnterRsp::team1score() const {
  return team1score_;
}
inline void CTPEnterRsp::set_team1score(::google::protobuf::uint32 value) {
  set_has_team1score();
  team1score_ = value;
}

// required uint32 team2Score = 7;
inline bool CTPEnterRsp::has_team2score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CTPEnterRsp::set_has_team2score() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CTPEnterRsp::clear_has_team2score() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CTPEnterRsp::clear_team2score() {
  team2score_ = 0u;
  clear_has_team2score();
}
inline ::google::protobuf::uint32 CTPEnterRsp::team2score() const {
  return team2score_;
}
inline void CTPEnterRsp::set_team2score(::google::protobuf::uint32 value) {
  set_has_team2score();
  team2score_ = value;
}

// required uint32 team1Players = 8;
inline bool CTPEnterRsp::has_team1players() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CTPEnterRsp::set_has_team1players() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CTPEnterRsp::clear_has_team1players() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CTPEnterRsp::clear_team1players() {
  team1players_ = 0u;
  clear_has_team1players();
}
inline ::google::protobuf::uint32 CTPEnterRsp::team1players() const {
  return team1players_;
}
inline void CTPEnterRsp::set_team1players(::google::protobuf::uint32 value) {
  set_has_team1players();
  team1players_ = value;
}

// required uint32 team2Players = 9;
inline bool CTPEnterRsp::has_team2players() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CTPEnterRsp::set_has_team2players() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CTPEnterRsp::clear_has_team2players() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CTPEnterRsp::clear_team2players() {
  team2players_ = 0u;
  clear_has_team2players();
}
inline ::google::protobuf::uint32 CTPEnterRsp::team2players() const {
  return team2players_;
}
inline void CTPEnterRsp::set_team2players(::google::protobuf::uint32 value) {
  set_has_team2players();
  team2players_ = value;
}

// required uint32 myScore = 10;
inline bool CTPEnterRsp::has_myscore() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CTPEnterRsp::set_has_myscore() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CTPEnterRsp::clear_has_myscore() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CTPEnterRsp::clear_myscore() {
  myscore_ = 0u;
  clear_has_myscore();
}
inline ::google::protobuf::uint32 CTPEnterRsp::myscore() const {
  return myscore_;
}
inline void CTPEnterRsp::set_myscore(::google::protobuf::uint32 value) {
  set_has_myscore();
  myscore_ = value;
}

// repeated .proto_ff.CTPPlayerInfo rank = 11;
inline int CTPEnterRsp::rank_size() const {
  return rank_.size();
}
inline void CTPEnterRsp::clear_rank() {
  rank_.Clear();
}
inline const ::proto_ff::CTPPlayerInfo& CTPEnterRsp::rank(int index) const {
  return rank_.Get(index);
}
inline ::proto_ff::CTPPlayerInfo* CTPEnterRsp::mutable_rank(int index) {
  return rank_.Mutable(index);
}
inline ::proto_ff::CTPPlayerInfo* CTPEnterRsp::add_rank() {
  return rank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >&
CTPEnterRsp::rank() const {
  return rank_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >*
CTPEnterRsp::mutable_rank() {
  return &rank_;
}

// required uint32 team = 12;
inline bool CTPEnterRsp::has_team() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CTPEnterRsp::set_has_team() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CTPEnterRsp::clear_has_team() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CTPEnterRsp::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CTPEnterRsp::team() const {
  return team_;
}
inline void CTPEnterRsp::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
}

// repeated .proto_ff.CTPResult results = 13;
inline int CTPEnterRsp::results_size() const {
  return results_.size();
}
inline void CTPEnterRsp::clear_results() {
  results_.Clear();
}
inline const ::proto_ff::CTPResult& CTPEnterRsp::results(int index) const {
  return results_.Get(index);
}
inline ::proto_ff::CTPResult* CTPEnterRsp::mutable_results(int index) {
  return results_.Mutable(index);
}
inline ::proto_ff::CTPResult* CTPEnterRsp::add_results() {
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPResult >&
CTPEnterRsp::results() const {
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPResult >*
CTPEnterRsp::mutable_results() {
  return &results_;
}

// optional uint32 team1RealPlayers = 14;
inline bool CTPEnterRsp::has_team1realplayers() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CTPEnterRsp::set_has_team1realplayers() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CTPEnterRsp::clear_has_team1realplayers() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CTPEnterRsp::clear_team1realplayers() {
  team1realplayers_ = 0u;
  clear_has_team1realplayers();
}
inline ::google::protobuf::uint32 CTPEnterRsp::team1realplayers() const {
  return team1realplayers_;
}
inline void CTPEnterRsp::set_team1realplayers(::google::protobuf::uint32 value) {
  set_has_team1realplayers();
  team1realplayers_ = value;
}

// optional uint32 team2RealPlayers = 15;
inline bool CTPEnterRsp::has_team2realplayers() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CTPEnterRsp::set_has_team2realplayers() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CTPEnterRsp::clear_has_team2realplayers() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CTPEnterRsp::clear_team2realplayers() {
  team2realplayers_ = 0u;
  clear_has_team2realplayers();
}
inline ::google::protobuf::uint32 CTPEnterRsp::team2realplayers() const {
  return team2realplayers_;
}
inline void CTPEnterRsp::set_team2realplayers(::google::protobuf::uint32 value) {
  set_has_team2realplayers();
  team2realplayers_ = value;
}

// -------------------------------------------------------------------

// CTPReadyStart

// required uint64 readyStartTime = 1;
inline bool CTPReadyStart::has_readystarttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTPReadyStart::set_has_readystarttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTPReadyStart::clear_has_readystarttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTPReadyStart::clear_readystarttime() {
  readystarttime_ = GOOGLE_ULONGLONG(0);
  clear_has_readystarttime();
}
inline ::google::protobuf::uint64 CTPReadyStart::readystarttime() const {
  return readystarttime_;
}
inline void CTPReadyStart::set_readystarttime(::google::protobuf::uint64 value) {
  set_has_readystarttime();
  readystarttime_ = value;
}

// -------------------------------------------------------------------

// CTPRoundStart

// required uint64 roundStartTime = 1;
inline bool CTPRoundStart::has_roundstarttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTPRoundStart::set_has_roundstarttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTPRoundStart::clear_has_roundstarttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTPRoundStart::clear_roundstarttime() {
  roundstarttime_ = GOOGLE_ULONGLONG(0);
  clear_has_roundstarttime();
}
inline ::google::protobuf::uint64 CTPRoundStart::roundstarttime() const {
  return roundstarttime_;
}
inline void CTPRoundStart::set_roundstarttime(::google::protobuf::uint64 value) {
  set_has_roundstarttime();
  roundstarttime_ = value;
}

// required uint32 roundStart = 2;
inline bool CTPRoundStart::has_roundstart() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTPRoundStart::set_has_roundstart() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTPRoundStart::clear_has_roundstart() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTPRoundStart::clear_roundstart() {
  roundstart_ = 0u;
  clear_has_roundstart();
}
inline ::google::protobuf::uint32 CTPRoundStart::roundstart() const {
  return roundstart_;
}
inline void CTPRoundStart::set_roundstart(::google::protobuf::uint32 value) {
  set_has_roundstart();
  roundstart_ = value;
}

// -------------------------------------------------------------------

// CTPScoreRankNt

// repeated .proto_ff.CTPPlayerInfo rank = 1;
inline int CTPScoreRankNt::rank_size() const {
  return rank_.size();
}
inline void CTPScoreRankNt::clear_rank() {
  rank_.Clear();
}
inline const ::proto_ff::CTPPlayerInfo& CTPScoreRankNt::rank(int index) const {
  return rank_.Get(index);
}
inline ::proto_ff::CTPPlayerInfo* CTPScoreRankNt::mutable_rank(int index) {
  return rank_.Mutable(index);
}
inline ::proto_ff::CTPPlayerInfo* CTPScoreRankNt::add_rank() {
  return rank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >&
CTPScoreRankNt::rank() const {
  return rank_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CTPPlayerInfo >*
CTPScoreRankNt::mutable_rank() {
  return &rank_;
}

// required uint32 team1Score = 2;
inline bool CTPScoreRankNt::has_team1score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTPScoreRankNt::set_has_team1score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTPScoreRankNt::clear_has_team1score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTPScoreRankNt::clear_team1score() {
  team1score_ = 0u;
  clear_has_team1score();
}
inline ::google::protobuf::uint32 CTPScoreRankNt::team1score() const {
  return team1score_;
}
inline void CTPScoreRankNt::set_team1score(::google::protobuf::uint32 value) {
  set_has_team1score();
  team1score_ = value;
}

// required uint32 team2Score = 3;
inline bool CTPScoreRankNt::has_team2score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTPScoreRankNt::set_has_team2score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTPScoreRankNt::clear_has_team2score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTPScoreRankNt::clear_team2score() {
  team2score_ = 0u;
  clear_has_team2score();
}
inline ::google::protobuf::uint32 CTPScoreRankNt::team2score() const {
  return team2score_;
}
inline void CTPScoreRankNt::set_team2score(::google::protobuf::uint32 value) {
  set_has_team2score();
  team2score_ = value;
}

// -------------------------------------------------------------------

// CTPScoreChgNt

// required uint64 cid = 1;
inline bool CTPScoreChgNt::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTPScoreChgNt::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTPScoreChgNt::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTPScoreChgNt::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CTPScoreChgNt::cid() const {
  return cid_;
}
inline void CTPScoreChgNt::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required uint32 team1Score = 2;
inline bool CTPScoreChgNt::has_team1score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTPScoreChgNt::set_has_team1score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTPScoreChgNt::clear_has_team1score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTPScoreChgNt::clear_team1score() {
  team1score_ = 0u;
  clear_has_team1score();
}
inline ::google::protobuf::uint32 CTPScoreChgNt::team1score() const {
  return team1score_;
}
inline void CTPScoreChgNt::set_team1score(::google::protobuf::uint32 value) {
  set_has_team1score();
  team1score_ = value;
}

// required uint32 team2Score = 3;
inline bool CTPScoreChgNt::has_team2score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTPScoreChgNt::set_has_team2score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTPScoreChgNt::clear_has_team2score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTPScoreChgNt::clear_team2score() {
  team2score_ = 0u;
  clear_has_team2score();
}
inline ::google::protobuf::uint32 CTPScoreChgNt::team2score() const {
  return team2score_;
}
inline void CTPScoreChgNt::set_team2score(::google::protobuf::uint32 value) {
  set_has_team2score();
  team2score_ = value;
}

// -------------------------------------------------------------------

// CTPKillPlayerInfo

// required uint32 killsCount = 1;
inline bool CTPKillPlayerInfo::has_killscount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTPKillPlayerInfo::set_has_killscount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTPKillPlayerInfo::clear_has_killscount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTPKillPlayerInfo::clear_killscount() {
  killscount_ = 0u;
  clear_has_killscount();
}
inline ::google::protobuf::uint32 CTPKillPlayerInfo::killscount() const {
  return killscount_;
}
inline void CTPKillPlayerInfo::set_killscount(::google::protobuf::uint32 value) {
  set_has_killscount();
  killscount_ = value;
}

// required string name = 2;
inline bool CTPKillPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTPKillPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTPKillPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTPKillPlayerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CTPKillPlayerInfo::name() const {
  return *name_;
}
inline void CTPKillPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CTPKillPlayerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CTPKillPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CTPKillPlayerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CTPKillPlayerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CTPKillPlayerInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .proto_ff.RoleFacadeProto facade = 3;
inline bool CTPKillPlayerInfo::has_facade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTPKillPlayerInfo::set_has_facade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTPKillPlayerInfo::clear_has_facade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTPKillPlayerInfo::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& CTPKillPlayerInfo::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* CTPKillPlayerInfo::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* CTPKillPlayerInfo::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void CTPKillPlayerInfo::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// required uint32 team = 4;
inline bool CTPKillPlayerInfo::has_team() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTPKillPlayerInfo::set_has_team() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTPKillPlayerInfo::clear_has_team() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTPKillPlayerInfo::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CTPKillPlayerInfo::team() const {
  return team_;
}
inline void CTPKillPlayerInfo::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
}

// -------------------------------------------------------------------

// CTPKillNt

// required .proto_ff.CTPKillPlayerInfo atker = 1;
inline bool CTPKillNt::has_atker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTPKillNt::set_has_atker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTPKillNt::clear_has_atker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTPKillNt::clear_atker() {
  if (atker_ != NULL) atker_->::proto_ff::CTPKillPlayerInfo::Clear();
  clear_has_atker();
}
inline const ::proto_ff::CTPKillPlayerInfo& CTPKillNt::atker() const {
  return atker_ != NULL ? *atker_ : *default_instance_->atker_;
}
inline ::proto_ff::CTPKillPlayerInfo* CTPKillNt::mutable_atker() {
  set_has_atker();
  if (atker_ == NULL) atker_ = new ::proto_ff::CTPKillPlayerInfo;
  return atker_;
}
inline ::proto_ff::CTPKillPlayerInfo* CTPKillNt::release_atker() {
  clear_has_atker();
  ::proto_ff::CTPKillPlayerInfo* temp = atker_;
  atker_ = NULL;
  return temp;
}
inline void CTPKillNt::set_allocated_atker(::proto_ff::CTPKillPlayerInfo* atker) {
  delete atker_;
  atker_ = atker;
  if (atker) {
    set_has_atker();
  } else {
    clear_has_atker();
  }
}

// required .proto_ff.CTPKillPlayerInfo behit = 2;
inline bool CTPKillNt::has_behit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTPKillNt::set_has_behit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTPKillNt::clear_has_behit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTPKillNt::clear_behit() {
  if (behit_ != NULL) behit_->::proto_ff::CTPKillPlayerInfo::Clear();
  clear_has_behit();
}
inline const ::proto_ff::CTPKillPlayerInfo& CTPKillNt::behit() const {
  return behit_ != NULL ? *behit_ : *default_instance_->behit_;
}
inline ::proto_ff::CTPKillPlayerInfo* CTPKillNt::mutable_behit() {
  set_has_behit();
  if (behit_ == NULL) behit_ = new ::proto_ff::CTPKillPlayerInfo;
  return behit_;
}
inline ::proto_ff::CTPKillPlayerInfo* CTPKillNt::release_behit() {
  clear_has_behit();
  ::proto_ff::CTPKillPlayerInfo* temp = behit_;
  behit_ = NULL;
  return temp;
}
inline void CTPKillNt::set_allocated_behit(::proto_ff::CTPKillPlayerInfo* behit) {
  delete behit_;
  behit_ = behit;
  if (behit) {
    set_has_behit();
  } else {
    clear_has_behit();
  }
}

// -------------------------------------------------------------------

// CTPPlayersChgNt

// required uint32 team1Players = 1;
inline bool CTPPlayersChgNt::has_team1players() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTPPlayersChgNt::set_has_team1players() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTPPlayersChgNt::clear_has_team1players() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTPPlayersChgNt::clear_team1players() {
  team1players_ = 0u;
  clear_has_team1players();
}
inline ::google::protobuf::uint32 CTPPlayersChgNt::team1players() const {
  return team1players_;
}
inline void CTPPlayersChgNt::set_team1players(::google::protobuf::uint32 value) {
  set_has_team1players();
  team1players_ = value;
}

// required uint32 team2Players = 2;
inline bool CTPPlayersChgNt::has_team2players() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTPPlayersChgNt::set_has_team2players() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTPPlayersChgNt::clear_has_team2players() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTPPlayersChgNt::clear_team2players() {
  team2players_ = 0u;
  clear_has_team2players();
}
inline ::google::protobuf::uint32 CTPPlayersChgNt::team2players() const {
  return team2players_;
}
inline void CTPPlayersChgNt::set_team2players(::google::protobuf::uint32 value) {
  set_has_team2players();
  team2players_ = value;
}

// required uint32 team1RealPlayers = 3;
inline bool CTPPlayersChgNt::has_team1realplayers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTPPlayersChgNt::set_has_team1realplayers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTPPlayersChgNt::clear_has_team1realplayers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTPPlayersChgNt::clear_team1realplayers() {
  team1realplayers_ = 0u;
  clear_has_team1realplayers();
}
inline ::google::protobuf::uint32 CTPPlayersChgNt::team1realplayers() const {
  return team1realplayers_;
}
inline void CTPPlayersChgNt::set_team1realplayers(::google::protobuf::uint32 value) {
  set_has_team1realplayers();
  team1realplayers_ = value;
}

// required uint32 team2RealPlayers = 4;
inline bool CTPPlayersChgNt::has_team2realplayers() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTPPlayersChgNt::set_has_team2realplayers() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTPPlayersChgNt::clear_has_team2realplayers() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTPPlayersChgNt::clear_team2realplayers() {
  team2realplayers_ = 0u;
  clear_has_team2realplayers();
}
inline ::google::protobuf::uint32 CTPPlayersChgNt::team2realplayers() const {
  return team2realplayers_;
}
inline void CTPPlayersChgNt::set_team2realplayers(::google::protobuf::uint32 value) {
  set_has_team2realplayers();
  team2realplayers_ = value;
}

// -------------------------------------------------------------------

// GVBEnterError

// required uint32 errcode = 1;
inline bool GVBEnterError::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBEnterError::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBEnterError::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBEnterError::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 GVBEnterError::errcode() const {
  return errcode_;
}
inline void GVBEnterError::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
}

// -------------------------------------------------------------------

// GMADatas

// optional uint32 remainTime = 1;
inline bool GMADatas::has_remaintime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMADatas::set_has_remaintime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMADatas::clear_has_remaintime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMADatas::clear_remaintime() {
  remaintime_ = 0u;
  clear_has_remaintime();
}
inline ::google::protobuf::uint32 GMADatas::remaintime() const {
  return remaintime_;
}
inline void GMADatas::set_remaintime(::google::protobuf::uint32 value) {
  set_has_remaintime();
  remaintime_ = value;
}

// optional uint32 freeTimeRemain = 2;
inline bool GMADatas::has_freetimeremain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMADatas::set_has_freetimeremain() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMADatas::clear_has_freetimeremain() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMADatas::clear_freetimeremain() {
  freetimeremain_ = 0u;
  clear_has_freetimeremain();
}
inline ::google::protobuf::uint32 GMADatas::freetimeremain() const {
  return freetimeremain_;
}
inline void GMADatas::set_freetimeremain(::google::protobuf::uint32 value) {
  set_has_freetimeremain();
  freetimeremain_ = value;
}

// optional uint32 freeTime = 3;
inline bool GMADatas::has_freetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMADatas::set_has_freetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMADatas::clear_has_freetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMADatas::clear_freetime() {
  freetime_ = 0u;
  clear_has_freetime();
}
inline ::google::protobuf::uint32 GMADatas::freetime() const {
  return freetime_;
}
inline void GMADatas::set_freetime(::google::protobuf::uint32 value) {
  set_has_freetime();
  freetime_ = value;
}

// optional uint32 privilege = 4;
inline bool GMADatas::has_privilege() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMADatas::set_has_privilege() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMADatas::clear_has_privilege() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMADatas::clear_privilege() {
  privilege_ = 0u;
  clear_has_privilege();
}
inline ::google::protobuf::uint32 GMADatas::privilege() const {
  return privilege_;
}
inline void GMADatas::set_privilege(::google::protobuf::uint32 value) {
  set_has_privilege();
  privilege_ = value;
}

// optional uint64 recvFreeTimePrev = 5;
inline bool GMADatas::has_recvfreetimeprev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMADatas::set_has_recvfreetimeprev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMADatas::clear_has_recvfreetimeprev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMADatas::clear_recvfreetimeprev() {
  recvfreetimeprev_ = GOOGLE_ULONGLONG(0);
  clear_has_recvfreetimeprev();
}
inline ::google::protobuf::uint64 GMADatas::recvfreetimeprev() const {
  return recvfreetimeprev_;
}
inline void GMADatas::set_recvfreetimeprev(::google::protobuf::uint64 value) {
  set_has_recvfreetimeprev();
  recvfreetimeprev_ = value;
}

// optional bool isPause = 6;
inline bool GMADatas::has_ispause() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GMADatas::set_has_ispause() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GMADatas::clear_has_ispause() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GMADatas::clear_ispause() {
  ispause_ = false;
  clear_has_ispause();
}
inline bool GMADatas::ispause() const {
  return ispause_;
}
inline void GMADatas::set_ispause(bool value) {
  set_has_ispause();
  ispause_ = value;
}

// optional uint32 expGet = 7;
inline bool GMADatas::has_expget() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GMADatas::set_has_expget() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GMADatas::clear_has_expget() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GMADatas::clear_expget() {
  expget_ = 0u;
  clear_has_expget();
}
inline ::google::protobuf::uint32 GMADatas::expget() const {
  return expget_;
}
inline void GMADatas::set_expget(::google::protobuf::uint32 value) {
  set_has_expget();
  expget_ = value;
}

// optional uint32 getFreeTimeCD = 8;
inline bool GMADatas::has_getfreetimecd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GMADatas::set_has_getfreetimecd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GMADatas::clear_has_getfreetimecd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GMADatas::clear_getfreetimecd() {
  getfreetimecd_ = 0u;
  clear_has_getfreetimecd();
}
inline ::google::protobuf::uint32 GMADatas::getfreetimecd() const {
  return getfreetimecd_;
}
inline void GMADatas::set_getfreetimecd(::google::protobuf::uint32 value) {
  set_has_getfreetimecd();
  getfreetimecd_ = value;
}

// optional int64 expTotal = 9;
inline bool GMADatas::has_exptotal() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GMADatas::set_has_exptotal() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GMADatas::clear_has_exptotal() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GMADatas::clear_exptotal() {
  exptotal_ = GOOGLE_LONGLONG(0);
  clear_has_exptotal();
}
inline ::google::protobuf::int64 GMADatas::exptotal() const {
  return exptotal_;
}
inline void GMADatas::set_exptotal(::google::protobuf::int64 value) {
  set_has_exptotal();
  exptotal_ = value;
}

// optional int64 expAccumulate = 10;
inline bool GMADatas::has_expaccumulate() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GMADatas::set_has_expaccumulate() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GMADatas::clear_has_expaccumulate() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GMADatas::clear_expaccumulate() {
  expaccumulate_ = GOOGLE_LONGLONG(0);
  clear_has_expaccumulate();
}
inline ::google::protobuf::int64 GMADatas::expaccumulate() const {
  return expaccumulate_;
}
inline void GMADatas::set_expaccumulate(::google::protobuf::int64 value) {
  set_has_expaccumulate();
  expaccumulate_ = value;
}

// -------------------------------------------------------------------

// GMABossInfo

// required uint32 players = 1;
inline bool GMABossInfo::has_players() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMABossInfo::set_has_players() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMABossInfo::clear_has_players() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMABossInfo::clear_players() {
  players_ = 0u;
  clear_has_players();
}
inline ::google::protobuf::uint32 GMABossInfo::players() const {
  return players_;
}
inline void GMABossInfo::set_players(::google::protobuf::uint32 value) {
  set_has_players();
  players_ = value;
}

// required uint32 posId = 2;
inline bool GMABossInfo::has_posid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMABossInfo::set_has_posid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMABossInfo::clear_has_posid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMABossInfo::clear_posid() {
  posid_ = 0u;
  clear_has_posid();
}
inline ::google::protobuf::uint32 GMABossInfo::posid() const {
  return posid_;
}
inline void GMABossInfo::set_posid(::google::protobuf::uint32 value) {
  set_has_posid();
  posid_ = value;
}

// required uint32 cfgId = 3;
inline bool GMABossInfo::has_cfgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMABossInfo::set_has_cfgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMABossInfo::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMABossInfo::clear_cfgid() {
  cfgid_ = 0u;
  clear_has_cfgid();
}
inline ::google::protobuf::uint32 GMABossInfo::cfgid() const {
  return cfgid_;
}
inline void GMABossInfo::set_cfgid(::google::protobuf::uint32 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// -------------------------------------------------------------------

// GMABossInfoReqData

// required uint32 cfgId = 1;
inline bool GMABossInfoReqData::has_cfgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMABossInfoReqData::set_has_cfgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMABossInfoReqData::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMABossInfoReqData::clear_cfgid() {
  cfgid_ = 0u;
  clear_has_cfgid();
}
inline ::google::protobuf::uint32 GMABossInfoReqData::cfgid() const {
  return cfgid_;
}
inline void GMABossInfoReqData::set_cfgid(::google::protobuf::uint32 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// required uint32 posId = 2;
inline bool GMABossInfoReqData::has_posid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMABossInfoReqData::set_has_posid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMABossInfoReqData::clear_has_posid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMABossInfoReqData::clear_posid() {
  posid_ = 0u;
  clear_has_posid();
}
inline ::google::protobuf::uint32 GMABossInfoReqData::posid() const {
  return posid_;
}
inline void GMABossInfoReqData::set_posid(::google::protobuf::uint32 value) {
  set_has_posid();
  posid_ = value;
}

// -------------------------------------------------------------------

// GMABossInfoReq

// repeated .proto_ff.GMABossInfoReqData list = 1;
inline int GMABossInfoReq::list_size() const {
  return list_.size();
}
inline void GMABossInfoReq::clear_list() {
  list_.Clear();
}
inline const ::proto_ff::GMABossInfoReqData& GMABossInfoReq::list(int index) const {
  return list_.Get(index);
}
inline ::proto_ff::GMABossInfoReqData* GMABossInfoReq::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::proto_ff::GMABossInfoReqData* GMABossInfoReq::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMABossInfoReqData >&
GMABossInfoReq::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMABossInfoReqData >*
GMABossInfoReq::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// GMABossInfoRsp

// repeated .proto_ff.GMABossInfo bossListInfo = 1;
inline int GMABossInfoRsp::bosslistinfo_size() const {
  return bosslistinfo_.size();
}
inline void GMABossInfoRsp::clear_bosslistinfo() {
  bosslistinfo_.Clear();
}
inline const ::proto_ff::GMABossInfo& GMABossInfoRsp::bosslistinfo(int index) const {
  return bosslistinfo_.Get(index);
}
inline ::proto_ff::GMABossInfo* GMABossInfoRsp::mutable_bosslistinfo(int index) {
  return bosslistinfo_.Mutable(index);
}
inline ::proto_ff::GMABossInfo* GMABossInfoRsp::add_bosslistinfo() {
  return bosslistinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMABossInfo >&
GMABossInfoRsp::bosslistinfo() const {
  return bosslistinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMABossInfo >*
GMABossInfoRsp::mutable_bosslistinfo() {
  return &bosslistinfo_;
}

// -------------------------------------------------------------------

// GMABossInfoSingleReq

// required uint32 mapId = 1;
inline bool GMABossInfoSingleReq::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMABossInfoSingleReq::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMABossInfoSingleReq::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMABossInfoSingleReq::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 GMABossInfoSingleReq::mapid() const {
  return mapid_;
}
inline void GMABossInfoSingleReq::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required uint32 posId = 2;
inline bool GMABossInfoSingleReq::has_posid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMABossInfoSingleReq::set_has_posid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMABossInfoSingleReq::clear_has_posid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMABossInfoSingleReq::clear_posid() {
  posid_ = 0u;
  clear_has_posid();
}
inline ::google::protobuf::uint32 GMABossInfoSingleReq::posid() const {
  return posid_;
}
inline void GMABossInfoSingleReq::set_posid(::google::protobuf::uint32 value) {
  set_has_posid();
  posid_ = value;
}

// -------------------------------------------------------------------

// GMABossInfoSingleRsp

// required uint32 players = 1;
inline bool GMABossInfoSingleRsp::has_players() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMABossInfoSingleRsp::set_has_players() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMABossInfoSingleRsp::clear_has_players() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMABossInfoSingleRsp::clear_players() {
  players_ = 0u;
  clear_has_players();
}
inline ::google::protobuf::uint32 GMABossInfoSingleRsp::players() const {
  return players_;
}
inline void GMABossInfoSingleRsp::set_players(::google::protobuf::uint32 value) {
  set_has_players();
  players_ = value;
}

// required uint32 posId = 2;
inline bool GMABossInfoSingleRsp::has_posid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMABossInfoSingleRsp::set_has_posid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMABossInfoSingleRsp::clear_has_posid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMABossInfoSingleRsp::clear_posid() {
  posid_ = 0u;
  clear_has_posid();
}
inline ::google::protobuf::uint32 GMABossInfoSingleRsp::posid() const {
  return posid_;
}
inline void GMABossInfoSingleRsp::set_posid(::google::protobuf::uint32 value) {
  set_has_posid();
  posid_ = value;
}

// -------------------------------------------------------------------

// GMAPauseReq

// required bool isPause = 1;
inline bool GMAPauseReq::has_ispause() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMAPauseReq::set_has_ispause() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMAPauseReq::clear_has_ispause() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMAPauseReq::clear_ispause() {
  ispause_ = false;
  clear_has_ispause();
}
inline bool GMAPauseReq::ispause() const {
  return ispause_;
}
inline void GMAPauseReq::set_ispause(bool value) {
  set_has_ispause();
  ispause_ = value;
}

// -------------------------------------------------------------------

// GMAPauseRsp

// required bool isPause = 1;
inline bool GMAPauseRsp::has_ispause() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMAPauseRsp::set_has_ispause() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMAPauseRsp::clear_has_ispause() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMAPauseRsp::clear_ispause() {
  ispause_ = false;
  clear_has_ispause();
}
inline bool GMAPauseRsp::ispause() const {
  return ispause_;
}
inline void GMAPauseRsp::set_ispause(bool value) {
  set_has_ispause();
  ispause_ = value;
}

// -------------------------------------------------------------------

// GMAPayReq

// -------------------------------------------------------------------

// GMAPayRsp

// required uint32 error = 1;
inline bool GMAPayRsp::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMAPayRsp::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMAPayRsp::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMAPayRsp::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 GMAPayRsp::error() const {
  return error_;
}
inline void GMAPayRsp::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// required uint32 privilege = 2;
inline bool GMAPayRsp::has_privilege() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMAPayRsp::set_has_privilege() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMAPayRsp::clear_has_privilege() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMAPayRsp::clear_privilege() {
  privilege_ = 0u;
  clear_has_privilege();
}
inline ::google::protobuf::uint32 GMAPayRsp::privilege() const {
  return privilege_;
}
inline void GMAPayRsp::set_privilege(::google::protobuf::uint32 value) {
  set_has_privilege();
  privilege_ = value;
}

// -------------------------------------------------------------------

// GMAEnterReq

// -------------------------------------------------------------------

// GMAGotoFloorReq

// required uint32 posIdx = 1;
inline bool GMAGotoFloorReq::has_posidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMAGotoFloorReq::set_has_posidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMAGotoFloorReq::clear_has_posidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMAGotoFloorReq::clear_posidx() {
  posidx_ = 0u;
  clear_has_posidx();
}
inline ::google::protobuf::uint32 GMAGotoFloorReq::posidx() const {
  return posidx_;
}
inline void GMAGotoFloorReq::set_posidx(::google::protobuf::uint32 value) {
  set_has_posidx();
  posidx_ = value;
}

// -------------------------------------------------------------------

// GMAGotoFloorRsp

// required uint32 error = 1;
inline bool GMAGotoFloorRsp::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMAGotoFloorRsp::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMAGotoFloorRsp::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMAGotoFloorRsp::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 GMAGotoFloorRsp::error() const {
  return error_;
}
inline void GMAGotoFloorRsp::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// GMATimeRechargeReq

// required uint32 itemId = 1;
inline bool GMATimeRechargeReq::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMATimeRechargeReq::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMATimeRechargeReq::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMATimeRechargeReq::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 GMATimeRechargeReq::itemid() const {
  return itemid_;
}
inline void GMATimeRechargeReq::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required uint32 count = 2;
inline bool GMATimeRechargeReq::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMATimeRechargeReq::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMATimeRechargeReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMATimeRechargeReq::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GMATimeRechargeReq::count() const {
  return count_;
}
inline void GMATimeRechargeReq::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// GMATimeRechargeRsp

// required uint32 error = 1;
inline bool GMATimeRechargeRsp::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMATimeRechargeRsp::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMATimeRechargeRsp::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMATimeRechargeRsp::clear_error() {
  error_ = 0u;
  clear_has_error();
}
inline ::google::protobuf::uint32 GMATimeRechargeRsp::error() const {
  return error_;
}
inline void GMATimeRechargeRsp::set_error(::google::protobuf::uint32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// GMAExitReq

// -------------------------------------------------------------------

// GMAResultReq

// -------------------------------------------------------------------

// GMAResultRsp

// repeated uint64 itemIds = 1;
inline int GMAResultRsp::itemids_size() const {
  return itemids_.size();
}
inline void GMAResultRsp::clear_itemids() {
  itemids_.Clear();
}
inline ::google::protobuf::uint64 GMAResultRsp::itemids(int index) const {
  return itemids_.Get(index);
}
inline void GMAResultRsp::set_itemids(int index, ::google::protobuf::uint64 value) {
  itemids_.Set(index, value);
}
inline void GMAResultRsp::add_itemids(::google::protobuf::uint64 value) {
  itemids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GMAResultRsp::itemids() const {
  return itemids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GMAResultRsp::mutable_itemids() {
  return &itemids_;
}

// repeated uint64 itemCounts = 2;
inline int GMAResultRsp::itemcounts_size() const {
  return itemcounts_.size();
}
inline void GMAResultRsp::clear_itemcounts() {
  itemcounts_.Clear();
}
inline ::google::protobuf::uint64 GMAResultRsp::itemcounts(int index) const {
  return itemcounts_.Get(index);
}
inline void GMAResultRsp::set_itemcounts(int index, ::google::protobuf::uint64 value) {
  itemcounts_.Set(index, value);
}
inline void GMAResultRsp::add_itemcounts(::google::protobuf::uint64 value) {
  itemcounts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GMAResultRsp::itemcounts() const {
  return itemcounts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GMAResultRsp::mutable_itemcounts() {
  return &itemcounts_;
}

// required uint64 timeUsed = 3;
inline bool GMAResultRsp::has_timeused() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMAResultRsp::set_has_timeused() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMAResultRsp::clear_has_timeused() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMAResultRsp::clear_timeused() {
  timeused_ = GOOGLE_ULONGLONG(0);
  clear_has_timeused();
}
inline ::google::protobuf::uint64 GMAResultRsp::timeused() const {
  return timeused_;
}
inline void GMAResultRsp::set_timeused(::google::protobuf::uint64 value) {
  set_has_timeused();
  timeused_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GodValleyBattle_2eproto__INCLUDED
