// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GodValleyBattle.proto

#ifndef PROTOBUF_GodValleyBattle_2eproto__INCLUDED
#define PROTOBUF_GodValleyBattle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "Com.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GodValleyBattle_2eproto();
void protobuf_AssignDesc_GodValleyBattle_2eproto();
void protobuf_ShutdownFile_GodValleyBattle_2eproto();

class GVBEnterReq;
class GVBEnterRsp;
class GVBSCrystalCollectReq;
class GVBCrystallSubmitReq;
class GVBExitReq;
class GVBMonster;
class GVBDataReq;
class GVBDatasRsp;
class GVBRankReq;
class GVBRankPlayerInfo;
class GVBRankRsp;
class GVBPlayerInfo;
class GVBResultBC;
class GVBM1AttrChgBC;
class GVBM2AttrChgBC;
class GVBM3AttrChgBC;
class GVBSelfInfoUpdateNT;
class GVBKillPlayerBC;
class GVBResPointChg;
class GVBCrystalStateBC;
class GVBCrystalCollectReq;
class GVBCrystalCollectRsp;
class GVBDailyScoreDataReq;
class GVBDailyScoreDataRsp;

// ===================================================================

class GVBEnterReq : public ::google::protobuf::Message {
 public:
  GVBEnterReq();
  virtual ~GVBEnterReq();

  GVBEnterReq(const GVBEnterReq& from);

  inline GVBEnterReq& operator=(const GVBEnterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBEnterReq& default_instance();

  void Swap(GVBEnterReq* other);

  // implements Message ----------------------------------------------

  GVBEnterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBEnterReq& from);
  void MergeFrom(const GVBEnterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unused = 1;
  inline bool has_unused() const;
  inline void clear_unused();
  static const int kUnusedFieldNumber = 1;
  inline ::google::protobuf::uint32 unused() const;
  inline void set_unused(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBEnterReq)
 private:
  inline void set_has_unused();
  inline void clear_has_unused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 unused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBEnterReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBEnterRsp : public ::google::protobuf::Message {
 public:
  GVBEnterRsp();
  virtual ~GVBEnterRsp();

  GVBEnterRsp(const GVBEnterRsp& from);

  inline GVBEnterRsp& operator=(const GVBEnterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBEnterRsp& default_instance();

  void Swap(GVBEnterRsp* other);

  // implements Message ----------------------------------------------

  GVBEnterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBEnterRsp& from);
  void MergeFrom(const GVBEnterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBEnterRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBEnterRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBSCrystalCollectReq : public ::google::protobuf::Message {
 public:
  GVBSCrystalCollectReq();
  virtual ~GVBSCrystalCollectReq();

  GVBSCrystalCollectReq(const GVBSCrystalCollectReq& from);

  inline GVBSCrystalCollectReq& operator=(const GVBSCrystalCollectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBSCrystalCollectReq& default_instance();

  void Swap(GVBSCrystalCollectReq* other);

  // implements Message ----------------------------------------------

  GVBSCrystalCollectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBSCrystalCollectReq& from);
  void MergeFrom(const GVBSCrystalCollectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBSCrystalCollectReq)
 private:
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBSCrystalCollectReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBCrystallSubmitReq : public ::google::protobuf::Message {
 public:
  GVBCrystallSubmitReq();
  virtual ~GVBCrystallSubmitReq();

  GVBCrystallSubmitReq(const GVBCrystallSubmitReq& from);

  inline GVBCrystallSubmitReq& operator=(const GVBCrystallSubmitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBCrystallSubmitReq& default_instance();

  void Swap(GVBCrystallSubmitReq* other);

  // implements Message ----------------------------------------------

  GVBCrystallSubmitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBCrystallSubmitReq& from);
  void MergeFrom(const GVBCrystallSubmitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 monsterEid = 1;
  inline bool has_monstereid() const;
  inline void clear_monstereid();
  static const int kMonsterEidFieldNumber = 1;
  inline ::google::protobuf::uint64 monstereid() const;
  inline void set_monstereid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBCrystallSubmitReq)
 private:
  inline void set_has_monstereid();
  inline void clear_has_monstereid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 monstereid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBCrystallSubmitReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBExitReq : public ::google::protobuf::Message {
 public:
  GVBExitReq();
  virtual ~GVBExitReq();

  GVBExitReq(const GVBExitReq& from);

  inline GVBExitReq& operator=(const GVBExitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBExitReq& default_instance();

  void Swap(GVBExitReq* other);

  // implements Message ----------------------------------------------

  GVBExitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBExitReq& from);
  void MergeFrom(const GVBExitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unused = 1;
  inline bool has_unused() const;
  inline void clear_unused();
  static const int kUnusedFieldNumber = 1;
  inline ::google::protobuf::uint32 unused() const;
  inline void set_unused(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBExitReq)
 private:
  inline void set_has_unused();
  inline void clear_has_unused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 unused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBExitReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBMonster : public ::google::protobuf::Message {
 public:
  GVBMonster();
  virtual ~GVBMonster();

  GVBMonster(const GVBMonster& from);

  inline GVBMonster& operator=(const GVBMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBMonster& default_instance();

  void Swap(GVBMonster* other);

  // implements Message ----------------------------------------------

  GVBMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBMonster& from);
  void MergeFrom(const GVBMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // required uint64 hp = 2;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 2;
  inline ::google::protobuf::uint64 hp() const;
  inline void set_hp(::google::protobuf::uint64 value);

  // required uint64 hpmax = 3;
  inline bool has_hpmax() const;
  inline void clear_hpmax();
  static const int kHpmaxFieldNumber = 3;
  inline ::google::protobuf::uint64 hpmax() const;
  inline void set_hpmax(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBMonster)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_hpmax();
  inline void clear_has_hpmax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 hp_;
  ::google::protobuf::uint64 hpmax_;
  ::google::protobuf::uint32 team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBMonster* default_instance_;
};
// -------------------------------------------------------------------

class GVBDataReq : public ::google::protobuf::Message {
 public:
  GVBDataReq();
  virtual ~GVBDataReq();

  GVBDataReq(const GVBDataReq& from);

  inline GVBDataReq& operator=(const GVBDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBDataReq& default_instance();

  void Swap(GVBDataReq* other);

  // implements Message ----------------------------------------------

  GVBDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBDataReq& from);
  void MergeFrom(const GVBDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unused = 1;
  inline bool has_unused() const;
  inline void clear_unused();
  static const int kUnusedFieldNumber = 1;
  inline ::google::protobuf::uint32 unused() const;
  inline void set_unused(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBDataReq)
 private:
  inline void set_has_unused();
  inline void clear_has_unused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 unused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBDataReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBDatasRsp : public ::google::protobuf::Message {
 public:
  GVBDatasRsp();
  virtual ~GVBDatasRsp();

  GVBDatasRsp(const GVBDatasRsp& from);

  inline GVBDatasRsp& operator=(const GVBDatasRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBDatasRsp& default_instance();

  void Swap(GVBDatasRsp* other);

  // implements Message ----------------------------------------------

  GVBDatasRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBDatasRsp& from);
  void MergeFrom(const GVBDatasRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // required uint32 countdown = 2;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 2;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);

  // optional uint32 team1Score = 3;
  inline bool has_team1score() const;
  inline void clear_team1score();
  static const int kTeam1ScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 team1score() const;
  inline void set_team1score(::google::protobuf::uint32 value);

  // optional uint32 team2Score = 4;
  inline bool has_team2score() const;
  inline void clear_team2score();
  static const int kTeam2ScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 team2score() const;
  inline void set_team2score(::google::protobuf::uint32 value);

  // optional uint32 selfScore = 5;
  inline bool has_selfscore() const;
  inline void clear_selfscore();
  static const int kSelfScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 selfscore() const;
  inline void set_selfscore(::google::protobuf::uint32 value);

  // optional uint32 selfTeam = 6;
  inline bool has_selfteam() const;
  inline void clear_selfteam();
  static const int kSelfTeamFieldNumber = 6;
  inline ::google::protobuf::uint32 selfteam() const;
  inline void set_selfteam(::google::protobuf::uint32 value);

  // optional uint32 crystalState = 7;
  inline bool has_crystalstate() const;
  inline void clear_crystalstate();
  static const int kCrystalStateFieldNumber = 7;
  inline ::google::protobuf::uint32 crystalstate() const;
  inline void set_crystalstate(::google::protobuf::uint32 value);

  // optional uint64 crystalOwner = 8;
  inline bool has_crystalowner() const;
  inline void clear_crystalowner();
  static const int kCrystalOwnerFieldNumber = 8;
  inline ::google::protobuf::uint64 crystalowner() const;
  inline void set_crystalowner(::google::protobuf::uint64 value);

  // optional uint32 crystalBornCountdown = 9;
  inline bool has_crystalborncountdown() const;
  inline void clear_crystalborncountdown();
  static const int kCrystalBornCountdownFieldNumber = 9;
  inline ::google::protobuf::uint32 crystalborncountdown() const;
  inline void set_crystalborncountdown(::google::protobuf::uint32 value);

  // optional uint32 crystalOwnerTeam = 10;
  inline bool has_crystalownerteam() const;
  inline void clear_crystalownerteam();
  static const int kCrystalOwnerTeamFieldNumber = 10;
  inline ::google::protobuf::uint32 crystalownerteam() const;
  inline void set_crystalownerteam(::google::protobuf::uint32 value);

  // optional uint32 crystalOwnerProfession = 11;
  inline bool has_crystalownerprofession() const;
  inline void clear_crystalownerprofession();
  static const int kCrystalOwnerProfessionFieldNumber = 11;
  inline ::google::protobuf::uint32 crystalownerprofession() const;
  inline void set_crystalownerprofession(::google::protobuf::uint32 value);

  // optional .proto_ff.GVBMonster m1 = 12;
  inline bool has_m1() const;
  inline void clear_m1();
  static const int kM1FieldNumber = 12;
  inline const ::proto_ff::GVBMonster& m1() const;
  inline ::proto_ff::GVBMonster* mutable_m1();
  inline ::proto_ff::GVBMonster* release_m1();
  inline void set_allocated_m1(::proto_ff::GVBMonster* m1);

  // optional .proto_ff.GVBMonster m2 = 13;
  inline bool has_m2() const;
  inline void clear_m2();
  static const int kM2FieldNumber = 13;
  inline const ::proto_ff::GVBMonster& m2() const;
  inline ::proto_ff::GVBMonster* mutable_m2();
  inline ::proto_ff::GVBMonster* release_m2();
  inline void set_allocated_m2(::proto_ff::GVBMonster* m2);

  // optional .proto_ff.GVBMonster m3 = 14;
  inline bool has_m3() const;
  inline void clear_m3();
  static const int kM3FieldNumber = 14;
  inline const ::proto_ff::GVBMonster& m3() const;
  inline ::proto_ff::GVBMonster* mutable_m3();
  inline ::proto_ff::GVBMonster* release_m3();
  inline void set_allocated_m3(::proto_ff::GVBMonster* m3);

  // optional uint32 killCount = 15;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillCountFieldNumber = 15;
  inline ::google::protobuf::uint32 killcount() const;
  inline void set_killcount(::google::protobuf::uint32 value);

  // optional uint32 killsCount = 16;
  inline bool has_killscount() const;
  inline void clear_killscount();
  static const int kKillsCountFieldNumber = 16;
  inline ::google::protobuf::uint32 killscount() const;
  inline void set_killscount(::google::protobuf::uint32 value);

  // optional uint32 breakKillsCount = 17;
  inline bool has_breakkillscount() const;
  inline void clear_breakkillscount();
  static const int kBreakKillsCountFieldNumber = 17;
  inline ::google::protobuf::uint32 breakkillscount() const;
  inline void set_breakkillscount(::google::protobuf::uint32 value);

  // optional uint32 interceptCount = 18;
  inline bool has_interceptcount() const;
  inline void clear_interceptcount();
  static const int kInterceptCountFieldNumber = 18;
  inline ::google::protobuf::uint32 interceptcount() const;
  inline void set_interceptcount(::google::protobuf::uint32 value);

  // optional uint32 crystalCount = 19;
  inline bool has_crystalcount() const;
  inline void clear_crystalcount();
  static const int kCrystalCountFieldNumber = 19;
  inline ::google::protobuf::uint32 crystalcount() const;
  inline void set_crystalcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBDatasRsp)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_team1score();
  inline void clear_has_team1score();
  inline void set_has_team2score();
  inline void clear_has_team2score();
  inline void set_has_selfscore();
  inline void clear_has_selfscore();
  inline void set_has_selfteam();
  inline void clear_has_selfteam();
  inline void set_has_crystalstate();
  inline void clear_has_crystalstate();
  inline void set_has_crystalowner();
  inline void clear_has_crystalowner();
  inline void set_has_crystalborncountdown();
  inline void clear_has_crystalborncountdown();
  inline void set_has_crystalownerteam();
  inline void clear_has_crystalownerteam();
  inline void set_has_crystalownerprofession();
  inline void clear_has_crystalownerprofession();
  inline void set_has_m1();
  inline void clear_has_m1();
  inline void set_has_m2();
  inline void clear_has_m2();
  inline void set_has_m3();
  inline void clear_has_m3();
  inline void set_has_killcount();
  inline void clear_has_killcount();
  inline void set_has_killscount();
  inline void clear_has_killscount();
  inline void set_has_breakkillscount();
  inline void clear_has_breakkillscount();
  inline void set_has_interceptcount();
  inline void clear_has_interceptcount();
  inline void set_has_crystalcount();
  inline void clear_has_crystalcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 countdown_;
  ::google::protobuf::uint32 team1score_;
  ::google::protobuf::uint32 team2score_;
  ::google::protobuf::uint32 selfscore_;
  ::google::protobuf::uint32 selfteam_;
  ::google::protobuf::uint64 crystalowner_;
  ::google::protobuf::uint32 crystalstate_;
  ::google::protobuf::uint32 crystalborncountdown_;
  ::google::protobuf::uint32 crystalownerteam_;
  ::google::protobuf::uint32 crystalownerprofession_;
  ::proto_ff::GVBMonster* m1_;
  ::proto_ff::GVBMonster* m2_;
  ::proto_ff::GVBMonster* m3_;
  ::google::protobuf::uint32 killcount_;
  ::google::protobuf::uint32 killscount_;
  ::google::protobuf::uint32 breakkillscount_;
  ::google::protobuf::uint32 interceptcount_;
  ::google::protobuf::uint32 crystalcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBDatasRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBRankReq : public ::google::protobuf::Message {
 public:
  GVBRankReq();
  virtual ~GVBRankReq();

  GVBRankReq(const GVBRankReq& from);

  inline GVBRankReq& operator=(const GVBRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBRankReq& default_instance();

  void Swap(GVBRankReq* other);

  // implements Message ----------------------------------------------

  GVBRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBRankReq& from);
  void MergeFrom(const GVBRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unused = 1;
  inline bool has_unused() const;
  inline void clear_unused();
  static const int kUnusedFieldNumber = 1;
  inline ::google::protobuf::uint32 unused() const;
  inline void set_unused(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBRankReq)
 private:
  inline void set_has_unused();
  inline void clear_has_unused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 unused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBRankReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBRankPlayerInfo : public ::google::protobuf::Message {
 public:
  GVBRankPlayerInfo();
  virtual ~GVBRankPlayerInfo();

  GVBRankPlayerInfo(const GVBRankPlayerInfo& from);

  inline GVBRankPlayerInfo& operator=(const GVBRankPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBRankPlayerInfo& default_instance();

  void Swap(GVBRankPlayerInfo* other);

  // implements Message ----------------------------------------------

  GVBRankPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBRankPlayerInfo& from);
  void MergeFrom(const GVBRankPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBRankPlayerInfo)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBRankPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class GVBRankRsp : public ::google::protobuf::Message {
 public:
  GVBRankRsp();
  virtual ~GVBRankRsp();

  GVBRankRsp(const GVBRankRsp& from);

  inline GVBRankRsp& operator=(const GVBRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBRankRsp& default_instance();

  void Swap(GVBRankRsp* other);

  // implements Message ----------------------------------------------

  GVBRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBRankRsp& from);
  void MergeFrom(const GVBRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GVBRankPlayerInfo players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::proto_ff::GVBRankPlayerInfo& players(int index) const;
  inline ::proto_ff::GVBRankPlayerInfo* mutable_players(int index);
  inline ::proto_ff::GVBRankPlayerInfo* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBRankPlayerInfo >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBRankPlayerInfo >*
      mutable_players();

  // @@protoc_insertion_point(class_scope:proto_ff.GVBRankRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBRankPlayerInfo > players_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBRankRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBPlayerInfo : public ::google::protobuf::Message {
 public:
  GVBPlayerInfo();
  virtual ~GVBPlayerInfo();

  GVBPlayerInfo(const GVBPlayerInfo& from);

  inline GVBPlayerInfo& operator=(const GVBPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBPlayerInfo& default_instance();

  void Swap(GVBPlayerInfo* other);

  // implements Message ----------------------------------------------

  GVBPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBPlayerInfo& from);
  void MergeFrom(const GVBPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required uint32 killCount = 2;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillCountFieldNumber = 2;
  inline ::google::protobuf::uint32 killcount() const;
  inline void set_killcount(::google::protobuf::uint32 value);

  // required uint32 dieCount = 3;
  inline bool has_diecount() const;
  inline void clear_diecount();
  static const int kDieCountFieldNumber = 3;
  inline ::google::protobuf::uint32 diecount() const;
  inline void set_diecount(::google::protobuf::uint32 value);

  // required uint32 interceptCount = 4;
  inline bool has_interceptcount() const;
  inline void clear_interceptcount();
  static const int kInterceptCountFieldNumber = 4;
  inline ::google::protobuf::uint32 interceptcount() const;
  inline void set_interceptcount(::google::protobuf::uint32 value);

  // required uint32 crystalCount = 5;
  inline bool has_crystalcount() const;
  inline void clear_crystalcount();
  static const int kCrystalCountFieldNumber = 5;
  inline ::google::protobuf::uint32 crystalcount() const;
  inline void set_crystalcount(::google::protobuf::uint32 value);

  // required string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 team = 7;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 7;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBPlayerInfo)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_killcount();
  inline void clear_has_killcount();
  inline void set_has_diecount();
  inline void clear_has_diecount();
  inline void set_has_interceptcount();
  inline void clear_has_interceptcount();
  inline void set_has_crystalcount();
  inline void clear_has_crystalcount();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 killcount_;
  ::google::protobuf::uint32 diecount_;
  ::google::protobuf::uint32 interceptcount_;
  ::std::string* name_;
  ::google::protobuf::uint32 crystalcount_;
  ::google::protobuf::uint32 team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class GVBResultBC : public ::google::protobuf::Message {
 public:
  GVBResultBC();
  virtual ~GVBResultBC();

  GVBResultBC(const GVBResultBC& from);

  inline GVBResultBC& operator=(const GVBResultBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBResultBC& default_instance();

  void Swap(GVBResultBC* other);

  // implements Message ----------------------------------------------

  GVBResultBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBResultBC& from);
  void MergeFrom(const GVBResultBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 winTeam = 1;
  inline bool has_winteam() const;
  inline void clear_winteam();
  static const int kWinTeamFieldNumber = 1;
  inline ::google::protobuf::uint32 winteam() const;
  inline void set_winteam(::google::protobuf::uint32 value);

  // repeated .proto_ff.GVBPlayerInfo players = 2;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 2;
  inline const ::proto_ff::GVBPlayerInfo& players(int index) const;
  inline ::proto_ff::GVBPlayerInfo* mutable_players(int index);
  inline ::proto_ff::GVBPlayerInfo* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBPlayerInfo >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBPlayerInfo >*
      mutable_players();

  // @@protoc_insertion_point(class_scope:proto_ff.GVBResultBC)
 private:
  inline void set_has_winteam();
  inline void clear_has_winteam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBPlayerInfo > players_;
  ::google::protobuf::uint32 winteam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBResultBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBM1AttrChgBC : public ::google::protobuf::Message {
 public:
  GVBM1AttrChgBC();
  virtual ~GVBM1AttrChgBC();

  GVBM1AttrChgBC(const GVBM1AttrChgBC& from);

  inline GVBM1AttrChgBC& operator=(const GVBM1AttrChgBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBM1AttrChgBC& default_instance();

  void Swap(GVBM1AttrChgBC* other);

  // implements Message ----------------------------------------------

  GVBM1AttrChgBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBM1AttrChgBC& from);
  void MergeFrom(const GVBM1AttrChgBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.GVBMonster m1 = 1;
  inline bool has_m1() const;
  inline void clear_m1();
  static const int kM1FieldNumber = 1;
  inline const ::proto_ff::GVBMonster& m1() const;
  inline ::proto_ff::GVBMonster* mutable_m1();
  inline ::proto_ff::GVBMonster* release_m1();
  inline void set_allocated_m1(::proto_ff::GVBMonster* m1);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBM1AttrChgBC)
 private:
  inline void set_has_m1();
  inline void clear_has_m1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GVBMonster* m1_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBM1AttrChgBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBM2AttrChgBC : public ::google::protobuf::Message {
 public:
  GVBM2AttrChgBC();
  virtual ~GVBM2AttrChgBC();

  GVBM2AttrChgBC(const GVBM2AttrChgBC& from);

  inline GVBM2AttrChgBC& operator=(const GVBM2AttrChgBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBM2AttrChgBC& default_instance();

  void Swap(GVBM2AttrChgBC* other);

  // implements Message ----------------------------------------------

  GVBM2AttrChgBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBM2AttrChgBC& from);
  void MergeFrom(const GVBM2AttrChgBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.GVBMonster m2 = 1;
  inline bool has_m2() const;
  inline void clear_m2();
  static const int kM2FieldNumber = 1;
  inline const ::proto_ff::GVBMonster& m2() const;
  inline ::proto_ff::GVBMonster* mutable_m2();
  inline ::proto_ff::GVBMonster* release_m2();
  inline void set_allocated_m2(::proto_ff::GVBMonster* m2);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBM2AttrChgBC)
 private:
  inline void set_has_m2();
  inline void clear_has_m2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GVBMonster* m2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBM2AttrChgBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBM3AttrChgBC : public ::google::protobuf::Message {
 public:
  GVBM3AttrChgBC();
  virtual ~GVBM3AttrChgBC();

  GVBM3AttrChgBC(const GVBM3AttrChgBC& from);

  inline GVBM3AttrChgBC& operator=(const GVBM3AttrChgBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBM3AttrChgBC& default_instance();

  void Swap(GVBM3AttrChgBC* other);

  // implements Message ----------------------------------------------

  GVBM3AttrChgBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBM3AttrChgBC& from);
  void MergeFrom(const GVBM3AttrChgBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.GVBMonster m3 = 1;
  inline bool has_m3() const;
  inline void clear_m3();
  static const int kM3FieldNumber = 1;
  inline const ::proto_ff::GVBMonster& m3() const;
  inline ::proto_ff::GVBMonster* mutable_m3();
  inline ::proto_ff::GVBMonster* release_m3();
  inline void set_allocated_m3(::proto_ff::GVBMonster* m3);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBM3AttrChgBC)
 private:
  inline void set_has_m3();
  inline void clear_has_m3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GVBMonster* m3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBM3AttrChgBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBSelfInfoUpdateNT : public ::google::protobuf::Message {
 public:
  GVBSelfInfoUpdateNT();
  virtual ~GVBSelfInfoUpdateNT();

  GVBSelfInfoUpdateNT(const GVBSelfInfoUpdateNT& from);

  inline GVBSelfInfoUpdateNT& operator=(const GVBSelfInfoUpdateNT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBSelfInfoUpdateNT& default_instance();

  void Swap(GVBSelfInfoUpdateNT* other);

  // implements Message ----------------------------------------------

  GVBSelfInfoUpdateNT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBSelfInfoUpdateNT& from);
  void MergeFrom(const GVBSelfInfoUpdateNT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 killCount = 1;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillCountFieldNumber = 1;
  inline ::google::protobuf::uint32 killcount() const;
  inline void set_killcount(::google::protobuf::uint32 value);

  // optional uint32 killsCount = 2;
  inline bool has_killscount() const;
  inline void clear_killscount();
  static const int kKillsCountFieldNumber = 2;
  inline ::google::protobuf::uint32 killscount() const;
  inline void set_killscount(::google::protobuf::uint32 value);

  // optional uint32 breakKillsCount = 3;
  inline bool has_breakkillscount() const;
  inline void clear_breakkillscount();
  static const int kBreakKillsCountFieldNumber = 3;
  inline ::google::protobuf::uint32 breakkillscount() const;
  inline void set_breakkillscount(::google::protobuf::uint32 value);

  // optional uint32 interceptCount = 4;
  inline bool has_interceptcount() const;
  inline void clear_interceptcount();
  static const int kInterceptCountFieldNumber = 4;
  inline ::google::protobuf::uint32 interceptcount() const;
  inline void set_interceptcount(::google::protobuf::uint32 value);

  // optional uint32 crystalCount = 5;
  inline bool has_crystalcount() const;
  inline void clear_crystalcount();
  static const int kCrystalCountFieldNumber = 5;
  inline ::google::protobuf::uint32 crystalcount() const;
  inline void set_crystalcount(::google::protobuf::uint32 value);

  // optional uint32 selfScore = 6;
  inline bool has_selfscore() const;
  inline void clear_selfscore();
  static const int kSelfScoreFieldNumber = 6;
  inline ::google::protobuf::uint32 selfscore() const;
  inline void set_selfscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBSelfInfoUpdateNT)
 private:
  inline void set_has_killcount();
  inline void clear_has_killcount();
  inline void set_has_killscount();
  inline void clear_has_killscount();
  inline void set_has_breakkillscount();
  inline void clear_has_breakkillscount();
  inline void set_has_interceptcount();
  inline void clear_has_interceptcount();
  inline void set_has_crystalcount();
  inline void clear_has_crystalcount();
  inline void set_has_selfscore();
  inline void clear_has_selfscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 killcount_;
  ::google::protobuf::uint32 killscount_;
  ::google::protobuf::uint32 breakkillscount_;
  ::google::protobuf::uint32 interceptcount_;
  ::google::protobuf::uint32 crystalcount_;
  ::google::protobuf::uint32 selfscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBSelfInfoUpdateNT* default_instance_;
};
// -------------------------------------------------------------------

class GVBKillPlayerBC : public ::google::protobuf::Message {
 public:
  GVBKillPlayerBC();
  virtual ~GVBKillPlayerBC();

  GVBKillPlayerBC(const GVBKillPlayerBC& from);

  inline GVBKillPlayerBC& operator=(const GVBKillPlayerBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBKillPlayerBC& default_instance();

  void Swap(GVBKillPlayerBC* other);

  // implements Message ----------------------------------------------

  GVBKillPlayerBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBKillPlayerBC& from);
  void MergeFrom(const GVBKillPlayerBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 killerTeam = 1;
  inline bool has_killerteam() const;
  inline void clear_killerteam();
  static const int kKillerTeamFieldNumber = 1;
  inline ::google::protobuf::uint32 killerteam() const;
  inline void set_killerteam(::google::protobuf::uint32 value);

  // required uint32 killedTeam = 2;
  inline bool has_killedteam() const;
  inline void clear_killedteam();
  static const int kKilledTeamFieldNumber = 2;
  inline ::google::protobuf::uint32 killedteam() const;
  inline void set_killedteam(::google::protobuf::uint32 value);

  // required uint32 killerProf = 3;
  inline bool has_killerprof() const;
  inline void clear_killerprof();
  static const int kKillerProfFieldNumber = 3;
  inline ::google::protobuf::uint32 killerprof() const;
  inline void set_killerprof(::google::protobuf::uint32 value);

  // required uint32 killedProf = 4;
  inline bool has_killedprof() const;
  inline void clear_killedprof();
  static const int kKilledProfFieldNumber = 4;
  inline ::google::protobuf::uint32 killedprof() const;
  inline void set_killedprof(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBKillPlayerBC)
 private:
  inline void set_has_killerteam();
  inline void clear_has_killerteam();
  inline void set_has_killedteam();
  inline void clear_has_killedteam();
  inline void set_has_killerprof();
  inline void clear_has_killerprof();
  inline void set_has_killedprof();
  inline void clear_has_killedprof();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 killerteam_;
  ::google::protobuf::uint32 killedteam_;
  ::google::protobuf::uint32 killerprof_;
  ::google::protobuf::uint32 killedprof_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBKillPlayerBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBResPointChg : public ::google::protobuf::Message {
 public:
  GVBResPointChg();
  virtual ~GVBResPointChg();

  GVBResPointChg(const GVBResPointChg& from);

  inline GVBResPointChg& operator=(const GVBResPointChg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBResPointChg& default_instance();

  void Swap(GVBResPointChg* other);

  // implements Message ----------------------------------------------

  GVBResPointChg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBResPointChg& from);
  void MergeFrom(const GVBResPointChg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 team1Score = 1;
  inline bool has_team1score() const;
  inline void clear_team1score();
  static const int kTeam1ScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 team1score() const;
  inline void set_team1score(::google::protobuf::uint32 value);

  // required uint32 team2Score = 2;
  inline bool has_team2score() const;
  inline void clear_team2score();
  static const int kTeam2ScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 team2score() const;
  inline void set_team2score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBResPointChg)
 private:
  inline void set_has_team1score();
  inline void clear_has_team1score();
  inline void set_has_team2score();
  inline void clear_has_team2score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 team1score_;
  ::google::protobuf::uint32 team2score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBResPointChg* default_instance_;
};
// -------------------------------------------------------------------

class GVBCrystalStateBC : public ::google::protobuf::Message {
 public:
  GVBCrystalStateBC();
  virtual ~GVBCrystalStateBC();

  GVBCrystalStateBC(const GVBCrystalStateBC& from);

  inline GVBCrystalStateBC& operator=(const GVBCrystalStateBC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBCrystalStateBC& default_instance();

  void Swap(GVBCrystalStateBC* other);

  // implements Message ----------------------------------------------

  GVBCrystalStateBC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBCrystalStateBC& from);
  void MergeFrom(const GVBCrystalStateBC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 crystalState = 1;
  inline bool has_crystalstate() const;
  inline void clear_crystalstate();
  static const int kCrystalStateFieldNumber = 1;
  inline ::google::protobuf::uint32 crystalstate() const;
  inline void set_crystalstate(::google::protobuf::uint32 value);

  // required uint32 crystalBornCountdown = 2;
  inline bool has_crystalborncountdown() const;
  inline void clear_crystalborncountdown();
  static const int kCrystalBornCountdownFieldNumber = 2;
  inline ::google::protobuf::uint32 crystalborncountdown() const;
  inline void set_crystalborncountdown(::google::protobuf::uint32 value);

  // optional uint64 crystalOwner = 3;
  inline bool has_crystalowner() const;
  inline void clear_crystalowner();
  static const int kCrystalOwnerFieldNumber = 3;
  inline ::google::protobuf::uint64 crystalowner() const;
  inline void set_crystalowner(::google::protobuf::uint64 value);

  // optional uint32 crystalOwnerTeam = 4;
  inline bool has_crystalownerteam() const;
  inline void clear_crystalownerteam();
  static const int kCrystalOwnerTeamFieldNumber = 4;
  inline ::google::protobuf::uint32 crystalownerteam() const;
  inline void set_crystalownerteam(::google::protobuf::uint32 value);

  // optional uint32 crystalOwnerProfession = 5;
  inline bool has_crystalownerprofession() const;
  inline void clear_crystalownerprofession();
  static const int kCrystalOwnerProfessionFieldNumber = 5;
  inline ::google::protobuf::uint32 crystalownerprofession() const;
  inline void set_crystalownerprofession(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBCrystalStateBC)
 private:
  inline void set_has_crystalstate();
  inline void clear_has_crystalstate();
  inline void set_has_crystalborncountdown();
  inline void clear_has_crystalborncountdown();
  inline void set_has_crystalowner();
  inline void clear_has_crystalowner();
  inline void set_has_crystalownerteam();
  inline void clear_has_crystalownerteam();
  inline void set_has_crystalownerprofession();
  inline void clear_has_crystalownerprofession();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 crystalstate_;
  ::google::protobuf::uint32 crystalborncountdown_;
  ::google::protobuf::uint64 crystalowner_;
  ::google::protobuf::uint32 crystalownerteam_;
  ::google::protobuf::uint32 crystalownerprofession_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBCrystalStateBC* default_instance_;
};
// -------------------------------------------------------------------

class GVBCrystalCollectReq : public ::google::protobuf::Message {
 public:
  GVBCrystalCollectReq();
  virtual ~GVBCrystalCollectReq();

  GVBCrystalCollectReq(const GVBCrystalCollectReq& from);

  inline GVBCrystalCollectReq& operator=(const GVBCrystalCollectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBCrystalCollectReq& default_instance();

  void Swap(GVBCrystalCollectReq* other);

  // implements Message ----------------------------------------------

  GVBCrystalCollectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBCrystalCollectReq& from);
  void MergeFrom(const GVBCrystalCollectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBCrystalCollectReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBCrystalCollectReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBCrystalCollectRsp : public ::google::protobuf::Message {
 public:
  GVBCrystalCollectRsp();
  virtual ~GVBCrystalCollectRsp();

  GVBCrystalCollectRsp(const GVBCrystalCollectRsp& from);

  inline GVBCrystalCollectRsp& operator=(const GVBCrystalCollectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBCrystalCollectRsp& default_instance();

  void Swap(GVBCrystalCollectRsp* other);

  // implements Message ----------------------------------------------

  GVBCrystalCollectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBCrystalCollectRsp& from);
  void MergeFrom(const GVBCrystalCollectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBCrystalCollectRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBCrystalCollectRsp* default_instance_;
};
// -------------------------------------------------------------------

class GVBDailyScoreDataReq : public ::google::protobuf::Message {
 public:
  GVBDailyScoreDataReq();
  virtual ~GVBDailyScoreDataReq();

  GVBDailyScoreDataReq(const GVBDailyScoreDataReq& from);

  inline GVBDailyScoreDataReq& operator=(const GVBDailyScoreDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBDailyScoreDataReq& default_instance();

  void Swap(GVBDailyScoreDataReq* other);

  // implements Message ----------------------------------------------

  GVBDailyScoreDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBDailyScoreDataReq& from);
  void MergeFrom(const GVBDailyScoreDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.GVBDailyScoreDataReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBDailyScoreDataReq* default_instance_;
};
// -------------------------------------------------------------------

class GVBDailyScoreDataRsp : public ::google::protobuf::Message {
 public:
  GVBDailyScoreDataRsp();
  virtual ~GVBDailyScoreDataRsp();

  GVBDailyScoreDataRsp(const GVBDailyScoreDataRsp& from);

  inline GVBDailyScoreDataRsp& operator=(const GVBDailyScoreDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVBDailyScoreDataRsp& default_instance();

  void Swap(GVBDailyScoreDataRsp* other);

  // implements Message ----------------------------------------------

  GVBDailyScoreDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVBDailyScoreDataRsp& from);
  void MergeFrom(const GVBDailyScoreDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 rewardsState = 1;
  inline int rewardsstate_size() const;
  inline void clear_rewardsstate();
  static const int kRewardsStateFieldNumber = 1;
  inline ::google::protobuf::uint32 rewardsstate(int index) const;
  inline void set_rewardsstate(int index, ::google::protobuf::uint32 value);
  inline void add_rewardsstate(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewardsstate() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewardsstate();

  // required uint32 dailyScore = 2;
  inline bool has_dailyscore() const;
  inline void clear_dailyscore();
  static const int kDailyScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 dailyscore() const;
  inline void set_dailyscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GVBDailyScoreDataRsp)
 private:
  inline void set_has_dailyscore();
  inline void clear_has_dailyscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewardsstate_;
  ::google::protobuf::uint32 dailyscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GodValleyBattle_2eproto();
  friend void protobuf_AssignDesc_GodValleyBattle_2eproto();
  friend void protobuf_ShutdownFile_GodValleyBattle_2eproto();

  void InitAsDefaultInstance();
  static GVBDailyScoreDataRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// GVBEnterReq

// required uint32 unused = 1;
inline bool GVBEnterReq::has_unused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBEnterReq::set_has_unused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBEnterReq::clear_has_unused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBEnterReq::clear_unused() {
  unused_ = 0u;
  clear_has_unused();
}
inline ::google::protobuf::uint32 GVBEnterReq::unused() const {
  return unused_;
}
inline void GVBEnterReq::set_unused(::google::protobuf::uint32 value) {
  set_has_unused();
  unused_ = value;
}

// -------------------------------------------------------------------

// GVBEnterRsp

// required uint32 Result = 1;
inline bool GVBEnterRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBEnterRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBEnterRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBEnterRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GVBEnterRsp::result() const {
  return result_;
}
inline void GVBEnterRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GVBSCrystalCollectReq

// required uint32 number = 1;
inline bool GVBSCrystalCollectReq::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBSCrystalCollectReq::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBSCrystalCollectReq::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBSCrystalCollectReq::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 GVBSCrystalCollectReq::number() const {
  return number_;
}
inline void GVBSCrystalCollectReq::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// GVBCrystallSubmitReq

// required uint64 monsterEid = 1;
inline bool GVBCrystallSubmitReq::has_monstereid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBCrystallSubmitReq::set_has_monstereid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBCrystallSubmitReq::clear_has_monstereid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBCrystallSubmitReq::clear_monstereid() {
  monstereid_ = GOOGLE_ULONGLONG(0);
  clear_has_monstereid();
}
inline ::google::protobuf::uint64 GVBCrystallSubmitReq::monstereid() const {
  return monstereid_;
}
inline void GVBCrystallSubmitReq::set_monstereid(::google::protobuf::uint64 value) {
  set_has_monstereid();
  monstereid_ = value;
}

// -------------------------------------------------------------------

// GVBExitReq

// required uint32 unused = 1;
inline bool GVBExitReq::has_unused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBExitReq::set_has_unused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBExitReq::clear_has_unused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBExitReq::clear_unused() {
  unused_ = 0u;
  clear_has_unused();
}
inline ::google::protobuf::uint32 GVBExitReq::unused() const {
  return unused_;
}
inline void GVBExitReq::set_unused(::google::protobuf::uint32 value) {
  set_has_unused();
  unused_ = value;
}

// -------------------------------------------------------------------

// GVBMonster

// required uint32 team = 1;
inline bool GVBMonster::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBMonster::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBMonster::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBMonster::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 GVBMonster::team() const {
  return team_;
}
inline void GVBMonster::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
}

// required uint64 hp = 2;
inline bool GVBMonster::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBMonster::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBMonster::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBMonster::clear_hp() {
  hp_ = GOOGLE_ULONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::uint64 GVBMonster::hp() const {
  return hp_;
}
inline void GVBMonster::set_hp(::google::protobuf::uint64 value) {
  set_has_hp();
  hp_ = value;
}

// required uint64 hpmax = 3;
inline bool GVBMonster::has_hpmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBMonster::set_has_hpmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBMonster::clear_has_hpmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBMonster::clear_hpmax() {
  hpmax_ = GOOGLE_ULONGLONG(0);
  clear_has_hpmax();
}
inline ::google::protobuf::uint64 GVBMonster::hpmax() const {
  return hpmax_;
}
inline void GVBMonster::set_hpmax(::google::protobuf::uint64 value) {
  set_has_hpmax();
  hpmax_ = value;
}

// -------------------------------------------------------------------

// GVBDataReq

// required uint32 unused = 1;
inline bool GVBDataReq::has_unused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBDataReq::set_has_unused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBDataReq::clear_has_unused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBDataReq::clear_unused() {
  unused_ = 0u;
  clear_has_unused();
}
inline ::google::protobuf::uint32 GVBDataReq::unused() const {
  return unused_;
}
inline void GVBDataReq::set_unused(::google::protobuf::uint32 value) {
  set_has_unused();
  unused_ = value;
}

// -------------------------------------------------------------------

// GVBDatasRsp

// required uint32 state = 1;
inline bool GVBDatasRsp::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBDatasRsp::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBDatasRsp::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBDatasRsp::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 GVBDatasRsp::state() const {
  return state_;
}
inline void GVBDatasRsp::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// required uint32 countdown = 2;
inline bool GVBDatasRsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBDatasRsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBDatasRsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBDatasRsp::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 GVBDatasRsp::countdown() const {
  return countdown_;
}
inline void GVBDatasRsp::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
}

// optional uint32 team1Score = 3;
inline bool GVBDatasRsp::has_team1score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBDatasRsp::set_has_team1score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBDatasRsp::clear_has_team1score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBDatasRsp::clear_team1score() {
  team1score_ = 0u;
  clear_has_team1score();
}
inline ::google::protobuf::uint32 GVBDatasRsp::team1score() const {
  return team1score_;
}
inline void GVBDatasRsp::set_team1score(::google::protobuf::uint32 value) {
  set_has_team1score();
  team1score_ = value;
}

// optional uint32 team2Score = 4;
inline bool GVBDatasRsp::has_team2score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBDatasRsp::set_has_team2score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBDatasRsp::clear_has_team2score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBDatasRsp::clear_team2score() {
  team2score_ = 0u;
  clear_has_team2score();
}
inline ::google::protobuf::uint32 GVBDatasRsp::team2score() const {
  return team2score_;
}
inline void GVBDatasRsp::set_team2score(::google::protobuf::uint32 value) {
  set_has_team2score();
  team2score_ = value;
}

// optional uint32 selfScore = 5;
inline bool GVBDatasRsp::has_selfscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBDatasRsp::set_has_selfscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBDatasRsp::clear_has_selfscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBDatasRsp::clear_selfscore() {
  selfscore_ = 0u;
  clear_has_selfscore();
}
inline ::google::protobuf::uint32 GVBDatasRsp::selfscore() const {
  return selfscore_;
}
inline void GVBDatasRsp::set_selfscore(::google::protobuf::uint32 value) {
  set_has_selfscore();
  selfscore_ = value;
}

// optional uint32 selfTeam = 6;
inline bool GVBDatasRsp::has_selfteam() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GVBDatasRsp::set_has_selfteam() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GVBDatasRsp::clear_has_selfteam() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GVBDatasRsp::clear_selfteam() {
  selfteam_ = 0u;
  clear_has_selfteam();
}
inline ::google::protobuf::uint32 GVBDatasRsp::selfteam() const {
  return selfteam_;
}
inline void GVBDatasRsp::set_selfteam(::google::protobuf::uint32 value) {
  set_has_selfteam();
  selfteam_ = value;
}

// optional uint32 crystalState = 7;
inline bool GVBDatasRsp::has_crystalstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GVBDatasRsp::set_has_crystalstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GVBDatasRsp::clear_has_crystalstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GVBDatasRsp::clear_crystalstate() {
  crystalstate_ = 0u;
  clear_has_crystalstate();
}
inline ::google::protobuf::uint32 GVBDatasRsp::crystalstate() const {
  return crystalstate_;
}
inline void GVBDatasRsp::set_crystalstate(::google::protobuf::uint32 value) {
  set_has_crystalstate();
  crystalstate_ = value;
}

// optional uint64 crystalOwner = 8;
inline bool GVBDatasRsp::has_crystalowner() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GVBDatasRsp::set_has_crystalowner() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GVBDatasRsp::clear_has_crystalowner() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GVBDatasRsp::clear_crystalowner() {
  crystalowner_ = GOOGLE_ULONGLONG(0);
  clear_has_crystalowner();
}
inline ::google::protobuf::uint64 GVBDatasRsp::crystalowner() const {
  return crystalowner_;
}
inline void GVBDatasRsp::set_crystalowner(::google::protobuf::uint64 value) {
  set_has_crystalowner();
  crystalowner_ = value;
}

// optional uint32 crystalBornCountdown = 9;
inline bool GVBDatasRsp::has_crystalborncountdown() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GVBDatasRsp::set_has_crystalborncountdown() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GVBDatasRsp::clear_has_crystalborncountdown() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GVBDatasRsp::clear_crystalborncountdown() {
  crystalborncountdown_ = 0u;
  clear_has_crystalborncountdown();
}
inline ::google::protobuf::uint32 GVBDatasRsp::crystalborncountdown() const {
  return crystalborncountdown_;
}
inline void GVBDatasRsp::set_crystalborncountdown(::google::protobuf::uint32 value) {
  set_has_crystalborncountdown();
  crystalborncountdown_ = value;
}

// optional uint32 crystalOwnerTeam = 10;
inline bool GVBDatasRsp::has_crystalownerteam() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GVBDatasRsp::set_has_crystalownerteam() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GVBDatasRsp::clear_has_crystalownerteam() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GVBDatasRsp::clear_crystalownerteam() {
  crystalownerteam_ = 0u;
  clear_has_crystalownerteam();
}
inline ::google::protobuf::uint32 GVBDatasRsp::crystalownerteam() const {
  return crystalownerteam_;
}
inline void GVBDatasRsp::set_crystalownerteam(::google::protobuf::uint32 value) {
  set_has_crystalownerteam();
  crystalownerteam_ = value;
}

// optional uint32 crystalOwnerProfession = 11;
inline bool GVBDatasRsp::has_crystalownerprofession() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GVBDatasRsp::set_has_crystalownerprofession() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GVBDatasRsp::clear_has_crystalownerprofession() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GVBDatasRsp::clear_crystalownerprofession() {
  crystalownerprofession_ = 0u;
  clear_has_crystalownerprofession();
}
inline ::google::protobuf::uint32 GVBDatasRsp::crystalownerprofession() const {
  return crystalownerprofession_;
}
inline void GVBDatasRsp::set_crystalownerprofession(::google::protobuf::uint32 value) {
  set_has_crystalownerprofession();
  crystalownerprofession_ = value;
}

// optional .proto_ff.GVBMonster m1 = 12;
inline bool GVBDatasRsp::has_m1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GVBDatasRsp::set_has_m1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GVBDatasRsp::clear_has_m1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GVBDatasRsp::clear_m1() {
  if (m1_ != NULL) m1_->::proto_ff::GVBMonster::Clear();
  clear_has_m1();
}
inline const ::proto_ff::GVBMonster& GVBDatasRsp::m1() const {
  return m1_ != NULL ? *m1_ : *default_instance_->m1_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::mutable_m1() {
  set_has_m1();
  if (m1_ == NULL) m1_ = new ::proto_ff::GVBMonster;
  return m1_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::release_m1() {
  clear_has_m1();
  ::proto_ff::GVBMonster* temp = m1_;
  m1_ = NULL;
  return temp;
}
inline void GVBDatasRsp::set_allocated_m1(::proto_ff::GVBMonster* m1) {
  delete m1_;
  m1_ = m1;
  if (m1) {
    set_has_m1();
  } else {
    clear_has_m1();
  }
}

// optional .proto_ff.GVBMonster m2 = 13;
inline bool GVBDatasRsp::has_m2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GVBDatasRsp::set_has_m2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GVBDatasRsp::clear_has_m2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GVBDatasRsp::clear_m2() {
  if (m2_ != NULL) m2_->::proto_ff::GVBMonster::Clear();
  clear_has_m2();
}
inline const ::proto_ff::GVBMonster& GVBDatasRsp::m2() const {
  return m2_ != NULL ? *m2_ : *default_instance_->m2_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::mutable_m2() {
  set_has_m2();
  if (m2_ == NULL) m2_ = new ::proto_ff::GVBMonster;
  return m2_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::release_m2() {
  clear_has_m2();
  ::proto_ff::GVBMonster* temp = m2_;
  m2_ = NULL;
  return temp;
}
inline void GVBDatasRsp::set_allocated_m2(::proto_ff::GVBMonster* m2) {
  delete m2_;
  m2_ = m2;
  if (m2) {
    set_has_m2();
  } else {
    clear_has_m2();
  }
}

// optional .proto_ff.GVBMonster m3 = 14;
inline bool GVBDatasRsp::has_m3() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GVBDatasRsp::set_has_m3() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GVBDatasRsp::clear_has_m3() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GVBDatasRsp::clear_m3() {
  if (m3_ != NULL) m3_->::proto_ff::GVBMonster::Clear();
  clear_has_m3();
}
inline const ::proto_ff::GVBMonster& GVBDatasRsp::m3() const {
  return m3_ != NULL ? *m3_ : *default_instance_->m3_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::mutable_m3() {
  set_has_m3();
  if (m3_ == NULL) m3_ = new ::proto_ff::GVBMonster;
  return m3_;
}
inline ::proto_ff::GVBMonster* GVBDatasRsp::release_m3() {
  clear_has_m3();
  ::proto_ff::GVBMonster* temp = m3_;
  m3_ = NULL;
  return temp;
}
inline void GVBDatasRsp::set_allocated_m3(::proto_ff::GVBMonster* m3) {
  delete m3_;
  m3_ = m3;
  if (m3) {
    set_has_m3();
  } else {
    clear_has_m3();
  }
}

// optional uint32 killCount = 15;
inline bool GVBDatasRsp::has_killcount() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GVBDatasRsp::set_has_killcount() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GVBDatasRsp::clear_has_killcount() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GVBDatasRsp::clear_killcount() {
  killcount_ = 0u;
  clear_has_killcount();
}
inline ::google::protobuf::uint32 GVBDatasRsp::killcount() const {
  return killcount_;
}
inline void GVBDatasRsp::set_killcount(::google::protobuf::uint32 value) {
  set_has_killcount();
  killcount_ = value;
}

// optional uint32 killsCount = 16;
inline bool GVBDatasRsp::has_killscount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GVBDatasRsp::set_has_killscount() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GVBDatasRsp::clear_has_killscount() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GVBDatasRsp::clear_killscount() {
  killscount_ = 0u;
  clear_has_killscount();
}
inline ::google::protobuf::uint32 GVBDatasRsp::killscount() const {
  return killscount_;
}
inline void GVBDatasRsp::set_killscount(::google::protobuf::uint32 value) {
  set_has_killscount();
  killscount_ = value;
}

// optional uint32 breakKillsCount = 17;
inline bool GVBDatasRsp::has_breakkillscount() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GVBDatasRsp::set_has_breakkillscount() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GVBDatasRsp::clear_has_breakkillscount() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GVBDatasRsp::clear_breakkillscount() {
  breakkillscount_ = 0u;
  clear_has_breakkillscount();
}
inline ::google::protobuf::uint32 GVBDatasRsp::breakkillscount() const {
  return breakkillscount_;
}
inline void GVBDatasRsp::set_breakkillscount(::google::protobuf::uint32 value) {
  set_has_breakkillscount();
  breakkillscount_ = value;
}

// optional uint32 interceptCount = 18;
inline bool GVBDatasRsp::has_interceptcount() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GVBDatasRsp::set_has_interceptcount() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GVBDatasRsp::clear_has_interceptcount() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GVBDatasRsp::clear_interceptcount() {
  interceptcount_ = 0u;
  clear_has_interceptcount();
}
inline ::google::protobuf::uint32 GVBDatasRsp::interceptcount() const {
  return interceptcount_;
}
inline void GVBDatasRsp::set_interceptcount(::google::protobuf::uint32 value) {
  set_has_interceptcount();
  interceptcount_ = value;
}

// optional uint32 crystalCount = 19;
inline bool GVBDatasRsp::has_crystalcount() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GVBDatasRsp::set_has_crystalcount() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GVBDatasRsp::clear_has_crystalcount() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GVBDatasRsp::clear_crystalcount() {
  crystalcount_ = 0u;
  clear_has_crystalcount();
}
inline ::google::protobuf::uint32 GVBDatasRsp::crystalcount() const {
  return crystalcount_;
}
inline void GVBDatasRsp::set_crystalcount(::google::protobuf::uint32 value) {
  set_has_crystalcount();
  crystalcount_ = value;
}

// -------------------------------------------------------------------

// GVBRankReq

// required uint32 unused = 1;
inline bool GVBRankReq::has_unused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBRankReq::set_has_unused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBRankReq::clear_has_unused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBRankReq::clear_unused() {
  unused_ = 0u;
  clear_has_unused();
}
inline ::google::protobuf::uint32 GVBRankReq::unused() const {
  return unused_;
}
inline void GVBRankReq::set_unused(::google::protobuf::uint32 value) {
  set_has_unused();
  unused_ = value;
}

// -------------------------------------------------------------------

// GVBRankPlayerInfo

// required uint32 rank = 1;
inline bool GVBRankPlayerInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBRankPlayerInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBRankPlayerInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBRankPlayerInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 GVBRankPlayerInfo::rank() const {
  return rank_;
}
inline void GVBRankPlayerInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required string name = 2;
inline bool GVBRankPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBRankPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBRankPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBRankPlayerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GVBRankPlayerInfo::name() const {
  return *name_;
}
inline void GVBRankPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GVBRankPlayerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GVBRankPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GVBRankPlayerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GVBRankPlayerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GVBRankPlayerInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 score = 3;
inline bool GVBRankPlayerInfo::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBRankPlayerInfo::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBRankPlayerInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBRankPlayerInfo::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 GVBRankPlayerInfo::score() const {
  return score_;
}
inline void GVBRankPlayerInfo::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// GVBRankRsp

// repeated .proto_ff.GVBRankPlayerInfo players = 1;
inline int GVBRankRsp::players_size() const {
  return players_.size();
}
inline void GVBRankRsp::clear_players() {
  players_.Clear();
}
inline const ::proto_ff::GVBRankPlayerInfo& GVBRankRsp::players(int index) const {
  return players_.Get(index);
}
inline ::proto_ff::GVBRankPlayerInfo* GVBRankRsp::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::proto_ff::GVBRankPlayerInfo* GVBRankRsp::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBRankPlayerInfo >&
GVBRankRsp::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBRankPlayerInfo >*
GVBRankRsp::mutable_players() {
  return &players_;
}

// -------------------------------------------------------------------

// GVBPlayerInfo

// required uint32 score = 1;
inline bool GVBPlayerInfo::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBPlayerInfo::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBPlayerInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBPlayerInfo::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::score() const {
  return score_;
}
inline void GVBPlayerInfo::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 killCount = 2;
inline bool GVBPlayerInfo::has_killcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBPlayerInfo::set_has_killcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBPlayerInfo::clear_has_killcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBPlayerInfo::clear_killcount() {
  killcount_ = 0u;
  clear_has_killcount();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::killcount() const {
  return killcount_;
}
inline void GVBPlayerInfo::set_killcount(::google::protobuf::uint32 value) {
  set_has_killcount();
  killcount_ = value;
}

// required uint32 dieCount = 3;
inline bool GVBPlayerInfo::has_diecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBPlayerInfo::set_has_diecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBPlayerInfo::clear_has_diecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBPlayerInfo::clear_diecount() {
  diecount_ = 0u;
  clear_has_diecount();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::diecount() const {
  return diecount_;
}
inline void GVBPlayerInfo::set_diecount(::google::protobuf::uint32 value) {
  set_has_diecount();
  diecount_ = value;
}

// required uint32 interceptCount = 4;
inline bool GVBPlayerInfo::has_interceptcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBPlayerInfo::set_has_interceptcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBPlayerInfo::clear_has_interceptcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBPlayerInfo::clear_interceptcount() {
  interceptcount_ = 0u;
  clear_has_interceptcount();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::interceptcount() const {
  return interceptcount_;
}
inline void GVBPlayerInfo::set_interceptcount(::google::protobuf::uint32 value) {
  set_has_interceptcount();
  interceptcount_ = value;
}

// required uint32 crystalCount = 5;
inline bool GVBPlayerInfo::has_crystalcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBPlayerInfo::set_has_crystalcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBPlayerInfo::clear_has_crystalcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBPlayerInfo::clear_crystalcount() {
  crystalcount_ = 0u;
  clear_has_crystalcount();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::crystalcount() const {
  return crystalcount_;
}
inline void GVBPlayerInfo::set_crystalcount(::google::protobuf::uint32 value) {
  set_has_crystalcount();
  crystalcount_ = value;
}

// required string name = 6;
inline bool GVBPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GVBPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GVBPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GVBPlayerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GVBPlayerInfo::name() const {
  return *name_;
}
inline void GVBPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GVBPlayerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GVBPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GVBPlayerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GVBPlayerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GVBPlayerInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 team = 7;
inline bool GVBPlayerInfo::has_team() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GVBPlayerInfo::set_has_team() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GVBPlayerInfo::clear_has_team() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GVBPlayerInfo::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 GVBPlayerInfo::team() const {
  return team_;
}
inline void GVBPlayerInfo::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
}

// -------------------------------------------------------------------

// GVBResultBC

// required uint32 winTeam = 1;
inline bool GVBResultBC::has_winteam() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBResultBC::set_has_winteam() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBResultBC::clear_has_winteam() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBResultBC::clear_winteam() {
  winteam_ = 0u;
  clear_has_winteam();
}
inline ::google::protobuf::uint32 GVBResultBC::winteam() const {
  return winteam_;
}
inline void GVBResultBC::set_winteam(::google::protobuf::uint32 value) {
  set_has_winteam();
  winteam_ = value;
}

// repeated .proto_ff.GVBPlayerInfo players = 2;
inline int GVBResultBC::players_size() const {
  return players_.size();
}
inline void GVBResultBC::clear_players() {
  players_.Clear();
}
inline const ::proto_ff::GVBPlayerInfo& GVBResultBC::players(int index) const {
  return players_.Get(index);
}
inline ::proto_ff::GVBPlayerInfo* GVBResultBC::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::proto_ff::GVBPlayerInfo* GVBResultBC::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBPlayerInfo >&
GVBResultBC::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GVBPlayerInfo >*
GVBResultBC::mutable_players() {
  return &players_;
}

// -------------------------------------------------------------------

// GVBM1AttrChgBC

// required .proto_ff.GVBMonster m1 = 1;
inline bool GVBM1AttrChgBC::has_m1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBM1AttrChgBC::set_has_m1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBM1AttrChgBC::clear_has_m1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBM1AttrChgBC::clear_m1() {
  if (m1_ != NULL) m1_->::proto_ff::GVBMonster::Clear();
  clear_has_m1();
}
inline const ::proto_ff::GVBMonster& GVBM1AttrChgBC::m1() const {
  return m1_ != NULL ? *m1_ : *default_instance_->m1_;
}
inline ::proto_ff::GVBMonster* GVBM1AttrChgBC::mutable_m1() {
  set_has_m1();
  if (m1_ == NULL) m1_ = new ::proto_ff::GVBMonster;
  return m1_;
}
inline ::proto_ff::GVBMonster* GVBM1AttrChgBC::release_m1() {
  clear_has_m1();
  ::proto_ff::GVBMonster* temp = m1_;
  m1_ = NULL;
  return temp;
}
inline void GVBM1AttrChgBC::set_allocated_m1(::proto_ff::GVBMonster* m1) {
  delete m1_;
  m1_ = m1;
  if (m1) {
    set_has_m1();
  } else {
    clear_has_m1();
  }
}

// -------------------------------------------------------------------

// GVBM2AttrChgBC

// required .proto_ff.GVBMonster m2 = 1;
inline bool GVBM2AttrChgBC::has_m2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBM2AttrChgBC::set_has_m2() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBM2AttrChgBC::clear_has_m2() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBM2AttrChgBC::clear_m2() {
  if (m2_ != NULL) m2_->::proto_ff::GVBMonster::Clear();
  clear_has_m2();
}
inline const ::proto_ff::GVBMonster& GVBM2AttrChgBC::m2() const {
  return m2_ != NULL ? *m2_ : *default_instance_->m2_;
}
inline ::proto_ff::GVBMonster* GVBM2AttrChgBC::mutable_m2() {
  set_has_m2();
  if (m2_ == NULL) m2_ = new ::proto_ff::GVBMonster;
  return m2_;
}
inline ::proto_ff::GVBMonster* GVBM2AttrChgBC::release_m2() {
  clear_has_m2();
  ::proto_ff::GVBMonster* temp = m2_;
  m2_ = NULL;
  return temp;
}
inline void GVBM2AttrChgBC::set_allocated_m2(::proto_ff::GVBMonster* m2) {
  delete m2_;
  m2_ = m2;
  if (m2) {
    set_has_m2();
  } else {
    clear_has_m2();
  }
}

// -------------------------------------------------------------------

// GVBM3AttrChgBC

// required .proto_ff.GVBMonster m3 = 1;
inline bool GVBM3AttrChgBC::has_m3() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBM3AttrChgBC::set_has_m3() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBM3AttrChgBC::clear_has_m3() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBM3AttrChgBC::clear_m3() {
  if (m3_ != NULL) m3_->::proto_ff::GVBMonster::Clear();
  clear_has_m3();
}
inline const ::proto_ff::GVBMonster& GVBM3AttrChgBC::m3() const {
  return m3_ != NULL ? *m3_ : *default_instance_->m3_;
}
inline ::proto_ff::GVBMonster* GVBM3AttrChgBC::mutable_m3() {
  set_has_m3();
  if (m3_ == NULL) m3_ = new ::proto_ff::GVBMonster;
  return m3_;
}
inline ::proto_ff::GVBMonster* GVBM3AttrChgBC::release_m3() {
  clear_has_m3();
  ::proto_ff::GVBMonster* temp = m3_;
  m3_ = NULL;
  return temp;
}
inline void GVBM3AttrChgBC::set_allocated_m3(::proto_ff::GVBMonster* m3) {
  delete m3_;
  m3_ = m3;
  if (m3) {
    set_has_m3();
  } else {
    clear_has_m3();
  }
}

// -------------------------------------------------------------------

// GVBSelfInfoUpdateNT

// optional uint32 killCount = 1;
inline bool GVBSelfInfoUpdateNT::has_killcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_killcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBSelfInfoUpdateNT::clear_has_killcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBSelfInfoUpdateNT::clear_killcount() {
  killcount_ = 0u;
  clear_has_killcount();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::killcount() const {
  return killcount_;
}
inline void GVBSelfInfoUpdateNT::set_killcount(::google::protobuf::uint32 value) {
  set_has_killcount();
  killcount_ = value;
}

// optional uint32 killsCount = 2;
inline bool GVBSelfInfoUpdateNT::has_killscount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_killscount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBSelfInfoUpdateNT::clear_has_killscount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBSelfInfoUpdateNT::clear_killscount() {
  killscount_ = 0u;
  clear_has_killscount();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::killscount() const {
  return killscount_;
}
inline void GVBSelfInfoUpdateNT::set_killscount(::google::protobuf::uint32 value) {
  set_has_killscount();
  killscount_ = value;
}

// optional uint32 breakKillsCount = 3;
inline bool GVBSelfInfoUpdateNT::has_breakkillscount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_breakkillscount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBSelfInfoUpdateNT::clear_has_breakkillscount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBSelfInfoUpdateNT::clear_breakkillscount() {
  breakkillscount_ = 0u;
  clear_has_breakkillscount();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::breakkillscount() const {
  return breakkillscount_;
}
inline void GVBSelfInfoUpdateNT::set_breakkillscount(::google::protobuf::uint32 value) {
  set_has_breakkillscount();
  breakkillscount_ = value;
}

// optional uint32 interceptCount = 4;
inline bool GVBSelfInfoUpdateNT::has_interceptcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_interceptcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBSelfInfoUpdateNT::clear_has_interceptcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBSelfInfoUpdateNT::clear_interceptcount() {
  interceptcount_ = 0u;
  clear_has_interceptcount();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::interceptcount() const {
  return interceptcount_;
}
inline void GVBSelfInfoUpdateNT::set_interceptcount(::google::protobuf::uint32 value) {
  set_has_interceptcount();
  interceptcount_ = value;
}

// optional uint32 crystalCount = 5;
inline bool GVBSelfInfoUpdateNT::has_crystalcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_crystalcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBSelfInfoUpdateNT::clear_has_crystalcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBSelfInfoUpdateNT::clear_crystalcount() {
  crystalcount_ = 0u;
  clear_has_crystalcount();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::crystalcount() const {
  return crystalcount_;
}
inline void GVBSelfInfoUpdateNT::set_crystalcount(::google::protobuf::uint32 value) {
  set_has_crystalcount();
  crystalcount_ = value;
}

// optional uint32 selfScore = 6;
inline bool GVBSelfInfoUpdateNT::has_selfscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GVBSelfInfoUpdateNT::set_has_selfscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GVBSelfInfoUpdateNT::clear_has_selfscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GVBSelfInfoUpdateNT::clear_selfscore() {
  selfscore_ = 0u;
  clear_has_selfscore();
}
inline ::google::protobuf::uint32 GVBSelfInfoUpdateNT::selfscore() const {
  return selfscore_;
}
inline void GVBSelfInfoUpdateNT::set_selfscore(::google::protobuf::uint32 value) {
  set_has_selfscore();
  selfscore_ = value;
}

// -------------------------------------------------------------------

// GVBKillPlayerBC

// required uint32 killerTeam = 1;
inline bool GVBKillPlayerBC::has_killerteam() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBKillPlayerBC::set_has_killerteam() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBKillPlayerBC::clear_has_killerteam() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBKillPlayerBC::clear_killerteam() {
  killerteam_ = 0u;
  clear_has_killerteam();
}
inline ::google::protobuf::uint32 GVBKillPlayerBC::killerteam() const {
  return killerteam_;
}
inline void GVBKillPlayerBC::set_killerteam(::google::protobuf::uint32 value) {
  set_has_killerteam();
  killerteam_ = value;
}

// required uint32 killedTeam = 2;
inline bool GVBKillPlayerBC::has_killedteam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBKillPlayerBC::set_has_killedteam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBKillPlayerBC::clear_has_killedteam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBKillPlayerBC::clear_killedteam() {
  killedteam_ = 0u;
  clear_has_killedteam();
}
inline ::google::protobuf::uint32 GVBKillPlayerBC::killedteam() const {
  return killedteam_;
}
inline void GVBKillPlayerBC::set_killedteam(::google::protobuf::uint32 value) {
  set_has_killedteam();
  killedteam_ = value;
}

// required uint32 killerProf = 3;
inline bool GVBKillPlayerBC::has_killerprof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBKillPlayerBC::set_has_killerprof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBKillPlayerBC::clear_has_killerprof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBKillPlayerBC::clear_killerprof() {
  killerprof_ = 0u;
  clear_has_killerprof();
}
inline ::google::protobuf::uint32 GVBKillPlayerBC::killerprof() const {
  return killerprof_;
}
inline void GVBKillPlayerBC::set_killerprof(::google::protobuf::uint32 value) {
  set_has_killerprof();
  killerprof_ = value;
}

// required uint32 killedProf = 4;
inline bool GVBKillPlayerBC::has_killedprof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBKillPlayerBC::set_has_killedprof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBKillPlayerBC::clear_has_killedprof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBKillPlayerBC::clear_killedprof() {
  killedprof_ = 0u;
  clear_has_killedprof();
}
inline ::google::protobuf::uint32 GVBKillPlayerBC::killedprof() const {
  return killedprof_;
}
inline void GVBKillPlayerBC::set_killedprof(::google::protobuf::uint32 value) {
  set_has_killedprof();
  killedprof_ = value;
}

// -------------------------------------------------------------------

// GVBResPointChg

// required uint32 team1Score = 1;
inline bool GVBResPointChg::has_team1score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBResPointChg::set_has_team1score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBResPointChg::clear_has_team1score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBResPointChg::clear_team1score() {
  team1score_ = 0u;
  clear_has_team1score();
}
inline ::google::protobuf::uint32 GVBResPointChg::team1score() const {
  return team1score_;
}
inline void GVBResPointChg::set_team1score(::google::protobuf::uint32 value) {
  set_has_team1score();
  team1score_ = value;
}

// required uint32 team2Score = 2;
inline bool GVBResPointChg::has_team2score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBResPointChg::set_has_team2score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBResPointChg::clear_has_team2score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBResPointChg::clear_team2score() {
  team2score_ = 0u;
  clear_has_team2score();
}
inline ::google::protobuf::uint32 GVBResPointChg::team2score() const {
  return team2score_;
}
inline void GVBResPointChg::set_team2score(::google::protobuf::uint32 value) {
  set_has_team2score();
  team2score_ = value;
}

// -------------------------------------------------------------------

// GVBCrystalStateBC

// required uint32 crystalState = 1;
inline bool GVBCrystalStateBC::has_crystalstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBCrystalStateBC::set_has_crystalstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBCrystalStateBC::clear_has_crystalstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBCrystalStateBC::clear_crystalstate() {
  crystalstate_ = 0u;
  clear_has_crystalstate();
}
inline ::google::protobuf::uint32 GVBCrystalStateBC::crystalstate() const {
  return crystalstate_;
}
inline void GVBCrystalStateBC::set_crystalstate(::google::protobuf::uint32 value) {
  set_has_crystalstate();
  crystalstate_ = value;
}

// required uint32 crystalBornCountdown = 2;
inline bool GVBCrystalStateBC::has_crystalborncountdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBCrystalStateBC::set_has_crystalborncountdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBCrystalStateBC::clear_has_crystalborncountdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBCrystalStateBC::clear_crystalborncountdown() {
  crystalborncountdown_ = 0u;
  clear_has_crystalborncountdown();
}
inline ::google::protobuf::uint32 GVBCrystalStateBC::crystalborncountdown() const {
  return crystalborncountdown_;
}
inline void GVBCrystalStateBC::set_crystalborncountdown(::google::protobuf::uint32 value) {
  set_has_crystalborncountdown();
  crystalborncountdown_ = value;
}

// optional uint64 crystalOwner = 3;
inline bool GVBCrystalStateBC::has_crystalowner() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVBCrystalStateBC::set_has_crystalowner() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVBCrystalStateBC::clear_has_crystalowner() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVBCrystalStateBC::clear_crystalowner() {
  crystalowner_ = GOOGLE_ULONGLONG(0);
  clear_has_crystalowner();
}
inline ::google::protobuf::uint64 GVBCrystalStateBC::crystalowner() const {
  return crystalowner_;
}
inline void GVBCrystalStateBC::set_crystalowner(::google::protobuf::uint64 value) {
  set_has_crystalowner();
  crystalowner_ = value;
}

// optional uint32 crystalOwnerTeam = 4;
inline bool GVBCrystalStateBC::has_crystalownerteam() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GVBCrystalStateBC::set_has_crystalownerteam() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GVBCrystalStateBC::clear_has_crystalownerteam() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GVBCrystalStateBC::clear_crystalownerteam() {
  crystalownerteam_ = 0u;
  clear_has_crystalownerteam();
}
inline ::google::protobuf::uint32 GVBCrystalStateBC::crystalownerteam() const {
  return crystalownerteam_;
}
inline void GVBCrystalStateBC::set_crystalownerteam(::google::protobuf::uint32 value) {
  set_has_crystalownerteam();
  crystalownerteam_ = value;
}

// optional uint32 crystalOwnerProfession = 5;
inline bool GVBCrystalStateBC::has_crystalownerprofession() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GVBCrystalStateBC::set_has_crystalownerprofession() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GVBCrystalStateBC::clear_has_crystalownerprofession() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GVBCrystalStateBC::clear_crystalownerprofession() {
  crystalownerprofession_ = 0u;
  clear_has_crystalownerprofession();
}
inline ::google::protobuf::uint32 GVBCrystalStateBC::crystalownerprofession() const {
  return crystalownerprofession_;
}
inline void GVBCrystalStateBC::set_crystalownerprofession(::google::protobuf::uint32 value) {
  set_has_crystalownerprofession();
  crystalownerprofession_ = value;
}

// -------------------------------------------------------------------

// GVBCrystalCollectReq

// required uint32 type = 1;
inline bool GVBCrystalCollectReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBCrystalCollectReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBCrystalCollectReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBCrystalCollectReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GVBCrystalCollectReq::type() const {
  return type_;
}
inline void GVBCrystalCollectReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GVBCrystalCollectRsp

// required uint32 type = 1;
inline bool GVBCrystalCollectRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVBCrystalCollectRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVBCrystalCollectRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVBCrystalCollectRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GVBCrystalCollectRsp::type() const {
  return type_;
}
inline void GVBCrystalCollectRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GVBDailyScoreDataReq

// -------------------------------------------------------------------

// GVBDailyScoreDataRsp

// repeated uint32 rewardsState = 1;
inline int GVBDailyScoreDataRsp::rewardsstate_size() const {
  return rewardsstate_.size();
}
inline void GVBDailyScoreDataRsp::clear_rewardsstate() {
  rewardsstate_.Clear();
}
inline ::google::protobuf::uint32 GVBDailyScoreDataRsp::rewardsstate(int index) const {
  return rewardsstate_.Get(index);
}
inline void GVBDailyScoreDataRsp::set_rewardsstate(int index, ::google::protobuf::uint32 value) {
  rewardsstate_.Set(index, value);
}
inline void GVBDailyScoreDataRsp::add_rewardsstate(::google::protobuf::uint32 value) {
  rewardsstate_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GVBDailyScoreDataRsp::rewardsstate() const {
  return rewardsstate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GVBDailyScoreDataRsp::mutable_rewardsstate() {
  return &rewardsstate_;
}

// required uint32 dailyScore = 2;
inline bool GVBDailyScoreDataRsp::has_dailyscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVBDailyScoreDataRsp::set_has_dailyscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVBDailyScoreDataRsp::clear_has_dailyscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVBDailyScoreDataRsp::clear_dailyscore() {
  dailyscore_ = 0u;
  clear_has_dailyscore();
}
inline ::google::protobuf::uint32 GVBDailyScoreDataRsp::dailyscore() const {
  return dailyscore_;
}
inline void GVBDailyScoreDataRsp::set_dailyscore(::google::protobuf::uint32 value) {
  set_has_dailyscore();
  dailyscore_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GodValleyBattle_2eproto__INCLUDED
