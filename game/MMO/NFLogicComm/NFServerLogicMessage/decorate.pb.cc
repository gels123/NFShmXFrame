// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: decorate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "decorate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* decoratedecorateattributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  decoratedecorateattributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* decoratedecorateActiveAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  decoratedecorateActiveAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* decoratedecorate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  decoratedecorate_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_decoratedecorate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_decoratedecorate_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_decorate_2eproto() {
  protobuf_AddDesc_decorate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "decorate.proto");
  GOOGLE_CHECK(file != NULL);
  decoratedecorateattributeDesc_descriptor_ = file->message_type(0);
  static const int decoratedecorateattributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorateattributeDesc, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorateattributeDesc, value_),
  };
  decoratedecorateattributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      decoratedecorateattributeDesc_descriptor_,
      decoratedecorateattributeDesc::default_instance_,
      decoratedecorateattributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorateattributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorateattributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(decoratedecorateattributeDesc));
  decoratedecorateActiveAttributeDesc_descriptor_ = file->message_type(1);
  static const int decoratedecorateActiveAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorateActiveAttributeDesc, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorateActiveAttributeDesc, value_),
  };
  decoratedecorateActiveAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      decoratedecorateActiveAttributeDesc_descriptor_,
      decoratedecorateActiveAttributeDesc::default_instance_,
      decoratedecorateActiveAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorateActiveAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorateActiveAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(decoratedecorateActiveAttributeDesc));
  decoratedecorate_descriptor_ = file->message_type(2);
  static const int decoratedecorate_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, professionlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, activationitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, activationnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, starid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, starup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, starber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, activeattribute_),
  };
  decoratedecorate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      decoratedecorate_descriptor_,
      decoratedecorate::default_instance_,
      decoratedecorate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(decoratedecorate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(decoratedecorate));
  Sheet_decoratedecorate_descriptor_ = file->message_type(3);
  static const int Sheet_decoratedecorate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_decoratedecorate, decoratedecorate_list_),
  };
  Sheet_decoratedecorate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_decoratedecorate_descriptor_,
      Sheet_decoratedecorate::default_instance_,
      Sheet_decoratedecorate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_decoratedecorate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_decoratedecorate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_decoratedecorate));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_decorate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    decoratedecorateattributeDesc_descriptor_, &decoratedecorateattributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    decoratedecorateActiveAttributeDesc_descriptor_, &decoratedecorateActiveAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    decoratedecorate_descriptor_, &decoratedecorate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_decoratedecorate_descriptor_, &Sheet_decoratedecorate::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_decorate_2eproto() {
  delete decoratedecorateattributeDesc::default_instance_;
  delete decoratedecorateattributeDesc_reflection_;
  delete decoratedecorateActiveAttributeDesc::default_instance_;
  delete decoratedecorateActiveAttributeDesc_reflection_;
  delete decoratedecorate::default_instance_;
  delete decoratedecorate_reflection_;
  delete Sheet_decoratedecorate::default_instance_;
  delete Sheet_decoratedecorate_reflection_;
}

void protobuf_AddDesc_decorate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016decorate.proto\022\010proto_ff\032\025yd_fieldopti"
    "ons.proto\"Q\n\035decoratedecorateattributeDe"
    "sc\022\030\n\004type\030\001 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\026\n\005value\030\002 "
    "\001(\005B\007\302\377\024\003\345\200\274\"W\n#decoratedecorateActiveAt"
    "tributeDesc\022\030\n\004type\030\001 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\026\n"
    "\005value\030\002 \001(\005B\007\302\377\024\003\345\200\274\"\371\004\n\020decoratedecora"
    "te\022\030\n\002ID\030\001 \001(\003B\014\302\377\024\010\350\243\205\351\245\260ID\022\"\n\004name\030\002 \001"
    "(\tB\024\302\377\024\014\350\243\205\351\245\260\345\220\215\347\247\260\220\301\024<\022\036\n\004type\030\003 \001(\005B\020"
    "\302\377\024\014\345\244\226\350\247\202\347\261\273\345\236\213\022!\n\007quality\030\004 \001(\005B\020\302\377\024\014\347"
    "\234\274\350\212\222\345\223\201\350\264\250\022-\n\017professionLimit\030\005 \001(\tB\024\302\377"
    "\024\014\350\201\214\344\270\232\351\231\220\345\210\266\220\301\024<\022*\n\016activationItem\030\006 \001"
    "(\003B\022\302\377\024\016\346\277\200\346\264\273\351\201\223\345\205\267ID\022-\n\ractivationNum\030"
    "\007 \001(\005B\026\302\377\024\022\346\277\200\346\264\273\351\201\223\345\205\267\346\225\260\351\207\217\022\"\n\006starId\030"
    "\010 \001(\003B\022\302\377\024\016\345\215\207\346\230\237\351\201\223\345\205\267id\022,\n\007starNum\030\t \001"
    "(\tB\033\302\377\024\022\345\215\207\346\230\237\351\201\223\345\205\267\346\225\260\351\207\217\220\301\024\310\001\022&\n\006starU"
    "p\030\n \001(\005B\026\302\377\024\022\345\215\207\346\230\237\347\255\211\347\272\247\344\270\212\351\231\220\022<\n\007starB"
    "er\030\013 \001(\005B+\302\377\024\'\346\257\217\346\254\241\345\215\207\346\230\237\345\261\236\346\200\247\345\242\236\345\212\240\347\232"
    "\204\347\231\276\345\210\206\346\257\224\345\200\274\022J\n\tattribute\030\014 \003(\0132\'.proto"
    "_ff.decoratedecorateattributeDescB\016\302\377\024\006\345"
    "\261\236\346\200\247\210\301\024\006\022V\n\017ActiveAttribute\030\r \003(\0132-.pro"
    "to_ff.decoratedecorateActiveAttributeDes"
    "cB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\006\"Y\n\026Sheet_decoratedecor"
    "ate\022\?\n\025decoratedecorate_List\030\001 \003(\0132\032.pro"
    "to_ff.decoratedecorateB\004\210\301\024(", 948);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "decorate.proto", &protobuf_RegisterTypes);
  decoratedecorateattributeDesc::default_instance_ = new decoratedecorateattributeDesc();
  decoratedecorateActiveAttributeDesc::default_instance_ = new decoratedecorateActiveAttributeDesc();
  decoratedecorate::default_instance_ = new decoratedecorate();
  Sheet_decoratedecorate::default_instance_ = new Sheet_decoratedecorate();
  decoratedecorateattributeDesc::default_instance_->InitAsDefaultInstance();
  decoratedecorateActiveAttributeDesc::default_instance_->InitAsDefaultInstance();
  decoratedecorate::default_instance_->InitAsDefaultInstance();
  Sheet_decoratedecorate::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_decorate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_decorate_2eproto {
  StaticDescriptorInitializer_decorate_2eproto() {
    protobuf_AddDesc_decorate_2eproto();
  }
} static_descriptor_initializer_decorate_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int decoratedecorateattributeDesc::kTypeFieldNumber;
const int decoratedecorateattributeDesc::kValueFieldNumber;
#endif  // !_MSC_VER

decoratedecorateattributeDesc::decoratedecorateattributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void decoratedecorateattributeDesc::InitAsDefaultInstance() {
}

decoratedecorateattributeDesc::decoratedecorateattributeDesc(const decoratedecorateattributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void decoratedecorateattributeDesc::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

decoratedecorateattributeDesc::~decoratedecorateattributeDesc() {
  SharedDtor();
}

void decoratedecorateattributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void decoratedecorateattributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* decoratedecorateattributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return decoratedecorateattributeDesc_descriptor_;
}

const decoratedecorateattributeDesc& decoratedecorateattributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_decorate_2eproto();
  return *default_instance_;
}

decoratedecorateattributeDesc* decoratedecorateattributeDesc::default_instance_ = NULL;

decoratedecorateattributeDesc* decoratedecorateattributeDesc::New() const {
  return new decoratedecorateattributeDesc;
}

void decoratedecorateattributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool decoratedecorateattributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional int32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void decoratedecorateattributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* decoratedecorateattributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int decoratedecorateattributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void decoratedecorateattributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const decoratedecorateattributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const decoratedecorateattributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void decoratedecorateattributeDesc::MergeFrom(const decoratedecorateattributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void decoratedecorateattributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void decoratedecorateattributeDesc::CopyFrom(const decoratedecorateattributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool decoratedecorateattributeDesc::IsInitialized() const {

  return true;
}

void decoratedecorateattributeDesc::Swap(decoratedecorateattributeDesc* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata decoratedecorateattributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = decoratedecorateattributeDesc_descriptor_;
  metadata.reflection = decoratedecorateattributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int decoratedecorateActiveAttributeDesc::kTypeFieldNumber;
const int decoratedecorateActiveAttributeDesc::kValueFieldNumber;
#endif  // !_MSC_VER

decoratedecorateActiveAttributeDesc::decoratedecorateActiveAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void decoratedecorateActiveAttributeDesc::InitAsDefaultInstance() {
}

decoratedecorateActiveAttributeDesc::decoratedecorateActiveAttributeDesc(const decoratedecorateActiveAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void decoratedecorateActiveAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

decoratedecorateActiveAttributeDesc::~decoratedecorateActiveAttributeDesc() {
  SharedDtor();
}

void decoratedecorateActiveAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void decoratedecorateActiveAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* decoratedecorateActiveAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return decoratedecorateActiveAttributeDesc_descriptor_;
}

const decoratedecorateActiveAttributeDesc& decoratedecorateActiveAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_decorate_2eproto();
  return *default_instance_;
}

decoratedecorateActiveAttributeDesc* decoratedecorateActiveAttributeDesc::default_instance_ = NULL;

decoratedecorateActiveAttributeDesc* decoratedecorateActiveAttributeDesc::New() const {
  return new decoratedecorateActiveAttributeDesc;
}

void decoratedecorateActiveAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool decoratedecorateActiveAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional int32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void decoratedecorateActiveAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* decoratedecorateActiveAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int decoratedecorateActiveAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void decoratedecorateActiveAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const decoratedecorateActiveAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const decoratedecorateActiveAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void decoratedecorateActiveAttributeDesc::MergeFrom(const decoratedecorateActiveAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void decoratedecorateActiveAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void decoratedecorateActiveAttributeDesc::CopyFrom(const decoratedecorateActiveAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool decoratedecorateActiveAttributeDesc::IsInitialized() const {

  return true;
}

void decoratedecorateActiveAttributeDesc::Swap(decoratedecorateActiveAttributeDesc* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata decoratedecorateActiveAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = decoratedecorateActiveAttributeDesc_descriptor_;
  metadata.reflection = decoratedecorateActiveAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int decoratedecorate::kIDFieldNumber;
const int decoratedecorate::kNameFieldNumber;
const int decoratedecorate::kTypeFieldNumber;
const int decoratedecorate::kQualityFieldNumber;
const int decoratedecorate::kProfessionLimitFieldNumber;
const int decoratedecorate::kActivationItemFieldNumber;
const int decoratedecorate::kActivationNumFieldNumber;
const int decoratedecorate::kStarIdFieldNumber;
const int decoratedecorate::kStarNumFieldNumber;
const int decoratedecorate::kStarUpFieldNumber;
const int decoratedecorate::kStarBerFieldNumber;
const int decoratedecorate::kAttributeFieldNumber;
const int decoratedecorate::kActiveAttributeFieldNumber;
#endif  // !_MSC_VER

decoratedecorate::decoratedecorate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void decoratedecorate::InitAsDefaultInstance() {
}

decoratedecorate::decoratedecorate(const decoratedecorate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void decoratedecorate::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  quality_ = 0;
  professionlimit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  activationitem_ = GOOGLE_LONGLONG(0);
  activationnum_ = 0;
  starid_ = GOOGLE_LONGLONG(0);
  starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  starup_ = 0;
  starber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

decoratedecorate::~decoratedecorate() {
  SharedDtor();
}

void decoratedecorate::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (professionlimit_ != &::google::protobuf::internal::kEmptyString) {
    delete professionlimit_;
  }
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete starnum_;
  }
  if (this != default_instance_) {
  }
}

void decoratedecorate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* decoratedecorate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return decoratedecorate_descriptor_;
}

const decoratedecorate& decoratedecorate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_decorate_2eproto();
  return *default_instance_;
}

decoratedecorate* decoratedecorate::default_instance_ = NULL;

decoratedecorate* decoratedecorate::New() const {
  return new decoratedecorate;
}

void decoratedecorate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    type_ = 0;
    quality_ = 0;
    if (has_professionlimit()) {
      if (professionlimit_ != &::google::protobuf::internal::kEmptyString) {
        professionlimit_->clear();
      }
    }
    activationitem_ = GOOGLE_LONGLONG(0);
    activationnum_ = 0;
    starid_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_starnum()) {
      if (starnum_ != &::google::protobuf::internal::kEmptyString) {
        starnum_->clear();
      }
    }
    starup_ = 0;
    starber_ = 0;
  }
  attribute_.Clear();
  activeattribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool decoratedecorate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_quality;
        break;
      }

      // optional int32 quality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_professionLimit;
        break;
      }

      // optional string professionLimit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_professionLimit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_professionlimit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->professionlimit().data(), this->professionlimit().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_activationItem;
        break;
      }

      // optional int64 activationItem = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activationItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &activationitem_)));
          set_has_activationitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_activationNum;
        break;
      }

      // optional int32 activationNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activationNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activationnum_)));
          set_has_activationnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_starId;
        break;
      }

      // optional int64 starId = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starid_)));
          set_has_starid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_starNum;
        break;
      }

      // optional string starNum = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_starNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_starnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->starnum().data(), this->starnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_starUp;
        break;
      }

      // optional int32 starUp = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starup_)));
          set_has_starup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_starBer;
        break;
      }

      // optional int32 starBer = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starBer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starber_)));
          set_has_starber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_attribute;
        break;
      }

      // repeated .proto_ff.decoratedecorateattributeDesc attribute = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_attribute;
        if (input->ExpectTag(106)) goto parse_ActiveAttribute;
        break;
      }

      // repeated .proto_ff.decoratedecorateActiveAttributeDesc ActiveAttribute = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ActiveAttribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activeattribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_ActiveAttribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void decoratedecorate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional int32 quality = 4;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->quality(), output);
  }

  // optional string professionLimit = 5;
  if (has_professionlimit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->professionlimit().data(), this->professionlimit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->professionlimit(), output);
  }

  // optional int64 activationItem = 6;
  if (has_activationitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->activationitem(), output);
  }

  // optional int32 activationNum = 7;
  if (has_activationnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->activationnum(), output);
  }

  // optional int64 starId = 8;
  if (has_starid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->starid(), output);
  }

  // optional string starNum = 9;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->starnum().data(), this->starnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->starnum(), output);
  }

  // optional int32 starUp = 10;
  if (has_starup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->starup(), output);
  }

  // optional int32 starBer = 11;
  if (has_starber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->starber(), output);
  }

  // repeated .proto_ff.decoratedecorateattributeDesc attribute = 12;
  for (int i = 0; i < this->attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->attribute(i), output);
  }

  // repeated .proto_ff.decoratedecorateActiveAttributeDesc ActiveAttribute = 13;
  for (int i = 0; i < this->activeattribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->activeattribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* decoratedecorate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional int32 quality = 4;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->quality(), target);
  }

  // optional string professionLimit = 5;
  if (has_professionlimit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->professionlimit().data(), this->professionlimit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->professionlimit(), target);
  }

  // optional int64 activationItem = 6;
  if (has_activationitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->activationitem(), target);
  }

  // optional int32 activationNum = 7;
  if (has_activationnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->activationnum(), target);
  }

  // optional int64 starId = 8;
  if (has_starid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->starid(), target);
  }

  // optional string starNum = 9;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->starnum().data(), this->starnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->starnum(), target);
  }

  // optional int32 starUp = 10;
  if (has_starup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->starup(), target);
  }

  // optional int32 starBer = 11;
  if (has_starber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->starber(), target);
  }

  // repeated .proto_ff.decoratedecorateattributeDesc attribute = 12;
  for (int i = 0; i < this->attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->attribute(i), target);
  }

  // repeated .proto_ff.decoratedecorateActiveAttributeDesc ActiveAttribute = 13;
  for (int i = 0; i < this->activeattribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->activeattribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int decoratedecorate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 quality = 4;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional string professionLimit = 5;
    if (has_professionlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->professionlimit());
    }

    // optional int64 activationItem = 6;
    if (has_activationitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->activationitem());
    }

    // optional int32 activationNum = 7;
    if (has_activationnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activationnum());
    }

    // optional int64 starId = 8;
    if (has_starid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->starid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string starNum = 9;
    if (has_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->starnum());
    }

    // optional int32 starUp = 10;
    if (has_starup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starup());
    }

    // optional int32 starBer = 11;
    if (has_starber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starber());
    }

  }
  // repeated .proto_ff.decoratedecorateattributeDesc attribute = 12;
  total_size += 1 * this->attribute_size();
  for (int i = 0; i < this->attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute(i));
  }

  // repeated .proto_ff.decoratedecorateActiveAttributeDesc ActiveAttribute = 13;
  total_size += 1 * this->activeattribute_size();
  for (int i = 0; i < this->activeattribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activeattribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void decoratedecorate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const decoratedecorate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const decoratedecorate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void decoratedecorate::MergeFrom(const decoratedecorate& from) {
  GOOGLE_CHECK_NE(&from, this);
  attribute_.MergeFrom(from.attribute_);
  activeattribute_.MergeFrom(from.activeattribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_professionlimit()) {
      set_professionlimit(from.professionlimit());
    }
    if (from.has_activationitem()) {
      set_activationitem(from.activationitem());
    }
    if (from.has_activationnum()) {
      set_activationnum(from.activationnum());
    }
    if (from.has_starid()) {
      set_starid(from.starid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_starnum()) {
      set_starnum(from.starnum());
    }
    if (from.has_starup()) {
      set_starup(from.starup());
    }
    if (from.has_starber()) {
      set_starber(from.starber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void decoratedecorate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void decoratedecorate::CopyFrom(const decoratedecorate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool decoratedecorate::IsInitialized() const {

  return true;
}

void decoratedecorate::Swap(decoratedecorate* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(quality_, other->quality_);
    std::swap(professionlimit_, other->professionlimit_);
    std::swap(activationitem_, other->activationitem_);
    std::swap(activationnum_, other->activationnum_);
    std::swap(starid_, other->starid_);
    std::swap(starnum_, other->starnum_);
    std::swap(starup_, other->starup_);
    std::swap(starber_, other->starber_);
    attribute_.Swap(&other->attribute_);
    activeattribute_.Swap(&other->activeattribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata decoratedecorate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = decoratedecorate_descriptor_;
  metadata.reflection = decoratedecorate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_decoratedecorate::kDecoratedecorateListFieldNumber;
#endif  // !_MSC_VER

Sheet_decoratedecorate::Sheet_decoratedecorate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_decoratedecorate::InitAsDefaultInstance() {
}

Sheet_decoratedecorate::Sheet_decoratedecorate(const Sheet_decoratedecorate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_decoratedecorate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_decoratedecorate::~Sheet_decoratedecorate() {
  SharedDtor();
}

void Sheet_decoratedecorate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_decoratedecorate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_decoratedecorate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_decoratedecorate_descriptor_;
}

const Sheet_decoratedecorate& Sheet_decoratedecorate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_decorate_2eproto();
  return *default_instance_;
}

Sheet_decoratedecorate* Sheet_decoratedecorate::default_instance_ = NULL;

Sheet_decoratedecorate* Sheet_decoratedecorate::New() const {
  return new Sheet_decoratedecorate;
}

void Sheet_decoratedecorate::Clear() {
  decoratedecorate_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_decoratedecorate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.decoratedecorate decoratedecorate_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_decoratedecorate_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_decoratedecorate_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_decoratedecorate_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_decoratedecorate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.decoratedecorate decoratedecorate_List = 1;
  for (int i = 0; i < this->decoratedecorate_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decoratedecorate_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_decoratedecorate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.decoratedecorate decoratedecorate_List = 1;
  for (int i = 0; i < this->decoratedecorate_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decoratedecorate_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_decoratedecorate::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.decoratedecorate decoratedecorate_List = 1;
  total_size += 1 * this->decoratedecorate_list_size();
  for (int i = 0; i < this->decoratedecorate_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->decoratedecorate_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_decoratedecorate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_decoratedecorate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_decoratedecorate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_decoratedecorate::MergeFrom(const Sheet_decoratedecorate& from) {
  GOOGLE_CHECK_NE(&from, this);
  decoratedecorate_list_.MergeFrom(from.decoratedecorate_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_decoratedecorate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_decoratedecorate::CopyFrom(const Sheet_decoratedecorate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_decoratedecorate::IsInitialized() const {

  return true;
}

void Sheet_decoratedecorate::Swap(Sheet_decoratedecorate* other) {
  if (other != this) {
    decoratedecorate_list_.Swap(&other->decoratedecorate_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_decoratedecorate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_decoratedecorate_descriptor_;
  metadata.reflection = Sheet_decoratedecorate_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
