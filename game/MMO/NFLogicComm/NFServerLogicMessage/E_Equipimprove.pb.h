// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Equipimprove.proto

#ifndef PROTOBUF_E_5fEquipimprove_2eproto__INCLUDED
#define PROTOBUF_E_5fEquipimprove_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

class E_EquipimproveUpqualityMaterialDesc;
class E_EquipimproveUpqualityAttributeDesc;
class E_EquipimproveUpquality;
class Sheet_EquipimproveUpquality;
class E_EquipimproveAwakenAttributeDesc;
class E_EquipimproveAwakenBreakDesc;
class E_EquipimproveAwaken;
class Sheet_EquipimproveAwaken;
class E_EquipimproveSoaringAttrDesc;
class E_EquipimproveSoaring;
class Sheet_EquipimproveSoaring;
class E_EquipimproveSealSealDesc;
class E_EquipimproveSeal;
class Sheet_EquipimproveSeal;
class E_EquipimproveSealslot;
class Sheet_EquipimproveSealslot;
class E_EquipimproveSealsuitSuitDesc;
class E_EquipimproveSealsuit;
class Sheet_EquipimproveSealsuit;

// ===================================================================

class E_EquipimproveUpqualityMaterialDesc : public ::google::protobuf::Message {
 public:
  E_EquipimproveUpqualityMaterialDesc();
  virtual ~E_EquipimproveUpqualityMaterialDesc();

  E_EquipimproveUpqualityMaterialDesc(const E_EquipimproveUpqualityMaterialDesc& from);

  inline E_EquipimproveUpqualityMaterialDesc& operator=(const E_EquipimproveUpqualityMaterialDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveUpqualityMaterialDesc& default_instance();

  void Swap(E_EquipimproveUpqualityMaterialDesc* other);

  // implements Message ----------------------------------------------

  E_EquipimproveUpqualityMaterialDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveUpqualityMaterialDesc& from);
  void MergeFrom(const E_EquipimproveUpqualityMaterialDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveUpqualityMaterialDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveUpqualityMaterialDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveUpqualityAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipimproveUpqualityAttributeDesc();
  virtual ~E_EquipimproveUpqualityAttributeDesc();

  E_EquipimproveUpqualityAttributeDesc(const E_EquipimproveUpqualityAttributeDesc& from);

  inline E_EquipimproveUpqualityAttributeDesc& operator=(const E_EquipimproveUpqualityAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveUpqualityAttributeDesc& default_instance();

  void Swap(E_EquipimproveUpqualityAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipimproveUpqualityAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveUpqualityAttributeDesc& from);
  void MergeFrom(const E_EquipimproveUpqualityAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveUpqualityAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveUpqualityAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveUpquality : public ::google::protobuf::Message {
 public:
  E_EquipimproveUpquality();
  virtual ~E_EquipimproveUpquality();

  E_EquipimproveUpquality(const E_EquipimproveUpquality& from);

  inline E_EquipimproveUpquality& operator=(const E_EquipimproveUpquality& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveUpquality& default_instance();

  void Swap(E_EquipimproveUpquality* other);

  // implements Message ----------------------------------------------

  E_EquipimproveUpquality* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveUpquality& from);
  void MergeFrom(const E_EquipimproveUpquality& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_quality = 2;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 2;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional string m_position = 3;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 3;
  inline const ::std::string& m_position() const;
  inline void set_m_position(const ::std::string& value);
  inline void set_m_position(const char* value);
  inline void set_m_position(const char* value, size_t size);
  inline ::std::string* mutable_m_position();
  inline ::std::string* release_m_position();
  inline void set_allocated_m_position(::std::string* m_position);

  // optional int32 m_wearqualitylimit = 4;
  inline bool has_m_wearqualitylimit() const;
  inline void clear_m_wearqualitylimit();
  static const int kMWearqualitylimitFieldNumber = 4;
  inline ::google::protobuf::int32 m_wearqualitylimit() const;
  inline void set_m_wearqualitylimit(::google::protobuf::int32 value);

  // optional int32 m_star = 5;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 5;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // optional int32 m_starnum = 6;
  inline bool has_m_starnum() const;
  inline void clear_m_starnum();
  static const int kMStarnumFieldNumber = 6;
  inline ::google::protobuf::int32 m_starnum() const;
  inline void set_m_starnum(::google::protobuf::int32 value);

  // optional int32 m_success = 7;
  inline bool has_m_success() const;
  inline void clear_m_success();
  static const int kMSuccessFieldNumber = 7;
  inline ::google::protobuf::int32 m_success() const;
  inline void set_m_success(::google::protobuf::int32 value);

  // optional int32 m_luckid = 8;
  inline bool has_m_luckid() const;
  inline void clear_m_luckid();
  static const int kMLuckidFieldNumber = 8;
  inline ::google::protobuf::int32 m_luckid() const;
  inline void set_m_luckid(::google::protobuf::int32 value);

  // optional int32 m_lucksuccess = 9;
  inline bool has_m_lucksuccess() const;
  inline void clear_m_lucksuccess();
  static const int kMLucksuccessFieldNumber = 9;
  inline ::google::protobuf::int32 m_lucksuccess() const;
  inline void set_m_lucksuccess(::google::protobuf::int32 value);

  // optional int32 m_lucknum = 10;
  inline bool has_m_lucknum() const;
  inline void clear_m_lucknum();
  static const int kMLucknumFieldNumber = 10;
  inline ::google::protobuf::int32 m_lucknum() const;
  inline void set_m_lucknum(::google::protobuf::int32 value);

  // optional int32 m_qualityatt = 11;
  inline bool has_m_qualityatt() const;
  inline void clear_m_qualityatt();
  static const int kMQualityattFieldNumber = 11;
  inline ::google::protobuf::int32 m_qualityatt() const;
  inline void set_m_qualityatt(::google::protobuf::int32 value);

  // optional int32 m_qualityvalue = 12;
  inline bool has_m_qualityvalue() const;
  inline void clear_m_qualityvalue();
  static const int kMQualityvalueFieldNumber = 12;
  inline ::google::protobuf::int32 m_qualityvalue() const;
  inline void set_m_qualityvalue(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EquipimproveUpqualityMaterialDesc m_material = 13;
  inline int m_material_size() const;
  inline void clear_m_material();
  static const int kMMaterialFieldNumber = 13;
  inline const ::proto_ff::E_EquipimproveUpqualityMaterialDesc& m_material(int index) const;
  inline ::proto_ff::E_EquipimproveUpqualityMaterialDesc* mutable_m_material(int index);
  inline ::proto_ff::E_EquipimproveUpqualityMaterialDesc* add_m_material();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpqualityMaterialDesc >&
      m_material() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpqualityMaterialDesc >*
      mutable_m_material();

  // repeated .proto_ff.E_EquipimproveUpqualityAttributeDesc m_attribute = 14;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 14;
  inline const ::proto_ff::E_EquipimproveUpqualityAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipimproveUpqualityAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipimproveUpqualityAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpqualityAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpqualityAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveUpquality)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_wearqualitylimit();
  inline void clear_has_m_wearqualitylimit();
  inline void set_has_m_star();
  inline void clear_has_m_star();
  inline void set_has_m_starnum();
  inline void clear_has_m_starnum();
  inline void set_has_m_success();
  inline void clear_has_m_success();
  inline void set_has_m_luckid();
  inline void clear_has_m_luckid();
  inline void set_has_m_lucksuccess();
  inline void clear_has_m_lucksuccess();
  inline void set_has_m_lucknum();
  inline void clear_has_m_lucknum();
  inline void set_has_m_qualityatt();
  inline void clear_has_m_qualityatt();
  inline void set_has_m_qualityvalue();
  inline void clear_has_m_qualityvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_quality_;
  ::std::string* m_position_;
  ::google::protobuf::int32 m_wearqualitylimit_;
  ::google::protobuf::int32 m_star_;
  ::google::protobuf::int32 m_starnum_;
  ::google::protobuf::int32 m_success_;
  ::google::protobuf::int32 m_luckid_;
  ::google::protobuf::int32 m_lucksuccess_;
  ::google::protobuf::int32 m_lucknum_;
  ::google::protobuf::int32 m_qualityatt_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpqualityMaterialDesc > m_material_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpqualityAttributeDesc > m_attribute_;
  ::google::protobuf::int32 m_qualityvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveUpquality* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipimproveUpquality : public ::google::protobuf::Message {
 public:
  Sheet_EquipimproveUpquality();
  virtual ~Sheet_EquipimproveUpquality();

  Sheet_EquipimproveUpquality(const Sheet_EquipimproveUpquality& from);

  inline Sheet_EquipimproveUpquality& operator=(const Sheet_EquipimproveUpquality& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipimproveUpquality& default_instance();

  void Swap(Sheet_EquipimproveUpquality* other);

  // implements Message ----------------------------------------------

  Sheet_EquipimproveUpquality* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipimproveUpquality& from);
  void MergeFrom(const Sheet_EquipimproveUpquality& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipimproveUpquality E_EquipimproveUpquality_List = 1;
  inline int e_equipimproveupquality_list_size() const;
  inline void clear_e_equipimproveupquality_list();
  static const int kEEquipimproveUpqualityListFieldNumber = 1;
  inline const ::proto_ff::E_EquipimproveUpquality& e_equipimproveupquality_list(int index) const;
  inline ::proto_ff::E_EquipimproveUpquality* mutable_e_equipimproveupquality_list(int index);
  inline ::proto_ff::E_EquipimproveUpquality* add_e_equipimproveupquality_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpquality >&
      e_equipimproveupquality_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpquality >*
      mutable_e_equipimproveupquality_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipimproveUpquality)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpquality > e_equipimproveupquality_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipimproveUpquality* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveAwakenAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipimproveAwakenAttributeDesc();
  virtual ~E_EquipimproveAwakenAttributeDesc();

  E_EquipimproveAwakenAttributeDesc(const E_EquipimproveAwakenAttributeDesc& from);

  inline E_EquipimproveAwakenAttributeDesc& operator=(const E_EquipimproveAwakenAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveAwakenAttributeDesc& default_instance();

  void Swap(E_EquipimproveAwakenAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipimproveAwakenAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveAwakenAttributeDesc& from);
  void MergeFrom(const E_EquipimproveAwakenAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveAwakenAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveAwakenAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveAwakenBreakDesc : public ::google::protobuf::Message {
 public:
  E_EquipimproveAwakenBreakDesc();
  virtual ~E_EquipimproveAwakenBreakDesc();

  E_EquipimproveAwakenBreakDesc(const E_EquipimproveAwakenBreakDesc& from);

  inline E_EquipimproveAwakenBreakDesc& operator=(const E_EquipimproveAwakenBreakDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveAwakenBreakDesc& default_instance();

  void Swap(E_EquipimproveAwakenBreakDesc* other);

  // implements Message ----------------------------------------------

  E_EquipimproveAwakenBreakDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveAwakenBreakDesc& from);
  void MergeFrom(const E_EquipimproveAwakenBreakDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveAwakenBreakDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveAwakenBreakDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveAwaken : public ::google::protobuf::Message {
 public:
  E_EquipimproveAwaken();
  virtual ~E_EquipimproveAwaken();

  E_EquipimproveAwaken(const E_EquipimproveAwaken& from);

  inline E_EquipimproveAwaken& operator=(const E_EquipimproveAwaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveAwaken& default_instance();

  void Swap(E_EquipimproveAwaken* other);

  // implements Message ----------------------------------------------

  E_EquipimproveAwaken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveAwaken& from);
  void MergeFrom(const E_EquipimproveAwaken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_quality = 2;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 2;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional string m_position = 3;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 3;
  inline const ::std::string& m_position() const;
  inline void set_m_position(const ::std::string& value);
  inline void set_m_position(const char* value);
  inline void set_m_position(const char* value, size_t size);
  inline ::std::string* mutable_m_position();
  inline ::std::string* release_m_position();
  inline void set_allocated_m_position(::std::string* m_position);

  // optional int32 m_wearqualitylimit = 4;
  inline bool has_m_wearqualitylimit() const;
  inline void clear_m_wearqualitylimit();
  static const int kMWearqualitylimitFieldNumber = 4;
  inline ::google::protobuf::int32 m_wearqualitylimit() const;
  inline void set_m_wearqualitylimit(::google::protobuf::int32 value);

  // optional int32 m_qualitylimit = 5;
  inline bool has_m_qualitylimit() const;
  inline void clear_m_qualitylimit();
  static const int kMQualitylimitFieldNumber = 5;
  inline ::google::protobuf::int32 m_qualitylimit() const;
  inline void set_m_qualitylimit(::google::protobuf::int32 value);

  // optional int32 m_wearstarlimit = 6;
  inline bool has_m_wearstarlimit() const;
  inline void clear_m_wearstarlimit();
  static const int kMWearstarlimitFieldNumber = 6;
  inline ::google::protobuf::int32 m_wearstarlimit() const;
  inline void set_m_wearstarlimit(::google::protobuf::int32 value);

  // optional int32 m_awakenlv = 7;
  inline bool has_m_awakenlv() const;
  inline void clear_m_awakenlv();
  static const int kMAwakenlvFieldNumber = 7;
  inline ::google::protobuf::int32 m_awakenlv() const;
  inline void set_m_awakenlv(::google::protobuf::int32 value);

  // optional int32 m_material_id = 8;
  inline bool has_m_material_id() const;
  inline void clear_m_material_id();
  static const int kMMaterialIdFieldNumber = 8;
  inline ::google::protobuf::int32 m_material_id() const;
  inline void set_m_material_id(::google::protobuf::int32 value);

  // optional int32 m_material_num = 9;
  inline bool has_m_material_num() const;
  inline void clear_m_material_num();
  static const int kMMaterialNumFieldNumber = 9;
  inline ::google::protobuf::int32 m_material_num() const;
  inline void set_m_material_num(::google::protobuf::int32 value);

  // optional int32 m_break_id = 10;
  inline bool has_m_break_id() const;
  inline void clear_m_break_id();
  static const int kMBreakIdFieldNumber = 10;
  inline ::google::protobuf::int32 m_break_id() const;
  inline void set_m_break_id(::google::protobuf::int32 value);

  // optional int32 m_break_num = 11;
  inline bool has_m_break_num() const;
  inline void clear_m_break_num();
  static const int kMBreakNumFieldNumber = 11;
  inline ::google::protobuf::int32 m_break_num() const;
  inline void set_m_break_num(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EquipimproveAwakenAttributeDesc m_attribute = 12;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 12;
  inline const ::proto_ff::E_EquipimproveAwakenAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipimproveAwakenAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipimproveAwakenAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwakenAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwakenAttributeDesc >*
      mutable_m_attribute();

  // repeated .proto_ff.E_EquipimproveAwakenBreakDesc m_break = 13;
  inline int m_break_size() const;
  inline void clear_m_break();
  static const int kMBreakFieldNumber = 13;
  inline const ::proto_ff::E_EquipimproveAwakenBreakDesc& m_break(int index) const;
  inline ::proto_ff::E_EquipimproveAwakenBreakDesc* mutable_m_break(int index);
  inline ::proto_ff::E_EquipimproveAwakenBreakDesc* add_m_break();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwakenBreakDesc >&
      m_break() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwakenBreakDesc >*
      mutable_m_break();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveAwaken)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_wearqualitylimit();
  inline void clear_has_m_wearqualitylimit();
  inline void set_has_m_qualitylimit();
  inline void clear_has_m_qualitylimit();
  inline void set_has_m_wearstarlimit();
  inline void clear_has_m_wearstarlimit();
  inline void set_has_m_awakenlv();
  inline void clear_has_m_awakenlv();
  inline void set_has_m_material_id();
  inline void clear_has_m_material_id();
  inline void set_has_m_material_num();
  inline void clear_has_m_material_num();
  inline void set_has_m_break_id();
  inline void clear_has_m_break_id();
  inline void set_has_m_break_num();
  inline void clear_has_m_break_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_quality_;
  ::std::string* m_position_;
  ::google::protobuf::int32 m_wearqualitylimit_;
  ::google::protobuf::int32 m_qualitylimit_;
  ::google::protobuf::int32 m_wearstarlimit_;
  ::google::protobuf::int32 m_awakenlv_;
  ::google::protobuf::int32 m_material_id_;
  ::google::protobuf::int32 m_material_num_;
  ::google::protobuf::int32 m_break_id_;
  ::google::protobuf::int32 m_break_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwakenAttributeDesc > m_attribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwakenBreakDesc > m_break_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveAwaken* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipimproveAwaken : public ::google::protobuf::Message {
 public:
  Sheet_EquipimproveAwaken();
  virtual ~Sheet_EquipimproveAwaken();

  Sheet_EquipimproveAwaken(const Sheet_EquipimproveAwaken& from);

  inline Sheet_EquipimproveAwaken& operator=(const Sheet_EquipimproveAwaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipimproveAwaken& default_instance();

  void Swap(Sheet_EquipimproveAwaken* other);

  // implements Message ----------------------------------------------

  Sheet_EquipimproveAwaken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipimproveAwaken& from);
  void MergeFrom(const Sheet_EquipimproveAwaken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipimproveAwaken E_EquipimproveAwaken_List = 1;
  inline int e_equipimproveawaken_list_size() const;
  inline void clear_e_equipimproveawaken_list();
  static const int kEEquipimproveAwakenListFieldNumber = 1;
  inline const ::proto_ff::E_EquipimproveAwaken& e_equipimproveawaken_list(int index) const;
  inline ::proto_ff::E_EquipimproveAwaken* mutable_e_equipimproveawaken_list(int index);
  inline ::proto_ff::E_EquipimproveAwaken* add_e_equipimproveawaken_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwaken >&
      e_equipimproveawaken_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwaken >*
      mutable_e_equipimproveawaken_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipimproveAwaken)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwaken > e_equipimproveawaken_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipimproveAwaken* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveSoaringAttrDesc : public ::google::protobuf::Message {
 public:
  E_EquipimproveSoaringAttrDesc();
  virtual ~E_EquipimproveSoaringAttrDesc();

  E_EquipimproveSoaringAttrDesc(const E_EquipimproveSoaringAttrDesc& from);

  inline E_EquipimproveSoaringAttrDesc& operator=(const E_EquipimproveSoaringAttrDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveSoaringAttrDesc& default_instance();

  void Swap(E_EquipimproveSoaringAttrDesc* other);

  // implements Message ----------------------------------------------

  E_EquipimproveSoaringAttrDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveSoaringAttrDesc& from);
  void MergeFrom(const E_EquipimproveSoaringAttrDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveSoaringAttrDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveSoaringAttrDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveSoaring : public ::google::protobuf::Message {
 public:
  E_EquipimproveSoaring();
  virtual ~E_EquipimproveSoaring();

  E_EquipimproveSoaring(const E_EquipimproveSoaring& from);

  inline E_EquipimproveSoaring& operator=(const E_EquipimproveSoaring& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveSoaring& default_instance();

  void Swap(E_EquipimproveSoaring* other);

  // implements Message ----------------------------------------------

  E_EquipimproveSoaring* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveSoaring& from);
  void MergeFrom(const E_EquipimproveSoaring& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_lvid = 2;
  inline bool has_m_lvid() const;
  inline void clear_m_lvid();
  static const int kMLvidFieldNumber = 2;
  inline ::google::protobuf::int32 m_lvid() const;
  inline void set_m_lvid(::google::protobuf::int32 value);

  // optional int32 m_awaken = 3;
  inline bool has_m_awaken() const;
  inline void clear_m_awaken();
  static const int kMAwakenFieldNumber = 3;
  inline ::google::protobuf::int32 m_awaken() const;
  inline void set_m_awaken(::google::protobuf::int32 value);

  // optional int32 m_itemid = 4;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemidFieldNumber = 4;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_itemnum = 5;
  inline bool has_m_itemnum() const;
  inline void clear_m_itemnum();
  static const int kMItemnumFieldNumber = 5;
  inline ::google::protobuf::int32 m_itemnum() const;
  inline void set_m_itemnum(::google::protobuf::int32 value);

  // optional string m_position = 6;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 6;
  inline const ::std::string& m_position() const;
  inline void set_m_position(const ::std::string& value);
  inline void set_m_position(const char* value);
  inline void set_m_position(const char* value, size_t size);
  inline ::std::string* mutable_m_position();
  inline ::std::string* release_m_position();
  inline void set_allocated_m_position(::std::string* m_position);

  // repeated .proto_ff.E_EquipimproveSoaringAttrDesc m_attr = 7;
  inline int m_attr_size() const;
  inline void clear_m_attr();
  static const int kMAttrFieldNumber = 7;
  inline const ::proto_ff::E_EquipimproveSoaringAttrDesc& m_attr(int index) const;
  inline ::proto_ff::E_EquipimproveSoaringAttrDesc* mutable_m_attr(int index);
  inline ::proto_ff::E_EquipimproveSoaringAttrDesc* add_m_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSoaringAttrDesc >&
      m_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSoaringAttrDesc >*
      mutable_m_attr();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveSoaring)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_lvid();
  inline void clear_has_m_lvid();
  inline void set_has_m_awaken();
  inline void clear_has_m_awaken();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_itemnum();
  inline void clear_has_m_itemnum();
  inline void set_has_m_position();
  inline void clear_has_m_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_lvid_;
  ::google::protobuf::int32 m_awaken_;
  ::google::protobuf::int32 m_itemid_;
  ::std::string* m_position_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSoaringAttrDesc > m_attr_;
  ::google::protobuf::int32 m_itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveSoaring* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipimproveSoaring : public ::google::protobuf::Message {
 public:
  Sheet_EquipimproveSoaring();
  virtual ~Sheet_EquipimproveSoaring();

  Sheet_EquipimproveSoaring(const Sheet_EquipimproveSoaring& from);

  inline Sheet_EquipimproveSoaring& operator=(const Sheet_EquipimproveSoaring& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipimproveSoaring& default_instance();

  void Swap(Sheet_EquipimproveSoaring* other);

  // implements Message ----------------------------------------------

  Sheet_EquipimproveSoaring* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipimproveSoaring& from);
  void MergeFrom(const Sheet_EquipimproveSoaring& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipimproveSoaring E_EquipimproveSoaring_List = 1;
  inline int e_equipimprovesoaring_list_size() const;
  inline void clear_e_equipimprovesoaring_list();
  static const int kEEquipimproveSoaringListFieldNumber = 1;
  inline const ::proto_ff::E_EquipimproveSoaring& e_equipimprovesoaring_list(int index) const;
  inline ::proto_ff::E_EquipimproveSoaring* mutable_e_equipimprovesoaring_list(int index);
  inline ::proto_ff::E_EquipimproveSoaring* add_e_equipimprovesoaring_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSoaring >&
      e_equipimprovesoaring_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSoaring >*
      mutable_e_equipimprovesoaring_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipimproveSoaring)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSoaring > e_equipimprovesoaring_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipimproveSoaring* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveSealSealDesc : public ::google::protobuf::Message {
 public:
  E_EquipimproveSealSealDesc();
  virtual ~E_EquipimproveSealSealDesc();

  E_EquipimproveSealSealDesc(const E_EquipimproveSealSealDesc& from);

  inline E_EquipimproveSealSealDesc& operator=(const E_EquipimproveSealSealDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveSealSealDesc& default_instance();

  void Swap(E_EquipimproveSealSealDesc* other);

  // implements Message ----------------------------------------------

  E_EquipimproveSealSealDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveSealSealDesc& from);
  void MergeFrom(const E_EquipimproveSealSealDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveSealSealDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveSealSealDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveSeal : public ::google::protobuf::Message {
 public:
  E_EquipimproveSeal();
  virtual ~E_EquipimproveSeal();

  E_EquipimproveSeal(const E_EquipimproveSeal& from);

  inline E_EquipimproveSeal& operator=(const E_EquipimproveSeal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveSeal& default_instance();

  void Swap(E_EquipimproveSeal* other);

  // implements Message ----------------------------------------------

  E_EquipimproveSeal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveSeal& from);
  void MergeFrom(const E_EquipimproveSeal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_sealposition = 2;
  inline bool has_m_sealposition() const;
  inline void clear_m_sealposition();
  static const int kMSealpositionFieldNumber = 2;
  inline const ::std::string& m_sealposition() const;
  inline void set_m_sealposition(const ::std::string& value);
  inline void set_m_sealposition(const char* value);
  inline void set_m_sealposition(const char* value, size_t size);
  inline ::std::string* mutable_m_sealposition();
  inline ::std::string* release_m_sealposition();
  inline void set_allocated_m_sealposition(::std::string* m_sealposition);

  // optional int32 m_seallv = 3;
  inline bool has_m_seallv() const;
  inline void clear_m_seallv();
  static const int kMSeallvFieldNumber = 3;
  inline ::google::protobuf::int32 m_seallv() const;
  inline void set_m_seallv(::google::protobuf::int32 value);

  // optional int32 m_preid = 4;
  inline bool has_m_preid() const;
  inline void clear_m_preid();
  static const int kMPreidFieldNumber = 4;
  inline ::google::protobuf::int32 m_preid() const;
  inline void set_m_preid(::google::protobuf::int32 value);

  // optional int32 m_nextid = 5;
  inline bool has_m_nextid() const;
  inline void clear_m_nextid();
  static const int kMNextidFieldNumber = 5;
  inline ::google::protobuf::int32 m_nextid() const;
  inline void set_m_nextid(::google::protobuf::int32 value);

  // optional string m_numb = 6;
  inline bool has_m_numb() const;
  inline void clear_m_numb();
  static const int kMNumbFieldNumber = 6;
  inline const ::std::string& m_numb() const;
  inline void set_m_numb(const ::std::string& value);
  inline void set_m_numb(const char* value);
  inline void set_m_numb(const char* value, size_t size);
  inline ::std::string* mutable_m_numb();
  inline ::std::string* release_m_numb();
  inline void set_allocated_m_numb(::std::string* m_numb);

  // optional int32 m_nextvalue = 7;
  inline bool has_m_nextvalue() const;
  inline void clear_m_nextvalue();
  static const int kMNextvalueFieldNumber = 7;
  inline ::google::protobuf::int32 m_nextvalue() const;
  inline void set_m_nextvalue(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EquipimproveSealSealDesc m_seal = 8;
  inline int m_seal_size() const;
  inline void clear_m_seal();
  static const int kMSealFieldNumber = 8;
  inline const ::proto_ff::E_EquipimproveSealSealDesc& m_seal(int index) const;
  inline ::proto_ff::E_EquipimproveSealSealDesc* mutable_m_seal(int index);
  inline ::proto_ff::E_EquipimproveSealSealDesc* add_m_seal();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealSealDesc >&
      m_seal() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealSealDesc >*
      mutable_m_seal();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveSeal)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_sealposition();
  inline void clear_has_m_sealposition();
  inline void set_has_m_seallv();
  inline void clear_has_m_seallv();
  inline void set_has_m_preid();
  inline void clear_has_m_preid();
  inline void set_has_m_nextid();
  inline void clear_has_m_nextid();
  inline void set_has_m_numb();
  inline void clear_has_m_numb();
  inline void set_has_m_nextvalue();
  inline void clear_has_m_nextvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_sealposition_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_seallv_;
  ::google::protobuf::int32 m_preid_;
  ::google::protobuf::int32 m_nextid_;
  ::std::string* m_numb_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealSealDesc > m_seal_;
  ::google::protobuf::int32 m_nextvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveSeal* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipimproveSeal : public ::google::protobuf::Message {
 public:
  Sheet_EquipimproveSeal();
  virtual ~Sheet_EquipimproveSeal();

  Sheet_EquipimproveSeal(const Sheet_EquipimproveSeal& from);

  inline Sheet_EquipimproveSeal& operator=(const Sheet_EquipimproveSeal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipimproveSeal& default_instance();

  void Swap(Sheet_EquipimproveSeal* other);

  // implements Message ----------------------------------------------

  Sheet_EquipimproveSeal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipimproveSeal& from);
  void MergeFrom(const Sheet_EquipimproveSeal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipimproveSeal E_EquipimproveSeal_List = 1;
  inline int e_equipimproveseal_list_size() const;
  inline void clear_e_equipimproveseal_list();
  static const int kEEquipimproveSealListFieldNumber = 1;
  inline const ::proto_ff::E_EquipimproveSeal& e_equipimproveseal_list(int index) const;
  inline ::proto_ff::E_EquipimproveSeal* mutable_e_equipimproveseal_list(int index);
  inline ::proto_ff::E_EquipimproveSeal* add_e_equipimproveseal_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSeal >&
      e_equipimproveseal_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSeal >*
      mutable_e_equipimproveseal_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipimproveSeal)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSeal > e_equipimproveseal_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipimproveSeal* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveSealslot : public ::google::protobuf::Message {
 public:
  E_EquipimproveSealslot();
  virtual ~E_EquipimproveSealslot();

  E_EquipimproveSealslot(const E_EquipimproveSealslot& from);

  inline E_EquipimproveSealslot& operator=(const E_EquipimproveSealslot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveSealslot& default_instance();

  void Swap(E_EquipimproveSealslot* other);

  // implements Message ----------------------------------------------

  E_EquipimproveSealslot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveSealslot& from);
  void MergeFrom(const E_EquipimproveSealslot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_quality = 2;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 2;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_character = 3;
  inline bool has_m_character() const;
  inline void clear_m_character();
  static const int kMCharacterFieldNumber = 3;
  inline ::google::protobuf::int32 m_character() const;
  inline void set_m_character(::google::protobuf::int32 value);

  // optional int32 m_star = 4;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 4;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveSealslot)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_character();
  inline void clear_has_m_character();
  inline void set_has_m_star();
  inline void clear_has_m_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_character_;
  ::google::protobuf::int32 m_star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveSealslot* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipimproveSealslot : public ::google::protobuf::Message {
 public:
  Sheet_EquipimproveSealslot();
  virtual ~Sheet_EquipimproveSealslot();

  Sheet_EquipimproveSealslot(const Sheet_EquipimproveSealslot& from);

  inline Sheet_EquipimproveSealslot& operator=(const Sheet_EquipimproveSealslot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipimproveSealslot& default_instance();

  void Swap(Sheet_EquipimproveSealslot* other);

  // implements Message ----------------------------------------------

  Sheet_EquipimproveSealslot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipimproveSealslot& from);
  void MergeFrom(const Sheet_EquipimproveSealslot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipimproveSealslot E_EquipimproveSealslot_List = 1;
  inline int e_equipimprovesealslot_list_size() const;
  inline void clear_e_equipimprovesealslot_list();
  static const int kEEquipimproveSealslotListFieldNumber = 1;
  inline const ::proto_ff::E_EquipimproveSealslot& e_equipimprovesealslot_list(int index) const;
  inline ::proto_ff::E_EquipimproveSealslot* mutable_e_equipimprovesealslot_list(int index);
  inline ::proto_ff::E_EquipimproveSealslot* add_e_equipimprovesealslot_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealslot >&
      e_equipimprovesealslot_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealslot >*
      mutable_e_equipimprovesealslot_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipimproveSealslot)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealslot > e_equipimprovesealslot_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipimproveSealslot* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveSealsuitSuitDesc : public ::google::protobuf::Message {
 public:
  E_EquipimproveSealsuitSuitDesc();
  virtual ~E_EquipimproveSealsuitSuitDesc();

  E_EquipimproveSealsuitSuitDesc(const E_EquipimproveSealsuitSuitDesc& from);

  inline E_EquipimproveSealsuitSuitDesc& operator=(const E_EquipimproveSealsuitSuitDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveSealsuitSuitDesc& default_instance();

  void Swap(E_EquipimproveSealsuitSuitDesc* other);

  // implements Message ----------------------------------------------

  E_EquipimproveSealsuitSuitDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveSealsuitSuitDesc& from);
  void MergeFrom(const E_EquipimproveSealsuitSuitDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveSealsuitSuitDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveSealsuitSuitDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipimproveSealsuit : public ::google::protobuf::Message {
 public:
  E_EquipimproveSealsuit();
  virtual ~E_EquipimproveSealsuit();

  E_EquipimproveSealsuit(const E_EquipimproveSealsuit& from);

  inline E_EquipimproveSealsuit& operator=(const E_EquipimproveSealsuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipimproveSealsuit& default_instance();

  void Swap(E_EquipimproveSealsuit* other);

  // implements Message ----------------------------------------------

  E_EquipimproveSealsuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipimproveSealsuit& from);
  void MergeFrom(const E_EquipimproveSealsuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_wearnum = 2;
  inline bool has_m_wearnum() const;
  inline void clear_m_wearnum();
  static const int kMWearnumFieldNumber = 2;
  inline ::google::protobuf::int32 m_wearnum() const;
  inline void set_m_wearnum(::google::protobuf::int32 value);

  // optional int32 m_quality = 3;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional string m_position = 4;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 4;
  inline const ::std::string& m_position() const;
  inline void set_m_position(const ::std::string& value);
  inline void set_m_position(const char* value);
  inline void set_m_position(const char* value, size_t size);
  inline ::std::string* mutable_m_position();
  inline ::std::string* release_m_position();
  inline void set_allocated_m_position(::std::string* m_position);

  // repeated .proto_ff.E_EquipimproveSealsuitSuitDesc m_suit = 5;
  inline int m_suit_size() const;
  inline void clear_m_suit();
  static const int kMSuitFieldNumber = 5;
  inline const ::proto_ff::E_EquipimproveSealsuitSuitDesc& m_suit(int index) const;
  inline ::proto_ff::E_EquipimproveSealsuitSuitDesc* mutable_m_suit(int index);
  inline ::proto_ff::E_EquipimproveSealsuitSuitDesc* add_m_suit();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealsuitSuitDesc >&
      m_suit() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealsuitSuitDesc >*
      mutable_m_suit();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipimproveSealsuit)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_wearnum();
  inline void clear_has_m_wearnum();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_position();
  inline void clear_has_m_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_wearnum_;
  ::std::string* m_position_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealsuitSuitDesc > m_suit_;
  ::google::protobuf::int32 m_quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static E_EquipimproveSealsuit* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipimproveSealsuit : public ::google::protobuf::Message {
 public:
  Sheet_EquipimproveSealsuit();
  virtual ~Sheet_EquipimproveSealsuit();

  Sheet_EquipimproveSealsuit(const Sheet_EquipimproveSealsuit& from);

  inline Sheet_EquipimproveSealsuit& operator=(const Sheet_EquipimproveSealsuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipimproveSealsuit& default_instance();

  void Swap(Sheet_EquipimproveSealsuit* other);

  // implements Message ----------------------------------------------

  Sheet_EquipimproveSealsuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipimproveSealsuit& from);
  void MergeFrom(const Sheet_EquipimproveSealsuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipimproveSealsuit E_EquipimproveSealsuit_List = 1;
  inline int e_equipimprovesealsuit_list_size() const;
  inline void clear_e_equipimprovesealsuit_list();
  static const int kEEquipimproveSealsuitListFieldNumber = 1;
  inline const ::proto_ff::E_EquipimproveSealsuit& e_equipimprovesealsuit_list(int index) const;
  inline ::proto_ff::E_EquipimproveSealsuit* mutable_e_equipimprovesealsuit_list(int index);
  inline ::proto_ff::E_EquipimproveSealsuit* add_e_equipimprovesealsuit_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealsuit >&
      e_equipimprovesealsuit_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealsuit >*
      mutable_e_equipimprovesealsuit_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipimproveSealsuit)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealsuit > e_equipimprovesealsuit_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_AssignDesc_E_5fEquipimprove_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquipimprove_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipimproveSealsuit* default_instance_;
};
// ===================================================================


// ===================================================================

// E_EquipimproveUpqualityMaterialDesc

// optional int32 m_num = 1;
inline bool E_EquipimproveUpqualityMaterialDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveUpqualityMaterialDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveUpqualityMaterialDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveUpqualityMaterialDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_EquipimproveUpqualityMaterialDesc::m_num() const {
  return m_num_;
}
inline void E_EquipimproveUpqualityMaterialDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 2;
inline bool E_EquipimproveUpqualityMaterialDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveUpqualityMaterialDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveUpqualityMaterialDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveUpqualityMaterialDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipimproveUpqualityMaterialDesc::m_id() const {
  return m_id_;
}
inline void E_EquipimproveUpqualityMaterialDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_EquipimproveUpqualityAttributeDesc

// optional int32 m_value = 1;
inline bool E_EquipimproveUpqualityAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveUpqualityAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveUpqualityAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveUpqualityAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipimproveUpqualityAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_EquipimproveUpqualityAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipimproveUpqualityAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveUpqualityAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveUpqualityAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveUpqualityAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipimproveUpqualityAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EquipimproveUpqualityAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EquipimproveUpquality

// optional int32 m_id = 1;
inline bool E_EquipimproveUpquality::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveUpquality::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveUpquality::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_id() const {
  return m_id_;
}
inline void E_EquipimproveUpquality::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_quality = 2;
inline bool E_EquipimproveUpquality::has_m_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveUpquality::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveUpquality::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_quality() const {
  return m_quality_;
}
inline void E_EquipimproveUpquality::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional string m_position = 3;
inline bool E_EquipimproveUpquality::has_m_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipimproveUpquality::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipimproveUpquality::clear_m_position() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    m_position_->clear();
  }
  clear_has_m_position();
}
inline const ::std::string& E_EquipimproveUpquality::m_position() const {
  return *m_position_;
}
inline void E_EquipimproveUpquality::set_m_position(const ::std::string& value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_EquipimproveUpquality::set_m_position(const char* value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_EquipimproveUpquality::set_m_position(const char* value, size_t size) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipimproveUpquality::mutable_m_position() {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  return m_position_;
}
inline ::std::string* E_EquipimproveUpquality::release_m_position() {
  clear_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_position_;
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipimproveUpquality::set_allocated_m_position(::std::string* m_position) {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (m_position) {
    set_has_m_position();
    m_position_ = m_position;
  } else {
    clear_has_m_position();
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_wearqualitylimit = 4;
inline bool E_EquipimproveUpquality::has_m_wearqualitylimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_wearqualitylimit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipimproveUpquality::clear_has_m_wearqualitylimit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipimproveUpquality::clear_m_wearqualitylimit() {
  m_wearqualitylimit_ = 0;
  clear_has_m_wearqualitylimit();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_wearqualitylimit() const {
  return m_wearqualitylimit_;
}
inline void E_EquipimproveUpquality::set_m_wearqualitylimit(::google::protobuf::int32 value) {
  set_has_m_wearqualitylimit();
  m_wearqualitylimit_ = value;
}

// optional int32 m_star = 5;
inline bool E_EquipimproveUpquality::has_m_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipimproveUpquality::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipimproveUpquality::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_star() const {
  return m_star_;
}
inline void E_EquipimproveUpquality::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// optional int32 m_starnum = 6;
inline bool E_EquipimproveUpquality::has_m_starnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_starnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipimproveUpquality::clear_has_m_starnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipimproveUpquality::clear_m_starnum() {
  m_starnum_ = 0;
  clear_has_m_starnum();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_starnum() const {
  return m_starnum_;
}
inline void E_EquipimproveUpquality::set_m_starnum(::google::protobuf::int32 value) {
  set_has_m_starnum();
  m_starnum_ = value;
}

// optional int32 m_success = 7;
inline bool E_EquipimproveUpquality::has_m_success() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_success() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EquipimproveUpquality::clear_has_m_success() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EquipimproveUpquality::clear_m_success() {
  m_success_ = 0;
  clear_has_m_success();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_success() const {
  return m_success_;
}
inline void E_EquipimproveUpquality::set_m_success(::google::protobuf::int32 value) {
  set_has_m_success();
  m_success_ = value;
}

// optional int32 m_luckid = 8;
inline bool E_EquipimproveUpquality::has_m_luckid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_luckid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_EquipimproveUpquality::clear_has_m_luckid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_EquipimproveUpquality::clear_m_luckid() {
  m_luckid_ = 0;
  clear_has_m_luckid();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_luckid() const {
  return m_luckid_;
}
inline void E_EquipimproveUpquality::set_m_luckid(::google::protobuf::int32 value) {
  set_has_m_luckid();
  m_luckid_ = value;
}

// optional int32 m_lucksuccess = 9;
inline bool E_EquipimproveUpquality::has_m_lucksuccess() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_lucksuccess() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_EquipimproveUpquality::clear_has_m_lucksuccess() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_EquipimproveUpquality::clear_m_lucksuccess() {
  m_lucksuccess_ = 0;
  clear_has_m_lucksuccess();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_lucksuccess() const {
  return m_lucksuccess_;
}
inline void E_EquipimproveUpquality::set_m_lucksuccess(::google::protobuf::int32 value) {
  set_has_m_lucksuccess();
  m_lucksuccess_ = value;
}

// optional int32 m_lucknum = 10;
inline bool E_EquipimproveUpquality::has_m_lucknum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_lucknum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_EquipimproveUpquality::clear_has_m_lucknum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_EquipimproveUpquality::clear_m_lucknum() {
  m_lucknum_ = 0;
  clear_has_m_lucknum();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_lucknum() const {
  return m_lucknum_;
}
inline void E_EquipimproveUpquality::set_m_lucknum(::google::protobuf::int32 value) {
  set_has_m_lucknum();
  m_lucknum_ = value;
}

// optional int32 m_qualityatt = 11;
inline bool E_EquipimproveUpquality::has_m_qualityatt() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_qualityatt() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_EquipimproveUpquality::clear_has_m_qualityatt() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_EquipimproveUpquality::clear_m_qualityatt() {
  m_qualityatt_ = 0;
  clear_has_m_qualityatt();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_qualityatt() const {
  return m_qualityatt_;
}
inline void E_EquipimproveUpquality::set_m_qualityatt(::google::protobuf::int32 value) {
  set_has_m_qualityatt();
  m_qualityatt_ = value;
}

// optional int32 m_qualityvalue = 12;
inline bool E_EquipimproveUpquality::has_m_qualityvalue() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_EquipimproveUpquality::set_has_m_qualityvalue() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_EquipimproveUpquality::clear_has_m_qualityvalue() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_EquipimproveUpquality::clear_m_qualityvalue() {
  m_qualityvalue_ = 0;
  clear_has_m_qualityvalue();
}
inline ::google::protobuf::int32 E_EquipimproveUpquality::m_qualityvalue() const {
  return m_qualityvalue_;
}
inline void E_EquipimproveUpquality::set_m_qualityvalue(::google::protobuf::int32 value) {
  set_has_m_qualityvalue();
  m_qualityvalue_ = value;
}

// repeated .proto_ff.E_EquipimproveUpqualityMaterialDesc m_material = 13;
inline int E_EquipimproveUpquality::m_material_size() const {
  return m_material_.size();
}
inline void E_EquipimproveUpquality::clear_m_material() {
  m_material_.Clear();
}
inline const ::proto_ff::E_EquipimproveUpqualityMaterialDesc& E_EquipimproveUpquality::m_material(int index) const {
  return m_material_.Get(index);
}
inline ::proto_ff::E_EquipimproveUpqualityMaterialDesc* E_EquipimproveUpquality::mutable_m_material(int index) {
  return m_material_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveUpqualityMaterialDesc* E_EquipimproveUpquality::add_m_material() {
  return m_material_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpqualityMaterialDesc >&
E_EquipimproveUpquality::m_material() const {
  return m_material_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpqualityMaterialDesc >*
E_EquipimproveUpquality::mutable_m_material() {
  return &m_material_;
}

// repeated .proto_ff.E_EquipimproveUpqualityAttributeDesc m_attribute = 14;
inline int E_EquipimproveUpquality::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipimproveUpquality::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipimproveUpqualityAttributeDesc& E_EquipimproveUpquality::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipimproveUpqualityAttributeDesc* E_EquipimproveUpquality::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveUpqualityAttributeDesc* E_EquipimproveUpquality::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpqualityAttributeDesc >&
E_EquipimproveUpquality::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpqualityAttributeDesc >*
E_EquipimproveUpquality::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_EquipimproveUpquality

// repeated .proto_ff.E_EquipimproveUpquality E_EquipimproveUpquality_List = 1;
inline int Sheet_EquipimproveUpquality::e_equipimproveupquality_list_size() const {
  return e_equipimproveupquality_list_.size();
}
inline void Sheet_EquipimproveUpquality::clear_e_equipimproveupquality_list() {
  e_equipimproveupquality_list_.Clear();
}
inline const ::proto_ff::E_EquipimproveUpquality& Sheet_EquipimproveUpquality::e_equipimproveupquality_list(int index) const {
  return e_equipimproveupquality_list_.Get(index);
}
inline ::proto_ff::E_EquipimproveUpquality* Sheet_EquipimproveUpquality::mutable_e_equipimproveupquality_list(int index) {
  return e_equipimproveupquality_list_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveUpquality* Sheet_EquipimproveUpquality::add_e_equipimproveupquality_list() {
  return e_equipimproveupquality_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpquality >&
Sheet_EquipimproveUpquality::e_equipimproveupquality_list() const {
  return e_equipimproveupquality_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveUpquality >*
Sheet_EquipimproveUpquality::mutable_e_equipimproveupquality_list() {
  return &e_equipimproveupquality_list_;
}

// -------------------------------------------------------------------

// E_EquipimproveAwakenAttributeDesc

// optional int32 m_value = 1;
inline bool E_EquipimproveAwakenAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveAwakenAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveAwakenAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveAwakenAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipimproveAwakenAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_EquipimproveAwakenAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipimproveAwakenAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveAwakenAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveAwakenAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveAwakenAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipimproveAwakenAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EquipimproveAwakenAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EquipimproveAwakenBreakDesc

// optional int32 m_value = 1;
inline bool E_EquipimproveAwakenBreakDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveAwakenBreakDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveAwakenBreakDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveAwakenBreakDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipimproveAwakenBreakDesc::m_value() const {
  return m_value_;
}
inline void E_EquipimproveAwakenBreakDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipimproveAwakenBreakDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveAwakenBreakDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveAwakenBreakDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveAwakenBreakDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipimproveAwakenBreakDesc::m_type() const {
  return m_type_;
}
inline void E_EquipimproveAwakenBreakDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EquipimproveAwaken

// optional int32 m_id = 1;
inline bool E_EquipimproveAwaken::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveAwaken::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveAwaken::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipimproveAwaken::m_id() const {
  return m_id_;
}
inline void E_EquipimproveAwaken::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_quality = 2;
inline bool E_EquipimproveAwaken::has_m_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveAwaken::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveAwaken::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_EquipimproveAwaken::m_quality() const {
  return m_quality_;
}
inline void E_EquipimproveAwaken::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional string m_position = 3;
inline bool E_EquipimproveAwaken::has_m_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipimproveAwaken::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipimproveAwaken::clear_m_position() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    m_position_->clear();
  }
  clear_has_m_position();
}
inline const ::std::string& E_EquipimproveAwaken::m_position() const {
  return *m_position_;
}
inline void E_EquipimproveAwaken::set_m_position(const ::std::string& value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_EquipimproveAwaken::set_m_position(const char* value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_EquipimproveAwaken::set_m_position(const char* value, size_t size) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipimproveAwaken::mutable_m_position() {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  return m_position_;
}
inline ::std::string* E_EquipimproveAwaken::release_m_position() {
  clear_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_position_;
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipimproveAwaken::set_allocated_m_position(::std::string* m_position) {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (m_position) {
    set_has_m_position();
    m_position_ = m_position;
  } else {
    clear_has_m_position();
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_wearqualitylimit = 4;
inline bool E_EquipimproveAwaken::has_m_wearqualitylimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_wearqualitylimit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipimproveAwaken::clear_has_m_wearqualitylimit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipimproveAwaken::clear_m_wearqualitylimit() {
  m_wearqualitylimit_ = 0;
  clear_has_m_wearqualitylimit();
}
inline ::google::protobuf::int32 E_EquipimproveAwaken::m_wearqualitylimit() const {
  return m_wearqualitylimit_;
}
inline void E_EquipimproveAwaken::set_m_wearqualitylimit(::google::protobuf::int32 value) {
  set_has_m_wearqualitylimit();
  m_wearqualitylimit_ = value;
}

// optional int32 m_qualitylimit = 5;
inline bool E_EquipimproveAwaken::has_m_qualitylimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_qualitylimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipimproveAwaken::clear_has_m_qualitylimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipimproveAwaken::clear_m_qualitylimit() {
  m_qualitylimit_ = 0;
  clear_has_m_qualitylimit();
}
inline ::google::protobuf::int32 E_EquipimproveAwaken::m_qualitylimit() const {
  return m_qualitylimit_;
}
inline void E_EquipimproveAwaken::set_m_qualitylimit(::google::protobuf::int32 value) {
  set_has_m_qualitylimit();
  m_qualitylimit_ = value;
}

// optional int32 m_wearstarlimit = 6;
inline bool E_EquipimproveAwaken::has_m_wearstarlimit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_wearstarlimit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipimproveAwaken::clear_has_m_wearstarlimit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipimproveAwaken::clear_m_wearstarlimit() {
  m_wearstarlimit_ = 0;
  clear_has_m_wearstarlimit();
}
inline ::google::protobuf::int32 E_EquipimproveAwaken::m_wearstarlimit() const {
  return m_wearstarlimit_;
}
inline void E_EquipimproveAwaken::set_m_wearstarlimit(::google::protobuf::int32 value) {
  set_has_m_wearstarlimit();
  m_wearstarlimit_ = value;
}

// optional int32 m_awakenlv = 7;
inline bool E_EquipimproveAwaken::has_m_awakenlv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_awakenlv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EquipimproveAwaken::clear_has_m_awakenlv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EquipimproveAwaken::clear_m_awakenlv() {
  m_awakenlv_ = 0;
  clear_has_m_awakenlv();
}
inline ::google::protobuf::int32 E_EquipimproveAwaken::m_awakenlv() const {
  return m_awakenlv_;
}
inline void E_EquipimproveAwaken::set_m_awakenlv(::google::protobuf::int32 value) {
  set_has_m_awakenlv();
  m_awakenlv_ = value;
}

// optional int32 m_material_id = 8;
inline bool E_EquipimproveAwaken::has_m_material_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_material_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_EquipimproveAwaken::clear_has_m_material_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_EquipimproveAwaken::clear_m_material_id() {
  m_material_id_ = 0;
  clear_has_m_material_id();
}
inline ::google::protobuf::int32 E_EquipimproveAwaken::m_material_id() const {
  return m_material_id_;
}
inline void E_EquipimproveAwaken::set_m_material_id(::google::protobuf::int32 value) {
  set_has_m_material_id();
  m_material_id_ = value;
}

// optional int32 m_material_num = 9;
inline bool E_EquipimproveAwaken::has_m_material_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_material_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_EquipimproveAwaken::clear_has_m_material_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_EquipimproveAwaken::clear_m_material_num() {
  m_material_num_ = 0;
  clear_has_m_material_num();
}
inline ::google::protobuf::int32 E_EquipimproveAwaken::m_material_num() const {
  return m_material_num_;
}
inline void E_EquipimproveAwaken::set_m_material_num(::google::protobuf::int32 value) {
  set_has_m_material_num();
  m_material_num_ = value;
}

// optional int32 m_break_id = 10;
inline bool E_EquipimproveAwaken::has_m_break_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_break_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_EquipimproveAwaken::clear_has_m_break_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_EquipimproveAwaken::clear_m_break_id() {
  m_break_id_ = 0;
  clear_has_m_break_id();
}
inline ::google::protobuf::int32 E_EquipimproveAwaken::m_break_id() const {
  return m_break_id_;
}
inline void E_EquipimproveAwaken::set_m_break_id(::google::protobuf::int32 value) {
  set_has_m_break_id();
  m_break_id_ = value;
}

// optional int32 m_break_num = 11;
inline bool E_EquipimproveAwaken::has_m_break_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_EquipimproveAwaken::set_has_m_break_num() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_EquipimproveAwaken::clear_has_m_break_num() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_EquipimproveAwaken::clear_m_break_num() {
  m_break_num_ = 0;
  clear_has_m_break_num();
}
inline ::google::protobuf::int32 E_EquipimproveAwaken::m_break_num() const {
  return m_break_num_;
}
inline void E_EquipimproveAwaken::set_m_break_num(::google::protobuf::int32 value) {
  set_has_m_break_num();
  m_break_num_ = value;
}

// repeated .proto_ff.E_EquipimproveAwakenAttributeDesc m_attribute = 12;
inline int E_EquipimproveAwaken::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipimproveAwaken::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipimproveAwakenAttributeDesc& E_EquipimproveAwaken::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipimproveAwakenAttributeDesc* E_EquipimproveAwaken::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveAwakenAttributeDesc* E_EquipimproveAwaken::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwakenAttributeDesc >&
E_EquipimproveAwaken::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwakenAttributeDesc >*
E_EquipimproveAwaken::mutable_m_attribute() {
  return &m_attribute_;
}

// repeated .proto_ff.E_EquipimproveAwakenBreakDesc m_break = 13;
inline int E_EquipimproveAwaken::m_break_size() const {
  return m_break_.size();
}
inline void E_EquipimproveAwaken::clear_m_break() {
  m_break_.Clear();
}
inline const ::proto_ff::E_EquipimproveAwakenBreakDesc& E_EquipimproveAwaken::m_break(int index) const {
  return m_break_.Get(index);
}
inline ::proto_ff::E_EquipimproveAwakenBreakDesc* E_EquipimproveAwaken::mutable_m_break(int index) {
  return m_break_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveAwakenBreakDesc* E_EquipimproveAwaken::add_m_break() {
  return m_break_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwakenBreakDesc >&
E_EquipimproveAwaken::m_break() const {
  return m_break_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwakenBreakDesc >*
E_EquipimproveAwaken::mutable_m_break() {
  return &m_break_;
}

// -------------------------------------------------------------------

// Sheet_EquipimproveAwaken

// repeated .proto_ff.E_EquipimproveAwaken E_EquipimproveAwaken_List = 1;
inline int Sheet_EquipimproveAwaken::e_equipimproveawaken_list_size() const {
  return e_equipimproveawaken_list_.size();
}
inline void Sheet_EquipimproveAwaken::clear_e_equipimproveawaken_list() {
  e_equipimproveawaken_list_.Clear();
}
inline const ::proto_ff::E_EquipimproveAwaken& Sheet_EquipimproveAwaken::e_equipimproveawaken_list(int index) const {
  return e_equipimproveawaken_list_.Get(index);
}
inline ::proto_ff::E_EquipimproveAwaken* Sheet_EquipimproveAwaken::mutable_e_equipimproveawaken_list(int index) {
  return e_equipimproveawaken_list_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveAwaken* Sheet_EquipimproveAwaken::add_e_equipimproveawaken_list() {
  return e_equipimproveawaken_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwaken >&
Sheet_EquipimproveAwaken::e_equipimproveawaken_list() const {
  return e_equipimproveawaken_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveAwaken >*
Sheet_EquipimproveAwaken::mutable_e_equipimproveawaken_list() {
  return &e_equipimproveawaken_list_;
}

// -------------------------------------------------------------------

// E_EquipimproveSoaringAttrDesc

// optional int32 m_value = 1;
inline bool E_EquipimproveSoaringAttrDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveSoaringAttrDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveSoaringAttrDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveSoaringAttrDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipimproveSoaringAttrDesc::m_value() const {
  return m_value_;
}
inline void E_EquipimproveSoaringAttrDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipimproveSoaringAttrDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveSoaringAttrDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveSoaringAttrDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveSoaringAttrDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipimproveSoaringAttrDesc::m_type() const {
  return m_type_;
}
inline void E_EquipimproveSoaringAttrDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EquipimproveSoaring

// optional int32 m_id = 1;
inline bool E_EquipimproveSoaring::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveSoaring::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveSoaring::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveSoaring::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipimproveSoaring::m_id() const {
  return m_id_;
}
inline void E_EquipimproveSoaring::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_lvid = 2;
inline bool E_EquipimproveSoaring::has_m_lvid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveSoaring::set_has_m_lvid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveSoaring::clear_has_m_lvid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveSoaring::clear_m_lvid() {
  m_lvid_ = 0;
  clear_has_m_lvid();
}
inline ::google::protobuf::int32 E_EquipimproveSoaring::m_lvid() const {
  return m_lvid_;
}
inline void E_EquipimproveSoaring::set_m_lvid(::google::protobuf::int32 value) {
  set_has_m_lvid();
  m_lvid_ = value;
}

// optional int32 m_awaken = 3;
inline bool E_EquipimproveSoaring::has_m_awaken() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipimproveSoaring::set_has_m_awaken() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipimproveSoaring::clear_has_m_awaken() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipimproveSoaring::clear_m_awaken() {
  m_awaken_ = 0;
  clear_has_m_awaken();
}
inline ::google::protobuf::int32 E_EquipimproveSoaring::m_awaken() const {
  return m_awaken_;
}
inline void E_EquipimproveSoaring::set_m_awaken(::google::protobuf::int32 value) {
  set_has_m_awaken();
  m_awaken_ = value;
}

// optional int32 m_itemid = 4;
inline bool E_EquipimproveSoaring::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipimproveSoaring::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipimproveSoaring::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipimproveSoaring::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_EquipimproveSoaring::m_itemid() const {
  return m_itemid_;
}
inline void E_EquipimproveSoaring::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_itemnum = 5;
inline bool E_EquipimproveSoaring::has_m_itemnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipimproveSoaring::set_has_m_itemnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipimproveSoaring::clear_has_m_itemnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipimproveSoaring::clear_m_itemnum() {
  m_itemnum_ = 0;
  clear_has_m_itemnum();
}
inline ::google::protobuf::int32 E_EquipimproveSoaring::m_itemnum() const {
  return m_itemnum_;
}
inline void E_EquipimproveSoaring::set_m_itemnum(::google::protobuf::int32 value) {
  set_has_m_itemnum();
  m_itemnum_ = value;
}

// optional string m_position = 6;
inline bool E_EquipimproveSoaring::has_m_position() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipimproveSoaring::set_has_m_position() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipimproveSoaring::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipimproveSoaring::clear_m_position() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    m_position_->clear();
  }
  clear_has_m_position();
}
inline const ::std::string& E_EquipimproveSoaring::m_position() const {
  return *m_position_;
}
inline void E_EquipimproveSoaring::set_m_position(const ::std::string& value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_EquipimproveSoaring::set_m_position(const char* value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_EquipimproveSoaring::set_m_position(const char* value, size_t size) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipimproveSoaring::mutable_m_position() {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  return m_position_;
}
inline ::std::string* E_EquipimproveSoaring::release_m_position() {
  clear_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_position_;
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipimproveSoaring::set_allocated_m_position(::std::string* m_position) {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (m_position) {
    set_has_m_position();
    m_position_ = m_position;
  } else {
    clear_has_m_position();
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_EquipimproveSoaringAttrDesc m_attr = 7;
inline int E_EquipimproveSoaring::m_attr_size() const {
  return m_attr_.size();
}
inline void E_EquipimproveSoaring::clear_m_attr() {
  m_attr_.Clear();
}
inline const ::proto_ff::E_EquipimproveSoaringAttrDesc& E_EquipimproveSoaring::m_attr(int index) const {
  return m_attr_.Get(index);
}
inline ::proto_ff::E_EquipimproveSoaringAttrDesc* E_EquipimproveSoaring::mutable_m_attr(int index) {
  return m_attr_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveSoaringAttrDesc* E_EquipimproveSoaring::add_m_attr() {
  return m_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSoaringAttrDesc >&
E_EquipimproveSoaring::m_attr() const {
  return m_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSoaringAttrDesc >*
E_EquipimproveSoaring::mutable_m_attr() {
  return &m_attr_;
}

// -------------------------------------------------------------------

// Sheet_EquipimproveSoaring

// repeated .proto_ff.E_EquipimproveSoaring E_EquipimproveSoaring_List = 1;
inline int Sheet_EquipimproveSoaring::e_equipimprovesoaring_list_size() const {
  return e_equipimprovesoaring_list_.size();
}
inline void Sheet_EquipimproveSoaring::clear_e_equipimprovesoaring_list() {
  e_equipimprovesoaring_list_.Clear();
}
inline const ::proto_ff::E_EquipimproveSoaring& Sheet_EquipimproveSoaring::e_equipimprovesoaring_list(int index) const {
  return e_equipimprovesoaring_list_.Get(index);
}
inline ::proto_ff::E_EquipimproveSoaring* Sheet_EquipimproveSoaring::mutable_e_equipimprovesoaring_list(int index) {
  return e_equipimprovesoaring_list_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveSoaring* Sheet_EquipimproveSoaring::add_e_equipimprovesoaring_list() {
  return e_equipimprovesoaring_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSoaring >&
Sheet_EquipimproveSoaring::e_equipimprovesoaring_list() const {
  return e_equipimprovesoaring_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSoaring >*
Sheet_EquipimproveSoaring::mutable_e_equipimprovesoaring_list() {
  return &e_equipimprovesoaring_list_;
}

// -------------------------------------------------------------------

// E_EquipimproveSealSealDesc

// optional int32 m_value = 1;
inline bool E_EquipimproveSealSealDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveSealSealDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveSealSealDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveSealSealDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipimproveSealSealDesc::m_value() const {
  return m_value_;
}
inline void E_EquipimproveSealSealDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipimproveSealSealDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveSealSealDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveSealSealDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveSealSealDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipimproveSealSealDesc::m_type() const {
  return m_type_;
}
inline void E_EquipimproveSealSealDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EquipimproveSeal

// optional int32 m_id = 1;
inline bool E_EquipimproveSeal::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveSeal::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveSeal::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveSeal::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipimproveSeal::m_id() const {
  return m_id_;
}
inline void E_EquipimproveSeal::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_sealposition = 2;
inline bool E_EquipimproveSeal::has_m_sealposition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveSeal::set_has_m_sealposition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveSeal::clear_has_m_sealposition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveSeal::clear_m_sealposition() {
  if (m_sealposition_ != &::google::protobuf::internal::kEmptyString) {
    m_sealposition_->clear();
  }
  clear_has_m_sealposition();
}
inline const ::std::string& E_EquipimproveSeal::m_sealposition() const {
  return *m_sealposition_;
}
inline void E_EquipimproveSeal::set_m_sealposition(const ::std::string& value) {
  set_has_m_sealposition();
  if (m_sealposition_ == &::google::protobuf::internal::kEmptyString) {
    m_sealposition_ = new ::std::string;
  }
  m_sealposition_->assign(value);
}
inline void E_EquipimproveSeal::set_m_sealposition(const char* value) {
  set_has_m_sealposition();
  if (m_sealposition_ == &::google::protobuf::internal::kEmptyString) {
    m_sealposition_ = new ::std::string;
  }
  m_sealposition_->assign(value);
}
inline void E_EquipimproveSeal::set_m_sealposition(const char* value, size_t size) {
  set_has_m_sealposition();
  if (m_sealposition_ == &::google::protobuf::internal::kEmptyString) {
    m_sealposition_ = new ::std::string;
  }
  m_sealposition_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipimproveSeal::mutable_m_sealposition() {
  set_has_m_sealposition();
  if (m_sealposition_ == &::google::protobuf::internal::kEmptyString) {
    m_sealposition_ = new ::std::string;
  }
  return m_sealposition_;
}
inline ::std::string* E_EquipimproveSeal::release_m_sealposition() {
  clear_has_m_sealposition();
  if (m_sealposition_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_sealposition_;
    m_sealposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipimproveSeal::set_allocated_m_sealposition(::std::string* m_sealposition) {
  if (m_sealposition_ != &::google::protobuf::internal::kEmptyString) {
    delete m_sealposition_;
  }
  if (m_sealposition) {
    set_has_m_sealposition();
    m_sealposition_ = m_sealposition;
  } else {
    clear_has_m_sealposition();
    m_sealposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_seallv = 3;
inline bool E_EquipimproveSeal::has_m_seallv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipimproveSeal::set_has_m_seallv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipimproveSeal::clear_has_m_seallv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipimproveSeal::clear_m_seallv() {
  m_seallv_ = 0;
  clear_has_m_seallv();
}
inline ::google::protobuf::int32 E_EquipimproveSeal::m_seallv() const {
  return m_seallv_;
}
inline void E_EquipimproveSeal::set_m_seallv(::google::protobuf::int32 value) {
  set_has_m_seallv();
  m_seallv_ = value;
}

// optional int32 m_preid = 4;
inline bool E_EquipimproveSeal::has_m_preid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipimproveSeal::set_has_m_preid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipimproveSeal::clear_has_m_preid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipimproveSeal::clear_m_preid() {
  m_preid_ = 0;
  clear_has_m_preid();
}
inline ::google::protobuf::int32 E_EquipimproveSeal::m_preid() const {
  return m_preid_;
}
inline void E_EquipimproveSeal::set_m_preid(::google::protobuf::int32 value) {
  set_has_m_preid();
  m_preid_ = value;
}

// optional int32 m_nextid = 5;
inline bool E_EquipimproveSeal::has_m_nextid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipimproveSeal::set_has_m_nextid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipimproveSeal::clear_has_m_nextid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipimproveSeal::clear_m_nextid() {
  m_nextid_ = 0;
  clear_has_m_nextid();
}
inline ::google::protobuf::int32 E_EquipimproveSeal::m_nextid() const {
  return m_nextid_;
}
inline void E_EquipimproveSeal::set_m_nextid(::google::protobuf::int32 value) {
  set_has_m_nextid();
  m_nextid_ = value;
}

// optional string m_numb = 6;
inline bool E_EquipimproveSeal::has_m_numb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipimproveSeal::set_has_m_numb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipimproveSeal::clear_has_m_numb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipimproveSeal::clear_m_numb() {
  if (m_numb_ != &::google::protobuf::internal::kEmptyString) {
    m_numb_->clear();
  }
  clear_has_m_numb();
}
inline const ::std::string& E_EquipimproveSeal::m_numb() const {
  return *m_numb_;
}
inline void E_EquipimproveSeal::set_m_numb(const ::std::string& value) {
  set_has_m_numb();
  if (m_numb_ == &::google::protobuf::internal::kEmptyString) {
    m_numb_ = new ::std::string;
  }
  m_numb_->assign(value);
}
inline void E_EquipimproveSeal::set_m_numb(const char* value) {
  set_has_m_numb();
  if (m_numb_ == &::google::protobuf::internal::kEmptyString) {
    m_numb_ = new ::std::string;
  }
  m_numb_->assign(value);
}
inline void E_EquipimproveSeal::set_m_numb(const char* value, size_t size) {
  set_has_m_numb();
  if (m_numb_ == &::google::protobuf::internal::kEmptyString) {
    m_numb_ = new ::std::string;
  }
  m_numb_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipimproveSeal::mutable_m_numb() {
  set_has_m_numb();
  if (m_numb_ == &::google::protobuf::internal::kEmptyString) {
    m_numb_ = new ::std::string;
  }
  return m_numb_;
}
inline ::std::string* E_EquipimproveSeal::release_m_numb() {
  clear_has_m_numb();
  if (m_numb_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_numb_;
    m_numb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipimproveSeal::set_allocated_m_numb(::std::string* m_numb) {
  if (m_numb_ != &::google::protobuf::internal::kEmptyString) {
    delete m_numb_;
  }
  if (m_numb) {
    set_has_m_numb();
    m_numb_ = m_numb;
  } else {
    clear_has_m_numb();
    m_numb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_nextvalue = 7;
inline bool E_EquipimproveSeal::has_m_nextvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EquipimproveSeal::set_has_m_nextvalue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EquipimproveSeal::clear_has_m_nextvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EquipimproveSeal::clear_m_nextvalue() {
  m_nextvalue_ = 0;
  clear_has_m_nextvalue();
}
inline ::google::protobuf::int32 E_EquipimproveSeal::m_nextvalue() const {
  return m_nextvalue_;
}
inline void E_EquipimproveSeal::set_m_nextvalue(::google::protobuf::int32 value) {
  set_has_m_nextvalue();
  m_nextvalue_ = value;
}

// repeated .proto_ff.E_EquipimproveSealSealDesc m_seal = 8;
inline int E_EquipimproveSeal::m_seal_size() const {
  return m_seal_.size();
}
inline void E_EquipimproveSeal::clear_m_seal() {
  m_seal_.Clear();
}
inline const ::proto_ff::E_EquipimproveSealSealDesc& E_EquipimproveSeal::m_seal(int index) const {
  return m_seal_.Get(index);
}
inline ::proto_ff::E_EquipimproveSealSealDesc* E_EquipimproveSeal::mutable_m_seal(int index) {
  return m_seal_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveSealSealDesc* E_EquipimproveSeal::add_m_seal() {
  return m_seal_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealSealDesc >&
E_EquipimproveSeal::m_seal() const {
  return m_seal_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealSealDesc >*
E_EquipimproveSeal::mutable_m_seal() {
  return &m_seal_;
}

// -------------------------------------------------------------------

// Sheet_EquipimproveSeal

// repeated .proto_ff.E_EquipimproveSeal E_EquipimproveSeal_List = 1;
inline int Sheet_EquipimproveSeal::e_equipimproveseal_list_size() const {
  return e_equipimproveseal_list_.size();
}
inline void Sheet_EquipimproveSeal::clear_e_equipimproveseal_list() {
  e_equipimproveseal_list_.Clear();
}
inline const ::proto_ff::E_EquipimproveSeal& Sheet_EquipimproveSeal::e_equipimproveseal_list(int index) const {
  return e_equipimproveseal_list_.Get(index);
}
inline ::proto_ff::E_EquipimproveSeal* Sheet_EquipimproveSeal::mutable_e_equipimproveseal_list(int index) {
  return e_equipimproveseal_list_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveSeal* Sheet_EquipimproveSeal::add_e_equipimproveseal_list() {
  return e_equipimproveseal_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSeal >&
Sheet_EquipimproveSeal::e_equipimproveseal_list() const {
  return e_equipimproveseal_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSeal >*
Sheet_EquipimproveSeal::mutable_e_equipimproveseal_list() {
  return &e_equipimproveseal_list_;
}

// -------------------------------------------------------------------

// E_EquipimproveSealslot

// optional int32 m_id = 1;
inline bool E_EquipimproveSealslot::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveSealslot::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveSealslot::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveSealslot::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipimproveSealslot::m_id() const {
  return m_id_;
}
inline void E_EquipimproveSealslot::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_quality = 2;
inline bool E_EquipimproveSealslot::has_m_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveSealslot::set_has_m_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveSealslot::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveSealslot::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_EquipimproveSealslot::m_quality() const {
  return m_quality_;
}
inline void E_EquipimproveSealslot::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_character = 3;
inline bool E_EquipimproveSealslot::has_m_character() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipimproveSealslot::set_has_m_character() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipimproveSealslot::clear_has_m_character() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipimproveSealslot::clear_m_character() {
  m_character_ = 0;
  clear_has_m_character();
}
inline ::google::protobuf::int32 E_EquipimproveSealslot::m_character() const {
  return m_character_;
}
inline void E_EquipimproveSealslot::set_m_character(::google::protobuf::int32 value) {
  set_has_m_character();
  m_character_ = value;
}

// optional int32 m_star = 4;
inline bool E_EquipimproveSealslot::has_m_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipimproveSealslot::set_has_m_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipimproveSealslot::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipimproveSealslot::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 E_EquipimproveSealslot::m_star() const {
  return m_star_;
}
inline void E_EquipimproveSealslot::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// -------------------------------------------------------------------

// Sheet_EquipimproveSealslot

// repeated .proto_ff.E_EquipimproveSealslot E_EquipimproveSealslot_List = 1;
inline int Sheet_EquipimproveSealslot::e_equipimprovesealslot_list_size() const {
  return e_equipimprovesealslot_list_.size();
}
inline void Sheet_EquipimproveSealslot::clear_e_equipimprovesealslot_list() {
  e_equipimprovesealslot_list_.Clear();
}
inline const ::proto_ff::E_EquipimproveSealslot& Sheet_EquipimproveSealslot::e_equipimprovesealslot_list(int index) const {
  return e_equipimprovesealslot_list_.Get(index);
}
inline ::proto_ff::E_EquipimproveSealslot* Sheet_EquipimproveSealslot::mutable_e_equipimprovesealslot_list(int index) {
  return e_equipimprovesealslot_list_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveSealslot* Sheet_EquipimproveSealslot::add_e_equipimprovesealslot_list() {
  return e_equipimprovesealslot_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealslot >&
Sheet_EquipimproveSealslot::e_equipimprovesealslot_list() const {
  return e_equipimprovesealslot_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealslot >*
Sheet_EquipimproveSealslot::mutable_e_equipimprovesealslot_list() {
  return &e_equipimprovesealslot_list_;
}

// -------------------------------------------------------------------

// E_EquipimproveSealsuitSuitDesc

// optional int32 m_value = 1;
inline bool E_EquipimproveSealsuitSuitDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveSealsuitSuitDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveSealsuitSuitDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveSealsuitSuitDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipimproveSealsuitSuitDesc::m_value() const {
  return m_value_;
}
inline void E_EquipimproveSealsuitSuitDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipimproveSealsuitSuitDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveSealsuitSuitDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveSealsuitSuitDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveSealsuitSuitDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipimproveSealsuitSuitDesc::m_type() const {
  return m_type_;
}
inline void E_EquipimproveSealsuitSuitDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EquipimproveSealsuit

// optional int32 m_id = 1;
inline bool E_EquipimproveSealsuit::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipimproveSealsuit::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipimproveSealsuit::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipimproveSealsuit::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipimproveSealsuit::m_id() const {
  return m_id_;
}
inline void E_EquipimproveSealsuit::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_wearnum = 2;
inline bool E_EquipimproveSealsuit::has_m_wearnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipimproveSealsuit::set_has_m_wearnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipimproveSealsuit::clear_has_m_wearnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipimproveSealsuit::clear_m_wearnum() {
  m_wearnum_ = 0;
  clear_has_m_wearnum();
}
inline ::google::protobuf::int32 E_EquipimproveSealsuit::m_wearnum() const {
  return m_wearnum_;
}
inline void E_EquipimproveSealsuit::set_m_wearnum(::google::protobuf::int32 value) {
  set_has_m_wearnum();
  m_wearnum_ = value;
}

// optional int32 m_quality = 3;
inline bool E_EquipimproveSealsuit::has_m_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipimproveSealsuit::set_has_m_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipimproveSealsuit::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipimproveSealsuit::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_EquipimproveSealsuit::m_quality() const {
  return m_quality_;
}
inline void E_EquipimproveSealsuit::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional string m_position = 4;
inline bool E_EquipimproveSealsuit::has_m_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipimproveSealsuit::set_has_m_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipimproveSealsuit::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipimproveSealsuit::clear_m_position() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    m_position_->clear();
  }
  clear_has_m_position();
}
inline const ::std::string& E_EquipimproveSealsuit::m_position() const {
  return *m_position_;
}
inline void E_EquipimproveSealsuit::set_m_position(const ::std::string& value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_EquipimproveSealsuit::set_m_position(const char* value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_EquipimproveSealsuit::set_m_position(const char* value, size_t size) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipimproveSealsuit::mutable_m_position() {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  return m_position_;
}
inline ::std::string* E_EquipimproveSealsuit::release_m_position() {
  clear_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_position_;
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipimproveSealsuit::set_allocated_m_position(::std::string* m_position) {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (m_position) {
    set_has_m_position();
    m_position_ = m_position;
  } else {
    clear_has_m_position();
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_EquipimproveSealsuitSuitDesc m_suit = 5;
inline int E_EquipimproveSealsuit::m_suit_size() const {
  return m_suit_.size();
}
inline void E_EquipimproveSealsuit::clear_m_suit() {
  m_suit_.Clear();
}
inline const ::proto_ff::E_EquipimproveSealsuitSuitDesc& E_EquipimproveSealsuit::m_suit(int index) const {
  return m_suit_.Get(index);
}
inline ::proto_ff::E_EquipimproveSealsuitSuitDesc* E_EquipimproveSealsuit::mutable_m_suit(int index) {
  return m_suit_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveSealsuitSuitDesc* E_EquipimproveSealsuit::add_m_suit() {
  return m_suit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealsuitSuitDesc >&
E_EquipimproveSealsuit::m_suit() const {
  return m_suit_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealsuitSuitDesc >*
E_EquipimproveSealsuit::mutable_m_suit() {
  return &m_suit_;
}

// -------------------------------------------------------------------

// Sheet_EquipimproveSealsuit

// repeated .proto_ff.E_EquipimproveSealsuit E_EquipimproveSealsuit_List = 1;
inline int Sheet_EquipimproveSealsuit::e_equipimprovesealsuit_list_size() const {
  return e_equipimprovesealsuit_list_.size();
}
inline void Sheet_EquipimproveSealsuit::clear_e_equipimprovesealsuit_list() {
  e_equipimprovesealsuit_list_.Clear();
}
inline const ::proto_ff::E_EquipimproveSealsuit& Sheet_EquipimproveSealsuit::e_equipimprovesealsuit_list(int index) const {
  return e_equipimprovesealsuit_list_.Get(index);
}
inline ::proto_ff::E_EquipimproveSealsuit* Sheet_EquipimproveSealsuit::mutable_e_equipimprovesealsuit_list(int index) {
  return e_equipimprovesealsuit_list_.Mutable(index);
}
inline ::proto_ff::E_EquipimproveSealsuit* Sheet_EquipimproveSealsuit::add_e_equipimprovesealsuit_list() {
  return e_equipimprovesealsuit_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealsuit >&
Sheet_EquipimproveSealsuit::e_equipimprovesealsuit_list() const {
  return e_equipimprovesealsuit_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipimproveSealsuit >*
Sheet_EquipimproveSealsuit::mutable_e_equipimprovesealsuit_list() {
  return &e_equipimprovesealsuit_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fEquipimprove_2eproto__INCLUDED
