// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Shenti.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Shenti.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_ShentiConstantTimeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiConstantTimeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiConstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiConstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiPreposeRewardDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiPreposeRewardDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiPrepose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiPrepose_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiPrepose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiPrepose_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiUpgradeAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiUpgradeAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiUpgrade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiUpgrade_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiUpgrade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiUpgrade_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiRemanieAttrDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiRemanieAttrDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiRemanie_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiRemanie_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiRemanie_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiRemanie_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiAttributeAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiAttributeAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiAttributeXpcomDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiAttributeXpcomDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiAttributeXpstarDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiAttributeXpstarDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiAttributeGodDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiAttributeGodDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiAttributeSpecialDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiAttributeSpecialDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStrongMaterialDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStrongMaterialDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStrongAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStrongAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStrong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStrong_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiStrong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiStrong_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiEvolveAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiEvolveAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiEvolveXpcomDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiEvolveXpcomDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiEvolveXpstarDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiEvolveXpstarDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiEvolve_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiEvolve_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiEvolve_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiEvolve_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiEvolveprogress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiEvolveprogress_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiEvolveprogress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiEvolveprogress_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStarlibraryXpcomDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStarlibraryXpcomDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStarlibraryXpstarDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStarlibraryXpstarDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStarlibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStarlibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiStarlibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiStarlibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiAwakenAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiAwakenAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiAwakenAfflatusattDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiAwakenAfflatusattDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiAwaken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiAwaken_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiAwaken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiAwaken_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiAwakenprogress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiAwakenprogress_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiAwakenprogress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiAwakenprogress_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiSuitAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiSuitAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiSuit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiSuit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiSuit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiSuit_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiCompose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiCompose_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiCompose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiCompose_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStar_upMaterialDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStar_upMaterialDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStar_upXpstarDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStar_upXpstarDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStar_up_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStar_up_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiStar_up_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiStar_up_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStrengtitelAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStrengtitelAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStrengtitel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStrengtitel_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiStrengtitel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiStrengtitel_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShentiStartitel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShentiStartitel_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShentiStartitel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShentiStartitel_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fShenti_2eproto() {
  protobuf_AddDesc_E_5fShenti_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Shenti.proto");
  GOOGLE_CHECK(file != NULL);
  E_ShentiConstantTimeDesc_descriptor_ = file->message_type(0);
  static const int E_ShentiConstantTimeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstantTimeDesc, m_close_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstantTimeDesc, m_open_),
  };
  E_ShentiConstantTimeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiConstantTimeDesc_descriptor_,
      E_ShentiConstantTimeDesc::default_instance_,
      E_ShentiConstantTimeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstantTimeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstantTimeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiConstantTimeDesc));
  E_ShentiConstant_descriptor_ = file->message_type(1);
  static const int E_ShentiConstant_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, m_lvlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, m_remanietimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, m_currencyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, m_currencynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, m_currencytimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, m_baglimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, m_time_),
  };
  E_ShentiConstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiConstant_descriptor_,
      E_ShentiConstant::default_instance_,
      E_ShentiConstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiConstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiConstant));
  Sheet_ShentiConstant_descriptor_ = file->message_type(2);
  static const int Sheet_ShentiConstant_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiConstant, e_shenticonstant_list_),
  };
  Sheet_ShentiConstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiConstant_descriptor_,
      Sheet_ShentiConstant::default_instance_,
      Sheet_ShentiConstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiConstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiConstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiConstant));
  E_ShentiPreposeRewardDesc_descriptor_ = file->message_type(3);
  static const int E_ShentiPreposeRewardDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiPreposeRewardDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiPreposeRewardDesc, m_item_),
  };
  E_ShentiPreposeRewardDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiPreposeRewardDesc_descriptor_,
      E_ShentiPreposeRewardDesc::default_instance_,
      E_ShentiPreposeRewardDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiPreposeRewardDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiPreposeRewardDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiPreposeRewardDesc));
  E_ShentiPrepose_descriptor_ = file->message_type(4);
  static const int E_ShentiPrepose_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiPrepose, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiPrepose, m_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiPrepose, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiPrepose, m_reward_),
  };
  E_ShentiPrepose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiPrepose_descriptor_,
      E_ShentiPrepose::default_instance_,
      E_ShentiPrepose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiPrepose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiPrepose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiPrepose));
  Sheet_ShentiPrepose_descriptor_ = file->message_type(5);
  static const int Sheet_ShentiPrepose_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiPrepose, e_shentiprepose_list_),
  };
  Sheet_ShentiPrepose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiPrepose_descriptor_,
      Sheet_ShentiPrepose::default_instance_,
      Sheet_ShentiPrepose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiPrepose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiPrepose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiPrepose));
  E_ShentiUpgradeAttributeDesc_descriptor_ = file->message_type(6);
  static const int E_ShentiUpgradeAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgradeAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgradeAttributeDesc, m_type_),
  };
  E_ShentiUpgradeAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiUpgradeAttributeDesc_descriptor_,
      E_ShentiUpgradeAttributeDesc::default_instance_,
      E_ShentiUpgradeAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgradeAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgradeAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiUpgradeAttributeDesc));
  E_ShentiUpgrade_descriptor_ = file->message_type(7);
  static const int E_ShentiUpgrade_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgrade, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgrade, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgrade, m_changelv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgrade, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgrade, m_explimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgrade, m_attribute_),
  };
  E_ShentiUpgrade_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiUpgrade_descriptor_,
      E_ShentiUpgrade::default_instance_,
      E_ShentiUpgrade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgrade, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiUpgrade, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiUpgrade));
  Sheet_ShentiUpgrade_descriptor_ = file->message_type(8);
  static const int Sheet_ShentiUpgrade_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiUpgrade, e_shentiupgrade_list_),
  };
  Sheet_ShentiUpgrade_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiUpgrade_descriptor_,
      Sheet_ShentiUpgrade::default_instance_,
      Sheet_ShentiUpgrade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiUpgrade, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiUpgrade, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiUpgrade));
  E_ShentiRemanieAttrDesc_descriptor_ = file->message_type(9);
  static const int E_ShentiRemanieAttrDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanieAttrDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanieAttrDesc, m_type_),
  };
  E_ShentiRemanieAttrDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiRemanieAttrDesc_descriptor_,
      E_ShentiRemanieAttrDesc::default_instance_,
      E_ShentiRemanieAttrDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanieAttrDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanieAttrDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiRemanieAttrDesc));
  E_ShentiRemanie_descriptor_ = file->message_type(10);
  static const int E_ShentiRemanie_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, m_remanielv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, m_tiansuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, m_disuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, m_losesuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, m_rensuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, m_rensuccesslimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, m_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, m_attr_),
  };
  E_ShentiRemanie_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiRemanie_descriptor_,
      E_ShentiRemanie::default_instance_,
      E_ShentiRemanie_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiRemanie, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiRemanie));
  Sheet_ShentiRemanie_descriptor_ = file->message_type(11);
  static const int Sheet_ShentiRemanie_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiRemanie, e_shentiremanie_list_),
  };
  Sheet_ShentiRemanie_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiRemanie_descriptor_,
      Sheet_ShentiRemanie::default_instance_,
      Sheet_ShentiRemanie_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiRemanie, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiRemanie, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiRemanie));
  E_ShentiEquip_descriptor_ = file->message_type(12);
  static const int E_ShentiEquip_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_remanielv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_profession_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_professionlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_attributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_suitgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_stargroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_iscanbind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_istradebind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_sellprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, m_broadcast_),
  };
  E_ShentiEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiEquip_descriptor_,
      E_ShentiEquip::default_instance_,
      E_ShentiEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiEquip));
  Sheet_ShentiEquip_descriptor_ = file->message_type(13);
  static const int Sheet_ShentiEquip_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiEquip, e_shentiequip_list_),
  };
  Sheet_ShentiEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiEquip_descriptor_,
      Sheet_ShentiEquip::default_instance_,
      Sheet_ShentiEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiEquip));
  E_ShentiAttributeAttributeDesc_descriptor_ = file->message_type(14);
  static const int E_ShentiAttributeAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeAttributeDesc, m_type_),
  };
  E_ShentiAttributeAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiAttributeAttributeDesc_descriptor_,
      E_ShentiAttributeAttributeDesc::default_instance_,
      E_ShentiAttributeAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiAttributeAttributeDesc));
  E_ShentiAttributeXpcomDesc_descriptor_ = file->message_type(15);
  static const int E_ShentiAttributeXpcomDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeXpcomDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeXpcomDesc, m_type_),
  };
  E_ShentiAttributeXpcomDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiAttributeXpcomDesc_descriptor_,
      E_ShentiAttributeXpcomDesc::default_instance_,
      E_ShentiAttributeXpcomDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeXpcomDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeXpcomDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiAttributeXpcomDesc));
  E_ShentiAttributeXpstarDesc_descriptor_ = file->message_type(16);
  static const int E_ShentiAttributeXpstarDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeXpstarDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeXpstarDesc, m_type_),
  };
  E_ShentiAttributeXpstarDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiAttributeXpstarDesc_descriptor_,
      E_ShentiAttributeXpstarDesc::default_instance_,
      E_ShentiAttributeXpstarDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeXpstarDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeXpstarDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiAttributeXpstarDesc));
  E_ShentiAttributeGodDesc_descriptor_ = file->message_type(17);
  static const int E_ShentiAttributeGodDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeGodDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeGodDesc, m_type_),
  };
  E_ShentiAttributeGodDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiAttributeGodDesc_descriptor_,
      E_ShentiAttributeGodDesc::default_instance_,
      E_ShentiAttributeGodDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeGodDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeGodDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiAttributeGodDesc));
  E_ShentiAttributeSpecialDesc_descriptor_ = file->message_type(18);
  static const int E_ShentiAttributeSpecialDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeSpecialDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeSpecialDesc, m_type_),
  };
  E_ShentiAttributeSpecialDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiAttributeSpecialDesc_descriptor_,
      E_ShentiAttributeSpecialDesc::default_instance_,
      E_ShentiAttributeSpecialDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeSpecialDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttributeSpecialDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiAttributeSpecialDesc));
  E_ShentiAttribute_descriptor_ = file->message_type(19);
  static const int E_ShentiAttribute_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttribute, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttribute, m_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttribute, m_xpcom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttribute, m_xpstar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttribute, m_god_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttribute, m_special_),
  };
  E_ShentiAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiAttribute_descriptor_,
      E_ShentiAttribute::default_instance_,
      E_ShentiAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiAttribute));
  Sheet_ShentiAttribute_descriptor_ = file->message_type(20);
  static const int Sheet_ShentiAttribute_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiAttribute, e_shentiattribute_list_),
  };
  Sheet_ShentiAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiAttribute_descriptor_,
      Sheet_ShentiAttribute::default_instance_,
      Sheet_ShentiAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiAttribute));
  E_ShentiStrongMaterialDesc_descriptor_ = file->message_type(21);
  static const int E_ShentiStrongMaterialDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrongMaterialDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrongMaterialDesc, m_id_),
  };
  E_ShentiStrongMaterialDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStrongMaterialDesc_descriptor_,
      E_ShentiStrongMaterialDesc::default_instance_,
      E_ShentiStrongMaterialDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrongMaterialDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrongMaterialDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStrongMaterialDesc));
  E_ShentiStrongAttributeDesc_descriptor_ = file->message_type(22);
  static const int E_ShentiStrongAttributeDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrongAttributeDesc, m_value_),
  };
  E_ShentiStrongAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStrongAttributeDesc_descriptor_,
      E_ShentiStrongAttributeDesc::default_instance_,
      E_ShentiStrongAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrongAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrongAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStrongAttributeDesc));
  E_ShentiStrong_descriptor_ = file->message_type(23);
  static const int E_ShentiStrong_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrong, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrong, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrong, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrong, m_remanielv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrong, m_material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrong, m_attribute_),
  };
  E_ShentiStrong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStrong_descriptor_,
      E_ShentiStrong::default_instance_,
      E_ShentiStrong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStrong));
  Sheet_ShentiStrong_descriptor_ = file->message_type(24);
  static const int Sheet_ShentiStrong_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStrong, e_shentistrong_list_),
  };
  Sheet_ShentiStrong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiStrong_descriptor_,
      Sheet_ShentiStrong::default_instance_,
      Sheet_ShentiStrong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStrong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStrong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiStrong));
  E_ShentiEvolveAttributeDesc_descriptor_ = file->message_type(25);
  static const int E_ShentiEvolveAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveAttributeDesc, m_type_),
  };
  E_ShentiEvolveAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiEvolveAttributeDesc_descriptor_,
      E_ShentiEvolveAttributeDesc::default_instance_,
      E_ShentiEvolveAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiEvolveAttributeDesc));
  E_ShentiEvolveXpcomDesc_descriptor_ = file->message_type(26);
  static const int E_ShentiEvolveXpcomDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveXpcomDesc, m_weight_),
  };
  E_ShentiEvolveXpcomDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiEvolveXpcomDesc_descriptor_,
      E_ShentiEvolveXpcomDesc::default_instance_,
      E_ShentiEvolveXpcomDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveXpcomDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveXpcomDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiEvolveXpcomDesc));
  E_ShentiEvolveXpstarDesc_descriptor_ = file->message_type(27);
  static const int E_ShentiEvolveXpstarDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveXpstarDesc, m_weight_),
  };
  E_ShentiEvolveXpstarDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiEvolveXpstarDesc_descriptor_,
      E_ShentiEvolveXpstarDesc::default_instance_,
      E_ShentiEvolveXpstarDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveXpstarDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveXpstarDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiEvolveXpstarDesc));
  E_ShentiEvolve_descriptor_ = file->message_type(28);
  static const int E_ShentiEvolve_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_evolvelv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_remanielv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_need_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_need_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_material_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_material_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_mallid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_initialvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_specialstar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_xpcom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, m_xpstar_),
  };
  E_ShentiEvolve_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiEvolve_descriptor_,
      E_ShentiEvolve::default_instance_,
      E_ShentiEvolve_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolve, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiEvolve));
  Sheet_ShentiEvolve_descriptor_ = file->message_type(29);
  static const int Sheet_ShentiEvolve_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiEvolve, e_shentievolve_list_),
  };
  Sheet_ShentiEvolve_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiEvolve_descriptor_,
      Sheet_ShentiEvolve::default_instance_,
      Sheet_ShentiEvolve_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiEvolve, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiEvolve, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiEvolve));
  E_ShentiEvolveprogress_descriptor_ = file->message_type(30);
  static const int E_ShentiEvolveprogress_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveprogress, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveprogress, m_evolvelv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveprogress, m_remanielv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveprogress, m_equipquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveprogress, m_equipstar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveprogress, m_evolve_),
  };
  E_ShentiEvolveprogress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiEvolveprogress_descriptor_,
      E_ShentiEvolveprogress::default_instance_,
      E_ShentiEvolveprogress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveprogress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiEvolveprogress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiEvolveprogress));
  Sheet_ShentiEvolveprogress_descriptor_ = file->message_type(31);
  static const int Sheet_ShentiEvolveprogress_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiEvolveprogress, e_shentievolveprogress_list_),
  };
  Sheet_ShentiEvolveprogress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiEvolveprogress_descriptor_,
      Sheet_ShentiEvolveprogress::default_instance_,
      Sheet_ShentiEvolveprogress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiEvolveprogress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiEvolveprogress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiEvolveprogress));
  E_ShentiStarlibraryXpcomDesc_descriptor_ = file->message_type(32);
  static const int E_ShentiStarlibraryXpcomDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibraryXpcomDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibraryXpcomDesc, m_type_),
  };
  E_ShentiStarlibraryXpcomDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStarlibraryXpcomDesc_descriptor_,
      E_ShentiStarlibraryXpcomDesc::default_instance_,
      E_ShentiStarlibraryXpcomDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibraryXpcomDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibraryXpcomDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStarlibraryXpcomDesc));
  E_ShentiStarlibraryXpstarDesc_descriptor_ = file->message_type(33);
  static const int E_ShentiStarlibraryXpstarDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibraryXpstarDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibraryXpstarDesc, m_type_),
  };
  E_ShentiStarlibraryXpstarDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStarlibraryXpstarDesc_descriptor_,
      E_ShentiStarlibraryXpstarDesc::default_instance_,
      E_ShentiStarlibraryXpstarDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibraryXpstarDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibraryXpstarDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStarlibraryXpstarDesc));
  E_ShentiStarlibrary_descriptor_ = file->message_type(34);
  static const int E_ShentiStarlibrary_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibrary, m_stargroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibrary, m_xpcom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibrary, m_xpstar_),
  };
  E_ShentiStarlibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStarlibrary_descriptor_,
      E_ShentiStarlibrary::default_instance_,
      E_ShentiStarlibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStarlibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStarlibrary));
  Sheet_ShentiStarlibrary_descriptor_ = file->message_type(35);
  static const int Sheet_ShentiStarlibrary_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStarlibrary, e_shentistarlibrary_list_),
  };
  Sheet_ShentiStarlibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiStarlibrary_descriptor_,
      Sheet_ShentiStarlibrary::default_instance_,
      Sheet_ShentiStarlibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStarlibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStarlibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiStarlibrary));
  E_ShentiAwakenAttributeDesc_descriptor_ = file->message_type(36);
  static const int E_ShentiAwakenAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenAttributeDesc, m_type_),
  };
  E_ShentiAwakenAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiAwakenAttributeDesc_descriptor_,
      E_ShentiAwakenAttributeDesc::default_instance_,
      E_ShentiAwakenAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiAwakenAttributeDesc));
  E_ShentiAwakenAfflatusattDesc_descriptor_ = file->message_type(37);
  static const int E_ShentiAwakenAfflatusattDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenAfflatusattDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenAfflatusattDesc, m_type_),
  };
  E_ShentiAwakenAfflatusattDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiAwakenAfflatusattDesc_descriptor_,
      E_ShentiAwakenAfflatusattDesc::default_instance_,
      E_ShentiAwakenAfflatusattDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenAfflatusattDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenAfflatusattDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiAwakenAfflatusattDesc));
  E_ShentiAwaken_descriptor_ = file->message_type(38);
  static const int E_ShentiAwaken_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_awakenlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_remanielv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_need_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_need_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_material_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_material_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_mallid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_initialvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, m_afflatusatt_),
  };
  E_ShentiAwaken_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiAwaken_descriptor_,
      E_ShentiAwaken::default_instance_,
      E_ShentiAwaken_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwaken, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiAwaken));
  Sheet_ShentiAwaken_descriptor_ = file->message_type(39);
  static const int Sheet_ShentiAwaken_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiAwaken, e_shentiawaken_list_),
  };
  Sheet_ShentiAwaken_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiAwaken_descriptor_,
      Sheet_ShentiAwaken::default_instance_,
      Sheet_ShentiAwaken_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiAwaken, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiAwaken, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiAwaken));
  E_ShentiAwakenprogress_descriptor_ = file->message_type(40);
  static const int E_ShentiAwakenprogress_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenprogress, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenprogress, m_awakenlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenprogress, m_remanielv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenprogress, m_equipquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenprogress, m_equipstar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenprogress, m_awaken_),
  };
  E_ShentiAwakenprogress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiAwakenprogress_descriptor_,
      E_ShentiAwakenprogress::default_instance_,
      E_ShentiAwakenprogress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenprogress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiAwakenprogress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiAwakenprogress));
  Sheet_ShentiAwakenprogress_descriptor_ = file->message_type(41);
  static const int Sheet_ShentiAwakenprogress_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiAwakenprogress, e_shentiawakenprogress_list_),
  };
  Sheet_ShentiAwakenprogress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiAwakenprogress_descriptor_,
      Sheet_ShentiAwakenprogress::default_instance_,
      Sheet_ShentiAwakenprogress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiAwakenprogress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiAwakenprogress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiAwakenprogress));
  E_ShentiSuitAttributeDesc_descriptor_ = file->message_type(42);
  static const int E_ShentiSuitAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuitAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuitAttributeDesc, m_type_),
  };
  E_ShentiSuitAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiSuitAttributeDesc_descriptor_,
      E_ShentiSuitAttributeDesc::default_instance_,
      E_ShentiSuitAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuitAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuitAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiSuitAttributeDesc));
  E_ShentiSuit_descriptor_ = file->message_type(43);
  static const int E_ShentiSuit_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuit, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuit, m_suitgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuit, m_suitlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuit, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuit, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuit, m_skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuit, m_attribute_),
  };
  E_ShentiSuit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiSuit_descriptor_,
      E_ShentiSuit::default_instance_,
      E_ShentiSuit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiSuit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiSuit));
  Sheet_ShentiSuit_descriptor_ = file->message_type(44);
  static const int Sheet_ShentiSuit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiSuit, e_shentisuit_list_),
  };
  Sheet_ShentiSuit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiSuit_descriptor_,
      Sheet_ShentiSuit::default_instance_,
      Sheet_ShentiSuit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiSuit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiSuit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiSuit));
  E_ShentiCompose_descriptor_ = file->message_type(45);
  static const int E_ShentiCompose_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiCompose, m_need_equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiCompose, m_target_equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiCompose, m_compose_tips_),
  };
  E_ShentiCompose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiCompose_descriptor_,
      E_ShentiCompose::default_instance_,
      E_ShentiCompose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiCompose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiCompose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiCompose));
  Sheet_ShentiCompose_descriptor_ = file->message_type(46);
  static const int Sheet_ShentiCompose_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiCompose, e_shenticompose_list_),
  };
  Sheet_ShentiCompose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiCompose_descriptor_,
      Sheet_ShentiCompose::default_instance_,
      Sheet_ShentiCompose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiCompose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiCompose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiCompose));
  E_ShentiStar_upMaterialDesc_descriptor_ = file->message_type(47);
  static const int E_ShentiStar_upMaterialDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_upMaterialDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_upMaterialDesc, m_id_),
  };
  E_ShentiStar_upMaterialDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStar_upMaterialDesc_descriptor_,
      E_ShentiStar_upMaterialDesc::default_instance_,
      E_ShentiStar_upMaterialDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_upMaterialDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_upMaterialDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStar_upMaterialDesc));
  E_ShentiStar_upXpstarDesc_descriptor_ = file->message_type(48);
  static const int E_ShentiStar_upXpstarDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_upXpstarDesc, m_weight_),
  };
  E_ShentiStar_upXpstarDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStar_upXpstarDesc_descriptor_,
      E_ShentiStar_upXpstarDesc::default_instance_,
      E_ShentiStar_upXpstarDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_upXpstarDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_upXpstarDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStar_upXpstarDesc));
  E_ShentiStar_up_descriptor_ = file->message_type(49);
  static const int E_ShentiStar_up_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_up, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_up, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_up, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_up, m_need_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_up, m_material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_up, m_xpstar_),
  };
  E_ShentiStar_up_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStar_up_descriptor_,
      E_ShentiStar_up::default_instance_,
      E_ShentiStar_up_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_up, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStar_up, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStar_up));
  Sheet_ShentiStar_up_descriptor_ = file->message_type(50);
  static const int Sheet_ShentiStar_up_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStar_up, e_shentistar_up_list_),
  };
  Sheet_ShentiStar_up_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiStar_up_descriptor_,
      Sheet_ShentiStar_up::default_instance_,
      Sheet_ShentiStar_up_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStar_up, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStar_up, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiStar_up));
  E_ShentiStrengtitelAttributeDesc_descriptor_ = file->message_type(51);
  static const int E_ShentiStrengtitelAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrengtitelAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrengtitelAttributeDesc, m_type_),
  };
  E_ShentiStrengtitelAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStrengtitelAttributeDesc_descriptor_,
      E_ShentiStrengtitelAttributeDesc::default_instance_,
      E_ShentiStrengtitelAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrengtitelAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrengtitelAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStrengtitelAttributeDesc));
  E_ShentiStrengtitel_descriptor_ = file->message_type(52);
  static const int E_ShentiStrengtitel_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrengtitel, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrengtitel, m_remanielv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrengtitel, m_strenglv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrengtitel, m_attribute_),
  };
  E_ShentiStrengtitel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStrengtitel_descriptor_,
      E_ShentiStrengtitel::default_instance_,
      E_ShentiStrengtitel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrengtitel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStrengtitel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStrengtitel));
  Sheet_ShentiStrengtitel_descriptor_ = file->message_type(53);
  static const int Sheet_ShentiStrengtitel_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStrengtitel, e_shentistrengtitel_list_),
  };
  Sheet_ShentiStrengtitel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiStrengtitel_descriptor_,
      Sheet_ShentiStrengtitel::default_instance_,
      Sheet_ShentiStrengtitel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStrengtitel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStrengtitel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiStrengtitel));
  E_ShentiStartitel_descriptor_ = file->message_type(54);
  static const int E_ShentiStartitel_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStartitel, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStartitel, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStartitel, m_attribute_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStartitel, m_attribute_value_),
  };
  E_ShentiStartitel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShentiStartitel_descriptor_,
      E_ShentiStartitel::default_instance_,
      E_ShentiStartitel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStartitel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShentiStartitel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShentiStartitel));
  Sheet_ShentiStartitel_descriptor_ = file->message_type(55);
  static const int Sheet_ShentiStartitel_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStartitel, e_shentistartitel_list_),
  };
  Sheet_ShentiStartitel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShentiStartitel_descriptor_,
      Sheet_ShentiStartitel::default_instance_,
      Sheet_ShentiStartitel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStartitel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShentiStartitel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShentiStartitel));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fShenti_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiConstantTimeDesc_descriptor_, &E_ShentiConstantTimeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiConstant_descriptor_, &E_ShentiConstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiConstant_descriptor_, &Sheet_ShentiConstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiPreposeRewardDesc_descriptor_, &E_ShentiPreposeRewardDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiPrepose_descriptor_, &E_ShentiPrepose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiPrepose_descriptor_, &Sheet_ShentiPrepose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiUpgradeAttributeDesc_descriptor_, &E_ShentiUpgradeAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiUpgrade_descriptor_, &E_ShentiUpgrade::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiUpgrade_descriptor_, &Sheet_ShentiUpgrade::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiRemanieAttrDesc_descriptor_, &E_ShentiRemanieAttrDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiRemanie_descriptor_, &E_ShentiRemanie::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiRemanie_descriptor_, &Sheet_ShentiRemanie::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiEquip_descriptor_, &E_ShentiEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiEquip_descriptor_, &Sheet_ShentiEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiAttributeAttributeDesc_descriptor_, &E_ShentiAttributeAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiAttributeXpcomDesc_descriptor_, &E_ShentiAttributeXpcomDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiAttributeXpstarDesc_descriptor_, &E_ShentiAttributeXpstarDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiAttributeGodDesc_descriptor_, &E_ShentiAttributeGodDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiAttributeSpecialDesc_descriptor_, &E_ShentiAttributeSpecialDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiAttribute_descriptor_, &E_ShentiAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiAttribute_descriptor_, &Sheet_ShentiAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStrongMaterialDesc_descriptor_, &E_ShentiStrongMaterialDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStrongAttributeDesc_descriptor_, &E_ShentiStrongAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStrong_descriptor_, &E_ShentiStrong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiStrong_descriptor_, &Sheet_ShentiStrong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiEvolveAttributeDesc_descriptor_, &E_ShentiEvolveAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiEvolveXpcomDesc_descriptor_, &E_ShentiEvolveXpcomDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiEvolveXpstarDesc_descriptor_, &E_ShentiEvolveXpstarDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiEvolve_descriptor_, &E_ShentiEvolve::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiEvolve_descriptor_, &Sheet_ShentiEvolve::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiEvolveprogress_descriptor_, &E_ShentiEvolveprogress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiEvolveprogress_descriptor_, &Sheet_ShentiEvolveprogress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStarlibraryXpcomDesc_descriptor_, &E_ShentiStarlibraryXpcomDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStarlibraryXpstarDesc_descriptor_, &E_ShentiStarlibraryXpstarDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStarlibrary_descriptor_, &E_ShentiStarlibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiStarlibrary_descriptor_, &Sheet_ShentiStarlibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiAwakenAttributeDesc_descriptor_, &E_ShentiAwakenAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiAwakenAfflatusattDesc_descriptor_, &E_ShentiAwakenAfflatusattDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiAwaken_descriptor_, &E_ShentiAwaken::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiAwaken_descriptor_, &Sheet_ShentiAwaken::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiAwakenprogress_descriptor_, &E_ShentiAwakenprogress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiAwakenprogress_descriptor_, &Sheet_ShentiAwakenprogress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiSuitAttributeDesc_descriptor_, &E_ShentiSuitAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiSuit_descriptor_, &E_ShentiSuit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiSuit_descriptor_, &Sheet_ShentiSuit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiCompose_descriptor_, &E_ShentiCompose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiCompose_descriptor_, &Sheet_ShentiCompose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStar_upMaterialDesc_descriptor_, &E_ShentiStar_upMaterialDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStar_upXpstarDesc_descriptor_, &E_ShentiStar_upXpstarDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStar_up_descriptor_, &E_ShentiStar_up::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiStar_up_descriptor_, &Sheet_ShentiStar_up::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStrengtitelAttributeDesc_descriptor_, &E_ShentiStrengtitelAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStrengtitel_descriptor_, &E_ShentiStrengtitel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiStrengtitel_descriptor_, &Sheet_ShentiStrengtitel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShentiStartitel_descriptor_, &E_ShentiStartitel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShentiStartitel_descriptor_, &Sheet_ShentiStartitel::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fShenti_2eproto() {
  delete E_ShentiConstantTimeDesc::default_instance_;
  delete E_ShentiConstantTimeDesc_reflection_;
  delete E_ShentiConstant::default_instance_;
  delete E_ShentiConstant_reflection_;
  delete Sheet_ShentiConstant::default_instance_;
  delete Sheet_ShentiConstant_reflection_;
  delete E_ShentiPreposeRewardDesc::default_instance_;
  delete E_ShentiPreposeRewardDesc_reflection_;
  delete E_ShentiPrepose::default_instance_;
  delete E_ShentiPrepose_reflection_;
  delete Sheet_ShentiPrepose::default_instance_;
  delete Sheet_ShentiPrepose_reflection_;
  delete E_ShentiUpgradeAttributeDesc::default_instance_;
  delete E_ShentiUpgradeAttributeDesc_reflection_;
  delete E_ShentiUpgrade::default_instance_;
  delete E_ShentiUpgrade_reflection_;
  delete Sheet_ShentiUpgrade::default_instance_;
  delete Sheet_ShentiUpgrade_reflection_;
  delete E_ShentiRemanieAttrDesc::default_instance_;
  delete E_ShentiRemanieAttrDesc_reflection_;
  delete E_ShentiRemanie::default_instance_;
  delete E_ShentiRemanie_reflection_;
  delete Sheet_ShentiRemanie::default_instance_;
  delete Sheet_ShentiRemanie_reflection_;
  delete E_ShentiEquip::default_instance_;
  delete E_ShentiEquip_reflection_;
  delete Sheet_ShentiEquip::default_instance_;
  delete Sheet_ShentiEquip_reflection_;
  delete E_ShentiAttributeAttributeDesc::default_instance_;
  delete E_ShentiAttributeAttributeDesc_reflection_;
  delete E_ShentiAttributeXpcomDesc::default_instance_;
  delete E_ShentiAttributeXpcomDesc_reflection_;
  delete E_ShentiAttributeXpstarDesc::default_instance_;
  delete E_ShentiAttributeXpstarDesc_reflection_;
  delete E_ShentiAttributeGodDesc::default_instance_;
  delete E_ShentiAttributeGodDesc_reflection_;
  delete E_ShentiAttributeSpecialDesc::default_instance_;
  delete E_ShentiAttributeSpecialDesc_reflection_;
  delete E_ShentiAttribute::default_instance_;
  delete E_ShentiAttribute_reflection_;
  delete Sheet_ShentiAttribute::default_instance_;
  delete Sheet_ShentiAttribute_reflection_;
  delete E_ShentiStrongMaterialDesc::default_instance_;
  delete E_ShentiStrongMaterialDesc_reflection_;
  delete E_ShentiStrongAttributeDesc::default_instance_;
  delete E_ShentiStrongAttributeDesc_reflection_;
  delete E_ShentiStrong::default_instance_;
  delete E_ShentiStrong_reflection_;
  delete Sheet_ShentiStrong::default_instance_;
  delete Sheet_ShentiStrong_reflection_;
  delete E_ShentiEvolveAttributeDesc::default_instance_;
  delete E_ShentiEvolveAttributeDesc_reflection_;
  delete E_ShentiEvolveXpcomDesc::default_instance_;
  delete E_ShentiEvolveXpcomDesc_reflection_;
  delete E_ShentiEvolveXpstarDesc::default_instance_;
  delete E_ShentiEvolveXpstarDesc_reflection_;
  delete E_ShentiEvolve::default_instance_;
  delete E_ShentiEvolve_reflection_;
  delete Sheet_ShentiEvolve::default_instance_;
  delete Sheet_ShentiEvolve_reflection_;
  delete E_ShentiEvolveprogress::default_instance_;
  delete E_ShentiEvolveprogress_reflection_;
  delete Sheet_ShentiEvolveprogress::default_instance_;
  delete Sheet_ShentiEvolveprogress_reflection_;
  delete E_ShentiStarlibraryXpcomDesc::default_instance_;
  delete E_ShentiStarlibraryXpcomDesc_reflection_;
  delete E_ShentiStarlibraryXpstarDesc::default_instance_;
  delete E_ShentiStarlibraryXpstarDesc_reflection_;
  delete E_ShentiStarlibrary::default_instance_;
  delete E_ShentiStarlibrary_reflection_;
  delete Sheet_ShentiStarlibrary::default_instance_;
  delete Sheet_ShentiStarlibrary_reflection_;
  delete E_ShentiAwakenAttributeDesc::default_instance_;
  delete E_ShentiAwakenAttributeDesc_reflection_;
  delete E_ShentiAwakenAfflatusattDesc::default_instance_;
  delete E_ShentiAwakenAfflatusattDesc_reflection_;
  delete E_ShentiAwaken::default_instance_;
  delete E_ShentiAwaken_reflection_;
  delete Sheet_ShentiAwaken::default_instance_;
  delete Sheet_ShentiAwaken_reflection_;
  delete E_ShentiAwakenprogress::default_instance_;
  delete E_ShentiAwakenprogress_reflection_;
  delete Sheet_ShentiAwakenprogress::default_instance_;
  delete Sheet_ShentiAwakenprogress_reflection_;
  delete E_ShentiSuitAttributeDesc::default_instance_;
  delete E_ShentiSuitAttributeDesc_reflection_;
  delete E_ShentiSuit::default_instance_;
  delete E_ShentiSuit_reflection_;
  delete Sheet_ShentiSuit::default_instance_;
  delete Sheet_ShentiSuit_reflection_;
  delete E_ShentiCompose::default_instance_;
  delete E_ShentiCompose_reflection_;
  delete Sheet_ShentiCompose::default_instance_;
  delete Sheet_ShentiCompose_reflection_;
  delete E_ShentiStar_upMaterialDesc::default_instance_;
  delete E_ShentiStar_upMaterialDesc_reflection_;
  delete E_ShentiStar_upXpstarDesc::default_instance_;
  delete E_ShentiStar_upXpstarDesc_reflection_;
  delete E_ShentiStar_up::default_instance_;
  delete E_ShentiStar_up_reflection_;
  delete Sheet_ShentiStar_up::default_instance_;
  delete Sheet_ShentiStar_up_reflection_;
  delete E_ShentiStrengtitelAttributeDesc::default_instance_;
  delete E_ShentiStrengtitelAttributeDesc_reflection_;
  delete E_ShentiStrengtitel::default_instance_;
  delete E_ShentiStrengtitel_reflection_;
  delete Sheet_ShentiStrengtitel::default_instance_;
  delete Sheet_ShentiStrengtitel_reflection_;
  delete E_ShentiStartitel::default_instance_;
  delete E_ShentiStartitel_reflection_;
  delete Sheet_ShentiStartitel::default_instance_;
  delete Sheet_ShentiStartitel_reflection_;
}

void protobuf_AddDesc_E_5fShenti_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016E_Shenti.proto\022\010proto_ff\032\025yd_fieldopti"
    "ons.proto\"g\n\030E_ShentiConstantTimeDesc\022%\n"
    "\007m_close\030\001 \001(\tB\024\302\377\024\014\347\273\223\346\235\237\346\227\266\351\227\264\220\301\024@\022$\n\006"
    "m_open\030\002 \001(\tB\024\302\377\024\014\345\274\200\345\220\257\346\227\266\351\227\264\220\301\024@\"\304\003\n\020E"
    "_ShentiConstant\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022)\n"
    "\tm_lvlimit\030\002 \001(\005B\026\302\377\024\022\345\212\251\351\230\265\347\255\211\347\272\247\350\246\201\346\261\202"
    "\0224\n\016m_remanietimes\030\003 \001(\005B\034\302\377\024\030\346\257\217\345\244\251\345\205\215\350"
    "\264\271\350\275\254\347\224\237\346\254\241\346\225\260\022(\n\014m_currencyid\030\004 \001(\005B\022\302\377"
    "\024\016\346\266\210\350\200\227\350\264\247\345\270\201id\022-\n\rm_currencynum\030\005 \001(\005B"
    "\026\302\377\024\022\346\266\210\350\200\227\350\264\247\345\270\201\346\225\260\351\207\217\022;\n\017m_currencytim"
    "es\030\006 \001(\005B\"\302\377\024\036\346\234\200\345\244\247\344\275\277\347\224\250\350\264\247\345\270\201\350\275\254\347\224\237\346\254"
    "\241\346\225\260\022*\n\nm_baglimit\030\007 \001(\005B\026\302\377\024\022\347\245\236\344\275\223\350\203\214\345"
    "\214\205\344\270\212\351\231\220\022*\n\010m_itemid\030\010 \001(\005B\030\302\377\024\024\347\245\236\345\205\203\347\273"
    "\217\351\252\214\351\201\223\345\205\267id\022K\n\006m_time\030\t \003(\0132\".proto_ff."
    "E_ShentiConstantTimeDescB\027\302\377\024\017\345\244\251\346\227\266\346\227\266\351"
    "\227\264\346\256\265\210\301\024\002\"W\n\024Sheet_ShentiConstant\022\?\n\025E_S"
    "hentiConstant_List\030\001 \003(\0132\032.proto_ff.E_Sh"
    "entiConstantB\004\210\301\024\002\"R\n\031E_ShentiPreposeRew"
    "ardDesc\022\031\n\005m_num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\032\n\006m_"
    "item\030\002 \001(\005B\n\302\377\024\006\351\201\223\345\205\267\"\257\001\n\017E_ShentiPrepo"
    "se\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\037\n\013m_condition\030"
    "\002 \001(\005B\n\302\377\024\006\346\235\241\344\273\266\022\036\n\007m_value\030\003 \001(\005B\r\302\377\024\t"
    "\346\235\241\344\273\266\345\200\274\022E\n\010m_reward\030\004 \003(\0132#.proto_ff.E"
    "_ShentiPreposeRewardDescB\016\302\377\024\006\345\245\226\345\212\261\210\301\024\005"
    "\"T\n\023Sheet_ShentiPrepose\022=\n\024E_ShentiPrepo"
    "se_List\030\001 \003(\0132\031.proto_ff.E_ShentiPrepose"
    "B\004\210\301\024\010\"P\n\034E_ShentiUpgradeAttributeDesc\022\030"
    "\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\026\n\006m_type\030\002 \001(\005"
    "B\006\302\377\024\002ID\"\215\002\n\017E_ShentiUpgrade\022\024\n\004m_id\030\001 \001"
    "(\003B\006\302\377\024\002id\022\030\n\004m_lv\030\002 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022$\n\n"
    "m_changelv\030\003 \001(\005B\020\302\377\024\014\350\275\254\347\224\237\347\255\211\347\272\247\022%\n\005m_"
    "exp\030\004 \001(\003B\026\302\377\024\022\344\270\213\347\272\247\346\211\200\351\234\200\347\245\236\345\205\203\022*\n\nm_e"
    "xplimit\030\005 \001(\003B\026\302\377\024\022\347\245\236\345\205\203\345\202\250\345\255\230\344\270\212\351\231\220\022Q\n"
    "\013m_attribute\030\006 \003(\0132&.proto_ff.E_ShentiUp"
    "gradeAttributeDescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\007"
    "\"U\n\023Sheet_ShentiUpgrade\022>\n\024E_ShentiUpgra"
    "de_List\030\001 \003(\0132\031.proto_ff.E_ShentiUpgrade"
    "B\005\210\301\024\200\001\"K\n\027E_ShentiRemanieAttrDesc\022\030\n\007m_"
    "value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\026\n\006m_type\030\002 \001(\005B\006\302\377"
    "\024\002ID\"\354\003\n\017E_ShentiRemanie\022\036\n\004m_id\030\001 \001(\005B\020"
    "\302\377\024\014\350\275\254\347\224\237\347\255\211\347\272\247\022+\n\013m_remanielv\030\002 \001(\005B\026\302"
    "\377\024\022\350\275\254\347\224\237\347\255\211\347\272\247\350\246\201\346\261\202\022\036\n\004m_lv\030\003 \001(\005B\020\302\377\024"
    "\014\347\255\211\347\272\247\350\246\201\346\261\202\0220\n\rm_tiansuccess\030\004 \001(\005B\031\302\377"
    "\024\025\345\244\251\346\227\266\345\242\236\345\212\240\346\210\220\345\212\237\347\216\207\022.\n\013m_disuccess\030\005"
    " \001(\005B\031\302\377\024\025\345\234\260\345\210\251\345\210\235\345\247\213\346\210\220\345\212\237\347\216\207\0226\n\rm_los"
    "esuccess\030\006 \001(\005B\037\302\377\024\033\345\234\260\345\210\251\345\244\261\350\264\245\346\217\220\345\215\207\346\210"
    "\220\345\212\237\347\216\207\022/\n\014m_rensuccess\030\007 \001(\005B\031\302\377\024\025\344\272\272\345\222"
    "\214\346\217\220\345\215\207\346\210\220\345\212\237\347\216\207\0224\n\021m_rensuccesslimit\030\010 "
    "\001(\005B\031\302\377\024\025\344\272\272\345\222\214\346\210\220\345\212\237\347\216\207\344\270\212\351\231\220\022\"\n\010m_rewa"
    "rd\030\t \001(\005B\020\302\377\024\014\350\275\254\347\224\237\345\245\226\345\212\261\022G\n\006m_attr\030\n \003"
    "(\0132!.proto_ff.E_ShentiRemanieAttrDescB\024\302"
    "\377\024\014\350\275\254\347\224\237\345\261\236\346\200\247\210\301\024\006\"T\n\023Sheet_ShentiReman"
    "ie\022=\n\024E_ShentiRemanie_List\030\001 \003(\0132\031.proto"
    "_ff.E_ShentiRemanieB\004\210\301\024\010\"\212\005\n\rE_ShentiEq"
    "uip\022\032\n\004m_id\030\001 \001(\003B\014\302\377\024\010\350\243\205\345\244\207ID\022$\n\006m_nam"
    "e\030\002 \001(\tB\024\302\377\024\014\350\243\205\345\244\207\345\220\215\347\247\260\220\301\024@\022 \n\006m_type\030"
    "\003 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\244\247\347\261\273\022%\n\013m_remanielv\030\004"
    " \001(\005B\020\302\377\024\014\350\243\205\345\244\207\350\275\254\347\224\237\022$\n\nm_position\030\005 \001"
    "(\005B\020\302\377\024\014\350\243\205\345\244\207\344\275\215\347\275\256\022*\n\014m_profession\030\006 \001"
    "(\tB\024\302\377\024\014\350\201\214\344\270\232\351\231\220\345\210\266\220\301\024@\022(\n\016m_profession"
    "lv\030\007 \001(\005B\020\302\377\024\014\350\275\254\350\201\214\347\255\211\347\272\247\022#\n\tm_quality\030"
    "\010 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\223\201\350\264\250\022#\n\rm_attributeid"
    "\030\t \001(\005B\014\302\377\024\010\345\261\236\346\200\247ID\022\"\n\013m_suitgroup\030\n \001("
    "\005B\r\302\377\024\t\345\245\227\350\243\205\347\273\204\022.\n\013m_stargroup\030\013 \001(\005B\031\302"
    "\377\024\025\351\232\217\346\234\272\346\230\237\347\272\247\345\261\236\346\200\247\347\273\204\022%\n\013m_iscanbind\030"
    "\014 \001(\005B\020\302\377\024\014\346\230\257\345\220\246\347\273\221\345\256\232\022-\n\rm_istradebind"
    "\030\r \001(\005B\026\302\377\024\022\346\230\257\345\220\246\344\272\244\346\230\223\347\273\221\345\256\232\022%\n\013m_sell"
    "price\030\016 \001(\005B\020\302\377\024\014\345\207\272\345\224\256\344\273\267\346\240\274\022\'\n\006m_icon\030"
    "\017 \001(\tB\027\302\377\024\017\350\243\205\345\244\207\345\233\276\346\240\207\345\220\215\220\301\024@\022.\n\013m_broa"
    "dcast\030\020 \001(\005B\031\302\377\024\025\346\230\257\345\220\246\346\222\255\346\224\276\350\267\221\351\251\254\347\201\257\"O"
    "\n\021Sheet_ShentiEquip\022:\n\022E_ShentiEquip_Lis"
    "t\030\001 \003(\0132\027.proto_ff.E_ShentiEquipB\005\210\301\024\200\010\""
    "S\n\036E_ShentiAttributeAttributeDesc\022\033\n\007m_v"
    "alue\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004"
    "\302\377\024\000\"O\n\032E_ShentiAttributeXpcomDesc\022\033\n\007m_"
    "value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type\030\002 \001(\005B"
    "\004\302\377\024\000\"P\n\033E_ShentiAttributeXpstarDesc\022\033\n\007"
    "m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type\030\002 \001("
    "\005B\004\302\377\024\000\"M\n\030E_ShentiAttributeGodDesc\022\033\n\007m"
    "_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type\030\002 \001(\005"
    "B\004\302\377\024\000\"Q\n\034E_ShentiAttributeSpecialDesc\022\033"
    "\n\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type\030\002 "
    "\001(\005B\004\302\377\024\000\"\300\003\n\021E_ShentiAttribute\022\032\n\004m_id\030"
    "\001 \001(\005B\014\302\377\024\010\345\261\236\346\200\247ID\022S\n\013m_attribute\030\002 \003(\013"
    "2(.proto_ff.E_ShentiAttributeAttributeDe"
    "scB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\005\022K\n\007m_xpcom\030\003 \003("
    "\0132$.proto_ff.E_ShentiAttributeXpcomDescB"
    "\024\302\377\024\014\346\230\237\347\272\247\345\261\236\346\200\247\210\301\024\002\022S\n\010m_xpstar\030\004 \003(\0132"
    "%.proto_ff.E_ShentiAttributeXpstarDescB\032"
    "\302\377\024\022\347\211\271\346\256\212\346\230\237\347\272\247\345\261\236\346\200\247\210\301\024\002\022G\n\005m_god\030\005 \003("
    "\0132\".proto_ff.E_ShentiAttributeGodDescB\024\302"
    "\377\024\014\347\245\236\350\243\205\345\261\236\346\200\247\210\301\024\002\022O\n\tm_special\030\006 \003(\0132&"
    ".proto_ff.E_ShentiAttributeSpecialDescB\024"
    "\302\377\024\014\347\211\271\346\256\212\345\261\236\346\200\247\210\301\024\005\"[\n\025Sheet_ShentiAttr"
    "ibute\022B\n\026E_ShentiAttribute_List\030\001 \003(\0132\033."
    "proto_ff.E_ShentiAttributeB\005\210\301\024\200\004\"K\n\032E_S"
    "hentiStrongMaterialDesc\022\031\n\005m_num\030\001 \001(\005B\n"
    "\302\377\024\006\346\225\260\351\207\217\022\022\n\004m_id\030\002 \001(\005B\004\302\377\024\000\":\n\033E_Shen"
    "tiStrongAttributeDesc\022\033\n\007m_value\030\001 \001(\005B\n"
    "\302\377\024\006\346\225\260\345\200\274\"\271\002\n\016E_ShentiStrong\022\024\n\004m_id\030\001 "
    "\001(\005B\006\302\377\024\002id\022\036\n\004m_lv\030\002 \001(\005B\020\302\377\024\014\345\274\272\345\214\226\347\255\211"
    "\347\272\247\022(\n\nm_position\030\003 \001(\tB\024\302\377\024\014\345\274\272\345\214\226\351\203\250\344\275"
    "\215\220\301\024@\022%\n\013m_remanielv\030\004 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\350\275"
    "\254\347\224\237\022N\n\nm_material\030\005 \003(\0132$.proto_ff.E_Sh"
    "entiStrongMaterialDescB\024\302\377\024\014\345\274\272\345\214\226\346\235\220\346\226\231"
    "\210\301\024\003\022P\n\013m_attribute\030\006 \003(\0132%.proto_ff.E_S"
    "hentiStrongAttributeDescB\024\302\377\024\014\345\274\272\345\214\226\345\261\236\346"
    "\200\247\210\301\024\005\"R\n\022Sheet_ShentiStrong\022<\n\023E_Shenti"
    "Strong_List\030\001 \003(\0132\030.proto_ff.E_ShentiStr"
    "ongB\005\210\301\024\200\004\"P\n\033E_ShentiEvolveAttributeDes"
    "c\022\033\n\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type"
    "\030\002 \001(\005B\004\302\377\024\000\"7\n\027E_ShentiEvolveXpcomDesc\022"
    "\034\n\010m_weight\030\001 \001(\005B\n\302\377\024\006\346\235\203\351\207\215\"8\n\030E_Shent"
    "iEvolveXpstarDesc\022\034\n\010m_weight\030\001 \001(\005B\n\302\377\024"
    "\006\346\235\203\351\207\215\"\330\005\n\016E_ShentiEvolve\022\024\n\004m_id\030\001 \001(\005"
    "B\006\302\377\024\002id\022$\n\nm_evolvelv\030\002 \001(\005B\020\302\377\024\014\350\277\233\345\214\226"
    "\347\255\211\347\272\247\022(\n\nm_position\030\003 \001(\tB\024\302\377\024\014\350\277\233\345\214\226\351\203"
    "\250\344\275\215\220\301\024@\022%\n\013m_remanielv\030\004 \001(\005B\020\302\377\024\014\350\243\205\345\244"
    "\207\350\275\254\347\224\237\022.\n\016m_need_quality\030\005 \001(\005B\026\302\377\024\022\350\243\205"
    "\345\244\207\345\223\201\350\264\250\350\246\201\346\261\202\022+\n\013m_need_star\030\006 \001(\005B\026\302\377"
    "\024\022\350\243\205\345\244\207\346\230\237\347\272\247\350\246\201\346\261\202\022\'\n\rm_material_id\030\007 "
    "\001(\005B\020\302\377\024\014\350\277\233\345\214\226\346\235\220\346\226\231\022.\n\016m_material_num\030"
    "\010 \001(\005B\026\302\377\024\022\350\277\233\345\214\226\346\235\220\346\226\231\346\225\260\351\207\217\022\036\n\010m_malli"
    "d\030\t \001(\005B\014\302\377\024\010\345\225\206\345\223\201ID\022+\n\016m_initialvalue\030"
    "\n \001(\005B\023\302\377\024\017\350\277\233\345\214\226\345\210\235\345\247\213\345\200\274\0226\n\rm_specials"
    "tar\030\013 \001(\005B\037\302\377\024\033\346\230\257\345\220\246\344\270\272\347\211\271\346\256\212\346\230\237\347\272\247\345\261\236\346"
    "\200\247\022P\n\013m_attribute\030\014 \003(\0132%.proto_ff.E_She"
    "ntiEvolveAttributeDescB\024\302\377\024\014\350\277\233\345\214\226\345\261\236\346\200\247"
    "\210\301\024\005\022Q\n\007m_xpcom\030\r \003(\0132!.proto_ff.E_Shent"
    "iEvolveXpcomDescB\035\302\377\024\025\346\230\237\347\272\247\345\261\236\346\200\247\351\232\217\346\234\272"
    "\345\272\223\210\301\024\007\022Y\n\010m_xpstar\030\016 \003(\0132\".proto_ff.E_S"
    "hentiEvolveXpstarDescB#\302\377\024\033\347\211\271\346\256\212\346\230\237\347\272\247\345"
    "\261\236\346\200\247\351\232\217\346\234\272\345\272\223\210\301\024\007\"R\n\022Sheet_ShentiEvolve"
    "\022<\n\023E_ShentiEvolve_List\030\001 \003(\0132\030.proto_ff"
    ".E_ShentiEvolveB\005\210\301\024\200\002\"\375\001\n\026E_ShentiEvolv"
    "eprogress\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022$\n\nm_evo"
    "lvelv\030\002 \001(\005B\020\302\377\024\014\350\277\233\345\214\226\347\255\211\347\272\247\022%\n\013m_reman"
    "ielv\030\003 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\350\275\254\347\224\237\022.\n\016m_equipq"
    "uality\030\004 \001(\005B\026\302\377\024\022\346\235\220\346\226\231\350\243\205\345\244\207\345\223\201\350\264\250\022+\n\013"
    "m_equipstar\030\005 \001(\005B\026\302\377\024\022\346\235\220\346\226\231\350\243\205\345\244\207\346\230\237\347\272"
    "\247\022#\n\010m_evolve\030\006 \003(\005B\021\302\377\024\t\345\256\214\347\276\216\345\272\246\210\301\024\006\"j"
    "\n\032Sheet_ShentiEvolveprogress\022L\n\033E_Shenti"
    "Evolveprogress_List\030\001 \003(\0132 .proto_ff.E_S"
    "hentiEvolveprogressB\005\210\301\024\200\002\"Q\n\034E_ShentiSt"
    "arlibraryXpcomDesc\022\033\n\007m_value\030\001 \001(\005B\n\302\377\024"
    "\006\346\225\260\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\"R\n\035E_Shent"
    "iStarlibraryXpstarDesc\022\033\n\007m_value\030\001 \001(\005B"
    "\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\"\353\001\n\023E_"
    "ShentiStarlibrary\022.\n\013m_stargroup\030\001 \001(\005B\031"
    "\302\377\024\025\351\232\217\346\234\272\346\230\237\347\272\247\345\261\236\346\200\247\347\273\204\022M\n\007m_xpcom\030\002 \003"
    "(\0132&.proto_ff.E_ShentiStarlibraryXpcomDe"
    "scB\024\302\377\024\014\346\230\237\347\272\247\345\261\236\346\200\247\210\301\024\007\022U\n\010m_xpstar\030\003 \003"
    "(\0132\'.proto_ff.E_ShentiStarlibraryXpstarD"
    "escB\032\302\377\024\022\347\211\271\346\256\212\346\230\237\347\272\247\345\261\236\346\200\247\210\301\024\007\"`\n\027Sheet"
    "_ShentiStarlibrary\022E\n\030E_ShentiStarlibrar"
    "y_List\030\001 \003(\0132\035.proto_ff.E_ShentiStarlibr"
    "aryB\004\210\301\024@\"P\n\033E_ShentiAwakenAttributeDesc"
    "\022\033\n\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type\030"
    "\002 \001(\005B\004\302\377\024\000\"R\n\035E_ShentiAwakenAfflatusatt"
    "Desc\022\033\n\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_t"
    "ype\030\002 \001(\005B\004\302\377\024\000\"\310\004\n\016E_ShentiAwaken\022\024\n\004m_"
    "id\030\001 \001(\005B\006\302\377\024\002id\022$\n\nm_awakenlv\030\002 \001(\005B\020\302\377"
    "\024\014\350\247\211\351\206\222\347\255\211\347\272\247\022(\n\nm_position\030\003 \001(\tB\024\302\377\024\014"
    "\350\247\211\351\206\222\351\203\250\344\275\215\220\301\024@\022%\n\013m_remanielv\030\004 \001(\005B\020\302"
    "\377\024\014\350\243\205\345\244\207\350\275\254\347\224\237\022.\n\016m_need_quality\030\005 \001(\005B"
    "\026\302\377\024\022\350\243\205\345\244\207\345\223\201\350\264\250\350\246\201\346\261\202\022+\n\013m_need_star\030\006"
    " \001(\005B\026\302\377\024\022\350\243\205\345\244\207\346\230\237\347\272\247\350\246\201\346\261\202\022\'\n\rm_materi"
    "al_id\030\007 \001(\005B\020\302\377\024\014\350\247\211\351\206\222\346\235\220\346\226\231\022.\n\016m_mater"
    "ial_num\030\010 \001(\005B\026\302\377\024\022\350\247\211\351\206\222\346\235\220\346\226\231\346\225\260\351\207\217\022\036\n"
    "\010m_mallid\030\t \001(\005B\014\302\377\024\010\345\225\206\345\223\201ID\022+\n\016m_initi"
    "alvalue\030\n \001(\005B\023\302\377\024\017\350\247\211\351\206\222\345\210\235\345\247\213\345\200\274\022P\n\013m_"
    "attribute\030\013 \003(\0132%.proto_ff.E_ShentiAwake"
    "nAttributeDescB\024\302\377\024\014\350\247\211\351\206\222\345\261\236\346\200\247\210\301\024\004\022T\n\r"
    "m_afflatusatt\030\014 \003(\0132\'.proto_ff.E_ShentiA"
    "wakenAfflatusattDescB\024\302\377\024\014\347\245\236\346\202\237\345\261\236\346\200\247\210\301"
    "\024\003\"Q\n\022Sheet_ShentiAwaken\022;\n\023E_ShentiAwak"
    "en_List\030\001 \003(\0132\030.proto_ff.E_ShentiAwakenB"
    "\004\210\301\024@\"\375\001\n\026E_ShentiAwakenprogress\022\024\n\004m_id"
    "\030\001 \001(\005B\006\302\377\024\002id\022$\n\nm_awakenlv\030\002 \001(\005B\020\302\377\024\014"
    "\350\247\211\351\206\222\347\255\211\347\272\247\022%\n\013m_remanielv\030\003 \001(\005B\020\302\377\024\014\350"
    "\243\205\345\244\207\350\275\254\347\224\237\022.\n\016m_equipquality\030\004 \001(\005B\026\302\377\024"
    "\022\346\235\220\346\226\231\350\243\205\345\244\207\345\223\201\350\264\250\022+\n\013m_equipstar\030\005 \001(\005"
    "B\026\302\377\024\022\346\235\220\346\226\231\350\243\205\345\244\207\346\230\237\347\272\247\022#\n\010m_awaken\030\006 \003"
    "(\005B\021\302\377\024\t\350\247\211\351\206\222\345\272\246\210\301\024\006\"i\n\032Sheet_ShentiAwa"
    "kenprogress\022K\n\033E_ShentiAwakenprogress_Li"
    "st\030\001 \003(\0132 .proto_ff.E_ShentiAwakenprogre"
    "ssB\004\210\301\024@\"N\n\031E_ShentiSuitAttributeDesc\022\033\n"
    "\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type\030\002 \001"
    "(\005B\004\302\377\024\000\"\254\002\n\014E_ShentiSuit\022\024\n\004m_id\030\001 \001(\005B"
    "\006\302\377\024\002id\022\"\n\013m_suitgroup\030\002 \001(\005B\r\302\377\024\t\345\245\227\350\243\205"
    "\347\273\204\022\"\n\010m_suitlv\030\003 \001(\005B\020\302\377\024\014\345\245\227\350\243\205\347\255\211\347\272\247\022"
    "%\n\005m_num\030\004 \001(\005B\026\302\377\024\022\345\245\227\350\243\205\346\277\200\346\264\273\344\273\266\346\225\260\022$"
    "\n\006m_name\030\005 \001(\tB\024\302\377\024\014\345\245\227\350\243\205\345\220\215\347\247\260\220\301\024@\022!\n\007"
    "m_skill\030\006 \001(\005B\020\302\377\024\014\345\245\227\350\243\205\346\212\200\350\203\275\022N\n\013m_att"
    "ribute\030\007 \003(\0132#.proto_ff.E_ShentiSuitAttr"
    "ibuteDescB\024\302\377\024\014\345\245\227\350\243\205\345\261\236\346\200\247\210\301\024\n\"L\n\020Sheet"
    "_ShentiSuit\0228\n\021E_ShentiSuit_List\030\001 \003(\0132\026"
    ".proto_ff.E_ShentiSuitB\005\210\301\024\200\001\"\221\001\n\017E_Shen"
    "tiCompose\022(\n\014m_need_equip\030\001 \001(\005B\022\302\377\024\016\346\211\200"
    "\351\234\200\350\243\205\345\244\207id\022*\n\016m_target_equip\030\002 \001(\005B\022\302\377\024"
    "\016\347\233\256\346\240\207\350\243\205\345\244\207id\022(\n\016m_compose_tips\030\003 \001(\005B"
    "\020\302\377\024\014\345\220\210\346\210\220\346\235\220\346\226\231\"U\n\023Sheet_ShentiCompose"
    "\022>\n\024E_ShentiCompose_List\030\001 \003(\0132\031.proto_f"
    "f.E_ShentiComposeB\005\210\301\024\200\001\"L\n\033E_ShentiStar"
    "_upMaterialDesc\022\031\n\005m_num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351"
    "\207\217\022\022\n\004m_id\030\002 \001(\005B\004\302\377\024\000\"9\n\031E_ShentiStar_u"
    "pXpstarDesc\022\034\n\010m_weight\030\001 \001(\005B\n\302\377\024\006\346\235\203\351\207"
    "\215\"\267\002\n\017E_ShentiStar_up\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024"
    "\002id\022 \n\006m_star\030\002 \001(\005B\020\302\377\024\014\345\215\207\346\230\237\346\230\237\346\225\260\022$\n"
    "\nm_position\030\003 \001(\005B\020\302\377\024\014\345\215\207\346\230\237\351\203\250\344\275\215\022.\n\016m"
    "_need_quality\030\004 \001(\005B\026\302\377\024\022\350\243\205\345\244\207\345\223\201\350\264\250\350\246\201"
    "\346\261\202\022O\n\nm_material\030\005 \003(\0132%.proto_ff.E_She"
    "ntiStar_upMaterialDescB\024\302\377\024\014\345\215\207\346\230\237\346\235\220\346\226\231"
    "\210\301\024\002\022E\n\010m_xpstar\030\006 \003(\0132#.proto_ff.E_Shen"
    "tiStar_upXpstarDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\005\"T\n\023S"
    "heet_ShentiStar_up\022=\n\024E_ShentiStar_up_Li"
    "st\030\001 \003(\0132\031.proto_ff.E_ShentiStar_upB\004\210\301\024"
    " \"U\n E_ShentiStrengtitelAttributeDesc\022\033\n"
    "\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type\030\002 \001"
    "(\005B\004\302\377\024\000\"\317\001\n\023E_ShentiStrengtitel\022\024\n\004m_id"
    "\030\001 \001(\005B\006\302\377\024\002id\022%\n\013m_remanielv\030\002 \001(\005B\020\302\377\024"
    "\014\350\243\205\345\244\207\350\275\254\347\224\237\022$\n\nm_strenglv\030\003 \001(\005B\020\302\377\024\014\345"
    "\274\272\345\214\226\347\233\256\346\240\207\022U\n\013m_attribute\030\004 \003(\0132*.proto"
    "_ff.E_ShentiStrengtitelAttributeDescB\024\302\377"
    "\024\014\345\274\272\345\214\226\345\261\236\346\200\247\210\301\024\002\"`\n\027Sheet_ShentiStreng"
    "titel\022E\n\030E_ShentiStrengtitel_List\030\001 \003(\0132"
    "\035.proto_ff.E_ShentiStrengtitelB\004\210\301\024@\"\235\001\n"
    "\021E_ShentiStartitel\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id"
    "\022\037\n\005m_num\030\002 \001(\005B\020\302\377\024\014\346\230\237\347\272\247\346\225\260\351\207\217\022$\n\020m_a"
    "ttribute_type\030\003 \001(\005B\n\302\377\024\006\345\261\236\346\200\247\022+\n\021m_att"
    "ribute_value\030\004 \001(\005B\020\302\377\024\014\345\261\236\346\200\247\346\225\260\345\200\274\"Z\n\025"
    "Sheet_ShentiStartitel\022A\n\026E_ShentiStartit"
    "el_List\030\001 \003(\0132\033.proto_ff.E_ShentiStartit"
    "elB\004\210\301\024\020", 9328);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Shenti.proto", &protobuf_RegisterTypes);
  E_ShentiConstantTimeDesc::default_instance_ = new E_ShentiConstantTimeDesc();
  E_ShentiConstant::default_instance_ = new E_ShentiConstant();
  Sheet_ShentiConstant::default_instance_ = new Sheet_ShentiConstant();
  E_ShentiPreposeRewardDesc::default_instance_ = new E_ShentiPreposeRewardDesc();
  E_ShentiPrepose::default_instance_ = new E_ShentiPrepose();
  Sheet_ShentiPrepose::default_instance_ = new Sheet_ShentiPrepose();
  E_ShentiUpgradeAttributeDesc::default_instance_ = new E_ShentiUpgradeAttributeDesc();
  E_ShentiUpgrade::default_instance_ = new E_ShentiUpgrade();
  Sheet_ShentiUpgrade::default_instance_ = new Sheet_ShentiUpgrade();
  E_ShentiRemanieAttrDesc::default_instance_ = new E_ShentiRemanieAttrDesc();
  E_ShentiRemanie::default_instance_ = new E_ShentiRemanie();
  Sheet_ShentiRemanie::default_instance_ = new Sheet_ShentiRemanie();
  E_ShentiEquip::default_instance_ = new E_ShentiEquip();
  Sheet_ShentiEquip::default_instance_ = new Sheet_ShentiEquip();
  E_ShentiAttributeAttributeDesc::default_instance_ = new E_ShentiAttributeAttributeDesc();
  E_ShentiAttributeXpcomDesc::default_instance_ = new E_ShentiAttributeXpcomDesc();
  E_ShentiAttributeXpstarDesc::default_instance_ = new E_ShentiAttributeXpstarDesc();
  E_ShentiAttributeGodDesc::default_instance_ = new E_ShentiAttributeGodDesc();
  E_ShentiAttributeSpecialDesc::default_instance_ = new E_ShentiAttributeSpecialDesc();
  E_ShentiAttribute::default_instance_ = new E_ShentiAttribute();
  Sheet_ShentiAttribute::default_instance_ = new Sheet_ShentiAttribute();
  E_ShentiStrongMaterialDesc::default_instance_ = new E_ShentiStrongMaterialDesc();
  E_ShentiStrongAttributeDesc::default_instance_ = new E_ShentiStrongAttributeDesc();
  E_ShentiStrong::default_instance_ = new E_ShentiStrong();
  Sheet_ShentiStrong::default_instance_ = new Sheet_ShentiStrong();
  E_ShentiEvolveAttributeDesc::default_instance_ = new E_ShentiEvolveAttributeDesc();
  E_ShentiEvolveXpcomDesc::default_instance_ = new E_ShentiEvolveXpcomDesc();
  E_ShentiEvolveXpstarDesc::default_instance_ = new E_ShentiEvolveXpstarDesc();
  E_ShentiEvolve::default_instance_ = new E_ShentiEvolve();
  Sheet_ShentiEvolve::default_instance_ = new Sheet_ShentiEvolve();
  E_ShentiEvolveprogress::default_instance_ = new E_ShentiEvolveprogress();
  Sheet_ShentiEvolveprogress::default_instance_ = new Sheet_ShentiEvolveprogress();
  E_ShentiStarlibraryXpcomDesc::default_instance_ = new E_ShentiStarlibraryXpcomDesc();
  E_ShentiStarlibraryXpstarDesc::default_instance_ = new E_ShentiStarlibraryXpstarDesc();
  E_ShentiStarlibrary::default_instance_ = new E_ShentiStarlibrary();
  Sheet_ShentiStarlibrary::default_instance_ = new Sheet_ShentiStarlibrary();
  E_ShentiAwakenAttributeDesc::default_instance_ = new E_ShentiAwakenAttributeDesc();
  E_ShentiAwakenAfflatusattDesc::default_instance_ = new E_ShentiAwakenAfflatusattDesc();
  E_ShentiAwaken::default_instance_ = new E_ShentiAwaken();
  Sheet_ShentiAwaken::default_instance_ = new Sheet_ShentiAwaken();
  E_ShentiAwakenprogress::default_instance_ = new E_ShentiAwakenprogress();
  Sheet_ShentiAwakenprogress::default_instance_ = new Sheet_ShentiAwakenprogress();
  E_ShentiSuitAttributeDesc::default_instance_ = new E_ShentiSuitAttributeDesc();
  E_ShentiSuit::default_instance_ = new E_ShentiSuit();
  Sheet_ShentiSuit::default_instance_ = new Sheet_ShentiSuit();
  E_ShentiCompose::default_instance_ = new E_ShentiCompose();
  Sheet_ShentiCompose::default_instance_ = new Sheet_ShentiCompose();
  E_ShentiStar_upMaterialDesc::default_instance_ = new E_ShentiStar_upMaterialDesc();
  E_ShentiStar_upXpstarDesc::default_instance_ = new E_ShentiStar_upXpstarDesc();
  E_ShentiStar_up::default_instance_ = new E_ShentiStar_up();
  Sheet_ShentiStar_up::default_instance_ = new Sheet_ShentiStar_up();
  E_ShentiStrengtitelAttributeDesc::default_instance_ = new E_ShentiStrengtitelAttributeDesc();
  E_ShentiStrengtitel::default_instance_ = new E_ShentiStrengtitel();
  Sheet_ShentiStrengtitel::default_instance_ = new Sheet_ShentiStrengtitel();
  E_ShentiStartitel::default_instance_ = new E_ShentiStartitel();
  Sheet_ShentiStartitel::default_instance_ = new Sheet_ShentiStartitel();
  E_ShentiConstantTimeDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiConstant::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiConstant::default_instance_->InitAsDefaultInstance();
  E_ShentiPreposeRewardDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiPrepose::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiPrepose::default_instance_->InitAsDefaultInstance();
  E_ShentiUpgradeAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiUpgrade::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiUpgrade::default_instance_->InitAsDefaultInstance();
  E_ShentiRemanieAttrDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiRemanie::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiRemanie::default_instance_->InitAsDefaultInstance();
  E_ShentiEquip::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiEquip::default_instance_->InitAsDefaultInstance();
  E_ShentiAttributeAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiAttributeXpcomDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiAttributeXpstarDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiAttributeGodDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiAttributeSpecialDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiAttribute::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiAttribute::default_instance_->InitAsDefaultInstance();
  E_ShentiStrongMaterialDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiStrongAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiStrong::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiStrong::default_instance_->InitAsDefaultInstance();
  E_ShentiEvolveAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiEvolveXpcomDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiEvolveXpstarDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiEvolve::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiEvolve::default_instance_->InitAsDefaultInstance();
  E_ShentiEvolveprogress::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiEvolveprogress::default_instance_->InitAsDefaultInstance();
  E_ShentiStarlibraryXpcomDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiStarlibraryXpstarDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiStarlibrary::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiStarlibrary::default_instance_->InitAsDefaultInstance();
  E_ShentiAwakenAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiAwakenAfflatusattDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiAwaken::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiAwaken::default_instance_->InitAsDefaultInstance();
  E_ShentiAwakenprogress::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiAwakenprogress::default_instance_->InitAsDefaultInstance();
  E_ShentiSuitAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiSuit::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiSuit::default_instance_->InitAsDefaultInstance();
  E_ShentiCompose::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiCompose::default_instance_->InitAsDefaultInstance();
  E_ShentiStar_upMaterialDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiStar_upXpstarDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiStar_up::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiStar_up::default_instance_->InitAsDefaultInstance();
  E_ShentiStrengtitelAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_ShentiStrengtitel::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiStrengtitel::default_instance_->InitAsDefaultInstance();
  E_ShentiStartitel::default_instance_->InitAsDefaultInstance();
  Sheet_ShentiStartitel::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fShenti_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fShenti_2eproto {
  StaticDescriptorInitializer_E_5fShenti_2eproto() {
    protobuf_AddDesc_E_5fShenti_2eproto();
  }
} static_descriptor_initializer_E_5fShenti_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_ShentiConstantTimeDesc::kMCloseFieldNumber;
const int E_ShentiConstantTimeDesc::kMOpenFieldNumber;
#endif  // !_MSC_VER

E_ShentiConstantTimeDesc::E_ShentiConstantTimeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiConstantTimeDesc::InitAsDefaultInstance() {
}

E_ShentiConstantTimeDesc::E_ShentiConstantTimeDesc(const E_ShentiConstantTimeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiConstantTimeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_close_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_open_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiConstantTimeDesc::~E_ShentiConstantTimeDesc() {
  SharedDtor();
}

void E_ShentiConstantTimeDesc::SharedDtor() {
  if (m_close_ != &::google::protobuf::internal::kEmptyString) {
    delete m_close_;
  }
  if (m_open_ != &::google::protobuf::internal::kEmptyString) {
    delete m_open_;
  }
  if (this != default_instance_) {
  }
}

void E_ShentiConstantTimeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiConstantTimeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiConstantTimeDesc_descriptor_;
}

const E_ShentiConstantTimeDesc& E_ShentiConstantTimeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiConstantTimeDesc* E_ShentiConstantTimeDesc::default_instance_ = NULL;

E_ShentiConstantTimeDesc* E_ShentiConstantTimeDesc::New() const {
  return new E_ShentiConstantTimeDesc;
}

void E_ShentiConstantTimeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_m_close()) {
      if (m_close_ != &::google::protobuf::internal::kEmptyString) {
        m_close_->clear();
      }
    }
    if (has_m_open()) {
      if (m_open_ != &::google::protobuf::internal::kEmptyString) {
        m_open_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiConstantTimeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string m_close = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_close()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_close().data(), this->m_close().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_open;
        break;
      }

      // optional string m_open = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_open:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_open()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_open().data(), this->m_open().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiConstantTimeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string m_close = 1;
  if (has_m_close()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_close().data(), this->m_close().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->m_close(), output);
  }

  // optional string m_open = 2;
  if (has_m_open()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_open().data(), this->m_open().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_open(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiConstantTimeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string m_close = 1;
  if (has_m_close()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_close().data(), this->m_close().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m_close(), target);
  }

  // optional string m_open = 2;
  if (has_m_open()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_open().data(), this->m_open().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_open(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiConstantTimeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string m_close = 1;
    if (has_m_close()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_close());
    }

    // optional string m_open = 2;
    if (has_m_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_open());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiConstantTimeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiConstantTimeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiConstantTimeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiConstantTimeDesc::MergeFrom(const E_ShentiConstantTimeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_close()) {
      set_m_close(from.m_close());
    }
    if (from.has_m_open()) {
      set_m_open(from.m_open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiConstantTimeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiConstantTimeDesc::CopyFrom(const E_ShentiConstantTimeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiConstantTimeDesc::IsInitialized() const {

  return true;
}

void E_ShentiConstantTimeDesc::Swap(E_ShentiConstantTimeDesc* other) {
  if (other != this) {
    std::swap(m_close_, other->m_close_);
    std::swap(m_open_, other->m_open_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiConstantTimeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiConstantTimeDesc_descriptor_;
  metadata.reflection = E_ShentiConstantTimeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiConstant::kMIdFieldNumber;
const int E_ShentiConstant::kMLvlimitFieldNumber;
const int E_ShentiConstant::kMRemanietimesFieldNumber;
const int E_ShentiConstant::kMCurrencyidFieldNumber;
const int E_ShentiConstant::kMCurrencynumFieldNumber;
const int E_ShentiConstant::kMCurrencytimesFieldNumber;
const int E_ShentiConstant::kMBaglimitFieldNumber;
const int E_ShentiConstant::kMItemidFieldNumber;
const int E_ShentiConstant::kMTimeFieldNumber;
#endif  // !_MSC_VER

E_ShentiConstant::E_ShentiConstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiConstant::InitAsDefaultInstance() {
}

E_ShentiConstant::E_ShentiConstant(const E_ShentiConstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiConstant::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_lvlimit_ = 0;
  m_remanietimes_ = 0;
  m_currencyid_ = 0;
  m_currencynum_ = 0;
  m_currencytimes_ = 0;
  m_baglimit_ = 0;
  m_itemid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiConstant::~E_ShentiConstant() {
  SharedDtor();
}

void E_ShentiConstant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiConstant_descriptor_;
}

const E_ShentiConstant& E_ShentiConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiConstant* E_ShentiConstant::default_instance_ = NULL;

E_ShentiConstant* E_ShentiConstant::New() const {
  return new E_ShentiConstant;
}

void E_ShentiConstant::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_lvlimit_ = 0;
    m_remanietimes_ = 0;
    m_currencyid_ = 0;
    m_currencynum_ = 0;
    m_currencytimes_ = 0;
    m_baglimit_ = 0;
    m_itemid_ = 0;
  }
  m_time_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_lvlimit;
        break;
      }

      // optional int32 m_lvlimit = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvlimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvlimit_)));
          set_has_m_lvlimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_remanietimes;
        break;
      }

      // optional int32 m_remanietimes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_remanietimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_remanietimes_)));
          set_has_m_remanietimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_currencyid;
        break;
      }

      // optional int32 m_currencyid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_currencyid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_currencyid_)));
          set_has_m_currencyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_currencynum;
        break;
      }

      // optional int32 m_currencynum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_currencynum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_currencynum_)));
          set_has_m_currencynum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_currencytimes;
        break;
      }

      // optional int32 m_currencytimes = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_currencytimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_currencytimes_)));
          set_has_m_currencytimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_baglimit;
        break;
      }

      // optional int32 m_baglimit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_baglimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_baglimit_)));
          set_has_m_baglimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_time;
        break;
      }

      // repeated .proto_ff.E_ShentiConstantTimeDesc m_time = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_time()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_time;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_lvlimit = 2;
  if (has_m_lvlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lvlimit(), output);
  }

  // optional int32 m_remanietimes = 3;
  if (has_m_remanietimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_remanietimes(), output);
  }

  // optional int32 m_currencyid = 4;
  if (has_m_currencyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_currencyid(), output);
  }

  // optional int32 m_currencynum = 5;
  if (has_m_currencynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_currencynum(), output);
  }

  // optional int32 m_currencytimes = 6;
  if (has_m_currencytimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_currencytimes(), output);
  }

  // optional int32 m_baglimit = 7;
  if (has_m_baglimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_baglimit(), output);
  }

  // optional int32 m_itemid = 8;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_itemid(), output);
  }

  // repeated .proto_ff.E_ShentiConstantTimeDesc m_time = 9;
  for (int i = 0; i < this->m_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->m_time(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiConstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_lvlimit = 2;
  if (has_m_lvlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lvlimit(), target);
  }

  // optional int32 m_remanietimes = 3;
  if (has_m_remanietimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_remanietimes(), target);
  }

  // optional int32 m_currencyid = 4;
  if (has_m_currencyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_currencyid(), target);
  }

  // optional int32 m_currencynum = 5;
  if (has_m_currencynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_currencynum(), target);
  }

  // optional int32 m_currencytimes = 6;
  if (has_m_currencytimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_currencytimes(), target);
  }

  // optional int32 m_baglimit = 7;
  if (has_m_baglimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_baglimit(), target);
  }

  // optional int32 m_itemid = 8;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_itemid(), target);
  }

  // repeated .proto_ff.E_ShentiConstantTimeDesc m_time = 9;
  for (int i = 0; i < this->m_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->m_time(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiConstant::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_lvlimit = 2;
    if (has_m_lvlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvlimit());
    }

    // optional int32 m_remanietimes = 3;
    if (has_m_remanietimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_remanietimes());
    }

    // optional int32 m_currencyid = 4;
    if (has_m_currencyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_currencyid());
    }

    // optional int32 m_currencynum = 5;
    if (has_m_currencynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_currencynum());
    }

    // optional int32 m_currencytimes = 6;
    if (has_m_currencytimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_currencytimes());
    }

    // optional int32 m_baglimit = 7;
    if (has_m_baglimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_baglimit());
    }

    // optional int32 m_itemid = 8;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

  }
  // repeated .proto_ff.E_ShentiConstantTimeDesc m_time = 9;
  total_size += 1 * this->m_time_size();
  for (int i = 0; i < this->m_time_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_time(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiConstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiConstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiConstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiConstant::MergeFrom(const E_ShentiConstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_time_.MergeFrom(from.m_time_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_lvlimit()) {
      set_m_lvlimit(from.m_lvlimit());
    }
    if (from.has_m_remanietimes()) {
      set_m_remanietimes(from.m_remanietimes());
    }
    if (from.has_m_currencyid()) {
      set_m_currencyid(from.m_currencyid());
    }
    if (from.has_m_currencynum()) {
      set_m_currencynum(from.m_currencynum());
    }
    if (from.has_m_currencytimes()) {
      set_m_currencytimes(from.m_currencytimes());
    }
    if (from.has_m_baglimit()) {
      set_m_baglimit(from.m_baglimit());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiConstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiConstant::CopyFrom(const E_ShentiConstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiConstant::IsInitialized() const {

  return true;
}

void E_ShentiConstant::Swap(E_ShentiConstant* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_lvlimit_, other->m_lvlimit_);
    std::swap(m_remanietimes_, other->m_remanietimes_);
    std::swap(m_currencyid_, other->m_currencyid_);
    std::swap(m_currencynum_, other->m_currencynum_);
    std::swap(m_currencytimes_, other->m_currencytimes_);
    std::swap(m_baglimit_, other->m_baglimit_);
    std::swap(m_itemid_, other->m_itemid_);
    m_time_.Swap(&other->m_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiConstant_descriptor_;
  metadata.reflection = E_ShentiConstant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiConstant::kEShentiConstantListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiConstant::Sheet_ShentiConstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiConstant::InitAsDefaultInstance() {
}

Sheet_ShentiConstant::Sheet_ShentiConstant(const Sheet_ShentiConstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiConstant::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiConstant::~Sheet_ShentiConstant() {
  SharedDtor();
}

void Sheet_ShentiConstant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiConstant_descriptor_;
}

const Sheet_ShentiConstant& Sheet_ShentiConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiConstant* Sheet_ShentiConstant::default_instance_ = NULL;

Sheet_ShentiConstant* Sheet_ShentiConstant::New() const {
  return new Sheet_ShentiConstant;
}

void Sheet_ShentiConstant::Clear() {
  e_shenticonstant_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiConstant E_ShentiConstant_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiConstant_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shenticonstant_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiConstant_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiConstant E_ShentiConstant_List = 1;
  for (int i = 0; i < this->e_shenticonstant_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shenticonstant_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiConstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiConstant E_ShentiConstant_List = 1;
  for (int i = 0; i < this->e_shenticonstant_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shenticonstant_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiConstant::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiConstant E_ShentiConstant_List = 1;
  total_size += 1 * this->e_shenticonstant_list_size();
  for (int i = 0; i < this->e_shenticonstant_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shenticonstant_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiConstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiConstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiConstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiConstant::MergeFrom(const Sheet_ShentiConstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shenticonstant_list_.MergeFrom(from.e_shenticonstant_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiConstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiConstant::CopyFrom(const Sheet_ShentiConstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiConstant::IsInitialized() const {

  return true;
}

void Sheet_ShentiConstant::Swap(Sheet_ShentiConstant* other) {
  if (other != this) {
    e_shenticonstant_list_.Swap(&other->e_shenticonstant_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiConstant_descriptor_;
  metadata.reflection = Sheet_ShentiConstant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiPreposeRewardDesc::kMNumFieldNumber;
const int E_ShentiPreposeRewardDesc::kMItemFieldNumber;
#endif  // !_MSC_VER

E_ShentiPreposeRewardDesc::E_ShentiPreposeRewardDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiPreposeRewardDesc::InitAsDefaultInstance() {
}

E_ShentiPreposeRewardDesc::E_ShentiPreposeRewardDesc(const E_ShentiPreposeRewardDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiPreposeRewardDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_item_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiPreposeRewardDesc::~E_ShentiPreposeRewardDesc() {
  SharedDtor();
}

void E_ShentiPreposeRewardDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiPreposeRewardDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiPreposeRewardDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiPreposeRewardDesc_descriptor_;
}

const E_ShentiPreposeRewardDesc& E_ShentiPreposeRewardDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiPreposeRewardDesc* E_ShentiPreposeRewardDesc::default_instance_ = NULL;

E_ShentiPreposeRewardDesc* E_ShentiPreposeRewardDesc::New() const {
  return new E_ShentiPreposeRewardDesc;
}

void E_ShentiPreposeRewardDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_item_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiPreposeRewardDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_item;
        break;
      }

      // optional int32 m_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiPreposeRewardDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_item = 2;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_item(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiPreposeRewardDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_item = 2;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_item(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiPreposeRewardDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_item = 2;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_item());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiPreposeRewardDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiPreposeRewardDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiPreposeRewardDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiPreposeRewardDesc::MergeFrom(const E_ShentiPreposeRewardDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiPreposeRewardDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiPreposeRewardDesc::CopyFrom(const E_ShentiPreposeRewardDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiPreposeRewardDesc::IsInitialized() const {

  return true;
}

void E_ShentiPreposeRewardDesc::Swap(E_ShentiPreposeRewardDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_item_, other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiPreposeRewardDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiPreposeRewardDesc_descriptor_;
  metadata.reflection = E_ShentiPreposeRewardDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiPrepose::kMIdFieldNumber;
const int E_ShentiPrepose::kMConditionFieldNumber;
const int E_ShentiPrepose::kMValueFieldNumber;
const int E_ShentiPrepose::kMRewardFieldNumber;
#endif  // !_MSC_VER

E_ShentiPrepose::E_ShentiPrepose()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiPrepose::InitAsDefaultInstance() {
}

E_ShentiPrepose::E_ShentiPrepose(const E_ShentiPrepose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiPrepose::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_condition_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiPrepose::~E_ShentiPrepose() {
  SharedDtor();
}

void E_ShentiPrepose::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiPrepose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiPrepose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiPrepose_descriptor_;
}

const E_ShentiPrepose& E_ShentiPrepose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiPrepose* E_ShentiPrepose::default_instance_ = NULL;

E_ShentiPrepose* E_ShentiPrepose::New() const {
  return new E_ShentiPrepose;
}

void E_ShentiPrepose::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_condition_ = 0;
    m_value_ = 0;
  }
  m_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiPrepose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_condition;
        break;
      }

      // optional int32 m_condition = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_condition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_condition_)));
          set_has_m_condition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_reward;
        break;
      }

      // repeated .proto_ff.E_ShentiPreposeRewardDesc m_reward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiPrepose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_condition = 2;
  if (has_m_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_condition(), output);
  }

  // optional int32 m_value = 3;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_value(), output);
  }

  // repeated .proto_ff.E_ShentiPreposeRewardDesc m_reward = 4;
  for (int i = 0; i < this->m_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiPrepose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_condition = 2;
  if (has_m_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_condition(), target);
  }

  // optional int32 m_value = 3;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_value(), target);
  }

  // repeated .proto_ff.E_ShentiPreposeRewardDesc m_reward = 4;
  for (int i = 0; i < this->m_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiPrepose::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_condition = 2;
    if (has_m_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_condition());
    }

    // optional int32 m_value = 3;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  // repeated .proto_ff.E_ShentiPreposeRewardDesc m_reward = 4;
  total_size += 1 * this->m_reward_size();
  for (int i = 0; i < this->m_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiPrepose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiPrepose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiPrepose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiPrepose::MergeFrom(const E_ShentiPrepose& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_reward_.MergeFrom(from.m_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_condition()) {
      set_m_condition(from.m_condition());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiPrepose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiPrepose::CopyFrom(const E_ShentiPrepose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiPrepose::IsInitialized() const {

  return true;
}

void E_ShentiPrepose::Swap(E_ShentiPrepose* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_condition_, other->m_condition_);
    std::swap(m_value_, other->m_value_);
    m_reward_.Swap(&other->m_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiPrepose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiPrepose_descriptor_;
  metadata.reflection = E_ShentiPrepose_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiPrepose::kEShentiPreposeListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiPrepose::Sheet_ShentiPrepose()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiPrepose::InitAsDefaultInstance() {
}

Sheet_ShentiPrepose::Sheet_ShentiPrepose(const Sheet_ShentiPrepose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiPrepose::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiPrepose::~Sheet_ShentiPrepose() {
  SharedDtor();
}

void Sheet_ShentiPrepose::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiPrepose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiPrepose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiPrepose_descriptor_;
}

const Sheet_ShentiPrepose& Sheet_ShentiPrepose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiPrepose* Sheet_ShentiPrepose::default_instance_ = NULL;

Sheet_ShentiPrepose* Sheet_ShentiPrepose::New() const {
  return new Sheet_ShentiPrepose;
}

void Sheet_ShentiPrepose::Clear() {
  e_shentiprepose_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiPrepose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiPrepose E_ShentiPrepose_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiPrepose_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentiprepose_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiPrepose_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiPrepose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiPrepose E_ShentiPrepose_List = 1;
  for (int i = 0; i < this->e_shentiprepose_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentiprepose_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiPrepose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiPrepose E_ShentiPrepose_List = 1;
  for (int i = 0; i < this->e_shentiprepose_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentiprepose_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiPrepose::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiPrepose E_ShentiPrepose_List = 1;
  total_size += 1 * this->e_shentiprepose_list_size();
  for (int i = 0; i < this->e_shentiprepose_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentiprepose_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiPrepose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiPrepose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiPrepose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiPrepose::MergeFrom(const Sheet_ShentiPrepose& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentiprepose_list_.MergeFrom(from.e_shentiprepose_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiPrepose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiPrepose::CopyFrom(const Sheet_ShentiPrepose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiPrepose::IsInitialized() const {

  return true;
}

void Sheet_ShentiPrepose::Swap(Sheet_ShentiPrepose* other) {
  if (other != this) {
    e_shentiprepose_list_.Swap(&other->e_shentiprepose_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiPrepose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiPrepose_descriptor_;
  metadata.reflection = Sheet_ShentiPrepose_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiUpgradeAttributeDesc::kMValueFieldNumber;
const int E_ShentiUpgradeAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiUpgradeAttributeDesc::E_ShentiUpgradeAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiUpgradeAttributeDesc::InitAsDefaultInstance() {
}

E_ShentiUpgradeAttributeDesc::E_ShentiUpgradeAttributeDesc(const E_ShentiUpgradeAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiUpgradeAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiUpgradeAttributeDesc::~E_ShentiUpgradeAttributeDesc() {
  SharedDtor();
}

void E_ShentiUpgradeAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiUpgradeAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiUpgradeAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiUpgradeAttributeDesc_descriptor_;
}

const E_ShentiUpgradeAttributeDesc& E_ShentiUpgradeAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiUpgradeAttributeDesc* E_ShentiUpgradeAttributeDesc::default_instance_ = NULL;

E_ShentiUpgradeAttributeDesc* E_ShentiUpgradeAttributeDesc::New() const {
  return new E_ShentiUpgradeAttributeDesc;
}

void E_ShentiUpgradeAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiUpgradeAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiUpgradeAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiUpgradeAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiUpgradeAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiUpgradeAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiUpgradeAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiUpgradeAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiUpgradeAttributeDesc::MergeFrom(const E_ShentiUpgradeAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiUpgradeAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiUpgradeAttributeDesc::CopyFrom(const E_ShentiUpgradeAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiUpgradeAttributeDesc::IsInitialized() const {

  return true;
}

void E_ShentiUpgradeAttributeDesc::Swap(E_ShentiUpgradeAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiUpgradeAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiUpgradeAttributeDesc_descriptor_;
  metadata.reflection = E_ShentiUpgradeAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiUpgrade::kMIdFieldNumber;
const int E_ShentiUpgrade::kMLvFieldNumber;
const int E_ShentiUpgrade::kMChangelvFieldNumber;
const int E_ShentiUpgrade::kMExpFieldNumber;
const int E_ShentiUpgrade::kMExplimitFieldNumber;
const int E_ShentiUpgrade::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_ShentiUpgrade::E_ShentiUpgrade()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiUpgrade::InitAsDefaultInstance() {
}

E_ShentiUpgrade::E_ShentiUpgrade(const E_ShentiUpgrade& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiUpgrade::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_lv_ = 0;
  m_changelv_ = 0;
  m_exp_ = GOOGLE_LONGLONG(0);
  m_explimit_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiUpgrade::~E_ShentiUpgrade() {
  SharedDtor();
}

void E_ShentiUpgrade::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiUpgrade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiUpgrade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiUpgrade_descriptor_;
}

const E_ShentiUpgrade& E_ShentiUpgrade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiUpgrade* E_ShentiUpgrade::default_instance_ = NULL;

E_ShentiUpgrade* E_ShentiUpgrade::New() const {
  return new E_ShentiUpgrade;
}

void E_ShentiUpgrade::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    m_lv_ = 0;
    m_changelv_ = 0;
    m_exp_ = GOOGLE_LONGLONG(0);
    m_explimit_ = GOOGLE_LONGLONG(0);
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiUpgrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_changelv;
        break;
      }

      // optional int32 m_changelv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_changelv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_changelv_)));
          set_has_m_changelv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_exp;
        break;
      }

      // optional int64 m_exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_explimit;
        break;
      }

      // optional int64 m_explimit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_explimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_explimit_)));
          set_has_m_explimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_ShentiUpgradeAttributeDesc m_attribute = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiUpgrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional int32 m_lv = 2;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lv(), output);
  }

  // optional int32 m_changelv = 3;
  if (has_m_changelv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_changelv(), output);
  }

  // optional int64 m_exp = 4;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->m_exp(), output);
  }

  // optional int64 m_explimit = 5;
  if (has_m_explimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->m_explimit(), output);
  }

  // repeated .proto_ff.E_ShentiUpgradeAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiUpgrade::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional int32 m_lv = 2;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lv(), target);
  }

  // optional int32 m_changelv = 3;
  if (has_m_changelv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_changelv(), target);
  }

  // optional int64 m_exp = 4;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->m_exp(), target);
  }

  // optional int64 m_explimit = 5;
  if (has_m_explimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->m_explimit(), target);
  }

  // repeated .proto_ff.E_ShentiUpgradeAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiUpgrade::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int32 m_lv = 2;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_changelv = 3;
    if (has_m_changelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_changelv());
    }

    // optional int64 m_exp = 4;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_exp());
    }

    // optional int64 m_explimit = 5;
    if (has_m_explimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_explimit());
    }

  }
  // repeated .proto_ff.E_ShentiUpgradeAttributeDesc m_attribute = 6;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiUpgrade::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiUpgrade* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiUpgrade*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiUpgrade::MergeFrom(const E_ShentiUpgrade& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_changelv()) {
      set_m_changelv(from.m_changelv());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_explimit()) {
      set_m_explimit(from.m_explimit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiUpgrade::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiUpgrade::CopyFrom(const E_ShentiUpgrade& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiUpgrade::IsInitialized() const {

  return true;
}

void E_ShentiUpgrade::Swap(E_ShentiUpgrade* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_changelv_, other->m_changelv_);
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_explimit_, other->m_explimit_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiUpgrade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiUpgrade_descriptor_;
  metadata.reflection = E_ShentiUpgrade_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiUpgrade::kEShentiUpgradeListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiUpgrade::Sheet_ShentiUpgrade()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiUpgrade::InitAsDefaultInstance() {
}

Sheet_ShentiUpgrade::Sheet_ShentiUpgrade(const Sheet_ShentiUpgrade& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiUpgrade::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiUpgrade::~Sheet_ShentiUpgrade() {
  SharedDtor();
}

void Sheet_ShentiUpgrade::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiUpgrade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiUpgrade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiUpgrade_descriptor_;
}

const Sheet_ShentiUpgrade& Sheet_ShentiUpgrade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiUpgrade* Sheet_ShentiUpgrade::default_instance_ = NULL;

Sheet_ShentiUpgrade* Sheet_ShentiUpgrade::New() const {
  return new Sheet_ShentiUpgrade;
}

void Sheet_ShentiUpgrade::Clear() {
  e_shentiupgrade_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiUpgrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiUpgrade E_ShentiUpgrade_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiUpgrade_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentiupgrade_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiUpgrade_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiUpgrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiUpgrade E_ShentiUpgrade_List = 1;
  for (int i = 0; i < this->e_shentiupgrade_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentiupgrade_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiUpgrade::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiUpgrade E_ShentiUpgrade_List = 1;
  for (int i = 0; i < this->e_shentiupgrade_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentiupgrade_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiUpgrade::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiUpgrade E_ShentiUpgrade_List = 1;
  total_size += 1 * this->e_shentiupgrade_list_size();
  for (int i = 0; i < this->e_shentiupgrade_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentiupgrade_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiUpgrade::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiUpgrade* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiUpgrade*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiUpgrade::MergeFrom(const Sheet_ShentiUpgrade& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentiupgrade_list_.MergeFrom(from.e_shentiupgrade_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiUpgrade::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiUpgrade::CopyFrom(const Sheet_ShentiUpgrade& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiUpgrade::IsInitialized() const {

  return true;
}

void Sheet_ShentiUpgrade::Swap(Sheet_ShentiUpgrade* other) {
  if (other != this) {
    e_shentiupgrade_list_.Swap(&other->e_shentiupgrade_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiUpgrade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiUpgrade_descriptor_;
  metadata.reflection = Sheet_ShentiUpgrade_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiRemanieAttrDesc::kMValueFieldNumber;
const int E_ShentiRemanieAttrDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiRemanieAttrDesc::E_ShentiRemanieAttrDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiRemanieAttrDesc::InitAsDefaultInstance() {
}

E_ShentiRemanieAttrDesc::E_ShentiRemanieAttrDesc(const E_ShentiRemanieAttrDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiRemanieAttrDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiRemanieAttrDesc::~E_ShentiRemanieAttrDesc() {
  SharedDtor();
}

void E_ShentiRemanieAttrDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiRemanieAttrDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiRemanieAttrDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiRemanieAttrDesc_descriptor_;
}

const E_ShentiRemanieAttrDesc& E_ShentiRemanieAttrDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiRemanieAttrDesc* E_ShentiRemanieAttrDesc::default_instance_ = NULL;

E_ShentiRemanieAttrDesc* E_ShentiRemanieAttrDesc::New() const {
  return new E_ShentiRemanieAttrDesc;
}

void E_ShentiRemanieAttrDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiRemanieAttrDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiRemanieAttrDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiRemanieAttrDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiRemanieAttrDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiRemanieAttrDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiRemanieAttrDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiRemanieAttrDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiRemanieAttrDesc::MergeFrom(const E_ShentiRemanieAttrDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiRemanieAttrDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiRemanieAttrDesc::CopyFrom(const E_ShentiRemanieAttrDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiRemanieAttrDesc::IsInitialized() const {

  return true;
}

void E_ShentiRemanieAttrDesc::Swap(E_ShentiRemanieAttrDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiRemanieAttrDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiRemanieAttrDesc_descriptor_;
  metadata.reflection = E_ShentiRemanieAttrDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiRemanie::kMIdFieldNumber;
const int E_ShentiRemanie::kMRemanielvFieldNumber;
const int E_ShentiRemanie::kMLvFieldNumber;
const int E_ShentiRemanie::kMTiansuccessFieldNumber;
const int E_ShentiRemanie::kMDisuccessFieldNumber;
const int E_ShentiRemanie::kMLosesuccessFieldNumber;
const int E_ShentiRemanie::kMRensuccessFieldNumber;
const int E_ShentiRemanie::kMRensuccesslimitFieldNumber;
const int E_ShentiRemanie::kMRewardFieldNumber;
const int E_ShentiRemanie::kMAttrFieldNumber;
#endif  // !_MSC_VER

E_ShentiRemanie::E_ShentiRemanie()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiRemanie::InitAsDefaultInstance() {
}

E_ShentiRemanie::E_ShentiRemanie(const E_ShentiRemanie& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiRemanie::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_remanielv_ = 0;
  m_lv_ = 0;
  m_tiansuccess_ = 0;
  m_disuccess_ = 0;
  m_losesuccess_ = 0;
  m_rensuccess_ = 0;
  m_rensuccesslimit_ = 0;
  m_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiRemanie::~E_ShentiRemanie() {
  SharedDtor();
}

void E_ShentiRemanie::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiRemanie::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiRemanie::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiRemanie_descriptor_;
}

const E_ShentiRemanie& E_ShentiRemanie::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiRemanie* E_ShentiRemanie::default_instance_ = NULL;

E_ShentiRemanie* E_ShentiRemanie::New() const {
  return new E_ShentiRemanie;
}

void E_ShentiRemanie::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_remanielv_ = 0;
    m_lv_ = 0;
    m_tiansuccess_ = 0;
    m_disuccess_ = 0;
    m_losesuccess_ = 0;
    m_rensuccess_ = 0;
    m_rensuccesslimit_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_reward_ = 0;
  }
  m_attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiRemanie::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_remanielv;
        break;
      }

      // optional int32 m_remanielv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_remanielv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_remanielv_)));
          set_has_m_remanielv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_tiansuccess;
        break;
      }

      // optional int32 m_tiansuccess = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_tiansuccess:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_tiansuccess_)));
          set_has_m_tiansuccess();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_disuccess;
        break;
      }

      // optional int32 m_disuccess = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_disuccess:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_disuccess_)));
          set_has_m_disuccess();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_losesuccess;
        break;
      }

      // optional int32 m_losesuccess = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_losesuccess:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_losesuccess_)));
          set_has_m_losesuccess();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_rensuccess;
        break;
      }

      // optional int32 m_rensuccess = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rensuccess:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rensuccess_)));
          set_has_m_rensuccess();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_rensuccesslimit;
        break;
      }

      // optional int32 m_rensuccesslimit = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rensuccesslimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rensuccesslimit_)));
          set_has_m_rensuccesslimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_reward;
        break;
      }

      // optional int32 m_reward = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_reward_)));
          set_has_m_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_attr;
        break;
      }

      // repeated .proto_ff.E_ShentiRemanieAttrDesc m_attr = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_attr;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiRemanie::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_remanielv = 2;
  if (has_m_remanielv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_remanielv(), output);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_lv(), output);
  }

  // optional int32 m_tiansuccess = 4;
  if (has_m_tiansuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_tiansuccess(), output);
  }

  // optional int32 m_disuccess = 5;
  if (has_m_disuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_disuccess(), output);
  }

  // optional int32 m_losesuccess = 6;
  if (has_m_losesuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_losesuccess(), output);
  }

  // optional int32 m_rensuccess = 7;
  if (has_m_rensuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_rensuccess(), output);
  }

  // optional int32 m_rensuccesslimit = 8;
  if (has_m_rensuccesslimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_rensuccesslimit(), output);
  }

  // optional int32 m_reward = 9;
  if (has_m_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_reward(), output);
  }

  // repeated .proto_ff.E_ShentiRemanieAttrDesc m_attr = 10;
  for (int i = 0; i < this->m_attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->m_attr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiRemanie::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_remanielv = 2;
  if (has_m_remanielv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_remanielv(), target);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_lv(), target);
  }

  // optional int32 m_tiansuccess = 4;
  if (has_m_tiansuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_tiansuccess(), target);
  }

  // optional int32 m_disuccess = 5;
  if (has_m_disuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_disuccess(), target);
  }

  // optional int32 m_losesuccess = 6;
  if (has_m_losesuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_losesuccess(), target);
  }

  // optional int32 m_rensuccess = 7;
  if (has_m_rensuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_rensuccess(), target);
  }

  // optional int32 m_rensuccesslimit = 8;
  if (has_m_rensuccesslimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_rensuccesslimit(), target);
  }

  // optional int32 m_reward = 9;
  if (has_m_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_reward(), target);
  }

  // repeated .proto_ff.E_ShentiRemanieAttrDesc m_attr = 10;
  for (int i = 0; i < this->m_attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->m_attr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiRemanie::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_remanielv = 2;
    if (has_m_remanielv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_remanielv());
    }

    // optional int32 m_lv = 3;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_tiansuccess = 4;
    if (has_m_tiansuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_tiansuccess());
    }

    // optional int32 m_disuccess = 5;
    if (has_m_disuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_disuccess());
    }

    // optional int32 m_losesuccess = 6;
    if (has_m_losesuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_losesuccess());
    }

    // optional int32 m_rensuccess = 7;
    if (has_m_rensuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rensuccess());
    }

    // optional int32 m_rensuccesslimit = 8;
    if (has_m_rensuccesslimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rensuccesslimit());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_reward = 9;
    if (has_m_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_reward());
    }

  }
  // repeated .proto_ff.E_ShentiRemanieAttrDesc m_attr = 10;
  total_size += 1 * this->m_attr_size();
  for (int i = 0; i < this->m_attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiRemanie::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiRemanie* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiRemanie*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiRemanie::MergeFrom(const E_ShentiRemanie& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attr_.MergeFrom(from.m_attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_remanielv()) {
      set_m_remanielv(from.m_remanielv());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_tiansuccess()) {
      set_m_tiansuccess(from.m_tiansuccess());
    }
    if (from.has_m_disuccess()) {
      set_m_disuccess(from.m_disuccess());
    }
    if (from.has_m_losesuccess()) {
      set_m_losesuccess(from.m_losesuccess());
    }
    if (from.has_m_rensuccess()) {
      set_m_rensuccess(from.m_rensuccess());
    }
    if (from.has_m_rensuccesslimit()) {
      set_m_rensuccesslimit(from.m_rensuccesslimit());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_reward()) {
      set_m_reward(from.m_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiRemanie::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiRemanie::CopyFrom(const E_ShentiRemanie& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiRemanie::IsInitialized() const {

  return true;
}

void E_ShentiRemanie::Swap(E_ShentiRemanie* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_remanielv_, other->m_remanielv_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_tiansuccess_, other->m_tiansuccess_);
    std::swap(m_disuccess_, other->m_disuccess_);
    std::swap(m_losesuccess_, other->m_losesuccess_);
    std::swap(m_rensuccess_, other->m_rensuccess_);
    std::swap(m_rensuccesslimit_, other->m_rensuccesslimit_);
    std::swap(m_reward_, other->m_reward_);
    m_attr_.Swap(&other->m_attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiRemanie::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiRemanie_descriptor_;
  metadata.reflection = E_ShentiRemanie_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiRemanie::kEShentiRemanieListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiRemanie::Sheet_ShentiRemanie()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiRemanie::InitAsDefaultInstance() {
}

Sheet_ShentiRemanie::Sheet_ShentiRemanie(const Sheet_ShentiRemanie& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiRemanie::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiRemanie::~Sheet_ShentiRemanie() {
  SharedDtor();
}

void Sheet_ShentiRemanie::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiRemanie::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiRemanie::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiRemanie_descriptor_;
}

const Sheet_ShentiRemanie& Sheet_ShentiRemanie::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiRemanie* Sheet_ShentiRemanie::default_instance_ = NULL;

Sheet_ShentiRemanie* Sheet_ShentiRemanie::New() const {
  return new Sheet_ShentiRemanie;
}

void Sheet_ShentiRemanie::Clear() {
  e_shentiremanie_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiRemanie::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiRemanie E_ShentiRemanie_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiRemanie_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentiremanie_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiRemanie_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiRemanie::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiRemanie E_ShentiRemanie_List = 1;
  for (int i = 0; i < this->e_shentiremanie_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentiremanie_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiRemanie::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiRemanie E_ShentiRemanie_List = 1;
  for (int i = 0; i < this->e_shentiremanie_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentiremanie_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiRemanie::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiRemanie E_ShentiRemanie_List = 1;
  total_size += 1 * this->e_shentiremanie_list_size();
  for (int i = 0; i < this->e_shentiremanie_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentiremanie_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiRemanie::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiRemanie* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiRemanie*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiRemanie::MergeFrom(const Sheet_ShentiRemanie& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentiremanie_list_.MergeFrom(from.e_shentiremanie_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiRemanie::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiRemanie::CopyFrom(const Sheet_ShentiRemanie& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiRemanie::IsInitialized() const {

  return true;
}

void Sheet_ShentiRemanie::Swap(Sheet_ShentiRemanie* other) {
  if (other != this) {
    e_shentiremanie_list_.Swap(&other->e_shentiremanie_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiRemanie::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiRemanie_descriptor_;
  metadata.reflection = Sheet_ShentiRemanie_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiEquip::kMIdFieldNumber;
const int E_ShentiEquip::kMNameFieldNumber;
const int E_ShentiEquip::kMTypeFieldNumber;
const int E_ShentiEquip::kMRemanielvFieldNumber;
const int E_ShentiEquip::kMPositionFieldNumber;
const int E_ShentiEquip::kMProfessionFieldNumber;
const int E_ShentiEquip::kMProfessionlvFieldNumber;
const int E_ShentiEquip::kMQualityFieldNumber;
const int E_ShentiEquip::kMAttributeidFieldNumber;
const int E_ShentiEquip::kMSuitgroupFieldNumber;
const int E_ShentiEquip::kMStargroupFieldNumber;
const int E_ShentiEquip::kMIscanbindFieldNumber;
const int E_ShentiEquip::kMIstradebindFieldNumber;
const int E_ShentiEquip::kMSellpriceFieldNumber;
const int E_ShentiEquip::kMIconFieldNumber;
const int E_ShentiEquip::kMBroadcastFieldNumber;
#endif  // !_MSC_VER

E_ShentiEquip::E_ShentiEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiEquip::InitAsDefaultInstance() {
}

E_ShentiEquip::E_ShentiEquip(const E_ShentiEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiEquip::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_type_ = 0;
  m_remanielv_ = 0;
  m_position_ = 0;
  m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_professionlv_ = 0;
  m_quality_ = 0;
  m_attributeid_ = 0;
  m_suitgroup_ = 0;
  m_stargroup_ = 0;
  m_iscanbind_ = 0;
  m_istradebind_ = 0;
  m_sellprice_ = 0;
  m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_broadcast_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiEquip::~E_ShentiEquip() {
  SharedDtor();
}

void E_ShentiEquip::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    delete m_profession_;
  }
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_icon_;
  }
  if (this != default_instance_) {
  }
}

void E_ShentiEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiEquip_descriptor_;
}

const E_ShentiEquip& E_ShentiEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiEquip* E_ShentiEquip::default_instance_ = NULL;

E_ShentiEquip* E_ShentiEquip::New() const {
  return new E_ShentiEquip;
}

void E_ShentiEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_type_ = 0;
    m_remanielv_ = 0;
    m_position_ = 0;
    if (has_m_profession()) {
      if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
        m_profession_->clear();
      }
    }
    m_professionlv_ = 0;
    m_quality_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_attributeid_ = 0;
    m_suitgroup_ = 0;
    m_stargroup_ = 0;
    m_iscanbind_ = 0;
    m_istradebind_ = 0;
    m_sellprice_ = 0;
    if (has_m_icon()) {
      if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
        m_icon_->clear();
      }
    }
    m_broadcast_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_remanielv;
        break;
      }

      // optional int32 m_remanielv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_remanielv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_remanielv_)));
          set_has_m_remanielv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_profession;
        break;
      }

      // optional string m_profession = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_profession:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_profession()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_profession().data(), this->m_profession().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_professionlv;
        break;
      }

      // optional int32 m_professionlv = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_professionlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_professionlv_)));
          set_has_m_professionlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_attributeid;
        break;
      }

      // optional int32 m_attributeid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attributeid_)));
          set_has_m_attributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_suitgroup;
        break;
      }

      // optional int32 m_suitgroup = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_suitgroup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_suitgroup_)));
          set_has_m_suitgroup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_stargroup;
        break;
      }

      // optional int32 m_stargroup = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_stargroup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stargroup_)));
          set_has_m_stargroup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_iscanbind;
        break;
      }

      // optional int32 m_iscanbind = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_iscanbind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_iscanbind_)));
          set_has_m_iscanbind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_istradebind;
        break;
      }

      // optional int32 m_istradebind = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_istradebind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_istradebind_)));
          set_has_m_istradebind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_sellprice;
        break;
      }

      // optional int32 m_sellprice = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_sellprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_sellprice_)));
          set_has_m_sellprice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_m_icon;
        break;
      }

      // optional string m_icon = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_icon().data(), this->m_icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_broadcast;
        break;
      }

      // optional int32 m_broadcast = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_broadcast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_broadcast_)));
          set_has_m_broadcast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_type(), output);
  }

  // optional int32 m_remanielv = 4;
  if (has_m_remanielv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_remanielv(), output);
  }

  // optional int32 m_position = 5;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_position(), output);
  }

  // optional string m_profession = 6;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_profession().data(), this->m_profession().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_profession(), output);
  }

  // optional int32 m_professionlv = 7;
  if (has_m_professionlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_professionlv(), output);
  }

  // optional int32 m_quality = 8;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_quality(), output);
  }

  // optional int32 m_attributeid = 9;
  if (has_m_attributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_attributeid(), output);
  }

  // optional int32 m_suitgroup = 10;
  if (has_m_suitgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_suitgroup(), output);
  }

  // optional int32 m_stargroup = 11;
  if (has_m_stargroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_stargroup(), output);
  }

  // optional int32 m_iscanbind = 12;
  if (has_m_iscanbind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_iscanbind(), output);
  }

  // optional int32 m_istradebind = 13;
  if (has_m_istradebind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_istradebind(), output);
  }

  // optional int32 m_sellprice = 14;
  if (has_m_sellprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_sellprice(), output);
  }

  // optional string m_icon = 15;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->m_icon(), output);
  }

  // optional int32 m_broadcast = 16;
  if (has_m_broadcast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->m_broadcast(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_type(), target);
  }

  // optional int32 m_remanielv = 4;
  if (has_m_remanielv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_remanielv(), target);
  }

  // optional int32 m_position = 5;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_position(), target);
  }

  // optional string m_profession = 6;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_profession().data(), this->m_profession().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_profession(), target);
  }

  // optional int32 m_professionlv = 7;
  if (has_m_professionlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_professionlv(), target);
  }

  // optional int32 m_quality = 8;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_quality(), target);
  }

  // optional int32 m_attributeid = 9;
  if (has_m_attributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_attributeid(), target);
  }

  // optional int32 m_suitgroup = 10;
  if (has_m_suitgroup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_suitgroup(), target);
  }

  // optional int32 m_stargroup = 11;
  if (has_m_stargroup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_stargroup(), target);
  }

  // optional int32 m_iscanbind = 12;
  if (has_m_iscanbind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_iscanbind(), target);
  }

  // optional int32 m_istradebind = 13;
  if (has_m_istradebind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_istradebind(), target);
  }

  // optional int32 m_sellprice = 14;
  if (has_m_sellprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_sellprice(), target);
  }

  // optional string m_icon = 15;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->m_icon(), target);
  }

  // optional int32 m_broadcast = 16;
  if (has_m_broadcast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->m_broadcast(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_type = 3;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_remanielv = 4;
    if (has_m_remanielv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_remanielv());
    }

    // optional int32 m_position = 5;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional string m_profession = 6;
    if (has_m_profession()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_profession());
    }

    // optional int32 m_professionlv = 7;
    if (has_m_professionlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_professionlv());
    }

    // optional int32 m_quality = 8;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_attributeid = 9;
    if (has_m_attributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attributeid());
    }

    // optional int32 m_suitgroup = 10;
    if (has_m_suitgroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_suitgroup());
    }

    // optional int32 m_stargroup = 11;
    if (has_m_stargroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stargroup());
    }

    // optional int32 m_iscanbind = 12;
    if (has_m_iscanbind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_iscanbind());
    }

    // optional int32 m_istradebind = 13;
    if (has_m_istradebind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_istradebind());
    }

    // optional int32 m_sellprice = 14;
    if (has_m_sellprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_sellprice());
    }

    // optional string m_icon = 15;
    if (has_m_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_icon());
    }

    // optional int32 m_broadcast = 16;
    if (has_m_broadcast()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_broadcast());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiEquip::MergeFrom(const E_ShentiEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_remanielv()) {
      set_m_remanielv(from.m_remanielv());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_profession()) {
      set_m_profession(from.m_profession());
    }
    if (from.has_m_professionlv()) {
      set_m_professionlv(from.m_professionlv());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_attributeid()) {
      set_m_attributeid(from.m_attributeid());
    }
    if (from.has_m_suitgroup()) {
      set_m_suitgroup(from.m_suitgroup());
    }
    if (from.has_m_stargroup()) {
      set_m_stargroup(from.m_stargroup());
    }
    if (from.has_m_iscanbind()) {
      set_m_iscanbind(from.m_iscanbind());
    }
    if (from.has_m_istradebind()) {
      set_m_istradebind(from.m_istradebind());
    }
    if (from.has_m_sellprice()) {
      set_m_sellprice(from.m_sellprice());
    }
    if (from.has_m_icon()) {
      set_m_icon(from.m_icon());
    }
    if (from.has_m_broadcast()) {
      set_m_broadcast(from.m_broadcast());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiEquip::CopyFrom(const E_ShentiEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiEquip::IsInitialized() const {

  return true;
}

void E_ShentiEquip::Swap(E_ShentiEquip* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_remanielv_, other->m_remanielv_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_profession_, other->m_profession_);
    std::swap(m_professionlv_, other->m_professionlv_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_attributeid_, other->m_attributeid_);
    std::swap(m_suitgroup_, other->m_suitgroup_);
    std::swap(m_stargroup_, other->m_stargroup_);
    std::swap(m_iscanbind_, other->m_iscanbind_);
    std::swap(m_istradebind_, other->m_istradebind_);
    std::swap(m_sellprice_, other->m_sellprice_);
    std::swap(m_icon_, other->m_icon_);
    std::swap(m_broadcast_, other->m_broadcast_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiEquip_descriptor_;
  metadata.reflection = E_ShentiEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiEquip::kEShentiEquipListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiEquip::Sheet_ShentiEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiEquip::InitAsDefaultInstance() {
}

Sheet_ShentiEquip::Sheet_ShentiEquip(const Sheet_ShentiEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiEquip::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiEquip::~Sheet_ShentiEquip() {
  SharedDtor();
}

void Sheet_ShentiEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiEquip_descriptor_;
}

const Sheet_ShentiEquip& Sheet_ShentiEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiEquip* Sheet_ShentiEquip::default_instance_ = NULL;

Sheet_ShentiEquip* Sheet_ShentiEquip::New() const {
  return new Sheet_ShentiEquip;
}

void Sheet_ShentiEquip::Clear() {
  e_shentiequip_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiEquip E_ShentiEquip_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiEquip_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentiequip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiEquip_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiEquip E_ShentiEquip_List = 1;
  for (int i = 0; i < this->e_shentiequip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentiequip_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiEquip E_ShentiEquip_List = 1;
  for (int i = 0; i < this->e_shentiequip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentiequip_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiEquip::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiEquip E_ShentiEquip_List = 1;
  total_size += 1 * this->e_shentiequip_list_size();
  for (int i = 0; i < this->e_shentiequip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentiequip_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiEquip::MergeFrom(const Sheet_ShentiEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentiequip_list_.MergeFrom(from.e_shentiequip_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiEquip::CopyFrom(const Sheet_ShentiEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiEquip::IsInitialized() const {

  return true;
}

void Sheet_ShentiEquip::Swap(Sheet_ShentiEquip* other) {
  if (other != this) {
    e_shentiequip_list_.Swap(&other->e_shentiequip_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiEquip_descriptor_;
  metadata.reflection = Sheet_ShentiEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiAttributeAttributeDesc::kMValueFieldNumber;
const int E_ShentiAttributeAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiAttributeAttributeDesc::E_ShentiAttributeAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiAttributeAttributeDesc::InitAsDefaultInstance() {
}

E_ShentiAttributeAttributeDesc::E_ShentiAttributeAttributeDesc(const E_ShentiAttributeAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiAttributeAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiAttributeAttributeDesc::~E_ShentiAttributeAttributeDesc() {
  SharedDtor();
}

void E_ShentiAttributeAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiAttributeAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiAttributeAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiAttributeAttributeDesc_descriptor_;
}

const E_ShentiAttributeAttributeDesc& E_ShentiAttributeAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiAttributeAttributeDesc* E_ShentiAttributeAttributeDesc::default_instance_ = NULL;

E_ShentiAttributeAttributeDesc* E_ShentiAttributeAttributeDesc::New() const {
  return new E_ShentiAttributeAttributeDesc;
}

void E_ShentiAttributeAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiAttributeAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiAttributeAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiAttributeAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiAttributeAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiAttributeAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiAttributeAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiAttributeAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiAttributeAttributeDesc::MergeFrom(const E_ShentiAttributeAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiAttributeAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiAttributeAttributeDesc::CopyFrom(const E_ShentiAttributeAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiAttributeAttributeDesc::IsInitialized() const {

  return true;
}

void E_ShentiAttributeAttributeDesc::Swap(E_ShentiAttributeAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiAttributeAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiAttributeAttributeDesc_descriptor_;
  metadata.reflection = E_ShentiAttributeAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiAttributeXpcomDesc::kMValueFieldNumber;
const int E_ShentiAttributeXpcomDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiAttributeXpcomDesc::E_ShentiAttributeXpcomDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiAttributeXpcomDesc::InitAsDefaultInstance() {
}

E_ShentiAttributeXpcomDesc::E_ShentiAttributeXpcomDesc(const E_ShentiAttributeXpcomDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiAttributeXpcomDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiAttributeXpcomDesc::~E_ShentiAttributeXpcomDesc() {
  SharedDtor();
}

void E_ShentiAttributeXpcomDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiAttributeXpcomDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiAttributeXpcomDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiAttributeXpcomDesc_descriptor_;
}

const E_ShentiAttributeXpcomDesc& E_ShentiAttributeXpcomDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiAttributeXpcomDesc* E_ShentiAttributeXpcomDesc::default_instance_ = NULL;

E_ShentiAttributeXpcomDesc* E_ShentiAttributeXpcomDesc::New() const {
  return new E_ShentiAttributeXpcomDesc;
}

void E_ShentiAttributeXpcomDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiAttributeXpcomDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiAttributeXpcomDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiAttributeXpcomDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiAttributeXpcomDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiAttributeXpcomDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiAttributeXpcomDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiAttributeXpcomDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiAttributeXpcomDesc::MergeFrom(const E_ShentiAttributeXpcomDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiAttributeXpcomDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiAttributeXpcomDesc::CopyFrom(const E_ShentiAttributeXpcomDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiAttributeXpcomDesc::IsInitialized() const {

  return true;
}

void E_ShentiAttributeXpcomDesc::Swap(E_ShentiAttributeXpcomDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiAttributeXpcomDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiAttributeXpcomDesc_descriptor_;
  metadata.reflection = E_ShentiAttributeXpcomDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiAttributeXpstarDesc::kMValueFieldNumber;
const int E_ShentiAttributeXpstarDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiAttributeXpstarDesc::E_ShentiAttributeXpstarDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiAttributeXpstarDesc::InitAsDefaultInstance() {
}

E_ShentiAttributeXpstarDesc::E_ShentiAttributeXpstarDesc(const E_ShentiAttributeXpstarDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiAttributeXpstarDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiAttributeXpstarDesc::~E_ShentiAttributeXpstarDesc() {
  SharedDtor();
}

void E_ShentiAttributeXpstarDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiAttributeXpstarDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiAttributeXpstarDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiAttributeXpstarDesc_descriptor_;
}

const E_ShentiAttributeXpstarDesc& E_ShentiAttributeXpstarDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiAttributeXpstarDesc* E_ShentiAttributeXpstarDesc::default_instance_ = NULL;

E_ShentiAttributeXpstarDesc* E_ShentiAttributeXpstarDesc::New() const {
  return new E_ShentiAttributeXpstarDesc;
}

void E_ShentiAttributeXpstarDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiAttributeXpstarDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiAttributeXpstarDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiAttributeXpstarDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiAttributeXpstarDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiAttributeXpstarDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiAttributeXpstarDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiAttributeXpstarDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiAttributeXpstarDesc::MergeFrom(const E_ShentiAttributeXpstarDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiAttributeXpstarDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiAttributeXpstarDesc::CopyFrom(const E_ShentiAttributeXpstarDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiAttributeXpstarDesc::IsInitialized() const {

  return true;
}

void E_ShentiAttributeXpstarDesc::Swap(E_ShentiAttributeXpstarDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiAttributeXpstarDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiAttributeXpstarDesc_descriptor_;
  metadata.reflection = E_ShentiAttributeXpstarDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiAttributeGodDesc::kMValueFieldNumber;
const int E_ShentiAttributeGodDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiAttributeGodDesc::E_ShentiAttributeGodDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiAttributeGodDesc::InitAsDefaultInstance() {
}

E_ShentiAttributeGodDesc::E_ShentiAttributeGodDesc(const E_ShentiAttributeGodDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiAttributeGodDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiAttributeGodDesc::~E_ShentiAttributeGodDesc() {
  SharedDtor();
}

void E_ShentiAttributeGodDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiAttributeGodDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiAttributeGodDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiAttributeGodDesc_descriptor_;
}

const E_ShentiAttributeGodDesc& E_ShentiAttributeGodDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiAttributeGodDesc* E_ShentiAttributeGodDesc::default_instance_ = NULL;

E_ShentiAttributeGodDesc* E_ShentiAttributeGodDesc::New() const {
  return new E_ShentiAttributeGodDesc;
}

void E_ShentiAttributeGodDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiAttributeGodDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiAttributeGodDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiAttributeGodDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiAttributeGodDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiAttributeGodDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiAttributeGodDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiAttributeGodDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiAttributeGodDesc::MergeFrom(const E_ShentiAttributeGodDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiAttributeGodDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiAttributeGodDesc::CopyFrom(const E_ShentiAttributeGodDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiAttributeGodDesc::IsInitialized() const {

  return true;
}

void E_ShentiAttributeGodDesc::Swap(E_ShentiAttributeGodDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiAttributeGodDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiAttributeGodDesc_descriptor_;
  metadata.reflection = E_ShentiAttributeGodDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiAttributeSpecialDesc::kMValueFieldNumber;
const int E_ShentiAttributeSpecialDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiAttributeSpecialDesc::E_ShentiAttributeSpecialDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiAttributeSpecialDesc::InitAsDefaultInstance() {
}

E_ShentiAttributeSpecialDesc::E_ShentiAttributeSpecialDesc(const E_ShentiAttributeSpecialDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiAttributeSpecialDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiAttributeSpecialDesc::~E_ShentiAttributeSpecialDesc() {
  SharedDtor();
}

void E_ShentiAttributeSpecialDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiAttributeSpecialDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiAttributeSpecialDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiAttributeSpecialDesc_descriptor_;
}

const E_ShentiAttributeSpecialDesc& E_ShentiAttributeSpecialDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiAttributeSpecialDesc* E_ShentiAttributeSpecialDesc::default_instance_ = NULL;

E_ShentiAttributeSpecialDesc* E_ShentiAttributeSpecialDesc::New() const {
  return new E_ShentiAttributeSpecialDesc;
}

void E_ShentiAttributeSpecialDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiAttributeSpecialDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiAttributeSpecialDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiAttributeSpecialDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiAttributeSpecialDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiAttributeSpecialDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiAttributeSpecialDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiAttributeSpecialDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiAttributeSpecialDesc::MergeFrom(const E_ShentiAttributeSpecialDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiAttributeSpecialDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiAttributeSpecialDesc::CopyFrom(const E_ShentiAttributeSpecialDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiAttributeSpecialDesc::IsInitialized() const {

  return true;
}

void E_ShentiAttributeSpecialDesc::Swap(E_ShentiAttributeSpecialDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiAttributeSpecialDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiAttributeSpecialDesc_descriptor_;
  metadata.reflection = E_ShentiAttributeSpecialDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiAttribute::kMIdFieldNumber;
const int E_ShentiAttribute::kMAttributeFieldNumber;
const int E_ShentiAttribute::kMXpcomFieldNumber;
const int E_ShentiAttribute::kMXpstarFieldNumber;
const int E_ShentiAttribute::kMGodFieldNumber;
const int E_ShentiAttribute::kMSpecialFieldNumber;
#endif  // !_MSC_VER

E_ShentiAttribute::E_ShentiAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiAttribute::InitAsDefaultInstance() {
}

E_ShentiAttribute::E_ShentiAttribute(const E_ShentiAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiAttribute::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiAttribute::~E_ShentiAttribute() {
  SharedDtor();
}

void E_ShentiAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiAttribute_descriptor_;
}

const E_ShentiAttribute& E_ShentiAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiAttribute* E_ShentiAttribute::default_instance_ = NULL;

E_ShentiAttribute* E_ShentiAttribute::New() const {
  return new E_ShentiAttribute;
}

void E_ShentiAttribute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
  }
  m_attribute_.Clear();
  m_xpcom_.Clear();
  m_xpstar_.Clear();
  m_god_.Clear();
  m_special_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_ShentiAttributeAttributeDesc m_attribute = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        if (input->ExpectTag(26)) goto parse_m_xpcom;
        break;
      }

      // repeated .proto_ff.E_ShentiAttributeXpcomDesc m_xpcom = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_xpcom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_xpcom()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_xpcom;
        if (input->ExpectTag(34)) goto parse_m_xpstar;
        break;
      }

      // repeated .proto_ff.E_ShentiAttributeXpstarDesc m_xpstar = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_xpstar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_xpstar()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_xpstar;
        if (input->ExpectTag(42)) goto parse_m_god;
        break;
      }

      // repeated .proto_ff.E_ShentiAttributeGodDesc m_god = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_god:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_god()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_god;
        if (input->ExpectTag(50)) goto parse_m_special;
        break;
      }

      // repeated .proto_ff.E_ShentiAttributeSpecialDesc m_special = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_special:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_special()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_special;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // repeated .proto_ff.E_ShentiAttributeAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_attribute(i), output);
  }

  // repeated .proto_ff.E_ShentiAttributeXpcomDesc m_xpcom = 3;
  for (int i = 0; i < this->m_xpcom_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_xpcom(i), output);
  }

  // repeated .proto_ff.E_ShentiAttributeXpstarDesc m_xpstar = 4;
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_xpstar(i), output);
  }

  // repeated .proto_ff.E_ShentiAttributeGodDesc m_god = 5;
  for (int i = 0; i < this->m_god_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_god(i), output);
  }

  // repeated .proto_ff.E_ShentiAttributeSpecialDesc m_special = 6;
  for (int i = 0; i < this->m_special_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_special(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // repeated .proto_ff.E_ShentiAttributeAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_attribute(i), target);
  }

  // repeated .proto_ff.E_ShentiAttributeXpcomDesc m_xpcom = 3;
  for (int i = 0; i < this->m_xpcom_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_xpcom(i), target);
  }

  // repeated .proto_ff.E_ShentiAttributeXpstarDesc m_xpstar = 4;
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_xpstar(i), target);
  }

  // repeated .proto_ff.E_ShentiAttributeGodDesc m_god = 5;
  for (int i = 0; i < this->m_god_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_god(i), target);
  }

  // repeated .proto_ff.E_ShentiAttributeSpecialDesc m_special = 6;
  for (int i = 0; i < this->m_special_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_special(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  // repeated .proto_ff.E_ShentiAttributeAttributeDesc m_attribute = 2;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  // repeated .proto_ff.E_ShentiAttributeXpcomDesc m_xpcom = 3;
  total_size += 1 * this->m_xpcom_size();
  for (int i = 0; i < this->m_xpcom_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_xpcom(i));
  }

  // repeated .proto_ff.E_ShentiAttributeXpstarDesc m_xpstar = 4;
  total_size += 1 * this->m_xpstar_size();
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_xpstar(i));
  }

  // repeated .proto_ff.E_ShentiAttributeGodDesc m_god = 5;
  total_size += 1 * this->m_god_size();
  for (int i = 0; i < this->m_god_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_god(i));
  }

  // repeated .proto_ff.E_ShentiAttributeSpecialDesc m_special = 6;
  total_size += 1 * this->m_special_size();
  for (int i = 0; i < this->m_special_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_special(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiAttribute::MergeFrom(const E_ShentiAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  m_xpcom_.MergeFrom(from.m_xpcom_);
  m_xpstar_.MergeFrom(from.m_xpstar_);
  m_god_.MergeFrom(from.m_god_);
  m_special_.MergeFrom(from.m_special_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiAttribute::CopyFrom(const E_ShentiAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiAttribute::IsInitialized() const {

  return true;
}

void E_ShentiAttribute::Swap(E_ShentiAttribute* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    m_attribute_.Swap(&other->m_attribute_);
    m_xpcom_.Swap(&other->m_xpcom_);
    m_xpstar_.Swap(&other->m_xpstar_);
    m_god_.Swap(&other->m_god_);
    m_special_.Swap(&other->m_special_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiAttribute_descriptor_;
  metadata.reflection = E_ShentiAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiAttribute::kEShentiAttributeListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiAttribute::Sheet_ShentiAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiAttribute::InitAsDefaultInstance() {
}

Sheet_ShentiAttribute::Sheet_ShentiAttribute(const Sheet_ShentiAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiAttribute::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiAttribute::~Sheet_ShentiAttribute() {
  SharedDtor();
}

void Sheet_ShentiAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiAttribute_descriptor_;
}

const Sheet_ShentiAttribute& Sheet_ShentiAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiAttribute* Sheet_ShentiAttribute::default_instance_ = NULL;

Sheet_ShentiAttribute* Sheet_ShentiAttribute::New() const {
  return new Sheet_ShentiAttribute;
}

void Sheet_ShentiAttribute::Clear() {
  e_shentiattribute_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiAttribute E_ShentiAttribute_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiAttribute_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentiattribute_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiAttribute_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiAttribute E_ShentiAttribute_List = 1;
  for (int i = 0; i < this->e_shentiattribute_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentiattribute_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiAttribute E_ShentiAttribute_List = 1;
  for (int i = 0; i < this->e_shentiattribute_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentiattribute_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiAttribute::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiAttribute E_ShentiAttribute_List = 1;
  total_size += 1 * this->e_shentiattribute_list_size();
  for (int i = 0; i < this->e_shentiattribute_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentiattribute_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiAttribute::MergeFrom(const Sheet_ShentiAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentiattribute_list_.MergeFrom(from.e_shentiattribute_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiAttribute::CopyFrom(const Sheet_ShentiAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiAttribute::IsInitialized() const {

  return true;
}

void Sheet_ShentiAttribute::Swap(Sheet_ShentiAttribute* other) {
  if (other != this) {
    e_shentiattribute_list_.Swap(&other->e_shentiattribute_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiAttribute_descriptor_;
  metadata.reflection = Sheet_ShentiAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStrongMaterialDesc::kMNumFieldNumber;
const int E_ShentiStrongMaterialDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_ShentiStrongMaterialDesc::E_ShentiStrongMaterialDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStrongMaterialDesc::InitAsDefaultInstance() {
}

E_ShentiStrongMaterialDesc::E_ShentiStrongMaterialDesc(const E_ShentiStrongMaterialDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStrongMaterialDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStrongMaterialDesc::~E_ShentiStrongMaterialDesc() {
  SharedDtor();
}

void E_ShentiStrongMaterialDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStrongMaterialDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStrongMaterialDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStrongMaterialDesc_descriptor_;
}

const E_ShentiStrongMaterialDesc& E_ShentiStrongMaterialDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStrongMaterialDesc* E_ShentiStrongMaterialDesc::default_instance_ = NULL;

E_ShentiStrongMaterialDesc* E_ShentiStrongMaterialDesc::New() const {
  return new E_ShentiStrongMaterialDesc;
}

void E_ShentiStrongMaterialDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStrongMaterialDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStrongMaterialDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStrongMaterialDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStrongMaterialDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStrongMaterialDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStrongMaterialDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStrongMaterialDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStrongMaterialDesc::MergeFrom(const E_ShentiStrongMaterialDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStrongMaterialDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStrongMaterialDesc::CopyFrom(const E_ShentiStrongMaterialDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStrongMaterialDesc::IsInitialized() const {

  return true;
}

void E_ShentiStrongMaterialDesc::Swap(E_ShentiStrongMaterialDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStrongMaterialDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStrongMaterialDesc_descriptor_;
  metadata.reflection = E_ShentiStrongMaterialDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStrongAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_ShentiStrongAttributeDesc::E_ShentiStrongAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStrongAttributeDesc::InitAsDefaultInstance() {
}

E_ShentiStrongAttributeDesc::E_ShentiStrongAttributeDesc(const E_ShentiStrongAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStrongAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStrongAttributeDesc::~E_ShentiStrongAttributeDesc() {
  SharedDtor();
}

void E_ShentiStrongAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStrongAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStrongAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStrongAttributeDesc_descriptor_;
}

const E_ShentiStrongAttributeDesc& E_ShentiStrongAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStrongAttributeDesc* E_ShentiStrongAttributeDesc::default_instance_ = NULL;

E_ShentiStrongAttributeDesc* E_ShentiStrongAttributeDesc::New() const {
  return new E_ShentiStrongAttributeDesc;
}

void E_ShentiStrongAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStrongAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStrongAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStrongAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStrongAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStrongAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStrongAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStrongAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStrongAttributeDesc::MergeFrom(const E_ShentiStrongAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStrongAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStrongAttributeDesc::CopyFrom(const E_ShentiStrongAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStrongAttributeDesc::IsInitialized() const {

  return true;
}

void E_ShentiStrongAttributeDesc::Swap(E_ShentiStrongAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStrongAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStrongAttributeDesc_descriptor_;
  metadata.reflection = E_ShentiStrongAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStrong::kMIdFieldNumber;
const int E_ShentiStrong::kMLvFieldNumber;
const int E_ShentiStrong::kMPositionFieldNumber;
const int E_ShentiStrong::kMRemanielvFieldNumber;
const int E_ShentiStrong::kMMaterialFieldNumber;
const int E_ShentiStrong::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_ShentiStrong::E_ShentiStrong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStrong::InitAsDefaultInstance() {
}

E_ShentiStrong::E_ShentiStrong(const E_ShentiStrong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStrong::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_lv_ = 0;
  m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_remanielv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStrong::~E_ShentiStrong() {
  SharedDtor();
}

void E_ShentiStrong::SharedDtor() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (this != default_instance_) {
  }
}

void E_ShentiStrong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStrong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStrong_descriptor_;
}

const E_ShentiStrong& E_ShentiStrong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStrong* E_ShentiStrong::default_instance_ = NULL;

E_ShentiStrong* E_ShentiStrong::New() const {
  return new E_ShentiStrong;
}

void E_ShentiStrong::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_lv_ = 0;
    if (has_m_position()) {
      if (m_position_ != &::google::protobuf::internal::kEmptyString) {
        m_position_->clear();
      }
    }
    m_remanielv_ = 0;
  }
  m_material_.Clear();
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStrong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_position;
        break;
      }

      // optional string m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_position()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_position().data(), this->m_position().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_remanielv;
        break;
      }

      // optional int32 m_remanielv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_remanielv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_remanielv_)));
          set_has_m_remanielv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_material;
        break;
      }

      // repeated .proto_ff.E_ShentiStrongMaterialDesc m_material = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_material()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_material;
        if (input->ExpectTag(50)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_ShentiStrongAttributeDesc m_attribute = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStrong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_lv = 2;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lv(), output);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_position(), output);
  }

  // optional int32 m_remanielv = 4;
  if (has_m_remanielv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_remanielv(), output);
  }

  // repeated .proto_ff.E_ShentiStrongMaterialDesc m_material = 5;
  for (int i = 0; i < this->m_material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_material(i), output);
  }

  // repeated .proto_ff.E_ShentiStrongAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStrong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_lv = 2;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lv(), target);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_position(), target);
  }

  // optional int32 m_remanielv = 4;
  if (has_m_remanielv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_remanielv(), target);
  }

  // repeated .proto_ff.E_ShentiStrongMaterialDesc m_material = 5;
  for (int i = 0; i < this->m_material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_material(i), target);
  }

  // repeated .proto_ff.E_ShentiStrongAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStrong::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_lv = 2;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional string m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_position());
    }

    // optional int32 m_remanielv = 4;
    if (has_m_remanielv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_remanielv());
    }

  }
  // repeated .proto_ff.E_ShentiStrongMaterialDesc m_material = 5;
  total_size += 1 * this->m_material_size();
  for (int i = 0; i < this->m_material_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_material(i));
  }

  // repeated .proto_ff.E_ShentiStrongAttributeDesc m_attribute = 6;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStrong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStrong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStrong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStrong::MergeFrom(const E_ShentiStrong& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_material_.MergeFrom(from.m_material_);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_remanielv()) {
      set_m_remanielv(from.m_remanielv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStrong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStrong::CopyFrom(const E_ShentiStrong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStrong::IsInitialized() const {

  return true;
}

void E_ShentiStrong::Swap(E_ShentiStrong* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_remanielv_, other->m_remanielv_);
    m_material_.Swap(&other->m_material_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStrong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStrong_descriptor_;
  metadata.reflection = E_ShentiStrong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiStrong::kEShentiStrongListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiStrong::Sheet_ShentiStrong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiStrong::InitAsDefaultInstance() {
}

Sheet_ShentiStrong::Sheet_ShentiStrong(const Sheet_ShentiStrong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiStrong::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiStrong::~Sheet_ShentiStrong() {
  SharedDtor();
}

void Sheet_ShentiStrong::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiStrong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiStrong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiStrong_descriptor_;
}

const Sheet_ShentiStrong& Sheet_ShentiStrong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiStrong* Sheet_ShentiStrong::default_instance_ = NULL;

Sheet_ShentiStrong* Sheet_ShentiStrong::New() const {
  return new Sheet_ShentiStrong;
}

void Sheet_ShentiStrong::Clear() {
  e_shentistrong_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiStrong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiStrong E_ShentiStrong_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiStrong_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentistrong_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiStrong_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiStrong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiStrong E_ShentiStrong_List = 1;
  for (int i = 0; i < this->e_shentistrong_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentistrong_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiStrong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiStrong E_ShentiStrong_List = 1;
  for (int i = 0; i < this->e_shentistrong_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentistrong_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiStrong::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiStrong E_ShentiStrong_List = 1;
  total_size += 1 * this->e_shentistrong_list_size();
  for (int i = 0; i < this->e_shentistrong_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentistrong_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiStrong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiStrong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiStrong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiStrong::MergeFrom(const Sheet_ShentiStrong& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentistrong_list_.MergeFrom(from.e_shentistrong_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiStrong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiStrong::CopyFrom(const Sheet_ShentiStrong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiStrong::IsInitialized() const {

  return true;
}

void Sheet_ShentiStrong::Swap(Sheet_ShentiStrong* other) {
  if (other != this) {
    e_shentistrong_list_.Swap(&other->e_shentistrong_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiStrong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiStrong_descriptor_;
  metadata.reflection = Sheet_ShentiStrong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiEvolveAttributeDesc::kMValueFieldNumber;
const int E_ShentiEvolveAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiEvolveAttributeDesc::E_ShentiEvolveAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiEvolveAttributeDesc::InitAsDefaultInstance() {
}

E_ShentiEvolveAttributeDesc::E_ShentiEvolveAttributeDesc(const E_ShentiEvolveAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiEvolveAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiEvolveAttributeDesc::~E_ShentiEvolveAttributeDesc() {
  SharedDtor();
}

void E_ShentiEvolveAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiEvolveAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiEvolveAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiEvolveAttributeDesc_descriptor_;
}

const E_ShentiEvolveAttributeDesc& E_ShentiEvolveAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiEvolveAttributeDesc* E_ShentiEvolveAttributeDesc::default_instance_ = NULL;

E_ShentiEvolveAttributeDesc* E_ShentiEvolveAttributeDesc::New() const {
  return new E_ShentiEvolveAttributeDesc;
}

void E_ShentiEvolveAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiEvolveAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiEvolveAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiEvolveAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiEvolveAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiEvolveAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiEvolveAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiEvolveAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiEvolveAttributeDesc::MergeFrom(const E_ShentiEvolveAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiEvolveAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiEvolveAttributeDesc::CopyFrom(const E_ShentiEvolveAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiEvolveAttributeDesc::IsInitialized() const {

  return true;
}

void E_ShentiEvolveAttributeDesc::Swap(E_ShentiEvolveAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiEvolveAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiEvolveAttributeDesc_descriptor_;
  metadata.reflection = E_ShentiEvolveAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiEvolveXpcomDesc::kMWeightFieldNumber;
#endif  // !_MSC_VER

E_ShentiEvolveXpcomDesc::E_ShentiEvolveXpcomDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiEvolveXpcomDesc::InitAsDefaultInstance() {
}

E_ShentiEvolveXpcomDesc::E_ShentiEvolveXpcomDesc(const E_ShentiEvolveXpcomDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiEvolveXpcomDesc::SharedCtor() {
  _cached_size_ = 0;
  m_weight_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiEvolveXpcomDesc::~E_ShentiEvolveXpcomDesc() {
  SharedDtor();
}

void E_ShentiEvolveXpcomDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiEvolveXpcomDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiEvolveXpcomDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiEvolveXpcomDesc_descriptor_;
}

const E_ShentiEvolveXpcomDesc& E_ShentiEvolveXpcomDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiEvolveXpcomDesc* E_ShentiEvolveXpcomDesc::default_instance_ = NULL;

E_ShentiEvolveXpcomDesc* E_ShentiEvolveXpcomDesc::New() const {
  return new E_ShentiEvolveXpcomDesc;
}

void E_ShentiEvolveXpcomDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_weight_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiEvolveXpcomDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_weight = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_weight_)));
          set_has_m_weight();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiEvolveXpcomDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_weight = 1;
  if (has_m_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_weight(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiEvolveXpcomDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_weight = 1;
  if (has_m_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_weight(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiEvolveXpcomDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_weight = 1;
    if (has_m_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_weight());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiEvolveXpcomDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiEvolveXpcomDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiEvolveXpcomDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiEvolveXpcomDesc::MergeFrom(const E_ShentiEvolveXpcomDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_weight()) {
      set_m_weight(from.m_weight());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiEvolveXpcomDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiEvolveXpcomDesc::CopyFrom(const E_ShentiEvolveXpcomDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiEvolveXpcomDesc::IsInitialized() const {

  return true;
}

void E_ShentiEvolveXpcomDesc::Swap(E_ShentiEvolveXpcomDesc* other) {
  if (other != this) {
    std::swap(m_weight_, other->m_weight_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiEvolveXpcomDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiEvolveXpcomDesc_descriptor_;
  metadata.reflection = E_ShentiEvolveXpcomDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiEvolveXpstarDesc::kMWeightFieldNumber;
#endif  // !_MSC_VER

E_ShentiEvolveXpstarDesc::E_ShentiEvolveXpstarDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiEvolveXpstarDesc::InitAsDefaultInstance() {
}

E_ShentiEvolveXpstarDesc::E_ShentiEvolveXpstarDesc(const E_ShentiEvolveXpstarDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiEvolveXpstarDesc::SharedCtor() {
  _cached_size_ = 0;
  m_weight_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiEvolveXpstarDesc::~E_ShentiEvolveXpstarDesc() {
  SharedDtor();
}

void E_ShentiEvolveXpstarDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiEvolveXpstarDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiEvolveXpstarDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiEvolveXpstarDesc_descriptor_;
}

const E_ShentiEvolveXpstarDesc& E_ShentiEvolveXpstarDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiEvolveXpstarDesc* E_ShentiEvolveXpstarDesc::default_instance_ = NULL;

E_ShentiEvolveXpstarDesc* E_ShentiEvolveXpstarDesc::New() const {
  return new E_ShentiEvolveXpstarDesc;
}

void E_ShentiEvolveXpstarDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_weight_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiEvolveXpstarDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_weight = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_weight_)));
          set_has_m_weight();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiEvolveXpstarDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_weight = 1;
  if (has_m_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_weight(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiEvolveXpstarDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_weight = 1;
  if (has_m_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_weight(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiEvolveXpstarDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_weight = 1;
    if (has_m_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_weight());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiEvolveXpstarDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiEvolveXpstarDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiEvolveXpstarDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiEvolveXpstarDesc::MergeFrom(const E_ShentiEvolveXpstarDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_weight()) {
      set_m_weight(from.m_weight());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiEvolveXpstarDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiEvolveXpstarDesc::CopyFrom(const E_ShentiEvolveXpstarDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiEvolveXpstarDesc::IsInitialized() const {

  return true;
}

void E_ShentiEvolveXpstarDesc::Swap(E_ShentiEvolveXpstarDesc* other) {
  if (other != this) {
    std::swap(m_weight_, other->m_weight_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiEvolveXpstarDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiEvolveXpstarDesc_descriptor_;
  metadata.reflection = E_ShentiEvolveXpstarDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiEvolve::kMIdFieldNumber;
const int E_ShentiEvolve::kMEvolvelvFieldNumber;
const int E_ShentiEvolve::kMPositionFieldNumber;
const int E_ShentiEvolve::kMRemanielvFieldNumber;
const int E_ShentiEvolve::kMNeedQualityFieldNumber;
const int E_ShentiEvolve::kMNeedStarFieldNumber;
const int E_ShentiEvolve::kMMaterialIdFieldNumber;
const int E_ShentiEvolve::kMMaterialNumFieldNumber;
const int E_ShentiEvolve::kMMallidFieldNumber;
const int E_ShentiEvolve::kMInitialvalueFieldNumber;
const int E_ShentiEvolve::kMSpecialstarFieldNumber;
const int E_ShentiEvolve::kMAttributeFieldNumber;
const int E_ShentiEvolve::kMXpcomFieldNumber;
const int E_ShentiEvolve::kMXpstarFieldNumber;
#endif  // !_MSC_VER

E_ShentiEvolve::E_ShentiEvolve()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiEvolve::InitAsDefaultInstance() {
}

E_ShentiEvolve::E_ShentiEvolve(const E_ShentiEvolve& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiEvolve::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_evolvelv_ = 0;
  m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_remanielv_ = 0;
  m_need_quality_ = 0;
  m_need_star_ = 0;
  m_material_id_ = 0;
  m_material_num_ = 0;
  m_mallid_ = 0;
  m_initialvalue_ = 0;
  m_specialstar_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiEvolve::~E_ShentiEvolve() {
  SharedDtor();
}

void E_ShentiEvolve::SharedDtor() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (this != default_instance_) {
  }
}

void E_ShentiEvolve::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiEvolve::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiEvolve_descriptor_;
}

const E_ShentiEvolve& E_ShentiEvolve::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiEvolve* E_ShentiEvolve::default_instance_ = NULL;

E_ShentiEvolve* E_ShentiEvolve::New() const {
  return new E_ShentiEvolve;
}

void E_ShentiEvolve::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_evolvelv_ = 0;
    if (has_m_position()) {
      if (m_position_ != &::google::protobuf::internal::kEmptyString) {
        m_position_->clear();
      }
    }
    m_remanielv_ = 0;
    m_need_quality_ = 0;
    m_need_star_ = 0;
    m_material_id_ = 0;
    m_material_num_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_mallid_ = 0;
    m_initialvalue_ = 0;
    m_specialstar_ = 0;
  }
  m_attribute_.Clear();
  m_xpcom_.Clear();
  m_xpstar_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiEvolve::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_evolvelv;
        break;
      }

      // optional int32 m_evolvelv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_evolvelv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_evolvelv_)));
          set_has_m_evolvelv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_position;
        break;
      }

      // optional string m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_position()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_position().data(), this->m_position().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_remanielv;
        break;
      }

      // optional int32 m_remanielv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_remanielv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_remanielv_)));
          set_has_m_remanielv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_need_quality;
        break;
      }

      // optional int32 m_need_quality = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_need_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_need_quality_)));
          set_has_m_need_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_need_star;
        break;
      }

      // optional int32 m_need_star = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_need_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_need_star_)));
          set_has_m_need_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_material_id;
        break;
      }

      // optional int32 m_material_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_material_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_material_id_)));
          set_has_m_material_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_material_num;
        break;
      }

      // optional int32 m_material_num = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_material_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_material_num_)));
          set_has_m_material_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_mallid;
        break;
      }

      // optional int32 m_mallid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mallid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_mallid_)));
          set_has_m_mallid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_initialvalue;
        break;
      }

      // optional int32 m_initialvalue = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_initialvalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_initialvalue_)));
          set_has_m_initialvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_specialstar;
        break;
      }

      // optional int32 m_specialstar = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialstar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_specialstar_)));
          set_has_m_specialstar();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_ShentiEvolveAttributeDesc m_attribute = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_m_attribute;
        if (input->ExpectTag(106)) goto parse_m_xpcom;
        break;
      }

      // repeated .proto_ff.E_ShentiEvolveXpcomDesc m_xpcom = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_xpcom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_xpcom()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_m_xpcom;
        if (input->ExpectTag(114)) goto parse_m_xpstar;
        break;
      }

      // repeated .proto_ff.E_ShentiEvolveXpstarDesc m_xpstar = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_xpstar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_xpstar()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_xpstar;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiEvolve::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_evolvelv = 2;
  if (has_m_evolvelv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_evolvelv(), output);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_position(), output);
  }

  // optional int32 m_remanielv = 4;
  if (has_m_remanielv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_remanielv(), output);
  }

  // optional int32 m_need_quality = 5;
  if (has_m_need_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_need_quality(), output);
  }

  // optional int32 m_need_star = 6;
  if (has_m_need_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_need_star(), output);
  }

  // optional int32 m_material_id = 7;
  if (has_m_material_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_material_id(), output);
  }

  // optional int32 m_material_num = 8;
  if (has_m_material_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_material_num(), output);
  }

  // optional int32 m_mallid = 9;
  if (has_m_mallid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_mallid(), output);
  }

  // optional int32 m_initialvalue = 10;
  if (has_m_initialvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_initialvalue(), output);
  }

  // optional int32 m_specialstar = 11;
  if (has_m_specialstar()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_specialstar(), output);
  }

  // repeated .proto_ff.E_ShentiEvolveAttributeDesc m_attribute = 12;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->m_attribute(i), output);
  }

  // repeated .proto_ff.E_ShentiEvolveXpcomDesc m_xpcom = 13;
  for (int i = 0; i < this->m_xpcom_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->m_xpcom(i), output);
  }

  // repeated .proto_ff.E_ShentiEvolveXpstarDesc m_xpstar = 14;
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->m_xpstar(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiEvolve::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_evolvelv = 2;
  if (has_m_evolvelv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_evolvelv(), target);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_position(), target);
  }

  // optional int32 m_remanielv = 4;
  if (has_m_remanielv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_remanielv(), target);
  }

  // optional int32 m_need_quality = 5;
  if (has_m_need_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_need_quality(), target);
  }

  // optional int32 m_need_star = 6;
  if (has_m_need_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_need_star(), target);
  }

  // optional int32 m_material_id = 7;
  if (has_m_material_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_material_id(), target);
  }

  // optional int32 m_material_num = 8;
  if (has_m_material_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_material_num(), target);
  }

  // optional int32 m_mallid = 9;
  if (has_m_mallid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_mallid(), target);
  }

  // optional int32 m_initialvalue = 10;
  if (has_m_initialvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_initialvalue(), target);
  }

  // optional int32 m_specialstar = 11;
  if (has_m_specialstar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_specialstar(), target);
  }

  // repeated .proto_ff.E_ShentiEvolveAttributeDesc m_attribute = 12;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->m_attribute(i), target);
  }

  // repeated .proto_ff.E_ShentiEvolveXpcomDesc m_xpcom = 13;
  for (int i = 0; i < this->m_xpcom_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->m_xpcom(i), target);
  }

  // repeated .proto_ff.E_ShentiEvolveXpstarDesc m_xpstar = 14;
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->m_xpstar(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiEvolve::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_evolvelv = 2;
    if (has_m_evolvelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_evolvelv());
    }

    // optional string m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_position());
    }

    // optional int32 m_remanielv = 4;
    if (has_m_remanielv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_remanielv());
    }

    // optional int32 m_need_quality = 5;
    if (has_m_need_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_need_quality());
    }

    // optional int32 m_need_star = 6;
    if (has_m_need_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_need_star());
    }

    // optional int32 m_material_id = 7;
    if (has_m_material_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_material_id());
    }

    // optional int32 m_material_num = 8;
    if (has_m_material_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_material_num());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_mallid = 9;
    if (has_m_mallid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_mallid());
    }

    // optional int32 m_initialvalue = 10;
    if (has_m_initialvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_initialvalue());
    }

    // optional int32 m_specialstar = 11;
    if (has_m_specialstar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_specialstar());
    }

  }
  // repeated .proto_ff.E_ShentiEvolveAttributeDesc m_attribute = 12;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  // repeated .proto_ff.E_ShentiEvolveXpcomDesc m_xpcom = 13;
  total_size += 1 * this->m_xpcom_size();
  for (int i = 0; i < this->m_xpcom_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_xpcom(i));
  }

  // repeated .proto_ff.E_ShentiEvolveXpstarDesc m_xpstar = 14;
  total_size += 1 * this->m_xpstar_size();
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_xpstar(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiEvolve::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiEvolve* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiEvolve*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiEvolve::MergeFrom(const E_ShentiEvolve& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  m_xpcom_.MergeFrom(from.m_xpcom_);
  m_xpstar_.MergeFrom(from.m_xpstar_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_evolvelv()) {
      set_m_evolvelv(from.m_evolvelv());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_remanielv()) {
      set_m_remanielv(from.m_remanielv());
    }
    if (from.has_m_need_quality()) {
      set_m_need_quality(from.m_need_quality());
    }
    if (from.has_m_need_star()) {
      set_m_need_star(from.m_need_star());
    }
    if (from.has_m_material_id()) {
      set_m_material_id(from.m_material_id());
    }
    if (from.has_m_material_num()) {
      set_m_material_num(from.m_material_num());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_mallid()) {
      set_m_mallid(from.m_mallid());
    }
    if (from.has_m_initialvalue()) {
      set_m_initialvalue(from.m_initialvalue());
    }
    if (from.has_m_specialstar()) {
      set_m_specialstar(from.m_specialstar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiEvolve::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiEvolve::CopyFrom(const E_ShentiEvolve& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiEvolve::IsInitialized() const {

  return true;
}

void E_ShentiEvolve::Swap(E_ShentiEvolve* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_evolvelv_, other->m_evolvelv_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_remanielv_, other->m_remanielv_);
    std::swap(m_need_quality_, other->m_need_quality_);
    std::swap(m_need_star_, other->m_need_star_);
    std::swap(m_material_id_, other->m_material_id_);
    std::swap(m_material_num_, other->m_material_num_);
    std::swap(m_mallid_, other->m_mallid_);
    std::swap(m_initialvalue_, other->m_initialvalue_);
    std::swap(m_specialstar_, other->m_specialstar_);
    m_attribute_.Swap(&other->m_attribute_);
    m_xpcom_.Swap(&other->m_xpcom_);
    m_xpstar_.Swap(&other->m_xpstar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiEvolve::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiEvolve_descriptor_;
  metadata.reflection = E_ShentiEvolve_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiEvolve::kEShentiEvolveListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiEvolve::Sheet_ShentiEvolve()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiEvolve::InitAsDefaultInstance() {
}

Sheet_ShentiEvolve::Sheet_ShentiEvolve(const Sheet_ShentiEvolve& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiEvolve::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiEvolve::~Sheet_ShentiEvolve() {
  SharedDtor();
}

void Sheet_ShentiEvolve::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiEvolve::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiEvolve::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiEvolve_descriptor_;
}

const Sheet_ShentiEvolve& Sheet_ShentiEvolve::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiEvolve* Sheet_ShentiEvolve::default_instance_ = NULL;

Sheet_ShentiEvolve* Sheet_ShentiEvolve::New() const {
  return new Sheet_ShentiEvolve;
}

void Sheet_ShentiEvolve::Clear() {
  e_shentievolve_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiEvolve::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiEvolve E_ShentiEvolve_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiEvolve_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentievolve_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiEvolve_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiEvolve::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiEvolve E_ShentiEvolve_List = 1;
  for (int i = 0; i < this->e_shentievolve_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentievolve_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiEvolve::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiEvolve E_ShentiEvolve_List = 1;
  for (int i = 0; i < this->e_shentievolve_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentievolve_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiEvolve::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiEvolve E_ShentiEvolve_List = 1;
  total_size += 1 * this->e_shentievolve_list_size();
  for (int i = 0; i < this->e_shentievolve_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentievolve_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiEvolve::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiEvolve* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiEvolve*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiEvolve::MergeFrom(const Sheet_ShentiEvolve& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentievolve_list_.MergeFrom(from.e_shentievolve_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiEvolve::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiEvolve::CopyFrom(const Sheet_ShentiEvolve& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiEvolve::IsInitialized() const {

  return true;
}

void Sheet_ShentiEvolve::Swap(Sheet_ShentiEvolve* other) {
  if (other != this) {
    e_shentievolve_list_.Swap(&other->e_shentievolve_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiEvolve::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiEvolve_descriptor_;
  metadata.reflection = Sheet_ShentiEvolve_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiEvolveprogress::kMIdFieldNumber;
const int E_ShentiEvolveprogress::kMEvolvelvFieldNumber;
const int E_ShentiEvolveprogress::kMRemanielvFieldNumber;
const int E_ShentiEvolveprogress::kMEquipqualityFieldNumber;
const int E_ShentiEvolveprogress::kMEquipstarFieldNumber;
const int E_ShentiEvolveprogress::kMEvolveFieldNumber;
#endif  // !_MSC_VER

E_ShentiEvolveprogress::E_ShentiEvolveprogress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiEvolveprogress::InitAsDefaultInstance() {
}

E_ShentiEvolveprogress::E_ShentiEvolveprogress(const E_ShentiEvolveprogress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiEvolveprogress::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_evolvelv_ = 0;
  m_remanielv_ = 0;
  m_equipquality_ = 0;
  m_equipstar_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiEvolveprogress::~E_ShentiEvolveprogress() {
  SharedDtor();
}

void E_ShentiEvolveprogress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiEvolveprogress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiEvolveprogress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiEvolveprogress_descriptor_;
}

const E_ShentiEvolveprogress& E_ShentiEvolveprogress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiEvolveprogress* E_ShentiEvolveprogress::default_instance_ = NULL;

E_ShentiEvolveprogress* E_ShentiEvolveprogress::New() const {
  return new E_ShentiEvolveprogress;
}

void E_ShentiEvolveprogress::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_evolvelv_ = 0;
    m_remanielv_ = 0;
    m_equipquality_ = 0;
    m_equipstar_ = 0;
  }
  m_evolve_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiEvolveprogress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_evolvelv;
        break;
      }

      // optional int32 m_evolvelv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_evolvelv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_evolvelv_)));
          set_has_m_evolvelv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_remanielv;
        break;
      }

      // optional int32 m_remanielv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_remanielv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_remanielv_)));
          set_has_m_remanielv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_equipquality;
        break;
      }

      // optional int32 m_equipquality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equipquality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipquality_)));
          set_has_m_equipquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_equipstar;
        break;
      }

      // optional int32 m_equipstar = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equipstar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipstar_)));
          set_has_m_equipstar();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_evolve;
        break;
      }

      // repeated int32 m_evolve = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_evolve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_m_evolve())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_evolve())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_evolve;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiEvolveprogress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_evolvelv = 2;
  if (has_m_evolvelv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_evolvelv(), output);
  }

  // optional int32 m_remanielv = 3;
  if (has_m_remanielv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_remanielv(), output);
  }

  // optional int32 m_equipquality = 4;
  if (has_m_equipquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_equipquality(), output);
  }

  // optional int32 m_equipstar = 5;
  if (has_m_equipstar()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_equipstar(), output);
  }

  // repeated int32 m_evolve = 6;
  for (int i = 0; i < this->m_evolve_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->m_evolve(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiEvolveprogress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_evolvelv = 2;
  if (has_m_evolvelv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_evolvelv(), target);
  }

  // optional int32 m_remanielv = 3;
  if (has_m_remanielv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_remanielv(), target);
  }

  // optional int32 m_equipquality = 4;
  if (has_m_equipquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_equipquality(), target);
  }

  // optional int32 m_equipstar = 5;
  if (has_m_equipstar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_equipstar(), target);
  }

  // repeated int32 m_evolve = 6;
  for (int i = 0; i < this->m_evolve_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->m_evolve(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiEvolveprogress::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_evolvelv = 2;
    if (has_m_evolvelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_evolvelv());
    }

    // optional int32 m_remanielv = 3;
    if (has_m_remanielv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_remanielv());
    }

    // optional int32 m_equipquality = 4;
    if (has_m_equipquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipquality());
    }

    // optional int32 m_equipstar = 5;
    if (has_m_equipstar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipstar());
    }

  }
  // repeated int32 m_evolve = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_evolve_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_evolve(i));
    }
    total_size += 1 * this->m_evolve_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiEvolveprogress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiEvolveprogress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiEvolveprogress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiEvolveprogress::MergeFrom(const E_ShentiEvolveprogress& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_evolve_.MergeFrom(from.m_evolve_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_evolvelv()) {
      set_m_evolvelv(from.m_evolvelv());
    }
    if (from.has_m_remanielv()) {
      set_m_remanielv(from.m_remanielv());
    }
    if (from.has_m_equipquality()) {
      set_m_equipquality(from.m_equipquality());
    }
    if (from.has_m_equipstar()) {
      set_m_equipstar(from.m_equipstar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiEvolveprogress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiEvolveprogress::CopyFrom(const E_ShentiEvolveprogress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiEvolveprogress::IsInitialized() const {

  return true;
}

void E_ShentiEvolveprogress::Swap(E_ShentiEvolveprogress* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_evolvelv_, other->m_evolvelv_);
    std::swap(m_remanielv_, other->m_remanielv_);
    std::swap(m_equipquality_, other->m_equipquality_);
    std::swap(m_equipstar_, other->m_equipstar_);
    m_evolve_.Swap(&other->m_evolve_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiEvolveprogress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiEvolveprogress_descriptor_;
  metadata.reflection = E_ShentiEvolveprogress_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiEvolveprogress::kEShentiEvolveprogressListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiEvolveprogress::Sheet_ShentiEvolveprogress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiEvolveprogress::InitAsDefaultInstance() {
}

Sheet_ShentiEvolveprogress::Sheet_ShentiEvolveprogress(const Sheet_ShentiEvolveprogress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiEvolveprogress::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiEvolveprogress::~Sheet_ShentiEvolveprogress() {
  SharedDtor();
}

void Sheet_ShentiEvolveprogress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiEvolveprogress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiEvolveprogress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiEvolveprogress_descriptor_;
}

const Sheet_ShentiEvolveprogress& Sheet_ShentiEvolveprogress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiEvolveprogress* Sheet_ShentiEvolveprogress::default_instance_ = NULL;

Sheet_ShentiEvolveprogress* Sheet_ShentiEvolveprogress::New() const {
  return new Sheet_ShentiEvolveprogress;
}

void Sheet_ShentiEvolveprogress::Clear() {
  e_shentievolveprogress_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiEvolveprogress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiEvolveprogress E_ShentiEvolveprogress_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiEvolveprogress_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentievolveprogress_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiEvolveprogress_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiEvolveprogress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiEvolveprogress E_ShentiEvolveprogress_List = 1;
  for (int i = 0; i < this->e_shentievolveprogress_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentievolveprogress_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiEvolveprogress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiEvolveprogress E_ShentiEvolveprogress_List = 1;
  for (int i = 0; i < this->e_shentievolveprogress_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentievolveprogress_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiEvolveprogress::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiEvolveprogress E_ShentiEvolveprogress_List = 1;
  total_size += 1 * this->e_shentievolveprogress_list_size();
  for (int i = 0; i < this->e_shentievolveprogress_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentievolveprogress_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiEvolveprogress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiEvolveprogress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiEvolveprogress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiEvolveprogress::MergeFrom(const Sheet_ShentiEvolveprogress& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentievolveprogress_list_.MergeFrom(from.e_shentievolveprogress_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiEvolveprogress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiEvolveprogress::CopyFrom(const Sheet_ShentiEvolveprogress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiEvolveprogress::IsInitialized() const {

  return true;
}

void Sheet_ShentiEvolveprogress::Swap(Sheet_ShentiEvolveprogress* other) {
  if (other != this) {
    e_shentievolveprogress_list_.Swap(&other->e_shentievolveprogress_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiEvolveprogress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiEvolveprogress_descriptor_;
  metadata.reflection = Sheet_ShentiEvolveprogress_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStarlibraryXpcomDesc::kMValueFieldNumber;
const int E_ShentiStarlibraryXpcomDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiStarlibraryXpcomDesc::E_ShentiStarlibraryXpcomDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStarlibraryXpcomDesc::InitAsDefaultInstance() {
}

E_ShentiStarlibraryXpcomDesc::E_ShentiStarlibraryXpcomDesc(const E_ShentiStarlibraryXpcomDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStarlibraryXpcomDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStarlibraryXpcomDesc::~E_ShentiStarlibraryXpcomDesc() {
  SharedDtor();
}

void E_ShentiStarlibraryXpcomDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStarlibraryXpcomDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStarlibraryXpcomDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStarlibraryXpcomDesc_descriptor_;
}

const E_ShentiStarlibraryXpcomDesc& E_ShentiStarlibraryXpcomDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStarlibraryXpcomDesc* E_ShentiStarlibraryXpcomDesc::default_instance_ = NULL;

E_ShentiStarlibraryXpcomDesc* E_ShentiStarlibraryXpcomDesc::New() const {
  return new E_ShentiStarlibraryXpcomDesc;
}

void E_ShentiStarlibraryXpcomDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStarlibraryXpcomDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStarlibraryXpcomDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStarlibraryXpcomDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStarlibraryXpcomDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStarlibraryXpcomDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStarlibraryXpcomDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStarlibraryXpcomDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStarlibraryXpcomDesc::MergeFrom(const E_ShentiStarlibraryXpcomDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStarlibraryXpcomDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStarlibraryXpcomDesc::CopyFrom(const E_ShentiStarlibraryXpcomDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStarlibraryXpcomDesc::IsInitialized() const {

  return true;
}

void E_ShentiStarlibraryXpcomDesc::Swap(E_ShentiStarlibraryXpcomDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStarlibraryXpcomDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStarlibraryXpcomDesc_descriptor_;
  metadata.reflection = E_ShentiStarlibraryXpcomDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStarlibraryXpstarDesc::kMValueFieldNumber;
const int E_ShentiStarlibraryXpstarDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiStarlibraryXpstarDesc::E_ShentiStarlibraryXpstarDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStarlibraryXpstarDesc::InitAsDefaultInstance() {
}

E_ShentiStarlibraryXpstarDesc::E_ShentiStarlibraryXpstarDesc(const E_ShentiStarlibraryXpstarDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStarlibraryXpstarDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStarlibraryXpstarDesc::~E_ShentiStarlibraryXpstarDesc() {
  SharedDtor();
}

void E_ShentiStarlibraryXpstarDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStarlibraryXpstarDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStarlibraryXpstarDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStarlibraryXpstarDesc_descriptor_;
}

const E_ShentiStarlibraryXpstarDesc& E_ShentiStarlibraryXpstarDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStarlibraryXpstarDesc* E_ShentiStarlibraryXpstarDesc::default_instance_ = NULL;

E_ShentiStarlibraryXpstarDesc* E_ShentiStarlibraryXpstarDesc::New() const {
  return new E_ShentiStarlibraryXpstarDesc;
}

void E_ShentiStarlibraryXpstarDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStarlibraryXpstarDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStarlibraryXpstarDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStarlibraryXpstarDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStarlibraryXpstarDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStarlibraryXpstarDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStarlibraryXpstarDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStarlibraryXpstarDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStarlibraryXpstarDesc::MergeFrom(const E_ShentiStarlibraryXpstarDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStarlibraryXpstarDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStarlibraryXpstarDesc::CopyFrom(const E_ShentiStarlibraryXpstarDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStarlibraryXpstarDesc::IsInitialized() const {

  return true;
}

void E_ShentiStarlibraryXpstarDesc::Swap(E_ShentiStarlibraryXpstarDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStarlibraryXpstarDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStarlibraryXpstarDesc_descriptor_;
  metadata.reflection = E_ShentiStarlibraryXpstarDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStarlibrary::kMStargroupFieldNumber;
const int E_ShentiStarlibrary::kMXpcomFieldNumber;
const int E_ShentiStarlibrary::kMXpstarFieldNumber;
#endif  // !_MSC_VER

E_ShentiStarlibrary::E_ShentiStarlibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStarlibrary::InitAsDefaultInstance() {
}

E_ShentiStarlibrary::E_ShentiStarlibrary(const E_ShentiStarlibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStarlibrary::SharedCtor() {
  _cached_size_ = 0;
  m_stargroup_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStarlibrary::~E_ShentiStarlibrary() {
  SharedDtor();
}

void E_ShentiStarlibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStarlibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStarlibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStarlibrary_descriptor_;
}

const E_ShentiStarlibrary& E_ShentiStarlibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStarlibrary* E_ShentiStarlibrary::default_instance_ = NULL;

E_ShentiStarlibrary* E_ShentiStarlibrary::New() const {
  return new E_ShentiStarlibrary;
}

void E_ShentiStarlibrary::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_stargroup_ = 0;
  }
  m_xpcom_.Clear();
  m_xpstar_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStarlibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_stargroup = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stargroup_)));
          set_has_m_stargroup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_xpcom;
        break;
      }

      // repeated .proto_ff.E_ShentiStarlibraryXpcomDesc m_xpcom = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_xpcom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_xpcom()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_xpcom;
        if (input->ExpectTag(26)) goto parse_m_xpstar;
        break;
      }

      // repeated .proto_ff.E_ShentiStarlibraryXpstarDesc m_xpstar = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_xpstar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_xpstar()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_xpstar;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStarlibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_stargroup = 1;
  if (has_m_stargroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_stargroup(), output);
  }

  // repeated .proto_ff.E_ShentiStarlibraryXpcomDesc m_xpcom = 2;
  for (int i = 0; i < this->m_xpcom_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_xpcom(i), output);
  }

  // repeated .proto_ff.E_ShentiStarlibraryXpstarDesc m_xpstar = 3;
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_xpstar(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStarlibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_stargroup = 1;
  if (has_m_stargroup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_stargroup(), target);
  }

  // repeated .proto_ff.E_ShentiStarlibraryXpcomDesc m_xpcom = 2;
  for (int i = 0; i < this->m_xpcom_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_xpcom(i), target);
  }

  // repeated .proto_ff.E_ShentiStarlibraryXpstarDesc m_xpstar = 3;
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_xpstar(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStarlibrary::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_stargroup = 1;
    if (has_m_stargroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stargroup());
    }

  }
  // repeated .proto_ff.E_ShentiStarlibraryXpcomDesc m_xpcom = 2;
  total_size += 1 * this->m_xpcom_size();
  for (int i = 0; i < this->m_xpcom_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_xpcom(i));
  }

  // repeated .proto_ff.E_ShentiStarlibraryXpstarDesc m_xpstar = 3;
  total_size += 1 * this->m_xpstar_size();
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_xpstar(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStarlibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStarlibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStarlibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStarlibrary::MergeFrom(const E_ShentiStarlibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_xpcom_.MergeFrom(from.m_xpcom_);
  m_xpstar_.MergeFrom(from.m_xpstar_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_stargroup()) {
      set_m_stargroup(from.m_stargroup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStarlibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStarlibrary::CopyFrom(const E_ShentiStarlibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStarlibrary::IsInitialized() const {

  return true;
}

void E_ShentiStarlibrary::Swap(E_ShentiStarlibrary* other) {
  if (other != this) {
    std::swap(m_stargroup_, other->m_stargroup_);
    m_xpcom_.Swap(&other->m_xpcom_);
    m_xpstar_.Swap(&other->m_xpstar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStarlibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStarlibrary_descriptor_;
  metadata.reflection = E_ShentiStarlibrary_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiStarlibrary::kEShentiStarlibraryListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiStarlibrary::Sheet_ShentiStarlibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiStarlibrary::InitAsDefaultInstance() {
}

Sheet_ShentiStarlibrary::Sheet_ShentiStarlibrary(const Sheet_ShentiStarlibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiStarlibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiStarlibrary::~Sheet_ShentiStarlibrary() {
  SharedDtor();
}

void Sheet_ShentiStarlibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiStarlibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiStarlibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiStarlibrary_descriptor_;
}

const Sheet_ShentiStarlibrary& Sheet_ShentiStarlibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiStarlibrary* Sheet_ShentiStarlibrary::default_instance_ = NULL;

Sheet_ShentiStarlibrary* Sheet_ShentiStarlibrary::New() const {
  return new Sheet_ShentiStarlibrary;
}

void Sheet_ShentiStarlibrary::Clear() {
  e_shentistarlibrary_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiStarlibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiStarlibrary E_ShentiStarlibrary_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiStarlibrary_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentistarlibrary_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiStarlibrary_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiStarlibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiStarlibrary E_ShentiStarlibrary_List = 1;
  for (int i = 0; i < this->e_shentistarlibrary_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentistarlibrary_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiStarlibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiStarlibrary E_ShentiStarlibrary_List = 1;
  for (int i = 0; i < this->e_shentistarlibrary_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentistarlibrary_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiStarlibrary::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiStarlibrary E_ShentiStarlibrary_List = 1;
  total_size += 1 * this->e_shentistarlibrary_list_size();
  for (int i = 0; i < this->e_shentistarlibrary_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentistarlibrary_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiStarlibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiStarlibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiStarlibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiStarlibrary::MergeFrom(const Sheet_ShentiStarlibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentistarlibrary_list_.MergeFrom(from.e_shentistarlibrary_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiStarlibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiStarlibrary::CopyFrom(const Sheet_ShentiStarlibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiStarlibrary::IsInitialized() const {

  return true;
}

void Sheet_ShentiStarlibrary::Swap(Sheet_ShentiStarlibrary* other) {
  if (other != this) {
    e_shentistarlibrary_list_.Swap(&other->e_shentistarlibrary_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiStarlibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiStarlibrary_descriptor_;
  metadata.reflection = Sheet_ShentiStarlibrary_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiAwakenAttributeDesc::kMValueFieldNumber;
const int E_ShentiAwakenAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiAwakenAttributeDesc::E_ShentiAwakenAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiAwakenAttributeDesc::InitAsDefaultInstance() {
}

E_ShentiAwakenAttributeDesc::E_ShentiAwakenAttributeDesc(const E_ShentiAwakenAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiAwakenAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiAwakenAttributeDesc::~E_ShentiAwakenAttributeDesc() {
  SharedDtor();
}

void E_ShentiAwakenAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiAwakenAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiAwakenAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiAwakenAttributeDesc_descriptor_;
}

const E_ShentiAwakenAttributeDesc& E_ShentiAwakenAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiAwakenAttributeDesc* E_ShentiAwakenAttributeDesc::default_instance_ = NULL;

E_ShentiAwakenAttributeDesc* E_ShentiAwakenAttributeDesc::New() const {
  return new E_ShentiAwakenAttributeDesc;
}

void E_ShentiAwakenAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiAwakenAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiAwakenAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiAwakenAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiAwakenAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiAwakenAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiAwakenAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiAwakenAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiAwakenAttributeDesc::MergeFrom(const E_ShentiAwakenAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiAwakenAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiAwakenAttributeDesc::CopyFrom(const E_ShentiAwakenAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiAwakenAttributeDesc::IsInitialized() const {

  return true;
}

void E_ShentiAwakenAttributeDesc::Swap(E_ShentiAwakenAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiAwakenAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiAwakenAttributeDesc_descriptor_;
  metadata.reflection = E_ShentiAwakenAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiAwakenAfflatusattDesc::kMValueFieldNumber;
const int E_ShentiAwakenAfflatusattDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiAwakenAfflatusattDesc::E_ShentiAwakenAfflatusattDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiAwakenAfflatusattDesc::InitAsDefaultInstance() {
}

E_ShentiAwakenAfflatusattDesc::E_ShentiAwakenAfflatusattDesc(const E_ShentiAwakenAfflatusattDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiAwakenAfflatusattDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiAwakenAfflatusattDesc::~E_ShentiAwakenAfflatusattDesc() {
  SharedDtor();
}

void E_ShentiAwakenAfflatusattDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiAwakenAfflatusattDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiAwakenAfflatusattDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiAwakenAfflatusattDesc_descriptor_;
}

const E_ShentiAwakenAfflatusattDesc& E_ShentiAwakenAfflatusattDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiAwakenAfflatusattDesc* E_ShentiAwakenAfflatusattDesc::default_instance_ = NULL;

E_ShentiAwakenAfflatusattDesc* E_ShentiAwakenAfflatusattDesc::New() const {
  return new E_ShentiAwakenAfflatusattDesc;
}

void E_ShentiAwakenAfflatusattDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiAwakenAfflatusattDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiAwakenAfflatusattDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiAwakenAfflatusattDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiAwakenAfflatusattDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiAwakenAfflatusattDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiAwakenAfflatusattDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiAwakenAfflatusattDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiAwakenAfflatusattDesc::MergeFrom(const E_ShentiAwakenAfflatusattDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiAwakenAfflatusattDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiAwakenAfflatusattDesc::CopyFrom(const E_ShentiAwakenAfflatusattDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiAwakenAfflatusattDesc::IsInitialized() const {

  return true;
}

void E_ShentiAwakenAfflatusattDesc::Swap(E_ShentiAwakenAfflatusattDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiAwakenAfflatusattDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiAwakenAfflatusattDesc_descriptor_;
  metadata.reflection = E_ShentiAwakenAfflatusattDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiAwaken::kMIdFieldNumber;
const int E_ShentiAwaken::kMAwakenlvFieldNumber;
const int E_ShentiAwaken::kMPositionFieldNumber;
const int E_ShentiAwaken::kMRemanielvFieldNumber;
const int E_ShentiAwaken::kMNeedQualityFieldNumber;
const int E_ShentiAwaken::kMNeedStarFieldNumber;
const int E_ShentiAwaken::kMMaterialIdFieldNumber;
const int E_ShentiAwaken::kMMaterialNumFieldNumber;
const int E_ShentiAwaken::kMMallidFieldNumber;
const int E_ShentiAwaken::kMInitialvalueFieldNumber;
const int E_ShentiAwaken::kMAttributeFieldNumber;
const int E_ShentiAwaken::kMAfflatusattFieldNumber;
#endif  // !_MSC_VER

E_ShentiAwaken::E_ShentiAwaken()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiAwaken::InitAsDefaultInstance() {
}

E_ShentiAwaken::E_ShentiAwaken(const E_ShentiAwaken& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiAwaken::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_awakenlv_ = 0;
  m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_remanielv_ = 0;
  m_need_quality_ = 0;
  m_need_star_ = 0;
  m_material_id_ = 0;
  m_material_num_ = 0;
  m_mallid_ = 0;
  m_initialvalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiAwaken::~E_ShentiAwaken() {
  SharedDtor();
}

void E_ShentiAwaken::SharedDtor() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (this != default_instance_) {
  }
}

void E_ShentiAwaken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiAwaken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiAwaken_descriptor_;
}

const E_ShentiAwaken& E_ShentiAwaken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiAwaken* E_ShentiAwaken::default_instance_ = NULL;

E_ShentiAwaken* E_ShentiAwaken::New() const {
  return new E_ShentiAwaken;
}

void E_ShentiAwaken::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_awakenlv_ = 0;
    if (has_m_position()) {
      if (m_position_ != &::google::protobuf::internal::kEmptyString) {
        m_position_->clear();
      }
    }
    m_remanielv_ = 0;
    m_need_quality_ = 0;
    m_need_star_ = 0;
    m_material_id_ = 0;
    m_material_num_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_mallid_ = 0;
    m_initialvalue_ = 0;
  }
  m_attribute_.Clear();
  m_afflatusatt_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiAwaken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_awakenlv;
        break;
      }

      // optional int32 m_awakenlv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakenlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakenlv_)));
          set_has_m_awakenlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_position;
        break;
      }

      // optional string m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_position()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_position().data(), this->m_position().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_remanielv;
        break;
      }

      // optional int32 m_remanielv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_remanielv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_remanielv_)));
          set_has_m_remanielv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_need_quality;
        break;
      }

      // optional int32 m_need_quality = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_need_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_need_quality_)));
          set_has_m_need_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_need_star;
        break;
      }

      // optional int32 m_need_star = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_need_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_need_star_)));
          set_has_m_need_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_material_id;
        break;
      }

      // optional int32 m_material_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_material_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_material_id_)));
          set_has_m_material_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_material_num;
        break;
      }

      // optional int32 m_material_num = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_material_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_material_num_)));
          set_has_m_material_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_mallid;
        break;
      }

      // optional int32 m_mallid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mallid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_mallid_)));
          set_has_m_mallid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_initialvalue;
        break;
      }

      // optional int32 m_initialvalue = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_initialvalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_initialvalue_)));
          set_has_m_initialvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_ShentiAwakenAttributeDesc m_attribute = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_attribute;
        if (input->ExpectTag(98)) goto parse_m_afflatusatt;
        break;
      }

      // repeated .proto_ff.E_ShentiAwakenAfflatusattDesc m_afflatusatt = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_afflatusatt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_afflatusatt()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_m_afflatusatt;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiAwaken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_awakenlv = 2;
  if (has_m_awakenlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_awakenlv(), output);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_position(), output);
  }

  // optional int32 m_remanielv = 4;
  if (has_m_remanielv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_remanielv(), output);
  }

  // optional int32 m_need_quality = 5;
  if (has_m_need_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_need_quality(), output);
  }

  // optional int32 m_need_star = 6;
  if (has_m_need_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_need_star(), output);
  }

  // optional int32 m_material_id = 7;
  if (has_m_material_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_material_id(), output);
  }

  // optional int32 m_material_num = 8;
  if (has_m_material_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_material_num(), output);
  }

  // optional int32 m_mallid = 9;
  if (has_m_mallid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_mallid(), output);
  }

  // optional int32 m_initialvalue = 10;
  if (has_m_initialvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_initialvalue(), output);
  }

  // repeated .proto_ff.E_ShentiAwakenAttributeDesc m_attribute = 11;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->m_attribute(i), output);
  }

  // repeated .proto_ff.E_ShentiAwakenAfflatusattDesc m_afflatusatt = 12;
  for (int i = 0; i < this->m_afflatusatt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->m_afflatusatt(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiAwaken::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_awakenlv = 2;
  if (has_m_awakenlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_awakenlv(), target);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_position(), target);
  }

  // optional int32 m_remanielv = 4;
  if (has_m_remanielv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_remanielv(), target);
  }

  // optional int32 m_need_quality = 5;
  if (has_m_need_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_need_quality(), target);
  }

  // optional int32 m_need_star = 6;
  if (has_m_need_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_need_star(), target);
  }

  // optional int32 m_material_id = 7;
  if (has_m_material_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_material_id(), target);
  }

  // optional int32 m_material_num = 8;
  if (has_m_material_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_material_num(), target);
  }

  // optional int32 m_mallid = 9;
  if (has_m_mallid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_mallid(), target);
  }

  // optional int32 m_initialvalue = 10;
  if (has_m_initialvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_initialvalue(), target);
  }

  // repeated .proto_ff.E_ShentiAwakenAttributeDesc m_attribute = 11;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->m_attribute(i), target);
  }

  // repeated .proto_ff.E_ShentiAwakenAfflatusattDesc m_afflatusatt = 12;
  for (int i = 0; i < this->m_afflatusatt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->m_afflatusatt(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiAwaken::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_awakenlv = 2;
    if (has_m_awakenlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakenlv());
    }

    // optional string m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_position());
    }

    // optional int32 m_remanielv = 4;
    if (has_m_remanielv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_remanielv());
    }

    // optional int32 m_need_quality = 5;
    if (has_m_need_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_need_quality());
    }

    // optional int32 m_need_star = 6;
    if (has_m_need_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_need_star());
    }

    // optional int32 m_material_id = 7;
    if (has_m_material_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_material_id());
    }

    // optional int32 m_material_num = 8;
    if (has_m_material_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_material_num());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_mallid = 9;
    if (has_m_mallid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_mallid());
    }

    // optional int32 m_initialvalue = 10;
    if (has_m_initialvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_initialvalue());
    }

  }
  // repeated .proto_ff.E_ShentiAwakenAttributeDesc m_attribute = 11;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  // repeated .proto_ff.E_ShentiAwakenAfflatusattDesc m_afflatusatt = 12;
  total_size += 1 * this->m_afflatusatt_size();
  for (int i = 0; i < this->m_afflatusatt_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_afflatusatt(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiAwaken::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiAwaken* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiAwaken*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiAwaken::MergeFrom(const E_ShentiAwaken& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  m_afflatusatt_.MergeFrom(from.m_afflatusatt_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_awakenlv()) {
      set_m_awakenlv(from.m_awakenlv());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_remanielv()) {
      set_m_remanielv(from.m_remanielv());
    }
    if (from.has_m_need_quality()) {
      set_m_need_quality(from.m_need_quality());
    }
    if (from.has_m_need_star()) {
      set_m_need_star(from.m_need_star());
    }
    if (from.has_m_material_id()) {
      set_m_material_id(from.m_material_id());
    }
    if (from.has_m_material_num()) {
      set_m_material_num(from.m_material_num());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_mallid()) {
      set_m_mallid(from.m_mallid());
    }
    if (from.has_m_initialvalue()) {
      set_m_initialvalue(from.m_initialvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiAwaken::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiAwaken::CopyFrom(const E_ShentiAwaken& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiAwaken::IsInitialized() const {

  return true;
}

void E_ShentiAwaken::Swap(E_ShentiAwaken* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_awakenlv_, other->m_awakenlv_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_remanielv_, other->m_remanielv_);
    std::swap(m_need_quality_, other->m_need_quality_);
    std::swap(m_need_star_, other->m_need_star_);
    std::swap(m_material_id_, other->m_material_id_);
    std::swap(m_material_num_, other->m_material_num_);
    std::swap(m_mallid_, other->m_mallid_);
    std::swap(m_initialvalue_, other->m_initialvalue_);
    m_attribute_.Swap(&other->m_attribute_);
    m_afflatusatt_.Swap(&other->m_afflatusatt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiAwaken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiAwaken_descriptor_;
  metadata.reflection = E_ShentiAwaken_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiAwaken::kEShentiAwakenListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiAwaken::Sheet_ShentiAwaken()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiAwaken::InitAsDefaultInstance() {
}

Sheet_ShentiAwaken::Sheet_ShentiAwaken(const Sheet_ShentiAwaken& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiAwaken::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiAwaken::~Sheet_ShentiAwaken() {
  SharedDtor();
}

void Sheet_ShentiAwaken::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiAwaken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiAwaken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiAwaken_descriptor_;
}

const Sheet_ShentiAwaken& Sheet_ShentiAwaken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiAwaken* Sheet_ShentiAwaken::default_instance_ = NULL;

Sheet_ShentiAwaken* Sheet_ShentiAwaken::New() const {
  return new Sheet_ShentiAwaken;
}

void Sheet_ShentiAwaken::Clear() {
  e_shentiawaken_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiAwaken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiAwaken E_ShentiAwaken_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiAwaken_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentiawaken_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiAwaken_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiAwaken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiAwaken E_ShentiAwaken_List = 1;
  for (int i = 0; i < this->e_shentiawaken_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentiawaken_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiAwaken::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiAwaken E_ShentiAwaken_List = 1;
  for (int i = 0; i < this->e_shentiawaken_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentiawaken_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiAwaken::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiAwaken E_ShentiAwaken_List = 1;
  total_size += 1 * this->e_shentiawaken_list_size();
  for (int i = 0; i < this->e_shentiawaken_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentiawaken_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiAwaken::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiAwaken* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiAwaken*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiAwaken::MergeFrom(const Sheet_ShentiAwaken& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentiawaken_list_.MergeFrom(from.e_shentiawaken_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiAwaken::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiAwaken::CopyFrom(const Sheet_ShentiAwaken& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiAwaken::IsInitialized() const {

  return true;
}

void Sheet_ShentiAwaken::Swap(Sheet_ShentiAwaken* other) {
  if (other != this) {
    e_shentiawaken_list_.Swap(&other->e_shentiawaken_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiAwaken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiAwaken_descriptor_;
  metadata.reflection = Sheet_ShentiAwaken_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiAwakenprogress::kMIdFieldNumber;
const int E_ShentiAwakenprogress::kMAwakenlvFieldNumber;
const int E_ShentiAwakenprogress::kMRemanielvFieldNumber;
const int E_ShentiAwakenprogress::kMEquipqualityFieldNumber;
const int E_ShentiAwakenprogress::kMEquipstarFieldNumber;
const int E_ShentiAwakenprogress::kMAwakenFieldNumber;
#endif  // !_MSC_VER

E_ShentiAwakenprogress::E_ShentiAwakenprogress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiAwakenprogress::InitAsDefaultInstance() {
}

E_ShentiAwakenprogress::E_ShentiAwakenprogress(const E_ShentiAwakenprogress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiAwakenprogress::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_awakenlv_ = 0;
  m_remanielv_ = 0;
  m_equipquality_ = 0;
  m_equipstar_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiAwakenprogress::~E_ShentiAwakenprogress() {
  SharedDtor();
}

void E_ShentiAwakenprogress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiAwakenprogress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiAwakenprogress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiAwakenprogress_descriptor_;
}

const E_ShentiAwakenprogress& E_ShentiAwakenprogress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiAwakenprogress* E_ShentiAwakenprogress::default_instance_ = NULL;

E_ShentiAwakenprogress* E_ShentiAwakenprogress::New() const {
  return new E_ShentiAwakenprogress;
}

void E_ShentiAwakenprogress::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_awakenlv_ = 0;
    m_remanielv_ = 0;
    m_equipquality_ = 0;
    m_equipstar_ = 0;
  }
  m_awaken_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiAwakenprogress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_awakenlv;
        break;
      }

      // optional int32 m_awakenlv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakenlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakenlv_)));
          set_has_m_awakenlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_remanielv;
        break;
      }

      // optional int32 m_remanielv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_remanielv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_remanielv_)));
          set_has_m_remanielv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_equipquality;
        break;
      }

      // optional int32 m_equipquality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equipquality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipquality_)));
          set_has_m_equipquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_equipstar;
        break;
      }

      // optional int32 m_equipstar = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equipstar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipstar_)));
          set_has_m_equipstar();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_awaken;
        break;
      }

      // repeated int32 m_awaken = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awaken:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_m_awaken())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_awaken())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_awaken;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiAwakenprogress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_awakenlv = 2;
  if (has_m_awakenlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_awakenlv(), output);
  }

  // optional int32 m_remanielv = 3;
  if (has_m_remanielv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_remanielv(), output);
  }

  // optional int32 m_equipquality = 4;
  if (has_m_equipquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_equipquality(), output);
  }

  // optional int32 m_equipstar = 5;
  if (has_m_equipstar()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_equipstar(), output);
  }

  // repeated int32 m_awaken = 6;
  for (int i = 0; i < this->m_awaken_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->m_awaken(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiAwakenprogress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_awakenlv = 2;
  if (has_m_awakenlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_awakenlv(), target);
  }

  // optional int32 m_remanielv = 3;
  if (has_m_remanielv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_remanielv(), target);
  }

  // optional int32 m_equipquality = 4;
  if (has_m_equipquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_equipquality(), target);
  }

  // optional int32 m_equipstar = 5;
  if (has_m_equipstar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_equipstar(), target);
  }

  // repeated int32 m_awaken = 6;
  for (int i = 0; i < this->m_awaken_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->m_awaken(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiAwakenprogress::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_awakenlv = 2;
    if (has_m_awakenlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakenlv());
    }

    // optional int32 m_remanielv = 3;
    if (has_m_remanielv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_remanielv());
    }

    // optional int32 m_equipquality = 4;
    if (has_m_equipquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipquality());
    }

    // optional int32 m_equipstar = 5;
    if (has_m_equipstar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipstar());
    }

  }
  // repeated int32 m_awaken = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_awaken_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_awaken(i));
    }
    total_size += 1 * this->m_awaken_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiAwakenprogress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiAwakenprogress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiAwakenprogress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiAwakenprogress::MergeFrom(const E_ShentiAwakenprogress& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_awaken_.MergeFrom(from.m_awaken_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_awakenlv()) {
      set_m_awakenlv(from.m_awakenlv());
    }
    if (from.has_m_remanielv()) {
      set_m_remanielv(from.m_remanielv());
    }
    if (from.has_m_equipquality()) {
      set_m_equipquality(from.m_equipquality());
    }
    if (from.has_m_equipstar()) {
      set_m_equipstar(from.m_equipstar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiAwakenprogress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiAwakenprogress::CopyFrom(const E_ShentiAwakenprogress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiAwakenprogress::IsInitialized() const {

  return true;
}

void E_ShentiAwakenprogress::Swap(E_ShentiAwakenprogress* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_awakenlv_, other->m_awakenlv_);
    std::swap(m_remanielv_, other->m_remanielv_);
    std::swap(m_equipquality_, other->m_equipquality_);
    std::swap(m_equipstar_, other->m_equipstar_);
    m_awaken_.Swap(&other->m_awaken_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiAwakenprogress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiAwakenprogress_descriptor_;
  metadata.reflection = E_ShentiAwakenprogress_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiAwakenprogress::kEShentiAwakenprogressListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiAwakenprogress::Sheet_ShentiAwakenprogress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiAwakenprogress::InitAsDefaultInstance() {
}

Sheet_ShentiAwakenprogress::Sheet_ShentiAwakenprogress(const Sheet_ShentiAwakenprogress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiAwakenprogress::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiAwakenprogress::~Sheet_ShentiAwakenprogress() {
  SharedDtor();
}

void Sheet_ShentiAwakenprogress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiAwakenprogress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiAwakenprogress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiAwakenprogress_descriptor_;
}

const Sheet_ShentiAwakenprogress& Sheet_ShentiAwakenprogress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiAwakenprogress* Sheet_ShentiAwakenprogress::default_instance_ = NULL;

Sheet_ShentiAwakenprogress* Sheet_ShentiAwakenprogress::New() const {
  return new Sheet_ShentiAwakenprogress;
}

void Sheet_ShentiAwakenprogress::Clear() {
  e_shentiawakenprogress_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiAwakenprogress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiAwakenprogress E_ShentiAwakenprogress_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiAwakenprogress_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentiawakenprogress_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiAwakenprogress_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiAwakenprogress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiAwakenprogress E_ShentiAwakenprogress_List = 1;
  for (int i = 0; i < this->e_shentiawakenprogress_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentiawakenprogress_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiAwakenprogress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiAwakenprogress E_ShentiAwakenprogress_List = 1;
  for (int i = 0; i < this->e_shentiawakenprogress_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentiawakenprogress_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiAwakenprogress::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiAwakenprogress E_ShentiAwakenprogress_List = 1;
  total_size += 1 * this->e_shentiawakenprogress_list_size();
  for (int i = 0; i < this->e_shentiawakenprogress_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentiawakenprogress_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiAwakenprogress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiAwakenprogress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiAwakenprogress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiAwakenprogress::MergeFrom(const Sheet_ShentiAwakenprogress& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentiawakenprogress_list_.MergeFrom(from.e_shentiawakenprogress_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiAwakenprogress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiAwakenprogress::CopyFrom(const Sheet_ShentiAwakenprogress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiAwakenprogress::IsInitialized() const {

  return true;
}

void Sheet_ShentiAwakenprogress::Swap(Sheet_ShentiAwakenprogress* other) {
  if (other != this) {
    e_shentiawakenprogress_list_.Swap(&other->e_shentiawakenprogress_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiAwakenprogress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiAwakenprogress_descriptor_;
  metadata.reflection = Sheet_ShentiAwakenprogress_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiSuitAttributeDesc::kMValueFieldNumber;
const int E_ShentiSuitAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiSuitAttributeDesc::E_ShentiSuitAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiSuitAttributeDesc::InitAsDefaultInstance() {
}

E_ShentiSuitAttributeDesc::E_ShentiSuitAttributeDesc(const E_ShentiSuitAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiSuitAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiSuitAttributeDesc::~E_ShentiSuitAttributeDesc() {
  SharedDtor();
}

void E_ShentiSuitAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiSuitAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiSuitAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiSuitAttributeDesc_descriptor_;
}

const E_ShentiSuitAttributeDesc& E_ShentiSuitAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiSuitAttributeDesc* E_ShentiSuitAttributeDesc::default_instance_ = NULL;

E_ShentiSuitAttributeDesc* E_ShentiSuitAttributeDesc::New() const {
  return new E_ShentiSuitAttributeDesc;
}

void E_ShentiSuitAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiSuitAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiSuitAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiSuitAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiSuitAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiSuitAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiSuitAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiSuitAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiSuitAttributeDesc::MergeFrom(const E_ShentiSuitAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiSuitAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiSuitAttributeDesc::CopyFrom(const E_ShentiSuitAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiSuitAttributeDesc::IsInitialized() const {

  return true;
}

void E_ShentiSuitAttributeDesc::Swap(E_ShentiSuitAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiSuitAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiSuitAttributeDesc_descriptor_;
  metadata.reflection = E_ShentiSuitAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiSuit::kMIdFieldNumber;
const int E_ShentiSuit::kMSuitgroupFieldNumber;
const int E_ShentiSuit::kMSuitlvFieldNumber;
const int E_ShentiSuit::kMNumFieldNumber;
const int E_ShentiSuit::kMNameFieldNumber;
const int E_ShentiSuit::kMSkillFieldNumber;
const int E_ShentiSuit::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_ShentiSuit::E_ShentiSuit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiSuit::InitAsDefaultInstance() {
}

E_ShentiSuit::E_ShentiSuit(const E_ShentiSuit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiSuit::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_suitgroup_ = 0;
  m_suitlv_ = 0;
  m_num_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_skill_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiSuit::~E_ShentiSuit() {
  SharedDtor();
}

void E_ShentiSuit::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (this != default_instance_) {
  }
}

void E_ShentiSuit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiSuit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiSuit_descriptor_;
}

const E_ShentiSuit& E_ShentiSuit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiSuit* E_ShentiSuit::default_instance_ = NULL;

E_ShentiSuit* E_ShentiSuit::New() const {
  return new E_ShentiSuit;
}

void E_ShentiSuit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_suitgroup_ = 0;
    m_suitlv_ = 0;
    m_num_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_skill_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiSuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_suitgroup;
        break;
      }

      // optional int32 m_suitgroup = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_suitgroup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_suitgroup_)));
          set_has_m_suitgroup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_suitlv;
        break;
      }

      // optional int32 m_suitlv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_suitlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_suitlv_)));
          set_has_m_suitlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_name;
        break;
      }

      // optional string m_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_skill;
        break;
      }

      // optional int32 m_skill = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skill_)));
          set_has_m_skill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_ShentiSuitAttributeDesc m_attribute = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiSuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_suitgroup = 2;
  if (has_m_suitgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_suitgroup(), output);
  }

  // optional int32 m_suitlv = 3;
  if (has_m_suitlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_suitlv(), output);
  }

  // optional int32 m_num = 4;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_num(), output);
  }

  // optional string m_name = 5;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_name(), output);
  }

  // optional int32 m_skill = 6;
  if (has_m_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_skill(), output);
  }

  // repeated .proto_ff.E_ShentiSuitAttributeDesc m_attribute = 7;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiSuit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_suitgroup = 2;
  if (has_m_suitgroup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_suitgroup(), target);
  }

  // optional int32 m_suitlv = 3;
  if (has_m_suitlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_suitlv(), target);
  }

  // optional int32 m_num = 4;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_num(), target);
  }

  // optional string m_name = 5;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_name(), target);
  }

  // optional int32 m_skill = 6;
  if (has_m_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_skill(), target);
  }

  // repeated .proto_ff.E_ShentiSuitAttributeDesc m_attribute = 7;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiSuit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_suitgroup = 2;
    if (has_m_suitgroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_suitgroup());
    }

    // optional int32 m_suitlv = 3;
    if (has_m_suitlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_suitlv());
    }

    // optional int32 m_num = 4;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional string m_name = 5;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_skill = 6;
    if (has_m_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skill());
    }

  }
  // repeated .proto_ff.E_ShentiSuitAttributeDesc m_attribute = 7;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiSuit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiSuit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiSuit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiSuit::MergeFrom(const E_ShentiSuit& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_suitgroup()) {
      set_m_suitgroup(from.m_suitgroup());
    }
    if (from.has_m_suitlv()) {
      set_m_suitlv(from.m_suitlv());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_skill()) {
      set_m_skill(from.m_skill());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiSuit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiSuit::CopyFrom(const E_ShentiSuit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiSuit::IsInitialized() const {

  return true;
}

void E_ShentiSuit::Swap(E_ShentiSuit* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_suitgroup_, other->m_suitgroup_);
    std::swap(m_suitlv_, other->m_suitlv_);
    std::swap(m_num_, other->m_num_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_skill_, other->m_skill_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiSuit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiSuit_descriptor_;
  metadata.reflection = E_ShentiSuit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiSuit::kEShentiSuitListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiSuit::Sheet_ShentiSuit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiSuit::InitAsDefaultInstance() {
}

Sheet_ShentiSuit::Sheet_ShentiSuit(const Sheet_ShentiSuit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiSuit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiSuit::~Sheet_ShentiSuit() {
  SharedDtor();
}

void Sheet_ShentiSuit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiSuit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiSuit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiSuit_descriptor_;
}

const Sheet_ShentiSuit& Sheet_ShentiSuit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiSuit* Sheet_ShentiSuit::default_instance_ = NULL;

Sheet_ShentiSuit* Sheet_ShentiSuit::New() const {
  return new Sheet_ShentiSuit;
}

void Sheet_ShentiSuit::Clear() {
  e_shentisuit_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiSuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiSuit E_ShentiSuit_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiSuit_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentisuit_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiSuit_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiSuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiSuit E_ShentiSuit_List = 1;
  for (int i = 0; i < this->e_shentisuit_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentisuit_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiSuit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiSuit E_ShentiSuit_List = 1;
  for (int i = 0; i < this->e_shentisuit_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentisuit_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiSuit::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiSuit E_ShentiSuit_List = 1;
  total_size += 1 * this->e_shentisuit_list_size();
  for (int i = 0; i < this->e_shentisuit_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentisuit_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiSuit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiSuit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiSuit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiSuit::MergeFrom(const Sheet_ShentiSuit& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentisuit_list_.MergeFrom(from.e_shentisuit_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiSuit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiSuit::CopyFrom(const Sheet_ShentiSuit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiSuit::IsInitialized() const {

  return true;
}

void Sheet_ShentiSuit::Swap(Sheet_ShentiSuit* other) {
  if (other != this) {
    e_shentisuit_list_.Swap(&other->e_shentisuit_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiSuit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiSuit_descriptor_;
  metadata.reflection = Sheet_ShentiSuit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiCompose::kMNeedEquipFieldNumber;
const int E_ShentiCompose::kMTargetEquipFieldNumber;
const int E_ShentiCompose::kMComposeTipsFieldNumber;
#endif  // !_MSC_VER

E_ShentiCompose::E_ShentiCompose()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiCompose::InitAsDefaultInstance() {
}

E_ShentiCompose::E_ShentiCompose(const E_ShentiCompose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiCompose::SharedCtor() {
  _cached_size_ = 0;
  m_need_equip_ = 0;
  m_target_equip_ = 0;
  m_compose_tips_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiCompose::~E_ShentiCompose() {
  SharedDtor();
}

void E_ShentiCompose::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiCompose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiCompose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiCompose_descriptor_;
}

const E_ShentiCompose& E_ShentiCompose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiCompose* E_ShentiCompose::default_instance_ = NULL;

E_ShentiCompose* E_ShentiCompose::New() const {
  return new E_ShentiCompose;
}

void E_ShentiCompose::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_need_equip_ = 0;
    m_target_equip_ = 0;
    m_compose_tips_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiCompose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_need_equip = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_need_equip_)));
          set_has_m_need_equip();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_target_equip;
        break;
      }

      // optional int32 m_target_equip = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_target_equip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_target_equip_)));
          set_has_m_target_equip();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_compose_tips;
        break;
      }

      // optional int32 m_compose_tips = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_compose_tips:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_compose_tips_)));
          set_has_m_compose_tips();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiCompose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_need_equip = 1;
  if (has_m_need_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_need_equip(), output);
  }

  // optional int32 m_target_equip = 2;
  if (has_m_target_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_target_equip(), output);
  }

  // optional int32 m_compose_tips = 3;
  if (has_m_compose_tips()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_compose_tips(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiCompose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_need_equip = 1;
  if (has_m_need_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_need_equip(), target);
  }

  // optional int32 m_target_equip = 2;
  if (has_m_target_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_target_equip(), target);
  }

  // optional int32 m_compose_tips = 3;
  if (has_m_compose_tips()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_compose_tips(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiCompose::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_need_equip = 1;
    if (has_m_need_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_need_equip());
    }

    // optional int32 m_target_equip = 2;
    if (has_m_target_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_target_equip());
    }

    // optional int32 m_compose_tips = 3;
    if (has_m_compose_tips()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_compose_tips());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiCompose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiCompose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiCompose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiCompose::MergeFrom(const E_ShentiCompose& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_need_equip()) {
      set_m_need_equip(from.m_need_equip());
    }
    if (from.has_m_target_equip()) {
      set_m_target_equip(from.m_target_equip());
    }
    if (from.has_m_compose_tips()) {
      set_m_compose_tips(from.m_compose_tips());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiCompose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiCompose::CopyFrom(const E_ShentiCompose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiCompose::IsInitialized() const {

  return true;
}

void E_ShentiCompose::Swap(E_ShentiCompose* other) {
  if (other != this) {
    std::swap(m_need_equip_, other->m_need_equip_);
    std::swap(m_target_equip_, other->m_target_equip_);
    std::swap(m_compose_tips_, other->m_compose_tips_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiCompose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiCompose_descriptor_;
  metadata.reflection = E_ShentiCompose_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiCompose::kEShentiComposeListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiCompose::Sheet_ShentiCompose()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiCompose::InitAsDefaultInstance() {
}

Sheet_ShentiCompose::Sheet_ShentiCompose(const Sheet_ShentiCompose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiCompose::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiCompose::~Sheet_ShentiCompose() {
  SharedDtor();
}

void Sheet_ShentiCompose::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiCompose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiCompose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiCompose_descriptor_;
}

const Sheet_ShentiCompose& Sheet_ShentiCompose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiCompose* Sheet_ShentiCompose::default_instance_ = NULL;

Sheet_ShentiCompose* Sheet_ShentiCompose::New() const {
  return new Sheet_ShentiCompose;
}

void Sheet_ShentiCompose::Clear() {
  e_shenticompose_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiCompose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiCompose E_ShentiCompose_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiCompose_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shenticompose_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiCompose_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiCompose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiCompose E_ShentiCompose_List = 1;
  for (int i = 0; i < this->e_shenticompose_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shenticompose_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiCompose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiCompose E_ShentiCompose_List = 1;
  for (int i = 0; i < this->e_shenticompose_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shenticompose_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiCompose::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiCompose E_ShentiCompose_List = 1;
  total_size += 1 * this->e_shenticompose_list_size();
  for (int i = 0; i < this->e_shenticompose_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shenticompose_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiCompose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiCompose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiCompose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiCompose::MergeFrom(const Sheet_ShentiCompose& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shenticompose_list_.MergeFrom(from.e_shenticompose_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiCompose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiCompose::CopyFrom(const Sheet_ShentiCompose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiCompose::IsInitialized() const {

  return true;
}

void Sheet_ShentiCompose::Swap(Sheet_ShentiCompose* other) {
  if (other != this) {
    e_shenticompose_list_.Swap(&other->e_shenticompose_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiCompose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiCompose_descriptor_;
  metadata.reflection = Sheet_ShentiCompose_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStar_upMaterialDesc::kMNumFieldNumber;
const int E_ShentiStar_upMaterialDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_ShentiStar_upMaterialDesc::E_ShentiStar_upMaterialDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStar_upMaterialDesc::InitAsDefaultInstance() {
}

E_ShentiStar_upMaterialDesc::E_ShentiStar_upMaterialDesc(const E_ShentiStar_upMaterialDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStar_upMaterialDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStar_upMaterialDesc::~E_ShentiStar_upMaterialDesc() {
  SharedDtor();
}

void E_ShentiStar_upMaterialDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStar_upMaterialDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStar_upMaterialDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStar_upMaterialDesc_descriptor_;
}

const E_ShentiStar_upMaterialDesc& E_ShentiStar_upMaterialDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStar_upMaterialDesc* E_ShentiStar_upMaterialDesc::default_instance_ = NULL;

E_ShentiStar_upMaterialDesc* E_ShentiStar_upMaterialDesc::New() const {
  return new E_ShentiStar_upMaterialDesc;
}

void E_ShentiStar_upMaterialDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStar_upMaterialDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStar_upMaterialDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStar_upMaterialDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStar_upMaterialDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStar_upMaterialDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStar_upMaterialDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStar_upMaterialDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStar_upMaterialDesc::MergeFrom(const E_ShentiStar_upMaterialDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStar_upMaterialDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStar_upMaterialDesc::CopyFrom(const E_ShentiStar_upMaterialDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStar_upMaterialDesc::IsInitialized() const {

  return true;
}

void E_ShentiStar_upMaterialDesc::Swap(E_ShentiStar_upMaterialDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStar_upMaterialDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStar_upMaterialDesc_descriptor_;
  metadata.reflection = E_ShentiStar_upMaterialDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStar_upXpstarDesc::kMWeightFieldNumber;
#endif  // !_MSC_VER

E_ShentiStar_upXpstarDesc::E_ShentiStar_upXpstarDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStar_upXpstarDesc::InitAsDefaultInstance() {
}

E_ShentiStar_upXpstarDesc::E_ShentiStar_upXpstarDesc(const E_ShentiStar_upXpstarDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStar_upXpstarDesc::SharedCtor() {
  _cached_size_ = 0;
  m_weight_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStar_upXpstarDesc::~E_ShentiStar_upXpstarDesc() {
  SharedDtor();
}

void E_ShentiStar_upXpstarDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStar_upXpstarDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStar_upXpstarDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStar_upXpstarDesc_descriptor_;
}

const E_ShentiStar_upXpstarDesc& E_ShentiStar_upXpstarDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStar_upXpstarDesc* E_ShentiStar_upXpstarDesc::default_instance_ = NULL;

E_ShentiStar_upXpstarDesc* E_ShentiStar_upXpstarDesc::New() const {
  return new E_ShentiStar_upXpstarDesc;
}

void E_ShentiStar_upXpstarDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_weight_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStar_upXpstarDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_weight = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_weight_)));
          set_has_m_weight();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStar_upXpstarDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_weight = 1;
  if (has_m_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_weight(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStar_upXpstarDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_weight = 1;
  if (has_m_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_weight(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStar_upXpstarDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_weight = 1;
    if (has_m_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_weight());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStar_upXpstarDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStar_upXpstarDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStar_upXpstarDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStar_upXpstarDesc::MergeFrom(const E_ShentiStar_upXpstarDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_weight()) {
      set_m_weight(from.m_weight());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStar_upXpstarDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStar_upXpstarDesc::CopyFrom(const E_ShentiStar_upXpstarDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStar_upXpstarDesc::IsInitialized() const {

  return true;
}

void E_ShentiStar_upXpstarDesc::Swap(E_ShentiStar_upXpstarDesc* other) {
  if (other != this) {
    std::swap(m_weight_, other->m_weight_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStar_upXpstarDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStar_upXpstarDesc_descriptor_;
  metadata.reflection = E_ShentiStar_upXpstarDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStar_up::kMIdFieldNumber;
const int E_ShentiStar_up::kMStarFieldNumber;
const int E_ShentiStar_up::kMPositionFieldNumber;
const int E_ShentiStar_up::kMNeedQualityFieldNumber;
const int E_ShentiStar_up::kMMaterialFieldNumber;
const int E_ShentiStar_up::kMXpstarFieldNumber;
#endif  // !_MSC_VER

E_ShentiStar_up::E_ShentiStar_up()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStar_up::InitAsDefaultInstance() {
}

E_ShentiStar_up::E_ShentiStar_up(const E_ShentiStar_up& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStar_up::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_star_ = 0;
  m_position_ = 0;
  m_need_quality_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStar_up::~E_ShentiStar_up() {
  SharedDtor();
}

void E_ShentiStar_up::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStar_up::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStar_up::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStar_up_descriptor_;
}

const E_ShentiStar_up& E_ShentiStar_up::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStar_up* E_ShentiStar_up::default_instance_ = NULL;

E_ShentiStar_up* E_ShentiStar_up::New() const {
  return new E_ShentiStar_up;
}

void E_ShentiStar_up::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_star_ = 0;
    m_position_ = 0;
    m_need_quality_ = 0;
  }
  m_material_.Clear();
  m_xpstar_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStar_up::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_need_quality;
        break;
      }

      // optional int32 m_need_quality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_need_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_need_quality_)));
          set_has_m_need_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_material;
        break;
      }

      // repeated .proto_ff.E_ShentiStar_upMaterialDesc m_material = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_material()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_material;
        if (input->ExpectTag(50)) goto parse_m_xpstar;
        break;
      }

      // repeated .proto_ff.E_ShentiStar_upXpstarDesc m_xpstar = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_xpstar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_xpstar()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_xpstar;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStar_up::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_star = 2;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_star(), output);
  }

  // optional int32 m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_position(), output);
  }

  // optional int32 m_need_quality = 4;
  if (has_m_need_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_need_quality(), output);
  }

  // repeated .proto_ff.E_ShentiStar_upMaterialDesc m_material = 5;
  for (int i = 0; i < this->m_material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_material(i), output);
  }

  // repeated .proto_ff.E_ShentiStar_upXpstarDesc m_xpstar = 6;
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_xpstar(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStar_up::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_star = 2;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_star(), target);
  }

  // optional int32 m_position = 3;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_position(), target);
  }

  // optional int32 m_need_quality = 4;
  if (has_m_need_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_need_quality(), target);
  }

  // repeated .proto_ff.E_ShentiStar_upMaterialDesc m_material = 5;
  for (int i = 0; i < this->m_material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_material(i), target);
  }

  // repeated .proto_ff.E_ShentiStar_upXpstarDesc m_xpstar = 6;
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_xpstar(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStar_up::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_star = 2;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional int32 m_need_quality = 4;
    if (has_m_need_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_need_quality());
    }

  }
  // repeated .proto_ff.E_ShentiStar_upMaterialDesc m_material = 5;
  total_size += 1 * this->m_material_size();
  for (int i = 0; i < this->m_material_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_material(i));
  }

  // repeated .proto_ff.E_ShentiStar_upXpstarDesc m_xpstar = 6;
  total_size += 1 * this->m_xpstar_size();
  for (int i = 0; i < this->m_xpstar_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_xpstar(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStar_up::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStar_up* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStar_up*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStar_up::MergeFrom(const E_ShentiStar_up& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_material_.MergeFrom(from.m_material_);
  m_xpstar_.MergeFrom(from.m_xpstar_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_need_quality()) {
      set_m_need_quality(from.m_need_quality());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStar_up::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStar_up::CopyFrom(const E_ShentiStar_up& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStar_up::IsInitialized() const {

  return true;
}

void E_ShentiStar_up::Swap(E_ShentiStar_up* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_need_quality_, other->m_need_quality_);
    m_material_.Swap(&other->m_material_);
    m_xpstar_.Swap(&other->m_xpstar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStar_up::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStar_up_descriptor_;
  metadata.reflection = E_ShentiStar_up_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiStar_up::kEShentiStarUpListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiStar_up::Sheet_ShentiStar_up()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiStar_up::InitAsDefaultInstance() {
}

Sheet_ShentiStar_up::Sheet_ShentiStar_up(const Sheet_ShentiStar_up& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiStar_up::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiStar_up::~Sheet_ShentiStar_up() {
  SharedDtor();
}

void Sheet_ShentiStar_up::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiStar_up::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiStar_up::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiStar_up_descriptor_;
}

const Sheet_ShentiStar_up& Sheet_ShentiStar_up::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiStar_up* Sheet_ShentiStar_up::default_instance_ = NULL;

Sheet_ShentiStar_up* Sheet_ShentiStar_up::New() const {
  return new Sheet_ShentiStar_up;
}

void Sheet_ShentiStar_up::Clear() {
  e_shentistar_up_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiStar_up::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiStar_up E_ShentiStar_up_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiStar_up_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentistar_up_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiStar_up_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiStar_up::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiStar_up E_ShentiStar_up_List = 1;
  for (int i = 0; i < this->e_shentistar_up_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentistar_up_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiStar_up::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiStar_up E_ShentiStar_up_List = 1;
  for (int i = 0; i < this->e_shentistar_up_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentistar_up_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiStar_up::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiStar_up E_ShentiStar_up_List = 1;
  total_size += 1 * this->e_shentistar_up_list_size();
  for (int i = 0; i < this->e_shentistar_up_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentistar_up_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiStar_up::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiStar_up* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiStar_up*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiStar_up::MergeFrom(const Sheet_ShentiStar_up& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentistar_up_list_.MergeFrom(from.e_shentistar_up_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiStar_up::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiStar_up::CopyFrom(const Sheet_ShentiStar_up& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiStar_up::IsInitialized() const {

  return true;
}

void Sheet_ShentiStar_up::Swap(Sheet_ShentiStar_up* other) {
  if (other != this) {
    e_shentistar_up_list_.Swap(&other->e_shentistar_up_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiStar_up::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiStar_up_descriptor_;
  metadata.reflection = Sheet_ShentiStar_up_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStrengtitelAttributeDesc::kMValueFieldNumber;
const int E_ShentiStrengtitelAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_ShentiStrengtitelAttributeDesc::E_ShentiStrengtitelAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStrengtitelAttributeDesc::InitAsDefaultInstance() {
}

E_ShentiStrengtitelAttributeDesc::E_ShentiStrengtitelAttributeDesc(const E_ShentiStrengtitelAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStrengtitelAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStrengtitelAttributeDesc::~E_ShentiStrengtitelAttributeDesc() {
  SharedDtor();
}

void E_ShentiStrengtitelAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStrengtitelAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStrengtitelAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStrengtitelAttributeDesc_descriptor_;
}

const E_ShentiStrengtitelAttributeDesc& E_ShentiStrengtitelAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStrengtitelAttributeDesc* E_ShentiStrengtitelAttributeDesc::default_instance_ = NULL;

E_ShentiStrengtitelAttributeDesc* E_ShentiStrengtitelAttributeDesc::New() const {
  return new E_ShentiStrengtitelAttributeDesc;
}

void E_ShentiStrengtitelAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStrengtitelAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStrengtitelAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStrengtitelAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStrengtitelAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStrengtitelAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStrengtitelAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStrengtitelAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStrengtitelAttributeDesc::MergeFrom(const E_ShentiStrengtitelAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStrengtitelAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStrengtitelAttributeDesc::CopyFrom(const E_ShentiStrengtitelAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStrengtitelAttributeDesc::IsInitialized() const {

  return true;
}

void E_ShentiStrengtitelAttributeDesc::Swap(E_ShentiStrengtitelAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStrengtitelAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStrengtitelAttributeDesc_descriptor_;
  metadata.reflection = E_ShentiStrengtitelAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStrengtitel::kMIdFieldNumber;
const int E_ShentiStrengtitel::kMRemanielvFieldNumber;
const int E_ShentiStrengtitel::kMStrenglvFieldNumber;
const int E_ShentiStrengtitel::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_ShentiStrengtitel::E_ShentiStrengtitel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStrengtitel::InitAsDefaultInstance() {
}

E_ShentiStrengtitel::E_ShentiStrengtitel(const E_ShentiStrengtitel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStrengtitel::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_remanielv_ = 0;
  m_strenglv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStrengtitel::~E_ShentiStrengtitel() {
  SharedDtor();
}

void E_ShentiStrengtitel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStrengtitel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStrengtitel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStrengtitel_descriptor_;
}

const E_ShentiStrengtitel& E_ShentiStrengtitel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStrengtitel* E_ShentiStrengtitel::default_instance_ = NULL;

E_ShentiStrengtitel* E_ShentiStrengtitel::New() const {
  return new E_ShentiStrengtitel;
}

void E_ShentiStrengtitel::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_remanielv_ = 0;
    m_strenglv_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStrengtitel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_remanielv;
        break;
      }

      // optional int32 m_remanielv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_remanielv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_remanielv_)));
          set_has_m_remanielv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_strenglv;
        break;
      }

      // optional int32 m_strenglv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_strenglv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_strenglv_)));
          set_has_m_strenglv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_ShentiStrengtitelAttributeDesc m_attribute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStrengtitel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_remanielv = 2;
  if (has_m_remanielv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_remanielv(), output);
  }

  // optional int32 m_strenglv = 3;
  if (has_m_strenglv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_strenglv(), output);
  }

  // repeated .proto_ff.E_ShentiStrengtitelAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStrengtitel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_remanielv = 2;
  if (has_m_remanielv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_remanielv(), target);
  }

  // optional int32 m_strenglv = 3;
  if (has_m_strenglv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_strenglv(), target);
  }

  // repeated .proto_ff.E_ShentiStrengtitelAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStrengtitel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_remanielv = 2;
    if (has_m_remanielv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_remanielv());
    }

    // optional int32 m_strenglv = 3;
    if (has_m_strenglv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_strenglv());
    }

  }
  // repeated .proto_ff.E_ShentiStrengtitelAttributeDesc m_attribute = 4;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStrengtitel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStrengtitel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStrengtitel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStrengtitel::MergeFrom(const E_ShentiStrengtitel& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_remanielv()) {
      set_m_remanielv(from.m_remanielv());
    }
    if (from.has_m_strenglv()) {
      set_m_strenglv(from.m_strenglv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStrengtitel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStrengtitel::CopyFrom(const E_ShentiStrengtitel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStrengtitel::IsInitialized() const {

  return true;
}

void E_ShentiStrengtitel::Swap(E_ShentiStrengtitel* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_remanielv_, other->m_remanielv_);
    std::swap(m_strenglv_, other->m_strenglv_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStrengtitel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStrengtitel_descriptor_;
  metadata.reflection = E_ShentiStrengtitel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiStrengtitel::kEShentiStrengtitelListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiStrengtitel::Sheet_ShentiStrengtitel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiStrengtitel::InitAsDefaultInstance() {
}

Sheet_ShentiStrengtitel::Sheet_ShentiStrengtitel(const Sheet_ShentiStrengtitel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiStrengtitel::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiStrengtitel::~Sheet_ShentiStrengtitel() {
  SharedDtor();
}

void Sheet_ShentiStrengtitel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiStrengtitel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiStrengtitel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiStrengtitel_descriptor_;
}

const Sheet_ShentiStrengtitel& Sheet_ShentiStrengtitel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiStrengtitel* Sheet_ShentiStrengtitel::default_instance_ = NULL;

Sheet_ShentiStrengtitel* Sheet_ShentiStrengtitel::New() const {
  return new Sheet_ShentiStrengtitel;
}

void Sheet_ShentiStrengtitel::Clear() {
  e_shentistrengtitel_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiStrengtitel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiStrengtitel E_ShentiStrengtitel_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiStrengtitel_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentistrengtitel_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiStrengtitel_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiStrengtitel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiStrengtitel E_ShentiStrengtitel_List = 1;
  for (int i = 0; i < this->e_shentistrengtitel_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentistrengtitel_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiStrengtitel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiStrengtitel E_ShentiStrengtitel_List = 1;
  for (int i = 0; i < this->e_shentistrengtitel_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentistrengtitel_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiStrengtitel::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiStrengtitel E_ShentiStrengtitel_List = 1;
  total_size += 1 * this->e_shentistrengtitel_list_size();
  for (int i = 0; i < this->e_shentistrengtitel_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentistrengtitel_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiStrengtitel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiStrengtitel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiStrengtitel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiStrengtitel::MergeFrom(const Sheet_ShentiStrengtitel& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentistrengtitel_list_.MergeFrom(from.e_shentistrengtitel_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiStrengtitel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiStrengtitel::CopyFrom(const Sheet_ShentiStrengtitel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiStrengtitel::IsInitialized() const {

  return true;
}

void Sheet_ShentiStrengtitel::Swap(Sheet_ShentiStrengtitel* other) {
  if (other != this) {
    e_shentistrengtitel_list_.Swap(&other->e_shentistrengtitel_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiStrengtitel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiStrengtitel_descriptor_;
  metadata.reflection = Sheet_ShentiStrengtitel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShentiStartitel::kMIdFieldNumber;
const int E_ShentiStartitel::kMNumFieldNumber;
const int E_ShentiStartitel::kMAttributeTypeFieldNumber;
const int E_ShentiStartitel::kMAttributeValueFieldNumber;
#endif  // !_MSC_VER

E_ShentiStartitel::E_ShentiStartitel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShentiStartitel::InitAsDefaultInstance() {
}

E_ShentiStartitel::E_ShentiStartitel(const E_ShentiStartitel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShentiStartitel::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_num_ = 0;
  m_attribute_type_ = 0;
  m_attribute_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShentiStartitel::~E_ShentiStartitel() {
  SharedDtor();
}

void E_ShentiStartitel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShentiStartitel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShentiStartitel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShentiStartitel_descriptor_;
}

const E_ShentiStartitel& E_ShentiStartitel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

E_ShentiStartitel* E_ShentiStartitel::default_instance_ = NULL;

E_ShentiStartitel* E_ShentiStartitel::New() const {
  return new E_ShentiStartitel;
}

void E_ShentiStartitel::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_num_ = 0;
    m_attribute_type_ = 0;
    m_attribute_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShentiStartitel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_attribute_type;
        break;
      }

      // optional int32 m_attribute_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attribute_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attribute_type_)));
          set_has_m_attribute_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_attribute_value;
        break;
      }

      // optional int32 m_attribute_value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attribute_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attribute_value_)));
          set_has_m_attribute_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShentiStartitel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_num(), output);
  }

  // optional int32 m_attribute_type = 3;
  if (has_m_attribute_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_attribute_type(), output);
  }

  // optional int32 m_attribute_value = 4;
  if (has_m_attribute_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_attribute_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShentiStartitel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_num(), target);
  }

  // optional int32 m_attribute_type = 3;
  if (has_m_attribute_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_attribute_type(), target);
  }

  // optional int32 m_attribute_value = 4;
  if (has_m_attribute_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_attribute_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShentiStartitel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_num = 2;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_attribute_type = 3;
    if (has_m_attribute_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attribute_type());
    }

    // optional int32 m_attribute_value = 4;
    if (has_m_attribute_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attribute_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShentiStartitel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShentiStartitel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShentiStartitel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShentiStartitel::MergeFrom(const E_ShentiStartitel& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_attribute_type()) {
      set_m_attribute_type(from.m_attribute_type());
    }
    if (from.has_m_attribute_value()) {
      set_m_attribute_value(from.m_attribute_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShentiStartitel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShentiStartitel::CopyFrom(const E_ShentiStartitel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShentiStartitel::IsInitialized() const {

  return true;
}

void E_ShentiStartitel::Swap(E_ShentiStartitel* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_num_, other->m_num_);
    std::swap(m_attribute_type_, other->m_attribute_type_);
    std::swap(m_attribute_value_, other->m_attribute_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShentiStartitel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShentiStartitel_descriptor_;
  metadata.reflection = E_ShentiStartitel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShentiStartitel::kEShentiStartitelListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShentiStartitel::Sheet_ShentiStartitel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShentiStartitel::InitAsDefaultInstance() {
}

Sheet_ShentiStartitel::Sheet_ShentiStartitel(const Sheet_ShentiStartitel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShentiStartitel::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShentiStartitel::~Sheet_ShentiStartitel() {
  SharedDtor();
}

void Sheet_ShentiStartitel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShentiStartitel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShentiStartitel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShentiStartitel_descriptor_;
}

const Sheet_ShentiStartitel& Sheet_ShentiStartitel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fShenti_2eproto();
  return *default_instance_;
}

Sheet_ShentiStartitel* Sheet_ShentiStartitel::default_instance_ = NULL;

Sheet_ShentiStartitel* Sheet_ShentiStartitel::New() const {
  return new Sheet_ShentiStartitel;
}

void Sheet_ShentiStartitel::Clear() {
  e_shentistartitel_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShentiStartitel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShentiStartitel E_ShentiStartitel_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShentiStartitel_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shentistartitel_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShentiStartitel_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShentiStartitel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShentiStartitel E_ShentiStartitel_List = 1;
  for (int i = 0; i < this->e_shentistartitel_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shentistartitel_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShentiStartitel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShentiStartitel E_ShentiStartitel_List = 1;
  for (int i = 0; i < this->e_shentistartitel_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shentistartitel_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShentiStartitel::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShentiStartitel E_ShentiStartitel_List = 1;
  total_size += 1 * this->e_shentistartitel_list_size();
  for (int i = 0; i < this->e_shentistartitel_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shentistartitel_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShentiStartitel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShentiStartitel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShentiStartitel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShentiStartitel::MergeFrom(const Sheet_ShentiStartitel& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shentistartitel_list_.MergeFrom(from.e_shentistartitel_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShentiStartitel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShentiStartitel::CopyFrom(const Sheet_ShentiStartitel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShentiStartitel::IsInitialized() const {

  return true;
}

void Sheet_ShentiStartitel::Swap(Sheet_ShentiStartitel* other) {
  if (other != this) {
    e_shentistartitel_list_.Swap(&other->e_shentistartitel_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShentiStartitel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShentiStartitel_descriptor_;
  metadata.reflection = Sheet_ShentiStartitel_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
