// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Taskdynamic.proto

#ifndef PROTOBUF_E_5fTaskdynamic_2eproto__INCLUDED
#define PROTOBUF_E_5fTaskdynamic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fTaskdynamic_2eproto();
void protobuf_AssignDesc_E_5fTaskdynamic_2eproto();
void protobuf_ShutdownFile_E_5fTaskdynamic_2eproto();

class E_TaskdynamicTaskdynamic;
class Sheet_TaskdynamicTaskdynamic;
class E_TaskdynamicTaskcomcond;
class Sheet_TaskdynamicTaskcomcond;
class E_TaskdynamicTasktext;
class Sheet_TaskdynamicTasktext;

// ===================================================================

class E_TaskdynamicTaskdynamic : public ::google::protobuf::Message {
 public:
  E_TaskdynamicTaskdynamic();
  virtual ~E_TaskdynamicTaskdynamic();

  E_TaskdynamicTaskdynamic(const E_TaskdynamicTaskdynamic& from);

  inline E_TaskdynamicTaskdynamic& operator=(const E_TaskdynamicTaskdynamic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_TaskdynamicTaskdynamic& default_instance();

  void Swap(E_TaskdynamicTaskdynamic* other);

  // implements Message ----------------------------------------------

  E_TaskdynamicTaskdynamic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_TaskdynamicTaskdynamic& from);
  void MergeFrom(const E_TaskdynamicTaskdynamic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_taskID = 1;
  inline bool has_m_taskid() const;
  inline void clear_m_taskid();
  static const int kMTaskIDFieldNumber = 1;
  inline ::google::protobuf::int64 m_taskid() const;
  inline void set_m_taskid(::google::protobuf::int64 value);

  // optional string m_remark = 2;
  inline bool has_m_remark() const;
  inline void clear_m_remark();
  static const int kMRemarkFieldNumber = 2;
  inline const ::std::string& m_remark() const;
  inline void set_m_remark(const ::std::string& value);
  inline void set_m_remark(const char* value);
  inline void set_m_remark(const char* value, size_t size);
  inline ::std::string* mutable_m_remark();
  inline ::std::string* release_m_remark();
  inline void set_allocated_m_remark(::std::string* m_remark);

  // optional int32 m_taskType = 3;
  inline bool has_m_tasktype() const;
  inline void clear_m_tasktype();
  static const int kMTaskTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_tasktype() const;
  inline void set_m_tasktype(::google::protobuf::int32 value);

  // optional int32 m_weights = 4;
  inline bool has_m_weights() const;
  inline void clear_m_weights();
  static const int kMWeightsFieldNumber = 4;
  inline ::google::protobuf::int32 m_weights() const;
  inline void set_m_weights(::google::protobuf::int32 value);

  // optional int32 m_minlv = 5;
  inline bool has_m_minlv() const;
  inline void clear_m_minlv();
  static const int kMMinlvFieldNumber = 5;
  inline ::google::protobuf::int32 m_minlv() const;
  inline void set_m_minlv(::google::protobuf::int32 value);

  // optional int32 m_maxlv = 6;
  inline bool has_m_maxlv() const;
  inline void clear_m_maxlv();
  static const int kMMaxlvFieldNumber = 6;
  inline ::google::protobuf::int32 m_maxlv() const;
  inline void set_m_maxlv(::google::protobuf::int32 value);

  // optional int32 m_receCount = 7;
  inline bool has_m_rececount() const;
  inline void clear_m_rececount();
  static const int kMReceCountFieldNumber = 7;
  inline ::google::protobuf::int32 m_rececount() const;
  inline void set_m_rececount(::google::protobuf::int32 value);

  // optional string m_idList = 8;
  inline bool has_m_idlist() const;
  inline void clear_m_idlist();
  static const int kMIdListFieldNumber = 8;
  inline const ::std::string& m_idlist() const;
  inline void set_m_idlist(const ::std::string& value);
  inline void set_m_idlist(const char* value);
  inline void set_m_idlist(const char* value, size_t size);
  inline ::std::string* mutable_m_idlist();
  inline ::std::string* release_m_idlist();
  inline void set_allocated_m_idlist(::std::string* m_idlist);

  // @@protoc_insertion_point(class_scope:proto_ff.E_TaskdynamicTaskdynamic)
 private:
  inline void set_has_m_taskid();
  inline void clear_has_m_taskid();
  inline void set_has_m_remark();
  inline void clear_has_m_remark();
  inline void set_has_m_tasktype();
  inline void clear_has_m_tasktype();
  inline void set_has_m_weights();
  inline void clear_has_m_weights();
  inline void set_has_m_minlv();
  inline void clear_has_m_minlv();
  inline void set_has_m_maxlv();
  inline void clear_has_m_maxlv();
  inline void set_has_m_rececount();
  inline void clear_has_m_rececount();
  inline void set_has_m_idlist();
  inline void clear_has_m_idlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_taskid_;
  ::std::string* m_remark_;
  ::google::protobuf::int32 m_tasktype_;
  ::google::protobuf::int32 m_weights_;
  ::google::protobuf::int32 m_minlv_;
  ::google::protobuf::int32 m_maxlv_;
  ::std::string* m_idlist_;
  ::google::protobuf::int32 m_rececount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskdynamic_2eproto();

  void InitAsDefaultInstance();
  static E_TaskdynamicTaskdynamic* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_TaskdynamicTaskdynamic : public ::google::protobuf::Message {
 public:
  Sheet_TaskdynamicTaskdynamic();
  virtual ~Sheet_TaskdynamicTaskdynamic();

  Sheet_TaskdynamicTaskdynamic(const Sheet_TaskdynamicTaskdynamic& from);

  inline Sheet_TaskdynamicTaskdynamic& operator=(const Sheet_TaskdynamicTaskdynamic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_TaskdynamicTaskdynamic& default_instance();

  void Swap(Sheet_TaskdynamicTaskdynamic* other);

  // implements Message ----------------------------------------------

  Sheet_TaskdynamicTaskdynamic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_TaskdynamicTaskdynamic& from);
  void MergeFrom(const Sheet_TaskdynamicTaskdynamic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_TaskdynamicTaskdynamic E_TaskdynamicTaskdynamic_List = 1;
  inline int e_taskdynamictaskdynamic_list_size() const;
  inline void clear_e_taskdynamictaskdynamic_list();
  static const int kETaskdynamicTaskdynamicListFieldNumber = 1;
  inline const ::proto_ff::E_TaskdynamicTaskdynamic& e_taskdynamictaskdynamic_list(int index) const;
  inline ::proto_ff::E_TaskdynamicTaskdynamic* mutable_e_taskdynamictaskdynamic_list(int index);
  inline ::proto_ff::E_TaskdynamicTaskdynamic* add_e_taskdynamictaskdynamic_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTaskdynamic >&
      e_taskdynamictaskdynamic_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTaskdynamic >*
      mutable_e_taskdynamictaskdynamic_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_TaskdynamicTaskdynamic)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTaskdynamic > e_taskdynamictaskdynamic_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskdynamic_2eproto();

  void InitAsDefaultInstance();
  static Sheet_TaskdynamicTaskdynamic* default_instance_;
};
// -------------------------------------------------------------------

class E_TaskdynamicTaskcomcond : public ::google::protobuf::Message {
 public:
  E_TaskdynamicTaskcomcond();
  virtual ~E_TaskdynamicTaskcomcond();

  E_TaskdynamicTaskcomcond(const E_TaskdynamicTaskcomcond& from);

  inline E_TaskdynamicTaskcomcond& operator=(const E_TaskdynamicTaskcomcond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_TaskdynamicTaskcomcond& default_instance();

  void Swap(E_TaskdynamicTaskcomcond* other);

  // implements Message ----------------------------------------------

  E_TaskdynamicTaskcomcond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_TaskdynamicTaskcomcond& from);
  void MergeFrom(const E_TaskdynamicTaskcomcond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_comcondID = 1;
  inline bool has_m_comcondid() const;
  inline void clear_m_comcondid();
  static const int kMComcondIDFieldNumber = 1;
  inline ::google::protobuf::int64 m_comcondid() const;
  inline void set_m_comcondid(::google::protobuf::int64 value);

  // optional int32 m_comcondType = 2;
  inline bool has_m_comcondtype() const;
  inline void clear_m_comcondtype();
  static const int kMComcondTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_comcondtype() const;
  inline void set_m_comcondtype(::google::protobuf::int32 value);

  // optional int64 m_param1 = 3;
  inline bool has_m_param1() const;
  inline void clear_m_param1();
  static const int kMParam1FieldNumber = 3;
  inline ::google::protobuf::int64 m_param1() const;
  inline void set_m_param1(::google::protobuf::int64 value);

  // optional int64 m_param2 = 4;
  inline bool has_m_param2() const;
  inline void clear_m_param2();
  static const int kMParam2FieldNumber = 4;
  inline ::google::protobuf::int64 m_param2() const;
  inline void set_m_param2(::google::protobuf::int64 value);

  // optional int64 m_param3 = 5;
  inline bool has_m_param3() const;
  inline void clear_m_param3();
  static const int kMParam3FieldNumber = 5;
  inline ::google::protobuf::int64 m_param3() const;
  inline void set_m_param3(::google::protobuf::int64 value);

  // optional int64 m_param4 = 6;
  inline bool has_m_param4() const;
  inline void clear_m_param4();
  static const int kMParam4FieldNumber = 6;
  inline ::google::protobuf::int64 m_param4() const;
  inline void set_m_param4(::google::protobuf::int64 value);

  // optional int64 m_param5 = 7;
  inline bool has_m_param5() const;
  inline void clear_m_param5();
  static const int kMParam5FieldNumber = 7;
  inline ::google::protobuf::int64 m_param5() const;
  inline void set_m_param5(::google::protobuf::int64 value);

  // optional int32 m_comcondRandomValue = 8;
  inline bool has_m_comcondrandomvalue() const;
  inline void clear_m_comcondrandomvalue();
  static const int kMComcondRandomValueFieldNumber = 8;
  inline ::google::protobuf::int32 m_comcondrandomvalue() const;
  inline void set_m_comcondrandomvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_TaskdynamicTaskcomcond)
 private:
  inline void set_has_m_comcondid();
  inline void clear_has_m_comcondid();
  inline void set_has_m_comcondtype();
  inline void clear_has_m_comcondtype();
  inline void set_has_m_param1();
  inline void clear_has_m_param1();
  inline void set_has_m_param2();
  inline void clear_has_m_param2();
  inline void set_has_m_param3();
  inline void clear_has_m_param3();
  inline void set_has_m_param4();
  inline void clear_has_m_param4();
  inline void set_has_m_param5();
  inline void clear_has_m_param5();
  inline void set_has_m_comcondrandomvalue();
  inline void clear_has_m_comcondrandomvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_comcondid_;
  ::google::protobuf::int64 m_param1_;
  ::google::protobuf::int64 m_param2_;
  ::google::protobuf::int64 m_param3_;
  ::google::protobuf::int32 m_comcondtype_;
  ::google::protobuf::int32 m_comcondrandomvalue_;
  ::google::protobuf::int64 m_param4_;
  ::google::protobuf::int64 m_param5_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskdynamic_2eproto();

  void InitAsDefaultInstance();
  static E_TaskdynamicTaskcomcond* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_TaskdynamicTaskcomcond : public ::google::protobuf::Message {
 public:
  Sheet_TaskdynamicTaskcomcond();
  virtual ~Sheet_TaskdynamicTaskcomcond();

  Sheet_TaskdynamicTaskcomcond(const Sheet_TaskdynamicTaskcomcond& from);

  inline Sheet_TaskdynamicTaskcomcond& operator=(const Sheet_TaskdynamicTaskcomcond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_TaskdynamicTaskcomcond& default_instance();

  void Swap(Sheet_TaskdynamicTaskcomcond* other);

  // implements Message ----------------------------------------------

  Sheet_TaskdynamicTaskcomcond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_TaskdynamicTaskcomcond& from);
  void MergeFrom(const Sheet_TaskdynamicTaskcomcond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_TaskdynamicTaskcomcond E_TaskdynamicTaskcomcond_List = 1;
  inline int e_taskdynamictaskcomcond_list_size() const;
  inline void clear_e_taskdynamictaskcomcond_list();
  static const int kETaskdynamicTaskcomcondListFieldNumber = 1;
  inline const ::proto_ff::E_TaskdynamicTaskcomcond& e_taskdynamictaskcomcond_list(int index) const;
  inline ::proto_ff::E_TaskdynamicTaskcomcond* mutable_e_taskdynamictaskcomcond_list(int index);
  inline ::proto_ff::E_TaskdynamicTaskcomcond* add_e_taskdynamictaskcomcond_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTaskcomcond >&
      e_taskdynamictaskcomcond_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTaskcomcond >*
      mutable_e_taskdynamictaskcomcond_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_TaskdynamicTaskcomcond)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTaskcomcond > e_taskdynamictaskcomcond_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskdynamic_2eproto();

  void InitAsDefaultInstance();
  static Sheet_TaskdynamicTaskcomcond* default_instance_;
};
// -------------------------------------------------------------------

class E_TaskdynamicTasktext : public ::google::protobuf::Message {
 public:
  E_TaskdynamicTasktext();
  virtual ~E_TaskdynamicTasktext();

  E_TaskdynamicTasktext(const E_TaskdynamicTasktext& from);

  inline E_TaskdynamicTasktext& operator=(const E_TaskdynamicTasktext& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_TaskdynamicTasktext& default_instance();

  void Swap(E_TaskdynamicTasktext* other);

  // implements Message ----------------------------------------------

  E_TaskdynamicTasktext* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_TaskdynamicTasktext& from);
  void MergeFrom(const E_TaskdynamicTasktext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_textID = 1;
  inline bool has_m_textid() const;
  inline void clear_m_textid();
  static const int kMTextIDFieldNumber = 1;
  inline ::google::protobuf::int64 m_textid() const;
  inline void set_m_textid(::google::protobuf::int64 value);

  // optional string m_taskType = 2;
  inline bool has_m_tasktype() const;
  inline void clear_m_tasktype();
  static const int kMTaskTypeFieldNumber = 2;
  inline const ::std::string& m_tasktype() const;
  inline void set_m_tasktype(const ::std::string& value);
  inline void set_m_tasktype(const char* value);
  inline void set_m_tasktype(const char* value, size_t size);
  inline ::std::string* mutable_m_tasktype();
  inline ::std::string* release_m_tasktype();
  inline void set_allocated_m_tasktype(::std::string* m_tasktype);

  // optional int32 m_comcondType = 3;
  inline bool has_m_comcondtype() const;
  inline void clear_m_comcondtype();
  static const int kMComcondTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_comcondtype() const;
  inline void set_m_comcondtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_TaskdynamicTasktext)
 private:
  inline void set_has_m_textid();
  inline void clear_has_m_textid();
  inline void set_has_m_tasktype();
  inline void clear_has_m_tasktype();
  inline void set_has_m_comcondtype();
  inline void clear_has_m_comcondtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_textid_;
  ::std::string* m_tasktype_;
  ::google::protobuf::int32 m_comcondtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskdynamic_2eproto();

  void InitAsDefaultInstance();
  static E_TaskdynamicTasktext* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_TaskdynamicTasktext : public ::google::protobuf::Message {
 public:
  Sheet_TaskdynamicTasktext();
  virtual ~Sheet_TaskdynamicTasktext();

  Sheet_TaskdynamicTasktext(const Sheet_TaskdynamicTasktext& from);

  inline Sheet_TaskdynamicTasktext& operator=(const Sheet_TaskdynamicTasktext& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_TaskdynamicTasktext& default_instance();

  void Swap(Sheet_TaskdynamicTasktext* other);

  // implements Message ----------------------------------------------

  Sheet_TaskdynamicTasktext* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_TaskdynamicTasktext& from);
  void MergeFrom(const Sheet_TaskdynamicTasktext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_TaskdynamicTasktext E_TaskdynamicTasktext_List = 1;
  inline int e_taskdynamictasktext_list_size() const;
  inline void clear_e_taskdynamictasktext_list();
  static const int kETaskdynamicTasktextListFieldNumber = 1;
  inline const ::proto_ff::E_TaskdynamicTasktext& e_taskdynamictasktext_list(int index) const;
  inline ::proto_ff::E_TaskdynamicTasktext* mutable_e_taskdynamictasktext_list(int index);
  inline ::proto_ff::E_TaskdynamicTasktext* add_e_taskdynamictasktext_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTasktext >&
      e_taskdynamictasktext_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTasktext >*
      mutable_e_taskdynamictasktext_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_TaskdynamicTasktext)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTasktext > e_taskdynamictasktext_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskdynamic_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskdynamic_2eproto();

  void InitAsDefaultInstance();
  static Sheet_TaskdynamicTasktext* default_instance_;
};
// ===================================================================


// ===================================================================

// E_TaskdynamicTaskdynamic

// optional int64 m_taskID = 1;
inline bool E_TaskdynamicTaskdynamic::has_m_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_TaskdynamicTaskdynamic::set_has_m_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_TaskdynamicTaskdynamic::clear_has_m_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_TaskdynamicTaskdynamic::clear_m_taskid() {
  m_taskid_ = GOOGLE_LONGLONG(0);
  clear_has_m_taskid();
}
inline ::google::protobuf::int64 E_TaskdynamicTaskdynamic::m_taskid() const {
  return m_taskid_;
}
inline void E_TaskdynamicTaskdynamic::set_m_taskid(::google::protobuf::int64 value) {
  set_has_m_taskid();
  m_taskid_ = value;
}

// optional string m_remark = 2;
inline bool E_TaskdynamicTaskdynamic::has_m_remark() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_TaskdynamicTaskdynamic::set_has_m_remark() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_TaskdynamicTaskdynamic::clear_has_m_remark() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_TaskdynamicTaskdynamic::clear_m_remark() {
  if (m_remark_ != &::google::protobuf::internal::kEmptyString) {
    m_remark_->clear();
  }
  clear_has_m_remark();
}
inline const ::std::string& E_TaskdynamicTaskdynamic::m_remark() const {
  return *m_remark_;
}
inline void E_TaskdynamicTaskdynamic::set_m_remark(const ::std::string& value) {
  set_has_m_remark();
  if (m_remark_ == &::google::protobuf::internal::kEmptyString) {
    m_remark_ = new ::std::string;
  }
  m_remark_->assign(value);
}
inline void E_TaskdynamicTaskdynamic::set_m_remark(const char* value) {
  set_has_m_remark();
  if (m_remark_ == &::google::protobuf::internal::kEmptyString) {
    m_remark_ = new ::std::string;
  }
  m_remark_->assign(value);
}
inline void E_TaskdynamicTaskdynamic::set_m_remark(const char* value, size_t size) {
  set_has_m_remark();
  if (m_remark_ == &::google::protobuf::internal::kEmptyString) {
    m_remark_ = new ::std::string;
  }
  m_remark_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_TaskdynamicTaskdynamic::mutable_m_remark() {
  set_has_m_remark();
  if (m_remark_ == &::google::protobuf::internal::kEmptyString) {
    m_remark_ = new ::std::string;
  }
  return m_remark_;
}
inline ::std::string* E_TaskdynamicTaskdynamic::release_m_remark() {
  clear_has_m_remark();
  if (m_remark_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_remark_;
    m_remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_TaskdynamicTaskdynamic::set_allocated_m_remark(::std::string* m_remark) {
  if (m_remark_ != &::google::protobuf::internal::kEmptyString) {
    delete m_remark_;
  }
  if (m_remark) {
    set_has_m_remark();
    m_remark_ = m_remark;
  } else {
    clear_has_m_remark();
    m_remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_taskType = 3;
inline bool E_TaskdynamicTaskdynamic::has_m_tasktype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_TaskdynamicTaskdynamic::set_has_m_tasktype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_TaskdynamicTaskdynamic::clear_has_m_tasktype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_TaskdynamicTaskdynamic::clear_m_tasktype() {
  m_tasktype_ = 0;
  clear_has_m_tasktype();
}
inline ::google::protobuf::int32 E_TaskdynamicTaskdynamic::m_tasktype() const {
  return m_tasktype_;
}
inline void E_TaskdynamicTaskdynamic::set_m_tasktype(::google::protobuf::int32 value) {
  set_has_m_tasktype();
  m_tasktype_ = value;
}

// optional int32 m_weights = 4;
inline bool E_TaskdynamicTaskdynamic::has_m_weights() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_TaskdynamicTaskdynamic::set_has_m_weights() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_TaskdynamicTaskdynamic::clear_has_m_weights() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_TaskdynamicTaskdynamic::clear_m_weights() {
  m_weights_ = 0;
  clear_has_m_weights();
}
inline ::google::protobuf::int32 E_TaskdynamicTaskdynamic::m_weights() const {
  return m_weights_;
}
inline void E_TaskdynamicTaskdynamic::set_m_weights(::google::protobuf::int32 value) {
  set_has_m_weights();
  m_weights_ = value;
}

// optional int32 m_minlv = 5;
inline bool E_TaskdynamicTaskdynamic::has_m_minlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_TaskdynamicTaskdynamic::set_has_m_minlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_TaskdynamicTaskdynamic::clear_has_m_minlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_TaskdynamicTaskdynamic::clear_m_minlv() {
  m_minlv_ = 0;
  clear_has_m_minlv();
}
inline ::google::protobuf::int32 E_TaskdynamicTaskdynamic::m_minlv() const {
  return m_minlv_;
}
inline void E_TaskdynamicTaskdynamic::set_m_minlv(::google::protobuf::int32 value) {
  set_has_m_minlv();
  m_minlv_ = value;
}

// optional int32 m_maxlv = 6;
inline bool E_TaskdynamicTaskdynamic::has_m_maxlv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_TaskdynamicTaskdynamic::set_has_m_maxlv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_TaskdynamicTaskdynamic::clear_has_m_maxlv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_TaskdynamicTaskdynamic::clear_m_maxlv() {
  m_maxlv_ = 0;
  clear_has_m_maxlv();
}
inline ::google::protobuf::int32 E_TaskdynamicTaskdynamic::m_maxlv() const {
  return m_maxlv_;
}
inline void E_TaskdynamicTaskdynamic::set_m_maxlv(::google::protobuf::int32 value) {
  set_has_m_maxlv();
  m_maxlv_ = value;
}

// optional int32 m_receCount = 7;
inline bool E_TaskdynamicTaskdynamic::has_m_rececount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_TaskdynamicTaskdynamic::set_has_m_rececount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_TaskdynamicTaskdynamic::clear_has_m_rececount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_TaskdynamicTaskdynamic::clear_m_rececount() {
  m_rececount_ = 0;
  clear_has_m_rececount();
}
inline ::google::protobuf::int32 E_TaskdynamicTaskdynamic::m_rececount() const {
  return m_rececount_;
}
inline void E_TaskdynamicTaskdynamic::set_m_rececount(::google::protobuf::int32 value) {
  set_has_m_rececount();
  m_rececount_ = value;
}

// optional string m_idList = 8;
inline bool E_TaskdynamicTaskdynamic::has_m_idlist() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_TaskdynamicTaskdynamic::set_has_m_idlist() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_TaskdynamicTaskdynamic::clear_has_m_idlist() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_TaskdynamicTaskdynamic::clear_m_idlist() {
  if (m_idlist_ != &::google::protobuf::internal::kEmptyString) {
    m_idlist_->clear();
  }
  clear_has_m_idlist();
}
inline const ::std::string& E_TaskdynamicTaskdynamic::m_idlist() const {
  return *m_idlist_;
}
inline void E_TaskdynamicTaskdynamic::set_m_idlist(const ::std::string& value) {
  set_has_m_idlist();
  if (m_idlist_ == &::google::protobuf::internal::kEmptyString) {
    m_idlist_ = new ::std::string;
  }
  m_idlist_->assign(value);
}
inline void E_TaskdynamicTaskdynamic::set_m_idlist(const char* value) {
  set_has_m_idlist();
  if (m_idlist_ == &::google::protobuf::internal::kEmptyString) {
    m_idlist_ = new ::std::string;
  }
  m_idlist_->assign(value);
}
inline void E_TaskdynamicTaskdynamic::set_m_idlist(const char* value, size_t size) {
  set_has_m_idlist();
  if (m_idlist_ == &::google::protobuf::internal::kEmptyString) {
    m_idlist_ = new ::std::string;
  }
  m_idlist_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_TaskdynamicTaskdynamic::mutable_m_idlist() {
  set_has_m_idlist();
  if (m_idlist_ == &::google::protobuf::internal::kEmptyString) {
    m_idlist_ = new ::std::string;
  }
  return m_idlist_;
}
inline ::std::string* E_TaskdynamicTaskdynamic::release_m_idlist() {
  clear_has_m_idlist();
  if (m_idlist_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_idlist_;
    m_idlist_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_TaskdynamicTaskdynamic::set_allocated_m_idlist(::std::string* m_idlist) {
  if (m_idlist_ != &::google::protobuf::internal::kEmptyString) {
    delete m_idlist_;
  }
  if (m_idlist) {
    set_has_m_idlist();
    m_idlist_ = m_idlist;
  } else {
    clear_has_m_idlist();
    m_idlist_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_TaskdynamicTaskdynamic

// repeated .proto_ff.E_TaskdynamicTaskdynamic E_TaskdynamicTaskdynamic_List = 1;
inline int Sheet_TaskdynamicTaskdynamic::e_taskdynamictaskdynamic_list_size() const {
  return e_taskdynamictaskdynamic_list_.size();
}
inline void Sheet_TaskdynamicTaskdynamic::clear_e_taskdynamictaskdynamic_list() {
  e_taskdynamictaskdynamic_list_.Clear();
}
inline const ::proto_ff::E_TaskdynamicTaskdynamic& Sheet_TaskdynamicTaskdynamic::e_taskdynamictaskdynamic_list(int index) const {
  return e_taskdynamictaskdynamic_list_.Get(index);
}
inline ::proto_ff::E_TaskdynamicTaskdynamic* Sheet_TaskdynamicTaskdynamic::mutable_e_taskdynamictaskdynamic_list(int index) {
  return e_taskdynamictaskdynamic_list_.Mutable(index);
}
inline ::proto_ff::E_TaskdynamicTaskdynamic* Sheet_TaskdynamicTaskdynamic::add_e_taskdynamictaskdynamic_list() {
  return e_taskdynamictaskdynamic_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTaskdynamic >&
Sheet_TaskdynamicTaskdynamic::e_taskdynamictaskdynamic_list() const {
  return e_taskdynamictaskdynamic_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTaskdynamic >*
Sheet_TaskdynamicTaskdynamic::mutable_e_taskdynamictaskdynamic_list() {
  return &e_taskdynamictaskdynamic_list_;
}

// -------------------------------------------------------------------

// E_TaskdynamicTaskcomcond

// optional int64 m_comcondID = 1;
inline bool E_TaskdynamicTaskcomcond::has_m_comcondid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_TaskdynamicTaskcomcond::set_has_m_comcondid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_TaskdynamicTaskcomcond::clear_has_m_comcondid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_TaskdynamicTaskcomcond::clear_m_comcondid() {
  m_comcondid_ = GOOGLE_LONGLONG(0);
  clear_has_m_comcondid();
}
inline ::google::protobuf::int64 E_TaskdynamicTaskcomcond::m_comcondid() const {
  return m_comcondid_;
}
inline void E_TaskdynamicTaskcomcond::set_m_comcondid(::google::protobuf::int64 value) {
  set_has_m_comcondid();
  m_comcondid_ = value;
}

// optional int32 m_comcondType = 2;
inline bool E_TaskdynamicTaskcomcond::has_m_comcondtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_TaskdynamicTaskcomcond::set_has_m_comcondtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_TaskdynamicTaskcomcond::clear_has_m_comcondtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_TaskdynamicTaskcomcond::clear_m_comcondtype() {
  m_comcondtype_ = 0;
  clear_has_m_comcondtype();
}
inline ::google::protobuf::int32 E_TaskdynamicTaskcomcond::m_comcondtype() const {
  return m_comcondtype_;
}
inline void E_TaskdynamicTaskcomcond::set_m_comcondtype(::google::protobuf::int32 value) {
  set_has_m_comcondtype();
  m_comcondtype_ = value;
}

// optional int64 m_param1 = 3;
inline bool E_TaskdynamicTaskcomcond::has_m_param1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_TaskdynamicTaskcomcond::set_has_m_param1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_TaskdynamicTaskcomcond::clear_has_m_param1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_TaskdynamicTaskcomcond::clear_m_param1() {
  m_param1_ = GOOGLE_LONGLONG(0);
  clear_has_m_param1();
}
inline ::google::protobuf::int64 E_TaskdynamicTaskcomcond::m_param1() const {
  return m_param1_;
}
inline void E_TaskdynamicTaskcomcond::set_m_param1(::google::protobuf::int64 value) {
  set_has_m_param1();
  m_param1_ = value;
}

// optional int64 m_param2 = 4;
inline bool E_TaskdynamicTaskcomcond::has_m_param2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_TaskdynamicTaskcomcond::set_has_m_param2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_TaskdynamicTaskcomcond::clear_has_m_param2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_TaskdynamicTaskcomcond::clear_m_param2() {
  m_param2_ = GOOGLE_LONGLONG(0);
  clear_has_m_param2();
}
inline ::google::protobuf::int64 E_TaskdynamicTaskcomcond::m_param2() const {
  return m_param2_;
}
inline void E_TaskdynamicTaskcomcond::set_m_param2(::google::protobuf::int64 value) {
  set_has_m_param2();
  m_param2_ = value;
}

// optional int64 m_param3 = 5;
inline bool E_TaskdynamicTaskcomcond::has_m_param3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_TaskdynamicTaskcomcond::set_has_m_param3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_TaskdynamicTaskcomcond::clear_has_m_param3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_TaskdynamicTaskcomcond::clear_m_param3() {
  m_param3_ = GOOGLE_LONGLONG(0);
  clear_has_m_param3();
}
inline ::google::protobuf::int64 E_TaskdynamicTaskcomcond::m_param3() const {
  return m_param3_;
}
inline void E_TaskdynamicTaskcomcond::set_m_param3(::google::protobuf::int64 value) {
  set_has_m_param3();
  m_param3_ = value;
}

// optional int64 m_param4 = 6;
inline bool E_TaskdynamicTaskcomcond::has_m_param4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_TaskdynamicTaskcomcond::set_has_m_param4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_TaskdynamicTaskcomcond::clear_has_m_param4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_TaskdynamicTaskcomcond::clear_m_param4() {
  m_param4_ = GOOGLE_LONGLONG(0);
  clear_has_m_param4();
}
inline ::google::protobuf::int64 E_TaskdynamicTaskcomcond::m_param4() const {
  return m_param4_;
}
inline void E_TaskdynamicTaskcomcond::set_m_param4(::google::protobuf::int64 value) {
  set_has_m_param4();
  m_param4_ = value;
}

// optional int64 m_param5 = 7;
inline bool E_TaskdynamicTaskcomcond::has_m_param5() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_TaskdynamicTaskcomcond::set_has_m_param5() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_TaskdynamicTaskcomcond::clear_has_m_param5() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_TaskdynamicTaskcomcond::clear_m_param5() {
  m_param5_ = GOOGLE_LONGLONG(0);
  clear_has_m_param5();
}
inline ::google::protobuf::int64 E_TaskdynamicTaskcomcond::m_param5() const {
  return m_param5_;
}
inline void E_TaskdynamicTaskcomcond::set_m_param5(::google::protobuf::int64 value) {
  set_has_m_param5();
  m_param5_ = value;
}

// optional int32 m_comcondRandomValue = 8;
inline bool E_TaskdynamicTaskcomcond::has_m_comcondrandomvalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_TaskdynamicTaskcomcond::set_has_m_comcondrandomvalue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_TaskdynamicTaskcomcond::clear_has_m_comcondrandomvalue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_TaskdynamicTaskcomcond::clear_m_comcondrandomvalue() {
  m_comcondrandomvalue_ = 0;
  clear_has_m_comcondrandomvalue();
}
inline ::google::protobuf::int32 E_TaskdynamicTaskcomcond::m_comcondrandomvalue() const {
  return m_comcondrandomvalue_;
}
inline void E_TaskdynamicTaskcomcond::set_m_comcondrandomvalue(::google::protobuf::int32 value) {
  set_has_m_comcondrandomvalue();
  m_comcondrandomvalue_ = value;
}

// -------------------------------------------------------------------

// Sheet_TaskdynamicTaskcomcond

// repeated .proto_ff.E_TaskdynamicTaskcomcond E_TaskdynamicTaskcomcond_List = 1;
inline int Sheet_TaskdynamicTaskcomcond::e_taskdynamictaskcomcond_list_size() const {
  return e_taskdynamictaskcomcond_list_.size();
}
inline void Sheet_TaskdynamicTaskcomcond::clear_e_taskdynamictaskcomcond_list() {
  e_taskdynamictaskcomcond_list_.Clear();
}
inline const ::proto_ff::E_TaskdynamicTaskcomcond& Sheet_TaskdynamicTaskcomcond::e_taskdynamictaskcomcond_list(int index) const {
  return e_taskdynamictaskcomcond_list_.Get(index);
}
inline ::proto_ff::E_TaskdynamicTaskcomcond* Sheet_TaskdynamicTaskcomcond::mutable_e_taskdynamictaskcomcond_list(int index) {
  return e_taskdynamictaskcomcond_list_.Mutable(index);
}
inline ::proto_ff::E_TaskdynamicTaskcomcond* Sheet_TaskdynamicTaskcomcond::add_e_taskdynamictaskcomcond_list() {
  return e_taskdynamictaskcomcond_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTaskcomcond >&
Sheet_TaskdynamicTaskcomcond::e_taskdynamictaskcomcond_list() const {
  return e_taskdynamictaskcomcond_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTaskcomcond >*
Sheet_TaskdynamicTaskcomcond::mutable_e_taskdynamictaskcomcond_list() {
  return &e_taskdynamictaskcomcond_list_;
}

// -------------------------------------------------------------------

// E_TaskdynamicTasktext

// optional int64 m_textID = 1;
inline bool E_TaskdynamicTasktext::has_m_textid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_TaskdynamicTasktext::set_has_m_textid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_TaskdynamicTasktext::clear_has_m_textid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_TaskdynamicTasktext::clear_m_textid() {
  m_textid_ = GOOGLE_LONGLONG(0);
  clear_has_m_textid();
}
inline ::google::protobuf::int64 E_TaskdynamicTasktext::m_textid() const {
  return m_textid_;
}
inline void E_TaskdynamicTasktext::set_m_textid(::google::protobuf::int64 value) {
  set_has_m_textid();
  m_textid_ = value;
}

// optional string m_taskType = 2;
inline bool E_TaskdynamicTasktext::has_m_tasktype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_TaskdynamicTasktext::set_has_m_tasktype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_TaskdynamicTasktext::clear_has_m_tasktype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_TaskdynamicTasktext::clear_m_tasktype() {
  if (m_tasktype_ != &::google::protobuf::internal::kEmptyString) {
    m_tasktype_->clear();
  }
  clear_has_m_tasktype();
}
inline const ::std::string& E_TaskdynamicTasktext::m_tasktype() const {
  return *m_tasktype_;
}
inline void E_TaskdynamicTasktext::set_m_tasktype(const ::std::string& value) {
  set_has_m_tasktype();
  if (m_tasktype_ == &::google::protobuf::internal::kEmptyString) {
    m_tasktype_ = new ::std::string;
  }
  m_tasktype_->assign(value);
}
inline void E_TaskdynamicTasktext::set_m_tasktype(const char* value) {
  set_has_m_tasktype();
  if (m_tasktype_ == &::google::protobuf::internal::kEmptyString) {
    m_tasktype_ = new ::std::string;
  }
  m_tasktype_->assign(value);
}
inline void E_TaskdynamicTasktext::set_m_tasktype(const char* value, size_t size) {
  set_has_m_tasktype();
  if (m_tasktype_ == &::google::protobuf::internal::kEmptyString) {
    m_tasktype_ = new ::std::string;
  }
  m_tasktype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_TaskdynamicTasktext::mutable_m_tasktype() {
  set_has_m_tasktype();
  if (m_tasktype_ == &::google::protobuf::internal::kEmptyString) {
    m_tasktype_ = new ::std::string;
  }
  return m_tasktype_;
}
inline ::std::string* E_TaskdynamicTasktext::release_m_tasktype() {
  clear_has_m_tasktype();
  if (m_tasktype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_tasktype_;
    m_tasktype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_TaskdynamicTasktext::set_allocated_m_tasktype(::std::string* m_tasktype) {
  if (m_tasktype_ != &::google::protobuf::internal::kEmptyString) {
    delete m_tasktype_;
  }
  if (m_tasktype) {
    set_has_m_tasktype();
    m_tasktype_ = m_tasktype;
  } else {
    clear_has_m_tasktype();
    m_tasktype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_comcondType = 3;
inline bool E_TaskdynamicTasktext::has_m_comcondtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_TaskdynamicTasktext::set_has_m_comcondtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_TaskdynamicTasktext::clear_has_m_comcondtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_TaskdynamicTasktext::clear_m_comcondtype() {
  m_comcondtype_ = 0;
  clear_has_m_comcondtype();
}
inline ::google::protobuf::int32 E_TaskdynamicTasktext::m_comcondtype() const {
  return m_comcondtype_;
}
inline void E_TaskdynamicTasktext::set_m_comcondtype(::google::protobuf::int32 value) {
  set_has_m_comcondtype();
  m_comcondtype_ = value;
}

// -------------------------------------------------------------------

// Sheet_TaskdynamicTasktext

// repeated .proto_ff.E_TaskdynamicTasktext E_TaskdynamicTasktext_List = 1;
inline int Sheet_TaskdynamicTasktext::e_taskdynamictasktext_list_size() const {
  return e_taskdynamictasktext_list_.size();
}
inline void Sheet_TaskdynamicTasktext::clear_e_taskdynamictasktext_list() {
  e_taskdynamictasktext_list_.Clear();
}
inline const ::proto_ff::E_TaskdynamicTasktext& Sheet_TaskdynamicTasktext::e_taskdynamictasktext_list(int index) const {
  return e_taskdynamictasktext_list_.Get(index);
}
inline ::proto_ff::E_TaskdynamicTasktext* Sheet_TaskdynamicTasktext::mutable_e_taskdynamictasktext_list(int index) {
  return e_taskdynamictasktext_list_.Mutable(index);
}
inline ::proto_ff::E_TaskdynamicTasktext* Sheet_TaskdynamicTasktext::add_e_taskdynamictasktext_list() {
  return e_taskdynamictasktext_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTasktext >&
Sheet_TaskdynamicTasktext::e_taskdynamictasktext_list() const {
  return e_taskdynamictasktext_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskdynamicTasktext >*
Sheet_TaskdynamicTasktext::mutable_e_taskdynamictasktext_list() {
  return &e_taskdynamictasktext_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fTaskdynamic_2eproto__INCLUDED
