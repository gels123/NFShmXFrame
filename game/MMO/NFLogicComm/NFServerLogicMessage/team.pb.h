// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: team.proto

#ifndef PROTOBUF_team_2eproto__INCLUDED
#define PROTOBUF_team_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_team_2eproto();
void protobuf_AssignDesc_team_2eproto();
void protobuf_ShutdownFile_team_2eproto();

class teamteam;
class Sheet_teamteam;

// ===================================================================

class teamteam : public ::google::protobuf::Message {
 public:
  teamteam();
  virtual ~teamteam();

  teamteam(const teamteam& from);

  inline teamteam& operator=(const teamteam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const teamteam& default_instance();

  void Swap(teamteam* other);

  // implements Message ----------------------------------------------

  teamteam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const teamteam& from);
  void MergeFrom(const teamteam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TeamObjectID = 1;
  inline bool has_teamobjectid() const;
  inline void clear_teamobjectid();
  static const int kTeamObjectIDFieldNumber = 1;
  inline ::google::protobuf::int32 teamobjectid() const;
  inline void set_teamobjectid(::google::protobuf::int32 value);

  // optional int32 FObjectNameID = 2;
  inline bool has_fobjectnameid() const;
  inline void clear_fobjectnameid();
  static const int kFObjectNameIDFieldNumber = 2;
  inline ::google::protobuf::int32 fobjectnameid() const;
  inline void set_fobjectnameid(::google::protobuf::int32 value);

  // optional int32 SObjectNameID = 3;
  inline bool has_sobjectnameid() const;
  inline void clear_sobjectnameid();
  static const int kSObjectNameIDFieldNumber = 3;
  inline ::google::protobuf::int32 sobjectnameid() const;
  inline void set_sobjectnameid(::google::protobuf::int32 value);

  // optional int64 duplicateId = 4;
  inline bool has_duplicateid() const;
  inline void clear_duplicateid();
  static const int kDuplicateIdFieldNumber = 4;
  inline ::google::protobuf::int64 duplicateid() const;
  inline void set_duplicateid(::google::protobuf::int64 value);

  // optional int64 activityId = 5;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIdFieldNumber = 5;
  inline ::google::protobuf::int64 activityid() const;
  inline void set_activityid(::google::protobuf::int64 value);

  // optional int32 LowLV = 6;
  inline bool has_lowlv() const;
  inline void clear_lowlv();
  static const int kLowLVFieldNumber = 6;
  inline ::google::protobuf::int32 lowlv() const;
  inline void set_lowlv(::google::protobuf::int32 value);

  // optional int32 UpLV = 7;
  inline bool has_uplv() const;
  inline void clear_uplv();
  static const int kUpLVFieldNumber = 7;
  inline ::google::protobuf::int32 uplv() const;
  inline void set_uplv(::google::protobuf::int32 value);

  // optional int32 isAutoMatch = 8;
  inline bool has_isautomatch() const;
  inline void clear_isautomatch();
  static const int kIsAutoMatchFieldNumber = 8;
  inline ::google::protobuf::int32 isautomatch() const;
  inline void set_isautomatch(::google::protobuf::int32 value);

  // optional int32 speakChannel = 9;
  inline bool has_speakchannel() const;
  inline void clear_speakchannel();
  static const int kSpeakChannelFieldNumber = 9;
  inline ::google::protobuf::int32 speakchannel() const;
  inline void set_speakchannel(::google::protobuf::int32 value);

  // optional int32 teamnumber = 10;
  inline bool has_teamnumber() const;
  inline void clear_teamnumber();
  static const int kTeamnumberFieldNumber = 10;
  inline ::google::protobuf::int32 teamnumber() const;
  inline void set_teamnumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.teamteam)
 private:
  inline void set_has_teamobjectid();
  inline void clear_has_teamobjectid();
  inline void set_has_fobjectnameid();
  inline void clear_has_fobjectnameid();
  inline void set_has_sobjectnameid();
  inline void clear_has_sobjectnameid();
  inline void set_has_duplicateid();
  inline void clear_has_duplicateid();
  inline void set_has_activityid();
  inline void clear_has_activityid();
  inline void set_has_lowlv();
  inline void clear_has_lowlv();
  inline void set_has_uplv();
  inline void clear_has_uplv();
  inline void set_has_isautomatch();
  inline void clear_has_isautomatch();
  inline void set_has_speakchannel();
  inline void clear_has_speakchannel();
  inline void set_has_teamnumber();
  inline void clear_has_teamnumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 teamobjectid_;
  ::google::protobuf::int32 fobjectnameid_;
  ::google::protobuf::int64 duplicateid_;
  ::google::protobuf::int32 sobjectnameid_;
  ::google::protobuf::int32 lowlv_;
  ::google::protobuf::int64 activityid_;
  ::google::protobuf::int32 uplv_;
  ::google::protobuf::int32 isautomatch_;
  ::google::protobuf::int32 speakchannel_;
  ::google::protobuf::int32 teamnumber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static teamteam* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_teamteam : public ::google::protobuf::Message {
 public:
  Sheet_teamteam();
  virtual ~Sheet_teamteam();

  Sheet_teamteam(const Sheet_teamteam& from);

  inline Sheet_teamteam& operator=(const Sheet_teamteam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_teamteam& default_instance();

  void Swap(Sheet_teamteam* other);

  // implements Message ----------------------------------------------

  Sheet_teamteam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_teamteam& from);
  void MergeFrom(const Sheet_teamteam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.teamteam teamteam_List = 1;
  inline int teamteam_list_size() const;
  inline void clear_teamteam_list();
  static const int kTeamteamListFieldNumber = 1;
  inline const ::proto_ff::teamteam& teamteam_list(int index) const;
  inline ::proto_ff::teamteam* mutable_teamteam_list(int index);
  inline ::proto_ff::teamteam* add_teamteam_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::teamteam >&
      teamteam_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::teamteam >*
      mutable_teamteam_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_teamteam)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::teamteam > teamteam_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Sheet_teamteam* default_instance_;
};
// ===================================================================


// ===================================================================

// teamteam

// optional int32 TeamObjectID = 1;
inline bool teamteam::has_teamobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void teamteam::set_has_teamobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void teamteam::clear_has_teamobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void teamteam::clear_teamobjectid() {
  teamobjectid_ = 0;
  clear_has_teamobjectid();
}
inline ::google::protobuf::int32 teamteam::teamobjectid() const {
  return teamobjectid_;
}
inline void teamteam::set_teamobjectid(::google::protobuf::int32 value) {
  set_has_teamobjectid();
  teamobjectid_ = value;
}

// optional int32 FObjectNameID = 2;
inline bool teamteam::has_fobjectnameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void teamteam::set_has_fobjectnameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void teamteam::clear_has_fobjectnameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void teamteam::clear_fobjectnameid() {
  fobjectnameid_ = 0;
  clear_has_fobjectnameid();
}
inline ::google::protobuf::int32 teamteam::fobjectnameid() const {
  return fobjectnameid_;
}
inline void teamteam::set_fobjectnameid(::google::protobuf::int32 value) {
  set_has_fobjectnameid();
  fobjectnameid_ = value;
}

// optional int32 SObjectNameID = 3;
inline bool teamteam::has_sobjectnameid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void teamteam::set_has_sobjectnameid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void teamteam::clear_has_sobjectnameid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void teamteam::clear_sobjectnameid() {
  sobjectnameid_ = 0;
  clear_has_sobjectnameid();
}
inline ::google::protobuf::int32 teamteam::sobjectnameid() const {
  return sobjectnameid_;
}
inline void teamteam::set_sobjectnameid(::google::protobuf::int32 value) {
  set_has_sobjectnameid();
  sobjectnameid_ = value;
}

// optional int64 duplicateId = 4;
inline bool teamteam::has_duplicateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void teamteam::set_has_duplicateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void teamteam::clear_has_duplicateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void teamteam::clear_duplicateid() {
  duplicateid_ = GOOGLE_LONGLONG(0);
  clear_has_duplicateid();
}
inline ::google::protobuf::int64 teamteam::duplicateid() const {
  return duplicateid_;
}
inline void teamteam::set_duplicateid(::google::protobuf::int64 value) {
  set_has_duplicateid();
  duplicateid_ = value;
}

// optional int64 activityId = 5;
inline bool teamteam::has_activityid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void teamteam::set_has_activityid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void teamteam::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void teamteam::clear_activityid() {
  activityid_ = GOOGLE_LONGLONG(0);
  clear_has_activityid();
}
inline ::google::protobuf::int64 teamteam::activityid() const {
  return activityid_;
}
inline void teamteam::set_activityid(::google::protobuf::int64 value) {
  set_has_activityid();
  activityid_ = value;
}

// optional int32 LowLV = 6;
inline bool teamteam::has_lowlv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void teamteam::set_has_lowlv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void teamteam::clear_has_lowlv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void teamteam::clear_lowlv() {
  lowlv_ = 0;
  clear_has_lowlv();
}
inline ::google::protobuf::int32 teamteam::lowlv() const {
  return lowlv_;
}
inline void teamteam::set_lowlv(::google::protobuf::int32 value) {
  set_has_lowlv();
  lowlv_ = value;
}

// optional int32 UpLV = 7;
inline bool teamteam::has_uplv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void teamteam::set_has_uplv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void teamteam::clear_has_uplv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void teamteam::clear_uplv() {
  uplv_ = 0;
  clear_has_uplv();
}
inline ::google::protobuf::int32 teamteam::uplv() const {
  return uplv_;
}
inline void teamteam::set_uplv(::google::protobuf::int32 value) {
  set_has_uplv();
  uplv_ = value;
}

// optional int32 isAutoMatch = 8;
inline bool teamteam::has_isautomatch() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void teamteam::set_has_isautomatch() {
  _has_bits_[0] |= 0x00000080u;
}
inline void teamteam::clear_has_isautomatch() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void teamteam::clear_isautomatch() {
  isautomatch_ = 0;
  clear_has_isautomatch();
}
inline ::google::protobuf::int32 teamteam::isautomatch() const {
  return isautomatch_;
}
inline void teamteam::set_isautomatch(::google::protobuf::int32 value) {
  set_has_isautomatch();
  isautomatch_ = value;
}

// optional int32 speakChannel = 9;
inline bool teamteam::has_speakchannel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void teamteam::set_has_speakchannel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void teamteam::clear_has_speakchannel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void teamteam::clear_speakchannel() {
  speakchannel_ = 0;
  clear_has_speakchannel();
}
inline ::google::protobuf::int32 teamteam::speakchannel() const {
  return speakchannel_;
}
inline void teamteam::set_speakchannel(::google::protobuf::int32 value) {
  set_has_speakchannel();
  speakchannel_ = value;
}

// optional int32 teamnumber = 10;
inline bool teamteam::has_teamnumber() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void teamteam::set_has_teamnumber() {
  _has_bits_[0] |= 0x00000200u;
}
inline void teamteam::clear_has_teamnumber() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void teamteam::clear_teamnumber() {
  teamnumber_ = 0;
  clear_has_teamnumber();
}
inline ::google::protobuf::int32 teamteam::teamnumber() const {
  return teamnumber_;
}
inline void teamteam::set_teamnumber(::google::protobuf::int32 value) {
  set_has_teamnumber();
  teamnumber_ = value;
}

// -------------------------------------------------------------------

// Sheet_teamteam

// repeated .proto_ff.teamteam teamteam_List = 1;
inline int Sheet_teamteam::teamteam_list_size() const {
  return teamteam_list_.size();
}
inline void Sheet_teamteam::clear_teamteam_list() {
  teamteam_list_.Clear();
}
inline const ::proto_ff::teamteam& Sheet_teamteam::teamteam_list(int index) const {
  return teamteam_list_.Get(index);
}
inline ::proto_ff::teamteam* Sheet_teamteam::mutable_teamteam_list(int index) {
  return teamteam_list_.Mutable(index);
}
inline ::proto_ff::teamteam* Sheet_teamteam::add_teamteam_list() {
  return teamteam_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::teamteam >&
Sheet_teamteam::teamteam_list() const {
  return teamteam_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::teamteam >*
Sheet_teamteam::mutable_teamteam_list() {
  return &teamteam_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_team_2eproto__INCLUDED
