// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Dragonsoul.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Dragonsoul.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_DragonsoulHole_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulHole_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonsoulHole_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonsoulHole_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulOfferexpQualityDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulOfferexpQualityDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulOfferexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulOfferexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonsoulOfferexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonsoulOfferexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulStrongexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulStrongexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonsoulStrongexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonsoulStrongexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulFlyexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulFlyexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonsoulFlyexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonsoulFlyexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulFlyatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulFlyatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonsoulFlyatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonsoulFlyatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulFlyTypeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulFlyTypeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulFly_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulFly_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonsoulFly_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonsoulFly_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulAwakeAwakeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulAwakeAwakeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulAwake_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulAwake_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonsoulAwake_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonsoulAwake_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulName_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonsoulName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonsoulName_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulStarcollectAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulStarcollectAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_DragonsoulStarcollect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_DragonsoulStarcollect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_DragonsoulStarcollect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_DragonsoulStarcollect_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fDragonsoul_2eproto() {
  protobuf_AddDesc_E_5fDragonsoul_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Dragonsoul.proto");
  GOOGLE_CHECK(file != NULL);
  E_DragonsoulHole_descriptor_ = file->message_type(0);
  static const int E_DragonsoulHole_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulHole, m_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulHole, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulHole, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulHole, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulHole, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulHole, m_num_),
  };
  E_DragonsoulHole_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulHole_descriptor_,
      E_DragonsoulHole::default_instance_,
      E_DragonsoulHole_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulHole, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulHole, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulHole));
  Sheet_DragonsoulHole_descriptor_ = file->message_type(1);
  static const int Sheet_DragonsoulHole_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulHole, e_dragonsoulhole_list_),
  };
  Sheet_DragonsoulHole_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonsoulHole_descriptor_,
      Sheet_DragonsoulHole::default_instance_,
      Sheet_DragonsoulHole_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulHole, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulHole, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonsoulHole));
  E_DragonsoulOfferexpQualityDesc_descriptor_ = file->message_type(2);
  static const int E_DragonsoulOfferexpQualityDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexpQualityDesc, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexpQualityDesc, m_type_),
  };
  E_DragonsoulOfferexpQualityDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulOfferexpQualityDesc_descriptor_,
      E_DragonsoulOfferexpQualityDesc::default_instance_,
      E_DragonsoulOfferexpQualityDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexpQualityDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexpQualityDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulOfferexpQualityDesc));
  E_DragonsoulOfferexp_descriptor_ = file->message_type(3);
  static const int E_DragonsoulOfferexp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexp, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexp, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexp, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexp, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexp, m_itemexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexp, m_quality_),
  };
  E_DragonsoulOfferexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulOfferexp_descriptor_,
      E_DragonsoulOfferexp::default_instance_,
      E_DragonsoulOfferexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulOfferexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulOfferexp));
  Sheet_DragonsoulOfferexp_descriptor_ = file->message_type(4);
  static const int Sheet_DragonsoulOfferexp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulOfferexp, e_dragonsoulofferexp_list_),
  };
  Sheet_DragonsoulOfferexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonsoulOfferexp_descriptor_,
      Sheet_DragonsoulOfferexp::default_instance_,
      Sheet_DragonsoulOfferexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulOfferexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulOfferexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonsoulOfferexp));
  E_DragonsoulStrongexp_descriptor_ = file->message_type(5);
  static const int E_DragonsoulStrongexp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStrongexp, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStrongexp, m_exp_),
  };
  E_DragonsoulStrongexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulStrongexp_descriptor_,
      E_DragonsoulStrongexp::default_instance_,
      E_DragonsoulStrongexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStrongexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStrongexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulStrongexp));
  Sheet_DragonsoulStrongexp_descriptor_ = file->message_type(6);
  static const int Sheet_DragonsoulStrongexp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulStrongexp, e_dragonsoulstrongexp_list_),
  };
  Sheet_DragonsoulStrongexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonsoulStrongexp_descriptor_,
      Sheet_DragonsoulStrongexp::default_instance_,
      Sheet_DragonsoulStrongexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulStrongexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulStrongexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonsoulStrongexp));
  E_DragonsoulFlyexp_descriptor_ = file->message_type(7);
  static const int E_DragonsoulFlyexp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyexp, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyexp, m_exp_),
  };
  E_DragonsoulFlyexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulFlyexp_descriptor_,
      E_DragonsoulFlyexp::default_instance_,
      E_DragonsoulFlyexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulFlyexp));
  Sheet_DragonsoulFlyexp_descriptor_ = file->message_type(8);
  static const int Sheet_DragonsoulFlyexp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulFlyexp, e_dragonsoulflyexp_list_),
  };
  Sheet_DragonsoulFlyexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonsoulFlyexp_descriptor_,
      Sheet_DragonsoulFlyexp::default_instance_,
      Sheet_DragonsoulFlyexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulFlyexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulFlyexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonsoulFlyexp));
  E_DragonsoulFlyatt_descriptor_ = file->message_type(9);
  static const int E_DragonsoulFlyatt_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyatt, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyatt, m_attid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyatt, m_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyatt, m_atttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyatt, m_att_),
  };
  E_DragonsoulFlyatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulFlyatt_descriptor_,
      E_DragonsoulFlyatt::default_instance_,
      E_DragonsoulFlyatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulFlyatt));
  Sheet_DragonsoulFlyatt_descriptor_ = file->message_type(10);
  static const int Sheet_DragonsoulFlyatt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulFlyatt, e_dragonsoulflyatt_list_),
  };
  Sheet_DragonsoulFlyatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonsoulFlyatt_descriptor_,
      Sheet_DragonsoulFlyatt::default_instance_,
      Sheet_DragonsoulFlyatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulFlyatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulFlyatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonsoulFlyatt));
  E_DragonsoulFlyTypeDesc_descriptor_ = file->message_type(11);
  static const int E_DragonsoulFlyTypeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyTypeDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyTypeDesc, m_id_),
  };
  E_DragonsoulFlyTypeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulFlyTypeDesc_descriptor_,
      E_DragonsoulFlyTypeDesc::default_instance_,
      E_DragonsoulFlyTypeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyTypeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFlyTypeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulFlyTypeDesc));
  E_DragonsoulFly_descriptor_ = file->message_type(12);
  static const int E_DragonsoulFly_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFly, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFly, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFly, m_offerexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFly, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFly, m_srtongup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFly, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFly, m_flyatt_),
  };
  E_DragonsoulFly_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulFly_descriptor_,
      E_DragonsoulFly::default_instance_,
      E_DragonsoulFly_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFly, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulFly, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulFly));
  Sheet_DragonsoulFly_descriptor_ = file->message_type(13);
  static const int Sheet_DragonsoulFly_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulFly, e_dragonsoulfly_list_),
  };
  Sheet_DragonsoulFly_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonsoulFly_descriptor_,
      Sheet_DragonsoulFly::default_instance_,
      Sheet_DragonsoulFly_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulFly, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulFly, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonsoulFly));
  E_DragonsoulAwakeAwakeDesc_descriptor_ = file->message_type(14);
  static const int E_DragonsoulAwakeAwakeDesc_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwakeAwakeDesc, m_flyaddratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwakeAwakeDesc, m_lvaddratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwakeAwakeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwakeAwakeDesc, m_att_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwakeAwakeDesc, m_num_),
  };
  E_DragonsoulAwakeAwakeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulAwakeAwakeDesc_descriptor_,
      E_DragonsoulAwakeAwakeDesc::default_instance_,
      E_DragonsoulAwakeAwakeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwakeAwakeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwakeAwakeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulAwakeAwakeDesc));
  E_DragonsoulAwake_descriptor_ = file->message_type(15);
  static const int E_DragonsoulAwake_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwake, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwake, m_awakeitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwake, m_awaketoplimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwake, m_awake_),
  };
  E_DragonsoulAwake_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulAwake_descriptor_,
      E_DragonsoulAwake::default_instance_,
      E_DragonsoulAwake_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwake, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulAwake, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulAwake));
  Sheet_DragonsoulAwake_descriptor_ = file->message_type(16);
  static const int Sheet_DragonsoulAwake_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulAwake, e_dragonsoulawake_list_),
  };
  Sheet_DragonsoulAwake_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonsoulAwake_descriptor_,
      Sheet_DragonsoulAwake::default_instance_,
      Sheet_DragonsoulAwake_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulAwake, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulAwake, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonsoulAwake));
  E_DragonsoulName_descriptor_ = file->message_type(17);
  static const int E_DragonsoulName_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulName, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulName, m_functionid_),
  };
  E_DragonsoulName_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulName_descriptor_,
      E_DragonsoulName::default_instance_,
      E_DragonsoulName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulName, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulName, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulName));
  Sheet_DragonsoulName_descriptor_ = file->message_type(18);
  static const int Sheet_DragonsoulName_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulName, e_dragonsoulname_list_),
  };
  Sheet_DragonsoulName_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonsoulName_descriptor_,
      Sheet_DragonsoulName::default_instance_,
      Sheet_DragonsoulName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulName, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulName, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonsoulName));
  E_DragonsoulStarcollectAttributeDesc_descriptor_ = file->message_type(19);
  static const int E_DragonsoulStarcollectAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStarcollectAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStarcollectAttributeDesc, m_type_),
  };
  E_DragonsoulStarcollectAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulStarcollectAttributeDesc_descriptor_,
      E_DragonsoulStarcollectAttributeDesc::default_instance_,
      E_DragonsoulStarcollectAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStarcollectAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStarcollectAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulStarcollectAttributeDesc));
  E_DragonsoulStarcollect_descriptor_ = file->message_type(20);
  static const int E_DragonsoulStarcollect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStarcollect, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStarcollect, m_attribute_),
  };
  E_DragonsoulStarcollect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_DragonsoulStarcollect_descriptor_,
      E_DragonsoulStarcollect::default_instance_,
      E_DragonsoulStarcollect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStarcollect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_DragonsoulStarcollect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_DragonsoulStarcollect));
  Sheet_DragonsoulStarcollect_descriptor_ = file->message_type(21);
  static const int Sheet_DragonsoulStarcollect_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulStarcollect, e_dragonsoulstarcollect_list_),
  };
  Sheet_DragonsoulStarcollect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_DragonsoulStarcollect_descriptor_,
      Sheet_DragonsoulStarcollect::default_instance_,
      Sheet_DragonsoulStarcollect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulStarcollect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_DragonsoulStarcollect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_DragonsoulStarcollect));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fDragonsoul_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulHole_descriptor_, &E_DragonsoulHole::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonsoulHole_descriptor_, &Sheet_DragonsoulHole::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulOfferexpQualityDesc_descriptor_, &E_DragonsoulOfferexpQualityDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulOfferexp_descriptor_, &E_DragonsoulOfferexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonsoulOfferexp_descriptor_, &Sheet_DragonsoulOfferexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulStrongexp_descriptor_, &E_DragonsoulStrongexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonsoulStrongexp_descriptor_, &Sheet_DragonsoulStrongexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulFlyexp_descriptor_, &E_DragonsoulFlyexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonsoulFlyexp_descriptor_, &Sheet_DragonsoulFlyexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulFlyatt_descriptor_, &E_DragonsoulFlyatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonsoulFlyatt_descriptor_, &Sheet_DragonsoulFlyatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulFlyTypeDesc_descriptor_, &E_DragonsoulFlyTypeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulFly_descriptor_, &E_DragonsoulFly::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonsoulFly_descriptor_, &Sheet_DragonsoulFly::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulAwakeAwakeDesc_descriptor_, &E_DragonsoulAwakeAwakeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulAwake_descriptor_, &E_DragonsoulAwake::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonsoulAwake_descriptor_, &Sheet_DragonsoulAwake::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulName_descriptor_, &E_DragonsoulName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonsoulName_descriptor_, &Sheet_DragonsoulName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulStarcollectAttributeDesc_descriptor_, &E_DragonsoulStarcollectAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_DragonsoulStarcollect_descriptor_, &E_DragonsoulStarcollect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_DragonsoulStarcollect_descriptor_, &Sheet_DragonsoulStarcollect::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fDragonsoul_2eproto() {
  delete E_DragonsoulHole::default_instance_;
  delete E_DragonsoulHole_reflection_;
  delete Sheet_DragonsoulHole::default_instance_;
  delete Sheet_DragonsoulHole_reflection_;
  delete E_DragonsoulOfferexpQualityDesc::default_instance_;
  delete E_DragonsoulOfferexpQualityDesc_reflection_;
  delete E_DragonsoulOfferexp::default_instance_;
  delete E_DragonsoulOfferexp_reflection_;
  delete Sheet_DragonsoulOfferexp::default_instance_;
  delete Sheet_DragonsoulOfferexp_reflection_;
  delete E_DragonsoulStrongexp::default_instance_;
  delete E_DragonsoulStrongexp_reflection_;
  delete Sheet_DragonsoulStrongexp::default_instance_;
  delete Sheet_DragonsoulStrongexp_reflection_;
  delete E_DragonsoulFlyexp::default_instance_;
  delete E_DragonsoulFlyexp_reflection_;
  delete Sheet_DragonsoulFlyexp::default_instance_;
  delete Sheet_DragonsoulFlyexp_reflection_;
  delete E_DragonsoulFlyatt::default_instance_;
  delete E_DragonsoulFlyatt_reflection_;
  delete Sheet_DragonsoulFlyatt::default_instance_;
  delete Sheet_DragonsoulFlyatt_reflection_;
  delete E_DragonsoulFlyTypeDesc::default_instance_;
  delete E_DragonsoulFlyTypeDesc_reflection_;
  delete E_DragonsoulFly::default_instance_;
  delete E_DragonsoulFly_reflection_;
  delete Sheet_DragonsoulFly::default_instance_;
  delete Sheet_DragonsoulFly_reflection_;
  delete E_DragonsoulAwakeAwakeDesc::default_instance_;
  delete E_DragonsoulAwakeAwakeDesc_reflection_;
  delete E_DragonsoulAwake::default_instance_;
  delete E_DragonsoulAwake_reflection_;
  delete Sheet_DragonsoulAwake::default_instance_;
  delete Sheet_DragonsoulAwake_reflection_;
  delete E_DragonsoulName::default_instance_;
  delete E_DragonsoulName_reflection_;
  delete Sheet_DragonsoulName::default_instance_;
  delete Sheet_DragonsoulName_reflection_;
  delete E_DragonsoulStarcollectAttributeDesc::default_instance_;
  delete E_DragonsoulStarcollectAttributeDesc_reflection_;
  delete E_DragonsoulStarcollect::default_instance_;
  delete E_DragonsoulStarcollect_reflection_;
  delete Sheet_DragonsoulStarcollect::default_instance_;
  delete Sheet_DragonsoulStarcollect_reflection_;
}

void protobuf_AddDesc_E_5fDragonsoul_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022E_Dragonsoul.proto\022\010proto_ff\032\025yd_field"
    "options.proto\"\353\001\n\020E_DragonsoulHole\022\"\n\010m_"
    "number\030\001 \001(\005B\020\302\377\024\014\346\277\200\346\264\273\344\270\252\346\225\260\022 \n\006m_type"
    "\030\002 \001(\005B\020\302\377\024\014\345\255\224\347\232\204\347\261\273\345\236\213\022(\n\nm_position\030\003"
    " \001(\tB\024\302\377\024\014\350\243\205\345\244\207\344\275\215\347\275\256\220\301\024@\022\036\n\004m_lv\030\004 \001(\005"
    "B\020\302\377\024\014\346\277\200\346\264\273\347\255\211\347\272\247\022 \n\004m_id\030\005 \001(\003B\022\302\377\024\016\346\277"
    "\200\346\264\273\351\201\223\345\205\267id\022%\n\005m_num\030\006 \001(\005B\026\302\377\024\022\346\277\200\346\264\273\351"
    "\201\223\345\205\267\346\225\260\351\207\217\"W\n\024Sheet_DragonsoulHole\022\?\n\025E"
    "_DragonsoulHole_List\030\001 \003(\0132\032.proto_ff.E_"
    "DragonsoulHoleB\004\210\301\024\020\"X\n\037E_DragonsoulOffe"
    "rexpQualityDesc\022\031\n\005m_exp\030\001 \001(\005B\n\302\377\024\006\347\273\217\351"
    "\252\214\022\032\n\006m_type\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\"\216\002\n\024E_Dra"
    "gonsoulOfferexp\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022 \n"
    "\006m_type\030\002 \001(\005B\020\302\377\024\014\346\235\220\346\226\231\347\261\273\345\236\213\022(\n\nm_pos"
    "ition\030\003 \001(\tB\024\302\377\024\014\350\243\205\345\244\207\344\275\215\347\275\256\220\301\024@\022\036\n\010m_i"
    "temId\030\004 \001(\005B\014\302\377\024\010\351\201\223\345\205\267id\022&\n\tm_itemExp\030\005"
    " \001(\005B\023\302\377\024\017\351\201\223\345\205\267\347\273\217\351\252\214\345\200\274\022L\n\tm_quality\030\006"
    " \003(\0132).proto_ff.E_DragonsoulOfferexpQual"
    "ityDescB\016\302\377\024\006\345\223\201\350\264\250\210\301\024\002\"c\n\030Sheet_Dragons"
    "oulOfferexp\022G\n\031E_DragonsoulOfferexp_List"
    "\030\001 \003(\0132\036.proto_ff.E_DragonsoulOfferexpB\004"
    "\210\301\024\004\"X\n\025E_DragonsoulStrongexp\022\030\n\004m_lv\030\001 "
    "\001(\005B\n\302\377\024\006\347\255\211\347\272\247\022%\n\005m_exp\030\002 \001(\005B\026\302\377\024\022\345\215\207\347"
    "\272\247\346\211\200\351\234\200\347\273\217\351\252\214\"g\n\031Sheet_DragonsoulStrong"
    "exp\022J\n\032E_DragonsoulStrongexp_List\030\001 \003(\0132"
    "\037.proto_ff.E_DragonsoulStrongexpB\005\210\301\024\200\020\""
    "U\n\022E_DragonsoulFlyexp\022\030\n\004m_lv\030\001 \001(\005B\n\302\377\024"
    "\006\351\230\266\347\272\247\022%\n\005m_exp\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\346\211\200\351\234\200"
    "\347\273\217\351\252\214\"]\n\026Sheet_DragonsoulFlyexp\022C\n\027E_Dr"
    "agonsoulFlyexp_List\030\001 \003(\0132\034.proto_ff.E_D"
    "ragonsoulFlyexpB\004\210\301\024@\"\277\001\n\022E_DragonsoulFl"
    "yatt\022\035\n\004m_id\030\001 \001(\003B\017\302\377\024\013\345\261\236\346\200\247\347\273\204id\022\035\n\007m"
    "_attId\030\002 \001(\003B\014\302\377\024\010\345\261\236\346\200\247id\022!\n\007m_count\030\003 "
    "\001(\005B\020\302\377\024\014\350\256\241\347\256\227\346\226\271\345\274\217\022#\n\tm_attType\030\004 \001(\005"
    "B\020\302\377\024\014\345\261\236\346\200\247\347\261\273\345\236\213\022#\n\005m_att\030\005 \003(\005B\024\302\377\024\014\345"
    "\261\236\346\200\247\350\247\211\351\206\222\210\301\024\013\"^\n\026Sheet_DragonsoulFlyat"
    "t\022D\n\027E_DragonsoulFlyatt_List\030\001 \003(\0132\034.pro"
    "to_ff.E_DragonsoulFlyattB\005\210\301\024\200\001\"K\n\027E_Dra"
    "gonsoulFlyTypeDesc\022\032\n\005m_num\030\001 \001(\tB\013\302\377\024\003\345"
    "\200\274\220\301\024@\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"\262\002\n\017E_Drago"
    "nsoulFly\022\032\n\004m_id\030\001 \001(\003B\014\302\377\024\010\351\203\250\344\275\215ID\022$\n\n"
    "m_position\030\002 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\351\203\250\344\275\215\022\'\n\nm_"
    "offerExp\030\003 \001(\005B\023\302\377\024\017\346\217\220\344\276\233\347\273\217\351\252\214\345\200\274\022#\n\tm"
    "_Quality\030\004 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\223\201\350\264\250\022$\n\nm_sr"
    "tongUp\030\005 \001(\005B\020\302\377\024\014\345\274\272\345\214\226\344\270\212\351\231\220\022A\n\006m_type"
    "\030\006 \003(\0132!.proto_ff.E_DragonsoulFlyTypeDes"
    "cB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\002\022&\n\010m_flyatt\030\007 \003(\005B\024\302\377\024"
    "\014\351\243\236\345\215\207\345\261\236\346\200\247\210\301\024 \"T\n\023Sheet_DragonsoulFly"
    "\022=\n\024E_DragonsoulFly_List\030\001 \003(\0132\031.proto_f"
    "f.E_DragonsoulFlyB\004\210\301\024 \"\351\001\n\032E_Dragonsoul"
    "AwakeAwakeDesc\0226\n\rm_flyAddratio\030\001 \001(\005B\037\302"
    "\377\024\033\351\243\236\345\215\207\345\261\236\346\200\247\345\212\240\346\210\220\347\231\276\345\210\206\346\257\224\0225\n\014m_lvAd"
    "dratio\030\002 \001(\005B\037\302\377\024\033\345\215\207\347\272\247\345\261\236\346\200\247\345\212\240\346\210\220\347\231\276\345"
    "\210\206\346\257\224\022\036\n\007m_value\030\003 \001(\005B\r\302\377\024\t\345\261\236\346\200\247\345\200\274\022\033\n"
    "\005m_att\030\004 \001(\005B\014\302\377\024\010\345\261\236\346\200\247ID\022\037\n\005m_num\030\005 \001("
    "\005B\020\302\377\024\014\346\235\220\346\226\231\346\225\260\351\207\217\"\322\001\n\021E_DragonsoulAwak"
    "e\022$\n\nm_position\030\001 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\351\203\250\344\275\215\022"
    "%\n\013m_awakeItem\030\002 \001(\005B\020\302\377\024\014\350\247\211\351\206\222\346\235\220\346\226\231\022)"
    "\n\017m_awaketoplimit\030\003 \001(\005B\020\302\377\024\014\350\247\211\351\206\222\344\270\212\351\231"
    "\220\022E\n\007m_awake\030\004 \003(\0132$.proto_ff.E_Dragonso"
    "ulAwakeAwakeDescB\016\302\377\024\006\350\247\211\351\206\222\210\301\024\013\"Z\n\025Shee"
    "t_DragonsoulAwake\022A\n\026E_DragonsoulAwake_L"
    "ist\030\001 \003(\0132\033.proto_ff.E_DragonsoulAwakeB\004"
    "\210\301\024\020\"L\n\020E_DragonsoulName\022\024\n\004m_id\030\001 \001(\005B\006"
    "\302\377\024\002id\022\"\n\014m_functionid\030\002 \001(\005B\014\302\377\024\010\345\212\237\350\203\275"
    "id\"W\n\024Sheet_DragonsoulName\022\?\n\025E_Dragonso"
    "ulName_List\030\001 \003(\0132\032.proto_ff.E_Dragonsou"
    "lNameB\004\210\301\024\010\"Y\n$E_DragonsoulStarcollectAt"
    "tributeDesc\022\033\n\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274"
    "\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\"\216\001\n\027E_DragonsoulS"
    "tarcollect\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\346\230\237\346\225\260\022Y\n\013"
    "m_attribute\030\002 \003(\0132..proto_ff.E_Dragonsou"
    "lStarcollectAttributeDescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236"
    "\346\200\247\210\301\024\002\"l\n\033Sheet_DragonsoulStarcollect\022M"
    "\n\034E_DragonsoulStarcollect_List\030\001 \003(\0132!.p"
    "roto_ff.E_DragonsoulStarcollectB\004\210\301\024 ", 3037);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Dragonsoul.proto", &protobuf_RegisterTypes);
  E_DragonsoulHole::default_instance_ = new E_DragonsoulHole();
  Sheet_DragonsoulHole::default_instance_ = new Sheet_DragonsoulHole();
  E_DragonsoulOfferexpQualityDesc::default_instance_ = new E_DragonsoulOfferexpQualityDesc();
  E_DragonsoulOfferexp::default_instance_ = new E_DragonsoulOfferexp();
  Sheet_DragonsoulOfferexp::default_instance_ = new Sheet_DragonsoulOfferexp();
  E_DragonsoulStrongexp::default_instance_ = new E_DragonsoulStrongexp();
  Sheet_DragonsoulStrongexp::default_instance_ = new Sheet_DragonsoulStrongexp();
  E_DragonsoulFlyexp::default_instance_ = new E_DragonsoulFlyexp();
  Sheet_DragonsoulFlyexp::default_instance_ = new Sheet_DragonsoulFlyexp();
  E_DragonsoulFlyatt::default_instance_ = new E_DragonsoulFlyatt();
  Sheet_DragonsoulFlyatt::default_instance_ = new Sheet_DragonsoulFlyatt();
  E_DragonsoulFlyTypeDesc::default_instance_ = new E_DragonsoulFlyTypeDesc();
  E_DragonsoulFly::default_instance_ = new E_DragonsoulFly();
  Sheet_DragonsoulFly::default_instance_ = new Sheet_DragonsoulFly();
  E_DragonsoulAwakeAwakeDesc::default_instance_ = new E_DragonsoulAwakeAwakeDesc();
  E_DragonsoulAwake::default_instance_ = new E_DragonsoulAwake();
  Sheet_DragonsoulAwake::default_instance_ = new Sheet_DragonsoulAwake();
  E_DragonsoulName::default_instance_ = new E_DragonsoulName();
  Sheet_DragonsoulName::default_instance_ = new Sheet_DragonsoulName();
  E_DragonsoulStarcollectAttributeDesc::default_instance_ = new E_DragonsoulStarcollectAttributeDesc();
  E_DragonsoulStarcollect::default_instance_ = new E_DragonsoulStarcollect();
  Sheet_DragonsoulStarcollect::default_instance_ = new Sheet_DragonsoulStarcollect();
  E_DragonsoulHole::default_instance_->InitAsDefaultInstance();
  Sheet_DragonsoulHole::default_instance_->InitAsDefaultInstance();
  E_DragonsoulOfferexpQualityDesc::default_instance_->InitAsDefaultInstance();
  E_DragonsoulOfferexp::default_instance_->InitAsDefaultInstance();
  Sheet_DragonsoulOfferexp::default_instance_->InitAsDefaultInstance();
  E_DragonsoulStrongexp::default_instance_->InitAsDefaultInstance();
  Sheet_DragonsoulStrongexp::default_instance_->InitAsDefaultInstance();
  E_DragonsoulFlyexp::default_instance_->InitAsDefaultInstance();
  Sheet_DragonsoulFlyexp::default_instance_->InitAsDefaultInstance();
  E_DragonsoulFlyatt::default_instance_->InitAsDefaultInstance();
  Sheet_DragonsoulFlyatt::default_instance_->InitAsDefaultInstance();
  E_DragonsoulFlyTypeDesc::default_instance_->InitAsDefaultInstance();
  E_DragonsoulFly::default_instance_->InitAsDefaultInstance();
  Sheet_DragonsoulFly::default_instance_->InitAsDefaultInstance();
  E_DragonsoulAwakeAwakeDesc::default_instance_->InitAsDefaultInstance();
  E_DragonsoulAwake::default_instance_->InitAsDefaultInstance();
  Sheet_DragonsoulAwake::default_instance_->InitAsDefaultInstance();
  E_DragonsoulName::default_instance_->InitAsDefaultInstance();
  Sheet_DragonsoulName::default_instance_->InitAsDefaultInstance();
  E_DragonsoulStarcollectAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_DragonsoulStarcollect::default_instance_->InitAsDefaultInstance();
  Sheet_DragonsoulStarcollect::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fDragonsoul_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fDragonsoul_2eproto {
  StaticDescriptorInitializer_E_5fDragonsoul_2eproto() {
    protobuf_AddDesc_E_5fDragonsoul_2eproto();
  }
} static_descriptor_initializer_E_5fDragonsoul_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulHole::kMNumberFieldNumber;
const int E_DragonsoulHole::kMTypeFieldNumber;
const int E_DragonsoulHole::kMPositionFieldNumber;
const int E_DragonsoulHole::kMLvFieldNumber;
const int E_DragonsoulHole::kMIdFieldNumber;
const int E_DragonsoulHole::kMNumFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulHole::E_DragonsoulHole()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulHole::InitAsDefaultInstance() {
}

E_DragonsoulHole::E_DragonsoulHole(const E_DragonsoulHole& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulHole::SharedCtor() {
  _cached_size_ = 0;
  m_number_ = 0;
  m_type_ = 0;
  m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_lv_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulHole::~E_DragonsoulHole() {
  SharedDtor();
}

void E_DragonsoulHole::SharedDtor() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (this != default_instance_) {
  }
}

void E_DragonsoulHole::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulHole::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulHole_descriptor_;
}

const E_DragonsoulHole& E_DragonsoulHole::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulHole* E_DragonsoulHole::default_instance_ = NULL;

E_DragonsoulHole* E_DragonsoulHole::New() const {
  return new E_DragonsoulHole;
}

void E_DragonsoulHole::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_number_ = 0;
    m_type_ = 0;
    if (has_m_position()) {
      if (m_position_ != &::google::protobuf::internal::kEmptyString) {
        m_position_->clear();
      }
    }
    m_lv_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
    m_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulHole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_number = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_number_)));
          set_has_m_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_position;
        break;
      }

      // optional string m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_position()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_position().data(), this->m_position().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_id;
        break;
      }

      // optional int64 m_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulHole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_number = 1;
  if (has_m_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_number(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_position(), output);
  }

  // optional int32 m_lv = 4;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_lv(), output);
  }

  // optional int64 m_id = 5;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->m_id(), output);
  }

  // optional int32 m_num = 6;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulHole::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_number = 1;
  if (has_m_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_number(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_position(), target);
  }

  // optional int32 m_lv = 4;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_lv(), target);
  }

  // optional int64 m_id = 5;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->m_id(), target);
  }

  // optional int32 m_num = 6;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulHole::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_number = 1;
    if (has_m_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_number());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional string m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_position());
    }

    // optional int32 m_lv = 4;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int64 m_id = 5;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int32 m_num = 6;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulHole::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulHole* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulHole*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulHole::MergeFrom(const E_DragonsoulHole& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_number()) {
      set_m_number(from.m_number());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulHole::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulHole::CopyFrom(const E_DragonsoulHole& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulHole::IsInitialized() const {

  return true;
}

void E_DragonsoulHole::Swap(E_DragonsoulHole* other) {
  if (other != this) {
    std::swap(m_number_, other->m_number_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_id_, other->m_id_);
    std::swap(m_num_, other->m_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulHole::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulHole_descriptor_;
  metadata.reflection = E_DragonsoulHole_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonsoulHole::kEDragonsoulHoleListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonsoulHole::Sheet_DragonsoulHole()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonsoulHole::InitAsDefaultInstance() {
}

Sheet_DragonsoulHole::Sheet_DragonsoulHole(const Sheet_DragonsoulHole& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonsoulHole::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonsoulHole::~Sheet_DragonsoulHole() {
  SharedDtor();
}

void Sheet_DragonsoulHole::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonsoulHole::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonsoulHole::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonsoulHole_descriptor_;
}

const Sheet_DragonsoulHole& Sheet_DragonsoulHole::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

Sheet_DragonsoulHole* Sheet_DragonsoulHole::default_instance_ = NULL;

Sheet_DragonsoulHole* Sheet_DragonsoulHole::New() const {
  return new Sheet_DragonsoulHole;
}

void Sheet_DragonsoulHole::Clear() {
  e_dragonsoulhole_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonsoulHole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonsoulHole E_DragonsoulHole_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonsoulHole_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonsoulhole_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonsoulHole_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonsoulHole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonsoulHole E_DragonsoulHole_List = 1;
  for (int i = 0; i < this->e_dragonsoulhole_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonsoulhole_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonsoulHole::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonsoulHole E_DragonsoulHole_List = 1;
  for (int i = 0; i < this->e_dragonsoulhole_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonsoulhole_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonsoulHole::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonsoulHole E_DragonsoulHole_List = 1;
  total_size += 1 * this->e_dragonsoulhole_list_size();
  for (int i = 0; i < this->e_dragonsoulhole_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonsoulhole_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonsoulHole::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonsoulHole* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonsoulHole*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonsoulHole::MergeFrom(const Sheet_DragonsoulHole& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonsoulhole_list_.MergeFrom(from.e_dragonsoulhole_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonsoulHole::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonsoulHole::CopyFrom(const Sheet_DragonsoulHole& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonsoulHole::IsInitialized() const {

  return true;
}

void Sheet_DragonsoulHole::Swap(Sheet_DragonsoulHole* other) {
  if (other != this) {
    e_dragonsoulhole_list_.Swap(&other->e_dragonsoulhole_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonsoulHole::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonsoulHole_descriptor_;
  metadata.reflection = Sheet_DragonsoulHole_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulOfferexpQualityDesc::kMExpFieldNumber;
const int E_DragonsoulOfferexpQualityDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulOfferexpQualityDesc::E_DragonsoulOfferexpQualityDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulOfferexpQualityDesc::InitAsDefaultInstance() {
}

E_DragonsoulOfferexpQualityDesc::E_DragonsoulOfferexpQualityDesc(const E_DragonsoulOfferexpQualityDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulOfferexpQualityDesc::SharedCtor() {
  _cached_size_ = 0;
  m_exp_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulOfferexpQualityDesc::~E_DragonsoulOfferexpQualityDesc() {
  SharedDtor();
}

void E_DragonsoulOfferexpQualityDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonsoulOfferexpQualityDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulOfferexpQualityDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulOfferexpQualityDesc_descriptor_;
}

const E_DragonsoulOfferexpQualityDesc& E_DragonsoulOfferexpQualityDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulOfferexpQualityDesc* E_DragonsoulOfferexpQualityDesc::default_instance_ = NULL;

E_DragonsoulOfferexpQualityDesc* E_DragonsoulOfferexpQualityDesc::New() const {
  return new E_DragonsoulOfferexpQualityDesc;
}

void E_DragonsoulOfferexpQualityDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_exp_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulOfferexpQualityDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulOfferexpQualityDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_exp = 1;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_exp(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulOfferexpQualityDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_exp = 1;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_exp(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulOfferexpQualityDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_exp = 1;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulOfferexpQualityDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulOfferexpQualityDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulOfferexpQualityDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulOfferexpQualityDesc::MergeFrom(const E_DragonsoulOfferexpQualityDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulOfferexpQualityDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulOfferexpQualityDesc::CopyFrom(const E_DragonsoulOfferexpQualityDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulOfferexpQualityDesc::IsInitialized() const {

  return true;
}

void E_DragonsoulOfferexpQualityDesc::Swap(E_DragonsoulOfferexpQualityDesc* other) {
  if (other != this) {
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulOfferexpQualityDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulOfferexpQualityDesc_descriptor_;
  metadata.reflection = E_DragonsoulOfferexpQualityDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulOfferexp::kMIdFieldNumber;
const int E_DragonsoulOfferexp::kMTypeFieldNumber;
const int E_DragonsoulOfferexp::kMPositionFieldNumber;
const int E_DragonsoulOfferexp::kMItemIdFieldNumber;
const int E_DragonsoulOfferexp::kMItemExpFieldNumber;
const int E_DragonsoulOfferexp::kMQualityFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulOfferexp::E_DragonsoulOfferexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulOfferexp::InitAsDefaultInstance() {
}

E_DragonsoulOfferexp::E_DragonsoulOfferexp(const E_DragonsoulOfferexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulOfferexp::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_itemid_ = 0;
  m_itemexp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulOfferexp::~E_DragonsoulOfferexp() {
  SharedDtor();
}

void E_DragonsoulOfferexp::SharedDtor() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (this != default_instance_) {
  }
}

void E_DragonsoulOfferexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulOfferexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulOfferexp_descriptor_;
}

const E_DragonsoulOfferexp& E_DragonsoulOfferexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulOfferexp* E_DragonsoulOfferexp::default_instance_ = NULL;

E_DragonsoulOfferexp* E_DragonsoulOfferexp::New() const {
  return new E_DragonsoulOfferexp;
}

void E_DragonsoulOfferexp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    if (has_m_position()) {
      if (m_position_ != &::google::protobuf::internal::kEmptyString) {
        m_position_->clear();
      }
    }
    m_itemid_ = 0;
    m_itemexp_ = 0;
  }
  m_quality_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulOfferexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_position;
        break;
      }

      // optional string m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_position()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_position().data(), this->m_position().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_itemId;
        break;
      }

      // optional int32 m_itemId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_itemExp;
        break;
      }

      // optional int32 m_itemExp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemexp_)));
          set_has_m_itemexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_quality;
        break;
      }

      // repeated .proto_ff.E_DragonsoulOfferexpQualityDesc m_quality = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_quality:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_quality()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_quality;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulOfferexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_position(), output);
  }

  // optional int32 m_itemId = 4;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_itemid(), output);
  }

  // optional int32 m_itemExp = 5;
  if (has_m_itemexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_itemexp(), output);
  }

  // repeated .proto_ff.E_DragonsoulOfferexpQualityDesc m_quality = 6;
  for (int i = 0; i < this->m_quality_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_quality(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulOfferexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_position(), target);
  }

  // optional int32 m_itemId = 4;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_itemid(), target);
  }

  // optional int32 m_itemExp = 5;
  if (has_m_itemexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_itemexp(), target);
  }

  // repeated .proto_ff.E_DragonsoulOfferexpQualityDesc m_quality = 6;
  for (int i = 0; i < this->m_quality_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_quality(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulOfferexp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional string m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_position());
    }

    // optional int32 m_itemId = 4;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_itemExp = 5;
    if (has_m_itemexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemexp());
    }

  }
  // repeated .proto_ff.E_DragonsoulOfferexpQualityDesc m_quality = 6;
  total_size += 1 * this->m_quality_size();
  for (int i = 0; i < this->m_quality_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_quality(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulOfferexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulOfferexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulOfferexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulOfferexp::MergeFrom(const E_DragonsoulOfferexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_quality_.MergeFrom(from.m_quality_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_itemexp()) {
      set_m_itemexp(from.m_itemexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulOfferexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulOfferexp::CopyFrom(const E_DragonsoulOfferexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulOfferexp::IsInitialized() const {

  return true;
}

void E_DragonsoulOfferexp::Swap(E_DragonsoulOfferexp* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_itemexp_, other->m_itemexp_);
    m_quality_.Swap(&other->m_quality_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulOfferexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulOfferexp_descriptor_;
  metadata.reflection = E_DragonsoulOfferexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonsoulOfferexp::kEDragonsoulOfferexpListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonsoulOfferexp::Sheet_DragonsoulOfferexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonsoulOfferexp::InitAsDefaultInstance() {
}

Sheet_DragonsoulOfferexp::Sheet_DragonsoulOfferexp(const Sheet_DragonsoulOfferexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonsoulOfferexp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonsoulOfferexp::~Sheet_DragonsoulOfferexp() {
  SharedDtor();
}

void Sheet_DragonsoulOfferexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonsoulOfferexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonsoulOfferexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonsoulOfferexp_descriptor_;
}

const Sheet_DragonsoulOfferexp& Sheet_DragonsoulOfferexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

Sheet_DragonsoulOfferexp* Sheet_DragonsoulOfferexp::default_instance_ = NULL;

Sheet_DragonsoulOfferexp* Sheet_DragonsoulOfferexp::New() const {
  return new Sheet_DragonsoulOfferexp;
}

void Sheet_DragonsoulOfferexp::Clear() {
  e_dragonsoulofferexp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonsoulOfferexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonsoulOfferexp E_DragonsoulOfferexp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonsoulOfferexp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonsoulofferexp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonsoulOfferexp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonsoulOfferexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonsoulOfferexp E_DragonsoulOfferexp_List = 1;
  for (int i = 0; i < this->e_dragonsoulofferexp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonsoulofferexp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonsoulOfferexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonsoulOfferexp E_DragonsoulOfferexp_List = 1;
  for (int i = 0; i < this->e_dragonsoulofferexp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonsoulofferexp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonsoulOfferexp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonsoulOfferexp E_DragonsoulOfferexp_List = 1;
  total_size += 1 * this->e_dragonsoulofferexp_list_size();
  for (int i = 0; i < this->e_dragonsoulofferexp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonsoulofferexp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonsoulOfferexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonsoulOfferexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonsoulOfferexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonsoulOfferexp::MergeFrom(const Sheet_DragonsoulOfferexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonsoulofferexp_list_.MergeFrom(from.e_dragonsoulofferexp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonsoulOfferexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonsoulOfferexp::CopyFrom(const Sheet_DragonsoulOfferexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonsoulOfferexp::IsInitialized() const {

  return true;
}

void Sheet_DragonsoulOfferexp::Swap(Sheet_DragonsoulOfferexp* other) {
  if (other != this) {
    e_dragonsoulofferexp_list_.Swap(&other->e_dragonsoulofferexp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonsoulOfferexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonsoulOfferexp_descriptor_;
  metadata.reflection = Sheet_DragonsoulOfferexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulStrongexp::kMLvFieldNumber;
const int E_DragonsoulStrongexp::kMExpFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulStrongexp::E_DragonsoulStrongexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulStrongexp::InitAsDefaultInstance() {
}

E_DragonsoulStrongexp::E_DragonsoulStrongexp(const E_DragonsoulStrongexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulStrongexp::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulStrongexp::~E_DragonsoulStrongexp() {
  SharedDtor();
}

void E_DragonsoulStrongexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonsoulStrongexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulStrongexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulStrongexp_descriptor_;
}

const E_DragonsoulStrongexp& E_DragonsoulStrongexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulStrongexp* E_DragonsoulStrongexp::default_instance_ = NULL;

E_DragonsoulStrongexp* E_DragonsoulStrongexp::New() const {
  return new E_DragonsoulStrongexp;
}

void E_DragonsoulStrongexp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulStrongexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_exp;
        break;
      }

      // optional int32 m_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulStrongexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_exp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulStrongexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_exp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulStrongexp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_exp = 2;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulStrongexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulStrongexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulStrongexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulStrongexp::MergeFrom(const E_DragonsoulStrongexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulStrongexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulStrongexp::CopyFrom(const E_DragonsoulStrongexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulStrongexp::IsInitialized() const {

  return true;
}

void E_DragonsoulStrongexp::Swap(E_DragonsoulStrongexp* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_exp_, other->m_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulStrongexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulStrongexp_descriptor_;
  metadata.reflection = E_DragonsoulStrongexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonsoulStrongexp::kEDragonsoulStrongexpListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonsoulStrongexp::Sheet_DragonsoulStrongexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonsoulStrongexp::InitAsDefaultInstance() {
}

Sheet_DragonsoulStrongexp::Sheet_DragonsoulStrongexp(const Sheet_DragonsoulStrongexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonsoulStrongexp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonsoulStrongexp::~Sheet_DragonsoulStrongexp() {
  SharedDtor();
}

void Sheet_DragonsoulStrongexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonsoulStrongexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonsoulStrongexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonsoulStrongexp_descriptor_;
}

const Sheet_DragonsoulStrongexp& Sheet_DragonsoulStrongexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

Sheet_DragonsoulStrongexp* Sheet_DragonsoulStrongexp::default_instance_ = NULL;

Sheet_DragonsoulStrongexp* Sheet_DragonsoulStrongexp::New() const {
  return new Sheet_DragonsoulStrongexp;
}

void Sheet_DragonsoulStrongexp::Clear() {
  e_dragonsoulstrongexp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonsoulStrongexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonsoulStrongexp E_DragonsoulStrongexp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonsoulStrongexp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonsoulstrongexp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonsoulStrongexp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonsoulStrongexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonsoulStrongexp E_DragonsoulStrongexp_List = 1;
  for (int i = 0; i < this->e_dragonsoulstrongexp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonsoulstrongexp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonsoulStrongexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonsoulStrongexp E_DragonsoulStrongexp_List = 1;
  for (int i = 0; i < this->e_dragonsoulstrongexp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonsoulstrongexp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonsoulStrongexp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonsoulStrongexp E_DragonsoulStrongexp_List = 1;
  total_size += 1 * this->e_dragonsoulstrongexp_list_size();
  for (int i = 0; i < this->e_dragonsoulstrongexp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonsoulstrongexp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonsoulStrongexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonsoulStrongexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonsoulStrongexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonsoulStrongexp::MergeFrom(const Sheet_DragonsoulStrongexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonsoulstrongexp_list_.MergeFrom(from.e_dragonsoulstrongexp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonsoulStrongexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonsoulStrongexp::CopyFrom(const Sheet_DragonsoulStrongexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonsoulStrongexp::IsInitialized() const {

  return true;
}

void Sheet_DragonsoulStrongexp::Swap(Sheet_DragonsoulStrongexp* other) {
  if (other != this) {
    e_dragonsoulstrongexp_list_.Swap(&other->e_dragonsoulstrongexp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonsoulStrongexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonsoulStrongexp_descriptor_;
  metadata.reflection = Sheet_DragonsoulStrongexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulFlyexp::kMLvFieldNumber;
const int E_DragonsoulFlyexp::kMExpFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulFlyexp::E_DragonsoulFlyexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulFlyexp::InitAsDefaultInstance() {
}

E_DragonsoulFlyexp::E_DragonsoulFlyexp(const E_DragonsoulFlyexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulFlyexp::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulFlyexp::~E_DragonsoulFlyexp() {
  SharedDtor();
}

void E_DragonsoulFlyexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonsoulFlyexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulFlyexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulFlyexp_descriptor_;
}

const E_DragonsoulFlyexp& E_DragonsoulFlyexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulFlyexp* E_DragonsoulFlyexp::default_instance_ = NULL;

E_DragonsoulFlyexp* E_DragonsoulFlyexp::New() const {
  return new E_DragonsoulFlyexp;
}

void E_DragonsoulFlyexp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulFlyexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_exp;
        break;
      }

      // optional int32 m_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulFlyexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_exp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulFlyexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_exp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulFlyexp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_exp = 2;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulFlyexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulFlyexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulFlyexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulFlyexp::MergeFrom(const E_DragonsoulFlyexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulFlyexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulFlyexp::CopyFrom(const E_DragonsoulFlyexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulFlyexp::IsInitialized() const {

  return true;
}

void E_DragonsoulFlyexp::Swap(E_DragonsoulFlyexp* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_exp_, other->m_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulFlyexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulFlyexp_descriptor_;
  metadata.reflection = E_DragonsoulFlyexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonsoulFlyexp::kEDragonsoulFlyexpListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonsoulFlyexp::Sheet_DragonsoulFlyexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonsoulFlyexp::InitAsDefaultInstance() {
}

Sheet_DragonsoulFlyexp::Sheet_DragonsoulFlyexp(const Sheet_DragonsoulFlyexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonsoulFlyexp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonsoulFlyexp::~Sheet_DragonsoulFlyexp() {
  SharedDtor();
}

void Sheet_DragonsoulFlyexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonsoulFlyexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonsoulFlyexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonsoulFlyexp_descriptor_;
}

const Sheet_DragonsoulFlyexp& Sheet_DragonsoulFlyexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

Sheet_DragonsoulFlyexp* Sheet_DragonsoulFlyexp::default_instance_ = NULL;

Sheet_DragonsoulFlyexp* Sheet_DragonsoulFlyexp::New() const {
  return new Sheet_DragonsoulFlyexp;
}

void Sheet_DragonsoulFlyexp::Clear() {
  e_dragonsoulflyexp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonsoulFlyexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonsoulFlyexp E_DragonsoulFlyexp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonsoulFlyexp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonsoulflyexp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonsoulFlyexp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonsoulFlyexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonsoulFlyexp E_DragonsoulFlyexp_List = 1;
  for (int i = 0; i < this->e_dragonsoulflyexp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonsoulflyexp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonsoulFlyexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonsoulFlyexp E_DragonsoulFlyexp_List = 1;
  for (int i = 0; i < this->e_dragonsoulflyexp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonsoulflyexp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonsoulFlyexp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonsoulFlyexp E_DragonsoulFlyexp_List = 1;
  total_size += 1 * this->e_dragonsoulflyexp_list_size();
  for (int i = 0; i < this->e_dragonsoulflyexp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonsoulflyexp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonsoulFlyexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonsoulFlyexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonsoulFlyexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonsoulFlyexp::MergeFrom(const Sheet_DragonsoulFlyexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonsoulflyexp_list_.MergeFrom(from.e_dragonsoulflyexp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonsoulFlyexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonsoulFlyexp::CopyFrom(const Sheet_DragonsoulFlyexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonsoulFlyexp::IsInitialized() const {

  return true;
}

void Sheet_DragonsoulFlyexp::Swap(Sheet_DragonsoulFlyexp* other) {
  if (other != this) {
    e_dragonsoulflyexp_list_.Swap(&other->e_dragonsoulflyexp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonsoulFlyexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonsoulFlyexp_descriptor_;
  metadata.reflection = Sheet_DragonsoulFlyexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulFlyatt::kMIdFieldNumber;
const int E_DragonsoulFlyatt::kMAttIdFieldNumber;
const int E_DragonsoulFlyatt::kMCountFieldNumber;
const int E_DragonsoulFlyatt::kMAttTypeFieldNumber;
const int E_DragonsoulFlyatt::kMAttFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulFlyatt::E_DragonsoulFlyatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulFlyatt::InitAsDefaultInstance() {
}

E_DragonsoulFlyatt::E_DragonsoulFlyatt(const E_DragonsoulFlyatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulFlyatt::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_attid_ = GOOGLE_LONGLONG(0);
  m_count_ = 0;
  m_atttype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulFlyatt::~E_DragonsoulFlyatt() {
  SharedDtor();
}

void E_DragonsoulFlyatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonsoulFlyatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulFlyatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulFlyatt_descriptor_;
}

const E_DragonsoulFlyatt& E_DragonsoulFlyatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulFlyatt* E_DragonsoulFlyatt::default_instance_ = NULL;

E_DragonsoulFlyatt* E_DragonsoulFlyatt::New() const {
  return new E_DragonsoulFlyatt;
}

void E_DragonsoulFlyatt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    m_attid_ = GOOGLE_LONGLONG(0);
    m_count_ = 0;
    m_atttype_ = 0;
  }
  m_att_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulFlyatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_attId;
        break;
      }

      // optional int64 m_attId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_attid_)));
          set_has_m_attid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_count;
        break;
      }

      // optional int32 m_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_count_)));
          set_has_m_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_attType;
        break;
      }

      // optional int32 m_attType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_atttype_)));
          set_has_m_atttype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_att;
        break;
      }

      // repeated int32 m_att = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_att:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_m_att())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_att())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_att;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulFlyatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional int64 m_attId = 2;
  if (has_m_attid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_attid(), output);
  }

  // optional int32 m_count = 3;
  if (has_m_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_count(), output);
  }

  // optional int32 m_attType = 4;
  if (has_m_atttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_atttype(), output);
  }

  // repeated int32 m_att = 5;
  for (int i = 0; i < this->m_att_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->m_att(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulFlyatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional int64 m_attId = 2;
  if (has_m_attid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_attid(), target);
  }

  // optional int32 m_count = 3;
  if (has_m_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_count(), target);
  }

  // optional int32 m_attType = 4;
  if (has_m_atttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_atttype(), target);
  }

  // repeated int32 m_att = 5;
  for (int i = 0; i < this->m_att_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->m_att(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulFlyatt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int64 m_attId = 2;
    if (has_m_attid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_attid());
    }

    // optional int32 m_count = 3;
    if (has_m_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_count());
    }

    // optional int32 m_attType = 4;
    if (has_m_atttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_atttype());
    }

  }
  // repeated int32 m_att = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_att_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_att(i));
    }
    total_size += 1 * this->m_att_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulFlyatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulFlyatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulFlyatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulFlyatt::MergeFrom(const E_DragonsoulFlyatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_att_.MergeFrom(from.m_att_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_attid()) {
      set_m_attid(from.m_attid());
    }
    if (from.has_m_count()) {
      set_m_count(from.m_count());
    }
    if (from.has_m_atttype()) {
      set_m_atttype(from.m_atttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulFlyatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulFlyatt::CopyFrom(const E_DragonsoulFlyatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulFlyatt::IsInitialized() const {

  return true;
}

void E_DragonsoulFlyatt::Swap(E_DragonsoulFlyatt* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_attid_, other->m_attid_);
    std::swap(m_count_, other->m_count_);
    std::swap(m_atttype_, other->m_atttype_);
    m_att_.Swap(&other->m_att_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulFlyatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulFlyatt_descriptor_;
  metadata.reflection = E_DragonsoulFlyatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonsoulFlyatt::kEDragonsoulFlyattListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonsoulFlyatt::Sheet_DragonsoulFlyatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonsoulFlyatt::InitAsDefaultInstance() {
}

Sheet_DragonsoulFlyatt::Sheet_DragonsoulFlyatt(const Sheet_DragonsoulFlyatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonsoulFlyatt::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonsoulFlyatt::~Sheet_DragonsoulFlyatt() {
  SharedDtor();
}

void Sheet_DragonsoulFlyatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonsoulFlyatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonsoulFlyatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonsoulFlyatt_descriptor_;
}

const Sheet_DragonsoulFlyatt& Sheet_DragonsoulFlyatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

Sheet_DragonsoulFlyatt* Sheet_DragonsoulFlyatt::default_instance_ = NULL;

Sheet_DragonsoulFlyatt* Sheet_DragonsoulFlyatt::New() const {
  return new Sheet_DragonsoulFlyatt;
}

void Sheet_DragonsoulFlyatt::Clear() {
  e_dragonsoulflyatt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonsoulFlyatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonsoulFlyatt E_DragonsoulFlyatt_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonsoulFlyatt_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonsoulflyatt_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonsoulFlyatt_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonsoulFlyatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonsoulFlyatt E_DragonsoulFlyatt_List = 1;
  for (int i = 0; i < this->e_dragonsoulflyatt_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonsoulflyatt_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonsoulFlyatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonsoulFlyatt E_DragonsoulFlyatt_List = 1;
  for (int i = 0; i < this->e_dragonsoulflyatt_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonsoulflyatt_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonsoulFlyatt::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonsoulFlyatt E_DragonsoulFlyatt_List = 1;
  total_size += 1 * this->e_dragonsoulflyatt_list_size();
  for (int i = 0; i < this->e_dragonsoulflyatt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonsoulflyatt_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonsoulFlyatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonsoulFlyatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonsoulFlyatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonsoulFlyatt::MergeFrom(const Sheet_DragonsoulFlyatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonsoulflyatt_list_.MergeFrom(from.e_dragonsoulflyatt_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonsoulFlyatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonsoulFlyatt::CopyFrom(const Sheet_DragonsoulFlyatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonsoulFlyatt::IsInitialized() const {

  return true;
}

void Sheet_DragonsoulFlyatt::Swap(Sheet_DragonsoulFlyatt* other) {
  if (other != this) {
    e_dragonsoulflyatt_list_.Swap(&other->e_dragonsoulflyatt_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonsoulFlyatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonsoulFlyatt_descriptor_;
  metadata.reflection = Sheet_DragonsoulFlyatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulFlyTypeDesc::kMNumFieldNumber;
const int E_DragonsoulFlyTypeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulFlyTypeDesc::E_DragonsoulFlyTypeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulFlyTypeDesc::InitAsDefaultInstance() {
}

E_DragonsoulFlyTypeDesc::E_DragonsoulFlyTypeDesc(const E_DragonsoulFlyTypeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulFlyTypeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulFlyTypeDesc::~E_DragonsoulFlyTypeDesc() {
  SharedDtor();
}

void E_DragonsoulFlyTypeDesc::SharedDtor() {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    delete m_num_;
  }
  if (this != default_instance_) {
  }
}

void E_DragonsoulFlyTypeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulFlyTypeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulFlyTypeDesc_descriptor_;
}

const E_DragonsoulFlyTypeDesc& E_DragonsoulFlyTypeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulFlyTypeDesc* E_DragonsoulFlyTypeDesc::default_instance_ = NULL;

E_DragonsoulFlyTypeDesc* E_DragonsoulFlyTypeDesc::New() const {
  return new E_DragonsoulFlyTypeDesc;
}

void E_DragonsoulFlyTypeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_m_num()) {
      if (m_num_ != &::google::protobuf::internal::kEmptyString) {
        m_num_->clear();
      }
    }
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulFlyTypeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_num()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_num().data(), this->m_num().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulFlyTypeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_num().data(), this->m_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulFlyTypeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_num().data(), this->m_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulFlyTypeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulFlyTypeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulFlyTypeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulFlyTypeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulFlyTypeDesc::MergeFrom(const E_DragonsoulFlyTypeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulFlyTypeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulFlyTypeDesc::CopyFrom(const E_DragonsoulFlyTypeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulFlyTypeDesc::IsInitialized() const {

  return true;
}

void E_DragonsoulFlyTypeDesc::Swap(E_DragonsoulFlyTypeDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulFlyTypeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulFlyTypeDesc_descriptor_;
  metadata.reflection = E_DragonsoulFlyTypeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulFly::kMIdFieldNumber;
const int E_DragonsoulFly::kMPositionFieldNumber;
const int E_DragonsoulFly::kMOfferExpFieldNumber;
const int E_DragonsoulFly::kMQualityFieldNumber;
const int E_DragonsoulFly::kMSrtongUpFieldNumber;
const int E_DragonsoulFly::kMTypeFieldNumber;
const int E_DragonsoulFly::kMFlyattFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulFly::E_DragonsoulFly()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulFly::InitAsDefaultInstance() {
}

E_DragonsoulFly::E_DragonsoulFly(const E_DragonsoulFly& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulFly::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_position_ = 0;
  m_offerexp_ = 0;
  m_quality_ = 0;
  m_srtongup_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulFly::~E_DragonsoulFly() {
  SharedDtor();
}

void E_DragonsoulFly::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonsoulFly::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulFly::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulFly_descriptor_;
}

const E_DragonsoulFly& E_DragonsoulFly::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulFly* E_DragonsoulFly::default_instance_ = NULL;

E_DragonsoulFly* E_DragonsoulFly::New() const {
  return new E_DragonsoulFly;
}

void E_DragonsoulFly::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    m_position_ = 0;
    m_offerexp_ = 0;
    m_quality_ = 0;
    m_srtongup_ = 0;
  }
  m_type_.Clear();
  m_flyatt_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulFly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_offerExp;
        break;
      }

      // optional int32 m_offerExp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_offerExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_offerexp_)));
          set_has_m_offerexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_Quality;
        break;
      }

      // optional int32 m_Quality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_srtongUp;
        break;
      }

      // optional int32 m_srtongUp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_srtongUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_srtongup_)));
          set_has_m_srtongup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_type;
        break;
      }

      // repeated .proto_ff.E_DragonsoulFlyTypeDesc m_type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_type()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_type;
        if (input->ExpectTag(56)) goto parse_m_flyatt;
        break;
      }

      // repeated int32 m_flyatt = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_flyatt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_m_flyatt())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_flyatt())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_flyatt;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulFly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional int32 m_position = 2;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_position(), output);
  }

  // optional int32 m_offerExp = 3;
  if (has_m_offerexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_offerexp(), output);
  }

  // optional int32 m_Quality = 4;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_quality(), output);
  }

  // optional int32 m_srtongUp = 5;
  if (has_m_srtongup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_srtongup(), output);
  }

  // repeated .proto_ff.E_DragonsoulFlyTypeDesc m_type = 6;
  for (int i = 0; i < this->m_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_type(i), output);
  }

  // repeated int32 m_flyatt = 7;
  for (int i = 0; i < this->m_flyatt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->m_flyatt(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulFly::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional int32 m_position = 2;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_position(), target);
  }

  // optional int32 m_offerExp = 3;
  if (has_m_offerexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_offerexp(), target);
  }

  // optional int32 m_Quality = 4;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_quality(), target);
  }

  // optional int32 m_srtongUp = 5;
  if (has_m_srtongup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_srtongup(), target);
  }

  // repeated .proto_ff.E_DragonsoulFlyTypeDesc m_type = 6;
  for (int i = 0; i < this->m_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_type(i), target);
  }

  // repeated int32 m_flyatt = 7;
  for (int i = 0; i < this->m_flyatt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->m_flyatt(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulFly::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int32 m_position = 2;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional int32 m_offerExp = 3;
    if (has_m_offerexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_offerexp());
    }

    // optional int32 m_Quality = 4;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_srtongUp = 5;
    if (has_m_srtongup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_srtongup());
    }

  }
  // repeated .proto_ff.E_DragonsoulFlyTypeDesc m_type = 6;
  total_size += 1 * this->m_type_size();
  for (int i = 0; i < this->m_type_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_type(i));
  }

  // repeated int32 m_flyatt = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_flyatt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_flyatt(i));
    }
    total_size += 1 * this->m_flyatt_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulFly::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulFly* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulFly*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulFly::MergeFrom(const E_DragonsoulFly& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_type_.MergeFrom(from.m_type_);
  m_flyatt_.MergeFrom(from.m_flyatt_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_offerexp()) {
      set_m_offerexp(from.m_offerexp());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_srtongup()) {
      set_m_srtongup(from.m_srtongup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulFly::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulFly::CopyFrom(const E_DragonsoulFly& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulFly::IsInitialized() const {

  return true;
}

void E_DragonsoulFly::Swap(E_DragonsoulFly* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_offerexp_, other->m_offerexp_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_srtongup_, other->m_srtongup_);
    m_type_.Swap(&other->m_type_);
    m_flyatt_.Swap(&other->m_flyatt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulFly::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulFly_descriptor_;
  metadata.reflection = E_DragonsoulFly_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonsoulFly::kEDragonsoulFlyListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonsoulFly::Sheet_DragonsoulFly()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonsoulFly::InitAsDefaultInstance() {
}

Sheet_DragonsoulFly::Sheet_DragonsoulFly(const Sheet_DragonsoulFly& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonsoulFly::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonsoulFly::~Sheet_DragonsoulFly() {
  SharedDtor();
}

void Sheet_DragonsoulFly::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonsoulFly::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonsoulFly::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonsoulFly_descriptor_;
}

const Sheet_DragonsoulFly& Sheet_DragonsoulFly::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

Sheet_DragonsoulFly* Sheet_DragonsoulFly::default_instance_ = NULL;

Sheet_DragonsoulFly* Sheet_DragonsoulFly::New() const {
  return new Sheet_DragonsoulFly;
}

void Sheet_DragonsoulFly::Clear() {
  e_dragonsoulfly_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonsoulFly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonsoulFly E_DragonsoulFly_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonsoulFly_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonsoulfly_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonsoulFly_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonsoulFly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonsoulFly E_DragonsoulFly_List = 1;
  for (int i = 0; i < this->e_dragonsoulfly_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonsoulfly_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonsoulFly::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonsoulFly E_DragonsoulFly_List = 1;
  for (int i = 0; i < this->e_dragonsoulfly_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonsoulfly_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonsoulFly::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonsoulFly E_DragonsoulFly_List = 1;
  total_size += 1 * this->e_dragonsoulfly_list_size();
  for (int i = 0; i < this->e_dragonsoulfly_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonsoulfly_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonsoulFly::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonsoulFly* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonsoulFly*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonsoulFly::MergeFrom(const Sheet_DragonsoulFly& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonsoulfly_list_.MergeFrom(from.e_dragonsoulfly_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonsoulFly::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonsoulFly::CopyFrom(const Sheet_DragonsoulFly& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonsoulFly::IsInitialized() const {

  return true;
}

void Sheet_DragonsoulFly::Swap(Sheet_DragonsoulFly* other) {
  if (other != this) {
    e_dragonsoulfly_list_.Swap(&other->e_dragonsoulfly_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonsoulFly::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonsoulFly_descriptor_;
  metadata.reflection = Sheet_DragonsoulFly_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulAwakeAwakeDesc::kMFlyAddratioFieldNumber;
const int E_DragonsoulAwakeAwakeDesc::kMLvAddratioFieldNumber;
const int E_DragonsoulAwakeAwakeDesc::kMValueFieldNumber;
const int E_DragonsoulAwakeAwakeDesc::kMAttFieldNumber;
const int E_DragonsoulAwakeAwakeDesc::kMNumFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulAwakeAwakeDesc::E_DragonsoulAwakeAwakeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulAwakeAwakeDesc::InitAsDefaultInstance() {
}

E_DragonsoulAwakeAwakeDesc::E_DragonsoulAwakeAwakeDesc(const E_DragonsoulAwakeAwakeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulAwakeAwakeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_flyaddratio_ = 0;
  m_lvaddratio_ = 0;
  m_value_ = 0;
  m_att_ = 0;
  m_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulAwakeAwakeDesc::~E_DragonsoulAwakeAwakeDesc() {
  SharedDtor();
}

void E_DragonsoulAwakeAwakeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonsoulAwakeAwakeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulAwakeAwakeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulAwakeAwakeDesc_descriptor_;
}

const E_DragonsoulAwakeAwakeDesc& E_DragonsoulAwakeAwakeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulAwakeAwakeDesc* E_DragonsoulAwakeAwakeDesc::default_instance_ = NULL;

E_DragonsoulAwakeAwakeDesc* E_DragonsoulAwakeAwakeDesc::New() const {
  return new E_DragonsoulAwakeAwakeDesc;
}

void E_DragonsoulAwakeAwakeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_flyaddratio_ = 0;
    m_lvaddratio_ = 0;
    m_value_ = 0;
    m_att_ = 0;
    m_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulAwakeAwakeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_flyAddratio = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_flyaddratio_)));
          set_has_m_flyaddratio();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_lvAddratio;
        break;
      }

      // optional int32 m_lvAddratio = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvAddratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvaddratio_)));
          set_has_m_lvaddratio();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_att;
        break;
      }

      // optional int32 m_att = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_att:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_att_)));
          set_has_m_att();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulAwakeAwakeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_flyAddratio = 1;
  if (has_m_flyaddratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_flyaddratio(), output);
  }

  // optional int32 m_lvAddratio = 2;
  if (has_m_lvaddratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lvaddratio(), output);
  }

  // optional int32 m_value = 3;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_value(), output);
  }

  // optional int32 m_att = 4;
  if (has_m_att()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_att(), output);
  }

  // optional int32 m_num = 5;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulAwakeAwakeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_flyAddratio = 1;
  if (has_m_flyaddratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_flyaddratio(), target);
  }

  // optional int32 m_lvAddratio = 2;
  if (has_m_lvaddratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lvaddratio(), target);
  }

  // optional int32 m_value = 3;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_value(), target);
  }

  // optional int32 m_att = 4;
  if (has_m_att()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_att(), target);
  }

  // optional int32 m_num = 5;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulAwakeAwakeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_flyAddratio = 1;
    if (has_m_flyaddratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_flyaddratio());
    }

    // optional int32 m_lvAddratio = 2;
    if (has_m_lvaddratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvaddratio());
    }

    // optional int32 m_value = 3;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_att = 4;
    if (has_m_att()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_att());
    }

    // optional int32 m_num = 5;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulAwakeAwakeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulAwakeAwakeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulAwakeAwakeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulAwakeAwakeDesc::MergeFrom(const E_DragonsoulAwakeAwakeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_flyaddratio()) {
      set_m_flyaddratio(from.m_flyaddratio());
    }
    if (from.has_m_lvaddratio()) {
      set_m_lvaddratio(from.m_lvaddratio());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_att()) {
      set_m_att(from.m_att());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulAwakeAwakeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulAwakeAwakeDesc::CopyFrom(const E_DragonsoulAwakeAwakeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulAwakeAwakeDesc::IsInitialized() const {

  return true;
}

void E_DragonsoulAwakeAwakeDesc::Swap(E_DragonsoulAwakeAwakeDesc* other) {
  if (other != this) {
    std::swap(m_flyaddratio_, other->m_flyaddratio_);
    std::swap(m_lvaddratio_, other->m_lvaddratio_);
    std::swap(m_value_, other->m_value_);
    std::swap(m_att_, other->m_att_);
    std::swap(m_num_, other->m_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulAwakeAwakeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulAwakeAwakeDesc_descriptor_;
  metadata.reflection = E_DragonsoulAwakeAwakeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulAwake::kMPositionFieldNumber;
const int E_DragonsoulAwake::kMAwakeItemFieldNumber;
const int E_DragonsoulAwake::kMAwaketoplimitFieldNumber;
const int E_DragonsoulAwake::kMAwakeFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulAwake::E_DragonsoulAwake()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulAwake::InitAsDefaultInstance() {
}

E_DragonsoulAwake::E_DragonsoulAwake(const E_DragonsoulAwake& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulAwake::SharedCtor() {
  _cached_size_ = 0;
  m_position_ = 0;
  m_awakeitem_ = 0;
  m_awaketoplimit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulAwake::~E_DragonsoulAwake() {
  SharedDtor();
}

void E_DragonsoulAwake::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonsoulAwake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulAwake::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulAwake_descriptor_;
}

const E_DragonsoulAwake& E_DragonsoulAwake::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulAwake* E_DragonsoulAwake::default_instance_ = NULL;

E_DragonsoulAwake* E_DragonsoulAwake::New() const {
  return new E_DragonsoulAwake;
}

void E_DragonsoulAwake::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_position_ = 0;
    m_awakeitem_ = 0;
    m_awaketoplimit_ = 0;
  }
  m_awake_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulAwake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_position = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_awakeItem;
        break;
      }

      // optional int32 m_awakeItem = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeitem_)));
          set_has_m_awakeitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_awaketoplimit;
        break;
      }

      // optional int32 m_awaketoplimit = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awaketoplimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awaketoplimit_)));
          set_has_m_awaketoplimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_awake;
        break;
      }

      // repeated .proto_ff.E_DragonsoulAwakeAwakeDesc m_awake = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_awake:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_awake()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_awake;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulAwake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_position = 1;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_position(), output);
  }

  // optional int32 m_awakeItem = 2;
  if (has_m_awakeitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_awakeitem(), output);
  }

  // optional int32 m_awaketoplimit = 3;
  if (has_m_awaketoplimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_awaketoplimit(), output);
  }

  // repeated .proto_ff.E_DragonsoulAwakeAwakeDesc m_awake = 4;
  for (int i = 0; i < this->m_awake_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_awake(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulAwake::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_position = 1;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_position(), target);
  }

  // optional int32 m_awakeItem = 2;
  if (has_m_awakeitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_awakeitem(), target);
  }

  // optional int32 m_awaketoplimit = 3;
  if (has_m_awaketoplimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_awaketoplimit(), target);
  }

  // repeated .proto_ff.E_DragonsoulAwakeAwakeDesc m_awake = 4;
  for (int i = 0; i < this->m_awake_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_awake(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulAwake::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_position = 1;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional int32 m_awakeItem = 2;
    if (has_m_awakeitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeitem());
    }

    // optional int32 m_awaketoplimit = 3;
    if (has_m_awaketoplimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awaketoplimit());
    }

  }
  // repeated .proto_ff.E_DragonsoulAwakeAwakeDesc m_awake = 4;
  total_size += 1 * this->m_awake_size();
  for (int i = 0; i < this->m_awake_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_awake(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulAwake::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulAwake* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulAwake*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulAwake::MergeFrom(const E_DragonsoulAwake& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_awake_.MergeFrom(from.m_awake_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_awakeitem()) {
      set_m_awakeitem(from.m_awakeitem());
    }
    if (from.has_m_awaketoplimit()) {
      set_m_awaketoplimit(from.m_awaketoplimit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulAwake::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulAwake::CopyFrom(const E_DragonsoulAwake& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulAwake::IsInitialized() const {

  return true;
}

void E_DragonsoulAwake::Swap(E_DragonsoulAwake* other) {
  if (other != this) {
    std::swap(m_position_, other->m_position_);
    std::swap(m_awakeitem_, other->m_awakeitem_);
    std::swap(m_awaketoplimit_, other->m_awaketoplimit_);
    m_awake_.Swap(&other->m_awake_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulAwake::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulAwake_descriptor_;
  metadata.reflection = E_DragonsoulAwake_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonsoulAwake::kEDragonsoulAwakeListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonsoulAwake::Sheet_DragonsoulAwake()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonsoulAwake::InitAsDefaultInstance() {
}

Sheet_DragonsoulAwake::Sheet_DragonsoulAwake(const Sheet_DragonsoulAwake& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonsoulAwake::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonsoulAwake::~Sheet_DragonsoulAwake() {
  SharedDtor();
}

void Sheet_DragonsoulAwake::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonsoulAwake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonsoulAwake::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonsoulAwake_descriptor_;
}

const Sheet_DragonsoulAwake& Sheet_DragonsoulAwake::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

Sheet_DragonsoulAwake* Sheet_DragonsoulAwake::default_instance_ = NULL;

Sheet_DragonsoulAwake* Sheet_DragonsoulAwake::New() const {
  return new Sheet_DragonsoulAwake;
}

void Sheet_DragonsoulAwake::Clear() {
  e_dragonsoulawake_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonsoulAwake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonsoulAwake E_DragonsoulAwake_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonsoulAwake_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonsoulawake_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonsoulAwake_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonsoulAwake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonsoulAwake E_DragonsoulAwake_List = 1;
  for (int i = 0; i < this->e_dragonsoulawake_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonsoulawake_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonsoulAwake::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonsoulAwake E_DragonsoulAwake_List = 1;
  for (int i = 0; i < this->e_dragonsoulawake_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonsoulawake_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonsoulAwake::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonsoulAwake E_DragonsoulAwake_List = 1;
  total_size += 1 * this->e_dragonsoulawake_list_size();
  for (int i = 0; i < this->e_dragonsoulawake_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonsoulawake_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonsoulAwake::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonsoulAwake* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonsoulAwake*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonsoulAwake::MergeFrom(const Sheet_DragonsoulAwake& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonsoulawake_list_.MergeFrom(from.e_dragonsoulawake_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonsoulAwake::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonsoulAwake::CopyFrom(const Sheet_DragonsoulAwake& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonsoulAwake::IsInitialized() const {

  return true;
}

void Sheet_DragonsoulAwake::Swap(Sheet_DragonsoulAwake* other) {
  if (other != this) {
    e_dragonsoulawake_list_.Swap(&other->e_dragonsoulawake_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonsoulAwake::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonsoulAwake_descriptor_;
  metadata.reflection = Sheet_DragonsoulAwake_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulName::kMIdFieldNumber;
const int E_DragonsoulName::kMFunctionidFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulName::E_DragonsoulName()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulName::InitAsDefaultInstance() {
}

E_DragonsoulName::E_DragonsoulName(const E_DragonsoulName& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulName::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_functionid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulName::~E_DragonsoulName() {
  SharedDtor();
}

void E_DragonsoulName::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonsoulName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulName_descriptor_;
}

const E_DragonsoulName& E_DragonsoulName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulName* E_DragonsoulName::default_instance_ = NULL;

E_DragonsoulName* E_DragonsoulName::New() const {
  return new E_DragonsoulName;
}

void E_DragonsoulName::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_functionid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_functionid;
        break;
      }

      // optional int32 m_functionid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_functionid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_functionid_)));
          set_has_m_functionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_functionid = 2;
  if (has_m_functionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_functionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulName::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_functionid = 2;
  if (has_m_functionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_functionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulName::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_functionid = 2;
    if (has_m_functionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_functionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulName::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulName* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulName*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulName::MergeFrom(const E_DragonsoulName& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_functionid()) {
      set_m_functionid(from.m_functionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulName::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulName::CopyFrom(const E_DragonsoulName& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulName::IsInitialized() const {

  return true;
}

void E_DragonsoulName::Swap(E_DragonsoulName* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_functionid_, other->m_functionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulName_descriptor_;
  metadata.reflection = E_DragonsoulName_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonsoulName::kEDragonsoulNameListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonsoulName::Sheet_DragonsoulName()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonsoulName::InitAsDefaultInstance() {
}

Sheet_DragonsoulName::Sheet_DragonsoulName(const Sheet_DragonsoulName& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonsoulName::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonsoulName::~Sheet_DragonsoulName() {
  SharedDtor();
}

void Sheet_DragonsoulName::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonsoulName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonsoulName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonsoulName_descriptor_;
}

const Sheet_DragonsoulName& Sheet_DragonsoulName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

Sheet_DragonsoulName* Sheet_DragonsoulName::default_instance_ = NULL;

Sheet_DragonsoulName* Sheet_DragonsoulName::New() const {
  return new Sheet_DragonsoulName;
}

void Sheet_DragonsoulName::Clear() {
  e_dragonsoulname_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonsoulName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonsoulName E_DragonsoulName_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonsoulName_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonsoulname_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonsoulName_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonsoulName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonsoulName E_DragonsoulName_List = 1;
  for (int i = 0; i < this->e_dragonsoulname_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonsoulname_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonsoulName::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonsoulName E_DragonsoulName_List = 1;
  for (int i = 0; i < this->e_dragonsoulname_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonsoulname_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonsoulName::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonsoulName E_DragonsoulName_List = 1;
  total_size += 1 * this->e_dragonsoulname_list_size();
  for (int i = 0; i < this->e_dragonsoulname_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonsoulname_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonsoulName::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonsoulName* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonsoulName*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonsoulName::MergeFrom(const Sheet_DragonsoulName& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonsoulname_list_.MergeFrom(from.e_dragonsoulname_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonsoulName::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonsoulName::CopyFrom(const Sheet_DragonsoulName& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonsoulName::IsInitialized() const {

  return true;
}

void Sheet_DragonsoulName::Swap(Sheet_DragonsoulName* other) {
  if (other != this) {
    e_dragonsoulname_list_.Swap(&other->e_dragonsoulname_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonsoulName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonsoulName_descriptor_;
  metadata.reflection = Sheet_DragonsoulName_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulStarcollectAttributeDesc::kMValueFieldNumber;
const int E_DragonsoulStarcollectAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulStarcollectAttributeDesc::E_DragonsoulStarcollectAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulStarcollectAttributeDesc::InitAsDefaultInstance() {
}

E_DragonsoulStarcollectAttributeDesc::E_DragonsoulStarcollectAttributeDesc(const E_DragonsoulStarcollectAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulStarcollectAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulStarcollectAttributeDesc::~E_DragonsoulStarcollectAttributeDesc() {
  SharedDtor();
}

void E_DragonsoulStarcollectAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonsoulStarcollectAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulStarcollectAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulStarcollectAttributeDesc_descriptor_;
}

const E_DragonsoulStarcollectAttributeDesc& E_DragonsoulStarcollectAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulStarcollectAttributeDesc* E_DragonsoulStarcollectAttributeDesc::default_instance_ = NULL;

E_DragonsoulStarcollectAttributeDesc* E_DragonsoulStarcollectAttributeDesc::New() const {
  return new E_DragonsoulStarcollectAttributeDesc;
}

void E_DragonsoulStarcollectAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulStarcollectAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulStarcollectAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulStarcollectAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulStarcollectAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulStarcollectAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulStarcollectAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulStarcollectAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulStarcollectAttributeDesc::MergeFrom(const E_DragonsoulStarcollectAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulStarcollectAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulStarcollectAttributeDesc::CopyFrom(const E_DragonsoulStarcollectAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulStarcollectAttributeDesc::IsInitialized() const {

  return true;
}

void E_DragonsoulStarcollectAttributeDesc::Swap(E_DragonsoulStarcollectAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulStarcollectAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulStarcollectAttributeDesc_descriptor_;
  metadata.reflection = E_DragonsoulStarcollectAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_DragonsoulStarcollect::kMIdFieldNumber;
const int E_DragonsoulStarcollect::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_DragonsoulStarcollect::E_DragonsoulStarcollect()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_DragonsoulStarcollect::InitAsDefaultInstance() {
}

E_DragonsoulStarcollect::E_DragonsoulStarcollect(const E_DragonsoulStarcollect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_DragonsoulStarcollect::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_DragonsoulStarcollect::~E_DragonsoulStarcollect() {
  SharedDtor();
}

void E_DragonsoulStarcollect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_DragonsoulStarcollect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_DragonsoulStarcollect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DragonsoulStarcollect_descriptor_;
}

const E_DragonsoulStarcollect& E_DragonsoulStarcollect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

E_DragonsoulStarcollect* E_DragonsoulStarcollect::default_instance_ = NULL;

E_DragonsoulStarcollect* E_DragonsoulStarcollect::New() const {
  return new E_DragonsoulStarcollect;
}

void E_DragonsoulStarcollect::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_DragonsoulStarcollect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_DragonsoulStarcollectAttributeDesc m_attribute = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_DragonsoulStarcollect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // repeated .proto_ff.E_DragonsoulStarcollectAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_DragonsoulStarcollect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // repeated .proto_ff.E_DragonsoulStarcollectAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_DragonsoulStarcollect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  // repeated .proto_ff.E_DragonsoulStarcollectAttributeDesc m_attribute = 2;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_DragonsoulStarcollect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_DragonsoulStarcollect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_DragonsoulStarcollect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_DragonsoulStarcollect::MergeFrom(const E_DragonsoulStarcollect& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_DragonsoulStarcollect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_DragonsoulStarcollect::CopyFrom(const E_DragonsoulStarcollect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_DragonsoulStarcollect::IsInitialized() const {

  return true;
}

void E_DragonsoulStarcollect::Swap(E_DragonsoulStarcollect* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_DragonsoulStarcollect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_DragonsoulStarcollect_descriptor_;
  metadata.reflection = E_DragonsoulStarcollect_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_DragonsoulStarcollect::kEDragonsoulStarcollectListFieldNumber;
#endif  // !_MSC_VER

Sheet_DragonsoulStarcollect::Sheet_DragonsoulStarcollect()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_DragonsoulStarcollect::InitAsDefaultInstance() {
}

Sheet_DragonsoulStarcollect::Sheet_DragonsoulStarcollect(const Sheet_DragonsoulStarcollect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_DragonsoulStarcollect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_DragonsoulStarcollect::~Sheet_DragonsoulStarcollect() {
  SharedDtor();
}

void Sheet_DragonsoulStarcollect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_DragonsoulStarcollect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_DragonsoulStarcollect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_DragonsoulStarcollect_descriptor_;
}

const Sheet_DragonsoulStarcollect& Sheet_DragonsoulStarcollect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fDragonsoul_2eproto();
  return *default_instance_;
}

Sheet_DragonsoulStarcollect* Sheet_DragonsoulStarcollect::default_instance_ = NULL;

Sheet_DragonsoulStarcollect* Sheet_DragonsoulStarcollect::New() const {
  return new Sheet_DragonsoulStarcollect;
}

void Sheet_DragonsoulStarcollect::Clear() {
  e_dragonsoulstarcollect_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_DragonsoulStarcollect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_DragonsoulStarcollect E_DragonsoulStarcollect_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_DragonsoulStarcollect_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_dragonsoulstarcollect_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_DragonsoulStarcollect_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_DragonsoulStarcollect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_DragonsoulStarcollect E_DragonsoulStarcollect_List = 1;
  for (int i = 0; i < this->e_dragonsoulstarcollect_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_dragonsoulstarcollect_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_DragonsoulStarcollect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_DragonsoulStarcollect E_DragonsoulStarcollect_List = 1;
  for (int i = 0; i < this->e_dragonsoulstarcollect_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_dragonsoulstarcollect_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_DragonsoulStarcollect::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_DragonsoulStarcollect E_DragonsoulStarcollect_List = 1;
  total_size += 1 * this->e_dragonsoulstarcollect_list_size();
  for (int i = 0; i < this->e_dragonsoulstarcollect_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_dragonsoulstarcollect_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_DragonsoulStarcollect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_DragonsoulStarcollect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_DragonsoulStarcollect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_DragonsoulStarcollect::MergeFrom(const Sheet_DragonsoulStarcollect& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_dragonsoulstarcollect_list_.MergeFrom(from.e_dragonsoulstarcollect_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_DragonsoulStarcollect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_DragonsoulStarcollect::CopyFrom(const Sheet_DragonsoulStarcollect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_DragonsoulStarcollect::IsInitialized() const {

  return true;
}

void Sheet_DragonsoulStarcollect::Swap(Sheet_DragonsoulStarcollect* other) {
  if (other != this) {
    e_dragonsoulstarcollect_list_.Swap(&other->e_dragonsoulstarcollect_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_DragonsoulStarcollect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_DragonsoulStarcollect_descriptor_;
  metadata.reflection = Sheet_DragonsoulStarcollect_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
