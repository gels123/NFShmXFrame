// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: condition.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "condition.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* conditionconditionconditionDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  conditionconditionconditionDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* conditioncondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  conditioncondition_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_conditioncondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_conditioncondition_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_condition_2eproto() {
  protobuf_AddDesc_condition_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "condition.proto");
  GOOGLE_CHECK(file != NULL);
  conditionconditionconditionDesc_descriptor_ = file->message_type(0);
  static const int conditionconditionconditionDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionconditionconditionDesc, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionconditionconditionDesc, param_),
  };
  conditionconditionconditionDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      conditionconditionconditionDesc_descriptor_,
      conditionconditionconditionDesc::default_instance_,
      conditionconditionconditionDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionconditionconditionDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionconditionconditionDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(conditionconditionconditionDesc));
  conditioncondition_descriptor_ = file->message_type(1);
  static const int conditioncondition_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditioncondition, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditioncondition, condition_),
  };
  conditioncondition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      conditioncondition_descriptor_,
      conditioncondition::default_instance_,
      conditioncondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditioncondition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditioncondition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(conditioncondition));
  Sheet_conditioncondition_descriptor_ = file->message_type(2);
  static const int Sheet_conditioncondition_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_conditioncondition, conditioncondition_list_),
  };
  Sheet_conditioncondition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_conditioncondition_descriptor_,
      Sheet_conditioncondition::default_instance_,
      Sheet_conditioncondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_conditioncondition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_conditioncondition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_conditioncondition));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_condition_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    conditionconditionconditionDesc_descriptor_, &conditionconditionconditionDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    conditioncondition_descriptor_, &conditioncondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_conditioncondition_descriptor_, &Sheet_conditioncondition::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_condition_2eproto() {
  delete conditionconditionconditionDesc::default_instance_;
  delete conditionconditionconditionDesc_reflection_;
  delete conditioncondition::default_instance_;
  delete conditioncondition_reflection_;
  delete Sheet_conditioncondition::default_instance_;
  delete Sheet_conditioncondition_reflection_;
}

void protobuf_AddDesc_condition_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017condition.proto\022\010proto_ff\032\025yd_fieldopt"
    "ions.proto\"V\n\037conditionconditionconditio"
    "nDesc\022\030\n\004Type\030\001 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\031\n\005Param"
    "\030\002 \001(\005B\n\302\377\024\006\345\217\202\346\225\260\"v\n\022conditioncondition"
    "\022\022\n\002id\030\001 \001(\005B\006\302\377\024\002id\022L\n\tcondition\030\002 \003(\0132"
    ").proto_ff.conditionconditionconditionDe"
    "scB\016\302\377\024\006\346\235\241\344\273\266\210\301\024\003\"_\n\030Sheet_conditioncon"
    "dition\022C\n\027conditioncondition_List\030\001 \003(\0132"
    "\034.proto_ff.conditionconditionB\004\210\301\024(", 355);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "condition.proto", &protobuf_RegisterTypes);
  conditionconditionconditionDesc::default_instance_ = new conditionconditionconditionDesc();
  conditioncondition::default_instance_ = new conditioncondition();
  Sheet_conditioncondition::default_instance_ = new Sheet_conditioncondition();
  conditionconditionconditionDesc::default_instance_->InitAsDefaultInstance();
  conditioncondition::default_instance_->InitAsDefaultInstance();
  Sheet_conditioncondition::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_condition_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_condition_2eproto {
  StaticDescriptorInitializer_condition_2eproto() {
    protobuf_AddDesc_condition_2eproto();
  }
} static_descriptor_initializer_condition_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int conditionconditionconditionDesc::kTypeFieldNumber;
const int conditionconditionconditionDesc::kParamFieldNumber;
#endif  // !_MSC_VER

conditionconditionconditionDesc::conditionconditionconditionDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void conditionconditionconditionDesc::InitAsDefaultInstance() {
}

conditionconditionconditionDesc::conditionconditionconditionDesc(const conditionconditionconditionDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void conditionconditionconditionDesc::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  param_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

conditionconditionconditionDesc::~conditionconditionconditionDesc() {
  SharedDtor();
}

void conditionconditionconditionDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void conditionconditionconditionDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* conditionconditionconditionDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return conditionconditionconditionDesc_descriptor_;
}

const conditionconditionconditionDesc& conditionconditionconditionDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_condition_2eproto();
  return *default_instance_;
}

conditionconditionconditionDesc* conditionconditionconditionDesc::default_instance_ = NULL;

conditionconditionconditionDesc* conditionconditionconditionDesc::New() const {
  return new conditionconditionconditionDesc;
}

void conditionconditionconditionDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    param_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool conditionconditionconditionDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Param;
        break;
      }

      // optional int32 Param = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_)));
          set_has_param();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void conditionconditionconditionDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 Param = 2;
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->param(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* conditionconditionconditionDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 Param = 2;
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->param(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int conditionconditionconditionDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 Param = 2;
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void conditionconditionconditionDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const conditionconditionconditionDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const conditionconditionconditionDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void conditionconditionconditionDesc::MergeFrom(const conditionconditionconditionDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void conditionconditionconditionDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void conditionconditionconditionDesc::CopyFrom(const conditionconditionconditionDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool conditionconditionconditionDesc::IsInitialized() const {

  return true;
}

void conditionconditionconditionDesc::Swap(conditionconditionconditionDesc* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(param_, other->param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata conditionconditionconditionDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = conditionconditionconditionDesc_descriptor_;
  metadata.reflection = conditionconditionconditionDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int conditioncondition::kIdFieldNumber;
const int conditioncondition::kConditionFieldNumber;
#endif  // !_MSC_VER

conditioncondition::conditioncondition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void conditioncondition::InitAsDefaultInstance() {
}

conditioncondition::conditioncondition(const conditioncondition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void conditioncondition::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

conditioncondition::~conditioncondition() {
  SharedDtor();
}

void conditioncondition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void conditioncondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* conditioncondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return conditioncondition_descriptor_;
}

const conditioncondition& conditioncondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_condition_2eproto();
  return *default_instance_;
}

conditioncondition* conditioncondition::default_instance_ = NULL;

conditioncondition* conditioncondition::New() const {
  return new conditioncondition;
}

void conditioncondition::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  condition_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool conditioncondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_condition;
        break;
      }

      // repeated .proto_ff.conditionconditionconditionDesc condition = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_condition()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_condition;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void conditioncondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .proto_ff.conditionconditionconditionDesc condition = 2;
  for (int i = 0; i < this->condition_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->condition(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* conditioncondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .proto_ff.conditionconditionconditionDesc condition = 2;
  for (int i = 0; i < this->condition_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->condition(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int conditioncondition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  // repeated .proto_ff.conditionconditionconditionDesc condition = 2;
  total_size += 1 * this->condition_size();
  for (int i = 0; i < this->condition_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->condition(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void conditioncondition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const conditioncondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const conditioncondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void conditioncondition::MergeFrom(const conditioncondition& from) {
  GOOGLE_CHECK_NE(&from, this);
  condition_.MergeFrom(from.condition_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void conditioncondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void conditioncondition::CopyFrom(const conditioncondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool conditioncondition::IsInitialized() const {

  return true;
}

void conditioncondition::Swap(conditioncondition* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    condition_.Swap(&other->condition_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata conditioncondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = conditioncondition_descriptor_;
  metadata.reflection = conditioncondition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_conditioncondition::kConditionconditionListFieldNumber;
#endif  // !_MSC_VER

Sheet_conditioncondition::Sheet_conditioncondition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_conditioncondition::InitAsDefaultInstance() {
}

Sheet_conditioncondition::Sheet_conditioncondition(const Sheet_conditioncondition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_conditioncondition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_conditioncondition::~Sheet_conditioncondition() {
  SharedDtor();
}

void Sheet_conditioncondition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_conditioncondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_conditioncondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_conditioncondition_descriptor_;
}

const Sheet_conditioncondition& Sheet_conditioncondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_condition_2eproto();
  return *default_instance_;
}

Sheet_conditioncondition* Sheet_conditioncondition::default_instance_ = NULL;

Sheet_conditioncondition* Sheet_conditioncondition::New() const {
  return new Sheet_conditioncondition;
}

void Sheet_conditioncondition::Clear() {
  conditioncondition_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_conditioncondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.conditioncondition conditioncondition_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_conditioncondition_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_conditioncondition_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_conditioncondition_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_conditioncondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.conditioncondition conditioncondition_List = 1;
  for (int i = 0; i < this->conditioncondition_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->conditioncondition_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_conditioncondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.conditioncondition conditioncondition_List = 1;
  for (int i = 0; i < this->conditioncondition_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->conditioncondition_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_conditioncondition::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.conditioncondition conditioncondition_List = 1;
  total_size += 1 * this->conditioncondition_list_size();
  for (int i = 0; i < this->conditioncondition_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->conditioncondition_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_conditioncondition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_conditioncondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_conditioncondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_conditioncondition::MergeFrom(const Sheet_conditioncondition& from) {
  GOOGLE_CHECK_NE(&from, this);
  conditioncondition_list_.MergeFrom(from.conditioncondition_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_conditioncondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_conditioncondition::CopyFrom(const Sheet_conditioncondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_conditioncondition::IsInitialized() const {

  return true;
}

void Sheet_conditioncondition::Swap(Sheet_conditioncondition* other) {
  if (other != this) {
    conditioncondition_list_.Swap(&other->conditioncondition_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_conditioncondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_conditioncondition_descriptor_;
  metadata.reflection = Sheet_conditioncondition_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
