// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Qunxiongzhulu.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Qunxiongzhulu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_QunxiongzhuluConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QunxiongzhuluConstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_QunxiongzhuluConstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_QunxiongzhuluSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QunxiongzhuluSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_QunxiongzhuluSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_QunxiongzhuluServerrankItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QunxiongzhuluServerrankItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_QunxiongzhuluServerrank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QunxiongzhuluServerrank_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluServerrank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_QunxiongzhuluServerrank_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_QunxiongzhuluWorldrankItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QunxiongzhuluWorldrankItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_QunxiongzhuluWorldrank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QunxiongzhuluWorldrank_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluWorldrank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_QunxiongzhuluWorldrank_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_QunxiongzhuluLocalrankItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QunxiongzhuluLocalrankItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_QunxiongzhuluLocalrank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QunxiongzhuluLocalrank_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluLocalrank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_QunxiongzhuluLocalrank_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_QunxiongzhuluBossrewardItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QunxiongzhuluBossrewardItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_QunxiongzhuluBossreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QunxiongzhuluBossreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluBossreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_QunxiongzhuluBossreward_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fQunxiongzhulu_2eproto() {
  protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Qunxiongzhulu.proto");
  GOOGLE_CHECK(file != NULL);
  E_QunxiongzhuluConstant_descriptor_ = file->message_type(0);
  static const int E_QunxiongzhuluConstant_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_thismap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_thisbossid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_thisbossponit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_gatemonster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_gatepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_thispickuplimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_crossmap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_crossbossid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_crossbosspoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_crosspickuplimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_carid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_preview_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_actid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_crosspoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, m_carpoint_),
  };
  E_QunxiongzhuluConstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QunxiongzhuluConstant_descriptor_,
      E_QunxiongzhuluConstant::default_instance_,
      E_QunxiongzhuluConstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluConstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QunxiongzhuluConstant));
  Sheet_QunxiongzhuluConstant_descriptor_ = file->message_type(1);
  static const int Sheet_QunxiongzhuluConstant_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluConstant, e_qunxiongzhuluconstant_list_),
  };
  Sheet_QunxiongzhuluConstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_QunxiongzhuluConstant_descriptor_,
      Sheet_QunxiongzhuluConstant::default_instance_,
      Sheet_QunxiongzhuluConstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluConstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluConstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_QunxiongzhuluConstant));
  E_QunxiongzhuluSkill_descriptor_ = file->message_type(2);
  static const int E_QunxiongzhuluSkill_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluSkill, m_id_),
  };
  E_QunxiongzhuluSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QunxiongzhuluSkill_descriptor_,
      E_QunxiongzhuluSkill::default_instance_,
      E_QunxiongzhuluSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QunxiongzhuluSkill));
  Sheet_QunxiongzhuluSkill_descriptor_ = file->message_type(3);
  static const int Sheet_QunxiongzhuluSkill_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluSkill, e_qunxiongzhuluskill_list_),
  };
  Sheet_QunxiongzhuluSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_QunxiongzhuluSkill_descriptor_,
      Sheet_QunxiongzhuluSkill::default_instance_,
      Sheet_QunxiongzhuluSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_QunxiongzhuluSkill));
  E_QunxiongzhuluServerrankItemDesc_descriptor_ = file->message_type(4);
  static const int E_QunxiongzhuluServerrankItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluServerrankItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluServerrankItemDesc, m_id_),
  };
  E_QunxiongzhuluServerrankItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QunxiongzhuluServerrankItemDesc_descriptor_,
      E_QunxiongzhuluServerrankItemDesc::default_instance_,
      E_QunxiongzhuluServerrankItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluServerrankItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluServerrankItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QunxiongzhuluServerrankItemDesc));
  E_QunxiongzhuluServerrank_descriptor_ = file->message_type(5);
  static const int E_QunxiongzhuluServerrank_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluServerrank, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluServerrank, m_rankmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluServerrank, m_rankmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluServerrank, m_item_),
  };
  E_QunxiongzhuluServerrank_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QunxiongzhuluServerrank_descriptor_,
      E_QunxiongzhuluServerrank::default_instance_,
      E_QunxiongzhuluServerrank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluServerrank, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluServerrank, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QunxiongzhuluServerrank));
  Sheet_QunxiongzhuluServerrank_descriptor_ = file->message_type(6);
  static const int Sheet_QunxiongzhuluServerrank_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluServerrank, e_qunxiongzhuluserverrank_list_),
  };
  Sheet_QunxiongzhuluServerrank_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_QunxiongzhuluServerrank_descriptor_,
      Sheet_QunxiongzhuluServerrank::default_instance_,
      Sheet_QunxiongzhuluServerrank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluServerrank, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluServerrank, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_QunxiongzhuluServerrank));
  E_QunxiongzhuluWorldrankItemDesc_descriptor_ = file->message_type(7);
  static const int E_QunxiongzhuluWorldrankItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluWorldrankItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluWorldrankItemDesc, m_id_),
  };
  E_QunxiongzhuluWorldrankItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QunxiongzhuluWorldrankItemDesc_descriptor_,
      E_QunxiongzhuluWorldrankItemDesc::default_instance_,
      E_QunxiongzhuluWorldrankItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluWorldrankItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluWorldrankItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QunxiongzhuluWorldrankItemDesc));
  E_QunxiongzhuluWorldrank_descriptor_ = file->message_type(8);
  static const int E_QunxiongzhuluWorldrank_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluWorldrank, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluWorldrank, m_rankmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluWorldrank, m_rankmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluWorldrank, m_item_),
  };
  E_QunxiongzhuluWorldrank_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QunxiongzhuluWorldrank_descriptor_,
      E_QunxiongzhuluWorldrank::default_instance_,
      E_QunxiongzhuluWorldrank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluWorldrank, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluWorldrank, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QunxiongzhuluWorldrank));
  Sheet_QunxiongzhuluWorldrank_descriptor_ = file->message_type(9);
  static const int Sheet_QunxiongzhuluWorldrank_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluWorldrank, e_qunxiongzhuluworldrank_list_),
  };
  Sheet_QunxiongzhuluWorldrank_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_QunxiongzhuluWorldrank_descriptor_,
      Sheet_QunxiongzhuluWorldrank::default_instance_,
      Sheet_QunxiongzhuluWorldrank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluWorldrank, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluWorldrank, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_QunxiongzhuluWorldrank));
  E_QunxiongzhuluLocalrankItemDesc_descriptor_ = file->message_type(10);
  static const int E_QunxiongzhuluLocalrankItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluLocalrankItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluLocalrankItemDesc, m_id_),
  };
  E_QunxiongzhuluLocalrankItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QunxiongzhuluLocalrankItemDesc_descriptor_,
      E_QunxiongzhuluLocalrankItemDesc::default_instance_,
      E_QunxiongzhuluLocalrankItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluLocalrankItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluLocalrankItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QunxiongzhuluLocalrankItemDesc));
  E_QunxiongzhuluLocalrank_descriptor_ = file->message_type(11);
  static const int E_QunxiongzhuluLocalrank_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluLocalrank, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluLocalrank, m_rankmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluLocalrank, m_rankmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluLocalrank, m_item_),
  };
  E_QunxiongzhuluLocalrank_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QunxiongzhuluLocalrank_descriptor_,
      E_QunxiongzhuluLocalrank::default_instance_,
      E_QunxiongzhuluLocalrank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluLocalrank, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluLocalrank, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QunxiongzhuluLocalrank));
  Sheet_QunxiongzhuluLocalrank_descriptor_ = file->message_type(12);
  static const int Sheet_QunxiongzhuluLocalrank_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluLocalrank, e_qunxiongzhululocalrank_list_),
  };
  Sheet_QunxiongzhuluLocalrank_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_QunxiongzhuluLocalrank_descriptor_,
      Sheet_QunxiongzhuluLocalrank::default_instance_,
      Sheet_QunxiongzhuluLocalrank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluLocalrank, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluLocalrank, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_QunxiongzhuluLocalrank));
  E_QunxiongzhuluBossrewardItemDesc_descriptor_ = file->message_type(13);
  static const int E_QunxiongzhuluBossrewardItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluBossrewardItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluBossrewardItemDesc, m_id_),
  };
  E_QunxiongzhuluBossrewardItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QunxiongzhuluBossrewardItemDesc_descriptor_,
      E_QunxiongzhuluBossrewardItemDesc::default_instance_,
      E_QunxiongzhuluBossrewardItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluBossrewardItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluBossrewardItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QunxiongzhuluBossrewardItemDesc));
  E_QunxiongzhuluBossreward_descriptor_ = file->message_type(14);
  static const int E_QunxiongzhuluBossreward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluBossreward, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluBossreward, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluBossreward, m_item_),
  };
  E_QunxiongzhuluBossreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QunxiongzhuluBossreward_descriptor_,
      E_QunxiongzhuluBossreward::default_instance_,
      E_QunxiongzhuluBossreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluBossreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QunxiongzhuluBossreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QunxiongzhuluBossreward));
  Sheet_QunxiongzhuluBossreward_descriptor_ = file->message_type(15);
  static const int Sheet_QunxiongzhuluBossreward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluBossreward, e_qunxiongzhulubossreward_list_),
  };
  Sheet_QunxiongzhuluBossreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_QunxiongzhuluBossreward_descriptor_,
      Sheet_QunxiongzhuluBossreward::default_instance_,
      Sheet_QunxiongzhuluBossreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluBossreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QunxiongzhuluBossreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_QunxiongzhuluBossreward));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fQunxiongzhulu_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QunxiongzhuluConstant_descriptor_, &E_QunxiongzhuluConstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_QunxiongzhuluConstant_descriptor_, &Sheet_QunxiongzhuluConstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QunxiongzhuluSkill_descriptor_, &E_QunxiongzhuluSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_QunxiongzhuluSkill_descriptor_, &Sheet_QunxiongzhuluSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QunxiongzhuluServerrankItemDesc_descriptor_, &E_QunxiongzhuluServerrankItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QunxiongzhuluServerrank_descriptor_, &E_QunxiongzhuluServerrank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_QunxiongzhuluServerrank_descriptor_, &Sheet_QunxiongzhuluServerrank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QunxiongzhuluWorldrankItemDesc_descriptor_, &E_QunxiongzhuluWorldrankItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QunxiongzhuluWorldrank_descriptor_, &E_QunxiongzhuluWorldrank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_QunxiongzhuluWorldrank_descriptor_, &Sheet_QunxiongzhuluWorldrank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QunxiongzhuluLocalrankItemDesc_descriptor_, &E_QunxiongzhuluLocalrankItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QunxiongzhuluLocalrank_descriptor_, &E_QunxiongzhuluLocalrank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_QunxiongzhuluLocalrank_descriptor_, &Sheet_QunxiongzhuluLocalrank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QunxiongzhuluBossrewardItemDesc_descriptor_, &E_QunxiongzhuluBossrewardItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QunxiongzhuluBossreward_descriptor_, &E_QunxiongzhuluBossreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_QunxiongzhuluBossreward_descriptor_, &Sheet_QunxiongzhuluBossreward::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fQunxiongzhulu_2eproto() {
  delete E_QunxiongzhuluConstant::default_instance_;
  delete E_QunxiongzhuluConstant_reflection_;
  delete Sheet_QunxiongzhuluConstant::default_instance_;
  delete Sheet_QunxiongzhuluConstant_reflection_;
  delete E_QunxiongzhuluSkill::default_instance_;
  delete E_QunxiongzhuluSkill_reflection_;
  delete Sheet_QunxiongzhuluSkill::default_instance_;
  delete Sheet_QunxiongzhuluSkill_reflection_;
  delete E_QunxiongzhuluServerrankItemDesc::default_instance_;
  delete E_QunxiongzhuluServerrankItemDesc_reflection_;
  delete E_QunxiongzhuluServerrank::default_instance_;
  delete E_QunxiongzhuluServerrank_reflection_;
  delete Sheet_QunxiongzhuluServerrank::default_instance_;
  delete Sheet_QunxiongzhuluServerrank_reflection_;
  delete E_QunxiongzhuluWorldrankItemDesc::default_instance_;
  delete E_QunxiongzhuluWorldrankItemDesc_reflection_;
  delete E_QunxiongzhuluWorldrank::default_instance_;
  delete E_QunxiongzhuluWorldrank_reflection_;
  delete Sheet_QunxiongzhuluWorldrank::default_instance_;
  delete Sheet_QunxiongzhuluWorldrank_reflection_;
  delete E_QunxiongzhuluLocalrankItemDesc::default_instance_;
  delete E_QunxiongzhuluLocalrankItemDesc_reflection_;
  delete E_QunxiongzhuluLocalrank::default_instance_;
  delete E_QunxiongzhuluLocalrank_reflection_;
  delete Sheet_QunxiongzhuluLocalrank::default_instance_;
  delete Sheet_QunxiongzhuluLocalrank_reflection_;
  delete E_QunxiongzhuluBossrewardItemDesc::default_instance_;
  delete E_QunxiongzhuluBossrewardItemDesc_reflection_;
  delete E_QunxiongzhuluBossreward::default_instance_;
  delete E_QunxiongzhuluBossreward_reflection_;
  delete Sheet_QunxiongzhuluBossreward::default_instance_;
  delete Sheet_QunxiongzhuluBossreward_reflection_;
}

void protobuf_AddDesc_E_5fQunxiongzhulu_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025E_Qunxiongzhulu.proto\022\010proto_ff\032\025yd_fi"
    "eldoptions.proto\"\271\005\n\027E_QunxiongzhuluCons"
    "tant\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022#\n\tm_thisMap\030"
    "\002 \001(\005B\020\302\377\024\014\346\234\254\346\234\215\345\234\260\345\233\276\022&\n\014m_thisBossId\030"
    "\003 \001(\005B\020\302\377\024\014\346\234\254\346\234\215bossid\022*\n\017m_thisBossPon"
    "it\030\004 \001(\005B\021\302\377\024\r\346\234\254\346\234\215boss\347\202\271\0226\n\rm_gateMon"
    "ster\030\005 \001(\005B\037\302\377\024\033\350\267\250\346\234\215boss\344\274\240\351\200\201\347\202\271\346\200\252\347\211"
    "\251id\022,\n\013m_gatePoint\030\006 \001(\005B\027\302\377\024\023\350\267\250\346\234\215boss"
    "\344\274\240\351\200\201\347\202\271\0227\n\021m_thisPickupLimit\030\007 \001(\005B\034\302\377"
    "\024\030\346\234\254\346\234\215\344\270\252\344\272\272\346\213\276\345\217\226\344\270\212\351\231\220\022$\n\nm_crossMap"
    "\030\010 \001(\005B\020\302\377\024\014\350\267\250\346\234\215\345\234\260\345\233\276\022\'\n\rm_crossBossI"
    "d\030\t \001(\005B\020\302\377\024\014\350\267\250\346\234\215bossid\022+\n\020m_crossBoss"
    "Point\030\n \001(\005B\021\302\377\024\r\350\267\250\346\234\215boss\347\202\271\0228\n\022m_cros"
    "sPickupLimit\030\013 \001(\005B\034\302\377\024\030\350\267\250\346\234\215\344\270\252\344\272\272\346\213\276\345"
    "\217\226\344\270\212\351\231\220\022\035\n\007m_carId\030\014 \001(\005B\014\302\377\024\010\346\210\230\350\275\246id\022"
    "#\n\tm_preview\030\r \001(\005B\020\302\377\024\014\345\245\226\345\212\261\351\242\204\350\247\210\022\035\n\007"
    "m_actId\030\016 \001(\005B\014\302\377\024\010\346\264\273\345\212\250id\022-\n\014m_crossPo"
    "int\030\017 \003(\005B\027\302\377\024\017\350\267\250\346\234\215\345\207\272\347\224\237\347\202\271\210\301\024\010\022(\n\nm_"
    "carPoint\030\020 \003(\005B\024\302\377\024\014\346\210\230\350\275\246\345\235\220\346\240\207\210\301\024\020\"l\n\033"
    "Sheet_QunxiongzhuluConstant\022M\n\034E_Qunxion"
    "gzhuluConstant_List\030\001 \003(\0132!.proto_ff.E_Q"
    "unxiongzhuluConstantB\004\210\301\024\002\",\n\024E_Qunxiong"
    "zhuluSkill\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\"c\n\030Shee"
    "t_QunxiongzhuluSkill\022G\n\031E_QunxiongzhuluS"
    "kill_List\030\001 \003(\0132\036.proto_ff.E_Qunxiongzhu"
    "luSkillB\004\210\301\024\004\"T\n!E_QunxiongzhuluServerra"
    "nkItemDesc\022\031\n\005m_num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\024\n"
    "\004m_id\030\002 \001(\005B\006\302\377\024\002id\"\322\001\n\031E_QunxiongzhuluS"
    "erverrank\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022#\n\tm"
    "_rankMax\030\002 \001(\005B\020\302\377\024\014\345\220\215\346\254\241\344\270\212\351\231\220\022#\n\tm_ra"
    "nkMin\030\003 \001(\005B\020\302\377\024\014\345\220\215\346\254\241\344\270\213\351\231\220\022Q\n\006m_item\030"
    "\004 \003(\0132+.proto_ff.E_QunxiongzhuluServerra"
    "nkItemDescB\024\302\377\024\014\345\245\226\345\212\261\351\201\223\345\205\267\210\301\024\013\"r\n\035Shee"
    "t_QunxiongzhuluServerrank\022Q\n\036E_Qunxiongz"
    "huluServerrank_List\030\001 \003(\0132#.proto_ff.E_Q"
    "unxiongzhuluServerrankB\004\210\301\024\010\"S\n E_Qunxio"
    "ngzhuluWorldrankItemDesc\022\031\n\005m_num\030\001 \001(\005B"
    "\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002id\"\320\001\n\030E_"
    "QunxiongzhuluWorldrank\022\030\n\004m_id\030\001 \001(\005B\n\302\377"
    "\024\006\345\272\217\345\217\267\022#\n\tm_rankMax\030\002 \001(\005B\020\302\377\024\014\345\220\215\346\254\241\344"
    "\270\212\351\231\220\022#\n\tm_rankMin\030\003 \001(\005B\020\302\377\024\014\345\220\215\346\254\241\344\270\213\351"
    "\231\220\022P\n\006m_item\030\004 \003(\0132*.proto_ff.E_Qunxiong"
    "zhuluWorldrankItemDescB\024\302\377\024\014\345\245\226\345\212\261\351\201\223\345\205\267"
    "\210\301\024\013\"o\n\034Sheet_QunxiongzhuluWorldrank\022O\n\035"
    "E_QunxiongzhuluWorldrank_List\030\001 \003(\0132\".pr"
    "oto_ff.E_QunxiongzhuluWorldrankB\004\210\301\024\010\"S\n"
    " E_QunxiongzhuluLocalrankItemDesc\022\031\n\005m_n"
    "um\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002"
    "id\"\320\001\n\030E_QunxiongzhuluLocalrank\022\030\n\004m_id\030"
    "\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022#\n\tm_rankMax\030\002 \001(\005B\020\302\377"
    "\024\014\345\220\215\346\254\241\344\270\212\351\231\220\022#\n\tm_rankMin\030\003 \001(\005B\020\302\377\024\014\345"
    "\220\215\346\254\241\344\270\213\351\231\220\022P\n\006m_item\030\004 \003(\0132*.proto_ff.E"
    "_QunxiongzhuluLocalrankItemDescB\024\302\377\024\014\345\245\226"
    "\345\212\261\351\201\223\345\205\267\210\301\024\013\"o\n\034Sheet_QunxiongzhuluLoca"
    "lrank\022O\n\035E_QunxiongzhuluLocalrank_List\030\001"
    " \003(\0132\".proto_ff.E_QunxiongzhuluLocalrank"
    "B\004\210\301\024\010\"T\n!E_QunxiongzhuluBossrewardItemD"
    "esc\022\031\n\005m_num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_id\030\002"
    " \001(\005B\006\302\377\024\002id\"\255\001\n\031E_QunxiongzhuluBossrewa"
    "rd\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022#\n\006m_type\030\002"
    " \001(\005B\023\302\377\024\017\346\234\215\345\212\241\345\231\250\347\261\273\345\236\213\022Q\n\006m_item\030\003 \003("
    "\0132+.proto_ff.E_QunxiongzhuluBossrewardIt"
    "emDescB\024\302\377\024\014\345\245\226\345\212\261\351\201\223\345\205\267\210\301\024\010\"r\n\035Sheet_Qu"
    "nxiongzhuluBossreward\022Q\n\036E_Qunxiongzhulu"
    "Bossreward_List\030\001 \003(\0132#.proto_ff.E_Qunxi"
    "ongzhuluBossrewardB\004\210\301\024\004", 2624);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Qunxiongzhulu.proto", &protobuf_RegisterTypes);
  E_QunxiongzhuluConstant::default_instance_ = new E_QunxiongzhuluConstant();
  Sheet_QunxiongzhuluConstant::default_instance_ = new Sheet_QunxiongzhuluConstant();
  E_QunxiongzhuluSkill::default_instance_ = new E_QunxiongzhuluSkill();
  Sheet_QunxiongzhuluSkill::default_instance_ = new Sheet_QunxiongzhuluSkill();
  E_QunxiongzhuluServerrankItemDesc::default_instance_ = new E_QunxiongzhuluServerrankItemDesc();
  E_QunxiongzhuluServerrank::default_instance_ = new E_QunxiongzhuluServerrank();
  Sheet_QunxiongzhuluServerrank::default_instance_ = new Sheet_QunxiongzhuluServerrank();
  E_QunxiongzhuluWorldrankItemDesc::default_instance_ = new E_QunxiongzhuluWorldrankItemDesc();
  E_QunxiongzhuluWorldrank::default_instance_ = new E_QunxiongzhuluWorldrank();
  Sheet_QunxiongzhuluWorldrank::default_instance_ = new Sheet_QunxiongzhuluWorldrank();
  E_QunxiongzhuluLocalrankItemDesc::default_instance_ = new E_QunxiongzhuluLocalrankItemDesc();
  E_QunxiongzhuluLocalrank::default_instance_ = new E_QunxiongzhuluLocalrank();
  Sheet_QunxiongzhuluLocalrank::default_instance_ = new Sheet_QunxiongzhuluLocalrank();
  E_QunxiongzhuluBossrewardItemDesc::default_instance_ = new E_QunxiongzhuluBossrewardItemDesc();
  E_QunxiongzhuluBossreward::default_instance_ = new E_QunxiongzhuluBossreward();
  Sheet_QunxiongzhuluBossreward::default_instance_ = new Sheet_QunxiongzhuluBossreward();
  E_QunxiongzhuluConstant::default_instance_->InitAsDefaultInstance();
  Sheet_QunxiongzhuluConstant::default_instance_->InitAsDefaultInstance();
  E_QunxiongzhuluSkill::default_instance_->InitAsDefaultInstance();
  Sheet_QunxiongzhuluSkill::default_instance_->InitAsDefaultInstance();
  E_QunxiongzhuluServerrankItemDesc::default_instance_->InitAsDefaultInstance();
  E_QunxiongzhuluServerrank::default_instance_->InitAsDefaultInstance();
  Sheet_QunxiongzhuluServerrank::default_instance_->InitAsDefaultInstance();
  E_QunxiongzhuluWorldrankItemDesc::default_instance_->InitAsDefaultInstance();
  E_QunxiongzhuluWorldrank::default_instance_->InitAsDefaultInstance();
  Sheet_QunxiongzhuluWorldrank::default_instance_->InitAsDefaultInstance();
  E_QunxiongzhuluLocalrankItemDesc::default_instance_->InitAsDefaultInstance();
  E_QunxiongzhuluLocalrank::default_instance_->InitAsDefaultInstance();
  Sheet_QunxiongzhuluLocalrank::default_instance_->InitAsDefaultInstance();
  E_QunxiongzhuluBossrewardItemDesc::default_instance_->InitAsDefaultInstance();
  E_QunxiongzhuluBossreward::default_instance_->InitAsDefaultInstance();
  Sheet_QunxiongzhuluBossreward::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fQunxiongzhulu_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fQunxiongzhulu_2eproto {
  StaticDescriptorInitializer_E_5fQunxiongzhulu_2eproto() {
    protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  }
} static_descriptor_initializer_E_5fQunxiongzhulu_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_QunxiongzhuluConstant::kMIdFieldNumber;
const int E_QunxiongzhuluConstant::kMThisMapFieldNumber;
const int E_QunxiongzhuluConstant::kMThisBossIdFieldNumber;
const int E_QunxiongzhuluConstant::kMThisBossPonitFieldNumber;
const int E_QunxiongzhuluConstant::kMGateMonsterFieldNumber;
const int E_QunxiongzhuluConstant::kMGatePointFieldNumber;
const int E_QunxiongzhuluConstant::kMThisPickupLimitFieldNumber;
const int E_QunxiongzhuluConstant::kMCrossMapFieldNumber;
const int E_QunxiongzhuluConstant::kMCrossBossIdFieldNumber;
const int E_QunxiongzhuluConstant::kMCrossBossPointFieldNumber;
const int E_QunxiongzhuluConstant::kMCrossPickupLimitFieldNumber;
const int E_QunxiongzhuluConstant::kMCarIdFieldNumber;
const int E_QunxiongzhuluConstant::kMPreviewFieldNumber;
const int E_QunxiongzhuluConstant::kMActIdFieldNumber;
const int E_QunxiongzhuluConstant::kMCrossPointFieldNumber;
const int E_QunxiongzhuluConstant::kMCarPointFieldNumber;
#endif  // !_MSC_VER

E_QunxiongzhuluConstant::E_QunxiongzhuluConstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QunxiongzhuluConstant::InitAsDefaultInstance() {
}

E_QunxiongzhuluConstant::E_QunxiongzhuluConstant(const E_QunxiongzhuluConstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QunxiongzhuluConstant::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_thismap_ = 0;
  m_thisbossid_ = 0;
  m_thisbossponit_ = 0;
  m_gatemonster_ = 0;
  m_gatepoint_ = 0;
  m_thispickuplimit_ = 0;
  m_crossmap_ = 0;
  m_crossbossid_ = 0;
  m_crossbosspoint_ = 0;
  m_crosspickuplimit_ = 0;
  m_carid_ = 0;
  m_preview_ = 0;
  m_actid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QunxiongzhuluConstant::~E_QunxiongzhuluConstant() {
  SharedDtor();
}

void E_QunxiongzhuluConstant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QunxiongzhuluConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QunxiongzhuluConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QunxiongzhuluConstant_descriptor_;
}

const E_QunxiongzhuluConstant& E_QunxiongzhuluConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

E_QunxiongzhuluConstant* E_QunxiongzhuluConstant::default_instance_ = NULL;

E_QunxiongzhuluConstant* E_QunxiongzhuluConstant::New() const {
  return new E_QunxiongzhuluConstant;
}

void E_QunxiongzhuluConstant::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_thismap_ = 0;
    m_thisbossid_ = 0;
    m_thisbossponit_ = 0;
    m_gatemonster_ = 0;
    m_gatepoint_ = 0;
    m_thispickuplimit_ = 0;
    m_crossmap_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_crossbossid_ = 0;
    m_crossbosspoint_ = 0;
    m_crosspickuplimit_ = 0;
    m_carid_ = 0;
    m_preview_ = 0;
    m_actid_ = 0;
  }
  m_crosspoint_.Clear();
  m_carpoint_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QunxiongzhuluConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_thisMap;
        break;
      }

      // optional int32 m_thisMap = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_thisMap:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_thismap_)));
          set_has_m_thismap();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_thisBossId;
        break;
      }

      // optional int32 m_thisBossId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_thisBossId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_thisbossid_)));
          set_has_m_thisbossid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_thisBossPonit;
        break;
      }

      // optional int32 m_thisBossPonit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_thisBossPonit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_thisbossponit_)));
          set_has_m_thisbossponit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_gateMonster;
        break;
      }

      // optional int32 m_gateMonster = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gateMonster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_gatemonster_)));
          set_has_m_gatemonster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_gatePoint;
        break;
      }

      // optional int32 m_gatePoint = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gatePoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_gatepoint_)));
          set_has_m_gatepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_thisPickupLimit;
        break;
      }

      // optional int32 m_thisPickupLimit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_thisPickupLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_thispickuplimit_)));
          set_has_m_thispickuplimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_crossMap;
        break;
      }

      // optional int32 m_crossMap = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_crossMap:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_crossmap_)));
          set_has_m_crossmap();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_crossBossId;
        break;
      }

      // optional int32 m_crossBossId = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_crossBossId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_crossbossid_)));
          set_has_m_crossbossid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_crossBossPoint;
        break;
      }

      // optional int32 m_crossBossPoint = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_crossBossPoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_crossbosspoint_)));
          set_has_m_crossbosspoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_crossPickupLimit;
        break;
      }

      // optional int32 m_crossPickupLimit = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_crossPickupLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_crosspickuplimit_)));
          set_has_m_crosspickuplimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_carId;
        break;
      }

      // optional int32 m_carId = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_carid_)));
          set_has_m_carid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_preview;
        break;
      }

      // optional int32 m_preview = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_preview:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_preview_)));
          set_has_m_preview();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_actId;
        break;
      }

      // optional int32 m_actId = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_actId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_actid_)));
          set_has_m_actid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_crossPoint;
        break;
      }

      // repeated int32 m_crossPoint = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_crossPoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 120, input, this->mutable_m_crosspoint())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_crosspoint())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_crossPoint;
        if (input->ExpectTag(128)) goto parse_m_carPoint;
        break;
      }

      // repeated int32 m_carPoint = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carPoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 128, input, this->mutable_m_carpoint())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_carpoint())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_carPoint;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QunxiongzhuluConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_thisMap = 2;
  if (has_m_thismap()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_thismap(), output);
  }

  // optional int32 m_thisBossId = 3;
  if (has_m_thisbossid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_thisbossid(), output);
  }

  // optional int32 m_thisBossPonit = 4;
  if (has_m_thisbossponit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_thisbossponit(), output);
  }

  // optional int32 m_gateMonster = 5;
  if (has_m_gatemonster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_gatemonster(), output);
  }

  // optional int32 m_gatePoint = 6;
  if (has_m_gatepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_gatepoint(), output);
  }

  // optional int32 m_thisPickupLimit = 7;
  if (has_m_thispickuplimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_thispickuplimit(), output);
  }

  // optional int32 m_crossMap = 8;
  if (has_m_crossmap()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_crossmap(), output);
  }

  // optional int32 m_crossBossId = 9;
  if (has_m_crossbossid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_crossbossid(), output);
  }

  // optional int32 m_crossBossPoint = 10;
  if (has_m_crossbosspoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_crossbosspoint(), output);
  }

  // optional int32 m_crossPickupLimit = 11;
  if (has_m_crosspickuplimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_crosspickuplimit(), output);
  }

  // optional int32 m_carId = 12;
  if (has_m_carid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_carid(), output);
  }

  // optional int32 m_preview = 13;
  if (has_m_preview()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_preview(), output);
  }

  // optional int32 m_actId = 14;
  if (has_m_actid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_actid(), output);
  }

  // repeated int32 m_crossPoint = 15;
  for (int i = 0; i < this->m_crosspoint_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      15, this->m_crosspoint(i), output);
  }

  // repeated int32 m_carPoint = 16;
  for (int i = 0; i < this->m_carpoint_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      16, this->m_carpoint(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QunxiongzhuluConstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_thisMap = 2;
  if (has_m_thismap()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_thismap(), target);
  }

  // optional int32 m_thisBossId = 3;
  if (has_m_thisbossid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_thisbossid(), target);
  }

  // optional int32 m_thisBossPonit = 4;
  if (has_m_thisbossponit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_thisbossponit(), target);
  }

  // optional int32 m_gateMonster = 5;
  if (has_m_gatemonster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_gatemonster(), target);
  }

  // optional int32 m_gatePoint = 6;
  if (has_m_gatepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_gatepoint(), target);
  }

  // optional int32 m_thisPickupLimit = 7;
  if (has_m_thispickuplimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_thispickuplimit(), target);
  }

  // optional int32 m_crossMap = 8;
  if (has_m_crossmap()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_crossmap(), target);
  }

  // optional int32 m_crossBossId = 9;
  if (has_m_crossbossid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_crossbossid(), target);
  }

  // optional int32 m_crossBossPoint = 10;
  if (has_m_crossbosspoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_crossbosspoint(), target);
  }

  // optional int32 m_crossPickupLimit = 11;
  if (has_m_crosspickuplimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_crosspickuplimit(), target);
  }

  // optional int32 m_carId = 12;
  if (has_m_carid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_carid(), target);
  }

  // optional int32 m_preview = 13;
  if (has_m_preview()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_preview(), target);
  }

  // optional int32 m_actId = 14;
  if (has_m_actid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_actid(), target);
  }

  // repeated int32 m_crossPoint = 15;
  for (int i = 0; i < this->m_crosspoint_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(15, this->m_crosspoint(i), target);
  }

  // repeated int32 m_carPoint = 16;
  for (int i = 0; i < this->m_carpoint_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(16, this->m_carpoint(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QunxiongzhuluConstant::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_thisMap = 2;
    if (has_m_thismap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_thismap());
    }

    // optional int32 m_thisBossId = 3;
    if (has_m_thisbossid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_thisbossid());
    }

    // optional int32 m_thisBossPonit = 4;
    if (has_m_thisbossponit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_thisbossponit());
    }

    // optional int32 m_gateMonster = 5;
    if (has_m_gatemonster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_gatemonster());
    }

    // optional int32 m_gatePoint = 6;
    if (has_m_gatepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_gatepoint());
    }

    // optional int32 m_thisPickupLimit = 7;
    if (has_m_thispickuplimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_thispickuplimit());
    }

    // optional int32 m_crossMap = 8;
    if (has_m_crossmap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_crossmap());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_crossBossId = 9;
    if (has_m_crossbossid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_crossbossid());
    }

    // optional int32 m_crossBossPoint = 10;
    if (has_m_crossbosspoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_crossbosspoint());
    }

    // optional int32 m_crossPickupLimit = 11;
    if (has_m_crosspickuplimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_crosspickuplimit());
    }

    // optional int32 m_carId = 12;
    if (has_m_carid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_carid());
    }

    // optional int32 m_preview = 13;
    if (has_m_preview()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_preview());
    }

    // optional int32 m_actId = 14;
    if (has_m_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_actid());
    }

  }
  // repeated int32 m_crossPoint = 15;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_crosspoint_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_crosspoint(i));
    }
    total_size += 1 * this->m_crosspoint_size() + data_size;
  }

  // repeated int32 m_carPoint = 16;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_carpoint_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_carpoint(i));
    }
    total_size += 2 * this->m_carpoint_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QunxiongzhuluConstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QunxiongzhuluConstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QunxiongzhuluConstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QunxiongzhuluConstant::MergeFrom(const E_QunxiongzhuluConstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_crosspoint_.MergeFrom(from.m_crosspoint_);
  m_carpoint_.MergeFrom(from.m_carpoint_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_thismap()) {
      set_m_thismap(from.m_thismap());
    }
    if (from.has_m_thisbossid()) {
      set_m_thisbossid(from.m_thisbossid());
    }
    if (from.has_m_thisbossponit()) {
      set_m_thisbossponit(from.m_thisbossponit());
    }
    if (from.has_m_gatemonster()) {
      set_m_gatemonster(from.m_gatemonster());
    }
    if (from.has_m_gatepoint()) {
      set_m_gatepoint(from.m_gatepoint());
    }
    if (from.has_m_thispickuplimit()) {
      set_m_thispickuplimit(from.m_thispickuplimit());
    }
    if (from.has_m_crossmap()) {
      set_m_crossmap(from.m_crossmap());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_crossbossid()) {
      set_m_crossbossid(from.m_crossbossid());
    }
    if (from.has_m_crossbosspoint()) {
      set_m_crossbosspoint(from.m_crossbosspoint());
    }
    if (from.has_m_crosspickuplimit()) {
      set_m_crosspickuplimit(from.m_crosspickuplimit());
    }
    if (from.has_m_carid()) {
      set_m_carid(from.m_carid());
    }
    if (from.has_m_preview()) {
      set_m_preview(from.m_preview());
    }
    if (from.has_m_actid()) {
      set_m_actid(from.m_actid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QunxiongzhuluConstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QunxiongzhuluConstant::CopyFrom(const E_QunxiongzhuluConstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QunxiongzhuluConstant::IsInitialized() const {

  return true;
}

void E_QunxiongzhuluConstant::Swap(E_QunxiongzhuluConstant* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_thismap_, other->m_thismap_);
    std::swap(m_thisbossid_, other->m_thisbossid_);
    std::swap(m_thisbossponit_, other->m_thisbossponit_);
    std::swap(m_gatemonster_, other->m_gatemonster_);
    std::swap(m_gatepoint_, other->m_gatepoint_);
    std::swap(m_thispickuplimit_, other->m_thispickuplimit_);
    std::swap(m_crossmap_, other->m_crossmap_);
    std::swap(m_crossbossid_, other->m_crossbossid_);
    std::swap(m_crossbosspoint_, other->m_crossbosspoint_);
    std::swap(m_crosspickuplimit_, other->m_crosspickuplimit_);
    std::swap(m_carid_, other->m_carid_);
    std::swap(m_preview_, other->m_preview_);
    std::swap(m_actid_, other->m_actid_);
    m_crosspoint_.Swap(&other->m_crosspoint_);
    m_carpoint_.Swap(&other->m_carpoint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QunxiongzhuluConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QunxiongzhuluConstant_descriptor_;
  metadata.reflection = E_QunxiongzhuluConstant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_QunxiongzhuluConstant::kEQunxiongzhuluConstantListFieldNumber;
#endif  // !_MSC_VER

Sheet_QunxiongzhuluConstant::Sheet_QunxiongzhuluConstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_QunxiongzhuluConstant::InitAsDefaultInstance() {
}

Sheet_QunxiongzhuluConstant::Sheet_QunxiongzhuluConstant(const Sheet_QunxiongzhuluConstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluConstant::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_QunxiongzhuluConstant::~Sheet_QunxiongzhuluConstant() {
  SharedDtor();
}

void Sheet_QunxiongzhuluConstant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_QunxiongzhuluConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_QunxiongzhuluConstant_descriptor_;
}

const Sheet_QunxiongzhuluConstant& Sheet_QunxiongzhuluConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

Sheet_QunxiongzhuluConstant* Sheet_QunxiongzhuluConstant::default_instance_ = NULL;

Sheet_QunxiongzhuluConstant* Sheet_QunxiongzhuluConstant::New() const {
  return new Sheet_QunxiongzhuluConstant;
}

void Sheet_QunxiongzhuluConstant::Clear() {
  e_qunxiongzhuluconstant_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_QunxiongzhuluConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_QunxiongzhuluConstant E_QunxiongzhuluConstant_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_QunxiongzhuluConstant_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_qunxiongzhuluconstant_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_QunxiongzhuluConstant_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_QunxiongzhuluConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_QunxiongzhuluConstant E_QunxiongzhuluConstant_List = 1;
  for (int i = 0; i < this->e_qunxiongzhuluconstant_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_qunxiongzhuluconstant_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_QunxiongzhuluConstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_QunxiongzhuluConstant E_QunxiongzhuluConstant_List = 1;
  for (int i = 0; i < this->e_qunxiongzhuluconstant_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_qunxiongzhuluconstant_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_QunxiongzhuluConstant::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_QunxiongzhuluConstant E_QunxiongzhuluConstant_List = 1;
  total_size += 1 * this->e_qunxiongzhuluconstant_list_size();
  for (int i = 0; i < this->e_qunxiongzhuluconstant_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_qunxiongzhuluconstant_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_QunxiongzhuluConstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_QunxiongzhuluConstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_QunxiongzhuluConstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_QunxiongzhuluConstant::MergeFrom(const Sheet_QunxiongzhuluConstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_qunxiongzhuluconstant_list_.MergeFrom(from.e_qunxiongzhuluconstant_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_QunxiongzhuluConstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluConstant::CopyFrom(const Sheet_QunxiongzhuluConstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_QunxiongzhuluConstant::IsInitialized() const {

  return true;
}

void Sheet_QunxiongzhuluConstant::Swap(Sheet_QunxiongzhuluConstant* other) {
  if (other != this) {
    e_qunxiongzhuluconstant_list_.Swap(&other->e_qunxiongzhuluconstant_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_QunxiongzhuluConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_QunxiongzhuluConstant_descriptor_;
  metadata.reflection = Sheet_QunxiongzhuluConstant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_QunxiongzhuluSkill::kMIdFieldNumber;
#endif  // !_MSC_VER

E_QunxiongzhuluSkill::E_QunxiongzhuluSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QunxiongzhuluSkill::InitAsDefaultInstance() {
}

E_QunxiongzhuluSkill::E_QunxiongzhuluSkill(const E_QunxiongzhuluSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QunxiongzhuluSkill::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QunxiongzhuluSkill::~E_QunxiongzhuluSkill() {
  SharedDtor();
}

void E_QunxiongzhuluSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QunxiongzhuluSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QunxiongzhuluSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QunxiongzhuluSkill_descriptor_;
}

const E_QunxiongzhuluSkill& E_QunxiongzhuluSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

E_QunxiongzhuluSkill* E_QunxiongzhuluSkill::default_instance_ = NULL;

E_QunxiongzhuluSkill* E_QunxiongzhuluSkill::New() const {
  return new E_QunxiongzhuluSkill;
}

void E_QunxiongzhuluSkill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QunxiongzhuluSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QunxiongzhuluSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QunxiongzhuluSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QunxiongzhuluSkill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QunxiongzhuluSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QunxiongzhuluSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QunxiongzhuluSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QunxiongzhuluSkill::MergeFrom(const E_QunxiongzhuluSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QunxiongzhuluSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QunxiongzhuluSkill::CopyFrom(const E_QunxiongzhuluSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QunxiongzhuluSkill::IsInitialized() const {

  return true;
}

void E_QunxiongzhuluSkill::Swap(E_QunxiongzhuluSkill* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QunxiongzhuluSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QunxiongzhuluSkill_descriptor_;
  metadata.reflection = E_QunxiongzhuluSkill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_QunxiongzhuluSkill::kEQunxiongzhuluSkillListFieldNumber;
#endif  // !_MSC_VER

Sheet_QunxiongzhuluSkill::Sheet_QunxiongzhuluSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_QunxiongzhuluSkill::InitAsDefaultInstance() {
}

Sheet_QunxiongzhuluSkill::Sheet_QunxiongzhuluSkill(const Sheet_QunxiongzhuluSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluSkill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_QunxiongzhuluSkill::~Sheet_QunxiongzhuluSkill() {
  SharedDtor();
}

void Sheet_QunxiongzhuluSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_QunxiongzhuluSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_QunxiongzhuluSkill_descriptor_;
}

const Sheet_QunxiongzhuluSkill& Sheet_QunxiongzhuluSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

Sheet_QunxiongzhuluSkill* Sheet_QunxiongzhuluSkill::default_instance_ = NULL;

Sheet_QunxiongzhuluSkill* Sheet_QunxiongzhuluSkill::New() const {
  return new Sheet_QunxiongzhuluSkill;
}

void Sheet_QunxiongzhuluSkill::Clear() {
  e_qunxiongzhuluskill_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_QunxiongzhuluSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_QunxiongzhuluSkill E_QunxiongzhuluSkill_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_QunxiongzhuluSkill_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_qunxiongzhuluskill_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_QunxiongzhuluSkill_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_QunxiongzhuluSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_QunxiongzhuluSkill E_QunxiongzhuluSkill_List = 1;
  for (int i = 0; i < this->e_qunxiongzhuluskill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_qunxiongzhuluskill_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_QunxiongzhuluSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_QunxiongzhuluSkill E_QunxiongzhuluSkill_List = 1;
  for (int i = 0; i < this->e_qunxiongzhuluskill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_qunxiongzhuluskill_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_QunxiongzhuluSkill::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_QunxiongzhuluSkill E_QunxiongzhuluSkill_List = 1;
  total_size += 1 * this->e_qunxiongzhuluskill_list_size();
  for (int i = 0; i < this->e_qunxiongzhuluskill_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_qunxiongzhuluskill_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_QunxiongzhuluSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_QunxiongzhuluSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_QunxiongzhuluSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_QunxiongzhuluSkill::MergeFrom(const Sheet_QunxiongzhuluSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_qunxiongzhuluskill_list_.MergeFrom(from.e_qunxiongzhuluskill_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_QunxiongzhuluSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluSkill::CopyFrom(const Sheet_QunxiongzhuluSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_QunxiongzhuluSkill::IsInitialized() const {

  return true;
}

void Sheet_QunxiongzhuluSkill::Swap(Sheet_QunxiongzhuluSkill* other) {
  if (other != this) {
    e_qunxiongzhuluskill_list_.Swap(&other->e_qunxiongzhuluskill_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_QunxiongzhuluSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_QunxiongzhuluSkill_descriptor_;
  metadata.reflection = Sheet_QunxiongzhuluSkill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_QunxiongzhuluServerrankItemDesc::kMNumFieldNumber;
const int E_QunxiongzhuluServerrankItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_QunxiongzhuluServerrankItemDesc::E_QunxiongzhuluServerrankItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QunxiongzhuluServerrankItemDesc::InitAsDefaultInstance() {
}

E_QunxiongzhuluServerrankItemDesc::E_QunxiongzhuluServerrankItemDesc(const E_QunxiongzhuluServerrankItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QunxiongzhuluServerrankItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QunxiongzhuluServerrankItemDesc::~E_QunxiongzhuluServerrankItemDesc() {
  SharedDtor();
}

void E_QunxiongzhuluServerrankItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QunxiongzhuluServerrankItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QunxiongzhuluServerrankItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QunxiongzhuluServerrankItemDesc_descriptor_;
}

const E_QunxiongzhuluServerrankItemDesc& E_QunxiongzhuluServerrankItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

E_QunxiongzhuluServerrankItemDesc* E_QunxiongzhuluServerrankItemDesc::default_instance_ = NULL;

E_QunxiongzhuluServerrankItemDesc* E_QunxiongzhuluServerrankItemDesc::New() const {
  return new E_QunxiongzhuluServerrankItemDesc;
}

void E_QunxiongzhuluServerrankItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QunxiongzhuluServerrankItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QunxiongzhuluServerrankItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QunxiongzhuluServerrankItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QunxiongzhuluServerrankItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QunxiongzhuluServerrankItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QunxiongzhuluServerrankItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QunxiongzhuluServerrankItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QunxiongzhuluServerrankItemDesc::MergeFrom(const E_QunxiongzhuluServerrankItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QunxiongzhuluServerrankItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QunxiongzhuluServerrankItemDesc::CopyFrom(const E_QunxiongzhuluServerrankItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QunxiongzhuluServerrankItemDesc::IsInitialized() const {

  return true;
}

void E_QunxiongzhuluServerrankItemDesc::Swap(E_QunxiongzhuluServerrankItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QunxiongzhuluServerrankItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QunxiongzhuluServerrankItemDesc_descriptor_;
  metadata.reflection = E_QunxiongzhuluServerrankItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_QunxiongzhuluServerrank::kMIdFieldNumber;
const int E_QunxiongzhuluServerrank::kMRankMaxFieldNumber;
const int E_QunxiongzhuluServerrank::kMRankMinFieldNumber;
const int E_QunxiongzhuluServerrank::kMItemFieldNumber;
#endif  // !_MSC_VER

E_QunxiongzhuluServerrank::E_QunxiongzhuluServerrank()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QunxiongzhuluServerrank::InitAsDefaultInstance() {
}

E_QunxiongzhuluServerrank::E_QunxiongzhuluServerrank(const E_QunxiongzhuluServerrank& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QunxiongzhuluServerrank::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_rankmax_ = 0;
  m_rankmin_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QunxiongzhuluServerrank::~E_QunxiongzhuluServerrank() {
  SharedDtor();
}

void E_QunxiongzhuluServerrank::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QunxiongzhuluServerrank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QunxiongzhuluServerrank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QunxiongzhuluServerrank_descriptor_;
}

const E_QunxiongzhuluServerrank& E_QunxiongzhuluServerrank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

E_QunxiongzhuluServerrank* E_QunxiongzhuluServerrank::default_instance_ = NULL;

E_QunxiongzhuluServerrank* E_QunxiongzhuluServerrank::New() const {
  return new E_QunxiongzhuluServerrank;
}

void E_QunxiongzhuluServerrank::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_rankmax_ = 0;
    m_rankmin_ = 0;
  }
  m_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QunxiongzhuluServerrank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_rankMax;
        break;
      }

      // optional int32 m_rankMax = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rankMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rankmax_)));
          set_has_m_rankmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_rankMin;
        break;
      }

      // optional int32 m_rankMin = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rankMin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rankmin_)));
          set_has_m_rankmin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_QunxiongzhuluServerrankItemDesc m_item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QunxiongzhuluServerrank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_rankMax = 2;
  if (has_m_rankmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_rankmax(), output);
  }

  // optional int32 m_rankMin = 3;
  if (has_m_rankmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_rankmin(), output);
  }

  // repeated .proto_ff.E_QunxiongzhuluServerrankItemDesc m_item = 4;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QunxiongzhuluServerrank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_rankMax = 2;
  if (has_m_rankmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_rankmax(), target);
  }

  // optional int32 m_rankMin = 3;
  if (has_m_rankmin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_rankmin(), target);
  }

  // repeated .proto_ff.E_QunxiongzhuluServerrankItemDesc m_item = 4;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QunxiongzhuluServerrank::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_rankMax = 2;
    if (has_m_rankmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rankmax());
    }

    // optional int32 m_rankMin = 3;
    if (has_m_rankmin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rankmin());
    }

  }
  // repeated .proto_ff.E_QunxiongzhuluServerrankItemDesc m_item = 4;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QunxiongzhuluServerrank::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QunxiongzhuluServerrank* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QunxiongzhuluServerrank*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QunxiongzhuluServerrank::MergeFrom(const E_QunxiongzhuluServerrank& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_rankmax()) {
      set_m_rankmax(from.m_rankmax());
    }
    if (from.has_m_rankmin()) {
      set_m_rankmin(from.m_rankmin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QunxiongzhuluServerrank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QunxiongzhuluServerrank::CopyFrom(const E_QunxiongzhuluServerrank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QunxiongzhuluServerrank::IsInitialized() const {

  return true;
}

void E_QunxiongzhuluServerrank::Swap(E_QunxiongzhuluServerrank* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_rankmax_, other->m_rankmax_);
    std::swap(m_rankmin_, other->m_rankmin_);
    m_item_.Swap(&other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QunxiongzhuluServerrank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QunxiongzhuluServerrank_descriptor_;
  metadata.reflection = E_QunxiongzhuluServerrank_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_QunxiongzhuluServerrank::kEQunxiongzhuluServerrankListFieldNumber;
#endif  // !_MSC_VER

Sheet_QunxiongzhuluServerrank::Sheet_QunxiongzhuluServerrank()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_QunxiongzhuluServerrank::InitAsDefaultInstance() {
}

Sheet_QunxiongzhuluServerrank::Sheet_QunxiongzhuluServerrank(const Sheet_QunxiongzhuluServerrank& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluServerrank::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_QunxiongzhuluServerrank::~Sheet_QunxiongzhuluServerrank() {
  SharedDtor();
}

void Sheet_QunxiongzhuluServerrank::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_QunxiongzhuluServerrank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluServerrank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_QunxiongzhuluServerrank_descriptor_;
}

const Sheet_QunxiongzhuluServerrank& Sheet_QunxiongzhuluServerrank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

Sheet_QunxiongzhuluServerrank* Sheet_QunxiongzhuluServerrank::default_instance_ = NULL;

Sheet_QunxiongzhuluServerrank* Sheet_QunxiongzhuluServerrank::New() const {
  return new Sheet_QunxiongzhuluServerrank;
}

void Sheet_QunxiongzhuluServerrank::Clear() {
  e_qunxiongzhuluserverrank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_QunxiongzhuluServerrank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_QunxiongzhuluServerrank E_QunxiongzhuluServerrank_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_QunxiongzhuluServerrank_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_qunxiongzhuluserverrank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_QunxiongzhuluServerrank_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_QunxiongzhuluServerrank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_QunxiongzhuluServerrank E_QunxiongzhuluServerrank_List = 1;
  for (int i = 0; i < this->e_qunxiongzhuluserverrank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_qunxiongzhuluserverrank_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_QunxiongzhuluServerrank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_QunxiongzhuluServerrank E_QunxiongzhuluServerrank_List = 1;
  for (int i = 0; i < this->e_qunxiongzhuluserverrank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_qunxiongzhuluserverrank_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_QunxiongzhuluServerrank::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_QunxiongzhuluServerrank E_QunxiongzhuluServerrank_List = 1;
  total_size += 1 * this->e_qunxiongzhuluserverrank_list_size();
  for (int i = 0; i < this->e_qunxiongzhuluserverrank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_qunxiongzhuluserverrank_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_QunxiongzhuluServerrank::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_QunxiongzhuluServerrank* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_QunxiongzhuluServerrank*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_QunxiongzhuluServerrank::MergeFrom(const Sheet_QunxiongzhuluServerrank& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_qunxiongzhuluserverrank_list_.MergeFrom(from.e_qunxiongzhuluserverrank_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_QunxiongzhuluServerrank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluServerrank::CopyFrom(const Sheet_QunxiongzhuluServerrank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_QunxiongzhuluServerrank::IsInitialized() const {

  return true;
}

void Sheet_QunxiongzhuluServerrank::Swap(Sheet_QunxiongzhuluServerrank* other) {
  if (other != this) {
    e_qunxiongzhuluserverrank_list_.Swap(&other->e_qunxiongzhuluserverrank_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_QunxiongzhuluServerrank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_QunxiongzhuluServerrank_descriptor_;
  metadata.reflection = Sheet_QunxiongzhuluServerrank_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_QunxiongzhuluWorldrankItemDesc::kMNumFieldNumber;
const int E_QunxiongzhuluWorldrankItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_QunxiongzhuluWorldrankItemDesc::E_QunxiongzhuluWorldrankItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QunxiongzhuluWorldrankItemDesc::InitAsDefaultInstance() {
}

E_QunxiongzhuluWorldrankItemDesc::E_QunxiongzhuluWorldrankItemDesc(const E_QunxiongzhuluWorldrankItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QunxiongzhuluWorldrankItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QunxiongzhuluWorldrankItemDesc::~E_QunxiongzhuluWorldrankItemDesc() {
  SharedDtor();
}

void E_QunxiongzhuluWorldrankItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QunxiongzhuluWorldrankItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QunxiongzhuluWorldrankItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QunxiongzhuluWorldrankItemDesc_descriptor_;
}

const E_QunxiongzhuluWorldrankItemDesc& E_QunxiongzhuluWorldrankItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

E_QunxiongzhuluWorldrankItemDesc* E_QunxiongzhuluWorldrankItemDesc::default_instance_ = NULL;

E_QunxiongzhuluWorldrankItemDesc* E_QunxiongzhuluWorldrankItemDesc::New() const {
  return new E_QunxiongzhuluWorldrankItemDesc;
}

void E_QunxiongzhuluWorldrankItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QunxiongzhuluWorldrankItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QunxiongzhuluWorldrankItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QunxiongzhuluWorldrankItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QunxiongzhuluWorldrankItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QunxiongzhuluWorldrankItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QunxiongzhuluWorldrankItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QunxiongzhuluWorldrankItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QunxiongzhuluWorldrankItemDesc::MergeFrom(const E_QunxiongzhuluWorldrankItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QunxiongzhuluWorldrankItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QunxiongzhuluWorldrankItemDesc::CopyFrom(const E_QunxiongzhuluWorldrankItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QunxiongzhuluWorldrankItemDesc::IsInitialized() const {

  return true;
}

void E_QunxiongzhuluWorldrankItemDesc::Swap(E_QunxiongzhuluWorldrankItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QunxiongzhuluWorldrankItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QunxiongzhuluWorldrankItemDesc_descriptor_;
  metadata.reflection = E_QunxiongzhuluWorldrankItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_QunxiongzhuluWorldrank::kMIdFieldNumber;
const int E_QunxiongzhuluWorldrank::kMRankMaxFieldNumber;
const int E_QunxiongzhuluWorldrank::kMRankMinFieldNumber;
const int E_QunxiongzhuluWorldrank::kMItemFieldNumber;
#endif  // !_MSC_VER

E_QunxiongzhuluWorldrank::E_QunxiongzhuluWorldrank()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QunxiongzhuluWorldrank::InitAsDefaultInstance() {
}

E_QunxiongzhuluWorldrank::E_QunxiongzhuluWorldrank(const E_QunxiongzhuluWorldrank& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QunxiongzhuluWorldrank::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_rankmax_ = 0;
  m_rankmin_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QunxiongzhuluWorldrank::~E_QunxiongzhuluWorldrank() {
  SharedDtor();
}

void E_QunxiongzhuluWorldrank::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QunxiongzhuluWorldrank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QunxiongzhuluWorldrank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QunxiongzhuluWorldrank_descriptor_;
}

const E_QunxiongzhuluWorldrank& E_QunxiongzhuluWorldrank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

E_QunxiongzhuluWorldrank* E_QunxiongzhuluWorldrank::default_instance_ = NULL;

E_QunxiongzhuluWorldrank* E_QunxiongzhuluWorldrank::New() const {
  return new E_QunxiongzhuluWorldrank;
}

void E_QunxiongzhuluWorldrank::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_rankmax_ = 0;
    m_rankmin_ = 0;
  }
  m_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QunxiongzhuluWorldrank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_rankMax;
        break;
      }

      // optional int32 m_rankMax = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rankMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rankmax_)));
          set_has_m_rankmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_rankMin;
        break;
      }

      // optional int32 m_rankMin = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rankMin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rankmin_)));
          set_has_m_rankmin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_QunxiongzhuluWorldrankItemDesc m_item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QunxiongzhuluWorldrank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_rankMax = 2;
  if (has_m_rankmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_rankmax(), output);
  }

  // optional int32 m_rankMin = 3;
  if (has_m_rankmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_rankmin(), output);
  }

  // repeated .proto_ff.E_QunxiongzhuluWorldrankItemDesc m_item = 4;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QunxiongzhuluWorldrank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_rankMax = 2;
  if (has_m_rankmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_rankmax(), target);
  }

  // optional int32 m_rankMin = 3;
  if (has_m_rankmin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_rankmin(), target);
  }

  // repeated .proto_ff.E_QunxiongzhuluWorldrankItemDesc m_item = 4;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QunxiongzhuluWorldrank::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_rankMax = 2;
    if (has_m_rankmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rankmax());
    }

    // optional int32 m_rankMin = 3;
    if (has_m_rankmin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rankmin());
    }

  }
  // repeated .proto_ff.E_QunxiongzhuluWorldrankItemDesc m_item = 4;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QunxiongzhuluWorldrank::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QunxiongzhuluWorldrank* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QunxiongzhuluWorldrank*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QunxiongzhuluWorldrank::MergeFrom(const E_QunxiongzhuluWorldrank& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_rankmax()) {
      set_m_rankmax(from.m_rankmax());
    }
    if (from.has_m_rankmin()) {
      set_m_rankmin(from.m_rankmin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QunxiongzhuluWorldrank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QunxiongzhuluWorldrank::CopyFrom(const E_QunxiongzhuluWorldrank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QunxiongzhuluWorldrank::IsInitialized() const {

  return true;
}

void E_QunxiongzhuluWorldrank::Swap(E_QunxiongzhuluWorldrank* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_rankmax_, other->m_rankmax_);
    std::swap(m_rankmin_, other->m_rankmin_);
    m_item_.Swap(&other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QunxiongzhuluWorldrank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QunxiongzhuluWorldrank_descriptor_;
  metadata.reflection = E_QunxiongzhuluWorldrank_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_QunxiongzhuluWorldrank::kEQunxiongzhuluWorldrankListFieldNumber;
#endif  // !_MSC_VER

Sheet_QunxiongzhuluWorldrank::Sheet_QunxiongzhuluWorldrank()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_QunxiongzhuluWorldrank::InitAsDefaultInstance() {
}

Sheet_QunxiongzhuluWorldrank::Sheet_QunxiongzhuluWorldrank(const Sheet_QunxiongzhuluWorldrank& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluWorldrank::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_QunxiongzhuluWorldrank::~Sheet_QunxiongzhuluWorldrank() {
  SharedDtor();
}

void Sheet_QunxiongzhuluWorldrank::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_QunxiongzhuluWorldrank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluWorldrank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_QunxiongzhuluWorldrank_descriptor_;
}

const Sheet_QunxiongzhuluWorldrank& Sheet_QunxiongzhuluWorldrank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

Sheet_QunxiongzhuluWorldrank* Sheet_QunxiongzhuluWorldrank::default_instance_ = NULL;

Sheet_QunxiongzhuluWorldrank* Sheet_QunxiongzhuluWorldrank::New() const {
  return new Sheet_QunxiongzhuluWorldrank;
}

void Sheet_QunxiongzhuluWorldrank::Clear() {
  e_qunxiongzhuluworldrank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_QunxiongzhuluWorldrank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_QunxiongzhuluWorldrank E_QunxiongzhuluWorldrank_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_QunxiongzhuluWorldrank_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_qunxiongzhuluworldrank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_QunxiongzhuluWorldrank_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_QunxiongzhuluWorldrank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_QunxiongzhuluWorldrank E_QunxiongzhuluWorldrank_List = 1;
  for (int i = 0; i < this->e_qunxiongzhuluworldrank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_qunxiongzhuluworldrank_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_QunxiongzhuluWorldrank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_QunxiongzhuluWorldrank E_QunxiongzhuluWorldrank_List = 1;
  for (int i = 0; i < this->e_qunxiongzhuluworldrank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_qunxiongzhuluworldrank_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_QunxiongzhuluWorldrank::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_QunxiongzhuluWorldrank E_QunxiongzhuluWorldrank_List = 1;
  total_size += 1 * this->e_qunxiongzhuluworldrank_list_size();
  for (int i = 0; i < this->e_qunxiongzhuluworldrank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_qunxiongzhuluworldrank_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_QunxiongzhuluWorldrank::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_QunxiongzhuluWorldrank* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_QunxiongzhuluWorldrank*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_QunxiongzhuluWorldrank::MergeFrom(const Sheet_QunxiongzhuluWorldrank& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_qunxiongzhuluworldrank_list_.MergeFrom(from.e_qunxiongzhuluworldrank_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_QunxiongzhuluWorldrank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluWorldrank::CopyFrom(const Sheet_QunxiongzhuluWorldrank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_QunxiongzhuluWorldrank::IsInitialized() const {

  return true;
}

void Sheet_QunxiongzhuluWorldrank::Swap(Sheet_QunxiongzhuluWorldrank* other) {
  if (other != this) {
    e_qunxiongzhuluworldrank_list_.Swap(&other->e_qunxiongzhuluworldrank_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_QunxiongzhuluWorldrank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_QunxiongzhuluWorldrank_descriptor_;
  metadata.reflection = Sheet_QunxiongzhuluWorldrank_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_QunxiongzhuluLocalrankItemDesc::kMNumFieldNumber;
const int E_QunxiongzhuluLocalrankItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_QunxiongzhuluLocalrankItemDesc::E_QunxiongzhuluLocalrankItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QunxiongzhuluLocalrankItemDesc::InitAsDefaultInstance() {
}

E_QunxiongzhuluLocalrankItemDesc::E_QunxiongzhuluLocalrankItemDesc(const E_QunxiongzhuluLocalrankItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QunxiongzhuluLocalrankItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QunxiongzhuluLocalrankItemDesc::~E_QunxiongzhuluLocalrankItemDesc() {
  SharedDtor();
}

void E_QunxiongzhuluLocalrankItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QunxiongzhuluLocalrankItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QunxiongzhuluLocalrankItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QunxiongzhuluLocalrankItemDesc_descriptor_;
}

const E_QunxiongzhuluLocalrankItemDesc& E_QunxiongzhuluLocalrankItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

E_QunxiongzhuluLocalrankItemDesc* E_QunxiongzhuluLocalrankItemDesc::default_instance_ = NULL;

E_QunxiongzhuluLocalrankItemDesc* E_QunxiongzhuluLocalrankItemDesc::New() const {
  return new E_QunxiongzhuluLocalrankItemDesc;
}

void E_QunxiongzhuluLocalrankItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QunxiongzhuluLocalrankItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QunxiongzhuluLocalrankItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QunxiongzhuluLocalrankItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QunxiongzhuluLocalrankItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QunxiongzhuluLocalrankItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QunxiongzhuluLocalrankItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QunxiongzhuluLocalrankItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QunxiongzhuluLocalrankItemDesc::MergeFrom(const E_QunxiongzhuluLocalrankItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QunxiongzhuluLocalrankItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QunxiongzhuluLocalrankItemDesc::CopyFrom(const E_QunxiongzhuluLocalrankItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QunxiongzhuluLocalrankItemDesc::IsInitialized() const {

  return true;
}

void E_QunxiongzhuluLocalrankItemDesc::Swap(E_QunxiongzhuluLocalrankItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QunxiongzhuluLocalrankItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QunxiongzhuluLocalrankItemDesc_descriptor_;
  metadata.reflection = E_QunxiongzhuluLocalrankItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_QunxiongzhuluLocalrank::kMIdFieldNumber;
const int E_QunxiongzhuluLocalrank::kMRankMaxFieldNumber;
const int E_QunxiongzhuluLocalrank::kMRankMinFieldNumber;
const int E_QunxiongzhuluLocalrank::kMItemFieldNumber;
#endif  // !_MSC_VER

E_QunxiongzhuluLocalrank::E_QunxiongzhuluLocalrank()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QunxiongzhuluLocalrank::InitAsDefaultInstance() {
}

E_QunxiongzhuluLocalrank::E_QunxiongzhuluLocalrank(const E_QunxiongzhuluLocalrank& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QunxiongzhuluLocalrank::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_rankmax_ = 0;
  m_rankmin_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QunxiongzhuluLocalrank::~E_QunxiongzhuluLocalrank() {
  SharedDtor();
}

void E_QunxiongzhuluLocalrank::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QunxiongzhuluLocalrank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QunxiongzhuluLocalrank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QunxiongzhuluLocalrank_descriptor_;
}

const E_QunxiongzhuluLocalrank& E_QunxiongzhuluLocalrank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

E_QunxiongzhuluLocalrank* E_QunxiongzhuluLocalrank::default_instance_ = NULL;

E_QunxiongzhuluLocalrank* E_QunxiongzhuluLocalrank::New() const {
  return new E_QunxiongzhuluLocalrank;
}

void E_QunxiongzhuluLocalrank::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_rankmax_ = 0;
    m_rankmin_ = 0;
  }
  m_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QunxiongzhuluLocalrank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_rankMax;
        break;
      }

      // optional int32 m_rankMax = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rankMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rankmax_)));
          set_has_m_rankmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_rankMin;
        break;
      }

      // optional int32 m_rankMin = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rankMin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rankmin_)));
          set_has_m_rankmin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_QunxiongzhuluLocalrankItemDesc m_item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QunxiongzhuluLocalrank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_rankMax = 2;
  if (has_m_rankmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_rankmax(), output);
  }

  // optional int32 m_rankMin = 3;
  if (has_m_rankmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_rankmin(), output);
  }

  // repeated .proto_ff.E_QunxiongzhuluLocalrankItemDesc m_item = 4;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QunxiongzhuluLocalrank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_rankMax = 2;
  if (has_m_rankmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_rankmax(), target);
  }

  // optional int32 m_rankMin = 3;
  if (has_m_rankmin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_rankmin(), target);
  }

  // repeated .proto_ff.E_QunxiongzhuluLocalrankItemDesc m_item = 4;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QunxiongzhuluLocalrank::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_rankMax = 2;
    if (has_m_rankmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rankmax());
    }

    // optional int32 m_rankMin = 3;
    if (has_m_rankmin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rankmin());
    }

  }
  // repeated .proto_ff.E_QunxiongzhuluLocalrankItemDesc m_item = 4;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QunxiongzhuluLocalrank::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QunxiongzhuluLocalrank* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QunxiongzhuluLocalrank*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QunxiongzhuluLocalrank::MergeFrom(const E_QunxiongzhuluLocalrank& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_rankmax()) {
      set_m_rankmax(from.m_rankmax());
    }
    if (from.has_m_rankmin()) {
      set_m_rankmin(from.m_rankmin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QunxiongzhuluLocalrank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QunxiongzhuluLocalrank::CopyFrom(const E_QunxiongzhuluLocalrank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QunxiongzhuluLocalrank::IsInitialized() const {

  return true;
}

void E_QunxiongzhuluLocalrank::Swap(E_QunxiongzhuluLocalrank* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_rankmax_, other->m_rankmax_);
    std::swap(m_rankmin_, other->m_rankmin_);
    m_item_.Swap(&other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QunxiongzhuluLocalrank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QunxiongzhuluLocalrank_descriptor_;
  metadata.reflection = E_QunxiongzhuluLocalrank_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_QunxiongzhuluLocalrank::kEQunxiongzhuluLocalrankListFieldNumber;
#endif  // !_MSC_VER

Sheet_QunxiongzhuluLocalrank::Sheet_QunxiongzhuluLocalrank()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_QunxiongzhuluLocalrank::InitAsDefaultInstance() {
}

Sheet_QunxiongzhuluLocalrank::Sheet_QunxiongzhuluLocalrank(const Sheet_QunxiongzhuluLocalrank& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluLocalrank::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_QunxiongzhuluLocalrank::~Sheet_QunxiongzhuluLocalrank() {
  SharedDtor();
}

void Sheet_QunxiongzhuluLocalrank::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_QunxiongzhuluLocalrank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluLocalrank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_QunxiongzhuluLocalrank_descriptor_;
}

const Sheet_QunxiongzhuluLocalrank& Sheet_QunxiongzhuluLocalrank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

Sheet_QunxiongzhuluLocalrank* Sheet_QunxiongzhuluLocalrank::default_instance_ = NULL;

Sheet_QunxiongzhuluLocalrank* Sheet_QunxiongzhuluLocalrank::New() const {
  return new Sheet_QunxiongzhuluLocalrank;
}

void Sheet_QunxiongzhuluLocalrank::Clear() {
  e_qunxiongzhululocalrank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_QunxiongzhuluLocalrank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_QunxiongzhuluLocalrank E_QunxiongzhuluLocalrank_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_QunxiongzhuluLocalrank_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_qunxiongzhululocalrank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_QunxiongzhuluLocalrank_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_QunxiongzhuluLocalrank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_QunxiongzhuluLocalrank E_QunxiongzhuluLocalrank_List = 1;
  for (int i = 0; i < this->e_qunxiongzhululocalrank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_qunxiongzhululocalrank_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_QunxiongzhuluLocalrank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_QunxiongzhuluLocalrank E_QunxiongzhuluLocalrank_List = 1;
  for (int i = 0; i < this->e_qunxiongzhululocalrank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_qunxiongzhululocalrank_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_QunxiongzhuluLocalrank::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_QunxiongzhuluLocalrank E_QunxiongzhuluLocalrank_List = 1;
  total_size += 1 * this->e_qunxiongzhululocalrank_list_size();
  for (int i = 0; i < this->e_qunxiongzhululocalrank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_qunxiongzhululocalrank_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_QunxiongzhuluLocalrank::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_QunxiongzhuluLocalrank* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_QunxiongzhuluLocalrank*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_QunxiongzhuluLocalrank::MergeFrom(const Sheet_QunxiongzhuluLocalrank& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_qunxiongzhululocalrank_list_.MergeFrom(from.e_qunxiongzhululocalrank_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_QunxiongzhuluLocalrank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluLocalrank::CopyFrom(const Sheet_QunxiongzhuluLocalrank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_QunxiongzhuluLocalrank::IsInitialized() const {

  return true;
}

void Sheet_QunxiongzhuluLocalrank::Swap(Sheet_QunxiongzhuluLocalrank* other) {
  if (other != this) {
    e_qunxiongzhululocalrank_list_.Swap(&other->e_qunxiongzhululocalrank_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_QunxiongzhuluLocalrank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_QunxiongzhuluLocalrank_descriptor_;
  metadata.reflection = Sheet_QunxiongzhuluLocalrank_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_QunxiongzhuluBossrewardItemDesc::kMNumFieldNumber;
const int E_QunxiongzhuluBossrewardItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_QunxiongzhuluBossrewardItemDesc::E_QunxiongzhuluBossrewardItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QunxiongzhuluBossrewardItemDesc::InitAsDefaultInstance() {
}

E_QunxiongzhuluBossrewardItemDesc::E_QunxiongzhuluBossrewardItemDesc(const E_QunxiongzhuluBossrewardItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QunxiongzhuluBossrewardItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QunxiongzhuluBossrewardItemDesc::~E_QunxiongzhuluBossrewardItemDesc() {
  SharedDtor();
}

void E_QunxiongzhuluBossrewardItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QunxiongzhuluBossrewardItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QunxiongzhuluBossrewardItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QunxiongzhuluBossrewardItemDesc_descriptor_;
}

const E_QunxiongzhuluBossrewardItemDesc& E_QunxiongzhuluBossrewardItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

E_QunxiongzhuluBossrewardItemDesc* E_QunxiongzhuluBossrewardItemDesc::default_instance_ = NULL;

E_QunxiongzhuluBossrewardItemDesc* E_QunxiongzhuluBossrewardItemDesc::New() const {
  return new E_QunxiongzhuluBossrewardItemDesc;
}

void E_QunxiongzhuluBossrewardItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QunxiongzhuluBossrewardItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QunxiongzhuluBossrewardItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QunxiongzhuluBossrewardItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QunxiongzhuluBossrewardItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QunxiongzhuluBossrewardItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QunxiongzhuluBossrewardItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QunxiongzhuluBossrewardItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QunxiongzhuluBossrewardItemDesc::MergeFrom(const E_QunxiongzhuluBossrewardItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QunxiongzhuluBossrewardItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QunxiongzhuluBossrewardItemDesc::CopyFrom(const E_QunxiongzhuluBossrewardItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QunxiongzhuluBossrewardItemDesc::IsInitialized() const {

  return true;
}

void E_QunxiongzhuluBossrewardItemDesc::Swap(E_QunxiongzhuluBossrewardItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QunxiongzhuluBossrewardItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QunxiongzhuluBossrewardItemDesc_descriptor_;
  metadata.reflection = E_QunxiongzhuluBossrewardItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_QunxiongzhuluBossreward::kMIdFieldNumber;
const int E_QunxiongzhuluBossreward::kMTypeFieldNumber;
const int E_QunxiongzhuluBossreward::kMItemFieldNumber;
#endif  // !_MSC_VER

E_QunxiongzhuluBossreward::E_QunxiongzhuluBossreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QunxiongzhuluBossreward::InitAsDefaultInstance() {
}

E_QunxiongzhuluBossreward::E_QunxiongzhuluBossreward(const E_QunxiongzhuluBossreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QunxiongzhuluBossreward::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QunxiongzhuluBossreward::~E_QunxiongzhuluBossreward() {
  SharedDtor();
}

void E_QunxiongzhuluBossreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QunxiongzhuluBossreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QunxiongzhuluBossreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QunxiongzhuluBossreward_descriptor_;
}

const E_QunxiongzhuluBossreward& E_QunxiongzhuluBossreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

E_QunxiongzhuluBossreward* E_QunxiongzhuluBossreward::default_instance_ = NULL;

E_QunxiongzhuluBossreward* E_QunxiongzhuluBossreward::New() const {
  return new E_QunxiongzhuluBossreward;
}

void E_QunxiongzhuluBossreward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
  }
  m_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QunxiongzhuluBossreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_QunxiongzhuluBossrewardItemDesc m_item = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QunxiongzhuluBossreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // repeated .proto_ff.E_QunxiongzhuluBossrewardItemDesc m_item = 3;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QunxiongzhuluBossreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // repeated .proto_ff.E_QunxiongzhuluBossrewardItemDesc m_item = 3;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QunxiongzhuluBossreward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  // repeated .proto_ff.E_QunxiongzhuluBossrewardItemDesc m_item = 3;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QunxiongzhuluBossreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QunxiongzhuluBossreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QunxiongzhuluBossreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QunxiongzhuluBossreward::MergeFrom(const E_QunxiongzhuluBossreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QunxiongzhuluBossreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QunxiongzhuluBossreward::CopyFrom(const E_QunxiongzhuluBossreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QunxiongzhuluBossreward::IsInitialized() const {

  return true;
}

void E_QunxiongzhuluBossreward::Swap(E_QunxiongzhuluBossreward* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    m_item_.Swap(&other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QunxiongzhuluBossreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QunxiongzhuluBossreward_descriptor_;
  metadata.reflection = E_QunxiongzhuluBossreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_QunxiongzhuluBossreward::kEQunxiongzhuluBossrewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_QunxiongzhuluBossreward::Sheet_QunxiongzhuluBossreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_QunxiongzhuluBossreward::InitAsDefaultInstance() {
}

Sheet_QunxiongzhuluBossreward::Sheet_QunxiongzhuluBossreward(const Sheet_QunxiongzhuluBossreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluBossreward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_QunxiongzhuluBossreward::~Sheet_QunxiongzhuluBossreward() {
  SharedDtor();
}

void Sheet_QunxiongzhuluBossreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_QunxiongzhuluBossreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_QunxiongzhuluBossreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_QunxiongzhuluBossreward_descriptor_;
}

const Sheet_QunxiongzhuluBossreward& Sheet_QunxiongzhuluBossreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQunxiongzhulu_2eproto();
  return *default_instance_;
}

Sheet_QunxiongzhuluBossreward* Sheet_QunxiongzhuluBossreward::default_instance_ = NULL;

Sheet_QunxiongzhuluBossreward* Sheet_QunxiongzhuluBossreward::New() const {
  return new Sheet_QunxiongzhuluBossreward;
}

void Sheet_QunxiongzhuluBossreward::Clear() {
  e_qunxiongzhulubossreward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_QunxiongzhuluBossreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_QunxiongzhuluBossreward E_QunxiongzhuluBossreward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_QunxiongzhuluBossreward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_qunxiongzhulubossreward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_QunxiongzhuluBossreward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_QunxiongzhuluBossreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_QunxiongzhuluBossreward E_QunxiongzhuluBossreward_List = 1;
  for (int i = 0; i < this->e_qunxiongzhulubossreward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_qunxiongzhulubossreward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_QunxiongzhuluBossreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_QunxiongzhuluBossreward E_QunxiongzhuluBossreward_List = 1;
  for (int i = 0; i < this->e_qunxiongzhulubossreward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_qunxiongzhulubossreward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_QunxiongzhuluBossreward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_QunxiongzhuluBossreward E_QunxiongzhuluBossreward_List = 1;
  total_size += 1 * this->e_qunxiongzhulubossreward_list_size();
  for (int i = 0; i < this->e_qunxiongzhulubossreward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_qunxiongzhulubossreward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_QunxiongzhuluBossreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_QunxiongzhuluBossreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_QunxiongzhuluBossreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_QunxiongzhuluBossreward::MergeFrom(const Sheet_QunxiongzhuluBossreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_qunxiongzhulubossreward_list_.MergeFrom(from.e_qunxiongzhulubossreward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_QunxiongzhuluBossreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_QunxiongzhuluBossreward::CopyFrom(const Sheet_QunxiongzhuluBossreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_QunxiongzhuluBossreward::IsInitialized() const {

  return true;
}

void Sheet_QunxiongzhuluBossreward::Swap(Sheet_QunxiongzhuluBossreward* other) {
  if (other != this) {
    e_qunxiongzhulubossreward_list_.Swap(&other->e_qunxiongzhulubossreward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_QunxiongzhuluBossreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_QunxiongzhuluBossreward_descriptor_;
  metadata.reflection = Sheet_QunxiongzhuluBossreward_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
