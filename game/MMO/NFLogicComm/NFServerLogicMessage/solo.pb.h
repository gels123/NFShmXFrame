// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: solo.proto

#ifndef PROTOBUF_solo_2eproto__INCLUDED
#define PROTOBUF_solo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_solo_2eproto();
void protobuf_AssignDesc_solo_2eproto();
void protobuf_ShutdownFile_solo_2eproto();

class soloduanweirewardDesc;
class soloduanweidayRewardItemDesc;
class soloduanwei;
class Sheet_soloduanwei;
class solorankrewardDesc;
class solorank;
class Sheet_solorank;
class solopipei;
class Sheet_solopipei;
class soloconstant;
class Sheet_soloconstant;

// ===================================================================

class soloduanweirewardDesc : public ::google::protobuf::Message {
 public:
  soloduanweirewardDesc();
  virtual ~soloduanweirewardDesc();

  soloduanweirewardDesc(const soloduanweirewardDesc& from);

  inline soloduanweirewardDesc& operator=(const soloduanweirewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const soloduanweirewardDesc& default_instance();

  void Swap(soloduanweirewardDesc* other);

  // implements Message ----------------------------------------------

  soloduanweirewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const soloduanweirewardDesc& from);
  void MergeFrom(const soloduanweirewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 duanwei = 2;
  inline bool has_duanwei() const;
  inline void clear_duanwei();
  static const int kDuanweiFieldNumber = 2;
  inline ::google::protobuf::int64 duanwei() const;
  inline void set_duanwei(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.soloduanweirewardDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_duanwei();
  inline void clear_has_duanwei();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 duanwei_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static soloduanweirewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class soloduanweidayRewardItemDesc : public ::google::protobuf::Message {
 public:
  soloduanweidayRewardItemDesc();
  virtual ~soloduanweidayRewardItemDesc();

  soloduanweidayRewardItemDesc(const soloduanweidayRewardItemDesc& from);

  inline soloduanweidayRewardItemDesc& operator=(const soloduanweidayRewardItemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const soloduanweidayRewardItemDesc& default_instance();

  void Swap(soloduanweidayRewardItemDesc* other);

  // implements Message ----------------------------------------------

  soloduanweidayRewardItemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const soloduanweidayRewardItemDesc& from);
  void MergeFrom(const soloduanweidayRewardItemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.soloduanweidayRewardItemDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static soloduanweidayRewardItemDesc* default_instance_;
};
// -------------------------------------------------------------------

class soloduanwei : public ::google::protobuf::Message {
 public:
  soloduanwei();
  virtual ~soloduanwei();

  soloduanwei(const soloduanwei& from);

  inline soloduanwei& operator=(const soloduanwei& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const soloduanwei& default_instance();

  void Swap(soloduanwei* other);

  // implements Message ----------------------------------------------

  soloduanwei* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const soloduanwei& from);
  void MergeFrom(const soloduanwei& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 duanweiID = 1;
  inline bool has_duanweiid() const;
  inline void clear_duanweiid();
  static const int kDuanweiIDFieldNumber = 1;
  inline ::google::protobuf::int32 duanweiid() const;
  inline void set_duanweiid(::google::protobuf::int32 value);

  // optional int32 pointMin = 2;
  inline bool has_pointmin() const;
  inline void clear_pointmin();
  static const int kPointMinFieldNumber = 2;
  inline ::google::protobuf::int32 pointmin() const;
  inline void set_pointmin(::google::protobuf::int32 value);

  // optional int32 pointWin = 3;
  inline bool has_pointwin() const;
  inline void clear_pointwin();
  static const int kPointWinFieldNumber = 3;
  inline ::google::protobuf::int32 pointwin() const;
  inline void set_pointwin(::google::protobuf::int32 value);

  // optional int32 pointLose = 4;
  inline bool has_pointlose() const;
  inline void clear_pointlose();
  static const int kPointLoseFieldNumber = 4;
  inline ::google::protobuf::int32 pointlose() const;
  inline void set_pointlose(::google::protobuf::int32 value);

  // optional int32 arenaWin = 5;
  inline bool has_arenawin() const;
  inline void clear_arenawin();
  static const int kArenaWinFieldNumber = 5;
  inline ::google::protobuf::int32 arenawin() const;
  inline void set_arenawin(::google::protobuf::int32 value);

  // optional int32 arenaLose = 6;
  inline bool has_arenalose() const;
  inline void clear_arenalose();
  static const int kArenaLoseFieldNumber = 6;
  inline ::google::protobuf::int32 arenalose() const;
  inline void set_arenalose(::google::protobuf::int32 value);

  // optional int32 pipeiPoint = 7;
  inline bool has_pipeipoint() const;
  inline void clear_pipeipoint();
  static const int kPipeiPointFieldNumber = 7;
  inline ::google::protobuf::int32 pipeipoint() const;
  inline void set_pipeipoint(::google::protobuf::int32 value);

  // optional int32 dayReward = 8;
  inline bool has_dayreward() const;
  inline void clear_dayreward();
  static const int kDayRewardFieldNumber = 8;
  inline ::google::protobuf::int32 dayreward() const;
  inline void set_dayreward(::google::protobuf::int32 value);

  // optional int32 diamondNum = 9;
  inline bool has_diamondnum() const;
  inline void clear_diamondnum();
  static const int kDiamondNumFieldNumber = 9;
  inline ::google::protobuf::int32 diamondnum() const;
  inline void set_diamondnum(::google::protobuf::int32 value);

  // repeated .proto_ff.soloduanweirewardDesc reward = 10;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 10;
  inline const ::proto_ff::soloduanweirewardDesc& reward(int index) const;
  inline ::proto_ff::soloduanweirewardDesc* mutable_reward(int index);
  inline ::proto_ff::soloduanweirewardDesc* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanweirewardDesc >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanweirewardDesc >*
      mutable_reward();

  // repeated .proto_ff.soloduanweidayRewardItemDesc dayRewardItem = 11;
  inline int dayrewarditem_size() const;
  inline void clear_dayrewarditem();
  static const int kDayRewardItemFieldNumber = 11;
  inline const ::proto_ff::soloduanweidayRewardItemDesc& dayrewarditem(int index) const;
  inline ::proto_ff::soloduanweidayRewardItemDesc* mutable_dayrewarditem(int index);
  inline ::proto_ff::soloduanweidayRewardItemDesc* add_dayrewarditem();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanweidayRewardItemDesc >&
      dayrewarditem() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanweidayRewardItemDesc >*
      mutable_dayrewarditem();

  // @@protoc_insertion_point(class_scope:proto_ff.soloduanwei)
 private:
  inline void set_has_duanweiid();
  inline void clear_has_duanweiid();
  inline void set_has_pointmin();
  inline void clear_has_pointmin();
  inline void set_has_pointwin();
  inline void clear_has_pointwin();
  inline void set_has_pointlose();
  inline void clear_has_pointlose();
  inline void set_has_arenawin();
  inline void clear_has_arenawin();
  inline void set_has_arenalose();
  inline void clear_has_arenalose();
  inline void set_has_pipeipoint();
  inline void clear_has_pipeipoint();
  inline void set_has_dayreward();
  inline void clear_has_dayreward();
  inline void set_has_diamondnum();
  inline void clear_has_diamondnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 duanweiid_;
  ::google::protobuf::int32 pointmin_;
  ::google::protobuf::int32 pointwin_;
  ::google::protobuf::int32 pointlose_;
  ::google::protobuf::int32 arenawin_;
  ::google::protobuf::int32 arenalose_;
  ::google::protobuf::int32 pipeipoint_;
  ::google::protobuf::int32 dayreward_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanweirewardDesc > reward_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanweidayRewardItemDesc > dayrewarditem_;
  ::google::protobuf::int32 diamondnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static soloduanwei* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_soloduanwei : public ::google::protobuf::Message {
 public:
  Sheet_soloduanwei();
  virtual ~Sheet_soloduanwei();

  Sheet_soloduanwei(const Sheet_soloduanwei& from);

  inline Sheet_soloduanwei& operator=(const Sheet_soloduanwei& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_soloduanwei& default_instance();

  void Swap(Sheet_soloduanwei* other);

  // implements Message ----------------------------------------------

  Sheet_soloduanwei* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_soloduanwei& from);
  void MergeFrom(const Sheet_soloduanwei& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.soloduanwei soloduanwei_List = 1;
  inline int soloduanwei_list_size() const;
  inline void clear_soloduanwei_list();
  static const int kSoloduanweiListFieldNumber = 1;
  inline const ::proto_ff::soloduanwei& soloduanwei_list(int index) const;
  inline ::proto_ff::soloduanwei* mutable_soloduanwei_list(int index);
  inline ::proto_ff::soloduanwei* add_soloduanwei_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanwei >&
      soloduanwei_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanwei >*
      mutable_soloduanwei_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_soloduanwei)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanwei > soloduanwei_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static Sheet_soloduanwei* default_instance_;
};
// -------------------------------------------------------------------

class solorankrewardDesc : public ::google::protobuf::Message {
 public:
  solorankrewardDesc();
  virtual ~solorankrewardDesc();

  solorankrewardDesc(const solorankrewardDesc& from);

  inline solorankrewardDesc& operator=(const solorankrewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const solorankrewardDesc& default_instance();

  void Swap(solorankrewardDesc* other);

  // implements Message ----------------------------------------------

  solorankrewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const solorankrewardDesc& from);
  void MergeFrom(const solorankrewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::int64 rank() const;
  inline void set_rank(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.solorankrewardDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_rank();
  inline void clear_has_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 rank_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static solorankrewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class solorank : public ::google::protobuf::Message {
 public:
  solorank();
  virtual ~solorank();

  solorank(const solorank& from);

  inline solorank& operator=(const solorank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const solorank& default_instance();

  void Swap(solorank* other);

  // implements Message ----------------------------------------------

  solorank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const solorank& from);
  void MergeFrom(const solorank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rankID = 1;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIDFieldNumber = 1;
  inline ::google::protobuf::int32 rankid() const;
  inline void set_rankid(::google::protobuf::int32 value);

  // optional int32 maxRank = 2;
  inline bool has_maxrank() const;
  inline void clear_maxrank();
  static const int kMaxRankFieldNumber = 2;
  inline ::google::protobuf::int32 maxrank() const;
  inline void set_maxrank(::google::protobuf::int32 value);

  // optional int32 minRank = 3;
  inline bool has_minrank() const;
  inline void clear_minrank();
  static const int kMinRankFieldNumber = 3;
  inline ::google::protobuf::int32 minrank() const;
  inline void set_minrank(::google::protobuf::int32 value);

  // optional int32 diamondNum = 4;
  inline bool has_diamondnum() const;
  inline void clear_diamondnum();
  static const int kDiamondNumFieldNumber = 4;
  inline ::google::protobuf::int32 diamondnum() const;
  inline void set_diamondnum(::google::protobuf::int32 value);

  // repeated .proto_ff.solorankrewardDesc reward = 5;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 5;
  inline const ::proto_ff::solorankrewardDesc& reward(int index) const;
  inline ::proto_ff::solorankrewardDesc* mutable_reward(int index);
  inline ::proto_ff::solorankrewardDesc* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::solorankrewardDesc >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::solorankrewardDesc >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.solorank)
 private:
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_maxrank();
  inline void clear_has_maxrank();
  inline void set_has_minrank();
  inline void clear_has_minrank();
  inline void set_has_diamondnum();
  inline void clear_has_diamondnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rankid_;
  ::google::protobuf::int32 maxrank_;
  ::google::protobuf::int32 minrank_;
  ::google::protobuf::int32 diamondnum_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::solorankrewardDesc > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static solorank* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_solorank : public ::google::protobuf::Message {
 public:
  Sheet_solorank();
  virtual ~Sheet_solorank();

  Sheet_solorank(const Sheet_solorank& from);

  inline Sheet_solorank& operator=(const Sheet_solorank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_solorank& default_instance();

  void Swap(Sheet_solorank* other);

  // implements Message ----------------------------------------------

  Sheet_solorank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_solorank& from);
  void MergeFrom(const Sheet_solorank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.solorank solorank_List = 1;
  inline int solorank_list_size() const;
  inline void clear_solorank_list();
  static const int kSolorankListFieldNumber = 1;
  inline const ::proto_ff::solorank& solorank_list(int index) const;
  inline ::proto_ff::solorank* mutable_solorank_list(int index);
  inline ::proto_ff::solorank* add_solorank_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::solorank >&
      solorank_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::solorank >*
      mutable_solorank_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_solorank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::solorank > solorank_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static Sheet_solorank* default_instance_;
};
// -------------------------------------------------------------------

class solopipei : public ::google::protobuf::Message {
 public:
  solopipei();
  virtual ~solopipei();

  solopipei(const solopipei& from);

  inline solopipei& operator=(const solopipei& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const solopipei& default_instance();

  void Swap(solopipei* other);

  // implements Message ----------------------------------------------

  solopipei* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const solopipei& from);
  void MergeFrom(const solopipei& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 reward = 3;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline ::google::protobuf::int64 reward() const;
  inline void set_reward(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.solopipei)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int64 reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static solopipei* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_solopipei : public ::google::protobuf::Message {
 public:
  Sheet_solopipei();
  virtual ~Sheet_solopipei();

  Sheet_solopipei(const Sheet_solopipei& from);

  inline Sheet_solopipei& operator=(const Sheet_solopipei& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_solopipei& default_instance();

  void Swap(Sheet_solopipei* other);

  // implements Message ----------------------------------------------

  Sheet_solopipei* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_solopipei& from);
  void MergeFrom(const Sheet_solopipei& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.solopipei solopipei_List = 1;
  inline int solopipei_list_size() const;
  inline void clear_solopipei_list();
  static const int kSolopipeiListFieldNumber = 1;
  inline const ::proto_ff::solopipei& solopipei_list(int index) const;
  inline ::proto_ff::solopipei* mutable_solopipei_list(int index);
  inline ::proto_ff::solopipei* add_solopipei_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::solopipei >&
      solopipei_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::solopipei >*
      mutable_solopipei_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_solopipei)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::solopipei > solopipei_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static Sheet_solopipei* default_instance_;
};
// -------------------------------------------------------------------

class soloconstant : public ::google::protobuf::Message {
 public:
  soloconstant();
  virtual ~soloconstant();

  soloconstant(const soloconstant& from);

  inline soloconstant& operator=(const soloconstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const soloconstant& default_instance();

  void Swap(soloconstant* other);

  // implements Message ----------------------------------------------

  soloconstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const soloconstant& from);
  void MergeFrom(const soloconstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string constant = 2;
  inline bool has_constant() const;
  inline void clear_constant();
  static const int kConstantFieldNumber = 2;
  inline const ::std::string& constant() const;
  inline void set_constant(const ::std::string& value);
  inline void set_constant(const char* value);
  inline void set_constant(const char* value, size_t size);
  inline ::std::string* mutable_constant();
  inline ::std::string* release_constant();
  inline void set_allocated_constant(::std::string* constant);

  // @@protoc_insertion_point(class_scope:proto_ff.soloconstant)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_constant();
  inline void clear_has_constant();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* constant_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static soloconstant* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_soloconstant : public ::google::protobuf::Message {
 public:
  Sheet_soloconstant();
  virtual ~Sheet_soloconstant();

  Sheet_soloconstant(const Sheet_soloconstant& from);

  inline Sheet_soloconstant& operator=(const Sheet_soloconstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_soloconstant& default_instance();

  void Swap(Sheet_soloconstant* other);

  // implements Message ----------------------------------------------

  Sheet_soloconstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_soloconstant& from);
  void MergeFrom(const Sheet_soloconstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.soloconstant soloconstant_List = 1;
  inline int soloconstant_list_size() const;
  inline void clear_soloconstant_list();
  static const int kSoloconstantListFieldNumber = 1;
  inline const ::proto_ff::soloconstant& soloconstant_list(int index) const;
  inline ::proto_ff::soloconstant* mutable_soloconstant_list(int index);
  inline ::proto_ff::soloconstant* add_soloconstant_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::soloconstant >&
      soloconstant_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::soloconstant >*
      mutable_soloconstant_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_soloconstant)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::soloconstant > soloconstant_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_solo_2eproto();
  friend void protobuf_AssignDesc_solo_2eproto();
  friend void protobuf_ShutdownFile_solo_2eproto();

  void InitAsDefaultInstance();
  static Sheet_soloconstant* default_instance_;
};
// ===================================================================


// ===================================================================

// soloduanweirewardDesc

// optional int32 num = 1;
inline bool soloduanweirewardDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void soloduanweirewardDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void soloduanweirewardDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void soloduanweirewardDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 soloduanweirewardDesc::num() const {
  return num_;
}
inline void soloduanweirewardDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 duanwei = 2;
inline bool soloduanweirewardDesc::has_duanwei() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void soloduanweirewardDesc::set_has_duanwei() {
  _has_bits_[0] |= 0x00000002u;
}
inline void soloduanweirewardDesc::clear_has_duanwei() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void soloduanweirewardDesc::clear_duanwei() {
  duanwei_ = GOOGLE_LONGLONG(0);
  clear_has_duanwei();
}
inline ::google::protobuf::int64 soloduanweirewardDesc::duanwei() const {
  return duanwei_;
}
inline void soloduanweirewardDesc::set_duanwei(::google::protobuf::int64 value) {
  set_has_duanwei();
  duanwei_ = value;
}

// -------------------------------------------------------------------

// soloduanweidayRewardItemDesc

// optional int32 num = 1;
inline bool soloduanweidayRewardItemDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void soloduanweidayRewardItemDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void soloduanweidayRewardItemDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void soloduanweidayRewardItemDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 soloduanweidayRewardItemDesc::num() const {
  return num_;
}
inline void soloduanweidayRewardItemDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 id = 2;
inline bool soloduanweidayRewardItemDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void soloduanweidayRewardItemDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void soloduanweidayRewardItemDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void soloduanweidayRewardItemDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 soloduanweidayRewardItemDesc::id() const {
  return id_;
}
inline void soloduanweidayRewardItemDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// soloduanwei

// optional int32 duanweiID = 1;
inline bool soloduanwei::has_duanweiid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void soloduanwei::set_has_duanweiid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void soloduanwei::clear_has_duanweiid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void soloduanwei::clear_duanweiid() {
  duanweiid_ = 0;
  clear_has_duanweiid();
}
inline ::google::protobuf::int32 soloduanwei::duanweiid() const {
  return duanweiid_;
}
inline void soloduanwei::set_duanweiid(::google::protobuf::int32 value) {
  set_has_duanweiid();
  duanweiid_ = value;
}

// optional int32 pointMin = 2;
inline bool soloduanwei::has_pointmin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void soloduanwei::set_has_pointmin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void soloduanwei::clear_has_pointmin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void soloduanwei::clear_pointmin() {
  pointmin_ = 0;
  clear_has_pointmin();
}
inline ::google::protobuf::int32 soloduanwei::pointmin() const {
  return pointmin_;
}
inline void soloduanwei::set_pointmin(::google::protobuf::int32 value) {
  set_has_pointmin();
  pointmin_ = value;
}

// optional int32 pointWin = 3;
inline bool soloduanwei::has_pointwin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void soloduanwei::set_has_pointwin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void soloduanwei::clear_has_pointwin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void soloduanwei::clear_pointwin() {
  pointwin_ = 0;
  clear_has_pointwin();
}
inline ::google::protobuf::int32 soloduanwei::pointwin() const {
  return pointwin_;
}
inline void soloduanwei::set_pointwin(::google::protobuf::int32 value) {
  set_has_pointwin();
  pointwin_ = value;
}

// optional int32 pointLose = 4;
inline bool soloduanwei::has_pointlose() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void soloduanwei::set_has_pointlose() {
  _has_bits_[0] |= 0x00000008u;
}
inline void soloduanwei::clear_has_pointlose() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void soloduanwei::clear_pointlose() {
  pointlose_ = 0;
  clear_has_pointlose();
}
inline ::google::protobuf::int32 soloduanwei::pointlose() const {
  return pointlose_;
}
inline void soloduanwei::set_pointlose(::google::protobuf::int32 value) {
  set_has_pointlose();
  pointlose_ = value;
}

// optional int32 arenaWin = 5;
inline bool soloduanwei::has_arenawin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void soloduanwei::set_has_arenawin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void soloduanwei::clear_has_arenawin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void soloduanwei::clear_arenawin() {
  arenawin_ = 0;
  clear_has_arenawin();
}
inline ::google::protobuf::int32 soloduanwei::arenawin() const {
  return arenawin_;
}
inline void soloduanwei::set_arenawin(::google::protobuf::int32 value) {
  set_has_arenawin();
  arenawin_ = value;
}

// optional int32 arenaLose = 6;
inline bool soloduanwei::has_arenalose() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void soloduanwei::set_has_arenalose() {
  _has_bits_[0] |= 0x00000020u;
}
inline void soloduanwei::clear_has_arenalose() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void soloduanwei::clear_arenalose() {
  arenalose_ = 0;
  clear_has_arenalose();
}
inline ::google::protobuf::int32 soloduanwei::arenalose() const {
  return arenalose_;
}
inline void soloduanwei::set_arenalose(::google::protobuf::int32 value) {
  set_has_arenalose();
  arenalose_ = value;
}

// optional int32 pipeiPoint = 7;
inline bool soloduanwei::has_pipeipoint() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void soloduanwei::set_has_pipeipoint() {
  _has_bits_[0] |= 0x00000040u;
}
inline void soloduanwei::clear_has_pipeipoint() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void soloduanwei::clear_pipeipoint() {
  pipeipoint_ = 0;
  clear_has_pipeipoint();
}
inline ::google::protobuf::int32 soloduanwei::pipeipoint() const {
  return pipeipoint_;
}
inline void soloduanwei::set_pipeipoint(::google::protobuf::int32 value) {
  set_has_pipeipoint();
  pipeipoint_ = value;
}

// optional int32 dayReward = 8;
inline bool soloduanwei::has_dayreward() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void soloduanwei::set_has_dayreward() {
  _has_bits_[0] |= 0x00000080u;
}
inline void soloduanwei::clear_has_dayreward() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void soloduanwei::clear_dayreward() {
  dayreward_ = 0;
  clear_has_dayreward();
}
inline ::google::protobuf::int32 soloduanwei::dayreward() const {
  return dayreward_;
}
inline void soloduanwei::set_dayreward(::google::protobuf::int32 value) {
  set_has_dayreward();
  dayreward_ = value;
}

// optional int32 diamondNum = 9;
inline bool soloduanwei::has_diamondnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void soloduanwei::set_has_diamondnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void soloduanwei::clear_has_diamondnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void soloduanwei::clear_diamondnum() {
  diamondnum_ = 0;
  clear_has_diamondnum();
}
inline ::google::protobuf::int32 soloduanwei::diamondnum() const {
  return diamondnum_;
}
inline void soloduanwei::set_diamondnum(::google::protobuf::int32 value) {
  set_has_diamondnum();
  diamondnum_ = value;
}

// repeated .proto_ff.soloduanweirewardDesc reward = 10;
inline int soloduanwei::reward_size() const {
  return reward_.size();
}
inline void soloduanwei::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::soloduanweirewardDesc& soloduanwei::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::soloduanweirewardDesc* soloduanwei::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::soloduanweirewardDesc* soloduanwei::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanweirewardDesc >&
soloduanwei::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanweirewardDesc >*
soloduanwei::mutable_reward() {
  return &reward_;
}

// repeated .proto_ff.soloduanweidayRewardItemDesc dayRewardItem = 11;
inline int soloduanwei::dayrewarditem_size() const {
  return dayrewarditem_.size();
}
inline void soloduanwei::clear_dayrewarditem() {
  dayrewarditem_.Clear();
}
inline const ::proto_ff::soloduanweidayRewardItemDesc& soloduanwei::dayrewarditem(int index) const {
  return dayrewarditem_.Get(index);
}
inline ::proto_ff::soloduanweidayRewardItemDesc* soloduanwei::mutable_dayrewarditem(int index) {
  return dayrewarditem_.Mutable(index);
}
inline ::proto_ff::soloduanweidayRewardItemDesc* soloduanwei::add_dayrewarditem() {
  return dayrewarditem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanweidayRewardItemDesc >&
soloduanwei::dayrewarditem() const {
  return dayrewarditem_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanweidayRewardItemDesc >*
soloduanwei::mutable_dayrewarditem() {
  return &dayrewarditem_;
}

// -------------------------------------------------------------------

// Sheet_soloduanwei

// repeated .proto_ff.soloduanwei soloduanwei_List = 1;
inline int Sheet_soloduanwei::soloduanwei_list_size() const {
  return soloduanwei_list_.size();
}
inline void Sheet_soloduanwei::clear_soloduanwei_list() {
  soloduanwei_list_.Clear();
}
inline const ::proto_ff::soloduanwei& Sheet_soloduanwei::soloduanwei_list(int index) const {
  return soloduanwei_list_.Get(index);
}
inline ::proto_ff::soloduanwei* Sheet_soloduanwei::mutable_soloduanwei_list(int index) {
  return soloduanwei_list_.Mutable(index);
}
inline ::proto_ff::soloduanwei* Sheet_soloduanwei::add_soloduanwei_list() {
  return soloduanwei_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanwei >&
Sheet_soloduanwei::soloduanwei_list() const {
  return soloduanwei_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::soloduanwei >*
Sheet_soloduanwei::mutable_soloduanwei_list() {
  return &soloduanwei_list_;
}

// -------------------------------------------------------------------

// solorankrewardDesc

// optional int32 num = 1;
inline bool solorankrewardDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void solorankrewardDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void solorankrewardDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void solorankrewardDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 solorankrewardDesc::num() const {
  return num_;
}
inline void solorankrewardDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 rank = 2;
inline bool solorankrewardDesc::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void solorankrewardDesc::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void solorankrewardDesc::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void solorankrewardDesc::clear_rank() {
  rank_ = GOOGLE_LONGLONG(0);
  clear_has_rank();
}
inline ::google::protobuf::int64 solorankrewardDesc::rank() const {
  return rank_;
}
inline void solorankrewardDesc::set_rank(::google::protobuf::int64 value) {
  set_has_rank();
  rank_ = value;
}

// -------------------------------------------------------------------

// solorank

// optional int32 rankID = 1;
inline bool solorank::has_rankid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void solorank::set_has_rankid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void solorank::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void solorank::clear_rankid() {
  rankid_ = 0;
  clear_has_rankid();
}
inline ::google::protobuf::int32 solorank::rankid() const {
  return rankid_;
}
inline void solorank::set_rankid(::google::protobuf::int32 value) {
  set_has_rankid();
  rankid_ = value;
}

// optional int32 maxRank = 2;
inline bool solorank::has_maxrank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void solorank::set_has_maxrank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void solorank::clear_has_maxrank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void solorank::clear_maxrank() {
  maxrank_ = 0;
  clear_has_maxrank();
}
inline ::google::protobuf::int32 solorank::maxrank() const {
  return maxrank_;
}
inline void solorank::set_maxrank(::google::protobuf::int32 value) {
  set_has_maxrank();
  maxrank_ = value;
}

// optional int32 minRank = 3;
inline bool solorank::has_minrank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void solorank::set_has_minrank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void solorank::clear_has_minrank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void solorank::clear_minrank() {
  minrank_ = 0;
  clear_has_minrank();
}
inline ::google::protobuf::int32 solorank::minrank() const {
  return minrank_;
}
inline void solorank::set_minrank(::google::protobuf::int32 value) {
  set_has_minrank();
  minrank_ = value;
}

// optional int32 diamondNum = 4;
inline bool solorank::has_diamondnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void solorank::set_has_diamondnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void solorank::clear_has_diamondnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void solorank::clear_diamondnum() {
  diamondnum_ = 0;
  clear_has_diamondnum();
}
inline ::google::protobuf::int32 solorank::diamondnum() const {
  return diamondnum_;
}
inline void solorank::set_diamondnum(::google::protobuf::int32 value) {
  set_has_diamondnum();
  diamondnum_ = value;
}

// repeated .proto_ff.solorankrewardDesc reward = 5;
inline int solorank::reward_size() const {
  return reward_.size();
}
inline void solorank::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::solorankrewardDesc& solorank::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::solorankrewardDesc* solorank::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::solorankrewardDesc* solorank::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::solorankrewardDesc >&
solorank::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::solorankrewardDesc >*
solorank::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// Sheet_solorank

// repeated .proto_ff.solorank solorank_List = 1;
inline int Sheet_solorank::solorank_list_size() const {
  return solorank_list_.size();
}
inline void Sheet_solorank::clear_solorank_list() {
  solorank_list_.Clear();
}
inline const ::proto_ff::solorank& Sheet_solorank::solorank_list(int index) const {
  return solorank_list_.Get(index);
}
inline ::proto_ff::solorank* Sheet_solorank::mutable_solorank_list(int index) {
  return solorank_list_.Mutable(index);
}
inline ::proto_ff::solorank* Sheet_solorank::add_solorank_list() {
  return solorank_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::solorank >&
Sheet_solorank::solorank_list() const {
  return solorank_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::solorank >*
Sheet_solorank::mutable_solorank_list() {
  return &solorank_list_;
}

// -------------------------------------------------------------------

// solopipei

// optional int32 ID = 1;
inline bool solopipei::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void solopipei::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void solopipei::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void solopipei::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 solopipei::id() const {
  return id_;
}
inline void solopipei::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 num = 2;
inline bool solopipei::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void solopipei::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void solopipei::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void solopipei::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 solopipei::num() const {
  return num_;
}
inline void solopipei::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 reward = 3;
inline bool solopipei::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void solopipei::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void solopipei::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void solopipei::clear_reward() {
  reward_ = GOOGLE_LONGLONG(0);
  clear_has_reward();
}
inline ::google::protobuf::int64 solopipei::reward() const {
  return reward_;
}
inline void solopipei::set_reward(::google::protobuf::int64 value) {
  set_has_reward();
  reward_ = value;
}

// -------------------------------------------------------------------

// Sheet_solopipei

// repeated .proto_ff.solopipei solopipei_List = 1;
inline int Sheet_solopipei::solopipei_list_size() const {
  return solopipei_list_.size();
}
inline void Sheet_solopipei::clear_solopipei_list() {
  solopipei_list_.Clear();
}
inline const ::proto_ff::solopipei& Sheet_solopipei::solopipei_list(int index) const {
  return solopipei_list_.Get(index);
}
inline ::proto_ff::solopipei* Sheet_solopipei::mutable_solopipei_list(int index) {
  return solopipei_list_.Mutable(index);
}
inline ::proto_ff::solopipei* Sheet_solopipei::add_solopipei_list() {
  return solopipei_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::solopipei >&
Sheet_solopipei::solopipei_list() const {
  return solopipei_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::solopipei >*
Sheet_solopipei::mutable_solopipei_list() {
  return &solopipei_list_;
}

// -------------------------------------------------------------------

// soloconstant

// optional int32 ID = 1;
inline bool soloconstant::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void soloconstant::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void soloconstant::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void soloconstant::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 soloconstant::id() const {
  return id_;
}
inline void soloconstant::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string constant = 2;
inline bool soloconstant::has_constant() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void soloconstant::set_has_constant() {
  _has_bits_[0] |= 0x00000002u;
}
inline void soloconstant::clear_has_constant() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void soloconstant::clear_constant() {
  if (constant_ != &::google::protobuf::internal::kEmptyString) {
    constant_->clear();
  }
  clear_has_constant();
}
inline const ::std::string& soloconstant::constant() const {
  return *constant_;
}
inline void soloconstant::set_constant(const ::std::string& value) {
  set_has_constant();
  if (constant_ == &::google::protobuf::internal::kEmptyString) {
    constant_ = new ::std::string;
  }
  constant_->assign(value);
}
inline void soloconstant::set_constant(const char* value) {
  set_has_constant();
  if (constant_ == &::google::protobuf::internal::kEmptyString) {
    constant_ = new ::std::string;
  }
  constant_->assign(value);
}
inline void soloconstant::set_constant(const char* value, size_t size) {
  set_has_constant();
  if (constant_ == &::google::protobuf::internal::kEmptyString) {
    constant_ = new ::std::string;
  }
  constant_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* soloconstant::mutable_constant() {
  set_has_constant();
  if (constant_ == &::google::protobuf::internal::kEmptyString) {
    constant_ = new ::std::string;
  }
  return constant_;
}
inline ::std::string* soloconstant::release_constant() {
  clear_has_constant();
  if (constant_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = constant_;
    constant_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void soloconstant::set_allocated_constant(::std::string* constant) {
  if (constant_ != &::google::protobuf::internal::kEmptyString) {
    delete constant_;
  }
  if (constant) {
    set_has_constant();
    constant_ = constant;
  } else {
    clear_has_constant();
    constant_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_soloconstant

// repeated .proto_ff.soloconstant soloconstant_List = 1;
inline int Sheet_soloconstant::soloconstant_list_size() const {
  return soloconstant_list_.size();
}
inline void Sheet_soloconstant::clear_soloconstant_list() {
  soloconstant_list_.Clear();
}
inline const ::proto_ff::soloconstant& Sheet_soloconstant::soloconstant_list(int index) const {
  return soloconstant_list_.Get(index);
}
inline ::proto_ff::soloconstant* Sheet_soloconstant::mutable_soloconstant_list(int index) {
  return soloconstant_list_.Mutable(index);
}
inline ::proto_ff::soloconstant* Sheet_soloconstant::add_soloconstant_list() {
  return soloconstant_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::soloconstant >&
Sheet_soloconstant::soloconstant_list() const {
  return soloconstant_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::soloconstant >*
Sheet_soloconstant::mutable_soloconstant_list() {
  return &soloconstant_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_solo_2eproto__INCLUDED
