// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Waremblem.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Waremblem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_WaremblemWaremblemSkillDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_WaremblemWaremblemSkillDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_WaremblemWaremblem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_WaremblemWaremblem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_WaremblemWaremblem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_WaremblemWaremblem_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_WaremblemLvAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_WaremblemLvAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_WaremblemLv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_WaremblemLv_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_WaremblemLv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_WaremblemLv_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_WaremblemStarAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_WaremblemStarAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_WaremblemStar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_WaremblemStar_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_WaremblemStar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_WaremblemStar_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fWaremblem_2eproto() {
  protobuf_AddDesc_E_5fWaremblem_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Waremblem.proto");
  GOOGLE_CHECK(file != NULL);
  E_WaremblemWaremblemSkillDesc_descriptor_ = file->message_type(0);
  static const int E_WaremblemWaremblemSkillDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblemSkillDesc, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblemSkillDesc, m_id_),
  };
  E_WaremblemWaremblemSkillDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_WaremblemWaremblemSkillDesc_descriptor_,
      E_WaremblemWaremblemSkillDesc::default_instance_,
      E_WaremblemWaremblemSkillDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblemSkillDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblemSkillDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_WaremblemWaremblemSkillDesc));
  E_WaremblemWaremblem_descriptor_ = file->message_type(1);
  static const int E_WaremblemWaremblem_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblem, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblem, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblem, m_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblem, m_lvindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblem, m_starindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblem, m_skill_),
  };
  E_WaremblemWaremblem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_WaremblemWaremblem_descriptor_,
      E_WaremblemWaremblem::default_instance_,
      E_WaremblemWaremblem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemWaremblem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_WaremblemWaremblem));
  Sheet_WaremblemWaremblem_descriptor_ = file->message_type(2);
  static const int Sheet_WaremblemWaremblem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_WaremblemWaremblem, e_waremblemwaremblem_list_),
  };
  Sheet_WaremblemWaremblem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_WaremblemWaremblem_descriptor_,
      Sheet_WaremblemWaremblem::default_instance_,
      Sheet_WaremblemWaremblem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_WaremblemWaremblem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_WaremblemWaremblem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_WaremblemWaremblem));
  E_WaremblemLvAttributeDesc_descriptor_ = file->message_type(3);
  static const int E_WaremblemLvAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLvAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLvAttributeDesc, m_type_),
  };
  E_WaremblemLvAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_WaremblemLvAttributeDesc_descriptor_,
      E_WaremblemLvAttributeDesc::default_instance_,
      E_WaremblemLvAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLvAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLvAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_WaremblemLvAttributeDesc));
  E_WaremblemLv_descriptor_ = file->message_type(4);
  static const int E_WaremblemLv_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLv, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLv, m_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLv, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLv, m_classbonus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLv, m_costid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLv, m_costnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLv, m_attribute_),
  };
  E_WaremblemLv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_WaremblemLv_descriptor_,
      E_WaremblemLv::default_instance_,
      E_WaremblemLv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemLv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_WaremblemLv));
  Sheet_WaremblemLv_descriptor_ = file->message_type(5);
  static const int Sheet_WaremblemLv_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_WaremblemLv, e_waremblemlv_list_),
  };
  Sheet_WaremblemLv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_WaremblemLv_descriptor_,
      Sheet_WaremblemLv::default_instance_,
      Sheet_WaremblemLv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_WaremblemLv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_WaremblemLv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_WaremblemLv));
  E_WaremblemStarAttributeDesc_descriptor_ = file->message_type(6);
  static const int E_WaremblemStarAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStarAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStarAttributeDesc, m_type_),
  };
  E_WaremblemStarAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_WaremblemStarAttributeDesc_descriptor_,
      E_WaremblemStarAttributeDesc::default_instance_,
      E_WaremblemStarAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStarAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStarAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_WaremblemStarAttributeDesc));
  E_WaremblemStar_descriptor_ = file->message_type(7);
  static const int E_WaremblemStar_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStar, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStar, m_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStar, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStar, m_costid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStar, m_costnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStar, m_succes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStar, m_attribute_),
  };
  E_WaremblemStar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_WaremblemStar_descriptor_,
      E_WaremblemStar::default_instance_,
      E_WaremblemStar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_WaremblemStar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_WaremblemStar));
  Sheet_WaremblemStar_descriptor_ = file->message_type(8);
  static const int Sheet_WaremblemStar_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_WaremblemStar, e_waremblemstar_list_),
  };
  Sheet_WaremblemStar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_WaremblemStar_descriptor_,
      Sheet_WaremblemStar::default_instance_,
      Sheet_WaremblemStar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_WaremblemStar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_WaremblemStar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_WaremblemStar));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fWaremblem_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_WaremblemWaremblemSkillDesc_descriptor_, &E_WaremblemWaremblemSkillDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_WaremblemWaremblem_descriptor_, &E_WaremblemWaremblem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_WaremblemWaremblem_descriptor_, &Sheet_WaremblemWaremblem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_WaremblemLvAttributeDesc_descriptor_, &E_WaremblemLvAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_WaremblemLv_descriptor_, &E_WaremblemLv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_WaremblemLv_descriptor_, &Sheet_WaremblemLv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_WaremblemStarAttributeDesc_descriptor_, &E_WaremblemStarAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_WaremblemStar_descriptor_, &E_WaremblemStar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_WaremblemStar_descriptor_, &Sheet_WaremblemStar::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fWaremblem_2eproto() {
  delete E_WaremblemWaremblemSkillDesc::default_instance_;
  delete E_WaremblemWaremblemSkillDesc_reflection_;
  delete E_WaremblemWaremblem::default_instance_;
  delete E_WaremblemWaremblem_reflection_;
  delete Sheet_WaremblemWaremblem::default_instance_;
  delete Sheet_WaremblemWaremblem_reflection_;
  delete E_WaremblemLvAttributeDesc::default_instance_;
  delete E_WaremblemLvAttributeDesc_reflection_;
  delete E_WaremblemLv::default_instance_;
  delete E_WaremblemLv_reflection_;
  delete Sheet_WaremblemLv::default_instance_;
  delete Sheet_WaremblemLv_reflection_;
  delete E_WaremblemStarAttributeDesc::default_instance_;
  delete E_WaremblemStarAttributeDesc_reflection_;
  delete E_WaremblemStar::default_instance_;
  delete E_WaremblemStar_reflection_;
  delete Sheet_WaremblemStar::default_instance_;
  delete Sheet_WaremblemStar_reflection_;
}

void protobuf_AddDesc_E_5fWaremblem_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021E_Waremblem.proto\022\010proto_ff\032\025yd_fieldo"
    "ptions.proto\"W\n\035E_WaremblemWaremblemSkil"
    "lDesc\022 \n\006m_star\030\001 \001(\005B\020\302\377\024\014\350\247\243\351\224\201\346\230\237\347\272\247\022"
    "\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002id\"\375\001\n\024E_WaremblemWar"
    "emblem\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\032\n\006m_type\030\002"
    " \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022!\n\007m_order\030\003 \001(\005B\020\302\377\024\014\350"
    "\247\243\351\224\201\351\241\272\345\272\217\022\037\n\tm_lvindex\030\004 \001(\005B\014\302\377\024\010lv\347\264"
    "\242\345\274\225\022%\n\013m_starindex\030\005 \001(\005B\020\302\377\024\014\346\230\237\347\272\247\347\264\242"
    "\345\274\225\022H\n\007m_skill\030\006 \003(\0132\'.proto_ff.E_Waremb"
    "lemWaremblemSkillDescB\016\302\377\024\006\346\212\200\350\203\275\210\301\024\005\"c\n"
    "\030Sheet_WaremblemWaremblem\022G\n\031E_Waremblem"
    "Waremblem_List\030\001 \003(\0132\036.proto_ff.E_Waremb"
    "lemWaremblemB\004\210\301\024@\"N\n\032E_WaremblemLvAttri"
    "buteDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\026\n\006m_"
    "type\030\002 \001(\005B\006\302\377\024\002ID\"\234\002\n\rE_WaremblemLv\022\024\n\004"
    "m_id\030\001 \001(\005B\006\302\377\024\002id\022\033\n\007m_index\030\002 \001(\005B\n\302\377\024"
    "\006\347\264\242\345\274\225\022\024\n\004m_lv\030\003 \001(\005B\006\302\377\024\002lv\022&\n\014m_class"
    "bonus\030\004 \001(\005B\020\302\377\024\014\351\230\266\347\272\247\345\212\240\346\210\220\022$\n\010m_costi"
    "d\030\005 \001(\005B\022\302\377\024\016\346\266\210\350\200\227\351\201\223\345\205\267ID\022#\n\tm_costnum"
    "\030\006 \001(\005B\020\302\377\024\014\346\266\210\350\200\227\346\225\260\351\207\217\022O\n\013m_attribute\030"
    "\007 \003(\0132$.proto_ff.E_WaremblemLvAttributeD"
    "escB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\004\"O\n\021Sheet_Warem"
    "blemLv\022:\n\022E_WaremblemLv_List\030\001 \003(\0132\027.pro"
    "to_ff.E_WaremblemLvB\005\210\301\024\200\004\"P\n\034E_Waremble"
    "mStarAttributeDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024"
    "\003\345\200\274\022\026\n\006m_type\030\002 \001(\005B\006\302\377\024\002ID\"\235\002\n\017E_Warem"
    "blemStar\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\033\n\007m_inde"
    "x\030\002 \001(\005B\n\302\377\024\006\347\264\242\345\274\225\022\032\n\006m_star\030\003 \001(\005B\n\302\377\024"
    "\006\346\230\237\347\272\247\022\"\n\010m_costid\030\004 \001(\005B\020\302\377\024\014\346\266\210\350\200\227\351\201\223"
    "\345\205\267\022#\n\tm_costnum\030\005 \001(\005B\020\302\377\024\014\346\266\210\350\200\227\346\225\260\351\207\217"
    "\022\037\n\010m_succes\030\006 \001(\005B\r\302\377\024\t\346\210\220\345\212\237\347\216\207\022Q\n\013m_a"
    "ttribute\030\007 \003(\0132&.proto_ff.E_WaremblemSta"
    "rAttributeDescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\005\"U\n\023"
    "Sheet_WaremblemStar\022>\n\024E_WaremblemStar_L"
    "ist\030\001 \003(\0132\031.proto_ff.E_WaremblemStarB\005\210\301"
    "\024\200\002", 1403);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Waremblem.proto", &protobuf_RegisterTypes);
  E_WaremblemWaremblemSkillDesc::default_instance_ = new E_WaremblemWaremblemSkillDesc();
  E_WaremblemWaremblem::default_instance_ = new E_WaremblemWaremblem();
  Sheet_WaremblemWaremblem::default_instance_ = new Sheet_WaremblemWaremblem();
  E_WaremblemLvAttributeDesc::default_instance_ = new E_WaremblemLvAttributeDesc();
  E_WaremblemLv::default_instance_ = new E_WaremblemLv();
  Sheet_WaremblemLv::default_instance_ = new Sheet_WaremblemLv();
  E_WaremblemStarAttributeDesc::default_instance_ = new E_WaremblemStarAttributeDesc();
  E_WaremblemStar::default_instance_ = new E_WaremblemStar();
  Sheet_WaremblemStar::default_instance_ = new Sheet_WaremblemStar();
  E_WaremblemWaremblemSkillDesc::default_instance_->InitAsDefaultInstance();
  E_WaremblemWaremblem::default_instance_->InitAsDefaultInstance();
  Sheet_WaremblemWaremblem::default_instance_->InitAsDefaultInstance();
  E_WaremblemLvAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_WaremblemLv::default_instance_->InitAsDefaultInstance();
  Sheet_WaremblemLv::default_instance_->InitAsDefaultInstance();
  E_WaremblemStarAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_WaremblemStar::default_instance_->InitAsDefaultInstance();
  Sheet_WaremblemStar::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fWaremblem_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fWaremblem_2eproto {
  StaticDescriptorInitializer_E_5fWaremblem_2eproto() {
    protobuf_AddDesc_E_5fWaremblem_2eproto();
  }
} static_descriptor_initializer_E_5fWaremblem_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_WaremblemWaremblemSkillDesc::kMStarFieldNumber;
const int E_WaremblemWaremblemSkillDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_WaremblemWaremblemSkillDesc::E_WaremblemWaremblemSkillDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_WaremblemWaremblemSkillDesc::InitAsDefaultInstance() {
}

E_WaremblemWaremblemSkillDesc::E_WaremblemWaremblemSkillDesc(const E_WaremblemWaremblemSkillDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_WaremblemWaremblemSkillDesc::SharedCtor() {
  _cached_size_ = 0;
  m_star_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_WaremblemWaremblemSkillDesc::~E_WaremblemWaremblemSkillDesc() {
  SharedDtor();
}

void E_WaremblemWaremblemSkillDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_WaremblemWaremblemSkillDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_WaremblemWaremblemSkillDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_WaremblemWaremblemSkillDesc_descriptor_;
}

const E_WaremblemWaremblemSkillDesc& E_WaremblemWaremblemSkillDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fWaremblem_2eproto();
  return *default_instance_;
}

E_WaremblemWaremblemSkillDesc* E_WaremblemWaremblemSkillDesc::default_instance_ = NULL;

E_WaremblemWaremblemSkillDesc* E_WaremblemWaremblemSkillDesc::New() const {
  return new E_WaremblemWaremblemSkillDesc;
}

void E_WaremblemWaremblemSkillDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_star_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_WaremblemWaremblemSkillDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_star = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_WaremblemWaremblemSkillDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_star = 1;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_star(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_WaremblemWaremblemSkillDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_star = 1;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_star(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_WaremblemWaremblemSkillDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_star = 1;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_WaremblemWaremblemSkillDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_WaremblemWaremblemSkillDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_WaremblemWaremblemSkillDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_WaremblemWaremblemSkillDesc::MergeFrom(const E_WaremblemWaremblemSkillDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_WaremblemWaremblemSkillDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_WaremblemWaremblemSkillDesc::CopyFrom(const E_WaremblemWaremblemSkillDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_WaremblemWaremblemSkillDesc::IsInitialized() const {

  return true;
}

void E_WaremblemWaremblemSkillDesc::Swap(E_WaremblemWaremblemSkillDesc* other) {
  if (other != this) {
    std::swap(m_star_, other->m_star_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_WaremblemWaremblemSkillDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_WaremblemWaremblemSkillDesc_descriptor_;
  metadata.reflection = E_WaremblemWaremblemSkillDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_WaremblemWaremblem::kMIdFieldNumber;
const int E_WaremblemWaremblem::kMTypeFieldNumber;
const int E_WaremblemWaremblem::kMOrderFieldNumber;
const int E_WaremblemWaremblem::kMLvindexFieldNumber;
const int E_WaremblemWaremblem::kMStarindexFieldNumber;
const int E_WaremblemWaremblem::kMSkillFieldNumber;
#endif  // !_MSC_VER

E_WaremblemWaremblem::E_WaremblemWaremblem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_WaremblemWaremblem::InitAsDefaultInstance() {
}

E_WaremblemWaremblem::E_WaremblemWaremblem(const E_WaremblemWaremblem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_WaremblemWaremblem::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_order_ = 0;
  m_lvindex_ = 0;
  m_starindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_WaremblemWaremblem::~E_WaremblemWaremblem() {
  SharedDtor();
}

void E_WaremblemWaremblem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_WaremblemWaremblem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_WaremblemWaremblem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_WaremblemWaremblem_descriptor_;
}

const E_WaremblemWaremblem& E_WaremblemWaremblem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fWaremblem_2eproto();
  return *default_instance_;
}

E_WaremblemWaremblem* E_WaremblemWaremblem::default_instance_ = NULL;

E_WaremblemWaremblem* E_WaremblemWaremblem::New() const {
  return new E_WaremblemWaremblem;
}

void E_WaremblemWaremblem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_order_ = 0;
    m_lvindex_ = 0;
    m_starindex_ = 0;
  }
  m_skill_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_WaremblemWaremblem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_order;
        break;
      }

      // optional int32 m_order = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_order_)));
          set_has_m_order();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_lvindex;
        break;
      }

      // optional int32 m_lvindex = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvindex_)));
          set_has_m_lvindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_starindex;
        break;
      }

      // optional int32 m_starindex = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starindex_)));
          set_has_m_starindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_skill;
        break;
      }

      // repeated .proto_ff.E_WaremblemWaremblemSkillDesc m_skill = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_skill()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_skill;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_WaremblemWaremblem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_order = 3;
  if (has_m_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_order(), output);
  }

  // optional int32 m_lvindex = 4;
  if (has_m_lvindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_lvindex(), output);
  }

  // optional int32 m_starindex = 5;
  if (has_m_starindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_starindex(), output);
  }

  // repeated .proto_ff.E_WaremblemWaremblemSkillDesc m_skill = 6;
  for (int i = 0; i < this->m_skill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_skill(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_WaremblemWaremblem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_order = 3;
  if (has_m_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_order(), target);
  }

  // optional int32 m_lvindex = 4;
  if (has_m_lvindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_lvindex(), target);
  }

  // optional int32 m_starindex = 5;
  if (has_m_starindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_starindex(), target);
  }

  // repeated .proto_ff.E_WaremblemWaremblemSkillDesc m_skill = 6;
  for (int i = 0; i < this->m_skill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_skill(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_WaremblemWaremblem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_order = 3;
    if (has_m_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_order());
    }

    // optional int32 m_lvindex = 4;
    if (has_m_lvindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvindex());
    }

    // optional int32 m_starindex = 5;
    if (has_m_starindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starindex());
    }

  }
  // repeated .proto_ff.E_WaremblemWaremblemSkillDesc m_skill = 6;
  total_size += 1 * this->m_skill_size();
  for (int i = 0; i < this->m_skill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_skill(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_WaremblemWaremblem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_WaremblemWaremblem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_WaremblemWaremblem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_WaremblemWaremblem::MergeFrom(const E_WaremblemWaremblem& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_skill_.MergeFrom(from.m_skill_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_order()) {
      set_m_order(from.m_order());
    }
    if (from.has_m_lvindex()) {
      set_m_lvindex(from.m_lvindex());
    }
    if (from.has_m_starindex()) {
      set_m_starindex(from.m_starindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_WaremblemWaremblem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_WaremblemWaremblem::CopyFrom(const E_WaremblemWaremblem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_WaremblemWaremblem::IsInitialized() const {

  return true;
}

void E_WaremblemWaremblem::Swap(E_WaremblemWaremblem* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_order_, other->m_order_);
    std::swap(m_lvindex_, other->m_lvindex_);
    std::swap(m_starindex_, other->m_starindex_);
    m_skill_.Swap(&other->m_skill_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_WaremblemWaremblem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_WaremblemWaremblem_descriptor_;
  metadata.reflection = E_WaremblemWaremblem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_WaremblemWaremblem::kEWaremblemWaremblemListFieldNumber;
#endif  // !_MSC_VER

Sheet_WaremblemWaremblem::Sheet_WaremblemWaremblem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_WaremblemWaremblem::InitAsDefaultInstance() {
}

Sheet_WaremblemWaremblem::Sheet_WaremblemWaremblem(const Sheet_WaremblemWaremblem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_WaremblemWaremblem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_WaremblemWaremblem::~Sheet_WaremblemWaremblem() {
  SharedDtor();
}

void Sheet_WaremblemWaremblem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_WaremblemWaremblem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_WaremblemWaremblem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_WaremblemWaremblem_descriptor_;
}

const Sheet_WaremblemWaremblem& Sheet_WaremblemWaremblem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fWaremblem_2eproto();
  return *default_instance_;
}

Sheet_WaremblemWaremblem* Sheet_WaremblemWaremblem::default_instance_ = NULL;

Sheet_WaremblemWaremblem* Sheet_WaremblemWaremblem::New() const {
  return new Sheet_WaremblemWaremblem;
}

void Sheet_WaremblemWaremblem::Clear() {
  e_waremblemwaremblem_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_WaremblemWaremblem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_WaremblemWaremblem E_WaremblemWaremblem_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_WaremblemWaremblem_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_waremblemwaremblem_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_WaremblemWaremblem_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_WaremblemWaremblem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_WaremblemWaremblem E_WaremblemWaremblem_List = 1;
  for (int i = 0; i < this->e_waremblemwaremblem_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_waremblemwaremblem_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_WaremblemWaremblem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_WaremblemWaremblem E_WaremblemWaremblem_List = 1;
  for (int i = 0; i < this->e_waremblemwaremblem_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_waremblemwaremblem_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_WaremblemWaremblem::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_WaremblemWaremblem E_WaremblemWaremblem_List = 1;
  total_size += 1 * this->e_waremblemwaremblem_list_size();
  for (int i = 0; i < this->e_waremblemwaremblem_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_waremblemwaremblem_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_WaremblemWaremblem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_WaremblemWaremblem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_WaremblemWaremblem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_WaremblemWaremblem::MergeFrom(const Sheet_WaremblemWaremblem& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_waremblemwaremblem_list_.MergeFrom(from.e_waremblemwaremblem_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_WaremblemWaremblem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_WaremblemWaremblem::CopyFrom(const Sheet_WaremblemWaremblem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_WaremblemWaremblem::IsInitialized() const {

  return true;
}

void Sheet_WaremblemWaremblem::Swap(Sheet_WaremblemWaremblem* other) {
  if (other != this) {
    e_waremblemwaremblem_list_.Swap(&other->e_waremblemwaremblem_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_WaremblemWaremblem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_WaremblemWaremblem_descriptor_;
  metadata.reflection = Sheet_WaremblemWaremblem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_WaremblemLvAttributeDesc::kMValueFieldNumber;
const int E_WaremblemLvAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_WaremblemLvAttributeDesc::E_WaremblemLvAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_WaremblemLvAttributeDesc::InitAsDefaultInstance() {
}

E_WaremblemLvAttributeDesc::E_WaremblemLvAttributeDesc(const E_WaremblemLvAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_WaremblemLvAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_WaremblemLvAttributeDesc::~E_WaremblemLvAttributeDesc() {
  SharedDtor();
}

void E_WaremblemLvAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_WaremblemLvAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_WaremblemLvAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_WaremblemLvAttributeDesc_descriptor_;
}

const E_WaremblemLvAttributeDesc& E_WaremblemLvAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fWaremblem_2eproto();
  return *default_instance_;
}

E_WaremblemLvAttributeDesc* E_WaremblemLvAttributeDesc::default_instance_ = NULL;

E_WaremblemLvAttributeDesc* E_WaremblemLvAttributeDesc::New() const {
  return new E_WaremblemLvAttributeDesc;
}

void E_WaremblemLvAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_WaremblemLvAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_WaremblemLvAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_WaremblemLvAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_WaremblemLvAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_WaremblemLvAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_WaremblemLvAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_WaremblemLvAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_WaremblemLvAttributeDesc::MergeFrom(const E_WaremblemLvAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_WaremblemLvAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_WaremblemLvAttributeDesc::CopyFrom(const E_WaremblemLvAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_WaremblemLvAttributeDesc::IsInitialized() const {

  return true;
}

void E_WaremblemLvAttributeDesc::Swap(E_WaremblemLvAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_WaremblemLvAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_WaremblemLvAttributeDesc_descriptor_;
  metadata.reflection = E_WaremblemLvAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_WaremblemLv::kMIdFieldNumber;
const int E_WaremblemLv::kMIndexFieldNumber;
const int E_WaremblemLv::kMLvFieldNumber;
const int E_WaremblemLv::kMClassbonusFieldNumber;
const int E_WaremblemLv::kMCostidFieldNumber;
const int E_WaremblemLv::kMCostnumFieldNumber;
const int E_WaremblemLv::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_WaremblemLv::E_WaremblemLv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_WaremblemLv::InitAsDefaultInstance() {
}

E_WaremblemLv::E_WaremblemLv(const E_WaremblemLv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_WaremblemLv::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_index_ = 0;
  m_lv_ = 0;
  m_classbonus_ = 0;
  m_costid_ = 0;
  m_costnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_WaremblemLv::~E_WaremblemLv() {
  SharedDtor();
}

void E_WaremblemLv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_WaremblemLv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_WaremblemLv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_WaremblemLv_descriptor_;
}

const E_WaremblemLv& E_WaremblemLv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fWaremblem_2eproto();
  return *default_instance_;
}

E_WaremblemLv* E_WaremblemLv::default_instance_ = NULL;

E_WaremblemLv* E_WaremblemLv::New() const {
  return new E_WaremblemLv;
}

void E_WaremblemLv::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_index_ = 0;
    m_lv_ = 0;
    m_classbonus_ = 0;
    m_costid_ = 0;
    m_costnum_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_WaremblemLv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_index;
        break;
      }

      // optional int32 m_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_index_)));
          set_has_m_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_classbonus;
        break;
      }

      // optional int32 m_classbonus = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_classbonus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_classbonus_)));
          set_has_m_classbonus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_costid;
        break;
      }

      // optional int32 m_costid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costid_)));
          set_has_m_costid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_costnum;
        break;
      }

      // optional int32 m_costnum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costnum_)));
          set_has_m_costnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_WaremblemLvAttributeDesc m_attribute = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_WaremblemLv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_index = 2;
  if (has_m_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_index(), output);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_lv(), output);
  }

  // optional int32 m_classbonus = 4;
  if (has_m_classbonus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_classbonus(), output);
  }

  // optional int32 m_costid = 5;
  if (has_m_costid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_costid(), output);
  }

  // optional int32 m_costnum = 6;
  if (has_m_costnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_costnum(), output);
  }

  // repeated .proto_ff.E_WaremblemLvAttributeDesc m_attribute = 7;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_WaremblemLv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_index = 2;
  if (has_m_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_index(), target);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_lv(), target);
  }

  // optional int32 m_classbonus = 4;
  if (has_m_classbonus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_classbonus(), target);
  }

  // optional int32 m_costid = 5;
  if (has_m_costid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_costid(), target);
  }

  // optional int32 m_costnum = 6;
  if (has_m_costnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_costnum(), target);
  }

  // repeated .proto_ff.E_WaremblemLvAttributeDesc m_attribute = 7;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_WaremblemLv::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_index = 2;
    if (has_m_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_index());
    }

    // optional int32 m_lv = 3;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_classbonus = 4;
    if (has_m_classbonus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_classbonus());
    }

    // optional int32 m_costid = 5;
    if (has_m_costid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costid());
    }

    // optional int32 m_costnum = 6;
    if (has_m_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costnum());
    }

  }
  // repeated .proto_ff.E_WaremblemLvAttributeDesc m_attribute = 7;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_WaremblemLv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_WaremblemLv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_WaremblemLv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_WaremblemLv::MergeFrom(const E_WaremblemLv& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_index()) {
      set_m_index(from.m_index());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_classbonus()) {
      set_m_classbonus(from.m_classbonus());
    }
    if (from.has_m_costid()) {
      set_m_costid(from.m_costid());
    }
    if (from.has_m_costnum()) {
      set_m_costnum(from.m_costnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_WaremblemLv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_WaremblemLv::CopyFrom(const E_WaremblemLv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_WaremblemLv::IsInitialized() const {

  return true;
}

void E_WaremblemLv::Swap(E_WaremblemLv* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_index_, other->m_index_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_classbonus_, other->m_classbonus_);
    std::swap(m_costid_, other->m_costid_);
    std::swap(m_costnum_, other->m_costnum_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_WaremblemLv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_WaremblemLv_descriptor_;
  metadata.reflection = E_WaremblemLv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_WaremblemLv::kEWaremblemLvListFieldNumber;
#endif  // !_MSC_VER

Sheet_WaremblemLv::Sheet_WaremblemLv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_WaremblemLv::InitAsDefaultInstance() {
}

Sheet_WaremblemLv::Sheet_WaremblemLv(const Sheet_WaremblemLv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_WaremblemLv::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_WaremblemLv::~Sheet_WaremblemLv() {
  SharedDtor();
}

void Sheet_WaremblemLv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_WaremblemLv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_WaremblemLv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_WaremblemLv_descriptor_;
}

const Sheet_WaremblemLv& Sheet_WaremblemLv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fWaremblem_2eproto();
  return *default_instance_;
}

Sheet_WaremblemLv* Sheet_WaremblemLv::default_instance_ = NULL;

Sheet_WaremblemLv* Sheet_WaremblemLv::New() const {
  return new Sheet_WaremblemLv;
}

void Sheet_WaremblemLv::Clear() {
  e_waremblemlv_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_WaremblemLv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_WaremblemLv E_WaremblemLv_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_WaremblemLv_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_waremblemlv_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_WaremblemLv_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_WaremblemLv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_WaremblemLv E_WaremblemLv_List = 1;
  for (int i = 0; i < this->e_waremblemlv_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_waremblemlv_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_WaremblemLv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_WaremblemLv E_WaremblemLv_List = 1;
  for (int i = 0; i < this->e_waremblemlv_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_waremblemlv_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_WaremblemLv::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_WaremblemLv E_WaremblemLv_List = 1;
  total_size += 1 * this->e_waremblemlv_list_size();
  for (int i = 0; i < this->e_waremblemlv_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_waremblemlv_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_WaremblemLv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_WaremblemLv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_WaremblemLv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_WaremblemLv::MergeFrom(const Sheet_WaremblemLv& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_waremblemlv_list_.MergeFrom(from.e_waremblemlv_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_WaremblemLv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_WaremblemLv::CopyFrom(const Sheet_WaremblemLv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_WaremblemLv::IsInitialized() const {

  return true;
}

void Sheet_WaremblemLv::Swap(Sheet_WaremblemLv* other) {
  if (other != this) {
    e_waremblemlv_list_.Swap(&other->e_waremblemlv_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_WaremblemLv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_WaremblemLv_descriptor_;
  metadata.reflection = Sheet_WaremblemLv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_WaremblemStarAttributeDesc::kMValueFieldNumber;
const int E_WaremblemStarAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_WaremblemStarAttributeDesc::E_WaremblemStarAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_WaremblemStarAttributeDesc::InitAsDefaultInstance() {
}

E_WaremblemStarAttributeDesc::E_WaremblemStarAttributeDesc(const E_WaremblemStarAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_WaremblemStarAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_WaremblemStarAttributeDesc::~E_WaremblemStarAttributeDesc() {
  SharedDtor();
}

void E_WaremblemStarAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_WaremblemStarAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_WaremblemStarAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_WaremblemStarAttributeDesc_descriptor_;
}

const E_WaremblemStarAttributeDesc& E_WaremblemStarAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fWaremblem_2eproto();
  return *default_instance_;
}

E_WaremblemStarAttributeDesc* E_WaremblemStarAttributeDesc::default_instance_ = NULL;

E_WaremblemStarAttributeDesc* E_WaremblemStarAttributeDesc::New() const {
  return new E_WaremblemStarAttributeDesc;
}

void E_WaremblemStarAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_WaremblemStarAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_WaremblemStarAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_WaremblemStarAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_WaremblemStarAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_WaremblemStarAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_WaremblemStarAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_WaremblemStarAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_WaremblemStarAttributeDesc::MergeFrom(const E_WaremblemStarAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_WaremblemStarAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_WaremblemStarAttributeDesc::CopyFrom(const E_WaremblemStarAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_WaremblemStarAttributeDesc::IsInitialized() const {

  return true;
}

void E_WaremblemStarAttributeDesc::Swap(E_WaremblemStarAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_WaremblemStarAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_WaremblemStarAttributeDesc_descriptor_;
  metadata.reflection = E_WaremblemStarAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_WaremblemStar::kMIdFieldNumber;
const int E_WaremblemStar::kMIndexFieldNumber;
const int E_WaremblemStar::kMStarFieldNumber;
const int E_WaremblemStar::kMCostidFieldNumber;
const int E_WaremblemStar::kMCostnumFieldNumber;
const int E_WaremblemStar::kMSuccesFieldNumber;
const int E_WaremblemStar::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_WaremblemStar::E_WaremblemStar()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_WaremblemStar::InitAsDefaultInstance() {
}

E_WaremblemStar::E_WaremblemStar(const E_WaremblemStar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_WaremblemStar::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_index_ = 0;
  m_star_ = 0;
  m_costid_ = 0;
  m_costnum_ = 0;
  m_succes_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_WaremblemStar::~E_WaremblemStar() {
  SharedDtor();
}

void E_WaremblemStar::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_WaremblemStar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_WaremblemStar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_WaremblemStar_descriptor_;
}

const E_WaremblemStar& E_WaremblemStar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fWaremblem_2eproto();
  return *default_instance_;
}

E_WaremblemStar* E_WaremblemStar::default_instance_ = NULL;

E_WaremblemStar* E_WaremblemStar::New() const {
  return new E_WaremblemStar;
}

void E_WaremblemStar::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_index_ = 0;
    m_star_ = 0;
    m_costid_ = 0;
    m_costnum_ = 0;
    m_succes_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_WaremblemStar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_index;
        break;
      }

      // optional int32 m_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_index_)));
          set_has_m_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_costid;
        break;
      }

      // optional int32 m_costid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costid_)));
          set_has_m_costid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_costnum;
        break;
      }

      // optional int32 m_costnum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costnum_)));
          set_has_m_costnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_succes;
        break;
      }

      // optional int32 m_succes = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_succes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_succes_)));
          set_has_m_succes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_WaremblemStarAttributeDesc m_attribute = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_WaremblemStar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_index = 2;
  if (has_m_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_index(), output);
  }

  // optional int32 m_star = 3;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_star(), output);
  }

  // optional int32 m_costid = 4;
  if (has_m_costid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_costid(), output);
  }

  // optional int32 m_costnum = 5;
  if (has_m_costnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_costnum(), output);
  }

  // optional int32 m_succes = 6;
  if (has_m_succes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_succes(), output);
  }

  // repeated .proto_ff.E_WaremblemStarAttributeDesc m_attribute = 7;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_WaremblemStar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_index = 2;
  if (has_m_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_index(), target);
  }

  // optional int32 m_star = 3;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_star(), target);
  }

  // optional int32 m_costid = 4;
  if (has_m_costid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_costid(), target);
  }

  // optional int32 m_costnum = 5;
  if (has_m_costnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_costnum(), target);
  }

  // optional int32 m_succes = 6;
  if (has_m_succes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_succes(), target);
  }

  // repeated .proto_ff.E_WaremblemStarAttributeDesc m_attribute = 7;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_WaremblemStar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_index = 2;
    if (has_m_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_index());
    }

    // optional int32 m_star = 3;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_costid = 4;
    if (has_m_costid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costid());
    }

    // optional int32 m_costnum = 5;
    if (has_m_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costnum());
    }

    // optional int32 m_succes = 6;
    if (has_m_succes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_succes());
    }

  }
  // repeated .proto_ff.E_WaremblemStarAttributeDesc m_attribute = 7;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_WaremblemStar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_WaremblemStar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_WaremblemStar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_WaremblemStar::MergeFrom(const E_WaremblemStar& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_index()) {
      set_m_index(from.m_index());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_costid()) {
      set_m_costid(from.m_costid());
    }
    if (from.has_m_costnum()) {
      set_m_costnum(from.m_costnum());
    }
    if (from.has_m_succes()) {
      set_m_succes(from.m_succes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_WaremblemStar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_WaremblemStar::CopyFrom(const E_WaremblemStar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_WaremblemStar::IsInitialized() const {

  return true;
}

void E_WaremblemStar::Swap(E_WaremblemStar* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_index_, other->m_index_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_costid_, other->m_costid_);
    std::swap(m_costnum_, other->m_costnum_);
    std::swap(m_succes_, other->m_succes_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_WaremblemStar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_WaremblemStar_descriptor_;
  metadata.reflection = E_WaremblemStar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_WaremblemStar::kEWaremblemStarListFieldNumber;
#endif  // !_MSC_VER

Sheet_WaremblemStar::Sheet_WaremblemStar()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_WaremblemStar::InitAsDefaultInstance() {
}

Sheet_WaremblemStar::Sheet_WaremblemStar(const Sheet_WaremblemStar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_WaremblemStar::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_WaremblemStar::~Sheet_WaremblemStar() {
  SharedDtor();
}

void Sheet_WaremblemStar::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_WaremblemStar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_WaremblemStar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_WaremblemStar_descriptor_;
}

const Sheet_WaremblemStar& Sheet_WaremblemStar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fWaremblem_2eproto();
  return *default_instance_;
}

Sheet_WaremblemStar* Sheet_WaremblemStar::default_instance_ = NULL;

Sheet_WaremblemStar* Sheet_WaremblemStar::New() const {
  return new Sheet_WaremblemStar;
}

void Sheet_WaremblemStar::Clear() {
  e_waremblemstar_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_WaremblemStar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_WaremblemStar E_WaremblemStar_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_WaremblemStar_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_waremblemstar_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_WaremblemStar_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_WaremblemStar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_WaremblemStar E_WaremblemStar_List = 1;
  for (int i = 0; i < this->e_waremblemstar_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_waremblemstar_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_WaremblemStar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_WaremblemStar E_WaremblemStar_List = 1;
  for (int i = 0; i < this->e_waremblemstar_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_waremblemstar_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_WaremblemStar::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_WaremblemStar E_WaremblemStar_List = 1;
  total_size += 1 * this->e_waremblemstar_list_size();
  for (int i = 0; i < this->e_waremblemstar_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_waremblemstar_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_WaremblemStar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_WaremblemStar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_WaremblemStar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_WaremblemStar::MergeFrom(const Sheet_WaremblemStar& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_waremblemstar_list_.MergeFrom(from.e_waremblemstar_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_WaremblemStar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_WaremblemStar::CopyFrom(const Sheet_WaremblemStar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_WaremblemStar::IsInitialized() const {

  return true;
}

void Sheet_WaremblemStar::Swap(Sheet_WaremblemStar* other) {
  if (other != this) {
    e_waremblemstar_list_.Swap(&other->e_waremblemstar_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_WaremblemStar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_WaremblemStar_descriptor_;
  metadata.reflection = Sheet_WaremblemStar_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
