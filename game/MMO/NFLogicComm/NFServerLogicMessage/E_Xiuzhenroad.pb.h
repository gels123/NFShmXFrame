// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Xiuzhenroad.proto

#ifndef PROTOBUF_E_5fXiuzhenroad_2eproto__INCLUDED
#define PROTOBUF_E_5fXiuzhenroad_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fXiuzhenroad_2eproto();
void protobuf_AssignDesc_E_5fXiuzhenroad_2eproto();
void protobuf_ShutdownFile_E_5fXiuzhenroad_2eproto();

class E_XiuzhenroadTask;
class Sheet_XiuzhenroadTask;
class E_XiuzhenroadBonuspointsTotalitemsDesc;
class E_XiuzhenroadBonuspoints;
class Sheet_XiuzhenroadBonuspoints;
class E_XiuzhenroadSkill;
class Sheet_XiuzhenroadSkill;
class E_XiuzhenroadClassify;
class Sheet_XiuzhenroadClassify;

// ===================================================================

class E_XiuzhenroadTask : public ::google::protobuf::Message {
 public:
  E_XiuzhenroadTask();
  virtual ~E_XiuzhenroadTask();

  E_XiuzhenroadTask(const E_XiuzhenroadTask& from);

  inline E_XiuzhenroadTask& operator=(const E_XiuzhenroadTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XiuzhenroadTask& default_instance();

  void Swap(E_XiuzhenroadTask* other);

  // implements Message ----------------------------------------------

  E_XiuzhenroadTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XiuzhenroadTask& from);
  void MergeFrom(const E_XiuzhenroadTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_taskId = 1;
  inline bool has_m_taskid() const;
  inline void clear_m_taskid();
  static const int kMTaskIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_taskid() const;
  inline void set_m_taskid(::google::protobuf::int64 value);

  // optional int32 m_taskType = 2;
  inline bool has_m_tasktype() const;
  inline void clear_m_tasktype();
  static const int kMTaskTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_tasktype() const;
  inline void set_m_tasktype(::google::protobuf::int32 value);

  // optional int32 m_eventType = 3;
  inline bool has_m_eventtype() const;
  inline void clear_m_eventtype();
  static const int kMEventTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_eventtype() const;
  inline void set_m_eventtype(::google::protobuf::int32 value);

  // optional int32 m_reachPrice = 4;
  inline bool has_m_reachprice() const;
  inline void clear_m_reachprice();
  static const int kMReachPriceFieldNumber = 4;
  inline ::google::protobuf::int32 m_reachprice() const;
  inline void set_m_reachprice(::google::protobuf::int32 value);

  // optional int32 m_reward = 5;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 5;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // optional int32 m_reward_Value = 6;
  inline bool has_m_reward_value() const;
  inline void clear_m_reward_value();
  static const int kMRewardValueFieldNumber = 6;
  inline ::google::protobuf::int32 m_reward_value() const;
  inline void set_m_reward_value(::google::protobuf::int32 value);

  // optional int32 m_boxID = 7;
  inline bool has_m_boxid() const;
  inline void clear_m_boxid();
  static const int kMBoxIDFieldNumber = 7;
  inline ::google::protobuf::int32 m_boxid() const;
  inline void set_m_boxid(::google::protobuf::int32 value);

  // optional int32 m_integral = 8;
  inline bool has_m_integral() const;
  inline void clear_m_integral();
  static const int kMIntegralFieldNumber = 8;
  inline ::google::protobuf::int32 m_integral() const;
  inline void set_m_integral(::google::protobuf::int32 value);

  // optional int32 m_linkid = 9;
  inline bool has_m_linkid() const;
  inline void clear_m_linkid();
  static const int kMLinkidFieldNumber = 9;
  inline ::google::protobuf::int32 m_linkid() const;
  inline void set_m_linkid(::google::protobuf::int32 value);

  // repeated int32 m_param = 10;
  inline int m_param_size() const;
  inline void clear_m_param();
  static const int kMParamFieldNumber = 10;
  inline ::google::protobuf::int32 m_param(int index) const;
  inline void set_m_param(int index, ::google::protobuf::int32 value);
  inline void add_m_param(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_param();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XiuzhenroadTask)
 private:
  inline void set_has_m_taskid();
  inline void clear_has_m_taskid();
  inline void set_has_m_tasktype();
  inline void clear_has_m_tasktype();
  inline void set_has_m_eventtype();
  inline void clear_has_m_eventtype();
  inline void set_has_m_reachprice();
  inline void clear_has_m_reachprice();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();
  inline void set_has_m_reward_value();
  inline void clear_has_m_reward_value();
  inline void set_has_m_boxid();
  inline void clear_has_m_boxid();
  inline void set_has_m_integral();
  inline void clear_has_m_integral();
  inline void set_has_m_linkid();
  inline void clear_has_m_linkid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_taskid_;
  ::google::protobuf::int32 m_tasktype_;
  ::google::protobuf::int32 m_eventtype_;
  ::google::protobuf::int32 m_reachprice_;
  ::google::protobuf::int32 m_reward_;
  ::google::protobuf::int32 m_reward_value_;
  ::google::protobuf::int32 m_boxid_;
  ::google::protobuf::int32 m_integral_;
  ::google::protobuf::int32 m_linkid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenroad_2eproto();

  void InitAsDefaultInstance();
  static E_XiuzhenroadTask* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XiuzhenroadTask : public ::google::protobuf::Message {
 public:
  Sheet_XiuzhenroadTask();
  virtual ~Sheet_XiuzhenroadTask();

  Sheet_XiuzhenroadTask(const Sheet_XiuzhenroadTask& from);

  inline Sheet_XiuzhenroadTask& operator=(const Sheet_XiuzhenroadTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XiuzhenroadTask& default_instance();

  void Swap(Sheet_XiuzhenroadTask* other);

  // implements Message ----------------------------------------------

  Sheet_XiuzhenroadTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XiuzhenroadTask& from);
  void MergeFrom(const Sheet_XiuzhenroadTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XiuzhenroadTask E_XiuzhenroadTask_List = 1;
  inline int e_xiuzhenroadtask_list_size() const;
  inline void clear_e_xiuzhenroadtask_list();
  static const int kEXiuzhenroadTaskListFieldNumber = 1;
  inline const ::proto_ff::E_XiuzhenroadTask& e_xiuzhenroadtask_list(int index) const;
  inline ::proto_ff::E_XiuzhenroadTask* mutable_e_xiuzhenroadtask_list(int index);
  inline ::proto_ff::E_XiuzhenroadTask* add_e_xiuzhenroadtask_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadTask >&
      e_xiuzhenroadtask_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadTask >*
      mutable_e_xiuzhenroadtask_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XiuzhenroadTask)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadTask > e_xiuzhenroadtask_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenroad_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XiuzhenroadTask* default_instance_;
};
// -------------------------------------------------------------------

class E_XiuzhenroadBonuspointsTotalitemsDesc : public ::google::protobuf::Message {
 public:
  E_XiuzhenroadBonuspointsTotalitemsDesc();
  virtual ~E_XiuzhenroadBonuspointsTotalitemsDesc();

  E_XiuzhenroadBonuspointsTotalitemsDesc(const E_XiuzhenroadBonuspointsTotalitemsDesc& from);

  inline E_XiuzhenroadBonuspointsTotalitemsDesc& operator=(const E_XiuzhenroadBonuspointsTotalitemsDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XiuzhenroadBonuspointsTotalitemsDesc& default_instance();

  void Swap(E_XiuzhenroadBonuspointsTotalitemsDesc* other);

  // implements Message ----------------------------------------------

  E_XiuzhenroadBonuspointsTotalitemsDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XiuzhenroadBonuspointsTotalitemsDesc& from);
  void MergeFrom(const E_XiuzhenroadBonuspointsTotalitemsDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_Value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_ID = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XiuzhenroadBonuspointsTotalitemsDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenroad_2eproto();

  void InitAsDefaultInstance();
  static E_XiuzhenroadBonuspointsTotalitemsDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XiuzhenroadBonuspoints : public ::google::protobuf::Message {
 public:
  E_XiuzhenroadBonuspoints();
  virtual ~E_XiuzhenroadBonuspoints();

  E_XiuzhenroadBonuspoints(const E_XiuzhenroadBonuspoints& from);

  inline E_XiuzhenroadBonuspoints& operator=(const E_XiuzhenroadBonuspoints& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XiuzhenroadBonuspoints& default_instance();

  void Swap(E_XiuzhenroadBonuspoints* other);

  // implements Message ----------------------------------------------

  E_XiuzhenroadBonuspoints* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XiuzhenroadBonuspoints& from);
  void MergeFrom(const E_XiuzhenroadBonuspoints& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_totalRewardsID = 1;
  inline bool has_m_totalrewardsid() const;
  inline void clear_m_totalrewardsid();
  static const int kMTotalRewardsIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_totalrewardsid() const;
  inline void set_m_totalrewardsid(::google::protobuf::int32 value);

  // optional int32 m_achievedPoints = 2;
  inline bool has_m_achievedpoints() const;
  inline void clear_m_achievedpoints();
  static const int kMAchievedPointsFieldNumber = 2;
  inline ::google::protobuf::int32 m_achievedpoints() const;
  inline void set_m_achievedpoints(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XiuzhenroadBonuspointsTotalitemsDesc m_totalItems = 3;
  inline int m_totalitems_size() const;
  inline void clear_m_totalitems();
  static const int kMTotalItemsFieldNumber = 3;
  inline const ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc& m_totalitems(int index) const;
  inline ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc* mutable_m_totalitems(int index);
  inline ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc* add_m_totalitems();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc >&
      m_totalitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc >*
      mutable_m_totalitems();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XiuzhenroadBonuspoints)
 private:
  inline void set_has_m_totalrewardsid();
  inline void clear_has_m_totalrewardsid();
  inline void set_has_m_achievedpoints();
  inline void clear_has_m_achievedpoints();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_totalrewardsid_;
  ::google::protobuf::int32 m_achievedpoints_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc > m_totalitems_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenroad_2eproto();

  void InitAsDefaultInstance();
  static E_XiuzhenroadBonuspoints* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XiuzhenroadBonuspoints : public ::google::protobuf::Message {
 public:
  Sheet_XiuzhenroadBonuspoints();
  virtual ~Sheet_XiuzhenroadBonuspoints();

  Sheet_XiuzhenroadBonuspoints(const Sheet_XiuzhenroadBonuspoints& from);

  inline Sheet_XiuzhenroadBonuspoints& operator=(const Sheet_XiuzhenroadBonuspoints& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XiuzhenroadBonuspoints& default_instance();

  void Swap(Sheet_XiuzhenroadBonuspoints* other);

  // implements Message ----------------------------------------------

  Sheet_XiuzhenroadBonuspoints* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XiuzhenroadBonuspoints& from);
  void MergeFrom(const Sheet_XiuzhenroadBonuspoints& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XiuzhenroadBonuspoints E_XiuzhenroadBonuspoints_List = 1;
  inline int e_xiuzhenroadbonuspoints_list_size() const;
  inline void clear_e_xiuzhenroadbonuspoints_list();
  static const int kEXiuzhenroadBonuspointsListFieldNumber = 1;
  inline const ::proto_ff::E_XiuzhenroadBonuspoints& e_xiuzhenroadbonuspoints_list(int index) const;
  inline ::proto_ff::E_XiuzhenroadBonuspoints* mutable_e_xiuzhenroadbonuspoints_list(int index);
  inline ::proto_ff::E_XiuzhenroadBonuspoints* add_e_xiuzhenroadbonuspoints_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadBonuspoints >&
      e_xiuzhenroadbonuspoints_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadBonuspoints >*
      mutable_e_xiuzhenroadbonuspoints_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XiuzhenroadBonuspoints)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadBonuspoints > e_xiuzhenroadbonuspoints_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenroad_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XiuzhenroadBonuspoints* default_instance_;
};
// -------------------------------------------------------------------

class E_XiuzhenroadSkill : public ::google::protobuf::Message {
 public:
  E_XiuzhenroadSkill();
  virtual ~E_XiuzhenroadSkill();

  E_XiuzhenroadSkill(const E_XiuzhenroadSkill& from);

  inline E_XiuzhenroadSkill& operator=(const E_XiuzhenroadSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XiuzhenroadSkill& default_instance();

  void Swap(E_XiuzhenroadSkill* other);

  // implements Message ----------------------------------------------

  E_XiuzhenroadSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XiuzhenroadSkill& from);
  void MergeFrom(const E_XiuzhenroadSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_activitySkills = 1;
  inline bool has_m_activityskills() const;
  inline void clear_m_activityskills();
  static const int kMActivitySkillsFieldNumber = 1;
  inline ::google::protobuf::int32 m_activityskills() const;
  inline void set_m_activityskills(::google::protobuf::int32 value);

  // optional int32 m_skillID = 2;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_skillid() const;
  inline void set_m_skillid(::google::protobuf::int32 value);

  // optional int32 m_itenmID = 3;
  inline bool has_m_itenmid() const;
  inline void clear_m_itenmid();
  static const int kMItenmIDFieldNumber = 3;
  inline ::google::protobuf::int32 m_itenmid() const;
  inline void set_m_itenmid(::google::protobuf::int32 value);

  // optional int32 m_attribute = 4;
  inline bool has_m_attribute() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 4;
  inline ::google::protobuf::int32 m_attribute() const;
  inline void set_m_attribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XiuzhenroadSkill)
 private:
  inline void set_has_m_activityskills();
  inline void clear_has_m_activityskills();
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();
  inline void set_has_m_itenmid();
  inline void clear_has_m_itenmid();
  inline void set_has_m_attribute();
  inline void clear_has_m_attribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_activityskills_;
  ::google::protobuf::int32 m_skillid_;
  ::google::protobuf::int32 m_itenmid_;
  ::google::protobuf::int32 m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenroad_2eproto();

  void InitAsDefaultInstance();
  static E_XiuzhenroadSkill* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XiuzhenroadSkill : public ::google::protobuf::Message {
 public:
  Sheet_XiuzhenroadSkill();
  virtual ~Sheet_XiuzhenroadSkill();

  Sheet_XiuzhenroadSkill(const Sheet_XiuzhenroadSkill& from);

  inline Sheet_XiuzhenroadSkill& operator=(const Sheet_XiuzhenroadSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XiuzhenroadSkill& default_instance();

  void Swap(Sheet_XiuzhenroadSkill* other);

  // implements Message ----------------------------------------------

  Sheet_XiuzhenroadSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XiuzhenroadSkill& from);
  void MergeFrom(const Sheet_XiuzhenroadSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XiuzhenroadSkill E_XiuzhenroadSkill_List = 1;
  inline int e_xiuzhenroadskill_list_size() const;
  inline void clear_e_xiuzhenroadskill_list();
  static const int kEXiuzhenroadSkillListFieldNumber = 1;
  inline const ::proto_ff::E_XiuzhenroadSkill& e_xiuzhenroadskill_list(int index) const;
  inline ::proto_ff::E_XiuzhenroadSkill* mutable_e_xiuzhenroadskill_list(int index);
  inline ::proto_ff::E_XiuzhenroadSkill* add_e_xiuzhenroadskill_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadSkill >&
      e_xiuzhenroadskill_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadSkill >*
      mutable_e_xiuzhenroadskill_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XiuzhenroadSkill)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadSkill > e_xiuzhenroadskill_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenroad_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XiuzhenroadSkill* default_instance_;
};
// -------------------------------------------------------------------

class E_XiuzhenroadClassify : public ::google::protobuf::Message {
 public:
  E_XiuzhenroadClassify();
  virtual ~E_XiuzhenroadClassify();

  E_XiuzhenroadClassify(const E_XiuzhenroadClassify& from);

  inline E_XiuzhenroadClassify& operator=(const E_XiuzhenroadClassify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XiuzhenroadClassify& default_instance();

  void Swap(E_XiuzhenroadClassify* other);

  // implements Message ----------------------------------------------

  E_XiuzhenroadClassify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XiuzhenroadClassify& from);
  void MergeFrom(const E_XiuzhenroadClassify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_typeID = 1;
  inline bool has_m_typeid() const;
  inline void clear_m_typeid();
  static const int kMTypeIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_typeid() const;
  inline void set_m_typeid(::google::protobuf::int32 value);

  // optional string m_gift = 2;
  inline bool has_m_gift() const;
  inline void clear_m_gift();
  static const int kMGiftFieldNumber = 2;
  inline const ::std::string& m_gift() const;
  inline void set_m_gift(const ::std::string& value);
  inline void set_m_gift(const char* value);
  inline void set_m_gift(const char* value, size_t size);
  inline ::std::string* mutable_m_gift();
  inline ::std::string* release_m_gift();
  inline void set_allocated_m_gift(::std::string* m_gift);

  // optional int32 m_giftID = 3;
  inline bool has_m_giftid() const;
  inline void clear_m_giftid();
  static const int kMGiftIDFieldNumber = 3;
  inline ::google::protobuf::int32 m_giftid() const;
  inline void set_m_giftid(::google::protobuf::int32 value);

  // optional int32 m_rechargeID = 4;
  inline bool has_m_rechargeid() const;
  inline void clear_m_rechargeid();
  static const int kMRechargeIDFieldNumber = 4;
  inline ::google::protobuf::int32 m_rechargeid() const;
  inline void set_m_rechargeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XiuzhenroadClassify)
 private:
  inline void set_has_m_typeid();
  inline void clear_has_m_typeid();
  inline void set_has_m_gift();
  inline void clear_has_m_gift();
  inline void set_has_m_giftid();
  inline void clear_has_m_giftid();
  inline void set_has_m_rechargeid();
  inline void clear_has_m_rechargeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_gift_;
  ::google::protobuf::int32 m_typeid_;
  ::google::protobuf::int32 m_giftid_;
  ::google::protobuf::int32 m_rechargeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenroad_2eproto();

  void InitAsDefaultInstance();
  static E_XiuzhenroadClassify* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XiuzhenroadClassify : public ::google::protobuf::Message {
 public:
  Sheet_XiuzhenroadClassify();
  virtual ~Sheet_XiuzhenroadClassify();

  Sheet_XiuzhenroadClassify(const Sheet_XiuzhenroadClassify& from);

  inline Sheet_XiuzhenroadClassify& operator=(const Sheet_XiuzhenroadClassify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XiuzhenroadClassify& default_instance();

  void Swap(Sheet_XiuzhenroadClassify* other);

  // implements Message ----------------------------------------------

  Sheet_XiuzhenroadClassify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XiuzhenroadClassify& from);
  void MergeFrom(const Sheet_XiuzhenroadClassify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XiuzhenroadClassify E_XiuzhenroadClassify_List = 1;
  inline int e_xiuzhenroadclassify_list_size() const;
  inline void clear_e_xiuzhenroadclassify_list();
  static const int kEXiuzhenroadClassifyListFieldNumber = 1;
  inline const ::proto_ff::E_XiuzhenroadClassify& e_xiuzhenroadclassify_list(int index) const;
  inline ::proto_ff::E_XiuzhenroadClassify* mutable_e_xiuzhenroadclassify_list(int index);
  inline ::proto_ff::E_XiuzhenroadClassify* add_e_xiuzhenroadclassify_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadClassify >&
      e_xiuzhenroadclassify_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadClassify >*
      mutable_e_xiuzhenroadclassify_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XiuzhenroadClassify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadClassify > e_xiuzhenroadclassify_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_AssignDesc_E_5fXiuzhenroad_2eproto();
  friend void protobuf_ShutdownFile_E_5fXiuzhenroad_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XiuzhenroadClassify* default_instance_;
};
// ===================================================================


// ===================================================================

// E_XiuzhenroadTask

// optional int64 m_taskId = 1;
inline bool E_XiuzhenroadTask::has_m_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XiuzhenroadTask::set_has_m_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XiuzhenroadTask::clear_has_m_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XiuzhenroadTask::clear_m_taskid() {
  m_taskid_ = GOOGLE_LONGLONG(0);
  clear_has_m_taskid();
}
inline ::google::protobuf::int64 E_XiuzhenroadTask::m_taskid() const {
  return m_taskid_;
}
inline void E_XiuzhenroadTask::set_m_taskid(::google::protobuf::int64 value) {
  set_has_m_taskid();
  m_taskid_ = value;
}

// optional int32 m_taskType = 2;
inline bool E_XiuzhenroadTask::has_m_tasktype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XiuzhenroadTask::set_has_m_tasktype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XiuzhenroadTask::clear_has_m_tasktype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XiuzhenroadTask::clear_m_tasktype() {
  m_tasktype_ = 0;
  clear_has_m_tasktype();
}
inline ::google::protobuf::int32 E_XiuzhenroadTask::m_tasktype() const {
  return m_tasktype_;
}
inline void E_XiuzhenroadTask::set_m_tasktype(::google::protobuf::int32 value) {
  set_has_m_tasktype();
  m_tasktype_ = value;
}

// optional int32 m_eventType = 3;
inline bool E_XiuzhenroadTask::has_m_eventtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XiuzhenroadTask::set_has_m_eventtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XiuzhenroadTask::clear_has_m_eventtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XiuzhenroadTask::clear_m_eventtype() {
  m_eventtype_ = 0;
  clear_has_m_eventtype();
}
inline ::google::protobuf::int32 E_XiuzhenroadTask::m_eventtype() const {
  return m_eventtype_;
}
inline void E_XiuzhenroadTask::set_m_eventtype(::google::protobuf::int32 value) {
  set_has_m_eventtype();
  m_eventtype_ = value;
}

// optional int32 m_reachPrice = 4;
inline bool E_XiuzhenroadTask::has_m_reachprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XiuzhenroadTask::set_has_m_reachprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XiuzhenroadTask::clear_has_m_reachprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XiuzhenroadTask::clear_m_reachprice() {
  m_reachprice_ = 0;
  clear_has_m_reachprice();
}
inline ::google::protobuf::int32 E_XiuzhenroadTask::m_reachprice() const {
  return m_reachprice_;
}
inline void E_XiuzhenroadTask::set_m_reachprice(::google::protobuf::int32 value) {
  set_has_m_reachprice();
  m_reachprice_ = value;
}

// optional int32 m_reward = 5;
inline bool E_XiuzhenroadTask::has_m_reward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XiuzhenroadTask::set_has_m_reward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XiuzhenroadTask::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XiuzhenroadTask::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_XiuzhenroadTask::m_reward() const {
  return m_reward_;
}
inline void E_XiuzhenroadTask::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// optional int32 m_reward_Value = 6;
inline bool E_XiuzhenroadTask::has_m_reward_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_XiuzhenroadTask::set_has_m_reward_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_XiuzhenroadTask::clear_has_m_reward_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_XiuzhenroadTask::clear_m_reward_value() {
  m_reward_value_ = 0;
  clear_has_m_reward_value();
}
inline ::google::protobuf::int32 E_XiuzhenroadTask::m_reward_value() const {
  return m_reward_value_;
}
inline void E_XiuzhenroadTask::set_m_reward_value(::google::protobuf::int32 value) {
  set_has_m_reward_value();
  m_reward_value_ = value;
}

// optional int32 m_boxID = 7;
inline bool E_XiuzhenroadTask::has_m_boxid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_XiuzhenroadTask::set_has_m_boxid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_XiuzhenroadTask::clear_has_m_boxid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_XiuzhenroadTask::clear_m_boxid() {
  m_boxid_ = 0;
  clear_has_m_boxid();
}
inline ::google::protobuf::int32 E_XiuzhenroadTask::m_boxid() const {
  return m_boxid_;
}
inline void E_XiuzhenroadTask::set_m_boxid(::google::protobuf::int32 value) {
  set_has_m_boxid();
  m_boxid_ = value;
}

// optional int32 m_integral = 8;
inline bool E_XiuzhenroadTask::has_m_integral() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_XiuzhenroadTask::set_has_m_integral() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_XiuzhenroadTask::clear_has_m_integral() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_XiuzhenroadTask::clear_m_integral() {
  m_integral_ = 0;
  clear_has_m_integral();
}
inline ::google::protobuf::int32 E_XiuzhenroadTask::m_integral() const {
  return m_integral_;
}
inline void E_XiuzhenroadTask::set_m_integral(::google::protobuf::int32 value) {
  set_has_m_integral();
  m_integral_ = value;
}

// optional int32 m_linkid = 9;
inline bool E_XiuzhenroadTask::has_m_linkid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_XiuzhenroadTask::set_has_m_linkid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_XiuzhenroadTask::clear_has_m_linkid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_XiuzhenroadTask::clear_m_linkid() {
  m_linkid_ = 0;
  clear_has_m_linkid();
}
inline ::google::protobuf::int32 E_XiuzhenroadTask::m_linkid() const {
  return m_linkid_;
}
inline void E_XiuzhenroadTask::set_m_linkid(::google::protobuf::int32 value) {
  set_has_m_linkid();
  m_linkid_ = value;
}

// repeated int32 m_param = 10;
inline int E_XiuzhenroadTask::m_param_size() const {
  return m_param_.size();
}
inline void E_XiuzhenroadTask::clear_m_param() {
  m_param_.Clear();
}
inline ::google::protobuf::int32 E_XiuzhenroadTask::m_param(int index) const {
  return m_param_.Get(index);
}
inline void E_XiuzhenroadTask::set_m_param(int index, ::google::protobuf::int32 value) {
  m_param_.Set(index, value);
}
inline void E_XiuzhenroadTask::add_m_param(::google::protobuf::int32 value) {
  m_param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_XiuzhenroadTask::m_param() const {
  return m_param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_XiuzhenroadTask::mutable_m_param() {
  return &m_param_;
}

// -------------------------------------------------------------------

// Sheet_XiuzhenroadTask

// repeated .proto_ff.E_XiuzhenroadTask E_XiuzhenroadTask_List = 1;
inline int Sheet_XiuzhenroadTask::e_xiuzhenroadtask_list_size() const {
  return e_xiuzhenroadtask_list_.size();
}
inline void Sheet_XiuzhenroadTask::clear_e_xiuzhenroadtask_list() {
  e_xiuzhenroadtask_list_.Clear();
}
inline const ::proto_ff::E_XiuzhenroadTask& Sheet_XiuzhenroadTask::e_xiuzhenroadtask_list(int index) const {
  return e_xiuzhenroadtask_list_.Get(index);
}
inline ::proto_ff::E_XiuzhenroadTask* Sheet_XiuzhenroadTask::mutable_e_xiuzhenroadtask_list(int index) {
  return e_xiuzhenroadtask_list_.Mutable(index);
}
inline ::proto_ff::E_XiuzhenroadTask* Sheet_XiuzhenroadTask::add_e_xiuzhenroadtask_list() {
  return e_xiuzhenroadtask_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadTask >&
Sheet_XiuzhenroadTask::e_xiuzhenroadtask_list() const {
  return e_xiuzhenroadtask_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadTask >*
Sheet_XiuzhenroadTask::mutable_e_xiuzhenroadtask_list() {
  return &e_xiuzhenroadtask_list_;
}

// -------------------------------------------------------------------

// E_XiuzhenroadBonuspointsTotalitemsDesc

// optional int32 m_Value = 1;
inline bool E_XiuzhenroadBonuspointsTotalitemsDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XiuzhenroadBonuspointsTotalitemsDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XiuzhenroadBonuspointsTotalitemsDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XiuzhenroadBonuspointsTotalitemsDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_XiuzhenroadBonuspointsTotalitemsDesc::m_value() const {
  return m_value_;
}
inline void E_XiuzhenroadBonuspointsTotalitemsDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_ID = 2;
inline bool E_XiuzhenroadBonuspointsTotalitemsDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XiuzhenroadBonuspointsTotalitemsDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XiuzhenroadBonuspointsTotalitemsDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XiuzhenroadBonuspointsTotalitemsDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XiuzhenroadBonuspointsTotalitemsDesc::m_id() const {
  return m_id_;
}
inline void E_XiuzhenroadBonuspointsTotalitemsDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_XiuzhenroadBonuspoints

// optional int32 m_totalRewardsID = 1;
inline bool E_XiuzhenroadBonuspoints::has_m_totalrewardsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XiuzhenroadBonuspoints::set_has_m_totalrewardsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XiuzhenroadBonuspoints::clear_has_m_totalrewardsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XiuzhenroadBonuspoints::clear_m_totalrewardsid() {
  m_totalrewardsid_ = 0;
  clear_has_m_totalrewardsid();
}
inline ::google::protobuf::int32 E_XiuzhenroadBonuspoints::m_totalrewardsid() const {
  return m_totalrewardsid_;
}
inline void E_XiuzhenroadBonuspoints::set_m_totalrewardsid(::google::protobuf::int32 value) {
  set_has_m_totalrewardsid();
  m_totalrewardsid_ = value;
}

// optional int32 m_achievedPoints = 2;
inline bool E_XiuzhenroadBonuspoints::has_m_achievedpoints() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XiuzhenroadBonuspoints::set_has_m_achievedpoints() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XiuzhenroadBonuspoints::clear_has_m_achievedpoints() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XiuzhenroadBonuspoints::clear_m_achievedpoints() {
  m_achievedpoints_ = 0;
  clear_has_m_achievedpoints();
}
inline ::google::protobuf::int32 E_XiuzhenroadBonuspoints::m_achievedpoints() const {
  return m_achievedpoints_;
}
inline void E_XiuzhenroadBonuspoints::set_m_achievedpoints(::google::protobuf::int32 value) {
  set_has_m_achievedpoints();
  m_achievedpoints_ = value;
}

// repeated .proto_ff.E_XiuzhenroadBonuspointsTotalitemsDesc m_totalItems = 3;
inline int E_XiuzhenroadBonuspoints::m_totalitems_size() const {
  return m_totalitems_.size();
}
inline void E_XiuzhenroadBonuspoints::clear_m_totalitems() {
  m_totalitems_.Clear();
}
inline const ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc& E_XiuzhenroadBonuspoints::m_totalitems(int index) const {
  return m_totalitems_.Get(index);
}
inline ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc* E_XiuzhenroadBonuspoints::mutable_m_totalitems(int index) {
  return m_totalitems_.Mutable(index);
}
inline ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc* E_XiuzhenroadBonuspoints::add_m_totalitems() {
  return m_totalitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc >&
E_XiuzhenroadBonuspoints::m_totalitems() const {
  return m_totalitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadBonuspointsTotalitemsDesc >*
E_XiuzhenroadBonuspoints::mutable_m_totalitems() {
  return &m_totalitems_;
}

// -------------------------------------------------------------------

// Sheet_XiuzhenroadBonuspoints

// repeated .proto_ff.E_XiuzhenroadBonuspoints E_XiuzhenroadBonuspoints_List = 1;
inline int Sheet_XiuzhenroadBonuspoints::e_xiuzhenroadbonuspoints_list_size() const {
  return e_xiuzhenroadbonuspoints_list_.size();
}
inline void Sheet_XiuzhenroadBonuspoints::clear_e_xiuzhenroadbonuspoints_list() {
  e_xiuzhenroadbonuspoints_list_.Clear();
}
inline const ::proto_ff::E_XiuzhenroadBonuspoints& Sheet_XiuzhenroadBonuspoints::e_xiuzhenroadbonuspoints_list(int index) const {
  return e_xiuzhenroadbonuspoints_list_.Get(index);
}
inline ::proto_ff::E_XiuzhenroadBonuspoints* Sheet_XiuzhenroadBonuspoints::mutable_e_xiuzhenroadbonuspoints_list(int index) {
  return e_xiuzhenroadbonuspoints_list_.Mutable(index);
}
inline ::proto_ff::E_XiuzhenroadBonuspoints* Sheet_XiuzhenroadBonuspoints::add_e_xiuzhenroadbonuspoints_list() {
  return e_xiuzhenroadbonuspoints_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadBonuspoints >&
Sheet_XiuzhenroadBonuspoints::e_xiuzhenroadbonuspoints_list() const {
  return e_xiuzhenroadbonuspoints_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadBonuspoints >*
Sheet_XiuzhenroadBonuspoints::mutable_e_xiuzhenroadbonuspoints_list() {
  return &e_xiuzhenroadbonuspoints_list_;
}

// -------------------------------------------------------------------

// E_XiuzhenroadSkill

// optional int32 m_activitySkills = 1;
inline bool E_XiuzhenroadSkill::has_m_activityskills() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XiuzhenroadSkill::set_has_m_activityskills() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XiuzhenroadSkill::clear_has_m_activityskills() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XiuzhenroadSkill::clear_m_activityskills() {
  m_activityskills_ = 0;
  clear_has_m_activityskills();
}
inline ::google::protobuf::int32 E_XiuzhenroadSkill::m_activityskills() const {
  return m_activityskills_;
}
inline void E_XiuzhenroadSkill::set_m_activityskills(::google::protobuf::int32 value) {
  set_has_m_activityskills();
  m_activityskills_ = value;
}

// optional int32 m_skillID = 2;
inline bool E_XiuzhenroadSkill::has_m_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XiuzhenroadSkill::set_has_m_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XiuzhenroadSkill::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XiuzhenroadSkill::clear_m_skillid() {
  m_skillid_ = 0;
  clear_has_m_skillid();
}
inline ::google::protobuf::int32 E_XiuzhenroadSkill::m_skillid() const {
  return m_skillid_;
}
inline void E_XiuzhenroadSkill::set_m_skillid(::google::protobuf::int32 value) {
  set_has_m_skillid();
  m_skillid_ = value;
}

// optional int32 m_itenmID = 3;
inline bool E_XiuzhenroadSkill::has_m_itenmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XiuzhenroadSkill::set_has_m_itenmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XiuzhenroadSkill::clear_has_m_itenmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XiuzhenroadSkill::clear_m_itenmid() {
  m_itenmid_ = 0;
  clear_has_m_itenmid();
}
inline ::google::protobuf::int32 E_XiuzhenroadSkill::m_itenmid() const {
  return m_itenmid_;
}
inline void E_XiuzhenroadSkill::set_m_itenmid(::google::protobuf::int32 value) {
  set_has_m_itenmid();
  m_itenmid_ = value;
}

// optional int32 m_attribute = 4;
inline bool E_XiuzhenroadSkill::has_m_attribute() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XiuzhenroadSkill::set_has_m_attribute() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XiuzhenroadSkill::clear_has_m_attribute() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XiuzhenroadSkill::clear_m_attribute() {
  m_attribute_ = 0;
  clear_has_m_attribute();
}
inline ::google::protobuf::int32 E_XiuzhenroadSkill::m_attribute() const {
  return m_attribute_;
}
inline void E_XiuzhenroadSkill::set_m_attribute(::google::protobuf::int32 value) {
  set_has_m_attribute();
  m_attribute_ = value;
}

// -------------------------------------------------------------------

// Sheet_XiuzhenroadSkill

// repeated .proto_ff.E_XiuzhenroadSkill E_XiuzhenroadSkill_List = 1;
inline int Sheet_XiuzhenroadSkill::e_xiuzhenroadskill_list_size() const {
  return e_xiuzhenroadskill_list_.size();
}
inline void Sheet_XiuzhenroadSkill::clear_e_xiuzhenroadskill_list() {
  e_xiuzhenroadskill_list_.Clear();
}
inline const ::proto_ff::E_XiuzhenroadSkill& Sheet_XiuzhenroadSkill::e_xiuzhenroadskill_list(int index) const {
  return e_xiuzhenroadskill_list_.Get(index);
}
inline ::proto_ff::E_XiuzhenroadSkill* Sheet_XiuzhenroadSkill::mutable_e_xiuzhenroadskill_list(int index) {
  return e_xiuzhenroadskill_list_.Mutable(index);
}
inline ::proto_ff::E_XiuzhenroadSkill* Sheet_XiuzhenroadSkill::add_e_xiuzhenroadskill_list() {
  return e_xiuzhenroadskill_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadSkill >&
Sheet_XiuzhenroadSkill::e_xiuzhenroadskill_list() const {
  return e_xiuzhenroadskill_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadSkill >*
Sheet_XiuzhenroadSkill::mutable_e_xiuzhenroadskill_list() {
  return &e_xiuzhenroadskill_list_;
}

// -------------------------------------------------------------------

// E_XiuzhenroadClassify

// optional int32 m_typeID = 1;
inline bool E_XiuzhenroadClassify::has_m_typeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XiuzhenroadClassify::set_has_m_typeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XiuzhenroadClassify::clear_has_m_typeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XiuzhenroadClassify::clear_m_typeid() {
  m_typeid_ = 0;
  clear_has_m_typeid();
}
inline ::google::protobuf::int32 E_XiuzhenroadClassify::m_typeid() const {
  return m_typeid_;
}
inline void E_XiuzhenroadClassify::set_m_typeid(::google::protobuf::int32 value) {
  set_has_m_typeid();
  m_typeid_ = value;
}

// optional string m_gift = 2;
inline bool E_XiuzhenroadClassify::has_m_gift() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XiuzhenroadClassify::set_has_m_gift() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XiuzhenroadClassify::clear_has_m_gift() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XiuzhenroadClassify::clear_m_gift() {
  if (m_gift_ != &::google::protobuf::internal::kEmptyString) {
    m_gift_->clear();
  }
  clear_has_m_gift();
}
inline const ::std::string& E_XiuzhenroadClassify::m_gift() const {
  return *m_gift_;
}
inline void E_XiuzhenroadClassify::set_m_gift(const ::std::string& value) {
  set_has_m_gift();
  if (m_gift_ == &::google::protobuf::internal::kEmptyString) {
    m_gift_ = new ::std::string;
  }
  m_gift_->assign(value);
}
inline void E_XiuzhenroadClassify::set_m_gift(const char* value) {
  set_has_m_gift();
  if (m_gift_ == &::google::protobuf::internal::kEmptyString) {
    m_gift_ = new ::std::string;
  }
  m_gift_->assign(value);
}
inline void E_XiuzhenroadClassify::set_m_gift(const char* value, size_t size) {
  set_has_m_gift();
  if (m_gift_ == &::google::protobuf::internal::kEmptyString) {
    m_gift_ = new ::std::string;
  }
  m_gift_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_XiuzhenroadClassify::mutable_m_gift() {
  set_has_m_gift();
  if (m_gift_ == &::google::protobuf::internal::kEmptyString) {
    m_gift_ = new ::std::string;
  }
  return m_gift_;
}
inline ::std::string* E_XiuzhenroadClassify::release_m_gift() {
  clear_has_m_gift();
  if (m_gift_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_gift_;
    m_gift_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_XiuzhenroadClassify::set_allocated_m_gift(::std::string* m_gift) {
  if (m_gift_ != &::google::protobuf::internal::kEmptyString) {
    delete m_gift_;
  }
  if (m_gift) {
    set_has_m_gift();
    m_gift_ = m_gift;
  } else {
    clear_has_m_gift();
    m_gift_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_giftID = 3;
inline bool E_XiuzhenroadClassify::has_m_giftid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XiuzhenroadClassify::set_has_m_giftid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XiuzhenroadClassify::clear_has_m_giftid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XiuzhenroadClassify::clear_m_giftid() {
  m_giftid_ = 0;
  clear_has_m_giftid();
}
inline ::google::protobuf::int32 E_XiuzhenroadClassify::m_giftid() const {
  return m_giftid_;
}
inline void E_XiuzhenroadClassify::set_m_giftid(::google::protobuf::int32 value) {
  set_has_m_giftid();
  m_giftid_ = value;
}

// optional int32 m_rechargeID = 4;
inline bool E_XiuzhenroadClassify::has_m_rechargeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XiuzhenroadClassify::set_has_m_rechargeid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XiuzhenroadClassify::clear_has_m_rechargeid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XiuzhenroadClassify::clear_m_rechargeid() {
  m_rechargeid_ = 0;
  clear_has_m_rechargeid();
}
inline ::google::protobuf::int32 E_XiuzhenroadClassify::m_rechargeid() const {
  return m_rechargeid_;
}
inline void E_XiuzhenroadClassify::set_m_rechargeid(::google::protobuf::int32 value) {
  set_has_m_rechargeid();
  m_rechargeid_ = value;
}

// -------------------------------------------------------------------

// Sheet_XiuzhenroadClassify

// repeated .proto_ff.E_XiuzhenroadClassify E_XiuzhenroadClassify_List = 1;
inline int Sheet_XiuzhenroadClassify::e_xiuzhenroadclassify_list_size() const {
  return e_xiuzhenroadclassify_list_.size();
}
inline void Sheet_XiuzhenroadClassify::clear_e_xiuzhenroadclassify_list() {
  e_xiuzhenroadclassify_list_.Clear();
}
inline const ::proto_ff::E_XiuzhenroadClassify& Sheet_XiuzhenroadClassify::e_xiuzhenroadclassify_list(int index) const {
  return e_xiuzhenroadclassify_list_.Get(index);
}
inline ::proto_ff::E_XiuzhenroadClassify* Sheet_XiuzhenroadClassify::mutable_e_xiuzhenroadclassify_list(int index) {
  return e_xiuzhenroadclassify_list_.Mutable(index);
}
inline ::proto_ff::E_XiuzhenroadClassify* Sheet_XiuzhenroadClassify::add_e_xiuzhenroadclassify_list() {
  return e_xiuzhenroadclassify_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadClassify >&
Sheet_XiuzhenroadClassify::e_xiuzhenroadclassify_list() const {
  return e_xiuzhenroadclassify_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XiuzhenroadClassify >*
Sheet_XiuzhenroadClassify::mutable_e_xiuzhenroadclassify_list() {
  return &e_xiuzhenroadclassify_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fXiuzhenroad_2eproto__INCLUDED
