// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: intimacy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "intimacy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* intimacyintimacyattributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  intimacyintimacyattributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* intimacyintimacy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  intimacyintimacy_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_intimacyintimacy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_intimacyintimacy_reflection_ = NULL;
const ::google::protobuf::Descriptor* intimacygift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  intimacygift_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_intimacygift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_intimacygift_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_intimacy_2eproto() {
  protobuf_AddDesc_intimacy_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "intimacy.proto");
  GOOGLE_CHECK(file != NULL);
  intimacyintimacyattributeDesc_descriptor_ = file->message_type(0);
  static const int intimacyintimacyattributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacyintimacyattributeDesc, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacyintimacyattributeDesc, value_),
  };
  intimacyintimacyattributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      intimacyintimacyattributeDesc_descriptor_,
      intimacyintimacyattributeDesc::default_instance_,
      intimacyintimacyattributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacyintimacyattributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacyintimacyattributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(intimacyintimacyattributeDesc));
  intimacyintimacy_descriptor_ = file->message_type(1);
  static const int intimacyintimacy_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacyintimacy, lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacyintimacy, intimacymin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacyintimacy, intimacymax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacyintimacy, attribute_),
  };
  intimacyintimacy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      intimacyintimacy_descriptor_,
      intimacyintimacy::default_instance_,
      intimacyintimacy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacyintimacy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacyintimacy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(intimacyintimacy));
  Sheet_intimacyintimacy_descriptor_ = file->message_type(2);
  static const int Sheet_intimacyintimacy_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_intimacyintimacy, intimacyintimacy_list_),
  };
  Sheet_intimacyintimacy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_intimacyintimacy_descriptor_,
      Sheet_intimacyintimacy::default_instance_,
      Sheet_intimacyintimacy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_intimacyintimacy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_intimacyintimacy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_intimacyintimacy));
  intimacygift_descriptor_ = file->message_type(3);
  static const int intimacygift_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacygift, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacygift, moneytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacygift, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacygift, intimacy_),
  };
  intimacygift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      intimacygift_descriptor_,
      intimacygift::default_instance_,
      intimacygift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacygift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intimacygift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(intimacygift));
  Sheet_intimacygift_descriptor_ = file->message_type(4);
  static const int Sheet_intimacygift_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_intimacygift, intimacygift_list_),
  };
  Sheet_intimacygift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_intimacygift_descriptor_,
      Sheet_intimacygift::default_instance_,
      Sheet_intimacygift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_intimacygift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_intimacygift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_intimacygift));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_intimacy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    intimacyintimacyattributeDesc_descriptor_, &intimacyintimacyattributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    intimacyintimacy_descriptor_, &intimacyintimacy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_intimacyintimacy_descriptor_, &Sheet_intimacyintimacy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    intimacygift_descriptor_, &intimacygift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_intimacygift_descriptor_, &Sheet_intimacygift::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_intimacy_2eproto() {
  delete intimacyintimacyattributeDesc::default_instance_;
  delete intimacyintimacyattributeDesc_reflection_;
  delete intimacyintimacy::default_instance_;
  delete intimacyintimacy_reflection_;
  delete Sheet_intimacyintimacy::default_instance_;
  delete Sheet_intimacyintimacy_reflection_;
  delete intimacygift::default_instance_;
  delete intimacygift_reflection_;
  delete Sheet_intimacygift::default_instance_;
  delete Sheet_intimacygift_reflection_;
}

void protobuf_AddDesc_intimacy_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016intimacy.proto\022\010proto_ff\032\025yd_fieldopti"
    "ons.proto\"M\n\035intimacyintimacyattributeDe"
    "sc\022\024\n\004type\030\001 \001(\005B\006\302\377\024\002ID\022\026\n\005value\030\002 \001(\005B"
    "\007\302\377\024\003\345\200\274\"\320\001\n\020intimacyintimacy\022\026\n\002lv\030\001 \001("
    "\005B\n\302\377\024\006\347\255\211\347\272\247\022(\n\013intimacyMin\030\002 \001(\005B\023\302\377\024\017"
    "\344\272\262\345\257\206\345\272\246\350\246\201\346\261\202\022(\n\013intimacyMax\030\003 \001(\005B\023\302\377"
    "\024\017\344\272\262\345\257\206\345\272\246\350\246\201\346\261\202\022P\n\tattribute\030\004 \003(\0132\'.p"
    "roto_ff.intimacyintimacyattributeDescB\024\302"
    "\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\003\"Y\n\026Sheet_intimacyint"
    "imacy\022\?\n\025intimacyintimacy_List\030\001 \003(\0132\032.p"
    "roto_ff.intimacyintimacyB\004\210\301\024\024\"\211\001\n\014intim"
    "acygift\022\030\n\002id\030\001 \001(\003B\014\302\377\024\010\347\211\251\345\223\201id\022#\n\tmon"
    "eyType\030\002 \001(\005B\020\302\377\024\014\350\264\247\345\270\201\347\261\273\345\236\213\022\031\n\005price\030"
    "\003 \001(\005B\n\302\377\024\006\344\273\267\346\240\274\022\037\n\010intimacy\030\004 \001(\005B\r\302\377\024"
    "\t\344\272\262\345\257\206\345\272\246\"M\n\022Sheet_intimacygift\0227\n\021inti"
    "macygift_List\030\001 \003(\0132\026.proto_ff.intimacyg"
    "iftB\004\210\301\024\024", 649);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "intimacy.proto", &protobuf_RegisterTypes);
  intimacyintimacyattributeDesc::default_instance_ = new intimacyintimacyattributeDesc();
  intimacyintimacy::default_instance_ = new intimacyintimacy();
  Sheet_intimacyintimacy::default_instance_ = new Sheet_intimacyintimacy();
  intimacygift::default_instance_ = new intimacygift();
  Sheet_intimacygift::default_instance_ = new Sheet_intimacygift();
  intimacyintimacyattributeDesc::default_instance_->InitAsDefaultInstance();
  intimacyintimacy::default_instance_->InitAsDefaultInstance();
  Sheet_intimacyintimacy::default_instance_->InitAsDefaultInstance();
  intimacygift::default_instance_->InitAsDefaultInstance();
  Sheet_intimacygift::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_intimacy_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_intimacy_2eproto {
  StaticDescriptorInitializer_intimacy_2eproto() {
    protobuf_AddDesc_intimacy_2eproto();
  }
} static_descriptor_initializer_intimacy_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int intimacyintimacyattributeDesc::kTypeFieldNumber;
const int intimacyintimacyattributeDesc::kValueFieldNumber;
#endif  // !_MSC_VER

intimacyintimacyattributeDesc::intimacyintimacyattributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void intimacyintimacyattributeDesc::InitAsDefaultInstance() {
}

intimacyintimacyattributeDesc::intimacyintimacyattributeDesc(const intimacyintimacyattributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void intimacyintimacyattributeDesc::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

intimacyintimacyattributeDesc::~intimacyintimacyattributeDesc() {
  SharedDtor();
}

void intimacyintimacyattributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void intimacyintimacyattributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* intimacyintimacyattributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return intimacyintimacyattributeDesc_descriptor_;
}

const intimacyintimacyattributeDesc& intimacyintimacyattributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_intimacy_2eproto();
  return *default_instance_;
}

intimacyintimacyattributeDesc* intimacyintimacyattributeDesc::default_instance_ = NULL;

intimacyintimacyattributeDesc* intimacyintimacyattributeDesc::New() const {
  return new intimacyintimacyattributeDesc;
}

void intimacyintimacyattributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool intimacyintimacyattributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional int32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void intimacyintimacyattributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* intimacyintimacyattributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int intimacyintimacyattributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void intimacyintimacyattributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const intimacyintimacyattributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const intimacyintimacyattributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void intimacyintimacyattributeDesc::MergeFrom(const intimacyintimacyattributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void intimacyintimacyattributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void intimacyintimacyattributeDesc::CopyFrom(const intimacyintimacyattributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool intimacyintimacyattributeDesc::IsInitialized() const {

  return true;
}

void intimacyintimacyattributeDesc::Swap(intimacyintimacyattributeDesc* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata intimacyintimacyattributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = intimacyintimacyattributeDesc_descriptor_;
  metadata.reflection = intimacyintimacyattributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int intimacyintimacy::kLvFieldNumber;
const int intimacyintimacy::kIntimacyMinFieldNumber;
const int intimacyintimacy::kIntimacyMaxFieldNumber;
const int intimacyintimacy::kAttributeFieldNumber;
#endif  // !_MSC_VER

intimacyintimacy::intimacyintimacy()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void intimacyintimacy::InitAsDefaultInstance() {
}

intimacyintimacy::intimacyintimacy(const intimacyintimacy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void intimacyintimacy::SharedCtor() {
  _cached_size_ = 0;
  lv_ = 0;
  intimacymin_ = 0;
  intimacymax_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

intimacyintimacy::~intimacyintimacy() {
  SharedDtor();
}

void intimacyintimacy::SharedDtor() {
  if (this != default_instance_) {
  }
}

void intimacyintimacy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* intimacyintimacy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return intimacyintimacy_descriptor_;
}

const intimacyintimacy& intimacyintimacy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_intimacy_2eproto();
  return *default_instance_;
}

intimacyintimacy* intimacyintimacy::default_instance_ = NULL;

intimacyintimacy* intimacyintimacy::New() const {
  return new intimacyintimacy;
}

void intimacyintimacy::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lv_ = 0;
    intimacymin_ = 0;
    intimacymax_ = 0;
  }
  attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool intimacyintimacy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lv_)));
          set_has_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_intimacyMin;
        break;
      }

      // optional int32 intimacyMin = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_intimacyMin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intimacymin_)));
          set_has_intimacymin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_intimacyMax;
        break;
      }

      // optional int32 intimacyMax = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_intimacyMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intimacymax_)));
          set_has_intimacymax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_attribute;
        break;
      }

      // repeated .proto_ff.intimacyintimacyattributeDesc attribute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void intimacyintimacy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 lv = 1;
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lv(), output);
  }

  // optional int32 intimacyMin = 2;
  if (has_intimacymin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->intimacymin(), output);
  }

  // optional int32 intimacyMax = 3;
  if (has_intimacymax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->intimacymax(), output);
  }

  // repeated .proto_ff.intimacyintimacyattributeDesc attribute = 4;
  for (int i = 0; i < this->attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* intimacyintimacy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 lv = 1;
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lv(), target);
  }

  // optional int32 intimacyMin = 2;
  if (has_intimacymin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->intimacymin(), target);
  }

  // optional int32 intimacyMax = 3;
  if (has_intimacymax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->intimacymax(), target);
  }

  // repeated .proto_ff.intimacyintimacyattributeDesc attribute = 4;
  for (int i = 0; i < this->attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int intimacyintimacy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 lv = 1;
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lv());
    }

    // optional int32 intimacyMin = 2;
    if (has_intimacymin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intimacymin());
    }

    // optional int32 intimacyMax = 3;
    if (has_intimacymax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intimacymax());
    }

  }
  // repeated .proto_ff.intimacyintimacyattributeDesc attribute = 4;
  total_size += 1 * this->attribute_size();
  for (int i = 0; i < this->attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void intimacyintimacy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const intimacyintimacy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const intimacyintimacy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void intimacyintimacy::MergeFrom(const intimacyintimacy& from) {
  GOOGLE_CHECK_NE(&from, this);
  attribute_.MergeFrom(from.attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lv()) {
      set_lv(from.lv());
    }
    if (from.has_intimacymin()) {
      set_intimacymin(from.intimacymin());
    }
    if (from.has_intimacymax()) {
      set_intimacymax(from.intimacymax());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void intimacyintimacy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void intimacyintimacy::CopyFrom(const intimacyintimacy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool intimacyintimacy::IsInitialized() const {

  return true;
}

void intimacyintimacy::Swap(intimacyintimacy* other) {
  if (other != this) {
    std::swap(lv_, other->lv_);
    std::swap(intimacymin_, other->intimacymin_);
    std::swap(intimacymax_, other->intimacymax_);
    attribute_.Swap(&other->attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata intimacyintimacy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = intimacyintimacy_descriptor_;
  metadata.reflection = intimacyintimacy_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_intimacyintimacy::kIntimacyintimacyListFieldNumber;
#endif  // !_MSC_VER

Sheet_intimacyintimacy::Sheet_intimacyintimacy()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_intimacyintimacy::InitAsDefaultInstance() {
}

Sheet_intimacyintimacy::Sheet_intimacyintimacy(const Sheet_intimacyintimacy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_intimacyintimacy::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_intimacyintimacy::~Sheet_intimacyintimacy() {
  SharedDtor();
}

void Sheet_intimacyintimacy::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_intimacyintimacy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_intimacyintimacy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_intimacyintimacy_descriptor_;
}

const Sheet_intimacyintimacy& Sheet_intimacyintimacy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_intimacy_2eproto();
  return *default_instance_;
}

Sheet_intimacyintimacy* Sheet_intimacyintimacy::default_instance_ = NULL;

Sheet_intimacyintimacy* Sheet_intimacyintimacy::New() const {
  return new Sheet_intimacyintimacy;
}

void Sheet_intimacyintimacy::Clear() {
  intimacyintimacy_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_intimacyintimacy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.intimacyintimacy intimacyintimacy_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_intimacyintimacy_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_intimacyintimacy_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_intimacyintimacy_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_intimacyintimacy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.intimacyintimacy intimacyintimacy_List = 1;
  for (int i = 0; i < this->intimacyintimacy_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intimacyintimacy_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_intimacyintimacy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.intimacyintimacy intimacyintimacy_List = 1;
  for (int i = 0; i < this->intimacyintimacy_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intimacyintimacy_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_intimacyintimacy::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.intimacyintimacy intimacyintimacy_List = 1;
  total_size += 1 * this->intimacyintimacy_list_size();
  for (int i = 0; i < this->intimacyintimacy_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->intimacyintimacy_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_intimacyintimacy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_intimacyintimacy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_intimacyintimacy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_intimacyintimacy::MergeFrom(const Sheet_intimacyintimacy& from) {
  GOOGLE_CHECK_NE(&from, this);
  intimacyintimacy_list_.MergeFrom(from.intimacyintimacy_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_intimacyintimacy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_intimacyintimacy::CopyFrom(const Sheet_intimacyintimacy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_intimacyintimacy::IsInitialized() const {

  return true;
}

void Sheet_intimacyintimacy::Swap(Sheet_intimacyintimacy* other) {
  if (other != this) {
    intimacyintimacy_list_.Swap(&other->intimacyintimacy_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_intimacyintimacy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_intimacyintimacy_descriptor_;
  metadata.reflection = Sheet_intimacyintimacy_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int intimacygift::kIdFieldNumber;
const int intimacygift::kMoneyTypeFieldNumber;
const int intimacygift::kPriceFieldNumber;
const int intimacygift::kIntimacyFieldNumber;
#endif  // !_MSC_VER

intimacygift::intimacygift()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void intimacygift::InitAsDefaultInstance() {
}

intimacygift::intimacygift(const intimacygift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void intimacygift::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  moneytype_ = 0;
  price_ = 0;
  intimacy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

intimacygift::~intimacygift() {
  SharedDtor();
}

void intimacygift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void intimacygift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* intimacygift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return intimacygift_descriptor_;
}

const intimacygift& intimacygift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_intimacy_2eproto();
  return *default_instance_;
}

intimacygift* intimacygift::default_instance_ = NULL;

intimacygift* intimacygift::New() const {
  return new intimacygift;
}

void intimacygift::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    moneytype_ = 0;
    price_ = 0;
    intimacy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool intimacygift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_moneyType;
        break;
      }

      // optional int32 moneyType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_moneyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &moneytype_)));
          set_has_moneytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_price;
        break;
      }

      // optional int32 price = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_intimacy;
        break;
      }

      // optional int32 intimacy = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_intimacy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intimacy_)));
          set_has_intimacy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void intimacygift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional int32 moneyType = 2;
  if (has_moneytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->moneytype(), output);
  }

  // optional int32 price = 3;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->price(), output);
  }

  // optional int32 intimacy = 4;
  if (has_intimacy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->intimacy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* intimacygift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional int32 moneyType = 2;
  if (has_moneytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->moneytype(), target);
  }

  // optional int32 price = 3;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->price(), target);
  }

  // optional int32 intimacy = 4;
  if (has_intimacy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->intimacy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int intimacygift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional int32 moneyType = 2;
    if (has_moneytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->moneytype());
    }

    // optional int32 price = 3;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional int32 intimacy = 4;
    if (has_intimacy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intimacy());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void intimacygift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const intimacygift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const intimacygift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void intimacygift::MergeFrom(const intimacygift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_moneytype()) {
      set_moneytype(from.moneytype());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_intimacy()) {
      set_intimacy(from.intimacy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void intimacygift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void intimacygift::CopyFrom(const intimacygift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool intimacygift::IsInitialized() const {

  return true;
}

void intimacygift::Swap(intimacygift* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(moneytype_, other->moneytype_);
    std::swap(price_, other->price_);
    std::swap(intimacy_, other->intimacy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata intimacygift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = intimacygift_descriptor_;
  metadata.reflection = intimacygift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_intimacygift::kIntimacygiftListFieldNumber;
#endif  // !_MSC_VER

Sheet_intimacygift::Sheet_intimacygift()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_intimacygift::InitAsDefaultInstance() {
}

Sheet_intimacygift::Sheet_intimacygift(const Sheet_intimacygift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_intimacygift::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_intimacygift::~Sheet_intimacygift() {
  SharedDtor();
}

void Sheet_intimacygift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_intimacygift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_intimacygift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_intimacygift_descriptor_;
}

const Sheet_intimacygift& Sheet_intimacygift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_intimacy_2eproto();
  return *default_instance_;
}

Sheet_intimacygift* Sheet_intimacygift::default_instance_ = NULL;

Sheet_intimacygift* Sheet_intimacygift::New() const {
  return new Sheet_intimacygift;
}

void Sheet_intimacygift::Clear() {
  intimacygift_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_intimacygift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.intimacygift intimacygift_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_intimacygift_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_intimacygift_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_intimacygift_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_intimacygift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.intimacygift intimacygift_List = 1;
  for (int i = 0; i < this->intimacygift_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intimacygift_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_intimacygift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.intimacygift intimacygift_List = 1;
  for (int i = 0; i < this->intimacygift_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intimacygift_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_intimacygift::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.intimacygift intimacygift_List = 1;
  total_size += 1 * this->intimacygift_list_size();
  for (int i = 0; i < this->intimacygift_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->intimacygift_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_intimacygift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_intimacygift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_intimacygift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_intimacygift::MergeFrom(const Sheet_intimacygift& from) {
  GOOGLE_CHECK_NE(&from, this);
  intimacygift_list_.MergeFrom(from.intimacygift_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_intimacygift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_intimacygift::CopyFrom(const Sheet_intimacygift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_intimacygift::IsInitialized() const {

  return true;
}

void Sheet_intimacygift::Swap(Sheet_intimacygift* other) {
  if (other != this) {
    intimacygift_list_.Swap(&other->intimacygift_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_intimacygift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_intimacygift_descriptor_;
  metadata.reflection = Sheet_intimacygift_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
